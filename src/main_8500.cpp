// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_MeshInfo
#include "TMPro/TMP_MeshInfo.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: TMPro.VertexSortingOrder
#include "TMPro/VertexSortingOrder.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Color32 s_DefaultColor
UnityEngine::Color32 TMPro::TMP_MeshInfo::_get_s_DefaultColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::_get_s_DefaultColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Color32>("TMPro", "TMP_MeshInfo", "s_DefaultColor"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Color32 s_DefaultColor
void TMPro::TMP_MeshInfo::_set_s_DefaultColor(UnityEngine::Color32 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::_set_s_DefaultColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_MeshInfo", "s_DefaultColor", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector3 s_DefaultNormal
UnityEngine::Vector3 TMPro::TMP_MeshInfo::_get_s_DefaultNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::_get_s_DefaultNormal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector3>("TMPro", "TMP_MeshInfo", "s_DefaultNormal"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector3 s_DefaultNormal
void TMPro::TMP_MeshInfo::_set_s_DefaultNormal(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::_set_s_DefaultNormal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_MeshInfo", "s_DefaultNormal", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Vector4 s_DefaultTangent
UnityEngine::Vector4 TMPro::TMP_MeshInfo::_get_s_DefaultTangent() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::_get_s_DefaultTangent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector4>("TMPro", "TMP_MeshInfo", "s_DefaultTangent"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Vector4 s_DefaultTangent
void TMPro::TMP_MeshInfo::_set_s_DefaultTangent(UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::_set_s_DefaultTangent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_MeshInfo", "s_DefaultTangent", value));
}
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Bounds s_DefaultBounds
UnityEngine::Bounds TMPro::TMP_MeshInfo::_get_s_DefaultBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::_get_s_DefaultBounds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Bounds>("TMPro", "TMP_MeshInfo", "s_DefaultBounds"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Bounds s_DefaultBounds
void TMPro::TMP_MeshInfo::_set_s_DefaultBounds(UnityEngine::Bounds value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::_set_s_DefaultBounds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_MeshInfo", "s_DefaultBounds", value));
}
// Autogenerated method: TMPro.TMP_MeshInfo.ResizeMeshInfo
void TMPro::TMP_MeshInfo::ResizeMeshInfo(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::ResizeMeshInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ResizeMeshInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, size);
}
// Autogenerated method: TMPro.TMP_MeshInfo.ResizeMeshInfo
void TMPro::TMP_MeshInfo::ResizeMeshInfo(int size, bool isVolumetric) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::ResizeMeshInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ResizeMeshInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(isVolumetric)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, size, isVolumetric);
}
// Autogenerated method: TMPro.TMP_MeshInfo.Clear
void TMPro::TMP_MeshInfo::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_MeshInfo.Clear
void TMPro::TMP_MeshInfo::Clear(bool uploadChanges) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uploadChanges)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, uploadChanges);
}
// Autogenerated method: TMPro.TMP_MeshInfo.ClearUnusedVertices
void TMPro::TMP_MeshInfo::ClearUnusedVertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::ClearUnusedVertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ClearUnusedVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_MeshInfo.ClearUnusedVertices
void TMPro::TMP_MeshInfo::ClearUnusedVertices(int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::ClearUnusedVertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ClearUnusedVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, startIndex);
}
// Autogenerated method: TMPro.TMP_MeshInfo.ClearUnusedVertices
void TMPro::TMP_MeshInfo::ClearUnusedVertices(int startIndex, bool updateMesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::ClearUnusedVertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ClearUnusedVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(updateMesh)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, startIndex, updateMesh);
}
// Autogenerated method: TMPro.TMP_MeshInfo.SortGeometry
void TMPro::TMP_MeshInfo::SortGeometry(TMPro::VertexSortingOrder order) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::SortGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SortGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(order)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, order);
}
// Autogenerated method: TMPro.TMP_MeshInfo.SortGeometry
void TMPro::TMP_MeshInfo::SortGeometry(System::Collections::Generic::IList_1<int>* sortingOrder) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::SortGeometry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SortGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sortingOrder)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, sortingOrder);
}
// Autogenerated method: TMPro.TMP_MeshInfo.SwapVertexData
void TMPro::TMP_MeshInfo::SwapVertexData(int src, int dst) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::SwapVertexData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SwapVertexData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dst)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, src, dst);
}
// Autogenerated method: TMPro.TMP_MeshInfo..cctor
void TMPro::TMP_MeshInfo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_MeshInfo::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_MeshInfo", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_FontStyleStack
#include "TMPro/TMP_FontStyleStack.hpp"
// Including type: TMPro.FontStyles
#include "TMPro/FontStyles.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.TMP_FontStyleStack.Clear
void TMPro::TMP_FontStyleStack::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontStyleStack::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_FontStyleStack.Add
uint8_t TMPro::TMP_FontStyleStack::Add(TMPro::FontStyles style) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontStyleStack::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(style)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(*this, ___internal__method, style);
}
// Autogenerated method: TMPro.TMP_FontStyleStack.Remove
uint8_t TMPro::TMP_FontStyleStack::Remove(TMPro::FontStyles style) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_FontStyleStack::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(style)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(*this, ___internal__method, style);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.RichTextTag
#include "TMPro/RichTextTag.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag BOLD
TMPro::RichTextTag TMPro::RichTextTag::_get_BOLD() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_BOLD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "BOLD"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag BOLD
void TMPro::RichTextTag::_set_BOLD(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_BOLD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "BOLD", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag SLASH_BOLD
TMPro::RichTextTag TMPro::RichTextTag::_get_SLASH_BOLD() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_SLASH_BOLD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "SLASH_BOLD"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag SLASH_BOLD
void TMPro::RichTextTag::_set_SLASH_BOLD(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_SLASH_BOLD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "SLASH_BOLD", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag ITALIC
TMPro::RichTextTag TMPro::RichTextTag::_get_ITALIC() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_ITALIC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "ITALIC"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag ITALIC
void TMPro::RichTextTag::_set_ITALIC(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_ITALIC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "ITALIC", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag SLASH_ITALIC
TMPro::RichTextTag TMPro::RichTextTag::_get_SLASH_ITALIC() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_SLASH_ITALIC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "SLASH_ITALIC"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag SLASH_ITALIC
void TMPro::RichTextTag::_set_SLASH_ITALIC(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_SLASH_ITALIC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "SLASH_ITALIC", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag UNDERLINE
TMPro::RichTextTag TMPro::RichTextTag::_get_UNDERLINE() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_UNDERLINE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "UNDERLINE"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag UNDERLINE
void TMPro::RichTextTag::_set_UNDERLINE(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_UNDERLINE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "UNDERLINE", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag SLASH_UNDERLINE
TMPro::RichTextTag TMPro::RichTextTag::_get_SLASH_UNDERLINE() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_SLASH_UNDERLINE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "SLASH_UNDERLINE"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag SLASH_UNDERLINE
void TMPro::RichTextTag::_set_SLASH_UNDERLINE(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_SLASH_UNDERLINE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "SLASH_UNDERLINE", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag STRIKETHROUGH
TMPro::RichTextTag TMPro::RichTextTag::_get_STRIKETHROUGH() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_STRIKETHROUGH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "STRIKETHROUGH"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag STRIKETHROUGH
void TMPro::RichTextTag::_set_STRIKETHROUGH(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_STRIKETHROUGH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "STRIKETHROUGH", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag SLASH_STRIKETHROUGH
TMPro::RichTextTag TMPro::RichTextTag::_get_SLASH_STRIKETHROUGH() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_SLASH_STRIKETHROUGH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "SLASH_STRIKETHROUGH"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag SLASH_STRIKETHROUGH
void TMPro::RichTextTag::_set_SLASH_STRIKETHROUGH(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_SLASH_STRIKETHROUGH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "SLASH_STRIKETHROUGH", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag COLOR
TMPro::RichTextTag TMPro::RichTextTag::_get_COLOR() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_COLOR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "COLOR"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag COLOR
void TMPro::RichTextTag::_set_COLOR(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_COLOR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "COLOR", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag SLASH_COLOR
TMPro::RichTextTag TMPro::RichTextTag::_get_SLASH_COLOR() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_SLASH_COLOR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "SLASH_COLOR"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag SLASH_COLOR
void TMPro::RichTextTag::_set_SLASH_COLOR(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_SLASH_COLOR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "SLASH_COLOR", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag SIZE
TMPro::RichTextTag TMPro::RichTextTag::_get_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "SIZE"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag SIZE
void TMPro::RichTextTag::_set_SIZE(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "SIZE", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag SLASH_SIZE
TMPro::RichTextTag TMPro::RichTextTag::_get_SLASH_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_SLASH_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "SLASH_SIZE"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag SLASH_SIZE
void TMPro::RichTextTag::_set_SLASH_SIZE(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_SLASH_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "SLASH_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag SPRITE
TMPro::RichTextTag TMPro::RichTextTag::_get_SPRITE() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_SPRITE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "SPRITE"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag SPRITE
void TMPro::RichTextTag::_set_SPRITE(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_SPRITE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "SPRITE", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag BR
TMPro::RichTextTag TMPro::RichTextTag::_get_BR() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_BR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "BR"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag BR
void TMPro::RichTextTag::_set_BR(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_BR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "BR", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag STYLE
TMPro::RichTextTag TMPro::RichTextTag::_get_STYLE() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_STYLE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "STYLE"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag STYLE
void TMPro::RichTextTag::_set_STYLE(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_STYLE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "STYLE", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag SLASH_STYLE
TMPro::RichTextTag TMPro::RichTextTag::_get_SLASH_STYLE() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_SLASH_STYLE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "SLASH_STYLE"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag SLASH_STYLE
void TMPro::RichTextTag::_set_SLASH_STYLE(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_SLASH_STYLE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "SLASH_STYLE", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag FONT
TMPro::RichTextTag TMPro::RichTextTag::_get_FONT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_FONT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "FONT"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag FONT
void TMPro::RichTextTag::_set_FONT(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_FONT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "FONT", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag SLASH_FONT
TMPro::RichTextTag TMPro::RichTextTag::_get_SLASH_FONT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_SLASH_FONT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "SLASH_FONT"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag SLASH_FONT
void TMPro::RichTextTag::_set_SLASH_FONT(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_SLASH_FONT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "SLASH_FONT", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag LINK
TMPro::RichTextTag TMPro::RichTextTag::_get_LINK() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_LINK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "LINK"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag LINK
void TMPro::RichTextTag::_set_LINK(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_LINK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "LINK", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag SLASH_LINK
TMPro::RichTextTag TMPro::RichTextTag::_get_SLASH_LINK() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_SLASH_LINK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "SLASH_LINK"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag SLASH_LINK
void TMPro::RichTextTag::_set_SLASH_LINK(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_SLASH_LINK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "SLASH_LINK", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag FONT_WEIGHT
TMPro::RichTextTag TMPro::RichTextTag::_get_FONT_WEIGHT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_FONT_WEIGHT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "FONT_WEIGHT"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag FONT_WEIGHT
void TMPro::RichTextTag::_set_FONT_WEIGHT(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_FONT_WEIGHT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "FONT_WEIGHT", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag SLASH_FONT_WEIGHT
TMPro::RichTextTag TMPro::RichTextTag::_get_SLASH_FONT_WEIGHT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_SLASH_FONT_WEIGHT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "SLASH_FONT_WEIGHT"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag SLASH_FONT_WEIGHT
void TMPro::RichTextTag::_set_SLASH_FONT_WEIGHT(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_SLASH_FONT_WEIGHT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "SLASH_FONT_WEIGHT", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag LIGA
TMPro::RichTextTag TMPro::RichTextTag::_get_LIGA() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_LIGA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "LIGA"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag LIGA
void TMPro::RichTextTag::_set_LIGA(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_LIGA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "LIGA", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag SLASH_LIGA
TMPro::RichTextTag TMPro::RichTextTag::_get_SLASH_LIGA() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_SLASH_LIGA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "SLASH_LIGA"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag SLASH_LIGA
void TMPro::RichTextTag::_set_SLASH_LIGA(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_SLASH_LIGA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "SLASH_LIGA", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag FRAC
TMPro::RichTextTag TMPro::RichTextTag::_get_FRAC() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_FRAC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "FRAC"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag FRAC
void TMPro::RichTextTag::_set_FRAC(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_FRAC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "FRAC", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag SLASH_FRAC
TMPro::RichTextTag TMPro::RichTextTag::_get_SLASH_FRAC() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_SLASH_FRAC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "SLASH_FRAC"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag SLASH_FRAC
void TMPro::RichTextTag::_set_SLASH_FRAC(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_SLASH_FRAC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "SLASH_FRAC", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag NAME
TMPro::RichTextTag TMPro::RichTextTag::_get_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "NAME"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag NAME
void TMPro::RichTextTag::_set_NAME(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "NAME", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag INDEX
TMPro::RichTextTag TMPro::RichTextTag::_get_INDEX() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_INDEX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "INDEX"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag INDEX
void TMPro::RichTextTag::_set_INDEX(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_INDEX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "INDEX", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag TINT
TMPro::RichTextTag TMPro::RichTextTag::_get_TINT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_TINT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "TINT"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag TINT
void TMPro::RichTextTag::_set_TINT(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_TINT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "TINT", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag ANIM
TMPro::RichTextTag TMPro::RichTextTag::_get_ANIM() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_ANIM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "ANIM"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag ANIM
void TMPro::RichTextTag::_set_ANIM(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_ANIM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "ANIM", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag MATERIAL
TMPro::RichTextTag TMPro::RichTextTag::_get_MATERIAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_MATERIAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "MATERIAL"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag MATERIAL
void TMPro::RichTextTag::_set_MATERIAL(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_MATERIAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "MATERIAL", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag RED
TMPro::RichTextTag TMPro::RichTextTag::_get_RED() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_RED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "RED"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag RED
void TMPro::RichTextTag::_set_RED(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_RED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "RED", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag GREEN
TMPro::RichTextTag TMPro::RichTextTag::_get_GREEN() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_GREEN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "GREEN"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag GREEN
void TMPro::RichTextTag::_set_GREEN(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_GREEN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "GREEN", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag BLUE
TMPro::RichTextTag TMPro::RichTextTag::_get_BLUE() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_BLUE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "BLUE"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag BLUE
void TMPro::RichTextTag::_set_BLUE(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_BLUE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "BLUE", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag YELLOW
TMPro::RichTextTag TMPro::RichTextTag::_get_YELLOW() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_YELLOW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "YELLOW"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag YELLOW
void TMPro::RichTextTag::_set_YELLOW(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_YELLOW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "YELLOW", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag ORANGE
TMPro::RichTextTag TMPro::RichTextTag::_get_ORANGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_ORANGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "ORANGE"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag ORANGE
void TMPro::RichTextTag::_set_ORANGE(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_ORANGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "ORANGE", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag PLUS
TMPro::RichTextTag TMPro::RichTextTag::_get_PLUS() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_PLUS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "PLUS"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag PLUS
void TMPro::RichTextTag::_set_PLUS(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_PLUS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "PLUS", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag MINUS
TMPro::RichTextTag TMPro::RichTextTag::_get_MINUS() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_MINUS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "MINUS"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag MINUS
void TMPro::RichTextTag::_set_MINUS(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_MINUS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "MINUS", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag PX
TMPro::RichTextTag TMPro::RichTextTag::_get_PX() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_PX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "PX"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag PX
void TMPro::RichTextTag::_set_PX(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_PX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "PX", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag PLUS_PX
TMPro::RichTextTag TMPro::RichTextTag::_get_PLUS_PX() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_PLUS_PX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "PLUS_PX"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag PLUS_PX
void TMPro::RichTextTag::_set_PLUS_PX(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_PLUS_PX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "PLUS_PX", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag MINUS_PX
TMPro::RichTextTag TMPro::RichTextTag::_get_MINUS_PX() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_MINUS_PX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "MINUS_PX"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag MINUS_PX
void TMPro::RichTextTag::_set_MINUS_PX(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_MINUS_PX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "MINUS_PX", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag EM
TMPro::RichTextTag TMPro::RichTextTag::_get_EM() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_EM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "EM"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag EM
void TMPro::RichTextTag::_set_EM(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_EM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "EM", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag PLUS_EM
TMPro::RichTextTag TMPro::RichTextTag::_get_PLUS_EM() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_PLUS_EM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "PLUS_EM"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag PLUS_EM
void TMPro::RichTextTag::_set_PLUS_EM(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_PLUS_EM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "PLUS_EM", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag MINUS_EM
TMPro::RichTextTag TMPro::RichTextTag::_get_MINUS_EM() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_MINUS_EM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "MINUS_EM"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag MINUS_EM
void TMPro::RichTextTag::_set_MINUS_EM(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_MINUS_EM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "MINUS_EM", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag PCT
TMPro::RichTextTag TMPro::RichTextTag::_get_PCT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_PCT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "PCT"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag PCT
void TMPro::RichTextTag::_set_PCT(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_PCT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "PCT", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag PLUS_PCT
TMPro::RichTextTag TMPro::RichTextTag::_get_PLUS_PCT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_PLUS_PCT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "PLUS_PCT"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag PLUS_PCT
void TMPro::RichTextTag::_set_PLUS_PCT(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_PLUS_PCT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "PLUS_PCT", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag MINUS_PCT
TMPro::RichTextTag TMPro::RichTextTag::_get_MINUS_PCT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_MINUS_PCT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "MINUS_PCT"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag MINUS_PCT
void TMPro::RichTextTag::_set_MINUS_PCT(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_MINUS_PCT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "MINUS_PCT", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag PERCENTAGE
TMPro::RichTextTag TMPro::RichTextTag::_get_PERCENTAGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_PERCENTAGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "PERCENTAGE"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag PERCENTAGE
void TMPro::RichTextTag::_set_PERCENTAGE(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_PERCENTAGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "PERCENTAGE", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag PLUS_PERCENTAGE
TMPro::RichTextTag TMPro::RichTextTag::_get_PLUS_PERCENTAGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_PLUS_PERCENTAGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "PLUS_PERCENTAGE"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag PLUS_PERCENTAGE
void TMPro::RichTextTag::_set_PLUS_PERCENTAGE(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_PLUS_PERCENTAGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "PLUS_PERCENTAGE", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag MINUS_PERCENTAGE
TMPro::RichTextTag TMPro::RichTextTag::_get_MINUS_PERCENTAGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_MINUS_PERCENTAGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "MINUS_PERCENTAGE"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag MINUS_PERCENTAGE
void TMPro::RichTextTag::_set_MINUS_PERCENTAGE(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_MINUS_PERCENTAGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "MINUS_PERCENTAGE", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag TRUE
TMPro::RichTextTag TMPro::RichTextTag::_get_TRUE() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_TRUE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "TRUE"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag TRUE
void TMPro::RichTextTag::_set_TRUE(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_TRUE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "TRUE", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag FALSE
TMPro::RichTextTag TMPro::RichTextTag::_get_FALSE() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_FALSE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "FALSE"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag FALSE
void TMPro::RichTextTag::_set_FALSE(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_FALSE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "FALSE", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.RichTextTag DEFAULT
TMPro::RichTextTag TMPro::RichTextTag::_get_DEFAULT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_get_DEFAULT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::RichTextTag>("TMPro", "RichTextTag", "DEFAULT"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.RichTextTag DEFAULT
void TMPro::RichTextTag::_set_DEFAULT(TMPro::RichTextTag value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::RichTextTag::_set_DEFAULT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "RichTextTag", "DEFAULT", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TagValueType
#include "TMPro/TagValueType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TagValueType None
TMPro::TagValueType TMPro::TagValueType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TagValueType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TagValueType>("TMPro", "TagValueType", "None"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TagValueType None
void TMPro::TagValueType::_set_None(TMPro::TagValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TagValueType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TagValueType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TagValueType NumericalValue
TMPro::TagValueType TMPro::TagValueType::_get_NumericalValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TagValueType::_get_NumericalValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TagValueType>("TMPro", "TagValueType", "NumericalValue"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TagValueType NumericalValue
void TMPro::TagValueType::_set_NumericalValue(TMPro::TagValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TagValueType::_set_NumericalValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TagValueType", "NumericalValue", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TagValueType StringValue
TMPro::TagValueType TMPro::TagValueType::_get_StringValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TagValueType::_get_StringValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TagValueType>("TMPro", "TagValueType", "StringValue"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TagValueType StringValue
void TMPro::TagValueType::_set_StringValue(TMPro::TagValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TagValueType::_set_StringValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TagValueType", "StringValue", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TagValueType ColorValue
TMPro::TagValueType TMPro::TagValueType::_get_ColorValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TagValueType::_get_ColorValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TagValueType>("TMPro", "TagValueType", "ColorValue"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TagValueType ColorValue
void TMPro::TagValueType::_set_ColorValue(TMPro::TagValueType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TagValueType::_set_ColorValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TagValueType", "ColorValue", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TagUnitType
#include "TMPro/TagUnitType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TagUnitType Pixels
TMPro::TagUnitType TMPro::TagUnitType::_get_Pixels() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TagUnitType::_get_Pixels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TagUnitType>("TMPro", "TagUnitType", "Pixels"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TagUnitType Pixels
void TMPro::TagUnitType::_set_Pixels(TMPro::TagUnitType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TagUnitType::_set_Pixels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TagUnitType", "Pixels", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TagUnitType FontUnits
TMPro::TagUnitType TMPro::TagUnitType::_get_FontUnits() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TagUnitType::_get_FontUnits");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TagUnitType>("TMPro", "TagUnitType", "FontUnits"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TagUnitType FontUnits
void TMPro::TagUnitType::_set_FontUnits(TMPro::TagUnitType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TagUnitType::_set_FontUnits");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TagUnitType", "FontUnits", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TagUnitType Percentage
TMPro::TagUnitType TMPro::TagUnitType::_get_Percentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TagUnitType::_get_Percentage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TagUnitType>("TMPro", "TagUnitType", "Percentage"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TagUnitType Percentage
void TMPro::TagUnitType::_set_Percentage(TMPro::TagUnitType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TagUnitType::_set_Percentage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TagUnitType", "Percentage", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.UnicodeCharacter
#include "TMPro/UnicodeCharacter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.UnicodeCharacter HYPHEN_MINUS
TMPro::UnicodeCharacter TMPro::UnicodeCharacter::_get_HYPHEN_MINUS() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::UnicodeCharacter::_get_HYPHEN_MINUS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::UnicodeCharacter>("TMPro", "UnicodeCharacter", "HYPHEN_MINUS"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.UnicodeCharacter HYPHEN_MINUS
void TMPro::UnicodeCharacter::_set_HYPHEN_MINUS(TMPro::UnicodeCharacter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::UnicodeCharacter::_set_HYPHEN_MINUS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "UnicodeCharacter", "HYPHEN_MINUS", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.UnicodeCharacter SOFT_HYPHEN
TMPro::UnicodeCharacter TMPro::UnicodeCharacter::_get_SOFT_HYPHEN() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::UnicodeCharacter::_get_SOFT_HYPHEN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::UnicodeCharacter>("TMPro", "UnicodeCharacter", "SOFT_HYPHEN"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.UnicodeCharacter SOFT_HYPHEN
void TMPro::UnicodeCharacter::_set_SOFT_HYPHEN(TMPro::UnicodeCharacter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::UnicodeCharacter::_set_SOFT_HYPHEN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "UnicodeCharacter", "SOFT_HYPHEN", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.UnicodeCharacter HYPHEN
TMPro::UnicodeCharacter TMPro::UnicodeCharacter::_get_HYPHEN() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::UnicodeCharacter::_get_HYPHEN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::UnicodeCharacter>("TMPro", "UnicodeCharacter", "HYPHEN"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.UnicodeCharacter HYPHEN
void TMPro::UnicodeCharacter::_set_HYPHEN(TMPro::UnicodeCharacter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::UnicodeCharacter::_set_HYPHEN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "UnicodeCharacter", "HYPHEN", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.UnicodeCharacter NON_BREAKING_HYPHEN
TMPro::UnicodeCharacter TMPro::UnicodeCharacter::_get_NON_BREAKING_HYPHEN() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::UnicodeCharacter::_get_NON_BREAKING_HYPHEN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::UnicodeCharacter>("TMPro", "UnicodeCharacter", "NON_BREAKING_HYPHEN"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.UnicodeCharacter NON_BREAKING_HYPHEN
void TMPro::UnicodeCharacter::_set_NON_BREAKING_HYPHEN(TMPro::UnicodeCharacter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::UnicodeCharacter::_set_NON_BREAKING_HYPHEN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "UnicodeCharacter", "NON_BREAKING_HYPHEN", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.UnicodeCharacter ZERO_WIDTH_SPACE
TMPro::UnicodeCharacter TMPro::UnicodeCharacter::_get_ZERO_WIDTH_SPACE() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::UnicodeCharacter::_get_ZERO_WIDTH_SPACE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::UnicodeCharacter>("TMPro", "UnicodeCharacter", "ZERO_WIDTH_SPACE"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.UnicodeCharacter ZERO_WIDTH_SPACE
void TMPro::UnicodeCharacter::_set_ZERO_WIDTH_SPACE(TMPro::UnicodeCharacter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::UnicodeCharacter::_set_ZERO_WIDTH_SPACE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "UnicodeCharacter", "ZERO_WIDTH_SPACE", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.UnicodeCharacter RIGHT_SINGLE_QUOTATION
TMPro::UnicodeCharacter TMPro::UnicodeCharacter::_get_RIGHT_SINGLE_QUOTATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::UnicodeCharacter::_get_RIGHT_SINGLE_QUOTATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::UnicodeCharacter>("TMPro", "UnicodeCharacter", "RIGHT_SINGLE_QUOTATION"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.UnicodeCharacter RIGHT_SINGLE_QUOTATION
void TMPro::UnicodeCharacter::_set_RIGHT_SINGLE_QUOTATION(TMPro::UnicodeCharacter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::UnicodeCharacter::_set_RIGHT_SINGLE_QUOTATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "UnicodeCharacter", "RIGHT_SINGLE_QUOTATION", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.UnicodeCharacter APOSTROPHE
TMPro::UnicodeCharacter TMPro::UnicodeCharacter::_get_APOSTROPHE() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::UnicodeCharacter::_get_APOSTROPHE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::UnicodeCharacter>("TMPro", "UnicodeCharacter", "APOSTROPHE"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.UnicodeCharacter APOSTROPHE
void TMPro::UnicodeCharacter::_set_APOSTROPHE(TMPro::UnicodeCharacter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::UnicodeCharacter::_set_APOSTROPHE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "UnicodeCharacter", "APOSTROPHE", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.UnicodeCharacter WORD_JOINER
TMPro::UnicodeCharacter TMPro::UnicodeCharacter::_get_WORD_JOINER() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::UnicodeCharacter::_get_WORD_JOINER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::UnicodeCharacter>("TMPro", "UnicodeCharacter", "WORD_JOINER"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.UnicodeCharacter WORD_JOINER
void TMPro::UnicodeCharacter::_set_WORD_JOINER(TMPro::UnicodeCharacter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::UnicodeCharacter::_set_WORD_JOINER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "UnicodeCharacter", "WORD_JOINER", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_ScrollbarEventHandler
#include "TMPro/TMP_ScrollbarEventHandler.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
// Including type: UnityEngine.EventSystems.BaseEventData
#include "UnityEngine/EventSystems/BaseEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.TMP_ScrollbarEventHandler.OnPointerClick
void TMPro::TMP_ScrollbarEventHandler::OnPointerClick(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_ScrollbarEventHandler::OnPointerClick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_ScrollbarEventHandler.OnSelect
void TMPro::TMP_ScrollbarEventHandler::OnSelect(UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_ScrollbarEventHandler::OnSelect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSelect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: TMPro.TMP_ScrollbarEventHandler.OnDeselect
void TMPro::TMP_ScrollbarEventHandler::OnDeselect(UnityEngine::EventSystems::BaseEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_ScrollbarEventHandler::OnDeselect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeselect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_SelectionCaret
#include "TMPro/TMP_SelectionCaret.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.TMP_SelectionCaret.Cull
void TMPro::TMP_SelectionCaret::Cull(UnityEngine::Rect clipRect, bool validRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SelectionCaret::Cull");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipRect), ::il2cpp_utils::ExtractType(validRect)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clipRect, validRect);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_Settings
#include "TMPro/TMP_Settings.hpp"
// Including type: TMPro.TMP_Settings/LineBreakingTable
#include "TMPro/TMP_Settings_LineBreakingTable.hpp"
// Including type: TMPro.TMP_FontAsset
#include "TMPro/TMP_FontAsset.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: TMPro.TMP_SpriteAsset
#include "TMPro/TMP_SpriteAsset.hpp"
// Including type: TMPro.TMP_StyleSheet
#include "TMPro/TMP_StyleSheet.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private TMPro.TMP_Settings s_Instance
TMPro::TMP_Settings* TMPro::TMP_Settings::_get_s_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::_get_s_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_Settings*>("TMPro", "TMP_Settings", "s_Instance"));
}
// Autogenerated static field setter
// Set static field: static private TMPro.TMP_Settings s_Instance
void TMPro::TMP_Settings::_set_s_Instance(TMPro::TMP_Settings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::_set_s_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Settings", "s_Instance", value));
}
// Autogenerated method: TMPro.TMP_Settings.get_version
::Il2CppString* TMPro::TMP_Settings::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_enableWordWrapping
bool TMPro::TMP_Settings::get_enableWordWrapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_enableWordWrapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_enableWordWrapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_enableKerning
bool TMPro::TMP_Settings::get_enableKerning() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_enableKerning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_enableKerning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_enableExtraPadding
bool TMPro::TMP_Settings::get_enableExtraPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_enableExtraPadding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_enableExtraPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_enableTintAllSprites
bool TMPro::TMP_Settings::get_enableTintAllSprites() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_enableTintAllSprites");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_enableTintAllSprites", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_enableParseEscapeCharacters
bool TMPro::TMP_Settings::get_enableParseEscapeCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_enableParseEscapeCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_enableParseEscapeCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_enableRaycastTarget
bool TMPro::TMP_Settings::get_enableRaycastTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_enableRaycastTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_enableRaycastTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_getFontFeaturesAtRuntime
bool TMPro::TMP_Settings::get_getFontFeaturesAtRuntime() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_getFontFeaturesAtRuntime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_getFontFeaturesAtRuntime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_missingGlyphCharacter
int TMPro::TMP_Settings::get_missingGlyphCharacter() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_missingGlyphCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_missingGlyphCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.set_missingGlyphCharacter
void TMPro::TMP_Settings::set_missingGlyphCharacter(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::set_missingGlyphCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "set_missingGlyphCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Settings.get_warningsDisabled
bool TMPro::TMP_Settings::get_warningsDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_warningsDisabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_warningsDisabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_defaultFontAsset
TMPro::TMP_FontAsset* TMPro::TMP_Settings::get_defaultFontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_defaultFontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_defaultFontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_FontAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_defaultFontAssetPath
::Il2CppString* TMPro::TMP_Settings::get_defaultFontAssetPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_defaultFontAssetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_defaultFontAssetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_defaultFontSize
float TMPro::TMP_Settings::get_defaultFontSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_defaultFontSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_defaultFontSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_defaultTextAutoSizingMinRatio
float TMPro::TMP_Settings::get_defaultTextAutoSizingMinRatio() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_defaultTextAutoSizingMinRatio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_defaultTextAutoSizingMinRatio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_defaultTextAutoSizingMaxRatio
float TMPro::TMP_Settings::get_defaultTextAutoSizingMaxRatio() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_defaultTextAutoSizingMaxRatio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_defaultTextAutoSizingMaxRatio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_defaultTextMeshProTextContainerSize
UnityEngine::Vector2 TMPro::TMP_Settings::get_defaultTextMeshProTextContainerSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_defaultTextMeshProTextContainerSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_defaultTextMeshProTextContainerSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_defaultTextMeshProUITextContainerSize
UnityEngine::Vector2 TMPro::TMP_Settings::get_defaultTextMeshProUITextContainerSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_defaultTextMeshProUITextContainerSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_defaultTextMeshProUITextContainerSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_autoSizeTextContainer
bool TMPro::TMP_Settings::get_autoSizeTextContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_autoSizeTextContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_autoSizeTextContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_fallbackFontAssets
System::Collections::Generic::List_1<TMPro::TMP_FontAsset*>* TMPro::TMP_Settings::get_fallbackFontAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_fallbackFontAssets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_fallbackFontAssets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<TMPro::TMP_FontAsset*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_matchMaterialPreset
bool TMPro::TMP_Settings::get_matchMaterialPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_matchMaterialPreset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_matchMaterialPreset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_defaultSpriteAsset
TMPro::TMP_SpriteAsset* TMPro::TMP_Settings::get_defaultSpriteAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_defaultSpriteAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_defaultSpriteAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SpriteAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_defaultSpriteAssetPath
::Il2CppString* TMPro::TMP_Settings::get_defaultSpriteAssetPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_defaultSpriteAssetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_defaultSpriteAssetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_defaultColorGradientPresetsPath
::Il2CppString* TMPro::TMP_Settings::get_defaultColorGradientPresetsPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_defaultColorGradientPresetsPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_defaultColorGradientPresetsPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_enableEmojiSupport
bool TMPro::TMP_Settings::get_enableEmojiSupport() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_enableEmojiSupport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_enableEmojiSupport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.set_enableEmojiSupport
void TMPro::TMP_Settings::set_enableEmojiSupport(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::set_enableEmojiSupport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "set_enableEmojiSupport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Settings.get_defaultStyleSheet
TMPro::TMP_StyleSheet* TMPro::TMP_Settings::get_defaultStyleSheet() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_defaultStyleSheet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_defaultStyleSheet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_StyleSheet*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_leadingCharacters
UnityEngine::TextAsset* TMPro::TMP_Settings::get_leadingCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_leadingCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_leadingCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_followingCharacters
UnityEngine::TextAsset* TMPro::TMP_Settings::get_followingCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_followingCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_followingCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_linebreakingRules
TMPro::TMP_Settings::LineBreakingTable* TMPro::TMP_Settings::get_linebreakingRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_linebreakingRules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_linebreakingRules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_Settings::LineBreakingTable*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.get_instance
TMPro::TMP_Settings* TMPro::TMP_Settings::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_Settings*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.LoadDefaultSettings
TMPro::TMP_Settings* TMPro::TMP_Settings::LoadDefaultSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::LoadDefaultSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "LoadDefaultSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_Settings*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.GetSettings
TMPro::TMP_Settings* TMPro::TMP_Settings::GetSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::GetSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "GetSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_Settings*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.GetFontAsset
TMPro::TMP_FontAsset* TMPro::TMP_Settings::GetFontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::GetFontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "GetFontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_FontAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.GetSpriteAsset
TMPro::TMP_SpriteAsset* TMPro::TMP_Settings::GetSpriteAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::GetSpriteAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "GetSpriteAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SpriteAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.GetStyleSheet
TMPro::TMP_StyleSheet* TMPro::TMP_Settings::GetStyleSheet() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::GetStyleSheet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "GetStyleSheet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_StyleSheet*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.LoadLinebreakingRules
void TMPro::TMP_Settings::LoadLinebreakingRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::LoadLinebreakingRules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "LoadLinebreakingRules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_Settings.GetCharacters
System::Collections::Generic::Dictionary_2<int, ::Il2CppChar>* TMPro::TMP_Settings::GetCharacters(UnityEngine::TextAsset* file) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Settings::GetCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Settings", "GetCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(file)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::Dictionary_2<int, ::Il2CppChar>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, file);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_Settings/LineBreakingTable
#include "TMPro/TMP_Settings_LineBreakingTable.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.ShaderUtilities
#include "TMPro/ShaderUtilities.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_MainTex
int TMPro::ShaderUtilities::_get_ID_MainTex() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_MainTex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_MainTex"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_MainTex
void TMPro::ShaderUtilities::_set_ID_MainTex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_MainTex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_MainTex", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_FaceTex
int TMPro::ShaderUtilities::_get_ID_FaceTex() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_FaceTex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_FaceTex"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_FaceTex
void TMPro::ShaderUtilities::_set_ID_FaceTex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_FaceTex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_FaceTex", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_FaceColor
int TMPro::ShaderUtilities::_get_ID_FaceColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_FaceColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_FaceColor"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_FaceColor
void TMPro::ShaderUtilities::_set_ID_FaceColor(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_FaceColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_FaceColor", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_FaceDilate
int TMPro::ShaderUtilities::_get_ID_FaceDilate() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_FaceDilate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_FaceDilate"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_FaceDilate
void TMPro::ShaderUtilities::_set_ID_FaceDilate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_FaceDilate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_FaceDilate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_Shininess
int TMPro::ShaderUtilities::_get_ID_Shininess() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_Shininess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_Shininess"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_Shininess
void TMPro::ShaderUtilities::_set_ID_Shininess(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_Shininess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_Shininess", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_UnderlayColor
int TMPro::ShaderUtilities::_get_ID_UnderlayColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_UnderlayColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_UnderlayColor"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_UnderlayColor
void TMPro::ShaderUtilities::_set_ID_UnderlayColor(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_UnderlayColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_UnderlayColor", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_UnderlayOffsetX
int TMPro::ShaderUtilities::_get_ID_UnderlayOffsetX() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_UnderlayOffsetX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_UnderlayOffsetX"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_UnderlayOffsetX
void TMPro::ShaderUtilities::_set_ID_UnderlayOffsetX(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_UnderlayOffsetX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_UnderlayOffsetX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_UnderlayOffsetY
int TMPro::ShaderUtilities::_get_ID_UnderlayOffsetY() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_UnderlayOffsetY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_UnderlayOffsetY"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_UnderlayOffsetY
void TMPro::ShaderUtilities::_set_ID_UnderlayOffsetY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_UnderlayOffsetY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_UnderlayOffsetY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_UnderlayDilate
int TMPro::ShaderUtilities::_get_ID_UnderlayDilate() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_UnderlayDilate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_UnderlayDilate"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_UnderlayDilate
void TMPro::ShaderUtilities::_set_ID_UnderlayDilate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_UnderlayDilate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_UnderlayDilate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_UnderlaySoftness
int TMPro::ShaderUtilities::_get_ID_UnderlaySoftness() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_UnderlaySoftness");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_UnderlaySoftness"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_UnderlaySoftness
void TMPro::ShaderUtilities::_set_ID_UnderlaySoftness(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_UnderlaySoftness");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_UnderlaySoftness", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_WeightNormal
int TMPro::ShaderUtilities::_get_ID_WeightNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_WeightNormal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_WeightNormal"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_WeightNormal
void TMPro::ShaderUtilities::_set_ID_WeightNormal(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_WeightNormal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_WeightNormal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_WeightBold
int TMPro::ShaderUtilities::_get_ID_WeightBold() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_WeightBold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_WeightBold"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_WeightBold
void TMPro::ShaderUtilities::_set_ID_WeightBold(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_WeightBold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_WeightBold", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_OutlineTex
int TMPro::ShaderUtilities::_get_ID_OutlineTex() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_OutlineTex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_OutlineTex"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_OutlineTex
void TMPro::ShaderUtilities::_set_ID_OutlineTex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_OutlineTex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_OutlineTex", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_OutlineWidth
int TMPro::ShaderUtilities::_get_ID_OutlineWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_OutlineWidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_OutlineWidth"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_OutlineWidth
void TMPro::ShaderUtilities::_set_ID_OutlineWidth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_OutlineWidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_OutlineWidth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_OutlineSoftness
int TMPro::ShaderUtilities::_get_ID_OutlineSoftness() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_OutlineSoftness");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_OutlineSoftness"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_OutlineSoftness
void TMPro::ShaderUtilities::_set_ID_OutlineSoftness(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_OutlineSoftness");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_OutlineSoftness", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_OutlineColor
int TMPro::ShaderUtilities::_get_ID_OutlineColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_OutlineColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_OutlineColor"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_OutlineColor
void TMPro::ShaderUtilities::_set_ID_OutlineColor(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_OutlineColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_OutlineColor", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_Padding
int TMPro::ShaderUtilities::_get_ID_Padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_Padding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_Padding"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_Padding
void TMPro::ShaderUtilities::_set_ID_Padding(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_Padding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_Padding", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_GradientScale
int TMPro::ShaderUtilities::_get_ID_GradientScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_GradientScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_GradientScale"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_GradientScale
void TMPro::ShaderUtilities::_set_ID_GradientScale(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_GradientScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_GradientScale", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_ScaleX
int TMPro::ShaderUtilities::_get_ID_ScaleX() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_ScaleX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_ScaleX"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_ScaleX
void TMPro::ShaderUtilities::_set_ID_ScaleX(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_ScaleX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_ScaleX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_ScaleY
int TMPro::ShaderUtilities::_get_ID_ScaleY() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_ScaleY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_ScaleY"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_ScaleY
void TMPro::ShaderUtilities::_set_ID_ScaleY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_ScaleY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_ScaleY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_PerspectiveFilter
int TMPro::ShaderUtilities::_get_ID_PerspectiveFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_PerspectiveFilter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_PerspectiveFilter"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_PerspectiveFilter
void TMPro::ShaderUtilities::_set_ID_PerspectiveFilter(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_PerspectiveFilter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_PerspectiveFilter", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_Sharpness
int TMPro::ShaderUtilities::_get_ID_Sharpness() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_Sharpness");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_Sharpness"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_Sharpness
void TMPro::ShaderUtilities::_set_ID_Sharpness(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_Sharpness");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_Sharpness", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_TextureWidth
int TMPro::ShaderUtilities::_get_ID_TextureWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_TextureWidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_TextureWidth"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_TextureWidth
void TMPro::ShaderUtilities::_set_ID_TextureWidth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_TextureWidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_TextureWidth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_TextureHeight
int TMPro::ShaderUtilities::_get_ID_TextureHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_TextureHeight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_TextureHeight"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_TextureHeight
void TMPro::ShaderUtilities::_set_ID_TextureHeight(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_TextureHeight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_TextureHeight", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_BevelAmount
int TMPro::ShaderUtilities::_get_ID_BevelAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_BevelAmount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_BevelAmount"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_BevelAmount
void TMPro::ShaderUtilities::_set_ID_BevelAmount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_BevelAmount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_BevelAmount", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_GlowColor
int TMPro::ShaderUtilities::_get_ID_GlowColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_GlowColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_GlowColor"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_GlowColor
void TMPro::ShaderUtilities::_set_ID_GlowColor(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_GlowColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_GlowColor", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_GlowOffset
int TMPro::ShaderUtilities::_get_ID_GlowOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_GlowOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_GlowOffset"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_GlowOffset
void TMPro::ShaderUtilities::_set_ID_GlowOffset(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_GlowOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_GlowOffset", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_GlowPower
int TMPro::ShaderUtilities::_get_ID_GlowPower() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_GlowPower");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_GlowPower"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_GlowPower
void TMPro::ShaderUtilities::_set_ID_GlowPower(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_GlowPower");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_GlowPower", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_GlowOuter
int TMPro::ShaderUtilities::_get_ID_GlowOuter() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_GlowOuter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_GlowOuter"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_GlowOuter
void TMPro::ShaderUtilities::_set_ID_GlowOuter(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_GlowOuter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_GlowOuter", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_LightAngle
int TMPro::ShaderUtilities::_get_ID_LightAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_LightAngle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_LightAngle"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_LightAngle
void TMPro::ShaderUtilities::_set_ID_LightAngle(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_LightAngle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_LightAngle", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_EnvMap
int TMPro::ShaderUtilities::_get_ID_EnvMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_EnvMap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_EnvMap"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_EnvMap
void TMPro::ShaderUtilities::_set_ID_EnvMap(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_EnvMap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_EnvMap", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_EnvMatrix
int TMPro::ShaderUtilities::_get_ID_EnvMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_EnvMatrix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_EnvMatrix"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_EnvMatrix
void TMPro::ShaderUtilities::_set_ID_EnvMatrix(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_EnvMatrix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_EnvMatrix", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_EnvMatrixRotation
int TMPro::ShaderUtilities::_get_ID_EnvMatrixRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_EnvMatrixRotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_EnvMatrixRotation"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_EnvMatrixRotation
void TMPro::ShaderUtilities::_set_ID_EnvMatrixRotation(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_EnvMatrixRotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_EnvMatrixRotation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_MaskCoord
int TMPro::ShaderUtilities::_get_ID_MaskCoord() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_MaskCoord");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_MaskCoord"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_MaskCoord
void TMPro::ShaderUtilities::_set_ID_MaskCoord(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_MaskCoord");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_MaskCoord", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_ClipRect
int TMPro::ShaderUtilities::_get_ID_ClipRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_ClipRect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_ClipRect"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_ClipRect
void TMPro::ShaderUtilities::_set_ID_ClipRect(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_ClipRect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_ClipRect", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_MaskSoftnessX
int TMPro::ShaderUtilities::_get_ID_MaskSoftnessX() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_MaskSoftnessX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_MaskSoftnessX"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_MaskSoftnessX
void TMPro::ShaderUtilities::_set_ID_MaskSoftnessX(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_MaskSoftnessX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_MaskSoftnessX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_MaskSoftnessY
int TMPro::ShaderUtilities::_get_ID_MaskSoftnessY() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_MaskSoftnessY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_MaskSoftnessY"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_MaskSoftnessY
void TMPro::ShaderUtilities::_set_ID_MaskSoftnessY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_MaskSoftnessY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_MaskSoftnessY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_VertexOffsetX
int TMPro::ShaderUtilities::_get_ID_VertexOffsetX() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_VertexOffsetX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_VertexOffsetX"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_VertexOffsetX
void TMPro::ShaderUtilities::_set_ID_VertexOffsetX(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_VertexOffsetX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_VertexOffsetX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_VertexOffsetY
int TMPro::ShaderUtilities::_get_ID_VertexOffsetY() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_VertexOffsetY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_VertexOffsetY"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_VertexOffsetY
void TMPro::ShaderUtilities::_set_ID_VertexOffsetY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_VertexOffsetY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_VertexOffsetY", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_UseClipRect
int TMPro::ShaderUtilities::_get_ID_UseClipRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_UseClipRect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_UseClipRect"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_UseClipRect
void TMPro::ShaderUtilities::_set_ID_UseClipRect(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_UseClipRect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_UseClipRect", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_StencilID
int TMPro::ShaderUtilities::_get_ID_StencilID() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_StencilID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_StencilID"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_StencilID
void TMPro::ShaderUtilities::_set_ID_StencilID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_StencilID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_StencilID", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_StencilOp
int TMPro::ShaderUtilities::_get_ID_StencilOp() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_StencilOp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_StencilOp"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_StencilOp
void TMPro::ShaderUtilities::_set_ID_StencilOp(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_StencilOp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_StencilOp", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_StencilComp
int TMPro::ShaderUtilities::_get_ID_StencilComp() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_StencilComp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_StencilComp"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_StencilComp
void TMPro::ShaderUtilities::_set_ID_StencilComp(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_StencilComp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_StencilComp", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_StencilReadMask
int TMPro::ShaderUtilities::_get_ID_StencilReadMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_StencilReadMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_StencilReadMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_StencilReadMask
void TMPro::ShaderUtilities::_set_ID_StencilReadMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_StencilReadMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_StencilReadMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_StencilWriteMask
int TMPro::ShaderUtilities::_get_ID_StencilWriteMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_StencilWriteMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_StencilWriteMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_StencilWriteMask
void TMPro::ShaderUtilities::_set_ID_StencilWriteMask(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_StencilWriteMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_StencilWriteMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_ShaderFlags
int TMPro::ShaderUtilities::_get_ID_ShaderFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_ShaderFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_ShaderFlags"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_ShaderFlags
void TMPro::ShaderUtilities::_set_ID_ShaderFlags(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_ShaderFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_ShaderFlags", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_ScaleRatio_A
int TMPro::ShaderUtilities::_get_ID_ScaleRatio_A() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_ScaleRatio_A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_ScaleRatio_A"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_ScaleRatio_A
void TMPro::ShaderUtilities::_set_ID_ScaleRatio_A(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_ScaleRatio_A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_ScaleRatio_A", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_ScaleRatio_B
int TMPro::ShaderUtilities::_get_ID_ScaleRatio_B() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_ScaleRatio_B");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_ScaleRatio_B"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_ScaleRatio_B
void TMPro::ShaderUtilities::_set_ID_ScaleRatio_B(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_ScaleRatio_B");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_ScaleRatio_B", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 ID_ScaleRatio_C
int TMPro::ShaderUtilities::_get_ID_ScaleRatio_C() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ID_ScaleRatio_C");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "ShaderUtilities", "ID_ScaleRatio_C"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 ID_ScaleRatio_C
void TMPro::ShaderUtilities::_set_ID_ScaleRatio_C(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ID_ScaleRatio_C");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ID_ScaleRatio_C", value));
}
// Autogenerated static field getter
// Get static field: static public System.String Keyword_Bevel
::Il2CppString* TMPro::ShaderUtilities::_get_Keyword_Bevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_Keyword_Bevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("TMPro", "ShaderUtilities", "Keyword_Bevel"));
}
// Autogenerated static field setter
// Set static field: static public System.String Keyword_Bevel
void TMPro::ShaderUtilities::_set_Keyword_Bevel(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_Keyword_Bevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "Keyword_Bevel", value));
}
// Autogenerated static field getter
// Get static field: static public System.String Keyword_Glow
::Il2CppString* TMPro::ShaderUtilities::_get_Keyword_Glow() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_Keyword_Glow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("TMPro", "ShaderUtilities", "Keyword_Glow"));
}
// Autogenerated static field setter
// Set static field: static public System.String Keyword_Glow
void TMPro::ShaderUtilities::_set_Keyword_Glow(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_Keyword_Glow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "Keyword_Glow", value));
}
// Autogenerated static field getter
// Get static field: static public System.String Keyword_Underlay
::Il2CppString* TMPro::ShaderUtilities::_get_Keyword_Underlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_Keyword_Underlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("TMPro", "ShaderUtilities", "Keyword_Underlay"));
}
// Autogenerated static field setter
// Set static field: static public System.String Keyword_Underlay
void TMPro::ShaderUtilities::_set_Keyword_Underlay(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_Keyword_Underlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "Keyword_Underlay", value));
}
// Autogenerated static field getter
// Get static field: static public System.String Keyword_Ratios
::Il2CppString* TMPro::ShaderUtilities::_get_Keyword_Ratios() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_Keyword_Ratios");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("TMPro", "ShaderUtilities", "Keyword_Ratios"));
}
// Autogenerated static field setter
// Set static field: static public System.String Keyword_Ratios
void TMPro::ShaderUtilities::_set_Keyword_Ratios(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_Keyword_Ratios");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "Keyword_Ratios", value));
}
// Autogenerated static field getter
// Get static field: static public System.String Keyword_MASK_SOFT
::Il2CppString* TMPro::ShaderUtilities::_get_Keyword_MASK_SOFT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_Keyword_MASK_SOFT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("TMPro", "ShaderUtilities", "Keyword_MASK_SOFT"));
}
// Autogenerated static field setter
// Set static field: static public System.String Keyword_MASK_SOFT
void TMPro::ShaderUtilities::_set_Keyword_MASK_SOFT(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_Keyword_MASK_SOFT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "Keyword_MASK_SOFT", value));
}
// Autogenerated static field getter
// Get static field: static public System.String Keyword_MASK_HARD
::Il2CppString* TMPro::ShaderUtilities::_get_Keyword_MASK_HARD() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_Keyword_MASK_HARD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("TMPro", "ShaderUtilities", "Keyword_MASK_HARD"));
}
// Autogenerated static field setter
// Set static field: static public System.String Keyword_MASK_HARD
void TMPro::ShaderUtilities::_set_Keyword_MASK_HARD(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_Keyword_MASK_HARD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "Keyword_MASK_HARD", value));
}
// Autogenerated static field getter
// Get static field: static public System.String Keyword_MASK_TEX
::Il2CppString* TMPro::ShaderUtilities::_get_Keyword_MASK_TEX() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_Keyword_MASK_TEX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("TMPro", "ShaderUtilities", "Keyword_MASK_TEX"));
}
// Autogenerated static field setter
// Set static field: static public System.String Keyword_MASK_TEX
void TMPro::ShaderUtilities::_set_Keyword_MASK_TEX(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_Keyword_MASK_TEX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "Keyword_MASK_TEX", value));
}
// Autogenerated static field getter
// Get static field: static public System.String Keyword_Outline
::Il2CppString* TMPro::ShaderUtilities::_get_Keyword_Outline() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_Keyword_Outline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("TMPro", "ShaderUtilities", "Keyword_Outline"));
}
// Autogenerated static field setter
// Set static field: static public System.String Keyword_Outline
void TMPro::ShaderUtilities::_set_Keyword_Outline(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_Keyword_Outline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "Keyword_Outline", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ShaderTag_ZTestMode
::Il2CppString* TMPro::ShaderUtilities::_get_ShaderTag_ZTestMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ShaderTag_ZTestMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("TMPro", "ShaderUtilities", "ShaderTag_ZTestMode"));
}
// Autogenerated static field setter
// Set static field: static public System.String ShaderTag_ZTestMode
void TMPro::ShaderUtilities::_set_ShaderTag_ZTestMode(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ShaderTag_ZTestMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ShaderTag_ZTestMode", value));
}
// Autogenerated static field getter
// Get static field: static public System.String ShaderTag_CullMode
::Il2CppString* TMPro::ShaderUtilities::_get_ShaderTag_CullMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_ShaderTag_CullMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("TMPro", "ShaderUtilities", "ShaderTag_CullMode"));
}
// Autogenerated static field setter
// Set static field: static public System.String ShaderTag_CullMode
void TMPro::ShaderUtilities::_set_ShaderTag_CullMode(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_ShaderTag_CullMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "ShaderTag_CullMode", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single m_clamp
float TMPro::ShaderUtilities::_get_m_clamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_m_clamp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("TMPro", "ShaderUtilities", "m_clamp"));
}
// Autogenerated static field setter
// Set static field: static private System.Single m_clamp
void TMPro::ShaderUtilities::_set_m_clamp(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_m_clamp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "m_clamp", value));
}
// Autogenerated static field getter
// Get static field: static public System.Boolean isInitialized
bool TMPro::ShaderUtilities::_get_isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_isInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("TMPro", "ShaderUtilities", "isInitialized"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean isInitialized
void TMPro::ShaderUtilities::_set_isInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_isInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "isInitialized", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Shader k_ShaderRef_MobileSDF
UnityEngine::Shader* TMPro::ShaderUtilities::_get_k_ShaderRef_MobileSDF() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_k_ShaderRef_MobileSDF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Shader*>("TMPro", "ShaderUtilities", "k_ShaderRef_MobileSDF"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Shader k_ShaderRef_MobileSDF
void TMPro::ShaderUtilities::_set_k_ShaderRef_MobileSDF(UnityEngine::Shader* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_k_ShaderRef_MobileSDF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "k_ShaderRef_MobileSDF", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Shader k_ShaderRef_MobileBitmap
UnityEngine::Shader* TMPro::ShaderUtilities::_get_k_ShaderRef_MobileBitmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_get_k_ShaderRef_MobileBitmap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Shader*>("TMPro", "ShaderUtilities", "k_ShaderRef_MobileBitmap"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Shader k_ShaderRef_MobileBitmap
void TMPro::ShaderUtilities::_set_k_ShaderRef_MobileBitmap(UnityEngine::Shader* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::_set_k_ShaderRef_MobileBitmap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "ShaderUtilities", "k_ShaderRef_MobileBitmap", value));
}
// Autogenerated method: TMPro.ShaderUtilities.get_ShaderRef_MobileSDF
UnityEngine::Shader* TMPro::ShaderUtilities::get_ShaderRef_MobileSDF() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::get_ShaderRef_MobileSDF");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "ShaderUtilities", "get_ShaderRef_MobileSDF", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Shader*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.ShaderUtilities.get_ShaderRef_MobileBitmap
UnityEngine::Shader* TMPro::ShaderUtilities::get_ShaderRef_MobileBitmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::get_ShaderRef_MobileBitmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "ShaderUtilities", "get_ShaderRef_MobileBitmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Shader*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.ShaderUtilities..cctor
void TMPro::ShaderUtilities::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "ShaderUtilities", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.ShaderUtilities.GetShaderPropertyIDs
void TMPro::ShaderUtilities::GetShaderPropertyIDs() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::GetShaderPropertyIDs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "ShaderUtilities", "GetShaderPropertyIDs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.ShaderUtilities.UpdateShaderRatios
void TMPro::ShaderUtilities::UpdateShaderRatios(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::UpdateShaderRatios");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "ShaderUtilities", "UpdateShaderRatios", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mat);
}
// Autogenerated method: TMPro.ShaderUtilities.GetFontExtent
UnityEngine::Vector4 TMPro::ShaderUtilities::GetFontExtent(UnityEngine::Material* material) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::GetFontExtent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "ShaderUtilities", "GetFontExtent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector4, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, material);
}
// Autogenerated method: TMPro.ShaderUtilities.IsMaskingEnabled
bool TMPro::ShaderUtilities::IsMaskingEnabled(UnityEngine::Material* material) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::IsMaskingEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "ShaderUtilities", "IsMaskingEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, material);
}
// Autogenerated method: TMPro.ShaderUtilities.GetPadding
float TMPro::ShaderUtilities::GetPadding(UnityEngine::Material* material, bool enableExtraPadding, bool isBold) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::GetPadding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "ShaderUtilities", "GetPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(enableExtraPadding), ::il2cpp_utils::ExtractType(isBold)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, material, enableExtraPadding, isBold);
}
// Autogenerated method: TMPro.ShaderUtilities.GetPadding
float TMPro::ShaderUtilities::GetPadding(::Array<UnityEngine::Material*>* materials, bool enableExtraPadding, bool isBold) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ShaderUtilities::GetPadding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "ShaderUtilities", "GetPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(materials), ::il2cpp_utils::ExtractType(enableExtraPadding), ::il2cpp_utils::ExtractType(isBold)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, materials, enableExtraPadding, isBold);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_Sprite
#include "TMPro/TMP_Sprite.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_SpriteAnimator
#include "TMPro/TMP_SpriteAnimator.hpp"
// Including type: TMPro.TMP_SpriteAnimator/<DoSpriteAnimationInternal>d__7
#include "TMPro/TMP_SpriteAnimator_-DoSpriteAnimationInternal-d__7.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: TMPro.TMP_SpriteAsset
#include "TMPro/TMP_SpriteAsset.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.TMP_SpriteAnimator.Awake
void TMPro::TMP_SpriteAnimator::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAnimator.OnEnable
void TMPro::TMP_SpriteAnimator::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAnimator.OnDisable
void TMPro::TMP_SpriteAnimator::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAnimator.StopAllAnimations
void TMPro::TMP_SpriteAnimator::StopAllAnimations() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::StopAllAnimations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopAllAnimations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAnimator.DoSpriteAnimation
void TMPro::TMP_SpriteAnimator::DoSpriteAnimation(int currentCharacter, TMPro::TMP_SpriteAsset* spriteAsset, int start, int end, int framerate) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::DoSpriteAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoSpriteAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentCharacter), ::il2cpp_utils::ExtractType(spriteAsset), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(framerate)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, currentCharacter, spriteAsset, start, end, framerate);
}
// Autogenerated method: TMPro.TMP_SpriteAnimator.DoSpriteAnimationInternal
System::Collections::IEnumerator* TMPro::TMP_SpriteAnimator::DoSpriteAnimationInternal(int currentCharacter, TMPro::TMP_SpriteAsset* spriteAsset, int start, int end, int framerate) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::DoSpriteAnimationInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoSpriteAnimationInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentCharacter), ::il2cpp_utils::ExtractType(spriteAsset), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(framerate)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, currentCharacter, spriteAsset, start, end, framerate);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_SpriteAnimator/<DoSpriteAnimationInternal>d__7
#include "TMPro/TMP_SpriteAnimator_-DoSpriteAnimationInternal-d__7.hpp"
// Including type: TMPro.TMP_SpriteAsset
#include "TMPro/TMP_SpriteAsset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.TMP_SpriteAnimator/<DoSpriteAnimationInternal>d__7.System.IDisposable.Dispose
void TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAnimator/<DoSpriteAnimationInternal>d__7.MoveNext
bool TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAnimator/<DoSpriteAnimationInternal>d__7.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAnimator/<DoSpriteAnimationInternal>d__7.System.Collections.IEnumerator.Reset
void TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAnimator/<DoSpriteAnimationInternal>d__7.System.Collections.IEnumerator.get_Current
::Il2CppObject* TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAnimator::$DoSpriteAnimationInternal$d__7::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_SpriteAsset
#include "TMPro/TMP_SpriteAsset.hpp"
// Including type: TMPro.TMP_SpriteAsset/<>c
#include "TMPro/TMP_SpriteAsset_--c.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: TMPro.TMP_SpriteCharacter
#include "TMPro/TMP_SpriteCharacter.hpp"
// Including type: TMPro.TMP_SpriteGlyph
#include "TMPro/TMP_SpriteGlyph.hpp"
// Including type: TMPro.TMP_Sprite
#include "TMPro/TMP_Sprite.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<System.Int32> k_searchedSpriteAssets
System::Collections::Generic::List_1<int>* TMPro::TMP_SpriteAsset::_get_k_searchedSpriteAssets() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::_get_k_searchedSpriteAssets");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<int>*>("TMPro", "TMP_SpriteAsset", "k_searchedSpriteAssets"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<System.Int32> k_searchedSpriteAssets
void TMPro::TMP_SpriteAsset::_set_k_searchedSpriteAssets(System::Collections::Generic::List_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::_set_k_searchedSpriteAssets");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_SpriteAsset", "k_searchedSpriteAssets", value));
}
// Autogenerated method: TMPro.TMP_SpriteAsset.get_version
::Il2CppString* TMPro::TMP_SpriteAsset::get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::get_version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.set_version
void TMPro::TMP_SpriteAsset::set_version(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::set_version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.get_spriteCharacterTable
System::Collections::Generic::List_1<TMPro::TMP_SpriteCharacter*>* TMPro::TMP_SpriteAsset::get_spriteCharacterTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::get_spriteCharacterTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spriteCharacterTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<TMPro::TMP_SpriteCharacter*>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.set_spriteCharacterTable
void TMPro::TMP_SpriteAsset::set_spriteCharacterTable(System::Collections::Generic::List_1<TMPro::TMP_SpriteCharacter*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::set_spriteCharacterTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_spriteCharacterTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.get_spriteGlyphTable
System::Collections::Generic::List_1<TMPro::TMP_SpriteGlyph*>* TMPro::TMP_SpriteAsset::get_spriteGlyphTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::get_spriteGlyphTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spriteGlyphTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<TMPro::TMP_SpriteGlyph*>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.set_spriteGlyphTable
void TMPro::TMP_SpriteAsset::set_spriteGlyphTable(System::Collections::Generic::List_1<TMPro::TMP_SpriteGlyph*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::set_spriteGlyphTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_spriteGlyphTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.Awake
void TMPro::TMP_SpriteAsset::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.GetDefaultSpriteMaterial
UnityEngine::Material* TMPro::TMP_SpriteAsset::GetDefaultSpriteMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::GetDefaultSpriteMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefaultSpriteMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.UpdateLookupTables
void TMPro::TMP_SpriteAsset::UpdateLookupTables() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::UpdateLookupTables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLookupTables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.GetSpriteIndexFromHashcode
int TMPro::TMP_SpriteAsset::GetSpriteIndexFromHashcode(int hashCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::GetSpriteIndexFromHashcode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSpriteIndexFromHashcode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, hashCode);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.GetSpriteIndexFromUnicode
int TMPro::TMP_SpriteAsset::GetSpriteIndexFromUnicode(uint unicode) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::GetSpriteIndexFromUnicode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSpriteIndexFromUnicode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicode)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, unicode);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.GetSpriteIndexFromName
int TMPro::TMP_SpriteAsset::GetSpriteIndexFromName(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::GetSpriteIndexFromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSpriteIndexFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, name);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.SearchForSpriteByUnicode
TMPro::TMP_SpriteAsset* TMPro::TMP_SpriteAsset::SearchForSpriteByUnicode(TMPro::TMP_SpriteAsset* spriteAsset, uint unicode, bool includeFallbacks, int& spriteIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::SearchForSpriteByUnicode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_SpriteAsset", "SearchForSpriteByUnicode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spriteAsset), ::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractType(includeFallbacks), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SpriteAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, spriteAsset, unicode, includeFallbacks, spriteIndex);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.SearchForSpriteByUnicodeInternal
TMPro::TMP_SpriteAsset* TMPro::TMP_SpriteAsset::SearchForSpriteByUnicodeInternal(System::Collections::Generic::List_1<TMPro::TMP_SpriteAsset*>* spriteAssets, uint unicode, bool includeFallbacks, int& spriteIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::SearchForSpriteByUnicodeInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_SpriteAsset", "SearchForSpriteByUnicodeInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spriteAssets), ::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractType(includeFallbacks), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SpriteAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, spriteAssets, unicode, includeFallbacks, spriteIndex);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.SearchForSpriteByUnicodeInternal
TMPro::TMP_SpriteAsset* TMPro::TMP_SpriteAsset::SearchForSpriteByUnicodeInternal(TMPro::TMP_SpriteAsset* spriteAsset, uint unicode, bool includeFallbacks, int& spriteIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::SearchForSpriteByUnicodeInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_SpriteAsset", "SearchForSpriteByUnicodeInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spriteAsset), ::il2cpp_utils::ExtractType(unicode), ::il2cpp_utils::ExtractType(includeFallbacks), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SpriteAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, spriteAsset, unicode, includeFallbacks, spriteIndex);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.SearchForSpriteByHashCode
TMPro::TMP_SpriteAsset* TMPro::TMP_SpriteAsset::SearchForSpriteByHashCode(TMPro::TMP_SpriteAsset* spriteAsset, int hashCode, bool includeFallbacks, int& spriteIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::SearchForSpriteByHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_SpriteAsset", "SearchForSpriteByHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spriteAsset), ::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractType(includeFallbacks), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SpriteAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, spriteAsset, hashCode, includeFallbacks, spriteIndex);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.SearchForSpriteByHashCodeInternal
TMPro::TMP_SpriteAsset* TMPro::TMP_SpriteAsset::SearchForSpriteByHashCodeInternal(System::Collections::Generic::List_1<TMPro::TMP_SpriteAsset*>* spriteAssets, int hashCode, bool searchFallbacks, int& spriteIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::SearchForSpriteByHashCodeInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_SpriteAsset", "SearchForSpriteByHashCodeInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spriteAssets), ::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractType(searchFallbacks), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SpriteAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, spriteAssets, hashCode, searchFallbacks, spriteIndex);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.SearchForSpriteByHashCodeInternal
TMPro::TMP_SpriteAsset* TMPro::TMP_SpriteAsset::SearchForSpriteByHashCodeInternal(TMPro::TMP_SpriteAsset* spriteAsset, int hashCode, bool searchFallbacks, int& spriteIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::SearchForSpriteByHashCodeInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_SpriteAsset", "SearchForSpriteByHashCodeInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spriteAsset), ::il2cpp_utils::ExtractType(hashCode), ::il2cpp_utils::ExtractType(searchFallbacks), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SpriteAsset*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, spriteAsset, hashCode, searchFallbacks, spriteIndex);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.SortGlyphTable
void TMPro::TMP_SpriteAsset::SortGlyphTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::SortGlyphTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SortGlyphTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.SortCharacterTable
void TMPro::TMP_SpriteAsset::SortCharacterTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::SortCharacterTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SortCharacterTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.SortGlyphAndCharacterTables
void TMPro::TMP_SpriteAsset::SortGlyphAndCharacterTables() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::SortGlyphAndCharacterTables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SortGlyphAndCharacterTables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAsset.UpgradeSpriteAsset
void TMPro::TMP_SpriteAsset::UpgradeSpriteAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::UpgradeSpriteAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpgradeSpriteAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_SpriteAsset/<>c
#include "TMPro/TMP_SpriteAsset_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: TMPro.TMP_SpriteGlyph
#include "TMPro/TMP_SpriteGlyph.hpp"
// Including type: TMPro.TMP_SpriteCharacter
#include "TMPro/TMP_SpriteCharacter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly TMPro.TMP_SpriteAsset/<>c <>9
TMPro::TMP_SpriteAsset::$$c* TMPro::TMP_SpriteAsset::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<TMPro::TMP_SpriteAsset::$$c*>("TMPro", "TMP_SpriteAsset/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.TMP_SpriteAsset/<>c <>9
void TMPro::TMP_SpriteAsset::$$c::_set_$$9(TMPro::TMP_SpriteAsset::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("TMPro", "TMP_SpriteAsset/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<TMPro.TMP_SpriteGlyph,System.UInt32> <>9__32_0
System::Func_2<TMPro::TMP_SpriteGlyph*, uint>* TMPro::TMP_SpriteAsset::$$c::_get_$$9__32_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::$$c::_get_$$9__32_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<TMPro::TMP_SpriteGlyph*, uint>*>("TMPro", "TMP_SpriteAsset/<>c", "<>9__32_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<TMPro.TMP_SpriteGlyph,System.UInt32> <>9__32_0
void TMPro::TMP_SpriteAsset::$$c::_set_$$9__32_0(System::Func_2<TMPro::TMP_SpriteGlyph*, uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::$$c::_set_$$9__32_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("TMPro", "TMP_SpriteAsset/<>c", "<>9__32_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<TMPro.TMP_SpriteCharacter,System.UInt32> <>9__33_0
System::Func_2<TMPro::TMP_SpriteCharacter*, uint>* TMPro::TMP_SpriteAsset::$$c::_get_$$9__33_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::$$c::_get_$$9__33_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<TMPro::TMP_SpriteCharacter*, uint>*>("TMPro", "TMP_SpriteAsset/<>c", "<>9__33_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<TMPro.TMP_SpriteCharacter,System.UInt32> <>9__33_0
void TMPro::TMP_SpriteAsset::$$c::_set_$$9__33_0(System::Func_2<TMPro::TMP_SpriteCharacter*, uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::$$c::_set_$$9__33_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("TMPro", "TMP_SpriteAsset/<>c", "<>9__33_0", value)));
}
// Autogenerated method: TMPro.TMP_SpriteAsset/<>c..cctor
void TMPro::TMP_SpriteAsset::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_SpriteAsset/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteAsset/<>c.<SortGlyphTable>b__32_0
uint TMPro::TMP_SpriteAsset::$$c::$SortGlyphTable$b__32_0(TMPro::TMP_SpriteGlyph* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::$$c::<SortGlyphTable>b__32_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortGlyphTable>b__32_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, item);
}
// Autogenerated method: TMPro.TMP_SpriteAsset/<>c.<SortCharacterTable>b__33_0
uint TMPro::TMP_SpriteAsset::$$c::$SortCharacterTable$b__33_0(TMPro::TMP_SpriteCharacter* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteAsset::$$c::<SortCharacterTable>b__33_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortCharacterTable>b__33_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_SpriteCharacter
#include "TMPro/TMP_SpriteCharacter.hpp"
// Including type: TMPro.TMP_SpriteGlyph
#include "TMPro/TMP_SpriteGlyph.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.TMP_SpriteCharacter.get_name
::Il2CppString* TMPro::TMP_SpriteCharacter::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteCharacter::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SpriteCharacter.set_name
void TMPro::TMP_SpriteCharacter::set_name(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteCharacter::set_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SpriteCharacter.get_hashCode
int TMPro::TMP_SpriteCharacter::get_hashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SpriteCharacter::get_hashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_SpriteGlyph
#include "TMPro/TMP_SpriteGlyph.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_Style
#include "TMPro/TMP_Style.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.TMP_Style.get_name
::Il2CppString* TMPro::TMP_Style::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Style::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Style.set_name
void TMPro::TMP_Style::set_name(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Style::set_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Style.get_hashCode
int TMPro::TMP_Style::get_hashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Style::get_hashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Style.set_hashCode
void TMPro::TMP_Style::set_hashCode(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Style::set_hashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Style.get_styleOpeningDefinition
::Il2CppString* TMPro::TMP_Style::get_styleOpeningDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Style::get_styleOpeningDefinition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_styleOpeningDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Style.get_styleClosingDefinition
::Il2CppString* TMPro::TMP_Style::get_styleClosingDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Style::get_styleClosingDefinition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_styleClosingDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Style.get_styleOpeningTagArray
::Array<int>* TMPro::TMP_Style::get_styleOpeningTagArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Style::get_styleOpeningTagArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_styleOpeningTagArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Style.get_styleClosingTagArray
::Array<int>* TMPro::TMP_Style::get_styleClosingTagArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Style::get_styleClosingTagArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_styleClosingTagArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Style.RefreshStyle
void TMPro::TMP_Style::RefreshStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Style::RefreshStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_StyleSheet
#include "TMPro/TMP_StyleSheet.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: TMPro.TMP_Style
#include "TMPro/TMP_Style.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private TMPro.TMP_StyleSheet s_Instance
TMPro::TMP_StyleSheet* TMPro::TMP_StyleSheet::_get_s_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_StyleSheet::_get_s_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_StyleSheet*>("TMPro", "TMP_StyleSheet", "s_Instance"));
}
// Autogenerated static field setter
// Set static field: static private TMPro.TMP_StyleSheet s_Instance
void TMPro::TMP_StyleSheet::_set_s_Instance(TMPro::TMP_StyleSheet* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_StyleSheet::_set_s_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_StyleSheet", "s_Instance", value));
}
// Autogenerated method: TMPro.TMP_StyleSheet.get_instance
TMPro::TMP_StyleSheet* TMPro::TMP_StyleSheet::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_StyleSheet::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_StyleSheet", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_StyleSheet*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_StyleSheet.LoadDefaultStyleSheet
TMPro::TMP_StyleSheet* TMPro::TMP_StyleSheet::LoadDefaultStyleSheet() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_StyleSheet::LoadDefaultStyleSheet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_StyleSheet", "LoadDefaultStyleSheet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_StyleSheet*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_StyleSheet.GetStyle
TMPro::TMP_Style* TMPro::TMP_StyleSheet::GetStyle(int hashCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_StyleSheet::GetStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_StyleSheet", "GetStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode)})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_Style*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hashCode);
}
// Autogenerated method: TMPro.TMP_StyleSheet.GetStyleInternal
TMPro::TMP_Style* TMPro::TMP_StyleSheet::GetStyleInternal(int hashCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_StyleSheet::GetStyleInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStyleInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashCode)})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_Style*, false>(this, ___internal__method, hashCode);
}
// Autogenerated method: TMPro.TMP_StyleSheet.UpdateStyleDictionaryKey
void TMPro::TMP_StyleSheet::UpdateStyleDictionaryKey(int old_key, int new_key) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_StyleSheet::UpdateStyleDictionaryKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateStyleDictionaryKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(old_key), ::il2cpp_utils::ExtractType(new_key)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, old_key, new_key);
}
// Autogenerated method: TMPro.TMP_StyleSheet.UpdateStyleSheet
void TMPro::TMP_StyleSheet::UpdateStyleSheet() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_StyleSheet::UpdateStyleSheet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_StyleSheet", "UpdateStyleSheet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_StyleSheet.RefreshStyles
void TMPro::TMP_StyleSheet::RefreshStyles() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_StyleSheet::RefreshStyles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_StyleSheet", "RefreshStyles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_StyleSheet.LoadStyleDictionaryInternal
void TMPro::TMP_StyleSheet::LoadStyleDictionaryInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_StyleSheet::LoadStyleDictionaryInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadStyleDictionaryInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_SubMesh
#include "TMPro/TMP_SubMesh.hpp"
// Including type: TMPro.TMP_FontAsset
#include "TMPro/TMP_FontAsset.hpp"
// Including type: TMPro.TMP_SpriteAsset
#include "TMPro/TMP_SpriteAsset.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: TMPro.MaterialReference
#include "TMPro/MaterialReference.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.TMP_SubMesh.get_fontAsset
TMPro::TMP_FontAsset* TMPro::TMP_SubMesh::get_fontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::get_fontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_FontAsset*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.set_fontAsset
void TMPro::TMP_SubMesh::set_fontAsset(TMPro::TMP_FontAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::set_fontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMesh.get_spriteAsset
TMPro::TMP_SpriteAsset* TMPro::TMP_SubMesh::get_spriteAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::get_spriteAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spriteAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SpriteAsset*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.set_spriteAsset
void TMPro::TMP_SubMesh::set_spriteAsset(TMPro::TMP_SpriteAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::set_spriteAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_spriteAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMesh.get_material
UnityEngine::Material* TMPro::TMP_SubMesh::get_material() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::get_material");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_material", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.set_material
void TMPro::TMP_SubMesh::set_material(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::set_material");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_material", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMesh.get_sharedMaterial
UnityEngine::Material* TMPro::TMP_SubMesh::get_sharedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::get_sharedMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.set_sharedMaterial
void TMPro::TMP_SubMesh::set_sharedMaterial(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::set_sharedMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMesh.get_fallbackMaterial
UnityEngine::Material* TMPro::TMP_SubMesh::get_fallbackMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::get_fallbackMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fallbackMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.set_fallbackMaterial
void TMPro::TMP_SubMesh::set_fallbackMaterial(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::set_fallbackMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fallbackMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMesh.get_fallbackSourceMaterial
UnityEngine::Material* TMPro::TMP_SubMesh::get_fallbackSourceMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::get_fallbackSourceMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fallbackSourceMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.set_fallbackSourceMaterial
void TMPro::TMP_SubMesh::set_fallbackSourceMaterial(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::set_fallbackSourceMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fallbackSourceMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMesh.get_isDefaultMaterial
bool TMPro::TMP_SubMesh::get_isDefaultMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::get_isDefaultMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDefaultMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.set_isDefaultMaterial
void TMPro::TMP_SubMesh::set_isDefaultMaterial(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::set_isDefaultMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isDefaultMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMesh.get_padding
float TMPro::TMP_SubMesh::get_padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::get_padding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.set_padding
void TMPro::TMP_SubMesh::set_padding(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::set_padding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMesh.get_renderer
UnityEngine::Renderer* TMPro::TMP_SubMesh::get_renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::get_renderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Renderer*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.get_meshFilter
UnityEngine::MeshFilter* TMPro::TMP_SubMesh::get_meshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::get_meshFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_meshFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::MeshFilter*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.get_mesh
UnityEngine::Mesh* TMPro::TMP_SubMesh::get_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::get_mesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.set_mesh
void TMPro::TMP_SubMesh::set_mesh(UnityEngine::Mesh* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::set_mesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMesh.OnEnable
void TMPro::TMP_SubMesh::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.OnDisable
void TMPro::TMP_SubMesh::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.OnDestroy
void TMPro::TMP_SubMesh::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.AddSubTextObject
TMPro::TMP_SubMesh* TMPro::TMP_SubMesh::AddSubTextObject(TMPro::TextMeshPro* textComponent, TMPro::MaterialReference materialReference) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::AddSubTextObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_SubMesh", "AddSubTextObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textComponent), ::il2cpp_utils::ExtractType(materialReference)})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SubMesh*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, textComponent, materialReference);
}
// Autogenerated method: TMPro.TMP_SubMesh.DestroySelf
void TMPro::TMP_SubMesh::DestroySelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::DestroySelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroySelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.GetMaterial
UnityEngine::Material* TMPro::TMP_SubMesh::GetMaterial(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::GetMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TMP_SubMesh.CreateMaterialInstance
UnityEngine::Material* TMPro::TMP_SubMesh::CreateMaterialInstance(UnityEngine::Material* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::CreateMaterialInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMaterialInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method, source);
}
// Autogenerated method: TMPro.TMP_SubMesh.GetSharedMaterial
UnityEngine::Material* TMPro::TMP_SubMesh::GetSharedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::GetSharedMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.SetSharedMaterial
void TMPro::TMP_SubMesh::SetSharedMaterial(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::SetSharedMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TMP_SubMesh.GetPaddingForMaterial
float TMPro::TMP_SubMesh::GetPaddingForMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::GetPaddingForMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPaddingForMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.UpdateMeshPadding
void TMPro::TMP_SubMesh::UpdateMeshPadding(bool isExtraPadding, bool isUsingBold) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::UpdateMeshPadding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMeshPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isExtraPadding), ::il2cpp_utils::ExtractType(isUsingBold)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isExtraPadding, isUsingBold);
}
// Autogenerated method: TMPro.TMP_SubMesh.SetVerticesDirty
void TMPro::TMP_SubMesh::SetVerticesDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::SetVerticesDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVerticesDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.SetMaterialDirty
void TMPro::TMP_SubMesh::SetMaterialDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::SetMaterialDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaterialDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMesh.UpdateMaterial
void TMPro::TMP_SubMesh::UpdateMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMesh::UpdateMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_SubMeshUI
#include "TMPro/TMP_SubMeshUI.hpp"
// Including type: TMPro.TMP_FontAsset
#include "TMPro/TMP_FontAsset.hpp"
// Including type: TMPro.TMP_SpriteAsset
#include "TMPro/TMP_SpriteAsset.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.CanvasRenderer
#include "UnityEngine/CanvasRenderer.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: TMPro.MaterialReference
#include "TMPro/MaterialReference.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.UI.CanvasUpdate
#include "UnityEngine/UI/CanvasUpdate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.TMP_SubMeshUI.get_fontAsset
TMPro::TMP_FontAsset* TMPro::TMP_SubMeshUI::get_fontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::get_fontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_FontAsset*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.set_fontAsset
void TMPro::TMP_SubMeshUI::set_fontAsset(TMPro::TMP_FontAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::set_fontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.get_spriteAsset
TMPro::TMP_SpriteAsset* TMPro::TMP_SubMeshUI::get_spriteAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::get_spriteAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spriteAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SpriteAsset*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.set_spriteAsset
void TMPro::TMP_SubMeshUI::set_spriteAsset(TMPro::TMP_SpriteAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::set_spriteAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_spriteAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.get_sharedMaterial
UnityEngine::Material* TMPro::TMP_SubMeshUI::get_sharedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::get_sharedMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.set_sharedMaterial
void TMPro::TMP_SubMeshUI::set_sharedMaterial(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::set_sharedMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.get_fallbackMaterial
UnityEngine::Material* TMPro::TMP_SubMeshUI::get_fallbackMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::get_fallbackMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fallbackMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.set_fallbackMaterial
void TMPro::TMP_SubMeshUI::set_fallbackMaterial(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::set_fallbackMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fallbackMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.get_fallbackSourceMaterial
UnityEngine::Material* TMPro::TMP_SubMeshUI::get_fallbackSourceMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::get_fallbackSourceMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fallbackSourceMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.set_fallbackSourceMaterial
void TMPro::TMP_SubMeshUI::set_fallbackSourceMaterial(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::set_fallbackSourceMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fallbackSourceMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.get_isDefaultMaterial
bool TMPro::TMP_SubMeshUI::get_isDefaultMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::get_isDefaultMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDefaultMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.set_isDefaultMaterial
void TMPro::TMP_SubMeshUI::set_isDefaultMaterial(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::set_isDefaultMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isDefaultMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.get_padding
float TMPro::TMP_SubMeshUI::get_padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::get_padding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.set_padding
void TMPro::TMP_SubMeshUI::set_padding(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::set_padding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.get_mesh
UnityEngine::Mesh* TMPro::TMP_SubMeshUI::get_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::get_mesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.set_mesh
void TMPro::TMP_SubMeshUI::set_mesh(UnityEngine::Mesh* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::set_mesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.AddSubTextObject
TMPro::TMP_SubMeshUI* TMPro::TMP_SubMeshUI::AddSubTextObject(TMPro::TextMeshProUGUI* textComponent, TMPro::MaterialReference materialReference) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::AddSubTextObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_SubMeshUI", "AddSubTextObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textComponent), ::il2cpp_utils::ExtractType(materialReference)})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SubMeshUI*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, textComponent, materialReference);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.GetPaddingForMaterial
float TMPro::TMP_SubMeshUI::GetPaddingForMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::GetPaddingForMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPaddingForMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.GetPaddingForMaterial
float TMPro::TMP_SubMeshUI::GetPaddingForMaterial(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::GetPaddingForMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPaddingForMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.UpdateMeshPadding
void TMPro::TMP_SubMeshUI::UpdateMeshPadding(bool isExtraPadding, bool isUsingBold) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::UpdateMeshPadding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMeshPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isExtraPadding), ::il2cpp_utils::ExtractType(isUsingBold)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isExtraPadding, isUsingBold);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.SetPivotDirty
void TMPro::TMP_SubMeshUI::SetPivotDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::SetPivotDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPivotDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.RefreshMaterial
void TMPro::TMP_SubMeshUI::RefreshMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::RefreshMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.GetMaterial
UnityEngine::Material* TMPro::TMP_SubMeshUI::GetMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::GetMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.GetMaterial
UnityEngine::Material* TMPro::TMP_SubMeshUI::GetMaterial(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::GetMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.CreateMaterialInstance
UnityEngine::Material* TMPro::TMP_SubMeshUI::CreateMaterialInstance(UnityEngine::Material* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::CreateMaterialInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMaterialInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method, source);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.GetSharedMaterial
UnityEngine::Material* TMPro::TMP_SubMeshUI::GetSharedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::GetSharedMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.SetSharedMaterial
void TMPro::TMP_SubMeshUI::SetSharedMaterial(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::SetSharedMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.get_mainTexture
UnityEngine::Texture* TMPro::TMP_SubMeshUI::get_mainTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::get_mainTexture");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mainTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Texture*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.get_material
UnityEngine::Material* TMPro::TMP_SubMeshUI::get_material() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::get_material");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_material", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.set_material
void TMPro::TMP_SubMeshUI::set_material(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::set_material");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_material", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.get_materialForRendering
UnityEngine::Material* TMPro::TMP_SubMeshUI::get_materialForRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::get_materialForRendering");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_materialForRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.get_canvasRenderer
UnityEngine::CanvasRenderer* TMPro::TMP_SubMeshUI::get_canvasRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::get_canvasRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canvasRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::CanvasRenderer*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.OnEnable
void TMPro::TMP_SubMeshUI::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.OnDisable
void TMPro::TMP_SubMeshUI::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.OnDestroy
void TMPro::TMP_SubMeshUI::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.OnTransformParentChanged
void TMPro::TMP_SubMeshUI::OnTransformParentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::OnTransformParentChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTransformParentChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.GetModifiedMaterial
UnityEngine::Material* TMPro::TMP_SubMeshUI::GetModifiedMaterial(UnityEngine::Material* baseMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::GetModifiedMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetModifiedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseMaterial)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method, baseMaterial);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.SetAllDirty
void TMPro::TMP_SubMeshUI::SetAllDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::SetAllDirty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAllDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.SetVerticesDirty
void TMPro::TMP_SubMeshUI::SetVerticesDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::SetVerticesDirty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVerticesDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.SetLayoutDirty
void TMPro::TMP_SubMeshUI::SetLayoutDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::SetLayoutDirty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayoutDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.SetMaterialDirty
void TMPro::TMP_SubMeshUI::SetMaterialDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::SetMaterialDirty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaterialDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.Cull
void TMPro::TMP_SubMeshUI::Cull(UnityEngine::Rect clipRect, bool validRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::Cull");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipRect), ::il2cpp_utils::ExtractType(validRect)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clipRect, validRect);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.UpdateGeometry
void TMPro::TMP_SubMeshUI::UpdateGeometry() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::UpdateGeometry");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.Rebuild
void TMPro::TMP_SubMeshUI::Rebuild(UnityEngine::UI::CanvasUpdate update) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::Rebuild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(update)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, update);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.UpdateMaterial
void TMPro::TMP_SubMeshUI::UpdateMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::UpdateMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.RecalculateClipping
void TMPro::TMP_SubMeshUI::RecalculateClipping() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::RecalculateClipping");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateClipping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_SubMeshUI.RecalculateMasking
void TMPro::TMP_SubMeshUI::RecalculateMasking() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_SubMeshUI::RecalculateMasking");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateMasking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.ITextElement
#include "TMPro/ITextElement.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.UI.CanvasUpdate
#include "UnityEngine/UI/CanvasUpdate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.ITextElement.get_sharedMaterial
UnityEngine::Material* TMPro::ITextElement::get_sharedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ITextElement::get_sharedMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.ITextElement.Rebuild
void TMPro::ITextElement::Rebuild(UnityEngine::UI::CanvasUpdate update) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ITextElement::Rebuild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(update)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, update);
}
// Autogenerated method: TMPro.ITextElement.GetInstanceID
int TMPro::ITextElement::GetInstanceID() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::ITextElement::GetInstanceID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInstanceID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TextAlignmentOptions
#include "TMPro/TextAlignmentOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions TopLeft
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_TopLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_TopLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "TopLeft"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions TopLeft
void TMPro::TextAlignmentOptions::_set_TopLeft(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_TopLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "TopLeft", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions Top
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_Top() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_Top");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "Top"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions Top
void TMPro::TextAlignmentOptions::_set_Top(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_Top");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "Top", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions TopRight
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_TopRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_TopRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "TopRight"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions TopRight
void TMPro::TextAlignmentOptions::_set_TopRight(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_TopRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "TopRight", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions TopJustified
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_TopJustified() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_TopJustified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "TopJustified"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions TopJustified
void TMPro::TextAlignmentOptions::_set_TopJustified(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_TopJustified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "TopJustified", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions TopFlush
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_TopFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_TopFlush");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "TopFlush"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions TopFlush
void TMPro::TextAlignmentOptions::_set_TopFlush(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_TopFlush");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "TopFlush", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions TopGeoAligned
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_TopGeoAligned() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_TopGeoAligned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "TopGeoAligned"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions TopGeoAligned
void TMPro::TextAlignmentOptions::_set_TopGeoAligned(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_TopGeoAligned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "TopGeoAligned", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions Left
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "Left"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions Left
void TMPro::TextAlignmentOptions::_set_Left(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions Center
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_Center() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_Center");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "Center"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions Center
void TMPro::TextAlignmentOptions::_set_Center(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_Center");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "Center", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions Right
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "Right"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions Right
void TMPro::TextAlignmentOptions::_set_Right(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions Justified
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_Justified() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_Justified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "Justified"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions Justified
void TMPro::TextAlignmentOptions::_set_Justified(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_Justified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "Justified", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions Flush
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_Flush");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "Flush"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions Flush
void TMPro::TextAlignmentOptions::_set_Flush(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_Flush");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "Flush", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions CenterGeoAligned
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_CenterGeoAligned() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_CenterGeoAligned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "CenterGeoAligned"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions CenterGeoAligned
void TMPro::TextAlignmentOptions::_set_CenterGeoAligned(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_CenterGeoAligned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "CenterGeoAligned", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions BottomLeft
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_BottomLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_BottomLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "BottomLeft"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions BottomLeft
void TMPro::TextAlignmentOptions::_set_BottomLeft(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_BottomLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "BottomLeft", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions Bottom
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_Bottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_Bottom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "Bottom"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions Bottom
void TMPro::TextAlignmentOptions::_set_Bottom(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_Bottom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "Bottom", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions BottomRight
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_BottomRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_BottomRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "BottomRight"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions BottomRight
void TMPro::TextAlignmentOptions::_set_BottomRight(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_BottomRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "BottomRight", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions BottomJustified
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_BottomJustified() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_BottomJustified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "BottomJustified"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions BottomJustified
void TMPro::TextAlignmentOptions::_set_BottomJustified(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_BottomJustified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "BottomJustified", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions BottomFlush
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_BottomFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_BottomFlush");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "BottomFlush"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions BottomFlush
void TMPro::TextAlignmentOptions::_set_BottomFlush(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_BottomFlush");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "BottomFlush", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions BottomGeoAligned
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_BottomGeoAligned() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_BottomGeoAligned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "BottomGeoAligned"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions BottomGeoAligned
void TMPro::TextAlignmentOptions::_set_BottomGeoAligned(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_BottomGeoAligned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "BottomGeoAligned", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions BaselineLeft
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_BaselineLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_BaselineLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "BaselineLeft"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions BaselineLeft
void TMPro::TextAlignmentOptions::_set_BaselineLeft(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_BaselineLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "BaselineLeft", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions Baseline
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_Baseline() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_Baseline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "Baseline"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions Baseline
void TMPro::TextAlignmentOptions::_set_Baseline(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_Baseline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "Baseline", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions BaselineRight
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_BaselineRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_BaselineRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "BaselineRight"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions BaselineRight
void TMPro::TextAlignmentOptions::_set_BaselineRight(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_BaselineRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "BaselineRight", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions BaselineJustified
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_BaselineJustified() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_BaselineJustified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "BaselineJustified"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions BaselineJustified
void TMPro::TextAlignmentOptions::_set_BaselineJustified(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_BaselineJustified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "BaselineJustified", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions BaselineFlush
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_BaselineFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_BaselineFlush");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "BaselineFlush"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions BaselineFlush
void TMPro::TextAlignmentOptions::_set_BaselineFlush(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_BaselineFlush");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "BaselineFlush", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions BaselineGeoAligned
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_BaselineGeoAligned() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_BaselineGeoAligned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "BaselineGeoAligned"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions BaselineGeoAligned
void TMPro::TextAlignmentOptions::_set_BaselineGeoAligned(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_BaselineGeoAligned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "BaselineGeoAligned", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions MidlineLeft
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_MidlineLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_MidlineLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "MidlineLeft"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions MidlineLeft
void TMPro::TextAlignmentOptions::_set_MidlineLeft(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_MidlineLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "MidlineLeft", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions Midline
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_Midline() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_Midline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "Midline"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions Midline
void TMPro::TextAlignmentOptions::_set_Midline(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_Midline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "Midline", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions MidlineRight
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_MidlineRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_MidlineRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "MidlineRight"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions MidlineRight
void TMPro::TextAlignmentOptions::_set_MidlineRight(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_MidlineRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "MidlineRight", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions MidlineJustified
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_MidlineJustified() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_MidlineJustified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "MidlineJustified"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions MidlineJustified
void TMPro::TextAlignmentOptions::_set_MidlineJustified(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_MidlineJustified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "MidlineJustified", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions MidlineFlush
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_MidlineFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_MidlineFlush");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "MidlineFlush"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions MidlineFlush
void TMPro::TextAlignmentOptions::_set_MidlineFlush(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_MidlineFlush");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "MidlineFlush", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions MidlineGeoAligned
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_MidlineGeoAligned() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_MidlineGeoAligned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "MidlineGeoAligned"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions MidlineGeoAligned
void TMPro::TextAlignmentOptions::_set_MidlineGeoAligned(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_MidlineGeoAligned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "MidlineGeoAligned", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions CaplineLeft
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_CaplineLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_CaplineLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "CaplineLeft"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions CaplineLeft
void TMPro::TextAlignmentOptions::_set_CaplineLeft(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_CaplineLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "CaplineLeft", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions Capline
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_Capline() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_Capline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "Capline"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions Capline
void TMPro::TextAlignmentOptions::_set_Capline(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_Capline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "Capline", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions CaplineRight
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_CaplineRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_CaplineRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "CaplineRight"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions CaplineRight
void TMPro::TextAlignmentOptions::_set_CaplineRight(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_CaplineRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "CaplineRight", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions CaplineJustified
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_CaplineJustified() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_CaplineJustified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "CaplineJustified"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions CaplineJustified
void TMPro::TextAlignmentOptions::_set_CaplineJustified(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_CaplineJustified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "CaplineJustified", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions CaplineFlush
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_CaplineFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_CaplineFlush");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "CaplineFlush"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions CaplineFlush
void TMPro::TextAlignmentOptions::_set_CaplineFlush(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_CaplineFlush");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "CaplineFlush", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextAlignmentOptions CaplineGeoAligned
TMPro::TextAlignmentOptions TMPro::TextAlignmentOptions::_get_CaplineGeoAligned() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_get_CaplineGeoAligned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextAlignmentOptions>("TMPro", "TextAlignmentOptions", "CaplineGeoAligned"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextAlignmentOptions CaplineGeoAligned
void TMPro::TextAlignmentOptions::_set_CaplineGeoAligned(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextAlignmentOptions::_set_CaplineGeoAligned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextAlignmentOptions", "CaplineGeoAligned", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro._HorizontalAlignmentOptions
#include "TMPro/_HorizontalAlignmentOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro._HorizontalAlignmentOptions Left
TMPro::_HorizontalAlignmentOptions TMPro::_HorizontalAlignmentOptions::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_HorizontalAlignmentOptions::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::_HorizontalAlignmentOptions>("TMPro", "_HorizontalAlignmentOptions", "Left"));
}
// Autogenerated static field setter
// Set static field: static public TMPro._HorizontalAlignmentOptions Left
void TMPro::_HorizontalAlignmentOptions::_set_Left(TMPro::_HorizontalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_HorizontalAlignmentOptions::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "_HorizontalAlignmentOptions", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro._HorizontalAlignmentOptions Center
TMPro::_HorizontalAlignmentOptions TMPro::_HorizontalAlignmentOptions::_get_Center() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_HorizontalAlignmentOptions::_get_Center");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::_HorizontalAlignmentOptions>("TMPro", "_HorizontalAlignmentOptions", "Center"));
}
// Autogenerated static field setter
// Set static field: static public TMPro._HorizontalAlignmentOptions Center
void TMPro::_HorizontalAlignmentOptions::_set_Center(TMPro::_HorizontalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_HorizontalAlignmentOptions::_set_Center");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "_HorizontalAlignmentOptions", "Center", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro._HorizontalAlignmentOptions Right
TMPro::_HorizontalAlignmentOptions TMPro::_HorizontalAlignmentOptions::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_HorizontalAlignmentOptions::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::_HorizontalAlignmentOptions>("TMPro", "_HorizontalAlignmentOptions", "Right"));
}
// Autogenerated static field setter
// Set static field: static public TMPro._HorizontalAlignmentOptions Right
void TMPro::_HorizontalAlignmentOptions::_set_Right(TMPro::_HorizontalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_HorizontalAlignmentOptions::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "_HorizontalAlignmentOptions", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro._HorizontalAlignmentOptions Justified
TMPro::_HorizontalAlignmentOptions TMPro::_HorizontalAlignmentOptions::_get_Justified() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_HorizontalAlignmentOptions::_get_Justified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::_HorizontalAlignmentOptions>("TMPro", "_HorizontalAlignmentOptions", "Justified"));
}
// Autogenerated static field setter
// Set static field: static public TMPro._HorizontalAlignmentOptions Justified
void TMPro::_HorizontalAlignmentOptions::_set_Justified(TMPro::_HorizontalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_HorizontalAlignmentOptions::_set_Justified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "_HorizontalAlignmentOptions", "Justified", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro._HorizontalAlignmentOptions Flush
TMPro::_HorizontalAlignmentOptions TMPro::_HorizontalAlignmentOptions::_get_Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_HorizontalAlignmentOptions::_get_Flush");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::_HorizontalAlignmentOptions>("TMPro", "_HorizontalAlignmentOptions", "Flush"));
}
// Autogenerated static field setter
// Set static field: static public TMPro._HorizontalAlignmentOptions Flush
void TMPro::_HorizontalAlignmentOptions::_set_Flush(TMPro::_HorizontalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_HorizontalAlignmentOptions::_set_Flush");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "_HorizontalAlignmentOptions", "Flush", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro._HorizontalAlignmentOptions Geometry
TMPro::_HorizontalAlignmentOptions TMPro::_HorizontalAlignmentOptions::_get_Geometry() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_HorizontalAlignmentOptions::_get_Geometry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::_HorizontalAlignmentOptions>("TMPro", "_HorizontalAlignmentOptions", "Geometry"));
}
// Autogenerated static field setter
// Set static field: static public TMPro._HorizontalAlignmentOptions Geometry
void TMPro::_HorizontalAlignmentOptions::_set_Geometry(TMPro::_HorizontalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_HorizontalAlignmentOptions::_set_Geometry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "_HorizontalAlignmentOptions", "Geometry", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro._VerticalAlignmentOptions
#include "TMPro/_VerticalAlignmentOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro._VerticalAlignmentOptions Top
TMPro::_VerticalAlignmentOptions TMPro::_VerticalAlignmentOptions::_get_Top() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_VerticalAlignmentOptions::_get_Top");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::_VerticalAlignmentOptions>("TMPro", "_VerticalAlignmentOptions", "Top"));
}
// Autogenerated static field setter
// Set static field: static public TMPro._VerticalAlignmentOptions Top
void TMPro::_VerticalAlignmentOptions::_set_Top(TMPro::_VerticalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_VerticalAlignmentOptions::_set_Top");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "_VerticalAlignmentOptions", "Top", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro._VerticalAlignmentOptions Middle
TMPro::_VerticalAlignmentOptions TMPro::_VerticalAlignmentOptions::_get_Middle() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_VerticalAlignmentOptions::_get_Middle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::_VerticalAlignmentOptions>("TMPro", "_VerticalAlignmentOptions", "Middle"));
}
// Autogenerated static field setter
// Set static field: static public TMPro._VerticalAlignmentOptions Middle
void TMPro::_VerticalAlignmentOptions::_set_Middle(TMPro::_VerticalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_VerticalAlignmentOptions::_set_Middle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "_VerticalAlignmentOptions", "Middle", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro._VerticalAlignmentOptions Bottom
TMPro::_VerticalAlignmentOptions TMPro::_VerticalAlignmentOptions::_get_Bottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_VerticalAlignmentOptions::_get_Bottom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::_VerticalAlignmentOptions>("TMPro", "_VerticalAlignmentOptions", "Bottom"));
}
// Autogenerated static field setter
// Set static field: static public TMPro._VerticalAlignmentOptions Bottom
void TMPro::_VerticalAlignmentOptions::_set_Bottom(TMPro::_VerticalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_VerticalAlignmentOptions::_set_Bottom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "_VerticalAlignmentOptions", "Bottom", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro._VerticalAlignmentOptions Baseline
TMPro::_VerticalAlignmentOptions TMPro::_VerticalAlignmentOptions::_get_Baseline() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_VerticalAlignmentOptions::_get_Baseline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::_VerticalAlignmentOptions>("TMPro", "_VerticalAlignmentOptions", "Baseline"));
}
// Autogenerated static field setter
// Set static field: static public TMPro._VerticalAlignmentOptions Baseline
void TMPro::_VerticalAlignmentOptions::_set_Baseline(TMPro::_VerticalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_VerticalAlignmentOptions::_set_Baseline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "_VerticalAlignmentOptions", "Baseline", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro._VerticalAlignmentOptions Geometry
TMPro::_VerticalAlignmentOptions TMPro::_VerticalAlignmentOptions::_get_Geometry() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_VerticalAlignmentOptions::_get_Geometry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::_VerticalAlignmentOptions>("TMPro", "_VerticalAlignmentOptions", "Geometry"));
}
// Autogenerated static field setter
// Set static field: static public TMPro._VerticalAlignmentOptions Geometry
void TMPro::_VerticalAlignmentOptions::_set_Geometry(TMPro::_VerticalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_VerticalAlignmentOptions::_set_Geometry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "_VerticalAlignmentOptions", "Geometry", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro._VerticalAlignmentOptions Capline
TMPro::_VerticalAlignmentOptions TMPro::_VerticalAlignmentOptions::_get_Capline() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_VerticalAlignmentOptions::_get_Capline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::_VerticalAlignmentOptions>("TMPro", "_VerticalAlignmentOptions", "Capline"));
}
// Autogenerated static field setter
// Set static field: static public TMPro._VerticalAlignmentOptions Capline
void TMPro::_VerticalAlignmentOptions::_set_Capline(TMPro::_VerticalAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::_VerticalAlignmentOptions::_set_Capline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "_VerticalAlignmentOptions", "Capline", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TextRenderFlags
#include "TMPro/TextRenderFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TextRenderFlags DontRender
TMPro::TextRenderFlags TMPro::TextRenderFlags::_get_DontRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextRenderFlags::_get_DontRender");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextRenderFlags>("TMPro", "TextRenderFlags", "DontRender"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextRenderFlags DontRender
void TMPro::TextRenderFlags::_set_DontRender(TMPro::TextRenderFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextRenderFlags::_set_DontRender");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextRenderFlags", "DontRender", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextRenderFlags Render
TMPro::TextRenderFlags TMPro::TextRenderFlags::_get_Render() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextRenderFlags::_get_Render");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextRenderFlags>("TMPro", "TextRenderFlags", "Render"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextRenderFlags Render
void TMPro::TextRenderFlags::_set_Render(TMPro::TextRenderFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextRenderFlags::_set_Render");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextRenderFlags", "Render", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_TextElementType
#include "TMPro/TMP_TextElementType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_TextElementType Character
TMPro::TMP_TextElementType TMPro::TMP_TextElementType::_get_Character() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElementType::_get_Character");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_TextElementType>("TMPro", "TMP_TextElementType", "Character"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_TextElementType Character
void TMPro::TMP_TextElementType::_set_Character(TMPro::TMP_TextElementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElementType::_set_Character");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextElementType", "Character", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_TextElementType Sprite
TMPro::TMP_TextElementType TMPro::TMP_TextElementType::_get_Sprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElementType::_get_Sprite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_TextElementType>("TMPro", "TMP_TextElementType", "Sprite"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_TextElementType Sprite
void TMPro::TMP_TextElementType::_set_Sprite(TMPro::TMP_TextElementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElementType::_set_Sprite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextElementType", "Sprite", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.MaskingTypes
#include "TMPro/MaskingTypes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.MaskingTypes MaskOff
TMPro::MaskingTypes TMPro::MaskingTypes::_get_MaskOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaskingTypes::_get_MaskOff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::MaskingTypes>("TMPro", "MaskingTypes", "MaskOff"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.MaskingTypes MaskOff
void TMPro::MaskingTypes::_set_MaskOff(TMPro::MaskingTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaskingTypes::_set_MaskOff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "MaskingTypes", "MaskOff", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.MaskingTypes MaskHard
TMPro::MaskingTypes TMPro::MaskingTypes::_get_MaskHard() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaskingTypes::_get_MaskHard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::MaskingTypes>("TMPro", "MaskingTypes", "MaskHard"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.MaskingTypes MaskHard
void TMPro::MaskingTypes::_set_MaskHard(TMPro::MaskingTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaskingTypes::_set_MaskHard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "MaskingTypes", "MaskHard", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.MaskingTypes MaskSoft
TMPro::MaskingTypes TMPro::MaskingTypes::_get_MaskSoft() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaskingTypes::_get_MaskSoft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::MaskingTypes>("TMPro", "MaskingTypes", "MaskSoft"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.MaskingTypes MaskSoft
void TMPro::MaskingTypes::_set_MaskSoft(TMPro::MaskingTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaskingTypes::_set_MaskSoft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "MaskingTypes", "MaskSoft", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TextOverflowModes
#include "TMPro/TextOverflowModes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TextOverflowModes Overflow
TMPro::TextOverflowModes TMPro::TextOverflowModes::_get_Overflow() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_get_Overflow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextOverflowModes>("TMPro", "TextOverflowModes", "Overflow"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextOverflowModes Overflow
void TMPro::TextOverflowModes::_set_Overflow(TMPro::TextOverflowModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_set_Overflow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextOverflowModes", "Overflow", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextOverflowModes Ellipsis
TMPro::TextOverflowModes TMPro::TextOverflowModes::_get_Ellipsis() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_get_Ellipsis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextOverflowModes>("TMPro", "TextOverflowModes", "Ellipsis"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextOverflowModes Ellipsis
void TMPro::TextOverflowModes::_set_Ellipsis(TMPro::TextOverflowModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_set_Ellipsis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextOverflowModes", "Ellipsis", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextOverflowModes Masking
TMPro::TextOverflowModes TMPro::TextOverflowModes::_get_Masking() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_get_Masking");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextOverflowModes>("TMPro", "TextOverflowModes", "Masking"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextOverflowModes Masking
void TMPro::TextOverflowModes::_set_Masking(TMPro::TextOverflowModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_set_Masking");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextOverflowModes", "Masking", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextOverflowModes Truncate
TMPro::TextOverflowModes TMPro::TextOverflowModes::_get_Truncate() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_get_Truncate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextOverflowModes>("TMPro", "TextOverflowModes", "Truncate"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextOverflowModes Truncate
void TMPro::TextOverflowModes::_set_Truncate(TMPro::TextOverflowModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_set_Truncate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextOverflowModes", "Truncate", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextOverflowModes ScrollRect
TMPro::TextOverflowModes TMPro::TextOverflowModes::_get_ScrollRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_get_ScrollRect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextOverflowModes>("TMPro", "TextOverflowModes", "ScrollRect"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextOverflowModes ScrollRect
void TMPro::TextOverflowModes::_set_ScrollRect(TMPro::TextOverflowModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_set_ScrollRect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextOverflowModes", "ScrollRect", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextOverflowModes Page
TMPro::TextOverflowModes TMPro::TextOverflowModes::_get_Page() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_get_Page");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextOverflowModes>("TMPro", "TextOverflowModes", "Page"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextOverflowModes Page
void TMPro::TextOverflowModes::_set_Page(TMPro::TextOverflowModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_set_Page");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextOverflowModes", "Page", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextOverflowModes Linked
TMPro::TextOverflowModes TMPro::TextOverflowModes::_get_Linked() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_get_Linked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextOverflowModes>("TMPro", "TextOverflowModes", "Linked"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextOverflowModes Linked
void TMPro::TextOverflowModes::_set_Linked(TMPro::TextOverflowModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_set_Linked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextOverflowModes", "Linked", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.MaskingOffsetMode
#include "TMPro/MaskingOffsetMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.MaskingOffsetMode Percentage
TMPro::MaskingOffsetMode TMPro::MaskingOffsetMode::_get_Percentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaskingOffsetMode::_get_Percentage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::MaskingOffsetMode>("TMPro", "MaskingOffsetMode", "Percentage"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.MaskingOffsetMode Percentage
void TMPro::MaskingOffsetMode::_set_Percentage(TMPro::MaskingOffsetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaskingOffsetMode::_set_Percentage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "MaskingOffsetMode", "Percentage", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.MaskingOffsetMode Pixel
TMPro::MaskingOffsetMode TMPro::MaskingOffsetMode::_get_Pixel() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaskingOffsetMode::_get_Pixel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::MaskingOffsetMode>("TMPro", "MaskingOffsetMode", "Pixel"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.MaskingOffsetMode Pixel
void TMPro::MaskingOffsetMode::_set_Pixel(TMPro::MaskingOffsetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaskingOffsetMode::_set_Pixel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "MaskingOffsetMode", "Pixel", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TextureMappingOptions
#include "TMPro/TextureMappingOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TextureMappingOptions Character
TMPro::TextureMappingOptions TMPro::TextureMappingOptions::_get_Character() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextureMappingOptions::_get_Character");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextureMappingOptions>("TMPro", "TextureMappingOptions", "Character"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextureMappingOptions Character
void TMPro::TextureMappingOptions::_set_Character(TMPro::TextureMappingOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextureMappingOptions::_set_Character");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextureMappingOptions", "Character", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextureMappingOptions Line
TMPro::TextureMappingOptions TMPro::TextureMappingOptions::_get_Line() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextureMappingOptions::_get_Line");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextureMappingOptions>("TMPro", "TextureMappingOptions", "Line"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextureMappingOptions Line
void TMPro::TextureMappingOptions::_set_Line(TMPro::TextureMappingOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextureMappingOptions::_set_Line");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextureMappingOptions", "Line", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextureMappingOptions Paragraph
TMPro::TextureMappingOptions TMPro::TextureMappingOptions::_get_Paragraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextureMappingOptions::_get_Paragraph");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextureMappingOptions>("TMPro", "TextureMappingOptions", "Paragraph"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextureMappingOptions Paragraph
void TMPro::TextureMappingOptions::_set_Paragraph(TMPro::TextureMappingOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextureMappingOptions::_set_Paragraph");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextureMappingOptions", "Paragraph", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextureMappingOptions MatchAspect
TMPro::TextureMappingOptions TMPro::TextureMappingOptions::_get_MatchAspect() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextureMappingOptions::_get_MatchAspect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextureMappingOptions>("TMPro", "TextureMappingOptions", "MatchAspect"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextureMappingOptions MatchAspect
void TMPro::TextureMappingOptions::_set_MatchAspect(TMPro::TextureMappingOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextureMappingOptions::_set_MatchAspect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextureMappingOptions", "MatchAspect", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.FontStyles
#include "TMPro/FontStyles.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles Normal
TMPro::FontStyles TMPro::FontStyles::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontStyles>("TMPro", "FontStyles", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles Normal
void TMPro::FontStyles::_set_Normal(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles Bold
TMPro::FontStyles TMPro::FontStyles::_get_Bold() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_get_Bold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontStyles>("TMPro", "FontStyles", "Bold"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles Bold
void TMPro::FontStyles::_set_Bold(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_set_Bold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "Bold", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles Italic
TMPro::FontStyles TMPro::FontStyles::_get_Italic() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_get_Italic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontStyles>("TMPro", "FontStyles", "Italic"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles Italic
void TMPro::FontStyles::_set_Italic(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_set_Italic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "Italic", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles Underline
TMPro::FontStyles TMPro::FontStyles::_get_Underline() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_get_Underline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontStyles>("TMPro", "FontStyles", "Underline"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles Underline
void TMPro::FontStyles::_set_Underline(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_set_Underline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "Underline", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles LowerCase
TMPro::FontStyles TMPro::FontStyles::_get_LowerCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_get_LowerCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontStyles>("TMPro", "FontStyles", "LowerCase"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles LowerCase
void TMPro::FontStyles::_set_LowerCase(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_set_LowerCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "LowerCase", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles UpperCase
TMPro::FontStyles TMPro::FontStyles::_get_UpperCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_get_UpperCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontStyles>("TMPro", "FontStyles", "UpperCase"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles UpperCase
void TMPro::FontStyles::_set_UpperCase(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_set_UpperCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "UpperCase", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles SmallCaps
TMPro::FontStyles TMPro::FontStyles::_get_SmallCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_get_SmallCaps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontStyles>("TMPro", "FontStyles", "SmallCaps"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles SmallCaps
void TMPro::FontStyles::_set_SmallCaps(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_set_SmallCaps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "SmallCaps", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles Strikethrough
TMPro::FontStyles TMPro::FontStyles::_get_Strikethrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_get_Strikethrough");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontStyles>("TMPro", "FontStyles", "Strikethrough"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles Strikethrough
void TMPro::FontStyles::_set_Strikethrough(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_set_Strikethrough");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "Strikethrough", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles Superscript
TMPro::FontStyles TMPro::FontStyles::_get_Superscript() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_get_Superscript");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontStyles>("TMPro", "FontStyles", "Superscript"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles Superscript
void TMPro::FontStyles::_set_Superscript(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_set_Superscript");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "Superscript", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles Subscript
TMPro::FontStyles TMPro::FontStyles::_get_Subscript() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_get_Subscript");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontStyles>("TMPro", "FontStyles", "Subscript"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles Subscript
void TMPro::FontStyles::_set_Subscript(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_set_Subscript");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "Subscript", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles Highlight
TMPro::FontStyles TMPro::FontStyles::_get_Highlight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_get_Highlight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontStyles>("TMPro", "FontStyles", "Highlight"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles Highlight
void TMPro::FontStyles::_set_Highlight(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_set_Highlight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "Highlight", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.FontWeight
#include "TMPro/FontWeight.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight Thin
TMPro::FontWeight TMPro::FontWeight::_get_Thin() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_get_Thin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontWeight>("TMPro", "FontWeight", "Thin"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight Thin
void TMPro::FontWeight::_set_Thin(TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_set_Thin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "Thin", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight ExtraLight
TMPro::FontWeight TMPro::FontWeight::_get_ExtraLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_get_ExtraLight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontWeight>("TMPro", "FontWeight", "ExtraLight"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight ExtraLight
void TMPro::FontWeight::_set_ExtraLight(TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_set_ExtraLight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "ExtraLight", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight Light
TMPro::FontWeight TMPro::FontWeight::_get_Light() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_get_Light");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontWeight>("TMPro", "FontWeight", "Light"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight Light
void TMPro::FontWeight::_set_Light(TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_set_Light");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "Light", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight Regular
TMPro::FontWeight TMPro::FontWeight::_get_Regular() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_get_Regular");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontWeight>("TMPro", "FontWeight", "Regular"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight Regular
void TMPro::FontWeight::_set_Regular(TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_set_Regular");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "Regular", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight Medium
TMPro::FontWeight TMPro::FontWeight::_get_Medium() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_get_Medium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontWeight>("TMPro", "FontWeight", "Medium"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight Medium
void TMPro::FontWeight::_set_Medium(TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_set_Medium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "Medium", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight SemiBold
TMPro::FontWeight TMPro::FontWeight::_get_SemiBold() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_get_SemiBold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontWeight>("TMPro", "FontWeight", "SemiBold"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight SemiBold
void TMPro::FontWeight::_set_SemiBold(TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_set_SemiBold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "SemiBold", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight Bold
TMPro::FontWeight TMPro::FontWeight::_get_Bold() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_get_Bold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontWeight>("TMPro", "FontWeight", "Bold"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight Bold
void TMPro::FontWeight::_set_Bold(TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_set_Bold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "Bold", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight Heavy
TMPro::FontWeight TMPro::FontWeight::_get_Heavy() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_get_Heavy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontWeight>("TMPro", "FontWeight", "Heavy"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight Heavy
void TMPro::FontWeight::_set_Heavy(TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_set_Heavy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "Heavy", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight Black
TMPro::FontWeight TMPro::FontWeight::_get_Black() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_get_Black");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontWeight>("TMPro", "FontWeight", "Black"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight Black
void TMPro::FontWeight::_set_Black(TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_set_Black");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "Black", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: TMPro.TMP_Character
#include "TMPro/TMP_Character.hpp"
// Including type: TMPro.TMP_TextElement
#include "TMPro/TMP_TextElement.hpp"
// Including type: TMPro.TMP_FontAsset
#include "TMPro/TMP_FontAsset.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: TMPro.TMP_ColorGradient
#include "TMPro/TMP_ColorGradient.hpp"
// Including type: TMPro.TMP_SpriteAsset
#include "TMPro/TMP_SpriteAsset.hpp"
// Including type: TMPro.TMP_TextInfo
#include "TMPro/TMP_TextInfo.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: TMPro.TMP_SpriteAnimator
#include "TMPro/TMP_SpriteAnimator.hpp"
// Including type: UnityEngine.UI.LayoutElement
#include "UnityEngine/UI/LayoutElement.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: TMPro.TMP_VertexDataUpdateFlags
#include "TMPro/TMP_VertexDataUpdateFlags.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected UnityEngine.Color32 s_colorWhite
UnityEngine::Color32 TMPro::TMP_Text::_get_s_colorWhite() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_get_s_colorWhite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Color32>("TMPro", "TMP_Text", "s_colorWhite"));
}
// Autogenerated static field setter
// Set static field: static protected UnityEngine.Color32 s_colorWhite
void TMPro::TMP_Text::_set_s_colorWhite(UnityEngine::Color32 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_set_s_colorWhite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "s_colorWhite", value));
}
// Autogenerated static field getter
// Get static field: static protected UnityEngine.Vector2 k_LargePositiveVector2
UnityEngine::Vector2 TMPro::TMP_Text::_get_k_LargePositiveVector2() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_get_k_LargePositiveVector2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("TMPro", "TMP_Text", "k_LargePositiveVector2"));
}
// Autogenerated static field setter
// Set static field: static protected UnityEngine.Vector2 k_LargePositiveVector2
void TMPro::TMP_Text::_set_k_LargePositiveVector2(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_set_k_LargePositiveVector2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "k_LargePositiveVector2", value));
}
// Autogenerated static field getter
// Get static field: static protected UnityEngine.Vector2 k_LargeNegativeVector2
UnityEngine::Vector2 TMPro::TMP_Text::_get_k_LargeNegativeVector2() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_get_k_LargeNegativeVector2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("TMPro", "TMP_Text", "k_LargeNegativeVector2"));
}
// Autogenerated static field setter
// Set static field: static protected UnityEngine.Vector2 k_LargeNegativeVector2
void TMPro::TMP_Text::_set_k_LargeNegativeVector2(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_set_k_LargeNegativeVector2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "k_LargeNegativeVector2", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Single k_LargePositiveFloat
float TMPro::TMP_Text::_get_k_LargePositiveFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_get_k_LargePositiveFloat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("TMPro", "TMP_Text", "k_LargePositiveFloat"));
}
// Autogenerated static field setter
// Set static field: static protected System.Single k_LargePositiveFloat
void TMPro::TMP_Text::_set_k_LargePositiveFloat(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_set_k_LargePositiveFloat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "k_LargePositiveFloat", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Single k_LargeNegativeFloat
float TMPro::TMP_Text::_get_k_LargeNegativeFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_get_k_LargeNegativeFloat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("TMPro", "TMP_Text", "k_LargeNegativeFloat"));
}
// Autogenerated static field setter
// Set static field: static protected System.Single k_LargeNegativeFloat
void TMPro::TMP_Text::_set_k_LargeNegativeFloat(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_set_k_LargeNegativeFloat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "k_LargeNegativeFloat", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Int32 k_LargePositiveInt
int TMPro::TMP_Text::_get_k_LargePositiveInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_get_k_LargePositiveInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "TMP_Text", "k_LargePositiveInt"));
}
// Autogenerated static field setter
// Set static field: static protected System.Int32 k_LargePositiveInt
void TMPro::TMP_Text::_set_k_LargePositiveInt(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_set_k_LargePositiveInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "k_LargePositiveInt", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Int32 k_LargeNegativeInt
int TMPro::TMP_Text::_get_k_LargeNegativeInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_get_k_LargeNegativeInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "TMP_Text", "k_LargeNegativeInt"));
}
// Autogenerated static field setter
// Set static field: static protected System.Int32 k_LargeNegativeInt
void TMPro::TMP_Text::_set_k_LargeNegativeInt(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_set_k_LargeNegativeInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "k_LargeNegativeInt", value));
}
// Autogenerated method: TMPro.TMP_Text.get_text
::Il2CppString* TMPro::TMP_Text::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_text
void TMPro::TMP_Text::set_text(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_isRightToLeftText
bool TMPro::TMP_Text::get_isRightToLeftText() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_isRightToLeftText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isRightToLeftText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_isRightToLeftText
void TMPro::TMP_Text::set_isRightToLeftText(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_isRightToLeftText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isRightToLeftText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_font
TMPro::TMP_FontAsset* TMPro::TMP_Text::get_font() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_font");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_font", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_FontAsset*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_font
void TMPro::TMP_Text::set_font(TMPro::TMP_FontAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_font");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_font", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontSharedMaterial
UnityEngine::Material* TMPro::TMP_Text::get_fontSharedMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_fontSharedMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontSharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontSharedMaterial
void TMPro::TMP_Text::set_fontSharedMaterial(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_fontSharedMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontSharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontSharedMaterials
::Array<UnityEngine::Material*>* TMPro::TMP_Text::get_fontSharedMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_fontSharedMaterials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontSharedMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Material*>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontSharedMaterials
void TMPro::TMP_Text::set_fontSharedMaterials(::Array<UnityEngine::Material*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_fontSharedMaterials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontSharedMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontMaterial
UnityEngine::Material* TMPro::TMP_Text::get_fontMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_fontMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontMaterial
void TMPro::TMP_Text::set_fontMaterial(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_fontMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontMaterials
::Array<UnityEngine::Material*>* TMPro::TMP_Text::get_fontMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_fontMaterials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Material*>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontMaterials
void TMPro::TMP_Text::set_fontMaterials(::Array<UnityEngine::Material*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_fontMaterials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_alpha
float TMPro::TMP_Text::get_alpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_alpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_alpha
void TMPro::TMP_Text::set_alpha(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_alpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_alpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_enableVertexGradient
bool TMPro::TMP_Text::get_enableVertexGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_enableVertexGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableVertexGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_enableVertexGradient
void TMPro::TMP_Text::set_enableVertexGradient(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_enableVertexGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableVertexGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_colorGradient
TMPro::VertexGradient TMPro::TMP_Text::get_colorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_colorGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::VertexGradient, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_colorGradient
void TMPro::TMP_Text::set_colorGradient(TMPro::VertexGradient value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_colorGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colorGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_colorGradientPreset
TMPro::TMP_ColorGradient* TMPro::TMP_Text::get_colorGradientPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_colorGradientPreset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorGradientPreset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_ColorGradient*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_colorGradientPreset
void TMPro::TMP_Text::set_colorGradientPreset(TMPro::TMP_ColorGradient* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_colorGradientPreset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colorGradientPreset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_spriteAsset
TMPro::TMP_SpriteAsset* TMPro::TMP_Text::get_spriteAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_spriteAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spriteAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SpriteAsset*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_spriteAsset
void TMPro::TMP_Text::set_spriteAsset(TMPro::TMP_SpriteAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_spriteAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_spriteAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_tintAllSprites
bool TMPro::TMP_Text::get_tintAllSprites() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_tintAllSprites");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tintAllSprites", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_tintAllSprites
void TMPro::TMP_Text::set_tintAllSprites(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_tintAllSprites");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tintAllSprites", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_overrideColorTags
bool TMPro::TMP_Text::get_overrideColorTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_overrideColorTags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideColorTags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_overrideColorTags
void TMPro::TMP_Text::set_overrideColorTags(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_overrideColorTags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_overrideColorTags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_faceColor
UnityEngine::Color32 TMPro::TMP_Text::get_faceColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_faceColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_faceColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color32, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_faceColor
void TMPro::TMP_Text::set_faceColor(UnityEngine::Color32 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_faceColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_faceColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_outlineColor
UnityEngine::Color32 TMPro::TMP_Text::get_outlineColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_outlineColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_outlineColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color32, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_outlineColor
void TMPro::TMP_Text::set_outlineColor(UnityEngine::Color32 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_outlineColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_outlineColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_outlineWidth
float TMPro::TMP_Text::get_outlineWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_outlineWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_outlineWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_outlineWidth
void TMPro::TMP_Text::set_outlineWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_outlineWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_outlineWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontSize
float TMPro::TMP_Text::get_fontSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_fontSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontSize
void TMPro::TMP_Text::set_fontSize(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_fontSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontScale
float TMPro::TMP_Text::get_fontScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_fontScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_fontWeight
TMPro::FontWeight TMPro::TMP_Text::get_fontWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_fontWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::FontWeight, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontWeight
void TMPro::TMP_Text::set_fontWeight(TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_fontWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_pixelsPerUnit
float TMPro::TMP_Text::get_pixelsPerUnit() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_pixelsPerUnit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pixelsPerUnit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_enableAutoSizing
bool TMPro::TMP_Text::get_enableAutoSizing() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_enableAutoSizing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableAutoSizing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_enableAutoSizing
void TMPro::TMP_Text::set_enableAutoSizing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_enableAutoSizing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableAutoSizing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontSizeMin
float TMPro::TMP_Text::get_fontSizeMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_fontSizeMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontSizeMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontSizeMin
void TMPro::TMP_Text::set_fontSizeMin(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_fontSizeMin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontSizeMin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontSizeMax
float TMPro::TMP_Text::get_fontSizeMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_fontSizeMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontSizeMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontSizeMax
void TMPro::TMP_Text::set_fontSizeMax(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_fontSizeMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontSizeMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontStyle
TMPro::FontStyles TMPro::TMP_Text::get_fontStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_fontStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fontStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::FontStyles, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontStyle
void TMPro::TMP_Text::set_fontStyle(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_fontStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fontStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_isUsingBold
bool TMPro::TMP_Text::get_isUsingBold() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_isUsingBold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isUsingBold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_alignment
TMPro::TextAlignmentOptions TMPro::TMP_Text::get_alignment() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_alignment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TextAlignmentOptions, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_alignment
void TMPro::TMP_Text::set_alignment(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_alignment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_alignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_characterSpacing
float TMPro::TMP_Text::get_characterSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_characterSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_characterSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_characterSpacing
void TMPro::TMP_Text::set_characterSpacing(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_characterSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_characterSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_wordSpacing
float TMPro::TMP_Text::get_wordSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_wordSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_wordSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_wordSpacing
void TMPro::TMP_Text::set_wordSpacing(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_wordSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_wordSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_lineSpacing
float TMPro::TMP_Text::get_lineSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_lineSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_lineSpacing
void TMPro::TMP_Text::set_lineSpacing(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_lineSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lineSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_lineSpacingAdjustment
float TMPro::TMP_Text::get_lineSpacingAdjustment() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_lineSpacingAdjustment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineSpacingAdjustment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_lineSpacingAdjustment
void TMPro::TMP_Text::set_lineSpacingAdjustment(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_lineSpacingAdjustment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lineSpacingAdjustment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_paragraphSpacing
float TMPro::TMP_Text::get_paragraphSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_paragraphSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_paragraphSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_paragraphSpacing
void TMPro::TMP_Text::set_paragraphSpacing(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_paragraphSpacing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_paragraphSpacing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_characterWidthAdjustment
float TMPro::TMP_Text::get_characterWidthAdjustment() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_characterWidthAdjustment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_characterWidthAdjustment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_characterWidthAdjustment
void TMPro::TMP_Text::set_characterWidthAdjustment(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_characterWidthAdjustment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_characterWidthAdjustment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_enableWordWrapping
bool TMPro::TMP_Text::get_enableWordWrapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_enableWordWrapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableWordWrapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_enableWordWrapping
void TMPro::TMP_Text::set_enableWordWrapping(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_enableWordWrapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableWordWrapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_wordWrappingRatios
float TMPro::TMP_Text::get_wordWrappingRatios() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_wordWrappingRatios");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_wordWrappingRatios", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_wordWrappingRatios
void TMPro::TMP_Text::set_wordWrappingRatios(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_wordWrappingRatios");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_wordWrappingRatios", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_overflowMode
TMPro::TextOverflowModes TMPro::TMP_Text::get_overflowMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_overflowMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overflowMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TextOverflowModes, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_overflowMode
void TMPro::TMP_Text::set_overflowMode(TMPro::TextOverflowModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_overflowMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_overflowMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_isTextOverflowing
bool TMPro::TMP_Text::get_isTextOverflowing() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_isTextOverflowing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isTextOverflowing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_firstOverflowCharacterIndex
int TMPro::TMP_Text::get_firstOverflowCharacterIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_firstOverflowCharacterIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_firstOverflowCharacterIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_linkedTextComponent
TMPro::TMP_Text* TMPro::TMP_Text::get_linkedTextComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_linkedTextComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_linkedTextComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_Text*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_linkedTextComponent
void TMPro::TMP_Text::set_linkedTextComponent(TMPro::TMP_Text* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_linkedTextComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_linkedTextComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_isLinkedTextComponent
bool TMPro::TMP_Text::get_isLinkedTextComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_isLinkedTextComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isLinkedTextComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_isLinkedTextComponent
void TMPro::TMP_Text::set_isLinkedTextComponent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_isLinkedTextComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isLinkedTextComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_isTextTruncated
bool TMPro::TMP_Text::get_isTextTruncated() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_isTextTruncated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isTextTruncated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_enableKerning
bool TMPro::TMP_Text::get_enableKerning() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_enableKerning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableKerning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_enableKerning
void TMPro::TMP_Text::set_enableKerning(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_enableKerning");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableKerning", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_extraPadding
bool TMPro::TMP_Text::get_extraPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_extraPadding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_extraPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_extraPadding
void TMPro::TMP_Text::set_extraPadding(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_extraPadding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_extraPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_richText
bool TMPro::TMP_Text::get_richText() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_richText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_richText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_richText
void TMPro::TMP_Text::set_richText(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_richText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_richText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_parseCtrlCharacters
bool TMPro::TMP_Text::get_parseCtrlCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_parseCtrlCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parseCtrlCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_parseCtrlCharacters
void TMPro::TMP_Text::set_parseCtrlCharacters(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_parseCtrlCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_parseCtrlCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_isOverlay
bool TMPro::TMP_Text::get_isOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_isOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_isOverlay
void TMPro::TMP_Text::set_isOverlay(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_isOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_isOrthographic
bool TMPro::TMP_Text::get_isOrthographic() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_isOrthographic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isOrthographic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_isOrthographic
void TMPro::TMP_Text::set_isOrthographic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_isOrthographic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isOrthographic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_enableCulling
bool TMPro::TMP_Text::get_enableCulling() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_enableCulling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableCulling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_enableCulling
void TMPro::TMP_Text::set_enableCulling(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_enableCulling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableCulling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_ignoreRectMaskCulling
bool TMPro::TMP_Text::get_ignoreRectMaskCulling() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_ignoreRectMaskCulling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ignoreRectMaskCulling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_ignoreRectMaskCulling
void TMPro::TMP_Text::set_ignoreRectMaskCulling(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_ignoreRectMaskCulling");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ignoreRectMaskCulling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_ignoreVisibility
bool TMPro::TMP_Text::get_ignoreVisibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_ignoreVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ignoreVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_ignoreVisibility
void TMPro::TMP_Text::set_ignoreVisibility(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_ignoreVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ignoreVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_horizontalMapping
TMPro::TextureMappingOptions TMPro::TMP_Text::get_horizontalMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_horizontalMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_horizontalMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TextureMappingOptions, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_horizontalMapping
void TMPro::TMP_Text::set_horizontalMapping(TMPro::TextureMappingOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_horizontalMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_horizontalMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_verticalMapping
TMPro::TextureMappingOptions TMPro::TMP_Text::get_verticalMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_verticalMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_verticalMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TextureMappingOptions, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_verticalMapping
void TMPro::TMP_Text::set_verticalMapping(TMPro::TextureMappingOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_verticalMapping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_verticalMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_mappingUvLineOffset
float TMPro::TMP_Text::get_mappingUvLineOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_mappingUvLineOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mappingUvLineOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_mappingUvLineOffset
void TMPro::TMP_Text::set_mappingUvLineOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_mappingUvLineOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mappingUvLineOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_renderMode
TMPro::TextRenderFlags TMPro::TMP_Text::get_renderMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_renderMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TextRenderFlags, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_renderMode
void TMPro::TMP_Text::set_renderMode(TMPro::TextRenderFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_renderMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_renderMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_geometrySortingOrder
TMPro::VertexSortingOrder TMPro::TMP_Text::get_geometrySortingOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_geometrySortingOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_geometrySortingOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::VertexSortingOrder, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_geometrySortingOrder
void TMPro::TMP_Text::set_geometrySortingOrder(TMPro::VertexSortingOrder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_geometrySortingOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_geometrySortingOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_vertexBufferAutoSizeReduction
bool TMPro::TMP_Text::get_vertexBufferAutoSizeReduction() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_vertexBufferAutoSizeReduction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vertexBufferAutoSizeReduction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_vertexBufferAutoSizeReduction
void TMPro::TMP_Text::set_vertexBufferAutoSizeReduction(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_vertexBufferAutoSizeReduction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_vertexBufferAutoSizeReduction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_firstVisibleCharacter
int TMPro::TMP_Text::get_firstVisibleCharacter() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_firstVisibleCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_firstVisibleCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_firstVisibleCharacter
void TMPro::TMP_Text::set_firstVisibleCharacter(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_firstVisibleCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_firstVisibleCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_maxVisibleCharacters
int TMPro::TMP_Text::get_maxVisibleCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_maxVisibleCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxVisibleCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_maxVisibleCharacters
void TMPro::TMP_Text::set_maxVisibleCharacters(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_maxVisibleCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxVisibleCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_maxVisibleWords
int TMPro::TMP_Text::get_maxVisibleWords() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_maxVisibleWords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxVisibleWords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_maxVisibleWords
void TMPro::TMP_Text::set_maxVisibleWords(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_maxVisibleWords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxVisibleWords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_maxVisibleLines
int TMPro::TMP_Text::get_maxVisibleLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_maxVisibleLines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxVisibleLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_maxVisibleLines
void TMPro::TMP_Text::set_maxVisibleLines(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_maxVisibleLines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxVisibleLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_useMaxVisibleDescender
bool TMPro::TMP_Text::get_useMaxVisibleDescender() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_useMaxVisibleDescender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useMaxVisibleDescender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_useMaxVisibleDescender
void TMPro::TMP_Text::set_useMaxVisibleDescender(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_useMaxVisibleDescender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useMaxVisibleDescender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_pageToDisplay
int TMPro::TMP_Text::get_pageToDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_pageToDisplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pageToDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_pageToDisplay
void TMPro::TMP_Text::set_pageToDisplay(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_pageToDisplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pageToDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_margin
UnityEngine::Vector4 TMPro::TMP_Text::get_margin() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_margin");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_margin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector4, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_margin
void TMPro::TMP_Text::set_margin(UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_margin");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_margin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_textInfo
TMPro::TMP_TextInfo* TMPro::TMP_Text::get_textInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_textInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_TextInfo*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_havePropertiesChanged
bool TMPro::TMP_Text::get_havePropertiesChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_havePropertiesChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_havePropertiesChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_havePropertiesChanged
void TMPro::TMP_Text::set_havePropertiesChanged(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_havePropertiesChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_havePropertiesChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_isUsingLegacyAnimationComponent
bool TMPro::TMP_Text::get_isUsingLegacyAnimationComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_isUsingLegacyAnimationComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isUsingLegacyAnimationComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_isUsingLegacyAnimationComponent
void TMPro::TMP_Text::set_isUsingLegacyAnimationComponent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_isUsingLegacyAnimationComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isUsingLegacyAnimationComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_autoSizeTextContainer
bool TMPro::TMP_Text::get_autoSizeTextContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_autoSizeTextContainer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_autoSizeTextContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_autoSizeTextContainer
void TMPro::TMP_Text::set_autoSizeTextContainer(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_autoSizeTextContainer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_autoSizeTextContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_mesh
UnityEngine::Mesh* TMPro::TMP_Text::get_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_mesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_isVolumetricText
bool TMPro::TMP_Text::get_isVolumetricText() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_isVolumetricText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isVolumetricText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_isVolumetricText
void TMPro::TMP_Text::set_isVolumetricText(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_isVolumetricText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isVolumetricText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_bounds
UnityEngine::Bounds TMPro::TMP_Text::get_bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_bounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_textBounds
UnityEngine::Bounds TMPro::TMP_Text::get_textBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_textBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_spriteAnimator
TMPro::TMP_SpriteAnimator* TMPro::TMP_Text::get_spriteAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_spriteAnimator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spriteAnimator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SpriteAnimator*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_flexibleHeight
float TMPro::TMP_Text::get_flexibleHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_flexibleHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flexibleHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_flexibleWidth
float TMPro::TMP_Text::get_flexibleWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_flexibleWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_flexibleWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_minWidth
float TMPro::TMP_Text::get_minWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_minWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_minHeight
float TMPro::TMP_Text::get_minHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_minHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_minHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_maxWidth
float TMPro::TMP_Text::get_maxWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_maxWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_maxHeight
float TMPro::TMP_Text::get_maxHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_maxHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_layoutElement
UnityEngine::UI::LayoutElement* TMPro::TMP_Text::get_layoutElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_layoutElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_layoutElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::LayoutElement*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_preferredWidth
float TMPro::TMP_Text::get_preferredWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_preferredWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preferredWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_preferredHeight
float TMPro::TMP_Text::get_preferredHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_preferredHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preferredHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_renderedWidth
float TMPro::TMP_Text::get_renderedWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_renderedWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderedWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_renderedHeight
float TMPro::TMP_Text::get_renderedHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_renderedHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderedHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_layoutPriority
int TMPro::TMP_Text::get_layoutPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_layoutPriority");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_layoutPriority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.LoadFontAsset
void TMPro::TMP_Text::LoadFontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::LoadFontAsset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadFontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.SetSharedMaterial
void TMPro::TMP_Text::SetSharedMaterial(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetSharedMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TMP_Text.GetMaterial
UnityEngine::Material* TMPro::TMP_Text::GetMaterial(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TMP_Text.SetFontBaseMaterial
void TMPro::TMP_Text::SetFontBaseMaterial(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetFontBaseMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFontBaseMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TMP_Text.GetSharedMaterials
::Array<UnityEngine::Material*>* TMPro::TMP_Text::GetSharedMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetSharedMaterials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSharedMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Material*>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.SetSharedMaterials
void TMPro::TMP_Text::SetSharedMaterials(::Array<UnityEngine::Material*>* materials) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetSharedMaterials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSharedMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(materials)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, materials);
}
// Autogenerated method: TMPro.TMP_Text.GetMaterials
::Array<UnityEngine::Material*>* TMPro::TMP_Text::GetMaterials(::Array<UnityEngine::Material*>* mats) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetMaterials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mats)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Material*>*, false>(this, ___internal__method, mats);
}
// Autogenerated method: TMPro.TMP_Text.CreateMaterialInstance
UnityEngine::Material* TMPro::TMP_Text::CreateMaterialInstance(UnityEngine::Material* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::CreateMaterialInstance");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMaterialInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method, source);
}
// Autogenerated method: TMPro.TMP_Text.SetVertexColorGradient
void TMPro::TMP_Text::SetVertexColorGradient(TMPro::TMP_ColorGradient* gradient) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetVertexColorGradient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVertexColorGradient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gradient)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, gradient);
}
// Autogenerated method: TMPro.TMP_Text.SetTextSortingOrder
void TMPro::TMP_Text::SetTextSortingOrder(TMPro::VertexSortingOrder order) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetTextSortingOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextSortingOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(order)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, order);
}
// Autogenerated method: TMPro.TMP_Text.SetTextSortingOrder
void TMPro::TMP_Text::SetTextSortingOrder(::Array<int>* order) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetTextSortingOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextSortingOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(order)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, order);
}
// Autogenerated method: TMPro.TMP_Text.SetFaceColor
void TMPro::TMP_Text::SetFaceColor(UnityEngine::Color32 color) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetFaceColor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFaceColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: TMPro.TMP_Text.SetOutlineColor
void TMPro::TMP_Text::SetOutlineColor(UnityEngine::Color32 color) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetOutlineColor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOutlineColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: TMPro.TMP_Text.SetOutlineThickness
void TMPro::TMP_Text::SetOutlineThickness(float thickness) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetOutlineThickness");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOutlineThickness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thickness)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, thickness);
}
// Autogenerated method: TMPro.TMP_Text.SetShaderDepth
void TMPro::TMP_Text::SetShaderDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetShaderDepth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetShaderDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.SetCulling
void TMPro::TMP_Text::SetCulling() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetCulling");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCulling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetPaddingForMaterial
float TMPro::TMP_Text::GetPaddingForMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetPaddingForMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPaddingForMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetPaddingForMaterial
float TMPro::TMP_Text::GetPaddingForMaterial(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetPaddingForMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPaddingForMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TMP_Text.GetTextContainerLocalCorners
::Array<UnityEngine::Vector3>* TMPro::TMP_Text::GetTextContainerLocalCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetTextContainerLocalCorners");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextContainerLocalCorners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector3>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.ForceMeshUpdate
void TMPro::TMP_Text::ForceMeshUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ForceMeshUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceMeshUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.ForceMeshUpdate
void TMPro::TMP_Text::ForceMeshUpdate(bool ignoreActiveState) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ForceMeshUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceMeshUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ignoreActiveState)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ignoreActiveState);
}
// Autogenerated method: TMPro.TMP_Text.SetTextInternal
void TMPro::TMP_Text::SetTextInternal(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetTextInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: TMPro.TMP_Text.UpdateGeometry
void TMPro::TMP_Text::UpdateGeometry(UnityEngine::Mesh* mesh, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::UpdateGeometry");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, mesh, index);
}
// Autogenerated method: TMPro.TMP_Text.UpdateVertexData
void TMPro::TMP_Text::UpdateVertexData(TMPro::TMP_VertexDataUpdateFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::UpdateVertexData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVertexData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, flags);
}
// Autogenerated method: TMPro.TMP_Text.UpdateVertexData
void TMPro::TMP_Text::UpdateVertexData() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::UpdateVertexData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVertexData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.SetVertices
void TMPro::TMP_Text::SetVertices(::Array<UnityEngine::Vector3>* vertices) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetVertices");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertices)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, vertices);
}
// Autogenerated method: TMPro.TMP_Text.UpdateMeshPadding
void TMPro::TMP_Text::UpdateMeshPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::UpdateMeshPadding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMeshPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.InternalCrossFadeColor
void TMPro::TMP_Text::InternalCrossFadeColor(UnityEngine::Color targetColor, float duration, bool ignoreTimeScale, bool useAlpha) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::InternalCrossFadeColor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalCrossFadeColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetColor), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(ignoreTimeScale), ::il2cpp_utils::ExtractType(useAlpha)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, targetColor, duration, ignoreTimeScale, useAlpha);
}
// Autogenerated method: TMPro.TMP_Text.InternalCrossFadeAlpha
void TMPro::TMP_Text::InternalCrossFadeAlpha(float alpha, float duration, bool ignoreTimeScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::InternalCrossFadeAlpha");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalCrossFadeAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alpha), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(ignoreTimeScale)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, alpha, duration, ignoreTimeScale);
}
// Autogenerated method: TMPro.TMP_Text.ParseInputText
void TMPro::TMP_Text::ParseInputText() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ParseInputText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseInputText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.SetText
void TMPro::TMP_Text::SetText(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: TMPro.TMP_Text.SetText
void TMPro::TMP_Text::SetText(::Il2CppString* text, bool syncTextInputBox) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(syncTextInputBox)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text, syncTextInputBox);
}
// Autogenerated method: TMPro.TMP_Text.SetText
void TMPro::TMP_Text::SetText(::Il2CppString* text, float arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(arg0)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text, arg0);
}
// Autogenerated method: TMPro.TMP_Text.SetText
void TMPro::TMP_Text::SetText(::Il2CppString* text, float arg0, float arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text, arg0, arg1);
}
// Autogenerated method: TMPro.TMP_Text.SetText
void TMPro::TMP_Text::SetText(::Il2CppString* text, float arg0, float arg1, float arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text, arg0, arg1, arg2);
}
// Autogenerated method: TMPro.TMP_Text.SetText
void TMPro::TMP_Text::SetText(System::Text::StringBuilder* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: TMPro.TMP_Text.SetCharArray
void TMPro::TMP_Text::SetCharArray(::Array<::Il2CppChar>* sourceText) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sourceText);
}
// Autogenerated method: TMPro.TMP_Text.SetCharArray
void TMPro::TMP_Text::SetCharArray(::Array<::Il2CppChar>* sourceText, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sourceText, start, length);
}
// Autogenerated method: TMPro.TMP_Text.SetCharArray
void TMPro::TMP_Text::SetCharArray(::Array<int>* sourceText, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sourceText, start, length);
}
// Autogenerated method: TMPro.TMP_Text.SetTextArrayToCharArray
void TMPro::TMP_Text::SetTextArrayToCharArray(::Array<::Il2CppChar>* sourceText, ::Array<TMPro::TMP_Text::UnicodeChar>*& charBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetTextArrayToCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextArrayToCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(charBuffer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sourceText, charBuffer);
}
// Autogenerated method: TMPro.TMP_Text.StringToCharArray
void TMPro::TMP_Text::StringToCharArray(::Il2CppString* sourceText, ::Array<TMPro::TMP_Text::UnicodeChar>*& charBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::StringToCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StringToCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(charBuffer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sourceText, charBuffer);
}
// Autogenerated method: TMPro.TMP_Text.StringBuilderToIntArray
void TMPro::TMP_Text::StringBuilderToIntArray(System::Text::StringBuilder* sourceText, ::Array<TMPro::TMP_Text::UnicodeChar>*& charBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::StringBuilderToIntArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StringBuilderToIntArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(charBuffer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sourceText, charBuffer);
}
// Autogenerated method: TMPro.TMP_Text.ReplaceOpeningStyleTag
bool TMPro::TMP_Text::ReplaceOpeningStyleTag(::Il2CppString*& sourceText, int srcIndex, int& srcOffset, ::Array<TMPro::TMP_Text::UnicodeChar>*& charBuffer, int& writeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ReplaceOpeningStyleTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceOpeningStyleTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(srcIndex), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(charBuffer), ::il2cpp_utils::ExtractType(writeIndex)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sourceText, srcIndex, srcOffset, charBuffer, writeIndex);
}
// Autogenerated method: TMPro.TMP_Text.ReplaceOpeningStyleTag
bool TMPro::TMP_Text::ReplaceOpeningStyleTag(::Array<int>*& sourceText, int srcIndex, int& srcOffset, ::Array<TMPro::TMP_Text::UnicodeChar>*& charBuffer, int& writeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ReplaceOpeningStyleTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceOpeningStyleTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(srcIndex), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(charBuffer), ::il2cpp_utils::ExtractType(writeIndex)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sourceText, srcIndex, srcOffset, charBuffer, writeIndex);
}
// Autogenerated method: TMPro.TMP_Text.ReplaceOpeningStyleTag
bool TMPro::TMP_Text::ReplaceOpeningStyleTag(::Array<::Il2CppChar>*& sourceText, int srcIndex, int& srcOffset, ::Array<TMPro::TMP_Text::UnicodeChar>*& charBuffer, int& writeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ReplaceOpeningStyleTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceOpeningStyleTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(srcIndex), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(charBuffer), ::il2cpp_utils::ExtractType(writeIndex)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sourceText, srcIndex, srcOffset, charBuffer, writeIndex);
}
// Autogenerated method: TMPro.TMP_Text.ReplaceOpeningStyleTag
bool TMPro::TMP_Text::ReplaceOpeningStyleTag(System::Text::StringBuilder*& sourceText, int srcIndex, int& srcOffset, ::Array<TMPro::TMP_Text::UnicodeChar>*& charBuffer, int& writeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ReplaceOpeningStyleTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceOpeningStyleTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(srcIndex), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(charBuffer), ::il2cpp_utils::ExtractType(writeIndex)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sourceText, srcIndex, srcOffset, charBuffer, writeIndex);
}
// Autogenerated method: TMPro.TMP_Text.ReplaceClosingStyleTag
bool TMPro::TMP_Text::ReplaceClosingStyleTag(::Il2CppString*& sourceText, int srcIndex, ::Array<TMPro::TMP_Text::UnicodeChar>*& charBuffer, int& writeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ReplaceClosingStyleTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceClosingStyleTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(srcIndex), ::il2cpp_utils::ExtractType(charBuffer), ::il2cpp_utils::ExtractType(writeIndex)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sourceText, srcIndex, charBuffer, writeIndex);
}
// Autogenerated method: TMPro.TMP_Text.ReplaceClosingStyleTag
bool TMPro::TMP_Text::ReplaceClosingStyleTag(::Array<int>*& sourceText, int srcIndex, ::Array<TMPro::TMP_Text::UnicodeChar>*& charBuffer, int& writeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ReplaceClosingStyleTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceClosingStyleTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(srcIndex), ::il2cpp_utils::ExtractType(charBuffer), ::il2cpp_utils::ExtractType(writeIndex)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sourceText, srcIndex, charBuffer, writeIndex);
}
// Autogenerated method: TMPro.TMP_Text.ReplaceClosingStyleTag
bool TMPro::TMP_Text::ReplaceClosingStyleTag(::Array<::Il2CppChar>*& sourceText, int srcIndex, ::Array<TMPro::TMP_Text::UnicodeChar>*& charBuffer, int& writeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ReplaceClosingStyleTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceClosingStyleTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(srcIndex), ::il2cpp_utils::ExtractType(charBuffer), ::il2cpp_utils::ExtractType(writeIndex)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sourceText, srcIndex, charBuffer, writeIndex);
}
// Autogenerated method: TMPro.TMP_Text.ReplaceClosingStyleTag
bool TMPro::TMP_Text::ReplaceClosingStyleTag(System::Text::StringBuilder*& sourceText, int srcIndex, ::Array<TMPro::TMP_Text::UnicodeChar>*& charBuffer, int& writeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ReplaceClosingStyleTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceClosingStyleTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceText), ::il2cpp_utils::ExtractType(srcIndex), ::il2cpp_utils::ExtractType(charBuffer), ::il2cpp_utils::ExtractType(writeIndex)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sourceText, srcIndex, charBuffer, writeIndex);
}
// Autogenerated method: TMPro.TMP_Text.IsTagName
bool TMPro::TMP_Text::IsTagName(::Il2CppString*& text, ::Il2CppString* tag, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::IsTagName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsTagName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, text, tag, index);
}
// Autogenerated method: TMPro.TMP_Text.IsTagName
bool TMPro::TMP_Text::IsTagName(::Array<::Il2CppChar>*& text, ::Il2CppString* tag, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::IsTagName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsTagName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, text, tag, index);
}
// Autogenerated method: TMPro.TMP_Text.IsTagName
bool TMPro::TMP_Text::IsTagName(::Array<int>*& text, ::Il2CppString* tag, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::IsTagName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsTagName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, text, tag, index);
}
// Autogenerated method: TMPro.TMP_Text.IsTagName
bool TMPro::TMP_Text::IsTagName(System::Text::StringBuilder*& text, ::Il2CppString* tag, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::IsTagName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsTagName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(tag), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, text, tag, index);
}
// Autogenerated method: TMPro.TMP_Text.GetTagHashCode
int TMPro::TMP_Text::GetTagHashCode(::Il2CppString*& text, int index, int& closeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetTagHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTagHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, text, index, closeIndex);
}
// Autogenerated method: TMPro.TMP_Text.GetTagHashCode
int TMPro::TMP_Text::GetTagHashCode(::Array<::Il2CppChar>*& text, int index, int& closeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetTagHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTagHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, text, index, closeIndex);
}
// Autogenerated method: TMPro.TMP_Text.GetTagHashCode
int TMPro::TMP_Text::GetTagHashCode(::Array<int>*& text, int index, int& closeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetTagHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTagHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, text, index, closeIndex);
}
// Autogenerated method: TMPro.TMP_Text.GetTagHashCode
int TMPro::TMP_Text::GetTagHashCode(System::Text::StringBuilder*& text, int index, int& closeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetTagHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTagHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, text, index, closeIndex);
}
// Autogenerated method: TMPro.TMP_Text.AddFloatToCharArray
void TMPro::TMP_Text::AddFloatToCharArray(double number, int& index, int precision) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::AddFloatToCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFloatToCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(precision)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, number, index, precision);
}
// Autogenerated method: TMPro.TMP_Text.AddIntToCharArray
void TMPro::TMP_Text::AddIntToCharArray(double number, int& index, int precision) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::AddIntToCharArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddIntToCharArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(precision)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, number, index, precision);
}
// Autogenerated method: TMPro.TMP_Text.SetArraySizes
int TMPro::TMP_Text::SetArraySizes(::Array<TMPro::TMP_Text::UnicodeChar>* chars) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetArraySizes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetArraySizes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars);
}
// Autogenerated method: TMPro.TMP_Text.GenerateTextMesh
void TMPro::TMP_Text::GenerateTextMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GenerateTextMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateTextMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetPreferredValues
UnityEngine::Vector2 TMPro::TMP_Text::GetPreferredValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetPreferredValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreferredValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetPreferredValues
UnityEngine::Vector2 TMPro::TMP_Text::GetPreferredValues(float width, float height) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetPreferredValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreferredValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method, width, height);
}
// Autogenerated method: TMPro.TMP_Text.GetPreferredValues
UnityEngine::Vector2 TMPro::TMP_Text::GetPreferredValues(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetPreferredValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreferredValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method, text);
}
// Autogenerated method: TMPro.TMP_Text.GetPreferredValues
UnityEngine::Vector2 TMPro::TMP_Text::GetPreferredValues(::Il2CppString* text, float width, float height) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetPreferredValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreferredValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method, text, width, height);
}
// Autogenerated method: TMPro.TMP_Text.GetPreferredWidth
float TMPro::TMP_Text::GetPreferredWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetPreferredWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreferredWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetPreferredWidth
float TMPro::TMP_Text::GetPreferredWidth(UnityEngine::Vector2 margin) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetPreferredWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreferredWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(margin)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, margin);
}
// Autogenerated method: TMPro.TMP_Text.GetPreferredHeight
float TMPro::TMP_Text::GetPreferredHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetPreferredHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreferredHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetPreferredHeight
float TMPro::TMP_Text::GetPreferredHeight(UnityEngine::Vector2 margin) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetPreferredHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPreferredHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(margin)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, margin);
}
// Autogenerated method: TMPro.TMP_Text.GetRenderedValues
UnityEngine::Vector2 TMPro::TMP_Text::GetRenderedValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetRenderedValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRenderedValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetRenderedValues
UnityEngine::Vector2 TMPro::TMP_Text::GetRenderedValues(bool onlyVisibleCharacters) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetRenderedValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRenderedValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onlyVisibleCharacters)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method, onlyVisibleCharacters);
}
// Autogenerated method: TMPro.TMP_Text.GetRenderedWidth
float TMPro::TMP_Text::GetRenderedWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetRenderedWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRenderedWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetRenderedWidth
float TMPro::TMP_Text::GetRenderedWidth(bool onlyVisibleCharacters) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetRenderedWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRenderedWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onlyVisibleCharacters)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, onlyVisibleCharacters);
}
// Autogenerated method: TMPro.TMP_Text.GetRenderedHeight
float TMPro::TMP_Text::GetRenderedHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetRenderedHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRenderedHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetRenderedHeight
float TMPro::TMP_Text::GetRenderedHeight(bool onlyVisibleCharacters) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetRenderedHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRenderedHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onlyVisibleCharacters)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, onlyVisibleCharacters);
}
// Autogenerated method: TMPro.TMP_Text.CalculatePreferredValues
UnityEngine::Vector2 TMPro::TMP_Text::CalculatePreferredValues(float defaultFontSize, UnityEngine::Vector2 marginSize, bool ignoreTextAutoSizing) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::CalculatePreferredValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculatePreferredValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(defaultFontSize), ::il2cpp_utils::ExtractType(marginSize), ::il2cpp_utils::ExtractType(ignoreTextAutoSizing)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method, defaultFontSize, marginSize, ignoreTextAutoSizing);
}
// Autogenerated method: TMPro.TMP_Text.GetCompoundBounds
UnityEngine::Bounds TMPro::TMP_Text::GetCompoundBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetCompoundBounds");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCompoundBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetTextBounds
UnityEngine::Bounds TMPro::TMP_Text::GetTextBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetTextBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetTextBounds
UnityEngine::Bounds TMPro::TMP_Text::GetTextBounds(bool onlyVisibleCharacters) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetTextBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onlyVisibleCharacters)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Bounds, false>(this, ___internal__method, onlyVisibleCharacters);
}
// Autogenerated method: TMPro.TMP_Text.AdjustLineOffset
void TMPro::TMP_Text::AdjustLineOffset(int startIndex, int endIndex, float offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::AdjustLineOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AdjustLineOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(endIndex), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, startIndex, endIndex, offset);
}
// Autogenerated method: TMPro.TMP_Text.ResizeLineExtents
void TMPro::TMP_Text::ResizeLineExtents(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ResizeLineExtents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResizeLineExtents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: TMPro.TMP_Text.GetTextInfo
TMPro::TMP_TextInfo* TMPro::TMP_Text::GetTextInfo(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetTextInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_TextInfo*, false>(this, ___internal__method, text);
}
// Autogenerated method: TMPro.TMP_Text.ComputeMarginSize
void TMPro::TMP_Text::ComputeMarginSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ComputeMarginSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeMarginSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.SaveWordWrappingState
void TMPro::TMP_Text::SaveWordWrappingState(TMPro::WordWrapState& state, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SaveWordWrappingState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveWordWrappingState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state, index, count);
}
// Autogenerated method: TMPro.TMP_Text.RestoreWordWrappingState
int TMPro::TMP_Text::RestoreWordWrappingState(TMPro::WordWrapState& state) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::RestoreWordWrappingState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RestoreWordWrappingState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, state);
}
// Autogenerated method: TMPro.TMP_Text.SaveGlyphVertexInfo
void TMPro::TMP_Text::SaveGlyphVertexInfo(float padding, float style_padding, UnityEngine::Color32 vertexColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SaveGlyphVertexInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveGlyphVertexInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(padding), ::il2cpp_utils::ExtractType(style_padding), ::il2cpp_utils::ExtractType(vertexColor)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, padding, style_padding, vertexColor);
}
// Autogenerated method: TMPro.TMP_Text.SaveSpriteVertexInfo
void TMPro::TMP_Text::SaveSpriteVertexInfo(UnityEngine::Color32 vertexColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SaveSpriteVertexInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveSpriteVertexInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vertexColor)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, vertexColor);
}
// Autogenerated method: TMPro.TMP_Text.FillCharacterVertexBuffers
void TMPro::TMP_Text::FillCharacterVertexBuffers(int i, int index_X4) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::FillCharacterVertexBuffers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillCharacterVertexBuffers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(index_X4)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, i, index_X4);
}
// Autogenerated method: TMPro.TMP_Text.FillCharacterVertexBuffers
void TMPro::TMP_Text::FillCharacterVertexBuffers(int i, int index_X4, bool isVolumetric) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::FillCharacterVertexBuffers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillCharacterVertexBuffers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(index_X4), ::il2cpp_utils::ExtractType(isVolumetric)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, i, index_X4, isVolumetric);
}
// Autogenerated method: TMPro.TMP_Text.FillSpriteVertexBuffers
void TMPro::TMP_Text::FillSpriteVertexBuffers(int i, int index_X4) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::FillSpriteVertexBuffers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillSpriteVertexBuffers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i), ::il2cpp_utils::ExtractType(index_X4)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, i, index_X4);
}
// Autogenerated method: TMPro.TMP_Text.DrawUnderlineMesh
void TMPro::TMP_Text::DrawUnderlineMesh(UnityEngine::Vector3 start, UnityEngine::Vector3 end, int& index, float startScale, float endScale, float maxScale, float sdfScale, UnityEngine::Color32 underlineColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::DrawUnderlineMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawUnderlineMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(startScale), ::il2cpp_utils::ExtractType(endScale), ::il2cpp_utils::ExtractType(maxScale), ::il2cpp_utils::ExtractType(sdfScale), ::il2cpp_utils::ExtractType(underlineColor)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, start, end, index, startScale, endScale, maxScale, sdfScale, underlineColor);
}
// Autogenerated method: TMPro.TMP_Text.DrawTextHighlight
void TMPro::TMP_Text::DrawTextHighlight(UnityEngine::Vector3 start, UnityEngine::Vector3 end, int& index, UnityEngine::Color32 highlightColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::DrawTextHighlight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrawTextHighlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(highlightColor)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, start, end, index, highlightColor);
}
// Autogenerated method: TMPro.TMP_Text.LoadDefaultSettings
void TMPro::TMP_Text::LoadDefaultSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::LoadDefaultSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadDefaultSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetSpecialCharacters
void TMPro::TMP_Text::GetSpecialCharacters(TMPro::TMP_FontAsset* fontAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetSpecialCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSpecialCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fontAsset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, fontAsset);
}
// Autogenerated method: TMPro.TMP_Text.ReplaceTagWithCharacter
void TMPro::TMP_Text::ReplaceTagWithCharacter(::Array<int>* chars, int insertionIndex, int tagLength, ::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ReplaceTagWithCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReplaceTagWithCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(insertionIndex), ::il2cpp_utils::ExtractType(tagLength), ::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, chars, insertionIndex, tagLength, c);
}
// Autogenerated method: TMPro.TMP_Text.GetFontAssetForWeight
TMPro::TMP_FontAsset* TMPro::TMP_Text::GetFontAssetForWeight(int fontWeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetFontAssetForWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFontAssetForWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fontWeight)})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_FontAsset*, false>(this, ___internal__method, fontWeight);
}
// Autogenerated method: TMPro.TMP_Text.SetActiveSubMeshes
void TMPro::TMP_Text::SetActiveSubMeshes(bool state) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetActiveSubMeshes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetActiveSubMeshes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: TMPro.TMP_Text.ClearSubMeshObjects
void TMPro::TMP_Text::ClearSubMeshObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ClearSubMeshObjects");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSubMeshObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.ClearMesh
void TMPro::TMP_Text::ClearMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ClearMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.ClearMesh
void TMPro::TMP_Text::ClearMesh(bool uploadGeometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ClearMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uploadGeometry)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, uploadGeometry);
}
// Autogenerated method: TMPro.TMP_Text.GetParsedText
::Il2CppString* TMPro::TMP_Text::GetParsedText() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetParsedText");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParsedText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.PackUV
UnityEngine::Vector2 TMPro::TMP_Text::PackUV(float x, float y, float scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::PackUV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PackUV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(scale)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method, x, y, scale);
}
// Autogenerated method: TMPro.TMP_Text.PackUV
float TMPro::TMP_Text::PackUV(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::PackUV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PackUV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, x, y);
}
// Autogenerated method: TMPro.TMP_Text.InternalUpdate
void TMPro::TMP_Text::InternalUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::InternalUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.HexToInt
int TMPro::TMP_Text::HexToInt(::Il2CppChar hex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::HexToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HexToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, hex);
}
// Autogenerated method: TMPro.TMP_Text.GetUTF16
int TMPro::TMP_Text::GetUTF16(::Il2CppString* text, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetUTF16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUTF16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, text, i);
}
// Autogenerated method: TMPro.TMP_Text.GetUTF16
int TMPro::TMP_Text::GetUTF16(System::Text::StringBuilder* text, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetUTF16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUTF16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, text, i);
}
// Autogenerated method: TMPro.TMP_Text.GetUTF32
int TMPro::TMP_Text::GetUTF32(::Il2CppString* text, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetUTF32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUTF32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, text, i);
}
// Autogenerated method: TMPro.TMP_Text.GetUTF32
int TMPro::TMP_Text::GetUTF32(System::Text::StringBuilder* text, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetUTF32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUTF32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, text, i);
}
// Autogenerated method: TMPro.TMP_Text.HexCharsToColor
UnityEngine::Color32 TMPro::TMP_Text::HexCharsToColor(::Array<::Il2CppChar>* hexChars, int tagCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::HexCharsToColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HexCharsToColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hexChars), ::il2cpp_utils::ExtractType(tagCount)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color32, false>(this, ___internal__method, hexChars, tagCount);
}
// Autogenerated method: TMPro.TMP_Text.HexCharsToColor
UnityEngine::Color32 TMPro::TMP_Text::HexCharsToColor(::Array<::Il2CppChar>* hexChars, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::HexCharsToColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HexCharsToColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hexChars), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color32, false>(this, ___internal__method, hexChars, startIndex, length);
}
// Autogenerated method: TMPro.TMP_Text.GetAttributeParameters
int TMPro::TMP_Text::GetAttributeParameters(::Array<::Il2CppChar>* chars, int startIndex, int length, ::Array<float>*& parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetAttributeParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttributeParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(parameters)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, startIndex, length, parameters);
}
// Autogenerated method: TMPro.TMP_Text.ConvertToFloat
float TMPro::TMP_Text::ConvertToFloat(::Array<::Il2CppChar>* chars, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ConvertToFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertToFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, chars, startIndex, length);
}
// Autogenerated method: TMPro.TMP_Text.ConvertToFloat
float TMPro::TMP_Text::ConvertToFloat(::Array<::Il2CppChar>* chars, int startIndex, int length, int& lastIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ConvertToFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertToFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, chars, startIndex, length, lastIndex);
}
// Autogenerated method: TMPro.TMP_Text.ValidateHtmlTag
bool TMPro::TMP_Text::ValidateHtmlTag(::Array<TMPro::TMP_Text::UnicodeChar>* chars, int startIndex, int& endIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ValidateHtmlTag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateHtmlTag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, chars, startIndex, endIndex);
}
// Autogenerated method: TMPro.TMP_Text.get_color
UnityEngine::Color TMPro::TMP_Text::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_color");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_color
void TMPro::TMP_Text::set_color(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_color");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_transform
UnityEngine::Transform* TMPro::TMP_Text::get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_rectTransform
UnityEngine::RectTransform* TMPro::TMP_Text::get_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_rectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.CrossFadeColor
void TMPro::TMP_Text::CrossFadeColor(UnityEngine::Color targetColor, float duration, bool ignoreTimeScale, bool useAlpha) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::CrossFadeColor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFadeColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetColor), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(ignoreTimeScale), ::il2cpp_utils::ExtractType(useAlpha)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, targetColor, duration, ignoreTimeScale, useAlpha);
}
// Autogenerated method: TMPro.TMP_Text.CrossFadeAlpha
void TMPro::TMP_Text::CrossFadeAlpha(float alpha, float duration, bool ignoreTimeScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::CrossFadeAlpha");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFadeAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alpha), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(ignoreTimeScale)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, alpha, duration, ignoreTimeScale);
}
// Autogenerated method: TMPro.TMP_Text..cctor
void TMPro::TMP_Text::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Text", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_Text/TextInputSources
#include "TMPro/TMP_Text.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_Text/TextInputSources Text
TMPro::TMP_Text::TextInputSources TMPro::TMP_Text::TextInputSources::_get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::TextInputSources::_get_Text");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_Text::TextInputSources>("TMPro", "TMP_Text/TextInputSources", "Text"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_Text/TextInputSources Text
void TMPro::TMP_Text::TextInputSources::_set_Text(TMPro::TMP_Text::TextInputSources value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::TextInputSources::_set_Text");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text/TextInputSources", "Text", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_Text/TextInputSources SetText
TMPro::TMP_Text::TextInputSources TMPro::TMP_Text::TextInputSources::_get_SetText() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::TextInputSources::_get_SetText");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_Text::TextInputSources>("TMPro", "TMP_Text/TextInputSources", "SetText"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_Text/TextInputSources SetText
void TMPro::TMP_Text::TextInputSources::_set_SetText(TMPro::TMP_Text::TextInputSources value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::TextInputSources::_set_SetText");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text/TextInputSources", "SetText", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_Text/TextInputSources SetCharArray
TMPro::TMP_Text::TextInputSources TMPro::TMP_Text::TextInputSources::_get_SetCharArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::TextInputSources::_get_SetCharArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_Text::TextInputSources>("TMPro", "TMP_Text/TextInputSources", "SetCharArray"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_Text/TextInputSources SetCharArray
void TMPro::TMP_Text::TextInputSources::_set_SetCharArray(TMPro::TMP_Text::TextInputSources value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::TextInputSources::_set_SetCharArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text/TextInputSources", "SetCharArray", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_Text/TextInputSources String
TMPro::TMP_Text::TextInputSources TMPro::TMP_Text::TextInputSources::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::TextInputSources::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_Text::TextInputSources>("TMPro", "TMP_Text/TextInputSources", "String"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_Text/TextInputSources String
void TMPro::TMP_Text::TextInputSources::_set_String(TMPro::TMP_Text::TextInputSources value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::TextInputSources::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text/TextInputSources", "String", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TextElementType
#include "TMPro/TextElementType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TextElementType Character
TMPro::TextElementType TMPro::TextElementType::_get_Character() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextElementType::_get_Character");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextElementType>("TMPro", "TextElementType", "Character"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextElementType Character
void TMPro::TextElementType::_set_Character(TMPro::TextElementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextElementType::_set_Character");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextElementType", "Character", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextElementType Sprite
TMPro::TextElementType TMPro::TextElementType::_get_Sprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextElementType::_get_Sprite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextElementType>("TMPro", "TextElementType", "Sprite"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextElementType Sprite
void TMPro::TextElementType::_set_Sprite(TMPro::TextElementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextElementType::_set_Sprite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextElementType", "Sprite", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_TextElement
#include "TMPro/TMP_TextElement.hpp"
// Including type: UnityEngine.TextCore.Glyph
#include "UnityEngine/TextCore/Glyph.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.TMP_TextElement.get_elementType
TMPro::TextElementType TMPro::TMP_TextElement::get_elementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement::get_elementType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_elementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TextElementType, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextElement.get_unicode
uint TMPro::TMP_TextElement::get_unicode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement::get_unicode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_unicode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextElement.set_unicode
void TMPro::TMP_TextElement::set_unicode(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement::set_unicode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_unicode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_TextElement.get_glyph
UnityEngine::TextCore::Glyph* TMPro::TMP_TextElement::get_glyph() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement::get_glyph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_glyph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextCore::Glyph*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextElement.set_glyph
void TMPro::TMP_TextElement::set_glyph(UnityEngine::TextCore::Glyph* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement::set_glyph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_glyph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_TextElement.get_glyphIndex
uint TMPro::TMP_TextElement::get_glyphIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement::get_glyphIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_glyphIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextElement.set_glyphIndex
void TMPro::TMP_TextElement::set_glyphIndex(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement::set_glyphIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_glyphIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_TextElement.get_scale
float TMPro::TMP_TextElement::get_scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement::get_scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextElement.set_scale
void TMPro::TMP_TextElement::set_scale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement::set_scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_TextElement_Legacy
#include "TMPro/TMP_TextElement_Legacy.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_TextInfo
#include "TMPro/TMP_TextInfo.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector2 k_InfinityVectorPositive
UnityEngine::Vector2 TMPro::TMP_TextInfo::_get_k_InfinityVectorPositive() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::_get_k_InfinityVectorPositive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("TMPro", "TMP_TextInfo", "k_InfinityVectorPositive"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector2 k_InfinityVectorPositive
void TMPro::TMP_TextInfo::_set_k_InfinityVectorPositive(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::_set_k_InfinityVectorPositive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextInfo", "k_InfinityVectorPositive", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector2 k_InfinityVectorNegative
UnityEngine::Vector2 TMPro::TMP_TextInfo::_get_k_InfinityVectorNegative() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::_get_k_InfinityVectorNegative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("TMPro", "TMP_TextInfo", "k_InfinityVectorNegative"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector2 k_InfinityVectorNegative
void TMPro::TMP_TextInfo::_set_k_InfinityVectorNegative(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::_set_k_InfinityVectorNegative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextInfo", "k_InfinityVectorNegative", value));
}
// Autogenerated method: TMPro.TMP_TextInfo.Clear
void TMPro::TMP_TextInfo::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextInfo.ClearMeshInfo
void TMPro::TMP_TextInfo::ClearMeshInfo(bool updateMesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::ClearMeshInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearMeshInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateMesh)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, updateMesh);
}
// Autogenerated method: TMPro.TMP_TextInfo.ClearAllMeshInfo
void TMPro::TMP_TextInfo::ClearAllMeshInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::ClearAllMeshInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearAllMeshInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextInfo.ResetVertexLayout
void TMPro::TMP_TextInfo::ResetVertexLayout(bool isVolumetric) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::ResetVertexLayout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetVertexLayout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isVolumetric)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isVolumetric);
}
// Autogenerated method: TMPro.TMP_TextInfo.ClearUnusedVertices
void TMPro::TMP_TextInfo::ClearUnusedVertices(::Array<TMPro::MaterialReference>* materials) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::ClearUnusedVertices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearUnusedVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(materials)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, materials);
}
// Autogenerated method: TMPro.TMP_TextInfo.ClearLineInfo
void TMPro::TMP_TextInfo::ClearLineInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::ClearLineInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearLineInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextInfo.CopyMeshInfoVertexData
::Array<TMPro::TMP_MeshInfo>* TMPro::TMP_TextInfo::CopyMeshInfoVertexData() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::CopyMeshInfoVertexData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyMeshInfoVertexData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<TMPro::TMP_MeshInfo>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextInfo..cctor
void TMPro::TMP_TextInfo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextInfo", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_TextParsingUtilities
#include "TMPro/TMP_TextParsingUtilities.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly TMPro.TMP_TextParsingUtilities s_Instance
TMPro::TMP_TextParsingUtilities* TMPro::TMP_TextParsingUtilities::_get_s_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::_get_s_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_TextParsingUtilities*>("TMPro", "TMP_TextParsingUtilities", "s_Instance"));
}
// Autogenerated static field setter
// Set static field: static private readonly TMPro.TMP_TextParsingUtilities s_Instance
void TMPro::TMP_TextParsingUtilities::_set_s_Instance(TMPro::TMP_TextParsingUtilities* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::_set_s_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextParsingUtilities", "s_Instance", value));
}
// Autogenerated static field getter
// Get static field: static private System.String k_LookupStringL
::Il2CppString* TMPro::TMP_TextParsingUtilities::_get_k_LookupStringL() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::_get_k_LookupStringL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("TMPro", "TMP_TextParsingUtilities", "k_LookupStringL"));
}
// Autogenerated static field setter
// Set static field: static private System.String k_LookupStringL
void TMPro::TMP_TextParsingUtilities::_set_k_LookupStringL(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::_set_k_LookupStringL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextParsingUtilities", "k_LookupStringL", value));
}
// Autogenerated static field getter
// Get static field: static private System.String k_LookupStringU
::Il2CppString* TMPro::TMP_TextParsingUtilities::_get_k_LookupStringU() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::_get_k_LookupStringU");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("TMPro", "TMP_TextParsingUtilities", "k_LookupStringU"));
}
// Autogenerated static field setter
// Set static field: static private System.String k_LookupStringU
void TMPro::TMP_TextParsingUtilities::_set_k_LookupStringU(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::_set_k_LookupStringU");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextParsingUtilities", "k_LookupStringU", value));
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities..cctor
void TMPro::TMP_TextParsingUtilities::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.get_instance
TMPro::TMP_TextParsingUtilities* TMPro::TMP_TextParsingUtilities::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_TextParsingUtilities*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.GetHashCode
uint TMPro::TMP_TextParsingUtilities::GetHashCode(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.GetHashCodeCaseSensitive
int TMPro::TMP_TextParsingUtilities::GetHashCodeCaseSensitive(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::GetHashCodeCaseSensitive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "GetHashCodeCaseSensitive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.ToLowerASCIIFast
::Il2CppChar TMPro::TMP_TextParsingUtilities::ToLowerASCIIFast(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::ToLowerASCIIFast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "ToLowerASCIIFast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.ToUpperASCIIFast
::Il2CppChar TMPro::TMP_TextParsingUtilities::ToUpperASCIIFast(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::ToUpperASCIIFast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "ToUpperASCIIFast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.ToUpperASCIIFast
uint TMPro::TMP_TextParsingUtilities::ToUpperASCIIFast(uint c) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::ToUpperASCIIFast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "ToUpperASCIIFast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.ToLowerASCIIFast
uint TMPro::TMP_TextParsingUtilities::ToLowerASCIIFast(uint c) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::ToLowerASCIIFast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "ToLowerASCIIFast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.IsHighSurrogate
bool TMPro::TMP_TextParsingUtilities::IsHighSurrogate(uint c) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::IsHighSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "IsHighSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.IsLowSurrogate
bool TMPro::TMP_TextParsingUtilities::IsLowSurrogate(uint c) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::IsLowSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "IsLowSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.CaretPosition
#include "TMPro/CaretPosition.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.CaretPosition None
TMPro::CaretPosition TMPro::CaretPosition::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::CaretPosition::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::CaretPosition>("TMPro", "CaretPosition", "None"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.CaretPosition None
void TMPro::CaretPosition::_set_None(TMPro::CaretPosition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::CaretPosition::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "CaretPosition", "None", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.CaretPosition Left
TMPro::CaretPosition TMPro::CaretPosition::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::CaretPosition::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::CaretPosition>("TMPro", "CaretPosition", "Left"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.CaretPosition Left
void TMPro::CaretPosition::_set_Left(TMPro::CaretPosition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::CaretPosition::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "CaretPosition", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.CaretPosition Right
TMPro::CaretPosition TMPro::CaretPosition::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::CaretPosition::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::CaretPosition>("TMPro", "CaretPosition", "Right"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.CaretPosition Right
void TMPro::CaretPosition::_set_Right(TMPro::CaretPosition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::CaretPosition::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "CaretPosition", "Right", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.CaretInfo
#include "TMPro/CaretInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_TextUtilities
#include "TMPro/TMP_TextUtilities.hpp"
// Including type: TMPro.TMP_TextUtilities/LineSegment
#include "TMPro/TMP_TextUtilities_LineSegment.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: TMPro.CaretPosition
#include "TMPro/CaretPosition.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3[] m_rectWorldCorners
::Array<UnityEngine::Vector3>* TMPro::TMP_TextUtilities::_get_m_rectWorldCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::_get_m_rectWorldCorners");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Vector3>*>("TMPro", "TMP_TextUtilities", "m_rectWorldCorners"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3[] m_rectWorldCorners
void TMPro::TMP_TextUtilities::_set_m_rectWorldCorners(::Array<UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::_set_m_rectWorldCorners");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextUtilities", "m_rectWorldCorners", value));
}
// Autogenerated static field getter
// Get static field: static private System.String k_lookupStringL
::Il2CppString* TMPro::TMP_TextUtilities::_get_k_lookupStringL() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::_get_k_lookupStringL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("TMPro", "TMP_TextUtilities", "k_lookupStringL"));
}
// Autogenerated static field setter
// Set static field: static private System.String k_lookupStringL
void TMPro::TMP_TextUtilities::_set_k_lookupStringL(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::_set_k_lookupStringL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextUtilities", "k_lookupStringL", value));
}
// Autogenerated static field getter
// Get static field: static private System.String k_lookupStringU
::Il2CppString* TMPro::TMP_TextUtilities::_get_k_lookupStringU() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::_get_k_lookupStringU");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("TMPro", "TMP_TextUtilities", "k_lookupStringU"));
}
// Autogenerated static field setter
// Set static field: static private System.String k_lookupStringU
void TMPro::TMP_TextUtilities::_set_k_lookupStringU(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::_set_k_lookupStringU");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextUtilities", "k_lookupStringU", value));
}
// Autogenerated method: TMPro.TMP_TextUtilities.GetCursorIndexFromPosition
int TMPro::TMP_TextUtilities::GetCursorIndexFromPosition(TMPro::TMP_Text* textComponent, UnityEngine::Vector3 position, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::GetCursorIndexFromPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "GetCursorIndexFromPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textComponent), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, textComponent, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.GetCursorIndexFromPosition
int TMPro::TMP_TextUtilities::GetCursorIndexFromPosition(TMPro::TMP_Text* textComponent, UnityEngine::Vector3 position, UnityEngine::Camera* camera, TMPro::CaretPosition& cursor) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::GetCursorIndexFromPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "GetCursorIndexFromPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textComponent), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractIndependentType<TMPro::CaretPosition&>()})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, textComponent, position, camera, cursor);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindNearestLine
int TMPro::TMP_TextUtilities::FindNearestLine(TMPro::TMP_Text* text, UnityEngine::Vector3 position, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::FindNearestLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindNearestLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindNearestCharacterOnLine
int TMPro::TMP_TextUtilities::FindNearestCharacterOnLine(TMPro::TMP_Text* text, UnityEngine::Vector3 position, int line, UnityEngine::Camera* camera, bool visibleOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::FindNearestCharacterOnLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindNearestCharacterOnLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(line), ::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(visibleOnly)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, line, camera, visibleOnly);
}
// Autogenerated method: TMPro.TMP_TextUtilities.IsIntersectingRectTransform
bool TMPro::TMP_TextUtilities::IsIntersectingRectTransform(UnityEngine::RectTransform* rectTransform, UnityEngine::Vector3 position, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::IsIntersectingRectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "IsIntersectingRectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rectTransform), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rectTransform, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindIntersectingCharacter
int TMPro::TMP_TextUtilities::FindIntersectingCharacter(TMPro::TMP_Text* text, UnityEngine::Vector3 position, UnityEngine::Camera* camera, bool visibleOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::FindIntersectingCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindIntersectingCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(visibleOnly)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, camera, visibleOnly);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindNearestCharacter
int TMPro::TMP_TextUtilities::FindNearestCharacter(TMPro::TMP_Text* text, UnityEngine::Vector3 position, UnityEngine::Camera* camera, bool visibleOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::FindNearestCharacter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindNearestCharacter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(visibleOnly)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, camera, visibleOnly);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindIntersectingWord
int TMPro::TMP_TextUtilities::FindIntersectingWord(TMPro::TMP_Text* text, UnityEngine::Vector3 position, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::FindIntersectingWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindIntersectingWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindNearestWord
int TMPro::TMP_TextUtilities::FindNearestWord(TMPro::TMP_Text* text, UnityEngine::Vector3 position, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::FindNearestWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindNearestWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindIntersectingLine
int TMPro::TMP_TextUtilities::FindIntersectingLine(TMPro::TMP_Text* text, UnityEngine::Vector3 position, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::FindIntersectingLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindIntersectingLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindIntersectingLink
int TMPro::TMP_TextUtilities::FindIntersectingLink(TMPro::TMP_Text* text, UnityEngine::Vector3 position, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::FindIntersectingLink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindIntersectingLink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindNearestLink
int TMPro::TMP_TextUtilities::FindNearestLink(TMPro::TMP_Text* text, UnityEngine::Vector3 position, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::FindNearestLink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindNearestLink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(camera)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.PointIntersectRectangle
bool TMPro::TMP_TextUtilities::PointIntersectRectangle(UnityEngine::Vector3 m, UnityEngine::Vector3 a, UnityEngine::Vector3 b, UnityEngine::Vector3 c, UnityEngine::Vector3 d) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::PointIntersectRectangle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "PointIntersectRectangle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m), ::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, m, a, b, c, d);
}
// Autogenerated method: TMPro.TMP_TextUtilities.ScreenPointToWorldPointInRectangle
bool TMPro::TMP_TextUtilities::ScreenPointToWorldPointInRectangle(UnityEngine::Transform* transform, UnityEngine::Vector2 screenPoint, UnityEngine::Camera* cam, UnityEngine::Vector3& worldPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::ScreenPointToWorldPointInRectangle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "ScreenPointToWorldPointInRectangle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(screenPoint), ::il2cpp_utils::ExtractType(cam), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, transform, screenPoint, cam, worldPoint);
}
// Autogenerated method: TMPro.TMP_TextUtilities.IntersectLinePlane
bool TMPro::TMP_TextUtilities::IntersectLinePlane(TMPro::TMP_TextUtilities::LineSegment line, UnityEngine::Vector3 point, UnityEngine::Vector3 normal, UnityEngine::Vector3& intersectingPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::IntersectLinePlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "IntersectLinePlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(line), ::il2cpp_utils::ExtractType(point), ::il2cpp_utils::ExtractType(normal), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, line, point, normal, intersectingPoint);
}
// Autogenerated method: TMPro.TMP_TextUtilities.DistanceToLine
float TMPro::TMP_TextUtilities::DistanceToLine(UnityEngine::Vector3 a, UnityEngine::Vector3 b, UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::DistanceToLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "DistanceToLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(point)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b, point);
}
// Autogenerated method: TMPro.TMP_TextUtilities.ToLowerFast
::Il2CppChar TMPro::TMP_TextUtilities::ToLowerFast(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::ToLowerFast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "ToLowerFast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_TextUtilities.ToUpperFast
::Il2CppChar TMPro::TMP_TextUtilities::ToUpperFast(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::ToUpperFast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "ToUpperFast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_TextUtilities.GetSimpleHashCode
int TMPro::TMP_TextUtilities::GetSimpleHashCode(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::GetSimpleHashCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "GetSimpleHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: TMPro.TMP_TextUtilities.GetSimpleHashCodeLowercase
uint TMPro::TMP_TextUtilities::GetSimpleHashCodeLowercase(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::GetSimpleHashCodeLowercase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "GetSimpleHashCodeLowercase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: TMPro.TMP_TextUtilities.HexToInt
int TMPro::TMP_TextUtilities::HexToInt(::Il2CppChar hex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::HexToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "HexToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hex);
}
// Autogenerated method: TMPro.TMP_TextUtilities.StringHexToInt
int TMPro::TMP_TextUtilities::StringHexToInt(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::StringHexToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "StringHexToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: TMPro.TMP_TextUtilities..cctor
void TMPro::TMP_TextUtilities::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_TextUtilities/LineSegment
#include "TMPro/TMP_TextUtilities_LineSegment.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_UpdateManager
#include "TMPro/TMP_UpdateManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Rendering.ScriptableRenderContext
#include "UnityEngine/Rendering/ScriptableRenderContext.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private TMPro.TMP_UpdateManager s_Instance
TMPro::TMP_UpdateManager* TMPro::TMP_UpdateManager::_get_s_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::_get_s_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_UpdateManager*>("TMPro", "TMP_UpdateManager", "s_Instance"));
}
// Autogenerated static field setter
// Set static field: static private TMPro.TMP_UpdateManager s_Instance
void TMPro::TMP_UpdateManager::_set_s_Instance(TMPro::TMP_UpdateManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::_set_s_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_UpdateManager", "s_Instance", value));
}
// Autogenerated method: TMPro.TMP_UpdateManager.get_instance
TMPro::TMP_UpdateManager* TMPro::TMP_UpdateManager::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateManager", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_UpdateManager*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_UpdateManager.RegisterTextObjectForUpdate
void TMPro::TMP_UpdateManager::RegisterTextObjectForUpdate(TMPro::TMP_Text* textObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::RegisterTextObjectForUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateManager", "RegisterTextObjectForUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textObject)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, textObject);
}
// Autogenerated method: TMPro.TMP_UpdateManager.InternalRegisterTextObjectForUpdate
void TMPro::TMP_UpdateManager::InternalRegisterTextObjectForUpdate(TMPro::TMP_Text* textObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::InternalRegisterTextObjectForUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalRegisterTextObjectForUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textObject)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, textObject);
}
// Autogenerated method: TMPro.TMP_UpdateManager.RegisterTextElementForLayoutRebuild
void TMPro::TMP_UpdateManager::RegisterTextElementForLayoutRebuild(TMPro::TMP_Text* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::RegisterTextElementForLayoutRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateManager", "RegisterTextElementForLayoutRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateManager.InternalRegisterTextElementForLayoutRebuild
bool TMPro::TMP_UpdateManager::InternalRegisterTextElementForLayoutRebuild(TMPro::TMP_Text* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::InternalRegisterTextElementForLayoutRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalRegisterTextElementForLayoutRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateManager.RegisterTextElementForGraphicRebuild
void TMPro::TMP_UpdateManager::RegisterTextElementForGraphicRebuild(TMPro::TMP_Text* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::RegisterTextElementForGraphicRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateManager", "RegisterTextElementForGraphicRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateManager.InternalRegisterTextElementForGraphicRebuild
bool TMPro::TMP_UpdateManager::InternalRegisterTextElementForGraphicRebuild(TMPro::TMP_Text* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::InternalRegisterTextElementForGraphicRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalRegisterTextElementForGraphicRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateManager.OnBeginFrameRendering
void TMPro::TMP_UpdateManager::OnBeginFrameRendering(UnityEngine::Rendering::ScriptableRenderContext renderContext, ::Array<UnityEngine::Camera*>* cameras) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::OnBeginFrameRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBeginFrameRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderContext), ::il2cpp_utils::ExtractType(cameras)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, renderContext, cameras);
}
// Autogenerated method: TMPro.TMP_UpdateManager.OnCameraPreCull
void TMPro::TMP_UpdateManager::OnCameraPreCull(UnityEngine::Camera* cam) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::OnCameraPreCull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCameraPreCull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cam)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cam);
}
// Autogenerated method: TMPro.TMP_UpdateManager.DoRebuilds
void TMPro::TMP_UpdateManager::DoRebuilds() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::DoRebuilds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoRebuilds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_UpdateManager.UnRegisterTextObjectForUpdate
void TMPro::TMP_UpdateManager::UnRegisterTextObjectForUpdate(TMPro::TMP_Text* textObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::UnRegisterTextObjectForUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateManager", "UnRegisterTextObjectForUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textObject)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, textObject);
}
// Autogenerated method: TMPro.TMP_UpdateManager.UnRegisterTextElementForRebuild
void TMPro::TMP_UpdateManager::UnRegisterTextElementForRebuild(TMPro::TMP_Text* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::UnRegisterTextElementForRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateManager", "UnRegisterTextElementForRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateManager.InternalUnRegisterTextElementForGraphicRebuild
void TMPro::TMP_UpdateManager::InternalUnRegisterTextElementForGraphicRebuild(TMPro::TMP_Text* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::InternalUnRegisterTextElementForGraphicRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalUnRegisterTextElementForGraphicRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateManager.InternalUnRegisterTextElementForLayoutRebuild
void TMPro::TMP_UpdateManager::InternalUnRegisterTextElementForLayoutRebuild(TMPro::TMP_Text* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::InternalUnRegisterTextElementForLayoutRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalUnRegisterTextElementForLayoutRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateManager.InternalUnRegisterTextObjectForUpdate
void TMPro::TMP_UpdateManager::InternalUnRegisterTextObjectForUpdate(TMPro::TMP_Text* textObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::InternalUnRegisterTextObjectForUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalUnRegisterTextObjectForUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textObject)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, textObject);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_UpdateRegistry
#include "TMPro/TMP_UpdateRegistry.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.UI.ICanvasElement
#include "UnityEngine/UI/ICanvasElement.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private TMPro.TMP_UpdateRegistry s_Instance
TMPro::TMP_UpdateRegistry* TMPro::TMP_UpdateRegistry::_get_s_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::_get_s_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_UpdateRegistry*>("TMPro", "TMP_UpdateRegistry", "s_Instance"));
}
// Autogenerated static field setter
// Set static field: static private TMPro.TMP_UpdateRegistry s_Instance
void TMPro::TMP_UpdateRegistry::_set_s_Instance(TMPro::TMP_UpdateRegistry* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::_set_s_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_UpdateRegistry", "s_Instance", value));
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.get_instance
TMPro::TMP_UpdateRegistry* TMPro::TMP_UpdateRegistry::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::get_instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateRegistry", "get_instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_UpdateRegistry*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.RegisterCanvasElementForLayoutRebuild
void TMPro::TMP_UpdateRegistry::RegisterCanvasElementForLayoutRebuild(UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::RegisterCanvasElementForLayoutRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateRegistry", "RegisterCanvasElementForLayoutRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.InternalRegisterCanvasElementForLayoutRebuild
bool TMPro::TMP_UpdateRegistry::InternalRegisterCanvasElementForLayoutRebuild(UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::InternalRegisterCanvasElementForLayoutRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalRegisterCanvasElementForLayoutRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.RegisterCanvasElementForGraphicRebuild
void TMPro::TMP_UpdateRegistry::RegisterCanvasElementForGraphicRebuild(UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::RegisterCanvasElementForGraphicRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateRegistry", "RegisterCanvasElementForGraphicRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.InternalRegisterCanvasElementForGraphicRebuild
bool TMPro::TMP_UpdateRegistry::InternalRegisterCanvasElementForGraphicRebuild(UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::InternalRegisterCanvasElementForGraphicRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalRegisterCanvasElementForGraphicRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.PerformUpdateForCanvasRendererObjects
void TMPro::TMP_UpdateRegistry::PerformUpdateForCanvasRendererObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::PerformUpdateForCanvasRendererObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformUpdateForCanvasRendererObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.PerformUpdateForMeshRendererObjects
void TMPro::TMP_UpdateRegistry::PerformUpdateForMeshRendererObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::PerformUpdateForMeshRendererObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformUpdateForMeshRendererObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.UnRegisterCanvasElementForRebuild
void TMPro::TMP_UpdateRegistry::UnRegisterCanvasElementForRebuild(UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::UnRegisterCanvasElementForRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateRegistry", "UnRegisterCanvasElementForRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.InternalUnRegisterCanvasElementForLayoutRebuild
void TMPro::TMP_UpdateRegistry::InternalUnRegisterCanvasElementForLayoutRebuild(UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::InternalUnRegisterCanvasElementForLayoutRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalUnRegisterCanvasElementForLayoutRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.InternalUnRegisterCanvasElementForGraphicRebuild
void TMPro::TMP_UpdateRegistry::InternalUnRegisterCanvasElementForGraphicRebuild(UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::InternalUnRegisterCanvasElementForGraphicRebuild");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalUnRegisterCanvasElementForGraphicRebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, element);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.Compute_DistanceTransform_EventTypes
#include "TMPro/Compute_DistanceTransform_EventTypes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.Compute_DistanceTransform_EventTypes Processing
TMPro::Compute_DistanceTransform_EventTypes TMPro::Compute_DistanceTransform_EventTypes::_get_Processing() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::Compute_DistanceTransform_EventTypes::_get_Processing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::Compute_DistanceTransform_EventTypes>("TMPro", "Compute_DistanceTransform_EventTypes", "Processing"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.Compute_DistanceTransform_EventTypes Processing
void TMPro::Compute_DistanceTransform_EventTypes::_set_Processing(TMPro::Compute_DistanceTransform_EventTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::Compute_DistanceTransform_EventTypes::_set_Processing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "Compute_DistanceTransform_EventTypes", "Processing", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.Compute_DistanceTransform_EventTypes Completed
TMPro::Compute_DistanceTransform_EventTypes TMPro::Compute_DistanceTransform_EventTypes::_get_Completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::Compute_DistanceTransform_EventTypes::_get_Completed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::Compute_DistanceTransform_EventTypes>("TMPro", "Compute_DistanceTransform_EventTypes", "Completed"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.Compute_DistanceTransform_EventTypes Completed
void TMPro::Compute_DistanceTransform_EventTypes::_set_Completed(TMPro::Compute_DistanceTransform_EventTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::Compute_DistanceTransform_EventTypes::_set_Completed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "Compute_DistanceTransform_EventTypes", "Completed", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMPro_EventManager
#include "TMPro/TMPro_EventManager.hpp"
// Including type: TMPro.FastAction`2
#include "TMPro/FastAction_2.hpp"
// Including type: TMPro.Compute_DT_EventArgs
#include "TMPro/Compute_DT_EventArgs.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: TMPro.TMP_FontAsset
#include "TMPro/TMP_FontAsset.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: TMPro.FastAction`3
#include "TMPro/FastAction_3.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: TMPro.FastAction`1
#include "TMPro/FastAction_1.hpp"
// Including type: TMPro.TMP_ColorGradient
#include "TMPro/TMP_ColorGradient.hpp"
// Including type: TMPro.FastAction
#include "TMPro/FastAction.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`2<System.Object,TMPro.Compute_DT_EventArgs> COMPUTE_DT_EVENT
TMPro::FastAction_2<::Il2CppObject*, TMPro::Compute_DT_EventArgs*>* TMPro::TMPro_EventManager::_get_COMPUTE_DT_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_COMPUTE_DT_EVENT");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<TMPro::FastAction_2<::Il2CppObject*, TMPro::Compute_DT_EventArgs*>*>("TMPro", "TMPro_EventManager", "COMPUTE_DT_EVENT")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`2<System.Object,TMPro.Compute_DT_EventArgs> COMPUTE_DT_EVENT
void TMPro::TMPro_EventManager::_set_COMPUTE_DT_EVENT(TMPro::FastAction_2<::Il2CppObject*, TMPro::Compute_DT_EventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_COMPUTE_DT_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "COMPUTE_DT_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`2<System.Boolean,UnityEngine.Material> MATERIAL_PROPERTY_EVENT
TMPro::FastAction_2<bool, UnityEngine::Material*>* TMPro::TMPro_EventManager::_get_MATERIAL_PROPERTY_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_MATERIAL_PROPERTY_EVENT");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<TMPro::FastAction_2<bool, UnityEngine::Material*>*>("TMPro", "TMPro_EventManager", "MATERIAL_PROPERTY_EVENT")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`2<System.Boolean,UnityEngine.Material> MATERIAL_PROPERTY_EVENT
void TMPro::TMPro_EventManager::_set_MATERIAL_PROPERTY_EVENT(TMPro::FastAction_2<bool, UnityEngine::Material*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_MATERIAL_PROPERTY_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "MATERIAL_PROPERTY_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`2<System.Boolean,TMPro.TMP_FontAsset> FONT_PROPERTY_EVENT
TMPro::FastAction_2<bool, TMPro::TMP_FontAsset*>* TMPro::TMPro_EventManager::_get_FONT_PROPERTY_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_FONT_PROPERTY_EVENT");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<TMPro::FastAction_2<bool, TMPro::TMP_FontAsset*>*>("TMPro", "TMPro_EventManager", "FONT_PROPERTY_EVENT")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`2<System.Boolean,TMPro.TMP_FontAsset> FONT_PROPERTY_EVENT
void TMPro::TMPro_EventManager::_set_FONT_PROPERTY_EVENT(TMPro::FastAction_2<bool, TMPro::TMP_FontAsset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_FONT_PROPERTY_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "FONT_PROPERTY_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`2<System.Boolean,UnityEngine.Object> SPRITE_ASSET_PROPERTY_EVENT
TMPro::FastAction_2<bool, UnityEngine::Object*>* TMPro::TMPro_EventManager::_get_SPRITE_ASSET_PROPERTY_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_SPRITE_ASSET_PROPERTY_EVENT");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<TMPro::FastAction_2<bool, UnityEngine::Object*>*>("TMPro", "TMPro_EventManager", "SPRITE_ASSET_PROPERTY_EVENT")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`2<System.Boolean,UnityEngine.Object> SPRITE_ASSET_PROPERTY_EVENT
void TMPro::TMPro_EventManager::_set_SPRITE_ASSET_PROPERTY_EVENT(TMPro::FastAction_2<bool, UnityEngine::Object*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_SPRITE_ASSET_PROPERTY_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "SPRITE_ASSET_PROPERTY_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`2<System.Boolean,TMPro.TextMeshPro> TEXTMESHPRO_PROPERTY_EVENT
TMPro::FastAction_2<bool, TMPro::TextMeshPro*>* TMPro::TMPro_EventManager::_get_TEXTMESHPRO_PROPERTY_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_TEXTMESHPRO_PROPERTY_EVENT");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<TMPro::FastAction_2<bool, TMPro::TextMeshPro*>*>("TMPro", "TMPro_EventManager", "TEXTMESHPRO_PROPERTY_EVENT")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`2<System.Boolean,TMPro.TextMeshPro> TEXTMESHPRO_PROPERTY_EVENT
void TMPro::TMPro_EventManager::_set_TEXTMESHPRO_PROPERTY_EVENT(TMPro::FastAction_2<bool, TMPro::TextMeshPro*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_TEXTMESHPRO_PROPERTY_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "TEXTMESHPRO_PROPERTY_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`3<UnityEngine.GameObject,UnityEngine.Material,UnityEngine.Material> DRAG_AND_DROP_MATERIAL_EVENT
TMPro::FastAction_3<UnityEngine::GameObject*, UnityEngine::Material*, UnityEngine::Material*>* TMPro::TMPro_EventManager::_get_DRAG_AND_DROP_MATERIAL_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_DRAG_AND_DROP_MATERIAL_EVENT");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<TMPro::FastAction_3<UnityEngine::GameObject*, UnityEngine::Material*, UnityEngine::Material*>*>("TMPro", "TMPro_EventManager", "DRAG_AND_DROP_MATERIAL_EVENT")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`3<UnityEngine.GameObject,UnityEngine.Material,UnityEngine.Material> DRAG_AND_DROP_MATERIAL_EVENT
void TMPro::TMPro_EventManager::_set_DRAG_AND_DROP_MATERIAL_EVENT(TMPro::FastAction_3<UnityEngine::GameObject*, UnityEngine::Material*, UnityEngine::Material*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_DRAG_AND_DROP_MATERIAL_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "DRAG_AND_DROP_MATERIAL_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`1<System.Boolean> TEXT_STYLE_PROPERTY_EVENT
TMPro::FastAction_1<bool>* TMPro::TMPro_EventManager::_get_TEXT_STYLE_PROPERTY_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_TEXT_STYLE_PROPERTY_EVENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FastAction_1<bool>*>("TMPro", "TMPro_EventManager", "TEXT_STYLE_PROPERTY_EVENT"));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`1<System.Boolean> TEXT_STYLE_PROPERTY_EVENT
void TMPro::TMPro_EventManager::_set_TEXT_STYLE_PROPERTY_EVENT(TMPro::FastAction_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_TEXT_STYLE_PROPERTY_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "TEXT_STYLE_PROPERTY_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`1<TMPro.TMP_ColorGradient> COLOR_GRADIENT_PROPERTY_EVENT
TMPro::FastAction_1<TMPro::TMP_ColorGradient*>* TMPro::TMPro_EventManager::_get_COLOR_GRADIENT_PROPERTY_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_COLOR_GRADIENT_PROPERTY_EVENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FastAction_1<TMPro::TMP_ColorGradient*>*>("TMPro", "TMPro_EventManager", "COLOR_GRADIENT_PROPERTY_EVENT"));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`1<TMPro.TMP_ColorGradient> COLOR_GRADIENT_PROPERTY_EVENT
void TMPro::TMPro_EventManager::_set_COLOR_GRADIENT_PROPERTY_EVENT(TMPro::FastAction_1<TMPro::TMP_ColorGradient*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_COLOR_GRADIENT_PROPERTY_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "COLOR_GRADIENT_PROPERTY_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction TMP_SETTINGS_PROPERTY_EVENT
TMPro::FastAction* TMPro::TMPro_EventManager::_get_TMP_SETTINGS_PROPERTY_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_TMP_SETTINGS_PROPERTY_EVENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FastAction*>("TMPro", "TMPro_EventManager", "TMP_SETTINGS_PROPERTY_EVENT"));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction TMP_SETTINGS_PROPERTY_EVENT
void TMPro::TMPro_EventManager::_set_TMP_SETTINGS_PROPERTY_EVENT(TMPro::FastAction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_TMP_SETTINGS_PROPERTY_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "TMP_SETTINGS_PROPERTY_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction RESOURCE_LOAD_EVENT
TMPro::FastAction* TMPro::TMPro_EventManager::_get_RESOURCE_LOAD_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_RESOURCE_LOAD_EVENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FastAction*>("TMPro", "TMPro_EventManager", "RESOURCE_LOAD_EVENT"));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction RESOURCE_LOAD_EVENT
void TMPro::TMPro_EventManager::_set_RESOURCE_LOAD_EVENT(TMPro::FastAction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_RESOURCE_LOAD_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "RESOURCE_LOAD_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`2<System.Boolean,TMPro.TextMeshProUGUI> TEXTMESHPRO_UGUI_PROPERTY_EVENT
TMPro::FastAction_2<bool, TMPro::TextMeshProUGUI*>* TMPro::TMPro_EventManager::_get_TEXTMESHPRO_UGUI_PROPERTY_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_TEXTMESHPRO_UGUI_PROPERTY_EVENT");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<TMPro::FastAction_2<bool, TMPro::TextMeshProUGUI*>*>("TMPro", "TMPro_EventManager", "TEXTMESHPRO_UGUI_PROPERTY_EVENT")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`2<System.Boolean,TMPro.TextMeshProUGUI> TEXTMESHPRO_UGUI_PROPERTY_EVENT
void TMPro::TMPro_EventManager::_set_TEXTMESHPRO_UGUI_PROPERTY_EVENT(TMPro::FastAction_2<bool, TMPro::TextMeshProUGUI*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_TEXTMESHPRO_UGUI_PROPERTY_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "TEXTMESHPRO_UGUI_PROPERTY_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction OnPreRenderObject_Event
TMPro::FastAction* TMPro::TMPro_EventManager::_get_OnPreRenderObject_Event() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_OnPreRenderObject_Event");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FastAction*>("TMPro", "TMPro_EventManager", "OnPreRenderObject_Event"));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction OnPreRenderObject_Event
void TMPro::TMPro_EventManager::_set_OnPreRenderObject_Event(TMPro::FastAction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_OnPreRenderObject_Event");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "OnPreRenderObject_Event", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`1<UnityEngine.Object> TEXT_CHANGED_EVENT
TMPro::FastAction_1<UnityEngine::Object*>* TMPro::TMPro_EventManager::_get_TEXT_CHANGED_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_TEXT_CHANGED_EVENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FastAction_1<UnityEngine::Object*>*>("TMPro", "TMPro_EventManager", "TEXT_CHANGED_EVENT"));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`1<UnityEngine.Object> TEXT_CHANGED_EVENT
void TMPro::TMPro_EventManager::_set_TEXT_CHANGED_EVENT(TMPro::FastAction_1<UnityEngine::Object*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_TEXT_CHANGED_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "TEXT_CHANGED_EVENT", value));
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_PRE_RENDER_OBJECT_CHANGED
void TMPro::TMPro_EventManager::ON_PRE_RENDER_OBJECT_CHANGED() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_PRE_RENDER_OBJECT_CHANGED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_PRE_RENDER_OBJECT_CHANGED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_MATERIAL_PROPERTY_CHANGED
void TMPro::TMPro_EventManager::ON_MATERIAL_PROPERTY_CHANGED(bool isChanged, UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_MATERIAL_PROPERTY_CHANGED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_MATERIAL_PROPERTY_CHANGED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isChanged), ::il2cpp_utils::ExtractType(mat)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, isChanged, mat);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_FONT_PROPERTY_CHANGED
void TMPro::TMPro_EventManager::ON_FONT_PROPERTY_CHANGED(bool isChanged, TMPro::TMP_FontAsset* font) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_FONT_PROPERTY_CHANGED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_FONT_PROPERTY_CHANGED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isChanged), ::il2cpp_utils::ExtractType(font)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, isChanged, font);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_SPRITE_ASSET_PROPERTY_CHANGED
void TMPro::TMPro_EventManager::ON_SPRITE_ASSET_PROPERTY_CHANGED(bool isChanged, UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_SPRITE_ASSET_PROPERTY_CHANGED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_SPRITE_ASSET_PROPERTY_CHANGED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isChanged), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, isChanged, obj);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_TEXTMESHPRO_PROPERTY_CHANGED
void TMPro::TMPro_EventManager::ON_TEXTMESHPRO_PROPERTY_CHANGED(bool isChanged, TMPro::TextMeshPro* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_TEXTMESHPRO_PROPERTY_CHANGED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_TEXTMESHPRO_PROPERTY_CHANGED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isChanged), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, isChanged, obj);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_DRAG_AND_DROP_MATERIAL_CHANGED
void TMPro::TMPro_EventManager::ON_DRAG_AND_DROP_MATERIAL_CHANGED(UnityEngine::GameObject* sender, UnityEngine::Material* currentMaterial, UnityEngine::Material* newMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_DRAG_AND_DROP_MATERIAL_CHANGED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_DRAG_AND_DROP_MATERIAL_CHANGED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(currentMaterial), ::il2cpp_utils::ExtractType(newMaterial)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sender, currentMaterial, newMaterial);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_TEXT_STYLE_PROPERTY_CHANGED
void TMPro::TMPro_EventManager::ON_TEXT_STYLE_PROPERTY_CHANGED(bool isChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_TEXT_STYLE_PROPERTY_CHANGED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_TEXT_STYLE_PROPERTY_CHANGED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isChanged)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, isChanged);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_COLOR_GRAIDENT_PROPERTY_CHANGED
void TMPro::TMPro_EventManager::ON_COLOR_GRAIDENT_PROPERTY_CHANGED(TMPro::TMP_ColorGradient* gradient) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_COLOR_GRAIDENT_PROPERTY_CHANGED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_COLOR_GRAIDENT_PROPERTY_CHANGED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gradient)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, gradient);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_TEXT_CHANGED
void TMPro::TMPro_EventManager::ON_TEXT_CHANGED(UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_TEXT_CHANGED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_TEXT_CHANGED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_TMP_SETTINGS_CHANGED
void TMPro::TMPro_EventManager::ON_TMP_SETTINGS_CHANGED() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_TMP_SETTINGS_CHANGED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_TMP_SETTINGS_CHANGED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_RESOURCES_LOADED
void TMPro::TMPro_EventManager::ON_RESOURCES_LOADED() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_RESOURCES_LOADED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_RESOURCES_LOADED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_TEXTMESHPRO_UGUI_PROPERTY_CHANGED
void TMPro::TMPro_EventManager::ON_TEXTMESHPRO_UGUI_PROPERTY_CHANGED(bool isChanged, TMPro::TextMeshProUGUI* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_TEXTMESHPRO_UGUI_PROPERTY_CHANGED");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_TEXTMESHPRO_UGUI_PROPERTY_CHANGED", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isChanged), ::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, isChanged, obj);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_COMPUTE_DT_EVENT
void TMPro::TMPro_EventManager::ON_COMPUTE_DT_EVENT(::Il2CppObject* Sender, TMPro::Compute_DT_EventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_COMPUTE_DT_EVENT");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_COMPUTE_DT_EVENT", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, Sender, e);
}
// Autogenerated method: TMPro.TMPro_EventManager..cctor
void TMPro::TMPro_EventManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.Compute_DT_EventArgs
#include "TMPro/Compute_DT_EventArgs.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMPro_ExtensionMethods
#include "TMPro/TMPro_ExtensionMethods.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Color32
#include "UnityEngine/Color32.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.TMPro_ExtensionMethods.ArrayToString
::Il2CppString* TMPro::TMPro_ExtensionMethods::ArrayToString(::Array<::Il2CppChar>* chars) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::ArrayToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "ArrayToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, chars);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.IntToString
::Il2CppString* TMPro::TMPro_ExtensionMethods::IntToString(::Array<int>* unicodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::IntToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "IntToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicodes)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, unicodes);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.IntToString
::Il2CppString* TMPro::TMPro_ExtensionMethods::IntToString(::Array<int>* unicodes, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::IntToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "IntToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unicodes), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, unicodes, start, length);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.Compare
bool TMPro::TMPro_ExtensionMethods::Compare(UnityEngine::Color32 a, UnityEngine::Color32 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.CompareRGB
bool TMPro::TMPro_ExtensionMethods::CompareRGB(UnityEngine::Color32 a, UnityEngine::Color32 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::CompareRGB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "CompareRGB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.Compare
bool TMPro::TMPro_ExtensionMethods::Compare(UnityEngine::Color a, UnityEngine::Color b) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.CompareRGB
bool TMPro::TMPro_ExtensionMethods::CompareRGB(UnityEngine::Color a, UnityEngine::Color b) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::CompareRGB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "CompareRGB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.Multiply
UnityEngine::Color32 TMPro::TMPro_ExtensionMethods::Multiply(UnityEngine::Color32 c1, UnityEngine::Color32 c2) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c1), ::il2cpp_utils::ExtractType(c2)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color32, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c1, c2);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.Tint
UnityEngine::Color32 TMPro::TMPro_ExtensionMethods::Tint(UnityEngine::Color32 c1, UnityEngine::Color32 c2) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::Tint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "Tint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c1), ::il2cpp_utils::ExtractType(c2)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color32, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c1, c2);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.Tint
UnityEngine::Color32 TMPro::TMPro_ExtensionMethods::Tint(UnityEngine::Color32 c1, float tint) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::Tint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "Tint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c1), ::il2cpp_utils::ExtractType(tint)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color32, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c1, tint);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.Compare
bool TMPro::TMPro_ExtensionMethods::Compare(UnityEngine::Vector3 v1, UnityEngine::Vector3 v2, int accuracy) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v1), ::il2cpp_utils::ExtractType(v2), ::il2cpp_utils::ExtractType(accuracy)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v1, v2, accuracy);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.Compare
bool TMPro::TMPro_ExtensionMethods::Compare(UnityEngine::Quaternion q1, UnityEngine::Quaternion q2, int accuracy) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q1), ::il2cpp_utils::ExtractType(q2), ::il2cpp_utils::ExtractType(accuracy)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, q1, q2, accuracy);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_Math
#include "TMPro/TMP_Math.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single FLOAT_MAX
float TMPro::TMP_Math::_get_FLOAT_MAX() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_get_FLOAT_MAX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("TMPro", "TMP_Math", "FLOAT_MAX"));
}
// Autogenerated static field setter
// Set static field: static public System.Single FLOAT_MAX
void TMPro::TMP_Math::_set_FLOAT_MAX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_set_FLOAT_MAX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Math", "FLOAT_MAX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single FLOAT_MIN
float TMPro::TMP_Math::_get_FLOAT_MIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_get_FLOAT_MIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("TMPro", "TMP_Math", "FLOAT_MIN"));
}
// Autogenerated static field setter
// Set static field: static public System.Single FLOAT_MIN
void TMPro::TMP_Math::_set_FLOAT_MIN(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_set_FLOAT_MIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Math", "FLOAT_MIN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 INT_MAX
int TMPro::TMP_Math::_get_INT_MAX() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_get_INT_MAX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "TMP_Math", "INT_MAX"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 INT_MAX
void TMPro::TMP_Math::_set_INT_MAX(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_set_INT_MAX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Math", "INT_MAX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 INT_MIN
int TMPro::TMP_Math::_get_INT_MIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_get_INT_MIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "TMP_Math", "INT_MIN"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 INT_MIN
void TMPro::TMP_Math::_set_INT_MIN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_set_INT_MIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Math", "INT_MIN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single FLOAT_UNSET
float TMPro::TMP_Math::_get_FLOAT_UNSET() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_get_FLOAT_UNSET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("TMPro", "TMP_Math", "FLOAT_UNSET"));
}
// Autogenerated static field setter
// Set static field: static public System.Single FLOAT_UNSET
void TMPro::TMP_Math::_set_FLOAT_UNSET(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_set_FLOAT_UNSET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Math", "FLOAT_UNSET", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 INT_UNSET
int TMPro::TMP_Math::_get_INT_UNSET() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_get_INT_UNSET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "TMP_Math", "INT_UNSET"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 INT_UNSET
void TMPro::TMP_Math::_set_INT_UNSET(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_set_INT_UNSET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Math", "INT_UNSET", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Vector2 MAX_16BIT
UnityEngine::Vector2 TMPro::TMP_Math::_get_MAX_16BIT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_get_MAX_16BIT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("TMPro", "TMP_Math", "MAX_16BIT"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Vector2 MAX_16BIT
void TMPro::TMP_Math::_set_MAX_16BIT(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_set_MAX_16BIT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Math", "MAX_16BIT", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Vector2 MIN_16BIT
UnityEngine::Vector2 TMPro::TMP_Math::_get_MIN_16BIT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_get_MIN_16BIT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("TMPro", "TMP_Math", "MIN_16BIT"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Vector2 MIN_16BIT
void TMPro::TMP_Math::_set_MIN_16BIT(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_set_MIN_16BIT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Math", "MIN_16BIT", value));
}
// Autogenerated method: TMPro.TMP_Math.Approximately
bool TMPro::TMP_Math::Approximately(float a, float b) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::Approximately");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Math", "Approximately", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: TMPro.TMP_Math..cctor
void TMPro::TMP_Math::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TMP_Math", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_VertexDataUpdateFlags
#include "TMPro/TMP_VertexDataUpdateFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_VertexDataUpdateFlags None
TMPro::TMP_VertexDataUpdateFlags TMPro::TMP_VertexDataUpdateFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_VertexDataUpdateFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_VertexDataUpdateFlags>("TMPro", "TMP_VertexDataUpdateFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_VertexDataUpdateFlags None
void TMPro::TMP_VertexDataUpdateFlags::_set_None(TMPro::TMP_VertexDataUpdateFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_VertexDataUpdateFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_VertexDataUpdateFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_VertexDataUpdateFlags Vertices
TMPro::TMP_VertexDataUpdateFlags TMPro::TMP_VertexDataUpdateFlags::_get_Vertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_VertexDataUpdateFlags::_get_Vertices");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_VertexDataUpdateFlags>("TMPro", "TMP_VertexDataUpdateFlags", "Vertices"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_VertexDataUpdateFlags Vertices
void TMPro::TMP_VertexDataUpdateFlags::_set_Vertices(TMPro::TMP_VertexDataUpdateFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_VertexDataUpdateFlags::_set_Vertices");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_VertexDataUpdateFlags", "Vertices", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_VertexDataUpdateFlags Uv0
TMPro::TMP_VertexDataUpdateFlags TMPro::TMP_VertexDataUpdateFlags::_get_Uv0() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_VertexDataUpdateFlags::_get_Uv0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_VertexDataUpdateFlags>("TMPro", "TMP_VertexDataUpdateFlags", "Uv0"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_VertexDataUpdateFlags Uv0
void TMPro::TMP_VertexDataUpdateFlags::_set_Uv0(TMPro::TMP_VertexDataUpdateFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_VertexDataUpdateFlags::_set_Uv0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_VertexDataUpdateFlags", "Uv0", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_VertexDataUpdateFlags Uv2
TMPro::TMP_VertexDataUpdateFlags TMPro::TMP_VertexDataUpdateFlags::_get_Uv2() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_VertexDataUpdateFlags::_get_Uv2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_VertexDataUpdateFlags>("TMPro", "TMP_VertexDataUpdateFlags", "Uv2"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_VertexDataUpdateFlags Uv2
void TMPro::TMP_VertexDataUpdateFlags::_set_Uv2(TMPro::TMP_VertexDataUpdateFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_VertexDataUpdateFlags::_set_Uv2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_VertexDataUpdateFlags", "Uv2", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_VertexDataUpdateFlags Uv4
TMPro::TMP_VertexDataUpdateFlags TMPro::TMP_VertexDataUpdateFlags::_get_Uv4() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_VertexDataUpdateFlags::_get_Uv4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_VertexDataUpdateFlags>("TMPro", "TMP_VertexDataUpdateFlags", "Uv4"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_VertexDataUpdateFlags Uv4
void TMPro::TMP_VertexDataUpdateFlags::_set_Uv4(TMPro::TMP_VertexDataUpdateFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_VertexDataUpdateFlags::_set_Uv4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_VertexDataUpdateFlags", "Uv4", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_VertexDataUpdateFlags Colors32
TMPro::TMP_VertexDataUpdateFlags TMPro::TMP_VertexDataUpdateFlags::_get_Colors32() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_VertexDataUpdateFlags::_get_Colors32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_VertexDataUpdateFlags>("TMPro", "TMP_VertexDataUpdateFlags", "Colors32"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_VertexDataUpdateFlags Colors32
void TMPro::TMP_VertexDataUpdateFlags::_set_Colors32(TMPro::TMP_VertexDataUpdateFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_VertexDataUpdateFlags::_set_Colors32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_VertexDataUpdateFlags", "Colors32", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_VertexDataUpdateFlags All
TMPro::TMP_VertexDataUpdateFlags TMPro::TMP_VertexDataUpdateFlags::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_VertexDataUpdateFlags::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_VertexDataUpdateFlags>("TMPro", "TMP_VertexDataUpdateFlags", "All"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_VertexDataUpdateFlags All
void TMPro::TMP_VertexDataUpdateFlags::_set_All(TMPro::TMP_VertexDataUpdateFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_VertexDataUpdateFlags::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_VertexDataUpdateFlags", "All", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.VertexGradient
#include "TMPro/VertexGradient.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_LinkInfo
#include "TMPro/TMP_LinkInfo.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.TMP_LinkInfo.SetLinkID
void TMPro::TMP_LinkInfo::SetLinkID(::Array<::Il2CppChar>* text, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_LinkInfo::SetLinkID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetLinkID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(length)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, text, startIndex, length);
}
// Autogenerated method: TMPro.TMP_LinkInfo.GetLinkText
::Il2CppString* TMPro::TMP_LinkInfo::GetLinkText() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_LinkInfo::GetLinkText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLinkText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_LinkInfo.GetLinkID
::Il2CppString* TMPro::TMP_LinkInfo::GetLinkID() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_LinkInfo::GetLinkID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLinkID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_WordInfo
#include "TMPro/TMP_WordInfo.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.TMP_WordInfo.GetWord
::Il2CppString* TMPro::TMP_WordInfo::GetWord() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_WordInfo::GetWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.Extents
#include "TMPro/Extents.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.Extents.ToString
::Il2CppString* TMPro::Extents::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::Extents::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.Mesh_Extents
#include "TMPro/Mesh_Extents.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.Mesh_Extents.ToString
::Il2CppString* TMPro::Mesh_Extents::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::Mesh_Extents::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: TMPro.TMP_SubMesh
#include "TMPro/TMP_SubMesh.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: TMPro.TextContainer
#include "TMPro/TextContainer.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Color32
#include "UnityEngine/Color32.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.UI.CanvasUpdate
#include "UnityEngine/UI/CanvasUpdate.hpp"
// Including type: TMPro.TMP_TextInfo
#include "TMPro/TMP_TextInfo.hpp"
// Including type: TMPro.TMP_VertexDataUpdateFlags
#include "TMPro/TMP_VertexDataUpdateFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.TextMeshPro.UpdateEnvMapMatrix
void TMPro::TextMeshPro::UpdateEnvMapMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::UpdateEnvMapMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateEnvMapMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetMask
void TMPro::TextMeshPro::SetMask(TMPro::MaskingTypes maskType) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maskType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, maskType);
}
// Autogenerated method: TMPro.TextMeshPro.SetMaskCoordinates
void TMPro::TextMeshPro::SetMaskCoordinates(UnityEngine::Vector4 coords) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetMaskCoordinates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaskCoordinates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(coords)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, coords);
}
// Autogenerated method: TMPro.TextMeshPro.SetMaskCoordinates
void TMPro::TextMeshPro::SetMaskCoordinates(UnityEngine::Vector4 coords, float softX, float softY) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetMaskCoordinates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaskCoordinates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(coords), ::il2cpp_utils::ExtractType(softX), ::il2cpp_utils::ExtractType(softY)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, coords, softX, softY);
}
// Autogenerated method: TMPro.TextMeshPro.EnableMasking
void TMPro::TextMeshPro::EnableMasking() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::EnableMasking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableMasking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.DisableMasking
void TMPro::TextMeshPro::DisableMasking() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::DisableMasking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableMasking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateMask
void TMPro::TextMeshPro::UpdateMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::UpdateMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.CreateMaterialInstance
void TMPro::TextMeshPro::CreateMaterialInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::CreateMaterialInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMaterialInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetPerspectiveCorrection
void TMPro::TextMeshPro::SetPerspectiveCorrection() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetPerspectiveCorrection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPerspectiveCorrection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.OnPreRenderObject
void TMPro::TextMeshPro::OnPreRenderObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::OnPreRenderObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPreRenderObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetMeshFilters
void TMPro::TextMeshPro::SetMeshFilters(bool state) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetMeshFilters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMeshFilters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateSDFScale
void TMPro::TextMeshPro::UpdateSDFScale(float scaleDelta) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::UpdateSDFScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSDFScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scaleDelta)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, scaleDelta);
}
// Autogenerated method: TMPro.TextMeshPro.get_sortingLayerID
int TMPro::TextMeshPro::get_sortingLayerID() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::get_sortingLayerID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sortingLayerID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.set_sortingLayerID
void TMPro::TextMeshPro::set_sortingLayerID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::set_sortingLayerID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sortingLayerID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextMeshPro.get_sortingOrder
int TMPro::TextMeshPro::get_sortingOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::get_sortingOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sortingOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.set_sortingOrder
void TMPro::TextMeshPro::set_sortingOrder(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::set_sortingOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sortingOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextMeshPro.get_textContainer
TMPro::TextContainer* TMPro::TextMeshPro::get_textContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::get_textContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TextContainer*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.get_renderer
UnityEngine::Renderer* TMPro::TextMeshPro::get_renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::get_renderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Renderer*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.get_meshFilter
UnityEngine::MeshFilter* TMPro::TextMeshPro::get_meshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::get_meshFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_meshFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::MeshFilter*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.get_maskType
TMPro::MaskingTypes TMPro::TextMeshPro::get_maskType() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::get_maskType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maskType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::MaskingTypes, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.set_maskType
void TMPro::TextMeshPro::set_maskType(TMPro::MaskingTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::set_maskType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maskType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextMeshPro.SetMask
void TMPro::TextMeshPro::SetMask(TMPro::MaskingTypes type, UnityEngine::Vector4 maskCoords) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(maskCoords)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, type, maskCoords);
}
// Autogenerated method: TMPro.TextMeshPro.SetMask
void TMPro::TextMeshPro::SetMask(TMPro::MaskingTypes type, UnityEngine::Vector4 maskCoords, float softnessX, float softnessY) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(maskCoords), ::il2cpp_utils::ExtractType(softnessX), ::il2cpp_utils::ExtractType(softnessY)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, type, maskCoords, softnessX, softnessY);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateFontAsset
void TMPro::TextMeshPro::UpdateFontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::UpdateFontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.CalculateLayoutInputHorizontal
void TMPro::TextMeshPro::CalculateLayoutInputHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::CalculateLayoutInputHorizontal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateLayoutInputHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.CalculateLayoutInputVertical
void TMPro::TextMeshPro::CalculateLayoutInputVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::CalculateLayoutInputVertical");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateLayoutInputVertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.Awake
void TMPro::TextMeshPro::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.OnEnable
void TMPro::TextMeshPro::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.OnDisable
void TMPro::TextMeshPro::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.OnDestroy
void TMPro::TextMeshPro::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.LoadFontAsset
void TMPro::TextMeshPro::LoadFontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::LoadFontAsset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadFontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.GetMaterial
UnityEngine::Material* TMPro::TextMeshPro::GetMaterial(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::GetMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TextMeshPro.GetMaterials
::Array<UnityEngine::Material*>* TMPro::TextMeshPro::GetMaterials(::Array<UnityEngine::Material*>* mats) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::GetMaterials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mats)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Material*>*, false>(this, ___internal__method, mats);
}
// Autogenerated method: TMPro.TextMeshPro.SetSharedMaterial
void TMPro::TextMeshPro::SetSharedMaterial(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetSharedMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TextMeshPro.GetSharedMaterials
::Array<UnityEngine::Material*>* TMPro::TextMeshPro::GetSharedMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::GetSharedMaterials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSharedMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Material*>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetSharedMaterials
void TMPro::TextMeshPro::SetSharedMaterials(::Array<UnityEngine::Material*>* materials) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetSharedMaterials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSharedMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(materials)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, materials);
}
// Autogenerated method: TMPro.TextMeshPro.SetOutlineThickness
void TMPro::TextMeshPro::SetOutlineThickness(float thickness) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetOutlineThickness");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOutlineThickness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thickness)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, thickness);
}
// Autogenerated method: TMPro.TextMeshPro.SetFaceColor
void TMPro::TextMeshPro::SetFaceColor(UnityEngine::Color32 color) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetFaceColor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFaceColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: TMPro.TextMeshPro.SetOutlineColor
void TMPro::TextMeshPro::SetOutlineColor(UnityEngine::Color32 color) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetOutlineColor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOutlineColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: TMPro.TextMeshPro.SetShaderDepth
void TMPro::TextMeshPro::SetShaderDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetShaderDepth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetShaderDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetCulling
void TMPro::TextMeshPro::SetCulling() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetCulling");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCulling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.GetPaddingForMaterial
float TMPro::TextMeshPro::GetPaddingForMaterial(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::GetPaddingForMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPaddingForMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TextMeshPro.GetPaddingForMaterial
float TMPro::TextMeshPro::GetPaddingForMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::GetPaddingForMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPaddingForMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetArraySizes
int TMPro::TextMeshPro::SetArraySizes(::Array<TMPro::TMP_Text::UnicodeChar>* chars) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetArraySizes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetArraySizes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars);
}
// Autogenerated method: TMPro.TextMeshPro.ComputeMarginSize
void TMPro::TextMeshPro::ComputeMarginSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::ComputeMarginSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeMarginSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.OnDidApplyAnimationProperties
void TMPro::TextMeshPro::OnDidApplyAnimationProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::OnDidApplyAnimationProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDidApplyAnimationProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.OnTransformParentChanged
void TMPro::TextMeshPro::OnTransformParentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::OnTransformParentChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTransformParentChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.OnRectTransformDimensionsChange
void TMPro::TextMeshPro::OnRectTransformDimensionsChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::OnRectTransformDimensionsChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRectTransformDimensionsChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.InternalUpdate
void TMPro::TextMeshPro::InternalUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::InternalUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.GenerateTextMesh
void TMPro::TextMeshPro::GenerateTextMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::GenerateTextMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateTextMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.GetTextContainerLocalCorners
::Array<UnityEngine::Vector3>* TMPro::TextMeshPro::GetTextContainerLocalCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::GetTextContainerLocalCorners");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextContainerLocalCorners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector3>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetActiveSubMeshes
void TMPro::TextMeshPro::SetActiveSubMeshes(bool state) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetActiveSubMeshes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetActiveSubMeshes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: TMPro.TextMeshPro.ClearSubMeshObjects
void TMPro::TextMeshPro::ClearSubMeshObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::ClearSubMeshObjects");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSubMeshObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.GetCompoundBounds
UnityEngine::Bounds TMPro::TextMeshPro::GetCompoundBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::GetCompoundBounds");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCompoundBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.AdjustLineOffset
void TMPro::TextMeshPro::AdjustLineOffset(int startIndex, int endIndex, float offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::AdjustLineOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AdjustLineOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(endIndex), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, startIndex, endIndex, offset);
}
// Autogenerated method: TMPro.TextMeshPro.get_autoSizeTextContainer
bool TMPro::TextMeshPro::get_autoSizeTextContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::get_autoSizeTextContainer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_autoSizeTextContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.set_autoSizeTextContainer
void TMPro::TextMeshPro::set_autoSizeTextContainer(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::set_autoSizeTextContainer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_autoSizeTextContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextMeshPro.get_transform
UnityEngine::Transform* TMPro::TextMeshPro::get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::get_transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.get_mesh
UnityEngine::Mesh* TMPro::TextMeshPro::get_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::get_mesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetVerticesDirty
void TMPro::TextMeshPro::SetVerticesDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetVerticesDirty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVerticesDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetLayoutDirty
void TMPro::TextMeshPro::SetLayoutDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetLayoutDirty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayoutDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetMaterialDirty
void TMPro::TextMeshPro::SetMaterialDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetMaterialDirty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaterialDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetAllDirty
void TMPro::TextMeshPro::SetAllDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetAllDirty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAllDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.Rebuild
void TMPro::TextMeshPro::Rebuild(UnityEngine::UI::CanvasUpdate update) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::Rebuild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(update)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, update);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateMaterial
void TMPro::TextMeshPro::UpdateMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::UpdateMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateMeshPadding
void TMPro::TextMeshPro::UpdateMeshPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::UpdateMeshPadding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMeshPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.ForceMeshUpdate
void TMPro::TextMeshPro::ForceMeshUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::ForceMeshUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceMeshUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.ForceMeshUpdate
void TMPro::TextMeshPro::ForceMeshUpdate(bool ignoreInactive) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::ForceMeshUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceMeshUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ignoreInactive)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ignoreInactive);
}
// Autogenerated method: TMPro.TextMeshPro.GetTextInfo
TMPro::TMP_TextInfo* TMPro::TextMeshPro::GetTextInfo(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::GetTextInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_TextInfo*, false>(this, ___internal__method, text);
}
// Autogenerated method: TMPro.TextMeshPro.ClearMesh
void TMPro::TextMeshPro::ClearMesh(bool updateMesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::ClearMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(updateMesh)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, updateMesh);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateGeometry
void TMPro::TextMeshPro::UpdateGeometry(UnityEngine::Mesh* mesh, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::UpdateGeometry");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, mesh, index);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateVertexData
void TMPro::TextMeshPro::UpdateVertexData(TMPro::TMP_VertexDataUpdateFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::UpdateVertexData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVertexData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, flags);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateVertexData
void TMPro::TextMeshPro::UpdateVertexData() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::UpdateVertexData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVertexData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: TMPro.TMP_SubMeshUI
#include "TMPro/TMP_SubMeshUI.hpp"
// Including type: UnityEngine.CanvasRenderer
#include "UnityEngine/CanvasRenderer.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Color32
#include "UnityEngine/Color32.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.UI.CanvasUpdate
#include "UnityEngine/UI/CanvasUpdate.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: TMPro.TMP_TextInfo
#include "TMPro/TMP_TextInfo.hpp"
// Including type: TMPro.TMP_VertexDataUpdateFlags
#include "TMPro/TMP_VertexDataUpdateFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.TextMeshProUGUI.GetCanvas
UnityEngine::Canvas* TMPro::TextMeshProUGUI::GetCanvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::GetCanvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCanvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Canvas*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateEnvMapMatrix
void TMPro::TextMeshProUGUI::UpdateEnvMapMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::UpdateEnvMapMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateEnvMapMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.EnableMasking
void TMPro::TextMeshProUGUI::EnableMasking() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::EnableMasking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableMasking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.DisableMasking
void TMPro::TextMeshProUGUI::DisableMasking() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::DisableMasking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableMasking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateMask
void TMPro::TextMeshProUGUI::UpdateMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::UpdateMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetPerspectiveCorrection
void TMPro::TextMeshProUGUI::SetPerspectiveCorrection() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::SetPerspectiveCorrection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPerspectiveCorrection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetMeshArrays
void TMPro::TextMeshProUGUI::SetMeshArrays(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::SetMeshArrays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMeshArrays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: TMPro.TextMeshProUGUI.OnPreRenderCanvas
void TMPro::TextMeshProUGUI::OnPreRenderCanvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::OnPreRenderCanvas");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPreRenderCanvas", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateSDFScale
void TMPro::TextMeshProUGUI::UpdateSDFScale(float scaleDelta) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::UpdateSDFScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSDFScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scaleDelta)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, scaleDelta);
}
// Autogenerated method: TMPro.TextMeshProUGUI.CalculateLayoutInputHorizontal
void TMPro::TextMeshProUGUI::CalculateLayoutInputHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::CalculateLayoutInputHorizontal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateLayoutInputHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.CalculateLayoutInputVertical
void TMPro::TextMeshProUGUI::CalculateLayoutInputVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::CalculateLayoutInputVertical");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateLayoutInputVertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateSubObjectPivot
void TMPro::TextMeshProUGUI::UpdateSubObjectPivot() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::UpdateSubObjectPivot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateSubObjectPivot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.get_maskOffset
UnityEngine::Vector4 TMPro::TextMeshProUGUI::get_maskOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::get_maskOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maskOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector4, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.set_maskOffset
void TMPro::TextMeshProUGUI::set_maskOffset(UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::set_maskOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maskOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateFontAsset
void TMPro::TextMeshProUGUI::UpdateFontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::UpdateFontAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateFontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.Awake
void TMPro::TextMeshProUGUI::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.OnEnable
void TMPro::TextMeshProUGUI::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.OnDisable
void TMPro::TextMeshProUGUI::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.OnDestroy
void TMPro::TextMeshProUGUI::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.LoadFontAsset
void TMPro::TextMeshProUGUI::LoadFontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::LoadFontAsset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadFontAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetMaterial
UnityEngine::Material* TMPro::TextMeshProUGUI::GetMaterial(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::GetMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetMaterials
::Array<UnityEngine::Material*>* TMPro::TextMeshProUGUI::GetMaterials(::Array<UnityEngine::Material*>* mats) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::GetMaterials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mats)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Material*>*, false>(this, ___internal__method, mats);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetSharedMaterial
void TMPro::TextMeshProUGUI::SetSharedMaterial(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::SetSharedMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSharedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetSharedMaterials
::Array<UnityEngine::Material*>* TMPro::TextMeshProUGUI::GetSharedMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::GetSharedMaterials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSharedMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Material*>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetSharedMaterials
void TMPro::TextMeshProUGUI::SetSharedMaterials(::Array<UnityEngine::Material*>* materials) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::SetSharedMaterials");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSharedMaterials", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(materials)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, materials);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetOutlineThickness
void TMPro::TextMeshProUGUI::SetOutlineThickness(float thickness) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::SetOutlineThickness");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOutlineThickness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thickness)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, thickness);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetFaceColor
void TMPro::TextMeshProUGUI::SetFaceColor(UnityEngine::Color32 color) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::SetFaceColor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFaceColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetOutlineColor
void TMPro::TextMeshProUGUI::SetOutlineColor(UnityEngine::Color32 color) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::SetOutlineColor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOutlineColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetShaderDepth
void TMPro::TextMeshProUGUI::SetShaderDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::SetShaderDepth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetShaderDepth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetCulling
void TMPro::TextMeshProUGUI::SetCulling() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::SetCulling");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCulling", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetPaddingForMaterial
float TMPro::TextMeshProUGUI::GetPaddingForMaterial(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::GetPaddingForMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPaddingForMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mat)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetPaddingForMaterial
float TMPro::TextMeshProUGUI::GetPaddingForMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::GetPaddingForMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPaddingForMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetArraySizes
int TMPro::TextMeshProUGUI::SetArraySizes(::Array<TMPro::TMP_Text::UnicodeChar>* chars) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::SetArraySizes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetArraySizes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars);
}
// Autogenerated method: TMPro.TextMeshProUGUI.ComputeMarginSize
void TMPro::TextMeshProUGUI::ComputeMarginSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::ComputeMarginSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeMarginSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.OnDidApplyAnimationProperties
void TMPro::TextMeshProUGUI::OnDidApplyAnimationProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::OnDidApplyAnimationProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDidApplyAnimationProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.OnCanvasHierarchyChanged
void TMPro::TextMeshProUGUI::OnCanvasHierarchyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::OnCanvasHierarchyChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCanvasHierarchyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.OnTransformParentChanged
void TMPro::TextMeshProUGUI::OnTransformParentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::OnTransformParentChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTransformParentChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.OnRectTransformDimensionsChange
void TMPro::TextMeshProUGUI::OnRectTransformDimensionsChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::OnRectTransformDimensionsChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRectTransformDimensionsChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.InternalUpdate
void TMPro::TextMeshProUGUI::InternalUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::InternalUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GenerateTextMesh
void TMPro::TextMeshProUGUI::GenerateTextMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::GenerateTextMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateTextMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetTextContainerLocalCorners
::Array<UnityEngine::Vector3>* TMPro::TextMeshProUGUI::GetTextContainerLocalCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::GetTextContainerLocalCorners");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextContainerLocalCorners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector3>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetActiveSubMeshes
void TMPro::TextMeshProUGUI::SetActiveSubMeshes(bool state) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::SetActiveSubMeshes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetActiveSubMeshes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetCompoundBounds
UnityEngine::Bounds TMPro::TextMeshProUGUI::GetCompoundBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::GetCompoundBounds");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCompoundBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.AdjustLineOffset
void TMPro::TextMeshProUGUI::AdjustLineOffset(int startIndex, int endIndex, float offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::AdjustLineOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AdjustLineOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(endIndex), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, startIndex, endIndex, offset);
}
// Autogenerated method: TMPro.TextMeshProUGUI.get_materialForRendering
UnityEngine::Material* TMPro::TextMeshProUGUI::get_materialForRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::get_materialForRendering");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_materialForRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.get_autoSizeTextContainer
bool TMPro::TextMeshProUGUI::get_autoSizeTextContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::get_autoSizeTextContainer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_autoSizeTextContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.set_autoSizeTextContainer
void TMPro::TextMeshProUGUI::set_autoSizeTextContainer(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::set_autoSizeTextContainer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_autoSizeTextContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextMeshProUGUI.get_mesh
UnityEngine::Mesh* TMPro::TextMeshProUGUI::get_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::get_mesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.get_canvasRenderer
UnityEngine::CanvasRenderer* TMPro::TextMeshProUGUI::get_canvasRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::get_canvasRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canvasRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::CanvasRenderer*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetVerticesDirty
void TMPro::TextMeshProUGUI::SetVerticesDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::SetVerticesDirty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetVerticesDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetLayoutDirty
void TMPro::TextMeshProUGUI::SetLayoutDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::SetLayoutDirty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayoutDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetMaterialDirty
void TMPro::TextMeshProUGUI::SetMaterialDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::SetMaterialDirty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMaterialDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetAllDirty
void TMPro::TextMeshProUGUI::SetAllDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::SetAllDirty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAllDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.Rebuild
void TMPro::TextMeshProUGUI::Rebuild(UnityEngine::UI::CanvasUpdate update) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::Rebuild");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rebuild", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(update)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, update);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetModifiedMaterial
UnityEngine::Material* TMPro::TextMeshProUGUI::GetModifiedMaterial(UnityEngine::Material* baseMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::GetModifiedMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetModifiedMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(baseMaterial)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method, baseMaterial);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateMaterial
void TMPro::TextMeshProUGUI::UpdateMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::UpdateMaterial");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.RecalculateClipping
void TMPro::TextMeshProUGUI::RecalculateClipping() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::RecalculateClipping");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateClipping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.RecalculateMasking
void TMPro::TextMeshProUGUI::RecalculateMasking() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::RecalculateMasking");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalculateMasking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.Cull
void TMPro::TextMeshProUGUI::Cull(UnityEngine::Rect clipRect, bool validRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::Cull");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clipRect), ::il2cpp_utils::ExtractType(validRect)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clipRect, validRect);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateMeshPadding
void TMPro::TextMeshProUGUI::UpdateMeshPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::UpdateMeshPadding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMeshPadding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.InternalCrossFadeColor
void TMPro::TextMeshProUGUI::InternalCrossFadeColor(UnityEngine::Color targetColor, float duration, bool ignoreTimeScale, bool useAlpha) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::InternalCrossFadeColor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalCrossFadeColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetColor), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(ignoreTimeScale), ::il2cpp_utils::ExtractType(useAlpha)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, targetColor, duration, ignoreTimeScale, useAlpha);
}
// Autogenerated method: TMPro.TextMeshProUGUI.InternalCrossFadeAlpha
void TMPro::TextMeshProUGUI::InternalCrossFadeAlpha(float alpha, float duration, bool ignoreTimeScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::InternalCrossFadeAlpha");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalCrossFadeAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(alpha), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(ignoreTimeScale)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, alpha, duration, ignoreTimeScale);
}
// Autogenerated method: TMPro.TextMeshProUGUI.ForceMeshUpdate
void TMPro::TextMeshProUGUI::ForceMeshUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::ForceMeshUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceMeshUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.ForceMeshUpdate
void TMPro::TextMeshProUGUI::ForceMeshUpdate(bool ignoreInactive) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::ForceMeshUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceMeshUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ignoreInactive)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ignoreInactive);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetTextInfo
TMPro::TMP_TextInfo* TMPro::TextMeshProUGUI::GetTextInfo(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::GetTextInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTextInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_TextInfo*, false>(this, ___internal__method, text);
}
// Autogenerated method: TMPro.TextMeshProUGUI.ClearMesh
void TMPro::TextMeshProUGUI::ClearMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::ClearMesh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateGeometry
void TMPro::TextMeshProUGUI::UpdateGeometry(UnityEngine::Mesh* mesh, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::UpdateGeometry");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGeometry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mesh), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, mesh, index);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateVertexData
void TMPro::TextMeshProUGUI::UpdateVertexData(TMPro::TMP_VertexDataUpdateFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::UpdateVertexData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVertexData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flags)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, flags);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateVertexData
void TMPro::TextMeshProUGUI::UpdateVertexData() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::UpdateVertexData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVertexData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TextContainerAnchors
#include "TMPro/TextContainerAnchors.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors TopLeft
TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_TopLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_get_TopLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "TopLeft"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors TopLeft
void TMPro::TextContainerAnchors::_set_TopLeft(TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_set_TopLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "TopLeft", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors Top
TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_Top() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_get_Top");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "Top"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors Top
void TMPro::TextContainerAnchors::_set_Top(TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_set_Top");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "Top", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors TopRight
TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_TopRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_get_TopRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "TopRight"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors TopRight
void TMPro::TextContainerAnchors::_set_TopRight(TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_set_TopRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "TopRight", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors Left
TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "Left"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors Left
void TMPro::TextContainerAnchors::_set_Left(TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors Middle
TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_Middle() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_get_Middle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "Middle"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors Middle
void TMPro::TextContainerAnchors::_set_Middle(TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_set_Middle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "Middle", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors Right
TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "Right"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors Right
void TMPro::TextContainerAnchors::_set_Right(TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors BottomLeft
TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_BottomLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_get_BottomLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "BottomLeft"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors BottomLeft
void TMPro::TextContainerAnchors::_set_BottomLeft(TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_set_BottomLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "BottomLeft", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors Bottom
TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_Bottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_get_Bottom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "Bottom"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors Bottom
void TMPro::TextContainerAnchors::_set_Bottom(TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_set_Bottom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "Bottom", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors BottomRight
TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_BottomRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_get_BottomRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "BottomRight"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors BottomRight
void TMPro::TextContainerAnchors::_set_BottomRight(TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_set_BottomRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "BottomRight", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors Custom
TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors Custom
void TMPro::TextContainerAnchors::_set_Custom(TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "Custom", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TextContainer
#include "TMPro/TextContainer.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector2 k_defaultSize
UnityEngine::Vector2 TMPro::TextContainer::_get_k_defaultSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::_get_k_defaultSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("TMPro", "TextContainer", "k_defaultSize"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector2 k_defaultSize
void TMPro::TextContainer::_set_k_defaultSize(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::_set_k_defaultSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainer", "k_defaultSize", value));
}
// Autogenerated method: TMPro.TextContainer.get_hasChanged
bool TMPro::TextContainer::get_hasChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::get_hasChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_hasChanged
void TMPro::TextContainer::set_hasChanged(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::set_hasChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hasChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_pivot
UnityEngine::Vector2 TMPro::TextContainer::get_pivot() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::get_pivot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pivot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_pivot
void TMPro::TextContainer::set_pivot(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::set_pivot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pivot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_anchorPosition
TMPro::TextContainerAnchors TMPro::TextContainer::get_anchorPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::get_anchorPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_anchorPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TextContainerAnchors, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_anchorPosition
void TMPro::TextContainer::set_anchorPosition(TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::set_anchorPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_anchorPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_rect
UnityEngine::Rect TMPro::TextContainer::get_rect() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::get_rect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_rect
void TMPro::TextContainer::set_rect(UnityEngine::Rect value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::set_rect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_size
UnityEngine::Vector2 TMPro::TextContainer::get_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::get_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_size
void TMPro::TextContainer::set_size(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::set_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_width
float TMPro::TextContainer::get_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::get_width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_width
void TMPro::TextContainer::set_width(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::set_width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_height
float TMPro::TextContainer::get_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::get_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_height
void TMPro::TextContainer::set_height(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::set_height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_isDefaultWidth
bool TMPro::TextContainer::get_isDefaultWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::get_isDefaultWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDefaultWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.get_isDefaultHeight
bool TMPro::TextContainer::get_isDefaultHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::get_isDefaultHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDefaultHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.get_isAutoFitting
bool TMPro::TextContainer::get_isAutoFitting() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::get_isAutoFitting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isAutoFitting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_isAutoFitting
void TMPro::TextContainer::set_isAutoFitting(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::set_isAutoFitting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isAutoFitting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_corners
::Array<UnityEngine::Vector3>* TMPro::TextContainer::get_corners() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::get_corners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_corners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector3>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.get_worldCorners
::Array<UnityEngine::Vector3>* TMPro::TextContainer::get_worldCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::get_worldCorners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_worldCorners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector3>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.get_margins
UnityEngine::Vector4 TMPro::TextContainer::get_margins() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::get_margins");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_margins", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector4, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_margins
void TMPro::TextContainer::set_margins(UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::set_margins");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_margins", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_rectTransform
UnityEngine::RectTransform* TMPro::TextContainer::get_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::get_rectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.get_textMeshPro
TMPro::TextMeshPro* TMPro::TextContainer::get_textMeshPro() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::get_textMeshPro");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textMeshPro", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TextMeshPro*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.OnContainerChanged
void TMPro::TextContainer::OnContainerChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::OnContainerChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnContainerChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.SetRect
void TMPro::TextContainer::SetRect(UnityEngine::Vector2 size) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::SetRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: TMPro.TextContainer.UpdateCorners
void TMPro::TextContainer::UpdateCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::UpdateCorners");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCorners", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.GetPivot
UnityEngine::Vector2 TMPro::TextContainer::GetPivot(TMPro::TextContainerAnchors anchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::GetPivot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPivot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anchor)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method, anchor);
}
// Autogenerated method: TMPro.TextContainer.GetAnchorPosition
TMPro::TextContainerAnchors TMPro::TextContainer::GetAnchorPosition(UnityEngine::Vector2 pivot) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::GetAnchorPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAnchorPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pivot)})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TextContainerAnchors, false>(this, ___internal__method, pivot);
}
// Autogenerated method: TMPro.TextContainer.Awake
void TMPro::TextContainer::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.OnEnable
void TMPro::TextContainer::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.OnDisable
void TMPro::TextContainer::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.OnRectTransformDimensionsChange
void TMPro::TextContainer::OnRectTransformDimensionsChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::OnRectTransformDimensionsChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRectTransformDimensionsChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer..cctor
void TMPro::TextContainer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("TMPro", "TextContainer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.SpriteAssetUtilities.SpriteAssetImportFormats
#include "TMPro/SpriteAssetUtilities/SpriteAssetImportFormats.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.SpriteAssetUtilities.SpriteAssetImportFormats None
TMPro::SpriteAssetUtilities::SpriteAssetImportFormats TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::SpriteAssetUtilities::SpriteAssetImportFormats>("TMPro.SpriteAssetUtilities", "SpriteAssetImportFormats", "None"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.SpriteAssetUtilities.SpriteAssetImportFormats None
void TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::_set_None(TMPro::SpriteAssetUtilities::SpriteAssetImportFormats value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro.SpriteAssetUtilities", "SpriteAssetImportFormats", "None", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.SpriteAssetUtilities.SpriteAssetImportFormats TexturePacker
TMPro::SpriteAssetUtilities::SpriteAssetImportFormats TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::_get_TexturePacker() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::_get_TexturePacker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::SpriteAssetUtilities::SpriteAssetImportFormats>("TMPro.SpriteAssetUtilities", "SpriteAssetImportFormats", "TexturePacker"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.SpriteAssetUtilities.SpriteAssetImportFormats TexturePacker
void TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::_set_TexturePacker(TMPro::SpriteAssetUtilities::SpriteAssetImportFormats value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::_set_TexturePacker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro.SpriteAssetUtilities", "SpriteAssetImportFormats", "TexturePacker", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.SpriteAssetUtilities.TexturePacker
#include "TMPro/SpriteAssetUtilities/TexturePacker.hpp"
// Including type: TMPro.SpriteAssetUtilities.TexturePacker/SpriteFrame
#include "TMPro/SpriteAssetUtilities/TexturePacker_SpriteFrame.hpp"
// Including type: TMPro.SpriteAssetUtilities.TexturePacker/SpriteSize
#include "TMPro/SpriteAssetUtilities/TexturePacker_SpriteSize.hpp"
// Including type: TMPro.SpriteAssetUtilities.TexturePacker/SpriteData
#include "TMPro/SpriteAssetUtilities/TexturePacker_SpriteData.hpp"
// Including type: TMPro.SpriteAssetUtilities.TexturePacker/SpriteDataObject
#include "TMPro/SpriteAssetUtilities/TexturePacker_SpriteDataObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.SpriteAssetUtilities.TexturePacker/SpriteFrame
#include "TMPro/SpriteAssetUtilities/TexturePacker_SpriteFrame.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.SpriteAssetUtilities.TexturePacker/SpriteFrame.ToString
::Il2CppString* TMPro::SpriteAssetUtilities::TexturePacker::SpriteFrame::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::SpriteAssetUtilities::TexturePacker::SpriteFrame::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.SpriteAssetUtilities.TexturePacker/SpriteSize
#include "TMPro/SpriteAssetUtilities/TexturePacker_SpriteSize.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.SpriteAssetUtilities.TexturePacker/SpriteSize.ToString
::Il2CppString* TMPro::SpriteAssetUtilities::TexturePacker::SpriteSize::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::SpriteAssetUtilities::TexturePacker::SpriteSize::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.SpriteAssetUtilities.TexturePacker/SpriteDataObject
#include "TMPro/SpriteAssetUtilities/TexturePacker_SpriteDataObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.ActivationMixerPlayable
#include "UnityEngine/Timeline/ActivationMixerPlayable.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ActivationMixerPlayable.Create
UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::ActivationMixerPlayable*> UnityEngine::Timeline::ActivationMixerPlayable::Create(UnityEngine::Playables::PlayableGraph graph, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationMixerPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ActivationMixerPlayable", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::ActivationMixerPlayable*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, inputCount);
}
// Autogenerated method: UnityEngine.Timeline.ActivationMixerPlayable.get_postPlaybackState
UnityEngine::Timeline::ActivationTrack::PostPlaybackState UnityEngine::Timeline::ActivationMixerPlayable::get_postPlaybackState() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationMixerPlayable::get_postPlaybackState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_postPlaybackState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ActivationTrack::PostPlaybackState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ActivationMixerPlayable.set_postPlaybackState
void UnityEngine::Timeline::ActivationMixerPlayable::set_postPlaybackState(UnityEngine::Timeline::ActivationTrack::PostPlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationMixerPlayable::set_postPlaybackState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_postPlaybackState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.ActivationMixerPlayable.OnPlayableDestroy
void UnityEngine::Timeline::ActivationMixerPlayable::OnPlayableDestroy(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationMixerPlayable::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.ActivationMixerPlayable.ProcessFrame
void UnityEngine::Timeline::ActivationMixerPlayable::ProcessFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationMixerPlayable::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ActivationPlayableAsset
#include "UnityEngine/Timeline/ActivationPlayableAsset.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ActivationPlayableAsset.get_clipCaps
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ActivationPlayableAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationPlayableAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ActivationPlayableAsset.CreatePlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::ActivationPlayableAsset::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationPlayableAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ActivationTrack
#include "UnityEngine/Timeline/ActivationTrack.hpp"
// Including type: UnityEngine.Timeline.ActivationMixerPlayable
#include "UnityEngine/Timeline/ActivationMixerPlayable.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: UnityEngine.Timeline.IPropertyCollector
#include "UnityEngine/Timeline/IPropertyCollector.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ActivationTrack.get_postPlaybackState
UnityEngine::Timeline::ActivationTrack::PostPlaybackState UnityEngine::Timeline::ActivationTrack::get_postPlaybackState() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationTrack::get_postPlaybackState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_postPlaybackState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ActivationTrack::PostPlaybackState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ActivationTrack.set_postPlaybackState
void UnityEngine::Timeline::ActivationTrack::set_postPlaybackState(UnityEngine::Timeline::ActivationTrack::PostPlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationTrack::set_postPlaybackState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_postPlaybackState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.ActivationTrack.UpdateTrackMode
void UnityEngine::Timeline::ActivationTrack::UpdateTrackMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationTrack::UpdateTrackMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTrackMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ActivationTrack.CanCompileClips
bool UnityEngine::Timeline::ActivationTrack::CanCompileClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationTrack::CanCompileClips");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanCompileClips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ActivationTrack.CreateTrackMixer
UnityEngine::Playables::Playable UnityEngine::Timeline::ActivationTrack::CreateTrackMixer(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationTrack::CreateTrackMixer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTrackMixer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, inputCount);
}
// Autogenerated method: UnityEngine.Timeline.ActivationTrack.GatherProperties
void UnityEngine::Timeline::ActivationTrack::GatherProperties(UnityEngine::Playables::PlayableDirector* director, UnityEngine::Timeline::IPropertyCollector* driver) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationTrack::GatherProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GatherProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(director), ::il2cpp_utils::ExtractType(driver)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, director, driver);
}
// Autogenerated method: UnityEngine.Timeline.ActivationTrack.OnCreateClip
void UnityEngine::Timeline::ActivationTrack::OnCreateClip(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationTrack::OnCreateClip");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCreateClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ActivationTrack/PostPlaybackState
#include "UnityEngine/Timeline/ActivationTrack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationTrack/PostPlaybackState Active
UnityEngine::Timeline::ActivationTrack::PostPlaybackState UnityEngine::Timeline::ActivationTrack::PostPlaybackState::_get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationTrack::PostPlaybackState::_get_Active");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ActivationTrack::PostPlaybackState>("UnityEngine.Timeline", "ActivationTrack/PostPlaybackState", "Active"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationTrack/PostPlaybackState Active
void UnityEngine::Timeline::ActivationTrack::PostPlaybackState::_set_Active(UnityEngine::Timeline::ActivationTrack::PostPlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationTrack::PostPlaybackState::_set_Active");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationTrack/PostPlaybackState", "Active", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationTrack/PostPlaybackState Inactive
UnityEngine::Timeline::ActivationTrack::PostPlaybackState UnityEngine::Timeline::ActivationTrack::PostPlaybackState::_get_Inactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationTrack::PostPlaybackState::_get_Inactive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ActivationTrack::PostPlaybackState>("UnityEngine.Timeline", "ActivationTrack/PostPlaybackState", "Inactive"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationTrack/PostPlaybackState Inactive
void UnityEngine::Timeline::ActivationTrack::PostPlaybackState::_set_Inactive(UnityEngine::Timeline::ActivationTrack::PostPlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationTrack::PostPlaybackState::_set_Inactive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationTrack/PostPlaybackState", "Inactive", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationTrack/PostPlaybackState Revert
UnityEngine::Timeline::ActivationTrack::PostPlaybackState UnityEngine::Timeline::ActivationTrack::PostPlaybackState::_get_Revert() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationTrack::PostPlaybackState::_get_Revert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ActivationTrack::PostPlaybackState>("UnityEngine.Timeline", "ActivationTrack/PostPlaybackState", "Revert"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationTrack/PostPlaybackState Revert
void UnityEngine::Timeline::ActivationTrack::PostPlaybackState::_set_Revert(UnityEngine::Timeline::ActivationTrack::PostPlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationTrack::PostPlaybackState::_set_Revert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationTrack/PostPlaybackState", "Revert", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationTrack/PostPlaybackState LeaveAsIs
UnityEngine::Timeline::ActivationTrack::PostPlaybackState UnityEngine::Timeline::ActivationTrack::PostPlaybackState::_get_LeaveAsIs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationTrack::PostPlaybackState::_get_LeaveAsIs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ActivationTrack::PostPlaybackState>("UnityEngine.Timeline", "ActivationTrack/PostPlaybackState", "LeaveAsIs"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationTrack/PostPlaybackState LeaveAsIs
void UnityEngine::Timeline::ActivationTrack::PostPlaybackState::_set_LeaveAsIs(UnityEngine::Timeline::ActivationTrack::PostPlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationTrack::PostPlaybackState::_set_LeaveAsIs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationTrack/PostPlaybackState", "LeaveAsIs", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AnimationOutputWeightProcessor
#include "UnityEngine/Timeline/AnimationOutputWeightProcessor.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.AnimationOutputWeightProcessor.FindMixers
void UnityEngine::Timeline::AnimationOutputWeightProcessor::FindMixers() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationOutputWeightProcessor::FindMixers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindMixers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationOutputWeightProcessor.FindMixers
void UnityEngine::Timeline::AnimationOutputWeightProcessor::FindMixers(UnityEngine::Playables::Playable parent, int port, UnityEngine::Playables::Playable node) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationOutputWeightProcessor::FindMixers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindMixers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parent, port, node);
}
// Autogenerated method: UnityEngine.Timeline.AnimationOutputWeightProcessor.Evaluate
void UnityEngine::Timeline::AnimationOutputWeightProcessor::Evaluate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationOutputWeightProcessor::Evaluate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Evaluate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AnimationPlayableAsset
#include "UnityEngine/Timeline/AnimationPlayableAsset.hpp"
// Including type: UnityEngine.Timeline.AnimationPlayableAsset/Versions
#include "UnityEngine/Timeline/AnimationPlayableAsset_Versions.hpp"
// Including type: UnityEngine.Timeline.AnimationPlayableAsset/AnimationPlayableAssetUpgrade
#include "UnityEngine/Timeline/AnimationPlayableAsset_AnimationPlayableAssetUpgrade.hpp"
// Including type: UnityEngine.Timeline.AnimationPlayableAsset/<get_outputs>d__45
#include "UnityEngine/Timeline/AnimationPlayableAsset_-get_outputs-d__45.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: UnityEngine.Timeline.IPropertyCollector
#include "UnityEngine/Timeline/IPropertyCollector.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 k_LatestVersion
int UnityEngine::Timeline::AnimationPlayableAsset::_get_k_LatestVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::_get_k_LatestVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.Timeline", "AnimationPlayableAsset", "k_LatestVersion"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 k_LatestVersion
void UnityEngine::Timeline::AnimationPlayableAsset::_set_k_LatestVersion(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::_set_k_LatestVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AnimationPlayableAsset", "k_LatestVersion", value));
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.get_position
UnityEngine::Vector3 UnityEngine::Timeline::AnimationPlayableAsset::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.set_position
void UnityEngine::Timeline::AnimationPlayableAsset::set_position(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::set_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.get_rotation
UnityEngine::Quaternion UnityEngine::Timeline::AnimationPlayableAsset::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.set_rotation
void UnityEngine::Timeline::AnimationPlayableAsset::set_rotation(UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::set_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.get_eulerAngles
UnityEngine::Vector3 UnityEngine::Timeline::AnimationPlayableAsset::get_eulerAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::get_eulerAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eulerAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.set_eulerAngles
void UnityEngine::Timeline::AnimationPlayableAsset::set_eulerAngles(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::set_eulerAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_eulerAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.get_useTrackMatchFields
bool UnityEngine::Timeline::AnimationPlayableAsset::get_useTrackMatchFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::get_useTrackMatchFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useTrackMatchFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.set_useTrackMatchFields
void UnityEngine::Timeline::AnimationPlayableAsset::set_useTrackMatchFields(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::set_useTrackMatchFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_useTrackMatchFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.get_matchTargetFields
UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::AnimationPlayableAsset::get_matchTargetFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::get_matchTargetFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_matchTargetFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::MatchTargetFields, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.set_matchTargetFields
void UnityEngine::Timeline::AnimationPlayableAsset::set_matchTargetFields(UnityEngine::Timeline::MatchTargetFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::set_matchTargetFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_matchTargetFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.get_removeStartOffset
bool UnityEngine::Timeline::AnimationPlayableAsset::get_removeStartOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::get_removeStartOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_removeStartOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.set_removeStartOffset
void UnityEngine::Timeline::AnimationPlayableAsset::set_removeStartOffset(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::set_removeStartOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_removeStartOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.get_applyFootIK
bool UnityEngine::Timeline::AnimationPlayableAsset::get_applyFootIK() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::get_applyFootIK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_applyFootIK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.set_applyFootIK
void UnityEngine::Timeline::AnimationPlayableAsset::set_applyFootIK(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::set_applyFootIK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_applyFootIK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.get_loop
UnityEngine::Timeline::AnimationPlayableAsset::LoopMode UnityEngine::Timeline::AnimationPlayableAsset::get_loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::get_loop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_loop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::AnimationPlayableAsset::LoopMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.set_loop
void UnityEngine::Timeline::AnimationPlayableAsset::set_loop(UnityEngine::Timeline::AnimationPlayableAsset::LoopMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::set_loop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_loop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.get_hasRootTransforms
bool UnityEngine::Timeline::AnimationPlayableAsset::get_hasRootTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::get_hasRootTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasRootTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.get_appliedOffsetMode
UnityEngine::Timeline::AppliedOffsetMode UnityEngine::Timeline::AnimationPlayableAsset::get_appliedOffsetMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::get_appliedOffsetMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_appliedOffsetMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::AppliedOffsetMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.set_appliedOffsetMode
void UnityEngine::Timeline::AnimationPlayableAsset::set_appliedOffsetMode(UnityEngine::Timeline::AppliedOffsetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::set_appliedOffsetMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_appliedOffsetMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.get_clip
UnityEngine::AnimationClip* UnityEngine::Timeline::AnimationPlayableAsset::get_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::get_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.set_clip
void UnityEngine::Timeline::AnimationPlayableAsset::set_clip(UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::set_clip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.CreatePlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::AnimationPlayableAsset::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::AnimationClip* clip, UnityEngine::Vector3 positionOffset, UnityEngine::Vector3 eulerOffset, bool removeStartOffset, UnityEngine::Timeline::AppliedOffsetMode mode, bool applyFootIK, UnityEngine::Timeline::AnimationPlayableAsset::LoopMode loop) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::CreatePlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "AnimationPlayableAsset", "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(positionOffset), ::il2cpp_utils::ExtractType(eulerOffset), ::il2cpp_utils::ExtractType(removeStartOffset), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(applyFootIK), ::il2cpp_utils::ExtractType(loop)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, clip, positionOffset, eulerOffset, removeStartOffset, mode, applyFootIK, loop);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.ShouldApplyOffset
bool UnityEngine::Timeline::AnimationPlayableAsset::ShouldApplyOffset(UnityEngine::Timeline::AppliedOffsetMode mode, UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::ShouldApplyOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "AnimationPlayableAsset", "ShouldApplyOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mode, clip);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.ShouldApplyScaleRemove
bool UnityEngine::Timeline::AnimationPlayableAsset::ShouldApplyScaleRemove(UnityEngine::Timeline::AppliedOffsetMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::ShouldApplyScaleRemove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "AnimationPlayableAsset", "ShouldApplyScaleRemove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mode);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.get_clipCaps
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::AnimationPlayableAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.ResetOffsets
void UnityEngine::Timeline::AnimationPlayableAsset::ResetOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::ResetOffsets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetOffsets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.GatherProperties
void UnityEngine::Timeline::AnimationPlayableAsset::GatherProperties(UnityEngine::Playables::PlayableDirector* director, UnityEngine::Timeline::IPropertyCollector* driver) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::GatherProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GatherProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(director), ::il2cpp_utils::ExtractType(driver)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, director, driver);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.HasRootTransforms
bool UnityEngine::Timeline::AnimationPlayableAsset::HasRootTransforms(UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::HasRootTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "AnimationPlayableAsset", "HasRootTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
void UnityEngine::Timeline::AnimationPlayableAsset::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
void UnityEngine::Timeline::AnimationPlayableAsset::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.OnUpgradeFromVersion
void UnityEngine::Timeline::AnimationPlayableAsset::OnUpgradeFromVersion(int oldVersion) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::OnUpgradeFromVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUpgradeFromVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldVersion)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, oldVersion);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.get_duration
double UnityEngine::Timeline::AnimationPlayableAsset::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::get_duration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.get_outputs
System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::AnimationPlayableAsset::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::get_outputs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_outputs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.CreatePlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::AnimationPlayableAsset::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset..cctor
void UnityEngine::Timeline::AnimationPlayableAsset::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "AnimationPlayableAsset", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AnimationPlayableAsset/LoopMode
#include "UnityEngine/Timeline/AnimationPlayableAsset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [TooltipAttribute] Offset: 0xCFDEB8
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.AnimationPlayableAsset/LoopMode UseSourceAsset
UnityEngine::Timeline::AnimationPlayableAsset::LoopMode UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_get_UseSourceAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_get_UseSourceAsset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::AnimationPlayableAsset::LoopMode>("UnityEngine.Timeline", "AnimationPlayableAsset/LoopMode", "UseSourceAsset"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.AnimationPlayableAsset/LoopMode UseSourceAsset
void UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_set_UseSourceAsset(UnityEngine::Timeline::AnimationPlayableAsset::LoopMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_set_UseSourceAsset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AnimationPlayableAsset/LoopMode", "UseSourceAsset", value));
}
// [TooltipAttribute] Offset: 0xCFDEF0
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.AnimationPlayableAsset/LoopMode On
UnityEngine::Timeline::AnimationPlayableAsset::LoopMode UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_get_On() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_get_On");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::AnimationPlayableAsset::LoopMode>("UnityEngine.Timeline", "AnimationPlayableAsset/LoopMode", "On"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.AnimationPlayableAsset/LoopMode On
void UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_set_On(UnityEngine::Timeline::AnimationPlayableAsset::LoopMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_set_On");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AnimationPlayableAsset/LoopMode", "On", value));
}
// [TooltipAttribute] Offset: 0xCFDF28
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.AnimationPlayableAsset/LoopMode Off
UnityEngine::Timeline::AnimationPlayableAsset::LoopMode UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::AnimationPlayableAsset::LoopMode>("UnityEngine.Timeline", "AnimationPlayableAsset/LoopMode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.AnimationPlayableAsset/LoopMode Off
void UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_set_Off(UnityEngine::Timeline::AnimationPlayableAsset::LoopMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AnimationPlayableAsset/LoopMode", "Off", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AnimationPlayableAsset/Versions
#include "UnityEngine/Timeline/AnimationPlayableAsset_Versions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.AnimationPlayableAsset/Versions Initial
UnityEngine::Timeline::AnimationPlayableAsset::Versions UnityEngine::Timeline::AnimationPlayableAsset::Versions::_get_Initial() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::Versions::_get_Initial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::AnimationPlayableAsset::Versions>("UnityEngine.Timeline", "AnimationPlayableAsset/Versions", "Initial"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.AnimationPlayableAsset/Versions Initial
void UnityEngine::Timeline::AnimationPlayableAsset::Versions::_set_Initial(UnityEngine::Timeline::AnimationPlayableAsset::Versions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::Versions::_set_Initial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AnimationPlayableAsset/Versions", "Initial", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.AnimationPlayableAsset/Versions RotationAsEuler
UnityEngine::Timeline::AnimationPlayableAsset::Versions UnityEngine::Timeline::AnimationPlayableAsset::Versions::_get_RotationAsEuler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::Versions::_get_RotationAsEuler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::AnimationPlayableAsset::Versions>("UnityEngine.Timeline", "AnimationPlayableAsset/Versions", "RotationAsEuler"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.AnimationPlayableAsset/Versions RotationAsEuler
void UnityEngine::Timeline::AnimationPlayableAsset::Versions::_set_RotationAsEuler(UnityEngine::Timeline::AnimationPlayableAsset::Versions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::Versions::_set_RotationAsEuler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AnimationPlayableAsset/Versions", "RotationAsEuler", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AnimationPlayableAsset/AnimationPlayableAssetUpgrade
#include "UnityEngine/Timeline/AnimationPlayableAsset_AnimationPlayableAssetUpgrade.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset/AnimationPlayableAssetUpgrade.ConvertRotationToEuler
void UnityEngine::Timeline::AnimationPlayableAsset::AnimationPlayableAssetUpgrade::ConvertRotationToEuler(UnityEngine::Timeline::AnimationPlayableAsset* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::AnimationPlayableAssetUpgrade::ConvertRotationToEuler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "AnimationPlayableAsset/AnimationPlayableAssetUpgrade", "ConvertRotationToEuler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, asset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.AnimationPlayableAsset/<get_outputs>d__45
#include "UnityEngine/Timeline/AnimationPlayableAsset_-get_outputs-d__45.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset/<get_outputs>d__45.System.IDisposable.Dispose
void UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset/<get_outputs>d__45.MoveNext
bool UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset/<get_outputs>d__45.System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current
UnityEngine::Playables::PlayableBinding UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System_Collections_Generic_IEnumerator$UnityEngine_Playables_PlayableBinding$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableBinding, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset/<get_outputs>d__45.System.Collections.IEnumerator.Reset
void UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset/<get_outputs>d__45.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset/<get_outputs>d__45.System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator
System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System_Collections_Generic_IEnumerable$UnityEngine_Playables_PlayableBinding$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset/<get_outputs>d__45.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AnimationPreviewUpdateCallback
#include "UnityEngine/Timeline/AnimationPreviewUpdateCallback.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Experimental.Animations.IAnimationWindowPreview
#include "UnityEngine/Experimental/Animations/IAnimationWindowPreview.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.AnimationPreviewUpdateCallback.Evaluate
void UnityEngine::Timeline::AnimationPreviewUpdateCallback::Evaluate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPreviewUpdateCallback::Evaluate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Evaluate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPreviewUpdateCallback.FetchPreviewComponents
void UnityEngine::Timeline::AnimationPreviewUpdateCallback::FetchPreviewComponents() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPreviewUpdateCallback::FetchPreviewComponents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FetchPreviewComponents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.MatchTargetFields
#include "UnityEngine/Timeline/MatchTargetFields.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.MatchTargetFields PositionX
UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::MatchTargetFields::_get_PositionX() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFields::_get_PositionX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::MatchTargetFields>("UnityEngine.Timeline", "MatchTargetFields", "PositionX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.MatchTargetFields PositionX
void UnityEngine::Timeline::MatchTargetFields::_set_PositionX(UnityEngine::Timeline::MatchTargetFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFields::_set_PositionX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "MatchTargetFields", "PositionX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.MatchTargetFields PositionY
UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::MatchTargetFields::_get_PositionY() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFields::_get_PositionY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::MatchTargetFields>("UnityEngine.Timeline", "MatchTargetFields", "PositionY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.MatchTargetFields PositionY
void UnityEngine::Timeline::MatchTargetFields::_set_PositionY(UnityEngine::Timeline::MatchTargetFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFields::_set_PositionY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "MatchTargetFields", "PositionY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.MatchTargetFields PositionZ
UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::MatchTargetFields::_get_PositionZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFields::_get_PositionZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::MatchTargetFields>("UnityEngine.Timeline", "MatchTargetFields", "PositionZ"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.MatchTargetFields PositionZ
void UnityEngine::Timeline::MatchTargetFields::_set_PositionZ(UnityEngine::Timeline::MatchTargetFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFields::_set_PositionZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "MatchTargetFields", "PositionZ", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.MatchTargetFields RotationX
UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::MatchTargetFields::_get_RotationX() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFields::_get_RotationX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::MatchTargetFields>("UnityEngine.Timeline", "MatchTargetFields", "RotationX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.MatchTargetFields RotationX
void UnityEngine::Timeline::MatchTargetFields::_set_RotationX(UnityEngine::Timeline::MatchTargetFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFields::_set_RotationX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "MatchTargetFields", "RotationX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.MatchTargetFields RotationY
UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::MatchTargetFields::_get_RotationY() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFields::_get_RotationY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::MatchTargetFields>("UnityEngine.Timeline", "MatchTargetFields", "RotationY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.MatchTargetFields RotationY
void UnityEngine::Timeline::MatchTargetFields::_set_RotationY(UnityEngine::Timeline::MatchTargetFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFields::_set_RotationY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "MatchTargetFields", "RotationY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.MatchTargetFields RotationZ
UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::MatchTargetFields::_get_RotationZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFields::_get_RotationZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::MatchTargetFields>("UnityEngine.Timeline", "MatchTargetFields", "RotationZ"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.MatchTargetFields RotationZ
void UnityEngine::Timeline::MatchTargetFields::_set_RotationZ(UnityEngine::Timeline::MatchTargetFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFields::_set_RotationZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "MatchTargetFields", "RotationZ", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackOffset
#include "UnityEngine/Timeline/TrackOffset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackOffset ApplyTransformOffsets
UnityEngine::Timeline::TrackOffset UnityEngine::Timeline::TrackOffset::_get_ApplyTransformOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackOffset::_get_ApplyTransformOffsets");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackOffset>("UnityEngine.Timeline", "TrackOffset", "ApplyTransformOffsets"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackOffset ApplyTransformOffsets
void UnityEngine::Timeline::TrackOffset::_set_ApplyTransformOffsets(UnityEngine::Timeline::TrackOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackOffset::_set_ApplyTransformOffsets");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackOffset", "ApplyTransformOffsets", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackOffset ApplySceneOffsets
UnityEngine::Timeline::TrackOffset UnityEngine::Timeline::TrackOffset::_get_ApplySceneOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackOffset::_get_ApplySceneOffsets");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackOffset>("UnityEngine.Timeline", "TrackOffset", "ApplySceneOffsets"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackOffset ApplySceneOffsets
void UnityEngine::Timeline::TrackOffset::_set_ApplySceneOffsets(UnityEngine::Timeline::TrackOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackOffset::_set_ApplySceneOffsets");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackOffset", "ApplySceneOffsets", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackOffset Auto
UnityEngine::Timeline::TrackOffset UnityEngine::Timeline::TrackOffset::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackOffset::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackOffset>("UnityEngine.Timeline", "TrackOffset", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackOffset Auto
void UnityEngine::Timeline::TrackOffset::_set_Auto(UnityEngine::Timeline::TrackOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackOffset::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackOffset", "Auto", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AppliedOffsetMode
#include "UnityEngine/Timeline/AppliedOffsetMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.AppliedOffsetMode NoRootTransform
UnityEngine::Timeline::AppliedOffsetMode UnityEngine::Timeline::AppliedOffsetMode::_get_NoRootTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AppliedOffsetMode::_get_NoRootTransform");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::AppliedOffsetMode>("UnityEngine.Timeline", "AppliedOffsetMode", "NoRootTransform"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.AppliedOffsetMode NoRootTransform
void UnityEngine::Timeline::AppliedOffsetMode::_set_NoRootTransform(UnityEngine::Timeline::AppliedOffsetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AppliedOffsetMode::_set_NoRootTransform");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AppliedOffsetMode", "NoRootTransform", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.AppliedOffsetMode TransformOffset
UnityEngine::Timeline::AppliedOffsetMode UnityEngine::Timeline::AppliedOffsetMode::_get_TransformOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AppliedOffsetMode::_get_TransformOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::AppliedOffsetMode>("UnityEngine.Timeline", "AppliedOffsetMode", "TransformOffset"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.AppliedOffsetMode TransformOffset
void UnityEngine::Timeline::AppliedOffsetMode::_set_TransformOffset(UnityEngine::Timeline::AppliedOffsetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AppliedOffsetMode::_set_TransformOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AppliedOffsetMode", "TransformOffset", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.AppliedOffsetMode SceneOffset
UnityEngine::Timeline::AppliedOffsetMode UnityEngine::Timeline::AppliedOffsetMode::_get_SceneOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AppliedOffsetMode::_get_SceneOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::AppliedOffsetMode>("UnityEngine.Timeline", "AppliedOffsetMode", "SceneOffset"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.AppliedOffsetMode SceneOffset
void UnityEngine::Timeline::AppliedOffsetMode::_set_SceneOffset(UnityEngine::Timeline::AppliedOffsetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AppliedOffsetMode::_set_SceneOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AppliedOffsetMode", "SceneOffset", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.AppliedOffsetMode TransformOffsetLegacy
UnityEngine::Timeline::AppliedOffsetMode UnityEngine::Timeline::AppliedOffsetMode::_get_TransformOffsetLegacy() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AppliedOffsetMode::_get_TransformOffsetLegacy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::AppliedOffsetMode>("UnityEngine.Timeline", "AppliedOffsetMode", "TransformOffsetLegacy"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.AppliedOffsetMode TransformOffsetLegacy
void UnityEngine::Timeline::AppliedOffsetMode::_set_TransformOffsetLegacy(UnityEngine::Timeline::AppliedOffsetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AppliedOffsetMode::_set_TransformOffsetLegacy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AppliedOffsetMode", "TransformOffsetLegacy", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.AppliedOffsetMode SceneOffsetLegacy
UnityEngine::Timeline::AppliedOffsetMode UnityEngine::Timeline::AppliedOffsetMode::_get_SceneOffsetLegacy() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AppliedOffsetMode::_get_SceneOffsetLegacy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::AppliedOffsetMode>("UnityEngine.Timeline", "AppliedOffsetMode", "SceneOffsetLegacy"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.AppliedOffsetMode SceneOffsetLegacy
void UnityEngine::Timeline::AppliedOffsetMode::_set_SceneOffsetLegacy(UnityEngine::Timeline::AppliedOffsetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AppliedOffsetMode::_set_SceneOffsetLegacy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AppliedOffsetMode", "SceneOffsetLegacy", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.AppliedOffsetMode SceneOffsetEditor
UnityEngine::Timeline::AppliedOffsetMode UnityEngine::Timeline::AppliedOffsetMode::_get_SceneOffsetEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AppliedOffsetMode::_get_SceneOffsetEditor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::AppliedOffsetMode>("UnityEngine.Timeline", "AppliedOffsetMode", "SceneOffsetEditor"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.AppliedOffsetMode SceneOffsetEditor
void UnityEngine::Timeline::AppliedOffsetMode::_set_SceneOffsetEditor(UnityEngine::Timeline::AppliedOffsetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AppliedOffsetMode::_set_SceneOffsetEditor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AppliedOffsetMode", "SceneOffsetEditor", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.AppliedOffsetMode SceneOffsetLegacyEditor
UnityEngine::Timeline::AppliedOffsetMode UnityEngine::Timeline::AppliedOffsetMode::_get_SceneOffsetLegacyEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AppliedOffsetMode::_get_SceneOffsetLegacyEditor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::AppliedOffsetMode>("UnityEngine.Timeline", "AppliedOffsetMode", "SceneOffsetLegacyEditor"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.AppliedOffsetMode SceneOffsetLegacyEditor
void UnityEngine::Timeline::AppliedOffsetMode::_set_SceneOffsetLegacyEditor(UnityEngine::Timeline::AppliedOffsetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AppliedOffsetMode::_set_SceneOffsetLegacyEditor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AppliedOffsetMode", "SceneOffsetLegacyEditor", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.MatchTargetFieldConstants
#include "UnityEngine/Timeline/MatchTargetFieldConstants.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.MatchTargetFields All
UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::MatchTargetFieldConstants::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFieldConstants::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::MatchTargetFields>("UnityEngine.Timeline", "MatchTargetFieldConstants", "All"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.MatchTargetFields All
void UnityEngine::Timeline::MatchTargetFieldConstants::_set_All(UnityEngine::Timeline::MatchTargetFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFieldConstants::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "MatchTargetFieldConstants", "All", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.MatchTargetFields None
UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::MatchTargetFieldConstants::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFieldConstants::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::MatchTargetFields>("UnityEngine.Timeline", "MatchTargetFieldConstants", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.MatchTargetFields None
void UnityEngine::Timeline::MatchTargetFieldConstants::_set_None(UnityEngine::Timeline::MatchTargetFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFieldConstants::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "MatchTargetFieldConstants", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.MatchTargetFields Position
UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::MatchTargetFieldConstants::_get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFieldConstants::_get_Position");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::MatchTargetFields>("UnityEngine.Timeline", "MatchTargetFieldConstants", "Position"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.MatchTargetFields Position
void UnityEngine::Timeline::MatchTargetFieldConstants::_set_Position(UnityEngine::Timeline::MatchTargetFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFieldConstants::_set_Position");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "MatchTargetFieldConstants", "Position", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.MatchTargetFields Rotation
UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::MatchTargetFieldConstants::_get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFieldConstants::_get_Rotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::MatchTargetFields>("UnityEngine.Timeline", "MatchTargetFieldConstants", "Rotation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.MatchTargetFields Rotation
void UnityEngine::Timeline::MatchTargetFieldConstants::_set_Rotation(UnityEngine::Timeline::MatchTargetFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFieldConstants::_set_Rotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "MatchTargetFieldConstants", "Rotation", value));
}
// Autogenerated method: UnityEngine.Timeline.MatchTargetFieldConstants.HasAny
bool UnityEngine::Timeline::MatchTargetFieldConstants::HasAny(UnityEngine::Timeline::MatchTargetFields me, UnityEngine::Timeline::MatchTargetFields fields) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFieldConstants::HasAny");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "MatchTargetFieldConstants", "HasAny", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(me), ::il2cpp_utils::ExtractType(fields)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, me, fields);
}
// Autogenerated method: UnityEngine.Timeline.MatchTargetFieldConstants.Toggle
UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::MatchTargetFieldConstants::Toggle(UnityEngine::Timeline::MatchTargetFields me, UnityEngine::Timeline::MatchTargetFields flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFieldConstants::Toggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "MatchTargetFieldConstants", "Toggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(me), ::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::MatchTargetFields, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, me, flag);
}
// Autogenerated method: UnityEngine.Timeline.MatchTargetFieldConstants..cctor
void UnityEngine::Timeline::MatchTargetFieldConstants::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFieldConstants::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "MatchTargetFieldConstants", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.AnimationTrack
#include "UnityEngine/Timeline/AnimationTrack.hpp"
// Including type: UnityEngine.Timeline.AnimationTrack/AnimationTrackUpgrade
#include "UnityEngine/Timeline/AnimationTrack_AnimationTrackUpgrade.hpp"
// Including type: UnityEngine.Timeline.AnimationTrack/<get_outputs>d__49
#include "UnityEngine/Timeline/AnimationTrack_-get_outputs-d__49.hpp"
// Including type: UnityEngine.AvatarMask
#include "UnityEngine/AvatarMask.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Timeline.IntervalTree`1
#include "UnityEngine/Timeline/IntervalTree_1.hpp"
// Including type: UnityEngine.Timeline.RuntimeElement
#include "UnityEngine/Timeline/RuntimeElement.hpp"
// Including type: UnityEngine.Timeline.AppliedOffsetMode
#include "UnityEngine/Timeline/AppliedOffsetMode.hpp"
// Including type: UnityEngine.Animations.AnimationLayerMixerPlayable
#include "UnityEngine/Animations/AnimationLayerMixerPlayable.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Timeline.IPropertyCollector
#include "UnityEngine/Timeline/IPropertyCollector.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String k_DefaultInfiniteClipName
::Il2CppString* UnityEngine::Timeline::AnimationTrack::_get_k_DefaultInfiniteClipName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::_get_k_DefaultInfiniteClipName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("UnityEngine.Timeline", "AnimationTrack", "k_DefaultInfiniteClipName"));
}
// Autogenerated static field setter
// Set static field: static private System.String k_DefaultInfiniteClipName
void UnityEngine::Timeline::AnimationTrack::_set_k_DefaultInfiniteClipName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::_set_k_DefaultInfiniteClipName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AnimationTrack", "k_DefaultInfiniteClipName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String k_DefaultRecordableClipName
::Il2CppString* UnityEngine::Timeline::AnimationTrack::_get_k_DefaultRecordableClipName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::_get_k_DefaultRecordableClipName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("UnityEngine.Timeline", "AnimationTrack", "k_DefaultRecordableClipName"));
}
// Autogenerated static field setter
// Set static field: static private System.String k_DefaultRecordableClipName
void UnityEngine::Timeline::AnimationTrack::_set_k_DefaultRecordableClipName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::_set_k_DefaultRecordableClipName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AnimationTrack", "k_DefaultRecordableClipName", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Queue`1<UnityEngine.Transform> s_CachedQueue
System::Collections::Generic::Queue_1<UnityEngine::Transform*>* UnityEngine::Timeline::AnimationTrack::_get_s_CachedQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::_get_s_CachedQueue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::Queue_1<UnityEngine::Transform*>*>("UnityEngine.Timeline", "AnimationTrack", "s_CachedQueue"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Queue`1<UnityEngine.Transform> s_CachedQueue
void UnityEngine::Timeline::AnimationTrack::_set_s_CachedQueue(System::Collections::Generic::Queue_1<UnityEngine::Transform*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::_set_s_CachedQueue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AnimationTrack", "s_CachedQueue", value));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_position
UnityEngine::Vector3 UnityEngine::Timeline::AnimationTrack::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_position
void UnityEngine::Timeline::AnimationTrack::set_position(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_rotation
UnityEngine::Quaternion UnityEngine::Timeline::AnimationTrack::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_rotation
void UnityEngine::Timeline::AnimationTrack::set_rotation(UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_eulerAngles
UnityEngine::Vector3 UnityEngine::Timeline::AnimationTrack::get_eulerAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_eulerAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eulerAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_eulerAngles
void UnityEngine::Timeline::AnimationTrack::set_eulerAngles(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_eulerAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_eulerAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_applyOffsets
bool UnityEngine::Timeline::AnimationTrack::get_applyOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_applyOffsets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_applyOffsets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_applyOffsets
void UnityEngine::Timeline::AnimationTrack::set_applyOffsets(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_applyOffsets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_applyOffsets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_trackOffset
UnityEngine::Timeline::TrackOffset UnityEngine::Timeline::AnimationTrack::get_trackOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_trackOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trackOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TrackOffset, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_trackOffset
void UnityEngine::Timeline::AnimationTrack::set_trackOffset(UnityEngine::Timeline::TrackOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_trackOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trackOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_matchTargetFields
UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::AnimationTrack::get_matchTargetFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_matchTargetFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_matchTargetFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::MatchTargetFields, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_matchTargetFields
void UnityEngine::Timeline::AnimationTrack::set_matchTargetFields(UnityEngine::Timeline::MatchTargetFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_matchTargetFields");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_matchTargetFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClip
UnityEngine::AnimationClip* UnityEngine::Timeline::AnimationTrack::get_infiniteClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_infiniteClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_infiniteClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClip
void UnityEngine::Timeline::AnimationTrack::set_infiniteClip(UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_infiniteClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_infiniteClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipRemoveOffset
bool UnityEngine::Timeline::AnimationTrack::get_infiniteClipRemoveOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_infiniteClipRemoveOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_infiniteClipRemoveOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipRemoveOffset
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipRemoveOffset(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_infiniteClipRemoveOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_infiniteClipRemoveOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_avatarMask
UnityEngine::AvatarMask* UnityEngine::Timeline::AnimationTrack::get_avatarMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_avatarMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_avatarMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AvatarMask*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_avatarMask
void UnityEngine::Timeline::AnimationTrack::set_avatarMask(UnityEngine::AvatarMask* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_avatarMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_avatarMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_applyAvatarMask
bool UnityEngine::Timeline::AnimationTrack::get_applyAvatarMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_applyAvatarMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_applyAvatarMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_applyAvatarMask
void UnityEngine::Timeline::AnimationTrack::set_applyAvatarMask(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_applyAvatarMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_applyAvatarMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_inClipMode
bool UnityEngine::Timeline::AnimationTrack::get_inClipMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_inClipMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inClipMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipOffsetPosition
UnityEngine::Vector3 UnityEngine::Timeline::AnimationTrack::get_infiniteClipOffsetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_infiniteClipOffsetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_infiniteClipOffsetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipOffsetPosition
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipOffsetPosition(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_infiniteClipOffsetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_infiniteClipOffsetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipOffsetRotation
UnityEngine::Quaternion UnityEngine::Timeline::AnimationTrack::get_infiniteClipOffsetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_infiniteClipOffsetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_infiniteClipOffsetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipOffsetRotation
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipOffsetRotation(UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_infiniteClipOffsetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_infiniteClipOffsetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipOffsetEulerAngles
UnityEngine::Vector3 UnityEngine::Timeline::AnimationTrack::get_infiniteClipOffsetEulerAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_infiniteClipOffsetEulerAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_infiniteClipOffsetEulerAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipOffsetEulerAngles
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipOffsetEulerAngles(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_infiniteClipOffsetEulerAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_infiniteClipOffsetEulerAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipApplyFootIK
bool UnityEngine::Timeline::AnimationTrack::get_infiniteClipApplyFootIK() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_infiniteClipApplyFootIK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_infiniteClipApplyFootIK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipApplyFootIK
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipApplyFootIK(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_infiniteClipApplyFootIK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_infiniteClipApplyFootIK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipTimeOffset
double UnityEngine::Timeline::AnimationTrack::get_infiniteClipTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_infiniteClipTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_infiniteClipTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipTimeOffset
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipTimeOffset(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_infiniteClipTimeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_infiniteClipTimeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipPreExtrapolation
UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::AnimationTrack::get_infiniteClipPreExtrapolation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_infiniteClipPreExtrapolation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_infiniteClipPreExtrapolation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip::ClipExtrapolation, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipPreExtrapolation
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipPreExtrapolation(UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_infiniteClipPreExtrapolation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_infiniteClipPreExtrapolation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipPostExtrapolation
UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::AnimationTrack::get_infiniteClipPostExtrapolation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_infiniteClipPostExtrapolation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_infiniteClipPostExtrapolation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip::ClipExtrapolation, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipPostExtrapolation
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipPostExtrapolation(UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_infiniteClipPostExtrapolation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_infiniteClipPostExtrapolation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipLoop
UnityEngine::Timeline::AnimationPlayableAsset::LoopMode UnityEngine::Timeline::AnimationTrack::get_infiniteClipLoop() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_infiniteClipLoop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_infiniteClipLoop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::AnimationPlayableAsset::LoopMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipLoop
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipLoop(UnityEngine::Timeline::AnimationPlayableAsset::LoopMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_infiniteClipLoop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_infiniteClipLoop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.ResetOffsets
void UnityEngine::Timeline::AnimationTrack::ResetOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::ResetOffsets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetOffsets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.CreateClip
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::AnimationTrack::CreateClip(UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::CreateClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.CreateInfiniteClip
void UnityEngine::Timeline::AnimationTrack::CreateInfiniteClip(::Il2CppString* infiniteClipName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::CreateInfiniteClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInfiniteClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(infiniteClipName)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, infiniteClipName);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.CreateRecordableClip
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::AnimationTrack::CreateRecordableClip(::Il2CppString* animClipName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::CreateRecordableClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateRecordableClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animClipName)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method, animClipName);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.UpdateClipOffsets
void UnityEngine::Timeline::AnimationTrack::UpdateClipOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::UpdateClipOffsets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateClipOffsets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.CompileTrackPlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::AnimationTrack::CompileTrackPlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Timeline::AnimationTrack* track, UnityEngine::GameObject* go, UnityEngine::Timeline::IntervalTree_1<UnityEngine::Timeline::RuntimeElement*>* tree, UnityEngine::Timeline::AppliedOffsetMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::CompileTrackPlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompileTrackPlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(track), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(tree), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, track, go, tree, mode);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.UnityEngine.Timeline.ILayerable.CreateLayerMixer
UnityEngine::Playables::Playable UnityEngine::Timeline::AnimationTrack::UnityEngine_Timeline_ILayerable_CreateLayerMixer(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::UnityEngine.Timeline.ILayerable.CreateLayerMixer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.Timeline.ILayerable.CreateLayerMixer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, inputCount);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.GetDefaultBlendCount
int UnityEngine::Timeline::AnimationTrack::GetDefaultBlendCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::GetDefaultBlendCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefaultBlendCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.AttachDefaultBlend
void UnityEngine::Timeline::AnimationTrack::AttachDefaultBlend(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Animations::AnimationLayerMixerPlayable mixer, bool requireOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::AttachDefaultBlend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachDefaultBlend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(mixer), ::il2cpp_utils::ExtractType(requireOffset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, graph, mixer, requireOffset);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.AttachOffsetPlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::AnimationTrack::AttachOffsetPlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Playables::Playable playable, UnityEngine::Vector3 pos, UnityEngine::Quaternion rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::AttachOffsetPlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachOffsetPlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(rot)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, playable, pos, rot);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.RequiresMotionXPlayable
bool UnityEngine::Timeline::AnimationTrack::RequiresMotionXPlayable(UnityEngine::Timeline::AppliedOffsetMode mode, UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::RequiresMotionXPlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequiresMotionXPlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(gameObject)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, mode, gameObject);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.UsesAbsoluteMotion
bool UnityEngine::Timeline::AnimationTrack::UsesAbsoluteMotion(UnityEngine::Timeline::AppliedOffsetMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::UsesAbsoluteMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "AnimationTrack", "UsesAbsoluteMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mode);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.HasController
bool UnityEngine::Timeline::AnimationTrack::HasController(UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::HasController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, gameObject);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.GetBinding
UnityEngine::Animator* UnityEngine::Timeline::AnimationTrack::GetBinding(UnityEngine::Playables::PlayableDirector* director) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::GetBinding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBinding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(director)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Animator*, false>(this, ___internal__method, director);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.CreateGroupMixer
UnityEngine::Animations::AnimationLayerMixerPlayable UnityEngine::Timeline::AnimationTrack::CreateGroupMixer(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::CreateGroupMixer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "AnimationTrack", "CreateGroupMixer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Animations::AnimationLayerMixerPlayable, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, go, inputCount);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.CreateInfiniteTrackPlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::AnimationTrack::CreateInfiniteTrackPlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go, UnityEngine::Timeline::IntervalTree_1<UnityEngine::Timeline::RuntimeElement*>* tree, UnityEngine::Timeline::AppliedOffsetMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::CreateInfiniteTrackPlayable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInfiniteTrackPlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(tree), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, tree, mode);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.ApplyTrackOffset
UnityEngine::Playables::Playable UnityEngine::Timeline::AnimationTrack::ApplyTrackOffset(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Playables::Playable root, UnityEngine::GameObject* go, UnityEngine::Timeline::AppliedOffsetMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::ApplyTrackOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyTrackOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, root, go, mode);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.AssignAnimationClip
void UnityEngine::Timeline::AnimationTrack::AssignAnimationClip(UnityEngine::Timeline::TimelineClip* clip, UnityEngine::AnimationClip* animClip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::AssignAnimationClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AssignAnimationClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(animClip)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip, animClip);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.GetAnimationClips
void UnityEngine::Timeline::AnimationTrack::GetAnimationClips(System::Collections::Generic::List_1<UnityEngine::AnimationClip*>* animClips) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::GetAnimationClips");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAnimationClips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animClips)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animClips);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.GetOffsetMode
UnityEngine::Timeline::AppliedOffsetMode UnityEngine::Timeline::AnimationTrack::GetOffsetMode(UnityEngine::GameObject* go, bool animatesRootTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::GetOffsetMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOffsetMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(animatesRootTransform)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::AppliedOffsetMode, false>(this, ___internal__method, go, animatesRootTransform);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.IsRootTransformDisabledByMask
bool UnityEngine::Timeline::AnimationTrack::IsRootTransformDisabledByMask(UnityEngine::GameObject* gameObject, UnityEngine::Transform* genericRootNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::IsRootTransformDisabledByMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsRootTransformDisabledByMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject), ::il2cpp_utils::ExtractType(genericRootNode)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, gameObject, genericRootNode);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.GetGenericRootNode
UnityEngine::Transform* UnityEngine::Timeline::AnimationTrack::GetGenericRootNode(UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::GetGenericRootNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGenericRootNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method, gameObject);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.AnimatesRootTransform
bool UnityEngine::Timeline::AnimationTrack::AnimatesRootTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::AnimatesRootTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnimatesRootTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.FindInHierarchyBreadthFirst
UnityEngine::Transform* UnityEngine::Timeline::AnimationTrack::FindInHierarchyBreadthFirst(UnityEngine::Transform* t, ::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::FindInHierarchyBreadthFirst");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "AnimationTrack", "FindInHierarchyBreadthFirst", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, name);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_openClipOffsetPosition
UnityEngine::Vector3 UnityEngine::Timeline::AnimationTrack::get_openClipOffsetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_openClipOffsetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_openClipOffsetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_openClipOffsetPosition
void UnityEngine::Timeline::AnimationTrack::set_openClipOffsetPosition(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_openClipOffsetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_openClipOffsetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_openClipOffsetRotation
UnityEngine::Quaternion UnityEngine::Timeline::AnimationTrack::get_openClipOffsetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_openClipOffsetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_openClipOffsetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_openClipOffsetRotation
void UnityEngine::Timeline::AnimationTrack::set_openClipOffsetRotation(UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_openClipOffsetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_openClipOffsetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_openClipOffsetEulerAngles
UnityEngine::Vector3 UnityEngine::Timeline::AnimationTrack::get_openClipOffsetEulerAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_openClipOffsetEulerAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_openClipOffsetEulerAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_openClipOffsetEulerAngles
void UnityEngine::Timeline::AnimationTrack::set_openClipOffsetEulerAngles(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_openClipOffsetEulerAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_openClipOffsetEulerAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_openClipPreExtrapolation
UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::AnimationTrack::get_openClipPreExtrapolation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_openClipPreExtrapolation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_openClipPreExtrapolation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip::ClipExtrapolation, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_openClipPreExtrapolation
void UnityEngine::Timeline::AnimationTrack::set_openClipPreExtrapolation(UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_openClipPreExtrapolation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_openClipPreExtrapolation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_openClipPostExtrapolation
UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::AnimationTrack::get_openClipPostExtrapolation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_openClipPostExtrapolation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_openClipPostExtrapolation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip::ClipExtrapolation, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_openClipPostExtrapolation
void UnityEngine::Timeline::AnimationTrack::set_openClipPostExtrapolation(UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_openClipPostExtrapolation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_openClipPostExtrapolation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.CanCompileClips
bool UnityEngine::Timeline::AnimationTrack::CanCompileClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::CanCompileClips");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanCompileClips", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_outputs
System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::AnimationTrack::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_outputs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_outputs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.OnCreateClip
void UnityEngine::Timeline::AnimationTrack::OnCreateClip(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::OnCreateClip");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCreateClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.CalculateItemsHash
int UnityEngine::Timeline::AnimationTrack::CalculateItemsHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::CalculateItemsHash");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalculateItemsHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.OnCreateClipPlayableGraph
UnityEngine::Playables::Playable UnityEngine::Timeline::AnimationTrack::OnCreateClipPlayableGraph(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go, UnityEngine::Timeline::IntervalTree_1<UnityEngine::Timeline::RuntimeElement*>* tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::OnCreateClipPlayableGraph");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCreateClipPlayableGraph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go), ::il2cpp_utils::ExtractType(tree)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, tree);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.GetEvaluationTime
void UnityEngine::Timeline::AnimationTrack::GetEvaluationTime(double& outStart, double& outDuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::GetEvaluationTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEvaluationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<double&>(), ::il2cpp_utils::ExtractIndependentType<double&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, outStart, outDuration);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.GetSequenceTime
void UnityEngine::Timeline::AnimationTrack::GetSequenceTime(double& outStart, double& outDuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::GetSequenceTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSequenceTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<double&>(), ::il2cpp_utils::ExtractIndependentType<double&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, outStart, outDuration);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.GatherProperties
void UnityEngine::Timeline::AnimationTrack::GatherProperties(UnityEngine::Playables::PlayableDirector* director, UnityEngine::Timeline::IPropertyCollector* driver) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::GatherProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GatherProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(director), ::il2cpp_utils::ExtractType(driver)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, director, driver);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.OnUpgradeFromVersion
void UnityEngine::Timeline::AnimationTrack::OnUpgradeFromVersion(int oldVersion) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::OnUpgradeFromVersion");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnUpgradeFromVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldVersion)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, oldVersion);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack..cctor
void UnityEngine::Timeline::AnimationTrack::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "AnimationTrack", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AnimationTrack/AnimationTrackUpgrade
#include "UnityEngine/Timeline/AnimationTrack_AnimationTrackUpgrade.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.AnimationTrack/AnimationTrackUpgrade.ConvertRotationsToEuler
void UnityEngine::Timeline::AnimationTrack::AnimationTrackUpgrade::ConvertRotationsToEuler(UnityEngine::Timeline::AnimationTrack* track) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::AnimationTrackUpgrade::ConvertRotationsToEuler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "AnimationTrack/AnimationTrackUpgrade", "ConvertRotationsToEuler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(track)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, track);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack/AnimationTrackUpgrade.ConvertRootMotion
void UnityEngine::Timeline::AnimationTrack::AnimationTrackUpgrade::ConvertRootMotion(UnityEngine::Timeline::AnimationTrack* track) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::AnimationTrackUpgrade::ConvertRootMotion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "AnimationTrack/AnimationTrackUpgrade", "ConvertRootMotion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(track)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, track);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack/AnimationTrackUpgrade.ConvertInfiniteTrack
void UnityEngine::Timeline::AnimationTrack::AnimationTrackUpgrade::ConvertInfiniteTrack(UnityEngine::Timeline::AnimationTrack* track) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::AnimationTrackUpgrade::ConvertInfiniteTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "AnimationTrack/AnimationTrackUpgrade", "ConvertInfiniteTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(track)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, track);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.AnimationTrack/<get_outputs>d__49
#include "UnityEngine/Timeline/AnimationTrack_-get_outputs-d__49.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.AnimationTrack/<get_outputs>d__49.System.IDisposable.Dispose
void UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack/<get_outputs>d__49.MoveNext
bool UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack/<get_outputs>d__49.System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current
UnityEngine::Playables::PlayableBinding UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System_Collections_Generic_IEnumerator$UnityEngine_Playables_PlayableBinding$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableBinding, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack/<get_outputs>d__49.System.Collections.IEnumerator.Reset
void UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack/<get_outputs>d__49.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack/<get_outputs>d__49.System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator
System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System_Collections_Generic_IEnumerable$UnityEngine_Playables_PlayableBinding$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack/<get_outputs>d__49.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.ICurvesOwner
#include "UnityEngine/Timeline/ICurvesOwner.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ICurvesOwner.get_curves
UnityEngine::AnimationClip* UnityEngine::Timeline::ICurvesOwner::get_curves() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ICurvesOwner::get_curves");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_curves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ICurvesOwner.get_hasCurves
bool UnityEngine::Timeline::ICurvesOwner::get_hasCurves() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ICurvesOwner::get_hasCurves");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasCurves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ICurvesOwner.get_duration
double UnityEngine::Timeline::ICurvesOwner::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ICurvesOwner::get_duration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ICurvesOwner.CreateCurves
void UnityEngine::Timeline::ICurvesOwner::CreateCurves(::Il2CppString* curvesClipName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ICurvesOwner::CreateCurves");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCurves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curvesClipName)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, curvesClipName);
}
// Autogenerated method: UnityEngine.Timeline.ICurvesOwner.get_defaultCurvesName
::Il2CppString* UnityEngine::Timeline::ICurvesOwner::get_defaultCurvesName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ICurvesOwner::get_defaultCurvesName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultCurvesName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ICurvesOwner.get_asset
UnityEngine::Object* UnityEngine::Timeline::ICurvesOwner::get_asset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ICurvesOwner::get_asset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_asset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ICurvesOwner.get_assetOwner
UnityEngine::Object* UnityEngine::Timeline::ICurvesOwner::get_assetOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ICurvesOwner::get_assetOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_assetOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ICurvesOwner.get_targetTrack
UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::ICurvesOwner::get_targetTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ICurvesOwner::get_targetTrack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_targetTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: UnityEngine.Timeline.TimelineClip/Versions
#include "UnityEngine/Timeline/TimelineClip_Versions.hpp"
// Including type: UnityEngine.Timeline.TimelineClip/TimelineClipUpgrade
#include "UnityEngine/Timeline/TimelineClip_TimelineClipUpgrade.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 k_LatestVersion
int UnityEngine::Timeline::TimelineClip::_get_k_LatestVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::_get_k_LatestVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.Timeline", "TimelineClip", "k_LatestVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_LatestVersion
void UnityEngine::Timeline::TimelineClip::_set_k_LatestVersion(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::_set_k_LatestVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip", "k_LatestVersion", value));
}
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Timeline.ClipCaps kDefaultClipCaps
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::TimelineClip::_get_kDefaultClipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::_get_kDefaultClipCaps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "TimelineClip", "kDefaultClipCaps"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Timeline.ClipCaps kDefaultClipCaps
void UnityEngine::Timeline::TimelineClip::_set_kDefaultClipCaps(UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::_set_kDefaultClipCaps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip", "kDefaultClipCaps", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Single kDefaultClipDurationInSeconds
float UnityEngine::Timeline::TimelineClip::_get_kDefaultClipDurationInSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::_get_kDefaultClipDurationInSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.Timeline", "TimelineClip", "kDefaultClipDurationInSeconds"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Single kDefaultClipDurationInSeconds
void UnityEngine::Timeline::TimelineClip::_set_kDefaultClipDurationInSeconds(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::_set_kDefaultClipDurationInSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip", "kDefaultClipDurationInSeconds", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Double kTimeScaleMin
double UnityEngine::Timeline::TimelineClip::_get_kTimeScaleMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::_get_kTimeScaleMin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimelineClip", "kTimeScaleMin"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double kTimeScaleMin
void UnityEngine::Timeline::TimelineClip::_set_kTimeScaleMin(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::_set_kTimeScaleMin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip", "kTimeScaleMin", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Double kTimeScaleMax
double UnityEngine::Timeline::TimelineClip::_get_kTimeScaleMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::_get_kTimeScaleMax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimelineClip", "kTimeScaleMax"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double kTimeScaleMax
void UnityEngine::Timeline::TimelineClip::_set_kTimeScaleMax(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::_set_kTimeScaleMax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip", "kTimeScaleMax", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String kDefaultCurvesName
::Il2CppString* UnityEngine::Timeline::TimelineClip::_get_kDefaultCurvesName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::_get_kDefaultCurvesName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("UnityEngine.Timeline", "TimelineClip", "kDefaultCurvesName"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String kDefaultCurvesName
void UnityEngine::Timeline::TimelineClip::_set_kDefaultCurvesName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::_set_kDefaultCurvesName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip", "kDefaultCurvesName", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Double kMinDuration
double UnityEngine::Timeline::TimelineClip::_get_kMinDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::_get_kMinDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimelineClip", "kMinDuration"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Double kMinDuration
void UnityEngine::Timeline::TimelineClip::_set_kMinDuration(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::_set_kMinDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip", "kMinDuration", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Double kMaxTimeValue
double UnityEngine::Timeline::TimelineClip::_get_kMaxTimeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::_get_kMaxTimeValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimelineClip", "kMaxTimeValue"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Double kMaxTimeValue
void UnityEngine::Timeline::TimelineClip::_set_kMaxTimeValue(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::_set_kMaxTimeValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip", "kMaxTimeValue", value));
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.UpgradeToLatestVersion
void UnityEngine::Timeline::TimelineClip::UpgradeToLatestVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::UpgradeToLatestVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpgradeToLatestVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_hasPreExtrapolation
bool UnityEngine::Timeline::TimelineClip::get_hasPreExtrapolation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_hasPreExtrapolation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasPreExtrapolation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_hasPostExtrapolation
bool UnityEngine::Timeline::TimelineClip::get_hasPostExtrapolation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_hasPostExtrapolation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasPostExtrapolation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_timeScale
double UnityEngine::Timeline::TimelineClip::get_timeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_timeScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_timeScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_timeScale
void UnityEngine::Timeline::TimelineClip::set_timeScale(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_timeScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_timeScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_start
double UnityEngine::Timeline::TimelineClip::get_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_start
void UnityEngine::Timeline::TimelineClip::set_start(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_duration
double UnityEngine::Timeline::TimelineClip::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_duration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_duration
void UnityEngine::Timeline::TimelineClip::set_duration(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_end
double UnityEngine::Timeline::TimelineClip::get_end() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_end");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_end", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_clipIn
double UnityEngine::Timeline::TimelineClip::get_clipIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_clipIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_clipIn
void UnityEngine::Timeline::TimelineClip::set_clipIn(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_clipIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_clipIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_displayName
::Il2CppString* UnityEngine::Timeline::TimelineClip::get_displayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_displayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_displayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_displayName
void UnityEngine::Timeline::TimelineClip::set_displayName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_displayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_displayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_clipAssetDuration
double UnityEngine::Timeline::TimelineClip::get_clipAssetDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_clipAssetDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipAssetDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_curves
UnityEngine::AnimationClip* UnityEngine::Timeline::TimelineClip::get_curves() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_curves");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_curves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_curves
void UnityEngine::Timeline::TimelineClip::set_curves(UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_curves");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_curves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.UnityEngine.Timeline.ICurvesOwner.get_defaultCurvesName
::Il2CppString* UnityEngine::Timeline::TimelineClip::UnityEngine_Timeline_ICurvesOwner_get_defaultCurvesName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::UnityEngine.Timeline.ICurvesOwner.get_defaultCurvesName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.Timeline.ICurvesOwner.get_defaultCurvesName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_hasCurves
bool UnityEngine::Timeline::TimelineClip::get_hasCurves() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_hasCurves");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasCurves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_asset
UnityEngine::Object* UnityEngine::Timeline::TimelineClip::get_asset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_asset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_asset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_asset
void UnityEngine::Timeline::TimelineClip::set_asset(UnityEngine::Object* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_asset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_asset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.UnityEngine.Timeline.ICurvesOwner.get_assetOwner
UnityEngine::Object* UnityEngine::Timeline::TimelineClip::UnityEngine_Timeline_ICurvesOwner_get_assetOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::UnityEngine.Timeline.ICurvesOwner.get_assetOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.Timeline.ICurvesOwner.get_assetOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.UnityEngine.Timeline.ICurvesOwner.get_targetTrack
UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::TimelineClip::UnityEngine_Timeline_ICurvesOwner_get_targetTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::UnityEngine.Timeline.ICurvesOwner.get_targetTrack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.Timeline.ICurvesOwner.get_targetTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_underlyingAsset
UnityEngine::Object* UnityEngine::Timeline::TimelineClip::get_underlyingAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_underlyingAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_underlyingAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_underlyingAsset
void UnityEngine::Timeline::TimelineClip::set_underlyingAsset(UnityEngine::Object* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_underlyingAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_underlyingAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_parentTrack
UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::TimelineClip::get_parentTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_parentTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_parentTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_parentTrack
void UnityEngine::Timeline::TimelineClip::set_parentTrack(UnityEngine::Timeline::TrackAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_parentTrack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_parentTrack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_easeInDuration
double UnityEngine::Timeline::TimelineClip::get_easeInDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_easeInDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_easeInDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_easeInDuration
void UnityEngine::Timeline::TimelineClip::set_easeInDuration(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_easeInDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_easeInDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_easeOutDuration
double UnityEngine::Timeline::TimelineClip::get_easeOutDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_easeOutDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_easeOutDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_easeOutDuration
void UnityEngine::Timeline::TimelineClip::set_easeOutDuration(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_easeOutDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_easeOutDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_eastOutTime
double UnityEngine::Timeline::TimelineClip::get_eastOutTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_eastOutTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_eastOutTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_easeOutTime
double UnityEngine::Timeline::TimelineClip::get_easeOutTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_easeOutTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_easeOutTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_blendInDuration
double UnityEngine::Timeline::TimelineClip::get_blendInDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_blendInDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_blendInDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_blendInDuration
void UnityEngine::Timeline::TimelineClip::set_blendInDuration(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_blendInDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_blendInDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_blendOutDuration
double UnityEngine::Timeline::TimelineClip::get_blendOutDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_blendOutDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_blendOutDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_blendOutDuration
void UnityEngine::Timeline::TimelineClip::set_blendOutDuration(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_blendOutDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_blendOutDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_blendInCurveMode
UnityEngine::Timeline::TimelineClip::BlendCurveMode UnityEngine::Timeline::TimelineClip::get_blendInCurveMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_blendInCurveMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_blendInCurveMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip::BlendCurveMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_blendInCurveMode
void UnityEngine::Timeline::TimelineClip::set_blendInCurveMode(UnityEngine::Timeline::TimelineClip::BlendCurveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_blendInCurveMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_blendInCurveMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_blendOutCurveMode
UnityEngine::Timeline::TimelineClip::BlendCurveMode UnityEngine::Timeline::TimelineClip::get_blendOutCurveMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_blendOutCurveMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_blendOutCurveMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip::BlendCurveMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_blendOutCurveMode
void UnityEngine::Timeline::TimelineClip::set_blendOutCurveMode(UnityEngine::Timeline::TimelineClip::BlendCurveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_blendOutCurveMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_blendOutCurveMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_hasBlendIn
bool UnityEngine::Timeline::TimelineClip::get_hasBlendIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_hasBlendIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasBlendIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_hasBlendOut
bool UnityEngine::Timeline::TimelineClip::get_hasBlendOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_hasBlendOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasBlendOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_mixInCurve
UnityEngine::AnimationCurve* UnityEngine::Timeline::TimelineClip::get_mixInCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_mixInCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mixInCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationCurve*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_mixInCurve
void UnityEngine::Timeline::TimelineClip::set_mixInCurve(UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_mixInCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mixInCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_mixInPercentage
float UnityEngine::Timeline::TimelineClip::get_mixInPercentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_mixInPercentage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mixInPercentage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_mixInDuration
double UnityEngine::Timeline::TimelineClip::get_mixInDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_mixInDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mixInDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_mixOutCurve
UnityEngine::AnimationCurve* UnityEngine::Timeline::TimelineClip::get_mixOutCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_mixOutCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mixOutCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationCurve*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_mixOutCurve
void UnityEngine::Timeline::TimelineClip::set_mixOutCurve(UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_mixOutCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mixOutCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_mixOutTime
double UnityEngine::Timeline::TimelineClip::get_mixOutTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_mixOutTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mixOutTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_mixOutDuration
double UnityEngine::Timeline::TimelineClip::get_mixOutDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_mixOutDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mixOutDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_mixOutPercentage
float UnityEngine::Timeline::TimelineClip::get_mixOutPercentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_mixOutPercentage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mixOutPercentage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_recordable
bool UnityEngine::Timeline::TimelineClip::get_recordable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_recordable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recordable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_recordable
void UnityEngine::Timeline::TimelineClip::set_recordable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_recordable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_recordable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_exposedParameters
System::Collections::Generic::List_1<::Il2CppString*>* UnityEngine::Timeline::TimelineClip::get_exposedParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_exposedParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_exposedParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_clipCaps
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::TimelineClip::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_clipCaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.Hash
int UnityEngine::Timeline::TimelineClip::Hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::Hash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.EvaluateMixOut
float UnityEngine::Timeline::TimelineClip::EvaluateMixOut(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::EvaluateMixOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateMixOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.EvaluateMixIn
float UnityEngine::Timeline::TimelineClip::EvaluateMixIn(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::EvaluateMixIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateMixIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.GetDefaultMixInCurve
UnityEngine::AnimationCurve* UnityEngine::Timeline::TimelineClip::GetDefaultMixInCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::GetDefaultMixInCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClip", "GetDefaultMixInCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationCurve*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.GetDefaultMixOutCurve
UnityEngine::AnimationCurve* UnityEngine::Timeline::TimelineClip::GetDefaultMixOutCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::GetDefaultMixOutCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClip", "GetDefaultMixOutCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationCurve*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.ToLocalTime
double UnityEngine::Timeline::TimelineClip::ToLocalTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::ToLocalTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToLocalTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.ToLocalTimeUnbound
double UnityEngine::Timeline::TimelineClip::ToLocalTimeUnbound(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::ToLocalTimeUnbound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToLocalTimeUnbound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.FromLocalTimeUnbound
double UnityEngine::Timeline::TimelineClip::FromLocalTimeUnbound(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::FromLocalTimeUnbound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FromLocalTimeUnbound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_animationClip
UnityEngine::AnimationClip* UnityEngine::Timeline::TimelineClip::get_animationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_animationClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animationClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.SanitizeTimeValue
double UnityEngine::Timeline::TimelineClip::SanitizeTimeValue(double value, double defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::SanitizeTimeValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClip", "SanitizeTimeValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, defaultValue);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_postExtrapolationMode
UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::TimelineClip::get_postExtrapolationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_postExtrapolationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_postExtrapolationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip::ClipExtrapolation, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_postExtrapolationMode
void UnityEngine::Timeline::TimelineClip::set_postExtrapolationMode(UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_postExtrapolationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_postExtrapolationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_preExtrapolationMode
UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::TimelineClip::get_preExtrapolationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_preExtrapolationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_preExtrapolationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip::ClipExtrapolation, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_preExtrapolationMode
void UnityEngine::Timeline::TimelineClip::set_preExtrapolationMode(UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_preExtrapolationMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_preExtrapolationMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.SetPostExtrapolationTime
void UnityEngine::Timeline::TimelineClip::SetPostExtrapolationTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::SetPostExtrapolationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPostExtrapolationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.SetPreExtrapolationTime
void UnityEngine::Timeline::TimelineClip::SetPreExtrapolationTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::SetPreExtrapolationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPreExtrapolationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.IsExtrapolatedTime
bool UnityEngine::Timeline::TimelineClip::IsExtrapolatedTime(double sequenceTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::IsExtrapolatedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsExtrapolatedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sequenceTime)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sequenceTime);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.IsPreExtrapolatedTime
bool UnityEngine::Timeline::TimelineClip::IsPreExtrapolatedTime(double sequenceTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::IsPreExtrapolatedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPreExtrapolatedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sequenceTime)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sequenceTime);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.IsPostExtrapolatedTime
bool UnityEngine::Timeline::TimelineClip::IsPostExtrapolatedTime(double sequenceTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::IsPostExtrapolatedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPostExtrapolatedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sequenceTime)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sequenceTime);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_extrapolatedStart
double UnityEngine::Timeline::TimelineClip::get_extrapolatedStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_extrapolatedStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_extrapolatedStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_extrapolatedDuration
double UnityEngine::Timeline::TimelineClip::get_extrapolatedDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_extrapolatedDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_extrapolatedDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.GetExtrapolatedTime
double UnityEngine::Timeline::TimelineClip::GetExtrapolatedTime(double time, UnityEngine::Timeline::TimelineClip::ClipExtrapolation mode, double duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::GetExtrapolatedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClip", "GetExtrapolatedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(duration)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time, mode, duration);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.CreateCurves
void UnityEngine::Timeline::TimelineClip::CreateCurves(::Il2CppString* curvesClipName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::CreateCurves");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCurves", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(curvesClipName)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, curvesClipName);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
void UnityEngine::Timeline::TimelineClip::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
void UnityEngine::Timeline::TimelineClip::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.ConformEaseValues
void UnityEngine::Timeline::TimelineClip::ConformEaseValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::ConformEaseValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConformEaseValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.CalculateEasingRatio
double UnityEngine::Timeline::TimelineClip::CalculateEasingRatio(double easeIn, double easeOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::CalculateEasingRatio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClip", "CalculateEasingRatio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(easeIn), ::il2cpp_utils::ExtractType(easeOut)})));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, easeIn, easeOut);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.UpdateDirty
void UnityEngine::Timeline::TimelineClip::UpdateDirty(double oldValue, double newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::UpdateDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oldValue), ::il2cpp_utils::ExtractType(newValue)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, oldValue, newValue);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip..cctor
void UnityEngine::Timeline::TimelineClip::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClip", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.ToString
::Il2CppString* UnityEngine::Timeline::TimelineClip::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineClip/Versions
#include "UnityEngine/Timeline/TimelineClip_Versions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineClip/Versions Initial
UnityEngine::Timeline::TimelineClip::Versions UnityEngine::Timeline::TimelineClip::Versions::_get_Initial() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::Versions::_get_Initial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineClip::Versions>("UnityEngine.Timeline", "TimelineClip/Versions", "Initial"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineClip/Versions Initial
void UnityEngine::Timeline::TimelineClip::Versions::_set_Initial(UnityEngine::Timeline::TimelineClip::Versions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::Versions::_set_Initial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip/Versions", "Initial", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineClip/Versions ClipInFromGlobalToLocal
UnityEngine::Timeline::TimelineClip::Versions UnityEngine::Timeline::TimelineClip::Versions::_get_ClipInFromGlobalToLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::Versions::_get_ClipInFromGlobalToLocal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineClip::Versions>("UnityEngine.Timeline", "TimelineClip/Versions", "ClipInFromGlobalToLocal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineClip/Versions ClipInFromGlobalToLocal
void UnityEngine::Timeline::TimelineClip::Versions::_set_ClipInFromGlobalToLocal(UnityEngine::Timeline::TimelineClip::Versions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::Versions::_set_ClipInFromGlobalToLocal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip/Versions", "ClipInFromGlobalToLocal", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineClip/TimelineClipUpgrade
#include "UnityEngine/Timeline/TimelineClip_TimelineClipUpgrade.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimelineClip/TimelineClipUpgrade.UpgradeClipInFromGlobalToLocal
void UnityEngine::Timeline::TimelineClip::TimelineClipUpgrade::UpgradeClipInFromGlobalToLocal(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::TimelineClipUpgrade::UpgradeClipInFromGlobalToLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClip/TimelineClipUpgrade", "UpgradeClipInFromGlobalToLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clip);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineClip/ClipExtrapolation
#include "UnityEngine/Timeline/TimelineClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation None
UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineClip::ClipExtrapolation>("UnityEngine.Timeline", "TimelineClip/ClipExtrapolation", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation None
void UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_set_None(UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip/ClipExtrapolation", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation Hold
UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_get_Hold() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_get_Hold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineClip::ClipExtrapolation>("UnityEngine.Timeline", "TimelineClip/ClipExtrapolation", "Hold"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation Hold
void UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_set_Hold(UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_set_Hold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip/ClipExtrapolation", "Hold", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation Loop
UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_get_Loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_get_Loop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineClip::ClipExtrapolation>("UnityEngine.Timeline", "TimelineClip/ClipExtrapolation", "Loop"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation Loop
void UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_set_Loop(UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_set_Loop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip/ClipExtrapolation", "Loop", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation PingPong
UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_get_PingPong() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_get_PingPong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineClip::ClipExtrapolation>("UnityEngine.Timeline", "TimelineClip/ClipExtrapolation", "PingPong"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation PingPong
void UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_set_PingPong(UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_set_PingPong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip/ClipExtrapolation", "PingPong", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation Continue
UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_get_Continue() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_get_Continue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineClip::ClipExtrapolation>("UnityEngine.Timeline", "TimelineClip/ClipExtrapolation", "Continue"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation Continue
void UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_set_Continue(UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_set_Continue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip/ClipExtrapolation", "Continue", value));
}
