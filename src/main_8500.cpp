// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_TextElementType
#include "TMPro/TMP_TextElementType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_TextElementType Character
TMPro::TMP_TextElementType TMPro::TMP_TextElementType::_get_Character() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElementType::_get_Character");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_TextElementType>("TMPro", "TMP_TextElementType", "Character"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_TextElementType Character
void TMPro::TMP_TextElementType::_set_Character(TMPro::TMP_TextElementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElementType::_set_Character");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextElementType", "Character", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_TextElementType Sprite
TMPro::TMP_TextElementType TMPro::TMP_TextElementType::_get_Sprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElementType::_get_Sprite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_TextElementType>("TMPro", "TMP_TextElementType", "Sprite"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_TextElementType Sprite
void TMPro::TMP_TextElementType::_set_Sprite(TMPro::TMP_TextElementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElementType::_set_Sprite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextElementType", "Sprite", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.MaskingTypes
#include "TMPro/MaskingTypes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.MaskingTypes MaskOff
TMPro::MaskingTypes TMPro::MaskingTypes::_get_MaskOff() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaskingTypes::_get_MaskOff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::MaskingTypes>("TMPro", "MaskingTypes", "MaskOff"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.MaskingTypes MaskOff
void TMPro::MaskingTypes::_set_MaskOff(TMPro::MaskingTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaskingTypes::_set_MaskOff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "MaskingTypes", "MaskOff", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.MaskingTypes MaskHard
TMPro::MaskingTypes TMPro::MaskingTypes::_get_MaskHard() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaskingTypes::_get_MaskHard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::MaskingTypes>("TMPro", "MaskingTypes", "MaskHard"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.MaskingTypes MaskHard
void TMPro::MaskingTypes::_set_MaskHard(TMPro::MaskingTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaskingTypes::_set_MaskHard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "MaskingTypes", "MaskHard", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.MaskingTypes MaskSoft
TMPro::MaskingTypes TMPro::MaskingTypes::_get_MaskSoft() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaskingTypes::_get_MaskSoft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::MaskingTypes>("TMPro", "MaskingTypes", "MaskSoft"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.MaskingTypes MaskSoft
void TMPro::MaskingTypes::_set_MaskSoft(TMPro::MaskingTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaskingTypes::_set_MaskSoft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "MaskingTypes", "MaskSoft", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TextOverflowModes
#include "TMPro/TextOverflowModes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TextOverflowModes Overflow
TMPro::TextOverflowModes TMPro::TextOverflowModes::_get_Overflow() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_get_Overflow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextOverflowModes>("TMPro", "TextOverflowModes", "Overflow"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextOverflowModes Overflow
void TMPro::TextOverflowModes::_set_Overflow(TMPro::TextOverflowModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_set_Overflow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextOverflowModes", "Overflow", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextOverflowModes Ellipsis
TMPro::TextOverflowModes TMPro::TextOverflowModes::_get_Ellipsis() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_get_Ellipsis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextOverflowModes>("TMPro", "TextOverflowModes", "Ellipsis"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextOverflowModes Ellipsis
void TMPro::TextOverflowModes::_set_Ellipsis(TMPro::TextOverflowModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_set_Ellipsis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextOverflowModes", "Ellipsis", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextOverflowModes Masking
TMPro::TextOverflowModes TMPro::TextOverflowModes::_get_Masking() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_get_Masking");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextOverflowModes>("TMPro", "TextOverflowModes", "Masking"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextOverflowModes Masking
void TMPro::TextOverflowModes::_set_Masking(TMPro::TextOverflowModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_set_Masking");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextOverflowModes", "Masking", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextOverflowModes Truncate
TMPro::TextOverflowModes TMPro::TextOverflowModes::_get_Truncate() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_get_Truncate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextOverflowModes>("TMPro", "TextOverflowModes", "Truncate"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextOverflowModes Truncate
void TMPro::TextOverflowModes::_set_Truncate(TMPro::TextOverflowModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_set_Truncate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextOverflowModes", "Truncate", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextOverflowModes ScrollRect
TMPro::TextOverflowModes TMPro::TextOverflowModes::_get_ScrollRect() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_get_ScrollRect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextOverflowModes>("TMPro", "TextOverflowModes", "ScrollRect"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextOverflowModes ScrollRect
void TMPro::TextOverflowModes::_set_ScrollRect(TMPro::TextOverflowModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_set_ScrollRect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextOverflowModes", "ScrollRect", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextOverflowModes Page
TMPro::TextOverflowModes TMPro::TextOverflowModes::_get_Page() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_get_Page");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextOverflowModes>("TMPro", "TextOverflowModes", "Page"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextOverflowModes Page
void TMPro::TextOverflowModes::_set_Page(TMPro::TextOverflowModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_set_Page");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextOverflowModes", "Page", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextOverflowModes Linked
TMPro::TextOverflowModes TMPro::TextOverflowModes::_get_Linked() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_get_Linked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextOverflowModes>("TMPro", "TextOverflowModes", "Linked"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextOverflowModes Linked
void TMPro::TextOverflowModes::_set_Linked(TMPro::TextOverflowModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextOverflowModes::_set_Linked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextOverflowModes", "Linked", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.MaskingOffsetMode
#include "TMPro/MaskingOffsetMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.MaskingOffsetMode Percentage
TMPro::MaskingOffsetMode TMPro::MaskingOffsetMode::_get_Percentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaskingOffsetMode::_get_Percentage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::MaskingOffsetMode>("TMPro", "MaskingOffsetMode", "Percentage"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.MaskingOffsetMode Percentage
void TMPro::MaskingOffsetMode::_set_Percentage(TMPro::MaskingOffsetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaskingOffsetMode::_set_Percentage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "MaskingOffsetMode", "Percentage", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.MaskingOffsetMode Pixel
TMPro::MaskingOffsetMode TMPro::MaskingOffsetMode::_get_Pixel() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaskingOffsetMode::_get_Pixel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::MaskingOffsetMode>("TMPro", "MaskingOffsetMode", "Pixel"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.MaskingOffsetMode Pixel
void TMPro::MaskingOffsetMode::_set_Pixel(TMPro::MaskingOffsetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::MaskingOffsetMode::_set_Pixel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "MaskingOffsetMode", "Pixel", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TextureMappingOptions
#include "TMPro/TextureMappingOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TextureMappingOptions Character
TMPro::TextureMappingOptions TMPro::TextureMappingOptions::_get_Character() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextureMappingOptions::_get_Character");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextureMappingOptions>("TMPro", "TextureMappingOptions", "Character"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextureMappingOptions Character
void TMPro::TextureMappingOptions::_set_Character(TMPro::TextureMappingOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextureMappingOptions::_set_Character");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextureMappingOptions", "Character", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextureMappingOptions Line
TMPro::TextureMappingOptions TMPro::TextureMappingOptions::_get_Line() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextureMappingOptions::_get_Line");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextureMappingOptions>("TMPro", "TextureMappingOptions", "Line"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextureMappingOptions Line
void TMPro::TextureMappingOptions::_set_Line(TMPro::TextureMappingOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextureMappingOptions::_set_Line");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextureMappingOptions", "Line", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextureMappingOptions Paragraph
TMPro::TextureMappingOptions TMPro::TextureMappingOptions::_get_Paragraph() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextureMappingOptions::_get_Paragraph");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextureMappingOptions>("TMPro", "TextureMappingOptions", "Paragraph"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextureMappingOptions Paragraph
void TMPro::TextureMappingOptions::_set_Paragraph(TMPro::TextureMappingOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextureMappingOptions::_set_Paragraph");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextureMappingOptions", "Paragraph", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextureMappingOptions MatchAspect
TMPro::TextureMappingOptions TMPro::TextureMappingOptions::_get_MatchAspect() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextureMappingOptions::_get_MatchAspect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextureMappingOptions>("TMPro", "TextureMappingOptions", "MatchAspect"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextureMappingOptions MatchAspect
void TMPro::TextureMappingOptions::_set_MatchAspect(TMPro::TextureMappingOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextureMappingOptions::_set_MatchAspect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextureMappingOptions", "MatchAspect", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.FontStyles
#include "TMPro/FontStyles.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles Normal
TMPro::FontStyles TMPro::FontStyles::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontStyles>("TMPro", "FontStyles", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles Normal
void TMPro::FontStyles::_set_Normal(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles Bold
TMPro::FontStyles TMPro::FontStyles::_get_Bold() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_get_Bold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontStyles>("TMPro", "FontStyles", "Bold"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles Bold
void TMPro::FontStyles::_set_Bold(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_set_Bold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "Bold", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles Italic
TMPro::FontStyles TMPro::FontStyles::_get_Italic() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_get_Italic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontStyles>("TMPro", "FontStyles", "Italic"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles Italic
void TMPro::FontStyles::_set_Italic(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_set_Italic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "Italic", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles Underline
TMPro::FontStyles TMPro::FontStyles::_get_Underline() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_get_Underline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontStyles>("TMPro", "FontStyles", "Underline"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles Underline
void TMPro::FontStyles::_set_Underline(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_set_Underline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "Underline", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles LowerCase
TMPro::FontStyles TMPro::FontStyles::_get_LowerCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_get_LowerCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontStyles>("TMPro", "FontStyles", "LowerCase"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles LowerCase
void TMPro::FontStyles::_set_LowerCase(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_set_LowerCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "LowerCase", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles UpperCase
TMPro::FontStyles TMPro::FontStyles::_get_UpperCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_get_UpperCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontStyles>("TMPro", "FontStyles", "UpperCase"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles UpperCase
void TMPro::FontStyles::_set_UpperCase(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_set_UpperCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "UpperCase", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles SmallCaps
TMPro::FontStyles TMPro::FontStyles::_get_SmallCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_get_SmallCaps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontStyles>("TMPro", "FontStyles", "SmallCaps"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles SmallCaps
void TMPro::FontStyles::_set_SmallCaps(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_set_SmallCaps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "SmallCaps", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles Strikethrough
TMPro::FontStyles TMPro::FontStyles::_get_Strikethrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_get_Strikethrough");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontStyles>("TMPro", "FontStyles", "Strikethrough"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles Strikethrough
void TMPro::FontStyles::_set_Strikethrough(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_set_Strikethrough");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "Strikethrough", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles Superscript
TMPro::FontStyles TMPro::FontStyles::_get_Superscript() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_get_Superscript");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontStyles>("TMPro", "FontStyles", "Superscript"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles Superscript
void TMPro::FontStyles::_set_Superscript(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_set_Superscript");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "Superscript", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles Subscript
TMPro::FontStyles TMPro::FontStyles::_get_Subscript() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_get_Subscript");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontStyles>("TMPro", "FontStyles", "Subscript"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles Subscript
void TMPro::FontStyles::_set_Subscript(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_set_Subscript");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "Subscript", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontStyles Highlight
TMPro::FontStyles TMPro::FontStyles::_get_Highlight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_get_Highlight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontStyles>("TMPro", "FontStyles", "Highlight"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontStyles Highlight
void TMPro::FontStyles::_set_Highlight(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontStyles::_set_Highlight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontStyles", "Highlight", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.FontWeight
#include "TMPro/FontWeight.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight Thin
TMPro::FontWeight TMPro::FontWeight::_get_Thin() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_get_Thin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontWeight>("TMPro", "FontWeight", "Thin"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight Thin
void TMPro::FontWeight::_set_Thin(TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_set_Thin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "Thin", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight ExtraLight
TMPro::FontWeight TMPro::FontWeight::_get_ExtraLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_get_ExtraLight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontWeight>("TMPro", "FontWeight", "ExtraLight"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight ExtraLight
void TMPro::FontWeight::_set_ExtraLight(TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_set_ExtraLight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "ExtraLight", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight Light
TMPro::FontWeight TMPro::FontWeight::_get_Light() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_get_Light");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontWeight>("TMPro", "FontWeight", "Light"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight Light
void TMPro::FontWeight::_set_Light(TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_set_Light");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "Light", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight Regular
TMPro::FontWeight TMPro::FontWeight::_get_Regular() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_get_Regular");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontWeight>("TMPro", "FontWeight", "Regular"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight Regular
void TMPro::FontWeight::_set_Regular(TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_set_Regular");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "Regular", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight Medium
TMPro::FontWeight TMPro::FontWeight::_get_Medium() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_get_Medium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontWeight>("TMPro", "FontWeight", "Medium"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight Medium
void TMPro::FontWeight::_set_Medium(TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_set_Medium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "Medium", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight SemiBold
TMPro::FontWeight TMPro::FontWeight::_get_SemiBold() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_get_SemiBold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontWeight>("TMPro", "FontWeight", "SemiBold"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight SemiBold
void TMPro::FontWeight::_set_SemiBold(TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_set_SemiBold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "SemiBold", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight Bold
TMPro::FontWeight TMPro::FontWeight::_get_Bold() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_get_Bold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontWeight>("TMPro", "FontWeight", "Bold"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight Bold
void TMPro::FontWeight::_set_Bold(TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_set_Bold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "Bold", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight Heavy
TMPro::FontWeight TMPro::FontWeight::_get_Heavy() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_get_Heavy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontWeight>("TMPro", "FontWeight", "Heavy"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight Heavy
void TMPro::FontWeight::_set_Heavy(TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_set_Heavy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "Heavy", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.FontWeight Black
TMPro::FontWeight TMPro::FontWeight::_get_Black() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_get_Black");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FontWeight>("TMPro", "FontWeight", "Black"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.FontWeight Black
void TMPro::FontWeight::_set_Black(TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::FontWeight::_set_Black");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "FontWeight", "Black", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: TMPro.TMP_Character
#include "TMPro/TMP_Character.hpp"
// Including type: TMPro.TMP_TextElement
#include "TMPro/TMP_TextElement.hpp"
// Including type: TMPro.TMP_FontAsset
#include "TMPro/TMP_FontAsset.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: TMPro.TMP_ColorGradient
#include "TMPro/TMP_ColorGradient.hpp"
// Including type: TMPro.TMP_SpriteAsset
#include "TMPro/TMP_SpriteAsset.hpp"
// Including type: TMPro.TMP_TextInfo
#include "TMPro/TMP_TextInfo.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: TMPro.TMP_SpriteAnimator
#include "TMPro/TMP_SpriteAnimator.hpp"
// Including type: UnityEngine.UI.LayoutElement
#include "UnityEngine/UI/LayoutElement.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: TMPro.TMP_VertexDataUpdateFlags
#include "TMPro/TMP_VertexDataUpdateFlags.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected UnityEngine.Color32 s_colorWhite
UnityEngine::Color32 TMPro::TMP_Text::_get_s_colorWhite() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_get_s_colorWhite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Color32>("TMPro", "TMP_Text", "s_colorWhite"));
}
// Autogenerated static field setter
// Set static field: static protected UnityEngine.Color32 s_colorWhite
void TMPro::TMP_Text::_set_s_colorWhite(UnityEngine::Color32 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_set_s_colorWhite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "s_colorWhite", value));
}
// Autogenerated static field getter
// Get static field: static protected UnityEngine.Vector2 k_LargePositiveVector2
UnityEngine::Vector2 TMPro::TMP_Text::_get_k_LargePositiveVector2() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_get_k_LargePositiveVector2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("TMPro", "TMP_Text", "k_LargePositiveVector2"));
}
// Autogenerated static field setter
// Set static field: static protected UnityEngine.Vector2 k_LargePositiveVector2
void TMPro::TMP_Text::_set_k_LargePositiveVector2(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_set_k_LargePositiveVector2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "k_LargePositiveVector2", value));
}
// Autogenerated static field getter
// Get static field: static protected UnityEngine.Vector2 k_LargeNegativeVector2
UnityEngine::Vector2 TMPro::TMP_Text::_get_k_LargeNegativeVector2() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_get_k_LargeNegativeVector2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("TMPro", "TMP_Text", "k_LargeNegativeVector2"));
}
// Autogenerated static field setter
// Set static field: static protected UnityEngine.Vector2 k_LargeNegativeVector2
void TMPro::TMP_Text::_set_k_LargeNegativeVector2(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_set_k_LargeNegativeVector2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "k_LargeNegativeVector2", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Single k_LargePositiveFloat
float TMPro::TMP_Text::_get_k_LargePositiveFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_get_k_LargePositiveFloat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("TMPro", "TMP_Text", "k_LargePositiveFloat"));
}
// Autogenerated static field setter
// Set static field: static protected System.Single k_LargePositiveFloat
void TMPro::TMP_Text::_set_k_LargePositiveFloat(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_set_k_LargePositiveFloat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "k_LargePositiveFloat", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Single k_LargeNegativeFloat
float TMPro::TMP_Text::_get_k_LargeNegativeFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_get_k_LargeNegativeFloat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("TMPro", "TMP_Text", "k_LargeNegativeFloat"));
}
// Autogenerated static field setter
// Set static field: static protected System.Single k_LargeNegativeFloat
void TMPro::TMP_Text::_set_k_LargeNegativeFloat(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_set_k_LargeNegativeFloat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "k_LargeNegativeFloat", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Int32 k_LargePositiveInt
int TMPro::TMP_Text::_get_k_LargePositiveInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_get_k_LargePositiveInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "TMP_Text", "k_LargePositiveInt"));
}
// Autogenerated static field setter
// Set static field: static protected System.Int32 k_LargePositiveInt
void TMPro::TMP_Text::_set_k_LargePositiveInt(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_set_k_LargePositiveInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "k_LargePositiveInt", value));
}
// Autogenerated static field getter
// Get static field: static protected System.Int32 k_LargeNegativeInt
int TMPro::TMP_Text::_get_k_LargeNegativeInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_get_k_LargeNegativeInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "TMP_Text", "k_LargeNegativeInt"));
}
// Autogenerated static field setter
// Set static field: static protected System.Int32 k_LargeNegativeInt
void TMPro::TMP_Text::_set_k_LargeNegativeInt(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::_set_k_LargeNegativeInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text", "k_LargeNegativeInt", value));
}
// Autogenerated method: TMPro.TMP_Text.get_text
::Il2CppString* TMPro::TMP_Text::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_text");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_text
void TMPro::TMP_Text::set_text(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_text");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_isRightToLeftText
bool TMPro::TMP_Text::get_isRightToLeftText() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_isRightToLeftText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isRightToLeftText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_isRightToLeftText
void TMPro::TMP_Text::set_isRightToLeftText(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_isRightToLeftText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_isRightToLeftText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_font
TMPro::TMP_FontAsset* TMPro::TMP_Text::get_font() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_font");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_font", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_FontAsset*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_font
void TMPro::TMP_Text::set_font(TMPro::TMP_FontAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_font");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_font", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontSharedMaterial
UnityEngine::Material* TMPro::TMP_Text::get_fontSharedMaterial_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_fontSharedMaterial_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_fontSharedMaterial", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontSharedMaterial
void TMPro::TMP_Text::set_fontSharedMaterial_NEW(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_fontSharedMaterial_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_fontSharedMaterial", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontSharedMaterials
::Array<UnityEngine::Material*>* TMPro::TMP_Text::get_fontSharedMaterials_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_fontSharedMaterials_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_fontSharedMaterials", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Material*>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontSharedMaterials
void TMPro::TMP_Text::set_fontSharedMaterials_NEW(::Array<UnityEngine::Material*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_fontSharedMaterials_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_fontSharedMaterials", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontMaterial
UnityEngine::Material* TMPro::TMP_Text::get_fontMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_fontMaterial");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_fontMaterial", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontMaterial
void TMPro::TMP_Text::set_fontMaterial(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_fontMaterial");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_fontMaterial", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontMaterials
::Array<UnityEngine::Material*>* TMPro::TMP_Text::get_fontMaterials_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_fontMaterials_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_fontMaterials", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Material*>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontMaterials
void TMPro::TMP_Text::set_fontMaterials_NEW(::Array<UnityEngine::Material*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_fontMaterials_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_fontMaterials", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_alpha
float TMPro::TMP_Text::get_alpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_alpha");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_alpha", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_alpha
void TMPro::TMP_Text::set_alpha(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_alpha");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_alpha", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_enableVertexGradient
bool TMPro::TMP_Text::get_enableVertexGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_enableVertexGradient");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_enableVertexGradient", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_enableVertexGradient
void TMPro::TMP_Text::set_enableVertexGradient(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_enableVertexGradient");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_enableVertexGradient", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_colorGradient
TMPro::VertexGradient TMPro::TMP_Text::get_colorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_colorGradient");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_colorGradient", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<TMPro::VertexGradient, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_colorGradient
void TMPro::TMP_Text::set_colorGradient(TMPro::VertexGradient value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_colorGradient");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_colorGradient", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_colorGradientPreset
TMPro::TMP_ColorGradient* TMPro::TMP_Text::get_colorGradientPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_colorGradientPreset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_colorGradientPreset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_ColorGradient*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_colorGradientPreset
void TMPro::TMP_Text::set_colorGradientPreset(TMPro::TMP_ColorGradient* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_colorGradientPreset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_colorGradientPreset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_spriteAsset
TMPro::TMP_SpriteAsset* TMPro::TMP_Text::get_spriteAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_spriteAsset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_spriteAsset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SpriteAsset*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_spriteAsset
void TMPro::TMP_Text::set_spriteAsset(TMPro::TMP_SpriteAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_spriteAsset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_spriteAsset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_tintAllSprites
bool TMPro::TMP_Text::get_tintAllSprites() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_tintAllSprites");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_tintAllSprites", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_tintAllSprites
void TMPro::TMP_Text::set_tintAllSprites(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_tintAllSprites");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_tintAllSprites", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_overrideColorTags
bool TMPro::TMP_Text::get_overrideColorTags() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_overrideColorTags");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_overrideColorTags", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_overrideColorTags
void TMPro::TMP_Text::set_overrideColorTags(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_overrideColorTags");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_overrideColorTags", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_faceColor
UnityEngine::Color32 TMPro::TMP_Text::get_faceColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_faceColor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_faceColor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color32, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_faceColor
void TMPro::TMP_Text::set_faceColor(UnityEngine::Color32 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_faceColor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_faceColor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_outlineColor
UnityEngine::Color32 TMPro::TMP_Text::get_outlineColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_outlineColor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_outlineColor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color32, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_outlineColor
void TMPro::TMP_Text::set_outlineColor(UnityEngine::Color32 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_outlineColor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_outlineColor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_outlineWidth
float TMPro::TMP_Text::get_outlineWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_outlineWidth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_outlineWidth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_outlineWidth
void TMPro::TMP_Text::set_outlineWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_outlineWidth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_outlineWidth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontSize
float TMPro::TMP_Text::get_fontSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_fontSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_fontSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontSize
void TMPro::TMP_Text::set_fontSize(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_fontSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_fontSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontScale
float TMPro::TMP_Text::get_fontScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_fontScale");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_fontScale", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_fontWeight
TMPro::FontWeight TMPro::TMP_Text::get_fontWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_fontWeight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_fontWeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<TMPro::FontWeight, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontWeight
void TMPro::TMP_Text::set_fontWeight(TMPro::FontWeight value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_fontWeight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_fontWeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_pixelsPerUnit
float TMPro::TMP_Text::get_pixelsPerUnit() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_pixelsPerUnit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_pixelsPerUnit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_enableAutoSizing
bool TMPro::TMP_Text::get_enableAutoSizing() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_enableAutoSizing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_enableAutoSizing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_enableAutoSizing
void TMPro::TMP_Text::set_enableAutoSizing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_enableAutoSizing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_enableAutoSizing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontSizeMin
float TMPro::TMP_Text::get_fontSizeMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_fontSizeMin");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_fontSizeMin", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontSizeMin
void TMPro::TMP_Text::set_fontSizeMin(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_fontSizeMin");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_fontSizeMin", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontSizeMax
float TMPro::TMP_Text::get_fontSizeMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_fontSizeMax");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_fontSizeMax", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontSizeMax
void TMPro::TMP_Text::set_fontSizeMax(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_fontSizeMax");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_fontSizeMax", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_fontStyle
TMPro::FontStyles TMPro::TMP_Text::get_fontStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_fontStyle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_fontStyle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<TMPro::FontStyles, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_fontStyle
void TMPro::TMP_Text::set_fontStyle(TMPro::FontStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_fontStyle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_fontStyle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_isUsingBold
bool TMPro::TMP_Text::get_isUsingBold() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_isUsingBold");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isUsingBold", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_alignment
TMPro::TextAlignmentOptions TMPro::TMP_Text::get_alignment() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_alignment");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_alignment", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TextAlignmentOptions, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_alignment
void TMPro::TMP_Text::set_alignment(TMPro::TextAlignmentOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_alignment");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_alignment", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_characterSpacing
float TMPro::TMP_Text::get_characterSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_characterSpacing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_characterSpacing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_characterSpacing
void TMPro::TMP_Text::set_characterSpacing(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_characterSpacing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_characterSpacing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_wordSpacing
float TMPro::TMP_Text::get_wordSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_wordSpacing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_wordSpacing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_wordSpacing
void TMPro::TMP_Text::set_wordSpacing(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_wordSpacing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_wordSpacing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_lineSpacing
float TMPro::TMP_Text::get_lineSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_lineSpacing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_lineSpacing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_lineSpacing
void TMPro::TMP_Text::set_lineSpacing(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_lineSpacing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_lineSpacing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_lineSpacingAdjustment
float TMPro::TMP_Text::get_lineSpacingAdjustment() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_lineSpacingAdjustment");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_lineSpacingAdjustment", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_lineSpacingAdjustment
void TMPro::TMP_Text::set_lineSpacingAdjustment(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_lineSpacingAdjustment");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_lineSpacingAdjustment", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_paragraphSpacing
float TMPro::TMP_Text::get_paragraphSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_paragraphSpacing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_paragraphSpacing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_paragraphSpacing
void TMPro::TMP_Text::set_paragraphSpacing(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_paragraphSpacing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_paragraphSpacing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_characterWidthAdjustment
float TMPro::TMP_Text::get_characterWidthAdjustment() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_characterWidthAdjustment");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_characterWidthAdjustment", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_characterWidthAdjustment
void TMPro::TMP_Text::set_characterWidthAdjustment(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_characterWidthAdjustment");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_characterWidthAdjustment", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_enableWordWrapping
bool TMPro::TMP_Text::get_enableWordWrapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_enableWordWrapping");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_enableWordWrapping", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_enableWordWrapping
void TMPro::TMP_Text::set_enableWordWrapping(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_enableWordWrapping");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_enableWordWrapping", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_wordWrappingRatios
float TMPro::TMP_Text::get_wordWrappingRatios() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_wordWrappingRatios");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_wordWrappingRatios", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_wordWrappingRatios
void TMPro::TMP_Text::set_wordWrappingRatios(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_wordWrappingRatios");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_wordWrappingRatios", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_overflowMode
TMPro::TextOverflowModes TMPro::TMP_Text::get_overflowMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_overflowMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_overflowMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TextOverflowModes, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_overflowMode
void TMPro::TMP_Text::set_overflowMode(TMPro::TextOverflowModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_overflowMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_overflowMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_isTextOverflowing
bool TMPro::TMP_Text::get_isTextOverflowing() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_isTextOverflowing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isTextOverflowing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_firstOverflowCharacterIndex
int TMPro::TMP_Text::get_firstOverflowCharacterIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_firstOverflowCharacterIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_firstOverflowCharacterIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_linkedTextComponent
TMPro::TMP_Text* TMPro::TMP_Text::get_linkedTextComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_linkedTextComponent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_linkedTextComponent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_Text*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_linkedTextComponent
void TMPro::TMP_Text::set_linkedTextComponent(TMPro::TMP_Text* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_linkedTextComponent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_linkedTextComponent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_isLinkedTextComponent
bool TMPro::TMP_Text::get_isLinkedTextComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_isLinkedTextComponent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isLinkedTextComponent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_isLinkedTextComponent
void TMPro::TMP_Text::set_isLinkedTextComponent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_isLinkedTextComponent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_isLinkedTextComponent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_isTextTruncated
bool TMPro::TMP_Text::get_isTextTruncated() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_isTextTruncated");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isTextTruncated", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_enableKerning
bool TMPro::TMP_Text::get_enableKerning() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_enableKerning");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_enableKerning", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_enableKerning
void TMPro::TMP_Text::set_enableKerning(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_enableKerning");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_enableKerning", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_extraPadding
bool TMPro::TMP_Text::get_extraPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_extraPadding");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_extraPadding", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_extraPadding
void TMPro::TMP_Text::set_extraPadding(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_extraPadding");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_extraPadding", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_richText
bool TMPro::TMP_Text::get_richText() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_richText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_richText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_richText
void TMPro::TMP_Text::set_richText(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_richText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_richText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_parseCtrlCharacters
bool TMPro::TMP_Text::get_parseCtrlCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_parseCtrlCharacters");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_parseCtrlCharacters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_parseCtrlCharacters
void TMPro::TMP_Text::set_parseCtrlCharacters(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_parseCtrlCharacters");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_parseCtrlCharacters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_isOverlay
bool TMPro::TMP_Text::get_isOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_isOverlay");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isOverlay", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_isOverlay
void TMPro::TMP_Text::set_isOverlay(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_isOverlay");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_isOverlay", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_isOrthographic
bool TMPro::TMP_Text::get_isOrthographic() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_isOrthographic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isOrthographic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_isOrthographic
void TMPro::TMP_Text::set_isOrthographic(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_isOrthographic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_isOrthographic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_enableCulling
bool TMPro::TMP_Text::get_enableCulling() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_enableCulling");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_enableCulling", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_enableCulling
void TMPro::TMP_Text::set_enableCulling(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_enableCulling");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_enableCulling", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_ignoreRectMaskCulling
bool TMPro::TMP_Text::get_ignoreRectMaskCulling() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_ignoreRectMaskCulling");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ignoreRectMaskCulling", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_ignoreRectMaskCulling
void TMPro::TMP_Text::set_ignoreRectMaskCulling(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_ignoreRectMaskCulling");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_ignoreRectMaskCulling", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_ignoreVisibility
bool TMPro::TMP_Text::get_ignoreVisibility() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_ignoreVisibility");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ignoreVisibility", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_ignoreVisibility
void TMPro::TMP_Text::set_ignoreVisibility(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_ignoreVisibility");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_ignoreVisibility", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_horizontalMapping
TMPro::TextureMappingOptions TMPro::TMP_Text::get_horizontalMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_horizontalMapping");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_horizontalMapping", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TextureMappingOptions, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_horizontalMapping
void TMPro::TMP_Text::set_horizontalMapping(TMPro::TextureMappingOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_horizontalMapping");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_horizontalMapping", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_verticalMapping
TMPro::TextureMappingOptions TMPro::TMP_Text::get_verticalMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_verticalMapping");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_verticalMapping", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TextureMappingOptions, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_verticalMapping
void TMPro::TMP_Text::set_verticalMapping(TMPro::TextureMappingOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_verticalMapping");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_verticalMapping", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_mappingUvLineOffset
float TMPro::TMP_Text::get_mappingUvLineOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_mappingUvLineOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_mappingUvLineOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_mappingUvLineOffset
void TMPro::TMP_Text::set_mappingUvLineOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_mappingUvLineOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_mappingUvLineOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_renderMode
TMPro::TextRenderFlags TMPro::TMP_Text::get_renderMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_renderMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_renderMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TextRenderFlags, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_renderMode
void TMPro::TMP_Text::set_renderMode(TMPro::TextRenderFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_renderMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_renderMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_geometrySortingOrder
TMPro::VertexSortingOrder TMPro::TMP_Text::get_geometrySortingOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_geometrySortingOrder");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_geometrySortingOrder", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<TMPro::VertexSortingOrder, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_geometrySortingOrder
void TMPro::TMP_Text::set_geometrySortingOrder(TMPro::VertexSortingOrder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_geometrySortingOrder");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_geometrySortingOrder", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_vertexBufferAutoSizeReduction
bool TMPro::TMP_Text::get_vertexBufferAutoSizeReduction() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_vertexBufferAutoSizeReduction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_vertexBufferAutoSizeReduction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_vertexBufferAutoSizeReduction
void TMPro::TMP_Text::set_vertexBufferAutoSizeReduction(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_vertexBufferAutoSizeReduction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_vertexBufferAutoSizeReduction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_firstVisibleCharacter
int TMPro::TMP_Text::get_firstVisibleCharacter() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_firstVisibleCharacter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_firstVisibleCharacter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_firstVisibleCharacter
void TMPro::TMP_Text::set_firstVisibleCharacter(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_firstVisibleCharacter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_firstVisibleCharacter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_maxVisibleCharacters
int TMPro::TMP_Text::get_maxVisibleCharacters() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_maxVisibleCharacters");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_maxVisibleCharacters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_maxVisibleCharacters
void TMPro::TMP_Text::set_maxVisibleCharacters(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_maxVisibleCharacters");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_maxVisibleCharacters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_maxVisibleWords
int TMPro::TMP_Text::get_maxVisibleWords() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_maxVisibleWords");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_maxVisibleWords", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_maxVisibleWords
void TMPro::TMP_Text::set_maxVisibleWords(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_maxVisibleWords");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_maxVisibleWords", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_maxVisibleLines
int TMPro::TMP_Text::get_maxVisibleLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_maxVisibleLines");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_maxVisibleLines", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_maxVisibleLines
void TMPro::TMP_Text::set_maxVisibleLines(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_maxVisibleLines");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_maxVisibleLines", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_useMaxVisibleDescender
bool TMPro::TMP_Text::get_useMaxVisibleDescender() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_useMaxVisibleDescender");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_useMaxVisibleDescender", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_useMaxVisibleDescender
void TMPro::TMP_Text::set_useMaxVisibleDescender(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_useMaxVisibleDescender");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_useMaxVisibleDescender", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_pageToDisplay
int TMPro::TMP_Text::get_pageToDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_pageToDisplay");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_pageToDisplay", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_pageToDisplay
void TMPro::TMP_Text::set_pageToDisplay(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_pageToDisplay");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_pageToDisplay", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_margin
UnityEngine::Vector4 TMPro::TMP_Text::get_margin_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_margin_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_margin", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector4, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_margin
void TMPro::TMP_Text::set_margin_NEW(UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_margin_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_margin", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_textInfo
TMPro::TMP_TextInfo* TMPro::TMP_Text::get_textInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_textInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_textInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_TextInfo*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_havePropertiesChanged
bool TMPro::TMP_Text::get_havePropertiesChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_havePropertiesChanged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_havePropertiesChanged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_havePropertiesChanged
void TMPro::TMP_Text::set_havePropertiesChanged(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_havePropertiesChanged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_havePropertiesChanged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_isUsingLegacyAnimationComponent
bool TMPro::TMP_Text::get_isUsingLegacyAnimationComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_isUsingLegacyAnimationComponent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isUsingLegacyAnimationComponent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_isUsingLegacyAnimationComponent
void TMPro::TMP_Text::set_isUsingLegacyAnimationComponent(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_isUsingLegacyAnimationComponent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_isUsingLegacyAnimationComponent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_autoSizeTextContainer
bool TMPro::TMP_Text::get_autoSizeTextContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_autoSizeTextContainer_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_autoSizeTextContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_autoSizeTextContainer
void TMPro::TMP_Text::set_autoSizeTextContainer(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_autoSizeTextContainer_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_autoSizeTextContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_mesh
UnityEngine::Mesh* TMPro::TMP_Text::get_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_mesh_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_mesh", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_isVolumetricText
bool TMPro::TMP_Text::get_isVolumetricText() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_isVolumetricText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isVolumetricText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_isVolumetricText
void TMPro::TMP_Text::set_isVolumetricText(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_isVolumetricText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_isVolumetricText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_bounds
UnityEngine::Bounds TMPro::TMP_Text::get_bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_bounds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_bounds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_textBounds
UnityEngine::Bounds TMPro::TMP_Text::get_textBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_textBounds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_textBounds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_spriteAnimator
TMPro::TMP_SpriteAnimator* TMPro::TMP_Text::get_spriteAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_spriteAnimator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_spriteAnimator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_SpriteAnimator*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_flexibleHeight
float TMPro::TMP_Text::get_flexibleHeight_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_flexibleHeight_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_flexibleHeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_flexibleWidth
float TMPro::TMP_Text::get_flexibleWidth_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_flexibleWidth_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_flexibleWidth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_minWidth
float TMPro::TMP_Text::get_minWidth_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_minWidth_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_minWidth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_minHeight
float TMPro::TMP_Text::get_minHeight_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_minHeight_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_minHeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_maxWidth
float TMPro::TMP_Text::get_maxWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_maxWidth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_maxWidth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_maxHeight
float TMPro::TMP_Text::get_maxHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_maxHeight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_maxHeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_layoutElement
UnityEngine::UI::LayoutElement* TMPro::TMP_Text::get_layoutElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_layoutElement");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_layoutElement", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::LayoutElement*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_preferredWidth
float TMPro::TMP_Text::get_preferredWidth_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_preferredWidth_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_preferredWidth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_preferredHeight
float TMPro::TMP_Text::get_preferredHeight_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_preferredHeight_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_preferredHeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_renderedWidth
float TMPro::TMP_Text::get_renderedWidth_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_renderedWidth_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_renderedWidth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_renderedHeight
float TMPro::TMP_Text::get_renderedHeight_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_renderedHeight_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_renderedHeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_layoutPriority
int TMPro::TMP_Text::get_layoutPriority_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_layoutPriority_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_layoutPriority", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.LoadFontAsset
void TMPro::TMP_Text::LoadFontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::LoadFontAsset_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LoadFontAsset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.SetSharedMaterial
void TMPro::TMP_Text::SetSharedMaterial(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetSharedMaterial_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetSharedMaterial", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mat)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TMP_Text.GetMaterial
UnityEngine::Material* TMPro::TMP_Text::GetMaterial(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetMaterial_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMaterial", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mat)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TMP_Text.SetFontBaseMaterial
void TMPro::TMP_Text::SetFontBaseMaterial_NEW(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetFontBaseMaterial_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetFontBaseMaterial", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mat)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TMP_Text.GetSharedMaterials
::Array<UnityEngine::Material*>* TMPro::TMP_Text::GetSharedMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetSharedMaterials_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSharedMaterials", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Material*>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.SetSharedMaterials
void TMPro::TMP_Text::SetSharedMaterials(::Array<UnityEngine::Material*>* materials) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetSharedMaterials_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetSharedMaterials", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(materials)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, materials);
}
// Autogenerated method: TMPro.TMP_Text.GetMaterials
::Array<UnityEngine::Material*>* TMPro::TMP_Text::GetMaterials(::Array<UnityEngine::Material*>* mats) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetMaterials_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMaterials", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mats)));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Material*>*, false>(this, ___internal__method, mats);
}
// Autogenerated method: TMPro.TMP_Text.CreateMaterialInstance
UnityEngine::Material* TMPro::TMP_Text::CreateMaterialInstance_NEW(UnityEngine::Material* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::CreateMaterialInstance_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateMaterialInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(source)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method, source);
}
// Autogenerated method: TMPro.TMP_Text.SetVertexColorGradient
void TMPro::TMP_Text::SetVertexColorGradient(TMPro::TMP_ColorGradient* gradient) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetVertexColorGradient");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetVertexColorGradient", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(gradient)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, gradient);
}
// Autogenerated method: TMPro.TMP_Text.SetTextSortingOrder
void TMPro::TMP_Text::SetTextSortingOrder(TMPro::VertexSortingOrder order) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetTextSortingOrder");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetTextSortingOrder", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(order)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, order);
}
// Autogenerated method: TMPro.TMP_Text.SetTextSortingOrder
void TMPro::TMP_Text::SetTextSortingOrder(::Array<int>* order) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetTextSortingOrder");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetTextSortingOrder", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(order)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, order);
}
// Autogenerated method: TMPro.TMP_Text.SetFaceColor
void TMPro::TMP_Text::SetFaceColor(UnityEngine::Color32 color) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetFaceColor_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetFaceColor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(color)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: TMPro.TMP_Text.SetOutlineColor
void TMPro::TMP_Text::SetOutlineColor(UnityEngine::Color32 color) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetOutlineColor_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetOutlineColor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(color)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: TMPro.TMP_Text.SetOutlineThickness
void TMPro::TMP_Text::SetOutlineThickness(float thickness) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetOutlineThickness_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetOutlineThickness", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(thickness)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, thickness);
}
// Autogenerated method: TMPro.TMP_Text.SetShaderDepth
void TMPro::TMP_Text::SetShaderDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetShaderDepth_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetShaderDepth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.SetCulling
void TMPro::TMP_Text::SetCulling() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetCulling_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetCulling", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetPaddingForMaterial
float TMPro::TMP_Text::GetPaddingForMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetPaddingForMaterial_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPaddingForMaterial", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetPaddingForMaterial
float TMPro::TMP_Text::GetPaddingForMaterial(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetPaddingForMaterial_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPaddingForMaterial", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mat)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TMP_Text.GetTextContainerLocalCorners
::Array<UnityEngine::Vector3>* TMPro::TMP_Text::GetTextContainerLocalCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetTextContainerLocalCorners_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTextContainerLocalCorners", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector3>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.ForceMeshUpdate
void TMPro::TMP_Text::ForceMeshUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ForceMeshUpdate_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ForceMeshUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.ForceMeshUpdate
void TMPro::TMP_Text::ForceMeshUpdate(bool ignoreActiveState) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ForceMeshUpdate_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ForceMeshUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ignoreActiveState)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ignoreActiveState);
}
// Autogenerated method: TMPro.TMP_Text.SetTextInternal
void TMPro::TMP_Text::SetTextInternal(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetTextInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetTextInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: TMPro.TMP_Text.UpdateGeometry
void TMPro::TMP_Text::UpdateGeometry(UnityEngine::Mesh* mesh, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::UpdateGeometry_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateGeometry", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mesh, index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, mesh, index);
}
// Autogenerated method: TMPro.TMP_Text.UpdateVertexData
void TMPro::TMP_Text::UpdateVertexData(TMPro::TMP_VertexDataUpdateFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::UpdateVertexData_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateVertexData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(flags)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, flags);
}
// Autogenerated method: TMPro.TMP_Text.UpdateVertexData
void TMPro::TMP_Text::UpdateVertexData() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::UpdateVertexData_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateVertexData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.SetVertices
void TMPro::TMP_Text::SetVertices_NEW(::Array<UnityEngine::Vector3>* vertices) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetVertices_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetVertices", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(vertices)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, vertices);
}
// Autogenerated method: TMPro.TMP_Text.UpdateMeshPadding
void TMPro::TMP_Text::UpdateMeshPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::UpdateMeshPadding_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateMeshPadding", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.InternalCrossFadeColor
void TMPro::TMP_Text::InternalCrossFadeColor(UnityEngine::Color targetColor, float duration, bool ignoreTimeScale, bool useAlpha) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::InternalCrossFadeColor_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalCrossFadeColor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(targetColor, duration, ignoreTimeScale, useAlpha)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, targetColor, duration, ignoreTimeScale, useAlpha);
}
// Autogenerated method: TMPro.TMP_Text.InternalCrossFadeAlpha
void TMPro::TMP_Text::InternalCrossFadeAlpha(float alpha, float duration, bool ignoreTimeScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::InternalCrossFadeAlpha_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalCrossFadeAlpha", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(alpha, duration, ignoreTimeScale)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, alpha, duration, ignoreTimeScale);
}
// Autogenerated method: TMPro.TMP_Text.ParseInputText
void TMPro::TMP_Text::ParseInputText() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ParseInputText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ParseInputText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.SetText
void TMPro::TMP_Text::SetText(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: TMPro.TMP_Text.SetText
void TMPro::TMP_Text::SetText(::Il2CppString* text, bool syncTextInputBox) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, syncTextInputBox)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text, syncTextInputBox);
}
// Autogenerated method: TMPro.TMP_Text.SetText
void TMPro::TMP_Text::SetText(::Il2CppString* text, float arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, arg0)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text, arg0);
}
// Autogenerated method: TMPro.TMP_Text.SetText
void TMPro::TMP_Text::SetText(::Il2CppString* text, float arg0, float arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, arg0, arg1)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text, arg0, arg1);
}
// Autogenerated method: TMPro.TMP_Text.SetText
void TMPro::TMP_Text::SetText(::Il2CppString* text, float arg0, float arg1, float arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, arg0, arg1, arg2)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text, arg0, arg1, arg2);
}
// Autogenerated method: TMPro.TMP_Text.SetText
void TMPro::TMP_Text::SetText(System::Text::StringBuilder* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: TMPro.TMP_Text.SetCharArray
void TMPro::TMP_Text::SetCharArray(::Array<::Il2CppChar>* sourceText) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetCharArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetCharArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sourceText)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sourceText);
}
// Autogenerated method: TMPro.TMP_Text.SetCharArray
void TMPro::TMP_Text::SetCharArray(::Array<::Il2CppChar>* sourceText, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetCharArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetCharArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sourceText, start, length)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sourceText, start, length);
}
// Autogenerated method: TMPro.TMP_Text.SetCharArray
void TMPro::TMP_Text::SetCharArray(::Array<int>* sourceText, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetCharArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetCharArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sourceText, start, length)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sourceText, start, length);
}
// Autogenerated method: TMPro.TMP_Text.SetTextArrayToCharArray
void TMPro::TMP_Text::SetTextArrayToCharArray(::Array<::Il2CppChar>* sourceText, ::Array<TMPro::TMP_Text::UnicodeChar>*& charBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetTextArrayToCharArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetTextArrayToCharArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sourceText, charBuffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sourceText, charBuffer);
}
// Autogenerated method: TMPro.TMP_Text.StringToCharArray
void TMPro::TMP_Text::StringToCharArray(::Il2CppString* sourceText, ::Array<TMPro::TMP_Text::UnicodeChar>*& charBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::StringToCharArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StringToCharArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sourceText, charBuffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sourceText, charBuffer);
}
// Autogenerated method: TMPro.TMP_Text.StringBuilderToIntArray
void TMPro::TMP_Text::StringBuilderToIntArray(System::Text::StringBuilder* sourceText, ::Array<TMPro::TMP_Text::UnicodeChar>*& charBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::StringBuilderToIntArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StringBuilderToIntArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sourceText, charBuffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sourceText, charBuffer);
}
// Autogenerated method: TMPro.TMP_Text.ReplaceOpeningStyleTag
bool TMPro::TMP_Text::ReplaceOpeningStyleTag(::Il2CppString*& sourceText, int srcIndex, int& srcOffset, ::Array<TMPro::TMP_Text::UnicodeChar>*& charBuffer, int& writeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ReplaceOpeningStyleTag");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReplaceOpeningStyleTag", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sourceText, srcIndex, srcOffset, charBuffer, writeIndex)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sourceText, srcIndex, srcOffset, charBuffer, writeIndex);
}
// Autogenerated method: TMPro.TMP_Text.ReplaceOpeningStyleTag
bool TMPro::TMP_Text::ReplaceOpeningStyleTag(::Array<int>*& sourceText, int srcIndex, int& srcOffset, ::Array<TMPro::TMP_Text::UnicodeChar>*& charBuffer, int& writeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ReplaceOpeningStyleTag");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReplaceOpeningStyleTag", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sourceText, srcIndex, srcOffset, charBuffer, writeIndex)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sourceText, srcIndex, srcOffset, charBuffer, writeIndex);
}
// Autogenerated method: TMPro.TMP_Text.ReplaceOpeningStyleTag
bool TMPro::TMP_Text::ReplaceOpeningStyleTag(::Array<::Il2CppChar>*& sourceText, int srcIndex, int& srcOffset, ::Array<TMPro::TMP_Text::UnicodeChar>*& charBuffer, int& writeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ReplaceOpeningStyleTag");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReplaceOpeningStyleTag", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sourceText, srcIndex, srcOffset, charBuffer, writeIndex)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sourceText, srcIndex, srcOffset, charBuffer, writeIndex);
}
// Autogenerated method: TMPro.TMP_Text.ReplaceOpeningStyleTag
bool TMPro::TMP_Text::ReplaceOpeningStyleTag(System::Text::StringBuilder*& sourceText, int srcIndex, int& srcOffset, ::Array<TMPro::TMP_Text::UnicodeChar>*& charBuffer, int& writeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ReplaceOpeningStyleTag");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReplaceOpeningStyleTag", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sourceText, srcIndex, srcOffset, charBuffer, writeIndex)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sourceText, srcIndex, srcOffset, charBuffer, writeIndex);
}
// Autogenerated method: TMPro.TMP_Text.ReplaceClosingStyleTag
bool TMPro::TMP_Text::ReplaceClosingStyleTag(::Il2CppString*& sourceText, int srcIndex, ::Array<TMPro::TMP_Text::UnicodeChar>*& charBuffer, int& writeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ReplaceClosingStyleTag");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReplaceClosingStyleTag", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sourceText, srcIndex, charBuffer, writeIndex)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sourceText, srcIndex, charBuffer, writeIndex);
}
// Autogenerated method: TMPro.TMP_Text.ReplaceClosingStyleTag
bool TMPro::TMP_Text::ReplaceClosingStyleTag(::Array<int>*& sourceText, int srcIndex, ::Array<TMPro::TMP_Text::UnicodeChar>*& charBuffer, int& writeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ReplaceClosingStyleTag");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReplaceClosingStyleTag", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sourceText, srcIndex, charBuffer, writeIndex)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sourceText, srcIndex, charBuffer, writeIndex);
}
// Autogenerated method: TMPro.TMP_Text.ReplaceClosingStyleTag
bool TMPro::TMP_Text::ReplaceClosingStyleTag(::Array<::Il2CppChar>*& sourceText, int srcIndex, ::Array<TMPro::TMP_Text::UnicodeChar>*& charBuffer, int& writeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ReplaceClosingStyleTag");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReplaceClosingStyleTag", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sourceText, srcIndex, charBuffer, writeIndex)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sourceText, srcIndex, charBuffer, writeIndex);
}
// Autogenerated method: TMPro.TMP_Text.ReplaceClosingStyleTag
bool TMPro::TMP_Text::ReplaceClosingStyleTag(System::Text::StringBuilder*& sourceText, int srcIndex, ::Array<TMPro::TMP_Text::UnicodeChar>*& charBuffer, int& writeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ReplaceClosingStyleTag");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReplaceClosingStyleTag", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sourceText, srcIndex, charBuffer, writeIndex)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sourceText, srcIndex, charBuffer, writeIndex);
}
// Autogenerated method: TMPro.TMP_Text.IsTagName
bool TMPro::TMP_Text::IsTagName(::Il2CppString*& text, ::Il2CppString* tag, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::IsTagName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsTagName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, tag, index)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, text, tag, index);
}
// Autogenerated method: TMPro.TMP_Text.IsTagName
bool TMPro::TMP_Text::IsTagName(::Array<::Il2CppChar>*& text, ::Il2CppString* tag, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::IsTagName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsTagName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, tag, index)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, text, tag, index);
}
// Autogenerated method: TMPro.TMP_Text.IsTagName
bool TMPro::TMP_Text::IsTagName(::Array<int>*& text, ::Il2CppString* tag, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::IsTagName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsTagName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, tag, index)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, text, tag, index);
}
// Autogenerated method: TMPro.TMP_Text.IsTagName
bool TMPro::TMP_Text::IsTagName(System::Text::StringBuilder*& text, ::Il2CppString* tag, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::IsTagName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsTagName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, tag, index)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, text, tag, index);
}
// Autogenerated method: TMPro.TMP_Text.GetTagHashCode
int TMPro::TMP_Text::GetTagHashCode(::Il2CppString*& text, int index, int& closeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetTagHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTagHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, index, closeIndex)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, text, index, closeIndex);
}
// Autogenerated method: TMPro.TMP_Text.GetTagHashCode
int TMPro::TMP_Text::GetTagHashCode(::Array<::Il2CppChar>*& text, int index, int& closeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetTagHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTagHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, index, closeIndex)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, text, index, closeIndex);
}
// Autogenerated method: TMPro.TMP_Text.GetTagHashCode
int TMPro::TMP_Text::GetTagHashCode(::Array<int>*& text, int index, int& closeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetTagHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTagHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, index, closeIndex)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, text, index, closeIndex);
}
// Autogenerated method: TMPro.TMP_Text.GetTagHashCode
int TMPro::TMP_Text::GetTagHashCode(System::Text::StringBuilder*& text, int index, int& closeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetTagHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTagHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, index, closeIndex)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, text, index, closeIndex);
}
// Autogenerated method: TMPro.TMP_Text.AddFloatToCharArray
void TMPro::TMP_Text::AddFloatToCharArray(double number, int& index, int precision) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::AddFloatToCharArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddFloatToCharArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(number, index, precision)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, number, index, precision);
}
// Autogenerated method: TMPro.TMP_Text.AddIntToCharArray
void TMPro::TMP_Text::AddIntToCharArray(double number, int& index, int precision) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::AddIntToCharArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddIntToCharArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(number, index, precision)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, number, index, precision);
}
// Autogenerated method: TMPro.TMP_Text.SetArraySizes
int TMPro::TMP_Text::SetArraySizes(::Array<TMPro::TMP_Text::UnicodeChar>* chars) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetArraySizes_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetArraySizes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(chars)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars);
}
// Autogenerated method: TMPro.TMP_Text.GenerateTextMesh
void TMPro::TMP_Text::GenerateTextMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GenerateTextMesh_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GenerateTextMesh", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetPreferredValues
UnityEngine::Vector2 TMPro::TMP_Text::GetPreferredValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetPreferredValues");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPreferredValues", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetPreferredValues
UnityEngine::Vector2 TMPro::TMP_Text::GetPreferredValues(float width, float height) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetPreferredValues");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPreferredValues", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(width, height)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method, width, height);
}
// Autogenerated method: TMPro.TMP_Text.GetPreferredValues
UnityEngine::Vector2 TMPro::TMP_Text::GetPreferredValues(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetPreferredValues");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPreferredValues", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method, text);
}
// Autogenerated method: TMPro.TMP_Text.GetPreferredValues
UnityEngine::Vector2 TMPro::TMP_Text::GetPreferredValues(::Il2CppString* text, float width, float height) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetPreferredValues");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPreferredValues", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, width, height)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method, text, width, height);
}
// Autogenerated method: TMPro.TMP_Text.GetPreferredWidth
float TMPro::TMP_Text::GetPreferredWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetPreferredWidth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPreferredWidth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetPreferredWidth
float TMPro::TMP_Text::GetPreferredWidth(UnityEngine::Vector2 margin) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetPreferredWidth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPreferredWidth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(margin)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, margin);
}
// Autogenerated method: TMPro.TMP_Text.GetPreferredHeight
float TMPro::TMP_Text::GetPreferredHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetPreferredHeight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPreferredHeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetPreferredHeight
float TMPro::TMP_Text::GetPreferredHeight(UnityEngine::Vector2 margin) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetPreferredHeight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPreferredHeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(margin)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, margin);
}
// Autogenerated method: TMPro.TMP_Text.GetRenderedValues
UnityEngine::Vector2 TMPro::TMP_Text::GetRenderedValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetRenderedValues");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRenderedValues", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetRenderedValues
UnityEngine::Vector2 TMPro::TMP_Text::GetRenderedValues(bool onlyVisibleCharacters) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetRenderedValues");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRenderedValues", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(onlyVisibleCharacters)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method, onlyVisibleCharacters);
}
// Autogenerated method: TMPro.TMP_Text.GetRenderedWidth
float TMPro::TMP_Text::GetRenderedWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetRenderedWidth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRenderedWidth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetRenderedWidth
float TMPro::TMP_Text::GetRenderedWidth(bool onlyVisibleCharacters) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetRenderedWidth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRenderedWidth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(onlyVisibleCharacters)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, onlyVisibleCharacters);
}
// Autogenerated method: TMPro.TMP_Text.GetRenderedHeight
float TMPro::TMP_Text::GetRenderedHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetRenderedHeight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRenderedHeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetRenderedHeight
float TMPro::TMP_Text::GetRenderedHeight(bool onlyVisibleCharacters) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetRenderedHeight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRenderedHeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(onlyVisibleCharacters)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, onlyVisibleCharacters);
}
// Autogenerated method: TMPro.TMP_Text.CalculatePreferredValues
UnityEngine::Vector2 TMPro::TMP_Text::CalculatePreferredValues_NEW(float defaultFontSize, UnityEngine::Vector2 marginSize, bool ignoreTextAutoSizing) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::CalculatePreferredValues_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CalculatePreferredValues", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(defaultFontSize, marginSize, ignoreTextAutoSizing)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method, defaultFontSize, marginSize, ignoreTextAutoSizing);
}
// Autogenerated method: TMPro.TMP_Text.GetCompoundBounds
UnityEngine::Bounds TMPro::TMP_Text::GetCompoundBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetCompoundBounds_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCompoundBounds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetTextBounds
UnityEngine::Bounds TMPro::TMP_Text::GetTextBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetTextBounds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTextBounds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetTextBounds
UnityEngine::Bounds TMPro::TMP_Text::GetTextBounds(bool onlyVisibleCharacters) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetTextBounds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTextBounds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(onlyVisibleCharacters)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Bounds, false>(this, ___internal__method, onlyVisibleCharacters);
}
// Autogenerated method: TMPro.TMP_Text.AdjustLineOffset
void TMPro::TMP_Text::AdjustLineOffset(int startIndex, int endIndex, float offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::AdjustLineOffset_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AdjustLineOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(startIndex, endIndex, offset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, startIndex, endIndex, offset);
}
// Autogenerated method: TMPro.TMP_Text.ResizeLineExtents
void TMPro::TMP_Text::ResizeLineExtents(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ResizeLineExtents");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResizeLineExtents", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(size)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: TMPro.TMP_Text.GetTextInfo
TMPro::TMP_TextInfo* TMPro::TMP_Text::GetTextInfo(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetTextInfo_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTextInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text)));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_TextInfo*, false>(this, ___internal__method, text);
}
// Autogenerated method: TMPro.TMP_Text.ComputeMarginSize
void TMPro::TMP_Text::ComputeMarginSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ComputeMarginSize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ComputeMarginSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.SaveWordWrappingState
void TMPro::TMP_Text::SaveWordWrappingState(TMPro::WordWrapState& state, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SaveWordWrappingState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SaveWordWrappingState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state, index, count)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state, index, count);
}
// Autogenerated method: TMPro.TMP_Text.RestoreWordWrappingState
int TMPro::TMP_Text::RestoreWordWrappingState(TMPro::WordWrapState& state) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::RestoreWordWrappingState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RestoreWordWrappingState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, state);
}
// Autogenerated method: TMPro.TMP_Text.SaveGlyphVertexInfo
void TMPro::TMP_Text::SaveGlyphVertexInfo_NEW(float padding, float style_padding, UnityEngine::Color32 vertexColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SaveGlyphVertexInfo_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SaveGlyphVertexInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(padding, style_padding, vertexColor)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, padding, style_padding, vertexColor);
}
// Autogenerated method: TMPro.TMP_Text.SaveSpriteVertexInfo
void TMPro::TMP_Text::SaveSpriteVertexInfo_NEW(UnityEngine::Color32 vertexColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SaveSpriteVertexInfo_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SaveSpriteVertexInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(vertexColor)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, vertexColor);
}
// Autogenerated method: TMPro.TMP_Text.FillCharacterVertexBuffers
void TMPro::TMP_Text::FillCharacterVertexBuffers_NEW(int i, int index_X4) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::FillCharacterVertexBuffers_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FillCharacterVertexBuffers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i, index_X4)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, i, index_X4);
}
// Autogenerated method: TMPro.TMP_Text.FillCharacterVertexBuffers
void TMPro::TMP_Text::FillCharacterVertexBuffers_NEW(int i, int index_X4, bool isVolumetric) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::FillCharacterVertexBuffers_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FillCharacterVertexBuffers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i, index_X4, isVolumetric)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, i, index_X4, isVolumetric);
}
// Autogenerated method: TMPro.TMP_Text.FillSpriteVertexBuffers
void TMPro::TMP_Text::FillSpriteVertexBuffers_NEW(int i, int index_X4) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::FillSpriteVertexBuffers_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FillSpriteVertexBuffers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i, index_X4)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, i, index_X4);
}
// Autogenerated method: TMPro.TMP_Text.DrawUnderlineMesh
void TMPro::TMP_Text::DrawUnderlineMesh_NEW(UnityEngine::Vector3 start, UnityEngine::Vector3 end, int& index, float startScale, float endScale, float maxScale, float sdfScale, UnityEngine::Color32 underlineColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::DrawUnderlineMesh_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DrawUnderlineMesh", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(start, end, index, startScale, endScale, maxScale, sdfScale, underlineColor)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, start, end, index, startScale, endScale, maxScale, sdfScale, underlineColor);
}
// Autogenerated method: TMPro.TMP_Text.DrawTextHighlight
void TMPro::TMP_Text::DrawTextHighlight_NEW(UnityEngine::Vector3 start, UnityEngine::Vector3 end, int& index, UnityEngine::Color32 highlightColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::DrawTextHighlight_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DrawTextHighlight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(start, end, index, highlightColor)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, start, end, index, highlightColor);
}
// Autogenerated method: TMPro.TMP_Text.LoadDefaultSettings
void TMPro::TMP_Text::LoadDefaultSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::LoadDefaultSettings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LoadDefaultSettings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.GetSpecialCharacters
void TMPro::TMP_Text::GetSpecialCharacters(TMPro::TMP_FontAsset* fontAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetSpecialCharacters");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSpecialCharacters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(fontAsset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, fontAsset);
}
// Autogenerated method: TMPro.TMP_Text.ReplaceTagWithCharacter
void TMPro::TMP_Text::ReplaceTagWithCharacter(::Array<int>* chars, int insertionIndex, int tagLength, ::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ReplaceTagWithCharacter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReplaceTagWithCharacter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(chars, insertionIndex, tagLength, c)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, chars, insertionIndex, tagLength, c);
}
// Autogenerated method: TMPro.TMP_Text.GetFontAssetForWeight
TMPro::TMP_FontAsset* TMPro::TMP_Text::GetFontAssetForWeight(int fontWeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetFontAssetForWeight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetFontAssetForWeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(fontWeight)));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_FontAsset*, false>(this, ___internal__method, fontWeight);
}
// Autogenerated method: TMPro.TMP_Text.SetActiveSubMeshes
void TMPro::TMP_Text::SetActiveSubMeshes(bool state) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::SetActiveSubMeshes_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetActiveSubMeshes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: TMPro.TMP_Text.ClearSubMeshObjects
void TMPro::TMP_Text::ClearSubMeshObjects_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ClearSubMeshObjects_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearSubMeshObjects", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.ClearMesh
void TMPro::TMP_Text::ClearMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ClearMesh_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearMesh", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.ClearMesh
void TMPro::TMP_Text::ClearMesh_NEW(bool uploadGeometry) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ClearMesh_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearMesh", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uploadGeometry)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, uploadGeometry);
}
// Autogenerated method: TMPro.TMP_Text.GetParsedText
::Il2CppString* TMPro::TMP_Text::GetParsedText_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetParsedText_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetParsedText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.PackUV
UnityEngine::Vector2 TMPro::TMP_Text::PackUV(float x, float y, float scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::PackUV");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PackUV", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y, scale)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method, x, y, scale);
}
// Autogenerated method: TMPro.TMP_Text.PackUV
float TMPro::TMP_Text::PackUV(float x, float y) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::PackUV");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PackUV", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, x, y);
}
// Autogenerated method: TMPro.TMP_Text.InternalUpdate
void TMPro::TMP_Text::InternalUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::InternalUpdate_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.HexToInt
int TMPro::TMP_Text::HexToInt(::Il2CppChar hex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::HexToInt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HexToInt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hex)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, hex);
}
// Autogenerated method: TMPro.TMP_Text.GetUTF16
int TMPro::TMP_Text::GetUTF16(::Il2CppString* text, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetUTF16");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetUTF16", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, i)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, text, i);
}
// Autogenerated method: TMPro.TMP_Text.GetUTF16
int TMPro::TMP_Text::GetUTF16(System::Text::StringBuilder* text, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetUTF16");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetUTF16", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, i)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, text, i);
}
// Autogenerated method: TMPro.TMP_Text.GetUTF32
int TMPro::TMP_Text::GetUTF32(::Il2CppString* text, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetUTF32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetUTF32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, i)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, text, i);
}
// Autogenerated method: TMPro.TMP_Text.GetUTF32
int TMPro::TMP_Text::GetUTF32(System::Text::StringBuilder* text, int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetUTF32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetUTF32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, i)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, text, i);
}
// Autogenerated method: TMPro.TMP_Text.HexCharsToColor
UnityEngine::Color32 TMPro::TMP_Text::HexCharsToColor(::Array<::Il2CppChar>* hexChars, int tagCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::HexCharsToColor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HexCharsToColor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hexChars, tagCount)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color32, false>(this, ___internal__method, hexChars, tagCount);
}
// Autogenerated method: TMPro.TMP_Text.HexCharsToColor
UnityEngine::Color32 TMPro::TMP_Text::HexCharsToColor(::Array<::Il2CppChar>* hexChars, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::HexCharsToColor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HexCharsToColor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hexChars, startIndex, length)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color32, false>(this, ___internal__method, hexChars, startIndex, length);
}
// Autogenerated method: TMPro.TMP_Text.GetAttributeParameters
int TMPro::TMP_Text::GetAttributeParameters(::Array<::Il2CppChar>* chars, int startIndex, int length, ::Array<float>*& parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::GetAttributeParameters");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAttributeParameters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(chars, startIndex, length, parameters)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars, startIndex, length, parameters);
}
// Autogenerated method: TMPro.TMP_Text.ConvertToFloat
float TMPro::TMP_Text::ConvertToFloat(::Array<::Il2CppChar>* chars, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ConvertToFloat");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConvertToFloat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(chars, startIndex, length)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, chars, startIndex, length);
}
// Autogenerated method: TMPro.TMP_Text.ConvertToFloat
float TMPro::TMP_Text::ConvertToFloat(::Array<::Il2CppChar>* chars, int startIndex, int length, int& lastIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ConvertToFloat");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConvertToFloat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(chars, startIndex, length, lastIndex)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, chars, startIndex, length, lastIndex);
}
// Autogenerated method: TMPro.TMP_Text.ValidateHtmlTag
bool TMPro::TMP_Text::ValidateHtmlTag(::Array<TMPro::TMP_Text::UnicodeChar>* chars, int startIndex, int& endIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::ValidateHtmlTag");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ValidateHtmlTag", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(chars, startIndex, endIndex)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, chars, startIndex, endIndex);
}
// Autogenerated method: TMPro.TMP_Text.get_color
UnityEngine::Color TMPro::TMP_Text::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_color");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.set_color
void TMPro::TMP_Text::set_color(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::set_color");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_Text.get_transform
UnityEngine::Transform* TMPro::TMP_Text::get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_transform");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_transform", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.get_rectTransform
UnityEngine::RectTransform* TMPro::TMP_Text::get_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::get_rectTransform");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rectTransform", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_Text.CrossFadeColor
void TMPro::TMP_Text::CrossFadeColor(UnityEngine::Color targetColor, float duration, bool ignoreTimeScale, bool useAlpha) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::CrossFadeColor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CrossFadeColor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(targetColor, duration, ignoreTimeScale, useAlpha)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, targetColor, duration, ignoreTimeScale, useAlpha);
}
// Autogenerated method: TMPro.TMP_Text.CrossFadeAlpha
void TMPro::TMP_Text::CrossFadeAlpha(float alpha, float duration, bool ignoreTimeScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::CrossFadeAlpha");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CrossFadeAlpha", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(alpha, duration, ignoreTimeScale)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, alpha, duration, ignoreTimeScale);
}
// Autogenerated method: TMPro.TMP_Text..cctor
void TMPro::TMP_Text::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_Text", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_Text/TextInputSources
#include "TMPro/TMP_Text.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_Text/TextInputSources Text
TMPro::TMP_Text::TextInputSources TMPro::TMP_Text::TextInputSources::_get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::TextInputSources::_get_Text");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_Text::TextInputSources>("TMPro", "TMP_Text/TextInputSources", "Text"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_Text/TextInputSources Text
void TMPro::TMP_Text::TextInputSources::_set_Text(TMPro::TMP_Text::TextInputSources value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::TextInputSources::_set_Text");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text/TextInputSources", "Text", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_Text/TextInputSources SetText
TMPro::TMP_Text::TextInputSources TMPro::TMP_Text::TextInputSources::_get_SetText() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::TextInputSources::_get_SetText");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_Text::TextInputSources>("TMPro", "TMP_Text/TextInputSources", "SetText"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_Text/TextInputSources SetText
void TMPro::TMP_Text::TextInputSources::_set_SetText(TMPro::TMP_Text::TextInputSources value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::TextInputSources::_set_SetText");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text/TextInputSources", "SetText", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_Text/TextInputSources SetCharArray
TMPro::TMP_Text::TextInputSources TMPro::TMP_Text::TextInputSources::_get_SetCharArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::TextInputSources::_get_SetCharArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_Text::TextInputSources>("TMPro", "TMP_Text/TextInputSources", "SetCharArray"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_Text/TextInputSources SetCharArray
void TMPro::TMP_Text::TextInputSources::_set_SetCharArray(TMPro::TMP_Text::TextInputSources value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::TextInputSources::_set_SetCharArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text/TextInputSources", "SetCharArray", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_Text/TextInputSources String
TMPro::TMP_Text::TextInputSources TMPro::TMP_Text::TextInputSources::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::TextInputSources::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_Text::TextInputSources>("TMPro", "TMP_Text/TextInputSources", "String"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_Text/TextInputSources String
void TMPro::TMP_Text::TextInputSources::_set_String(TMPro::TMP_Text::TextInputSources value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Text::TextInputSources::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Text/TextInputSources", "String", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TextElementType
#include "TMPro/TextElementType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TextElementType Character
TMPro::TextElementType TMPro::TextElementType::_get_Character() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextElementType::_get_Character");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextElementType>("TMPro", "TextElementType", "Character"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextElementType Character
void TMPro::TextElementType::_set_Character(TMPro::TextElementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextElementType::_set_Character");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextElementType", "Character", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextElementType Sprite
TMPro::TextElementType TMPro::TextElementType::_get_Sprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextElementType::_get_Sprite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextElementType>("TMPro", "TextElementType", "Sprite"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextElementType Sprite
void TMPro::TextElementType::_set_Sprite(TMPro::TextElementType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextElementType::_set_Sprite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextElementType", "Sprite", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_TextElement
#include "TMPro/TMP_TextElement.hpp"
// Including type: UnityEngine.TextCore.Glyph
#include "UnityEngine/TextCore/Glyph.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.TMP_TextElement.get_elementType
TMPro::TextElementType TMPro::TMP_TextElement::get_elementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement::get_elementType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_elementType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TextElementType, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextElement.get_unicode
uint TMPro::TMP_TextElement::get_unicode() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement::get_unicode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_unicode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextElement.set_unicode
void TMPro::TMP_TextElement::set_unicode(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement::set_unicode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_unicode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_TextElement.get_glyph
UnityEngine::TextCore::Glyph* TMPro::TMP_TextElement::get_glyph() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement::get_glyph");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_glyph", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextCore::Glyph*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextElement.set_glyph
void TMPro::TMP_TextElement::set_glyph(UnityEngine::TextCore::Glyph* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement::set_glyph");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_glyph", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_TextElement.get_glyphIndex
uint TMPro::TMP_TextElement::get_glyphIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement::get_glyphIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_glyphIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextElement.set_glyphIndex
void TMPro::TMP_TextElement::set_glyphIndex(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement::set_glyphIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_glyphIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TMP_TextElement.get_scale
float TMPro::TMP_TextElement::get_scale() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement::get_scale");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_scale", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextElement.set_scale
void TMPro::TMP_TextElement::set_scale(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextElement::set_scale");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_scale", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_TextElement_Legacy
#include "TMPro/TMP_TextElement_Legacy.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_TextInfo
#include "TMPro/TMP_TextInfo.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector2 k_InfinityVectorPositive
UnityEngine::Vector2 TMPro::TMP_TextInfo::_get_k_InfinityVectorPositive() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::_get_k_InfinityVectorPositive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("TMPro", "TMP_TextInfo", "k_InfinityVectorPositive"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector2 k_InfinityVectorPositive
void TMPro::TMP_TextInfo::_set_k_InfinityVectorPositive(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::_set_k_InfinityVectorPositive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextInfo", "k_InfinityVectorPositive", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector2 k_InfinityVectorNegative
UnityEngine::Vector2 TMPro::TMP_TextInfo::_get_k_InfinityVectorNegative() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::_get_k_InfinityVectorNegative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("TMPro", "TMP_TextInfo", "k_InfinityVectorNegative"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector2 k_InfinityVectorNegative
void TMPro::TMP_TextInfo::_set_k_InfinityVectorNegative(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::_set_k_InfinityVectorNegative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextInfo", "k_InfinityVectorNegative", value));
}
// Autogenerated method: TMPro.TMP_TextInfo.Clear
void TMPro::TMP_TextInfo::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::Clear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextInfo.ClearMeshInfo
void TMPro::TMP_TextInfo::ClearMeshInfo(bool updateMesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::ClearMeshInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearMeshInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(updateMesh)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, updateMesh);
}
// Autogenerated method: TMPro.TMP_TextInfo.ClearAllMeshInfo
void TMPro::TMP_TextInfo::ClearAllMeshInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::ClearAllMeshInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearAllMeshInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextInfo.ResetVertexLayout
void TMPro::TMP_TextInfo::ResetVertexLayout(bool isVolumetric) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::ResetVertexLayout");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResetVertexLayout", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(isVolumetric)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isVolumetric);
}
// Autogenerated method: TMPro.TMP_TextInfo.ClearUnusedVertices
void TMPro::TMP_TextInfo::ClearUnusedVertices(::Array<TMPro::MaterialReference>* materials) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::ClearUnusedVertices");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearUnusedVertices", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(materials)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, materials);
}
// Autogenerated method: TMPro.TMP_TextInfo.ClearLineInfo
void TMPro::TMP_TextInfo::ClearLineInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::ClearLineInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearLineInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextInfo.CopyMeshInfoVertexData
::Array<TMPro::TMP_MeshInfo>* TMPro::TMP_TextInfo::CopyMeshInfoVertexData() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::CopyMeshInfoVertexData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CopyMeshInfoVertexData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<TMPro::TMP_MeshInfo>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextInfo..cctor
void TMPro::TMP_TextInfo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextInfo::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextInfo", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_TextParsingUtilities
#include "TMPro/TMP_TextParsingUtilities.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly TMPro.TMP_TextParsingUtilities s_Instance
TMPro::TMP_TextParsingUtilities* TMPro::TMP_TextParsingUtilities::_get_s_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::_get_s_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_TextParsingUtilities*>("TMPro", "TMP_TextParsingUtilities", "s_Instance"));
}
// Autogenerated static field setter
// Set static field: static private readonly TMPro.TMP_TextParsingUtilities s_Instance
void TMPro::TMP_TextParsingUtilities::_set_s_Instance(TMPro::TMP_TextParsingUtilities* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::_set_s_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextParsingUtilities", "s_Instance", value));
}
// Autogenerated static field getter
// Get static field: static private System.String k_LookupStringL
::Il2CppString* TMPro::TMP_TextParsingUtilities::_get_k_LookupStringL() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::_get_k_LookupStringL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("TMPro", "TMP_TextParsingUtilities", "k_LookupStringL"));
}
// Autogenerated static field setter
// Set static field: static private System.String k_LookupStringL
void TMPro::TMP_TextParsingUtilities::_set_k_LookupStringL(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::_set_k_LookupStringL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextParsingUtilities", "k_LookupStringL", value));
}
// Autogenerated static field getter
// Get static field: static private System.String k_LookupStringU
::Il2CppString* TMPro::TMP_TextParsingUtilities::_get_k_LookupStringU() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::_get_k_LookupStringU");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("TMPro", "TMP_TextParsingUtilities", "k_LookupStringU"));
}
// Autogenerated static field setter
// Set static field: static private System.String k_LookupStringU
void TMPro::TMP_TextParsingUtilities::_set_k_LookupStringU(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::_set_k_LookupStringU");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextParsingUtilities", "k_LookupStringU", value));
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities..cctor
void TMPro::TMP_TextParsingUtilities::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.get_instance
TMPro::TMP_TextParsingUtilities* TMPro::TMP_TextParsingUtilities::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::get_instance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "get_instance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_TextParsingUtilities*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.GetHashCode
uint TMPro::TMP_TextParsingUtilities::GetHashCode(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.GetHashCodeCaseSensitive
int TMPro::TMP_TextParsingUtilities::GetHashCodeCaseSensitive(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::GetHashCodeCaseSensitive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "GetHashCodeCaseSensitive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.ToLowerASCIIFast
::Il2CppChar TMPro::TMP_TextParsingUtilities::ToLowerASCIIFast(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::ToLowerASCIIFast");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "ToLowerASCIIFast", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.ToUpperASCIIFast
::Il2CppChar TMPro::TMP_TextParsingUtilities::ToUpperASCIIFast(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::ToUpperASCIIFast");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "ToUpperASCIIFast", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.ToUpperASCIIFast
uint TMPro::TMP_TextParsingUtilities::ToUpperASCIIFast(uint c) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::ToUpperASCIIFast");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "ToUpperASCIIFast", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.ToLowerASCIIFast
uint TMPro::TMP_TextParsingUtilities::ToLowerASCIIFast(uint c) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::ToLowerASCIIFast");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "ToLowerASCIIFast", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.IsHighSurrogate
bool TMPro::TMP_TextParsingUtilities::IsHighSurrogate(uint c) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::IsHighSurrogate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "IsHighSurrogate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_TextParsingUtilities.IsLowSurrogate
bool TMPro::TMP_TextParsingUtilities::IsLowSurrogate(uint c) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextParsingUtilities::IsLowSurrogate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextParsingUtilities", "IsLowSurrogate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.CaretPosition
#include "TMPro/CaretPosition.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.CaretPosition None
TMPro::CaretPosition TMPro::CaretPosition::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::CaretPosition::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::CaretPosition>("TMPro", "CaretPosition", "None"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.CaretPosition None
void TMPro::CaretPosition::_set_None(TMPro::CaretPosition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::CaretPosition::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "CaretPosition", "None", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.CaretPosition Left
TMPro::CaretPosition TMPro::CaretPosition::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::CaretPosition::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::CaretPosition>("TMPro", "CaretPosition", "Left"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.CaretPosition Left
void TMPro::CaretPosition::_set_Left(TMPro::CaretPosition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::CaretPosition::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "CaretPosition", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.CaretPosition Right
TMPro::CaretPosition TMPro::CaretPosition::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::CaretPosition::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::CaretPosition>("TMPro", "CaretPosition", "Right"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.CaretPosition Right
void TMPro::CaretPosition::_set_Right(TMPro::CaretPosition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::CaretPosition::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "CaretPosition", "Right", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.CaretInfo
#include "TMPro/CaretInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_TextUtilities
#include "TMPro/TMP_TextUtilities.hpp"
// Including type: TMPro.TMP_TextUtilities/LineSegment
#include "TMPro/TMP_TextUtilities_LineSegment.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: TMPro.CaretPosition
#include "TMPro/CaretPosition.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector3[] m_rectWorldCorners
::Array<UnityEngine::Vector3>* TMPro::TMP_TextUtilities::_get_m_rectWorldCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::_get_m_rectWorldCorners");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Vector3>*>("TMPro", "TMP_TextUtilities", "m_rectWorldCorners"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector3[] m_rectWorldCorners
void TMPro::TMP_TextUtilities::_set_m_rectWorldCorners(::Array<UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::_set_m_rectWorldCorners");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextUtilities", "m_rectWorldCorners", value));
}
// Autogenerated static field getter
// Get static field: static private System.String k_lookupStringL
::Il2CppString* TMPro::TMP_TextUtilities::_get_k_lookupStringL() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::_get_k_lookupStringL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("TMPro", "TMP_TextUtilities", "k_lookupStringL"));
}
// Autogenerated static field setter
// Set static field: static private System.String k_lookupStringL
void TMPro::TMP_TextUtilities::_set_k_lookupStringL(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::_set_k_lookupStringL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextUtilities", "k_lookupStringL", value));
}
// Autogenerated static field getter
// Get static field: static private System.String k_lookupStringU
::Il2CppString* TMPro::TMP_TextUtilities::_get_k_lookupStringU() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::_get_k_lookupStringU");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("TMPro", "TMP_TextUtilities", "k_lookupStringU"));
}
// Autogenerated static field setter
// Set static field: static private System.String k_lookupStringU
void TMPro::TMP_TextUtilities::_set_k_lookupStringU(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::_set_k_lookupStringU");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_TextUtilities", "k_lookupStringU", value));
}
// Autogenerated method: TMPro.TMP_TextUtilities.GetCursorIndexFromPosition
int TMPro::TMP_TextUtilities::GetCursorIndexFromPosition(TMPro::TMP_Text* textComponent, UnityEngine::Vector3 position, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::GetCursorIndexFromPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "GetCursorIndexFromPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(textComponent, position, camera)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, textComponent, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.GetCursorIndexFromPosition
int TMPro::TMP_TextUtilities::GetCursorIndexFromPosition(TMPro::TMP_Text* textComponent, UnityEngine::Vector3 position, UnityEngine::Camera* camera, TMPro::CaretPosition& cursor) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::GetCursorIndexFromPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "GetCursorIndexFromPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(textComponent, position, camera, cursor)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, textComponent, position, camera, cursor);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindNearestLine
int TMPro::TMP_TextUtilities::FindNearestLine(TMPro::TMP_Text* text, UnityEngine::Vector3 position, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::FindNearestLine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindNearestLine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, position, camera)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindNearestCharacterOnLine
int TMPro::TMP_TextUtilities::FindNearestCharacterOnLine(TMPro::TMP_Text* text, UnityEngine::Vector3 position, int line, UnityEngine::Camera* camera, bool visibleOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::FindNearestCharacterOnLine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindNearestCharacterOnLine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, position, line, camera, visibleOnly)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, line, camera, visibleOnly);
}
// Autogenerated method: TMPro.TMP_TextUtilities.IsIntersectingRectTransform
bool TMPro::TMP_TextUtilities::IsIntersectingRectTransform(UnityEngine::RectTransform* rectTransform, UnityEngine::Vector3 position, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::IsIntersectingRectTransform");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "IsIntersectingRectTransform", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rectTransform, position, camera)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rectTransform, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindIntersectingCharacter
int TMPro::TMP_TextUtilities::FindIntersectingCharacter(TMPro::TMP_Text* text, UnityEngine::Vector3 position, UnityEngine::Camera* camera, bool visibleOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::FindIntersectingCharacter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindIntersectingCharacter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, position, camera, visibleOnly)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, camera, visibleOnly);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindNearestCharacter
int TMPro::TMP_TextUtilities::FindNearestCharacter(TMPro::TMP_Text* text, UnityEngine::Vector3 position, UnityEngine::Camera* camera, bool visibleOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::FindNearestCharacter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindNearestCharacter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, position, camera, visibleOnly)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, camera, visibleOnly);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindIntersectingWord
int TMPro::TMP_TextUtilities::FindIntersectingWord(TMPro::TMP_Text* text, UnityEngine::Vector3 position, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::FindIntersectingWord");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindIntersectingWord", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, position, camera)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindNearestWord
int TMPro::TMP_TextUtilities::FindNearestWord(TMPro::TMP_Text* text, UnityEngine::Vector3 position, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::FindNearestWord");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindNearestWord", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, position, camera)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindIntersectingLine
int TMPro::TMP_TextUtilities::FindIntersectingLine(TMPro::TMP_Text* text, UnityEngine::Vector3 position, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::FindIntersectingLine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindIntersectingLine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, position, camera)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindIntersectingLink
int TMPro::TMP_TextUtilities::FindIntersectingLink(TMPro::TMP_Text* text, UnityEngine::Vector3 position, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::FindIntersectingLink");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindIntersectingLink", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, position, camera)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.FindNearestLink
int TMPro::TMP_TextUtilities::FindNearestLink(TMPro::TMP_Text* text, UnityEngine::Vector3 position, UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::FindNearestLink");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "FindNearestLink", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, position, camera)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text, position, camera);
}
// Autogenerated method: TMPro.TMP_TextUtilities.PointIntersectRectangle
bool TMPro::TMP_TextUtilities::PointIntersectRectangle(UnityEngine::Vector3 m, UnityEngine::Vector3 a, UnityEngine::Vector3 b, UnityEngine::Vector3 c, UnityEngine::Vector3 d) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::PointIntersectRectangle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "PointIntersectRectangle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(m, a, b, c, d)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, m, a, b, c, d);
}
// Autogenerated method: TMPro.TMP_TextUtilities.ScreenPointToWorldPointInRectangle
bool TMPro::TMP_TextUtilities::ScreenPointToWorldPointInRectangle(UnityEngine::Transform* transform, UnityEngine::Vector2 screenPoint, UnityEngine::Camera* cam, UnityEngine::Vector3& worldPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::ScreenPointToWorldPointInRectangle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "ScreenPointToWorldPointInRectangle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(transform, screenPoint, cam, worldPoint)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, transform, screenPoint, cam, worldPoint);
}
// Autogenerated method: TMPro.TMP_TextUtilities.IntersectLinePlane
bool TMPro::TMP_TextUtilities::IntersectLinePlane(TMPro::TMP_TextUtilities::LineSegment line, UnityEngine::Vector3 point, UnityEngine::Vector3 normal, UnityEngine::Vector3& intersectingPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::IntersectLinePlane");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "IntersectLinePlane", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(line, point, normal, intersectingPoint)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, line, point, normal, intersectingPoint);
}
// Autogenerated method: TMPro.TMP_TextUtilities.DistanceToLine
float TMPro::TMP_TextUtilities::DistanceToLine(UnityEngine::Vector3 a, UnityEngine::Vector3 b, UnityEngine::Vector3 point) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::DistanceToLine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "DistanceToLine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b, point)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b, point);
}
// Autogenerated method: TMPro.TMP_TextUtilities.ToLowerFast
::Il2CppChar TMPro::TMP_TextUtilities::ToLowerFast(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::ToLowerFast");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "ToLowerFast", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_TextUtilities.ToUpperFast
::Il2CppChar TMPro::TMP_TextUtilities::ToUpperFast(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::ToUpperFast");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "ToUpperFast", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: TMPro.TMP_TextUtilities.GetSimpleHashCode
int TMPro::TMP_TextUtilities::GetSimpleHashCode(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::GetSimpleHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "GetSimpleHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: TMPro.TMP_TextUtilities.GetSimpleHashCodeLowercase
uint TMPro::TMP_TextUtilities::GetSimpleHashCodeLowercase(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::GetSimpleHashCodeLowercase");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "GetSimpleHashCodeLowercase", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: TMPro.TMP_TextUtilities.HexToInt
int TMPro::TMP_TextUtilities::HexToInt(::Il2CppChar hex) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::HexToInt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "HexToInt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hex)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hex);
}
// Autogenerated method: TMPro.TMP_TextUtilities.StringHexToInt
int TMPro::TMP_TextUtilities::StringHexToInt(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::StringHexToInt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", "StringHexToInt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: TMPro.TMP_TextUtilities..cctor
void TMPro::TMP_TextUtilities::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_TextUtilities::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_TextUtilities", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_TextUtilities/LineSegment
#include "TMPro/TMP_TextUtilities_LineSegment.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_UpdateManager
#include "TMPro/TMP_UpdateManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Rendering.ScriptableRenderContext
#include "UnityEngine/Rendering/ScriptableRenderContext.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private TMPro.TMP_UpdateManager s_Instance
TMPro::TMP_UpdateManager* TMPro::TMP_UpdateManager::_get_s_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::_get_s_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_UpdateManager*>("TMPro", "TMP_UpdateManager", "s_Instance"));
}
// Autogenerated static field setter
// Set static field: static private TMPro.TMP_UpdateManager s_Instance
void TMPro::TMP_UpdateManager::_set_s_Instance(TMPro::TMP_UpdateManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::_set_s_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_UpdateManager", "s_Instance", value));
}
// Autogenerated method: TMPro.TMP_UpdateManager.get_instance
TMPro::TMP_UpdateManager* TMPro::TMP_UpdateManager::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::get_instance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateManager", "get_instance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_UpdateManager*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_UpdateManager.RegisterTextObjectForUpdate
void TMPro::TMP_UpdateManager::RegisterTextObjectForUpdate(TMPro::TMP_Text* textObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::RegisterTextObjectForUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateManager", "RegisterTextObjectForUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(textObject)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, textObject);
}
// Autogenerated method: TMPro.TMP_UpdateManager.InternalRegisterTextObjectForUpdate
void TMPro::TMP_UpdateManager::InternalRegisterTextObjectForUpdate(TMPro::TMP_Text* textObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::InternalRegisterTextObjectForUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalRegisterTextObjectForUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(textObject)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, textObject);
}
// Autogenerated method: TMPro.TMP_UpdateManager.RegisterTextElementForLayoutRebuild
void TMPro::TMP_UpdateManager::RegisterTextElementForLayoutRebuild(TMPro::TMP_Text* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::RegisterTextElementForLayoutRebuild");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateManager", "RegisterTextElementForLayoutRebuild", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(element)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateManager.InternalRegisterTextElementForLayoutRebuild
bool TMPro::TMP_UpdateManager::InternalRegisterTextElementForLayoutRebuild(TMPro::TMP_Text* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::InternalRegisterTextElementForLayoutRebuild");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalRegisterTextElementForLayoutRebuild", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(element)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateManager.RegisterTextElementForGraphicRebuild
void TMPro::TMP_UpdateManager::RegisterTextElementForGraphicRebuild(TMPro::TMP_Text* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::RegisterTextElementForGraphicRebuild");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateManager", "RegisterTextElementForGraphicRebuild", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(element)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateManager.InternalRegisterTextElementForGraphicRebuild
bool TMPro::TMP_UpdateManager::InternalRegisterTextElementForGraphicRebuild(TMPro::TMP_Text* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::InternalRegisterTextElementForGraphicRebuild");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalRegisterTextElementForGraphicRebuild", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(element)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateManager.OnBeginFrameRendering
void TMPro::TMP_UpdateManager::OnBeginFrameRendering(UnityEngine::Rendering::ScriptableRenderContext renderContext, ::Array<UnityEngine::Camera*>* cameras) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::OnBeginFrameRendering");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnBeginFrameRendering", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(renderContext, cameras)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, renderContext, cameras);
}
// Autogenerated method: TMPro.TMP_UpdateManager.OnCameraPreCull
void TMPro::TMP_UpdateManager::OnCameraPreCull(UnityEngine::Camera* cam) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::OnCameraPreCull");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnCameraPreCull", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cam)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cam);
}
// Autogenerated method: TMPro.TMP_UpdateManager.DoRebuilds
void TMPro::TMP_UpdateManager::DoRebuilds() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::DoRebuilds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DoRebuilds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_UpdateManager.UnRegisterTextObjectForUpdate
void TMPro::TMP_UpdateManager::UnRegisterTextObjectForUpdate(TMPro::TMP_Text* textObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::UnRegisterTextObjectForUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateManager", "UnRegisterTextObjectForUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(textObject)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, textObject);
}
// Autogenerated method: TMPro.TMP_UpdateManager.UnRegisterTextElementForRebuild
void TMPro::TMP_UpdateManager::UnRegisterTextElementForRebuild(TMPro::TMP_Text* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::UnRegisterTextElementForRebuild");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateManager", "UnRegisterTextElementForRebuild", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(element)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateManager.InternalUnRegisterTextElementForGraphicRebuild
void TMPro::TMP_UpdateManager::InternalUnRegisterTextElementForGraphicRebuild(TMPro::TMP_Text* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::InternalUnRegisterTextElementForGraphicRebuild");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalUnRegisterTextElementForGraphicRebuild", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(element)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateManager.InternalUnRegisterTextElementForLayoutRebuild
void TMPro::TMP_UpdateManager::InternalUnRegisterTextElementForLayoutRebuild(TMPro::TMP_Text* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::InternalUnRegisterTextElementForLayoutRebuild");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalUnRegisterTextElementForLayoutRebuild", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(element)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateManager.InternalUnRegisterTextObjectForUpdate
void TMPro::TMP_UpdateManager::InternalUnRegisterTextObjectForUpdate(TMPro::TMP_Text* textObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateManager::InternalUnRegisterTextObjectForUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalUnRegisterTextObjectForUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(textObject)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, textObject);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_UpdateRegistry
#include "TMPro/TMP_UpdateRegistry.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.UI.ICanvasElement
#include "UnityEngine/UI/ICanvasElement.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private TMPro.TMP_UpdateRegistry s_Instance
TMPro::TMP_UpdateRegistry* TMPro::TMP_UpdateRegistry::_get_s_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::_get_s_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_UpdateRegistry*>("TMPro", "TMP_UpdateRegistry", "s_Instance"));
}
// Autogenerated static field setter
// Set static field: static private TMPro.TMP_UpdateRegistry s_Instance
void TMPro::TMP_UpdateRegistry::_set_s_Instance(TMPro::TMP_UpdateRegistry* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::_set_s_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_UpdateRegistry", "s_Instance", value));
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.get_instance
TMPro::TMP_UpdateRegistry* TMPro::TMP_UpdateRegistry::get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::get_instance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateRegistry", "get_instance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_UpdateRegistry*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.RegisterCanvasElementForLayoutRebuild
void TMPro::TMP_UpdateRegistry::RegisterCanvasElementForLayoutRebuild(UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::RegisterCanvasElementForLayoutRebuild");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateRegistry", "RegisterCanvasElementForLayoutRebuild", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(element)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.InternalRegisterCanvasElementForLayoutRebuild
bool TMPro::TMP_UpdateRegistry::InternalRegisterCanvasElementForLayoutRebuild(UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::InternalRegisterCanvasElementForLayoutRebuild");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalRegisterCanvasElementForLayoutRebuild", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(element)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.RegisterCanvasElementForGraphicRebuild
void TMPro::TMP_UpdateRegistry::RegisterCanvasElementForGraphicRebuild(UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::RegisterCanvasElementForGraphicRebuild");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateRegistry", "RegisterCanvasElementForGraphicRebuild", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(element)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.InternalRegisterCanvasElementForGraphicRebuild
bool TMPro::TMP_UpdateRegistry::InternalRegisterCanvasElementForGraphicRebuild(UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::InternalRegisterCanvasElementForGraphicRebuild");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalRegisterCanvasElementForGraphicRebuild", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(element)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.PerformUpdateForCanvasRendererObjects
void TMPro::TMP_UpdateRegistry::PerformUpdateForCanvasRendererObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::PerformUpdateForCanvasRendererObjects");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PerformUpdateForCanvasRendererObjects", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.PerformUpdateForMeshRendererObjects
void TMPro::TMP_UpdateRegistry::PerformUpdateForMeshRendererObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::PerformUpdateForMeshRendererObjects");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PerformUpdateForMeshRendererObjects", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.UnRegisterCanvasElementForRebuild
void TMPro::TMP_UpdateRegistry::UnRegisterCanvasElementForRebuild(UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::UnRegisterCanvasElementForRebuild");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_UpdateRegistry", "UnRegisterCanvasElementForRebuild", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(element)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.InternalUnRegisterCanvasElementForLayoutRebuild
void TMPro::TMP_UpdateRegistry::InternalUnRegisterCanvasElementForLayoutRebuild(UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::InternalUnRegisterCanvasElementForLayoutRebuild");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalUnRegisterCanvasElementForLayoutRebuild", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(element)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, element);
}
// Autogenerated method: TMPro.TMP_UpdateRegistry.InternalUnRegisterCanvasElementForGraphicRebuild
void TMPro::TMP_UpdateRegistry::InternalUnRegisterCanvasElementForGraphicRebuild(UnityEngine::UI::ICanvasElement* element) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_UpdateRegistry::InternalUnRegisterCanvasElementForGraphicRebuild");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalUnRegisterCanvasElementForGraphicRebuild", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(element)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, element);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.Compute_DistanceTransform_EventTypes
#include "TMPro/Compute_DistanceTransform_EventTypes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.Compute_DistanceTransform_EventTypes Processing
TMPro::Compute_DistanceTransform_EventTypes TMPro::Compute_DistanceTransform_EventTypes::_get_Processing() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::Compute_DistanceTransform_EventTypes::_get_Processing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::Compute_DistanceTransform_EventTypes>("TMPro", "Compute_DistanceTransform_EventTypes", "Processing"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.Compute_DistanceTransform_EventTypes Processing
void TMPro::Compute_DistanceTransform_EventTypes::_set_Processing(TMPro::Compute_DistanceTransform_EventTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::Compute_DistanceTransform_EventTypes::_set_Processing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "Compute_DistanceTransform_EventTypes", "Processing", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.Compute_DistanceTransform_EventTypes Completed
TMPro::Compute_DistanceTransform_EventTypes TMPro::Compute_DistanceTransform_EventTypes::_get_Completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::Compute_DistanceTransform_EventTypes::_get_Completed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::Compute_DistanceTransform_EventTypes>("TMPro", "Compute_DistanceTransform_EventTypes", "Completed"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.Compute_DistanceTransform_EventTypes Completed
void TMPro::Compute_DistanceTransform_EventTypes::_set_Completed(TMPro::Compute_DistanceTransform_EventTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::Compute_DistanceTransform_EventTypes::_set_Completed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "Compute_DistanceTransform_EventTypes", "Completed", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMPro_EventManager
#include "TMPro/TMPro_EventManager.hpp"
// Including type: TMPro.FastAction`2
#include "TMPro/FastAction_2.hpp"
// Including type: TMPro.Compute_DT_EventArgs
#include "TMPro/Compute_DT_EventArgs.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: TMPro.TMP_FontAsset
#include "TMPro/TMP_FontAsset.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: TMPro.FastAction`3
#include "TMPro/FastAction_3.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: TMPro.FastAction`1
#include "TMPro/FastAction_1.hpp"
// Including type: TMPro.TMP_ColorGradient
#include "TMPro/TMP_ColorGradient.hpp"
// Including type: TMPro.FastAction
#include "TMPro/FastAction.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`2<System.Object,TMPro.Compute_DT_EventArgs> COMPUTE_DT_EVENT
TMPro::FastAction_2<::Il2CppObject*, TMPro::Compute_DT_EventArgs*>* TMPro::TMPro_EventManager::_get_COMPUTE_DT_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_COMPUTE_DT_EVENT");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<TMPro::FastAction_2<::Il2CppObject*, TMPro::Compute_DT_EventArgs*>*>("TMPro", "TMPro_EventManager", "COMPUTE_DT_EVENT")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`2<System.Object,TMPro.Compute_DT_EventArgs> COMPUTE_DT_EVENT
void TMPro::TMPro_EventManager::_set_COMPUTE_DT_EVENT(TMPro::FastAction_2<::Il2CppObject*, TMPro::Compute_DT_EventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_COMPUTE_DT_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "COMPUTE_DT_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`2<System.Boolean,UnityEngine.Material> MATERIAL_PROPERTY_EVENT
TMPro::FastAction_2<bool, UnityEngine::Material*>* TMPro::TMPro_EventManager::_get_MATERIAL_PROPERTY_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_MATERIAL_PROPERTY_EVENT");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<TMPro::FastAction_2<bool, UnityEngine::Material*>*>("TMPro", "TMPro_EventManager", "MATERIAL_PROPERTY_EVENT")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`2<System.Boolean,UnityEngine.Material> MATERIAL_PROPERTY_EVENT
void TMPro::TMPro_EventManager::_set_MATERIAL_PROPERTY_EVENT(TMPro::FastAction_2<bool, UnityEngine::Material*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_MATERIAL_PROPERTY_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "MATERIAL_PROPERTY_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`2<System.Boolean,TMPro.TMP_FontAsset> FONT_PROPERTY_EVENT
TMPro::FastAction_2<bool, TMPro::TMP_FontAsset*>* TMPro::TMPro_EventManager::_get_FONT_PROPERTY_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_FONT_PROPERTY_EVENT");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<TMPro::FastAction_2<bool, TMPro::TMP_FontAsset*>*>("TMPro", "TMPro_EventManager", "FONT_PROPERTY_EVENT")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`2<System.Boolean,TMPro.TMP_FontAsset> FONT_PROPERTY_EVENT
void TMPro::TMPro_EventManager::_set_FONT_PROPERTY_EVENT(TMPro::FastAction_2<bool, TMPro::TMP_FontAsset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_FONT_PROPERTY_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "FONT_PROPERTY_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`2<System.Boolean,UnityEngine.Object> SPRITE_ASSET_PROPERTY_EVENT
TMPro::FastAction_2<bool, UnityEngine::Object*>* TMPro::TMPro_EventManager::_get_SPRITE_ASSET_PROPERTY_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_SPRITE_ASSET_PROPERTY_EVENT");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<TMPro::FastAction_2<bool, UnityEngine::Object*>*>("TMPro", "TMPro_EventManager", "SPRITE_ASSET_PROPERTY_EVENT")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`2<System.Boolean,UnityEngine.Object> SPRITE_ASSET_PROPERTY_EVENT
void TMPro::TMPro_EventManager::_set_SPRITE_ASSET_PROPERTY_EVENT(TMPro::FastAction_2<bool, UnityEngine::Object*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_SPRITE_ASSET_PROPERTY_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "SPRITE_ASSET_PROPERTY_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`2<System.Boolean,TMPro.TextMeshPro> TEXTMESHPRO_PROPERTY_EVENT
TMPro::FastAction_2<bool, TMPro::TextMeshPro*>* TMPro::TMPro_EventManager::_get_TEXTMESHPRO_PROPERTY_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_TEXTMESHPRO_PROPERTY_EVENT");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<TMPro::FastAction_2<bool, TMPro::TextMeshPro*>*>("TMPro", "TMPro_EventManager", "TEXTMESHPRO_PROPERTY_EVENT")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`2<System.Boolean,TMPro.TextMeshPro> TEXTMESHPRO_PROPERTY_EVENT
void TMPro::TMPro_EventManager::_set_TEXTMESHPRO_PROPERTY_EVENT(TMPro::FastAction_2<bool, TMPro::TextMeshPro*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_TEXTMESHPRO_PROPERTY_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "TEXTMESHPRO_PROPERTY_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`3<UnityEngine.GameObject,UnityEngine.Material,UnityEngine.Material> DRAG_AND_DROP_MATERIAL_EVENT
TMPro::FastAction_3<UnityEngine::GameObject*, UnityEngine::Material*, UnityEngine::Material*>* TMPro::TMPro_EventManager::_get_DRAG_AND_DROP_MATERIAL_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_DRAG_AND_DROP_MATERIAL_EVENT");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<TMPro::FastAction_3<UnityEngine::GameObject*, UnityEngine::Material*, UnityEngine::Material*>*>("TMPro", "TMPro_EventManager", "DRAG_AND_DROP_MATERIAL_EVENT")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`3<UnityEngine.GameObject,UnityEngine.Material,UnityEngine.Material> DRAG_AND_DROP_MATERIAL_EVENT
void TMPro::TMPro_EventManager::_set_DRAG_AND_DROP_MATERIAL_EVENT(TMPro::FastAction_3<UnityEngine::GameObject*, UnityEngine::Material*, UnityEngine::Material*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_DRAG_AND_DROP_MATERIAL_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "DRAG_AND_DROP_MATERIAL_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`1<System.Boolean> TEXT_STYLE_PROPERTY_EVENT
TMPro::FastAction_1<bool>* TMPro::TMPro_EventManager::_get_TEXT_STYLE_PROPERTY_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_TEXT_STYLE_PROPERTY_EVENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FastAction_1<bool>*>("TMPro", "TMPro_EventManager", "TEXT_STYLE_PROPERTY_EVENT"));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`1<System.Boolean> TEXT_STYLE_PROPERTY_EVENT
void TMPro::TMPro_EventManager::_set_TEXT_STYLE_PROPERTY_EVENT(TMPro::FastAction_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_TEXT_STYLE_PROPERTY_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "TEXT_STYLE_PROPERTY_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`1<TMPro.TMP_ColorGradient> COLOR_GRADIENT_PROPERTY_EVENT
TMPro::FastAction_1<TMPro::TMP_ColorGradient*>* TMPro::TMPro_EventManager::_get_COLOR_GRADIENT_PROPERTY_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_COLOR_GRADIENT_PROPERTY_EVENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FastAction_1<TMPro::TMP_ColorGradient*>*>("TMPro", "TMPro_EventManager", "COLOR_GRADIENT_PROPERTY_EVENT"));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`1<TMPro.TMP_ColorGradient> COLOR_GRADIENT_PROPERTY_EVENT
void TMPro::TMPro_EventManager::_set_COLOR_GRADIENT_PROPERTY_EVENT(TMPro::FastAction_1<TMPro::TMP_ColorGradient*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_COLOR_GRADIENT_PROPERTY_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "COLOR_GRADIENT_PROPERTY_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction TMP_SETTINGS_PROPERTY_EVENT
TMPro::FastAction* TMPro::TMPro_EventManager::_get_TMP_SETTINGS_PROPERTY_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_TMP_SETTINGS_PROPERTY_EVENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FastAction*>("TMPro", "TMPro_EventManager", "TMP_SETTINGS_PROPERTY_EVENT"));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction TMP_SETTINGS_PROPERTY_EVENT
void TMPro::TMPro_EventManager::_set_TMP_SETTINGS_PROPERTY_EVENT(TMPro::FastAction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_TMP_SETTINGS_PROPERTY_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "TMP_SETTINGS_PROPERTY_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction RESOURCE_LOAD_EVENT
TMPro::FastAction* TMPro::TMPro_EventManager::_get_RESOURCE_LOAD_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_RESOURCE_LOAD_EVENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FastAction*>("TMPro", "TMPro_EventManager", "RESOURCE_LOAD_EVENT"));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction RESOURCE_LOAD_EVENT
void TMPro::TMPro_EventManager::_set_RESOURCE_LOAD_EVENT(TMPro::FastAction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_RESOURCE_LOAD_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "RESOURCE_LOAD_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`2<System.Boolean,TMPro.TextMeshProUGUI> TEXTMESHPRO_UGUI_PROPERTY_EVENT
TMPro::FastAction_2<bool, TMPro::TextMeshProUGUI*>* TMPro::TMPro_EventManager::_get_TEXTMESHPRO_UGUI_PROPERTY_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_TEXTMESHPRO_UGUI_PROPERTY_EVENT");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<TMPro::FastAction_2<bool, TMPro::TextMeshProUGUI*>*>("TMPro", "TMPro_EventManager", "TEXTMESHPRO_UGUI_PROPERTY_EVENT")));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`2<System.Boolean,TMPro.TextMeshProUGUI> TEXTMESHPRO_UGUI_PROPERTY_EVENT
void TMPro::TMPro_EventManager::_set_TEXTMESHPRO_UGUI_PROPERTY_EVENT(TMPro::FastAction_2<bool, TMPro::TextMeshProUGUI*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_TEXTMESHPRO_UGUI_PROPERTY_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "TEXTMESHPRO_UGUI_PROPERTY_EVENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction OnPreRenderObject_Event
TMPro::FastAction* TMPro::TMPro_EventManager::_get_OnPreRenderObject_Event() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_OnPreRenderObject_Event");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FastAction*>("TMPro", "TMPro_EventManager", "OnPreRenderObject_Event"));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction OnPreRenderObject_Event
void TMPro::TMPro_EventManager::_set_OnPreRenderObject_Event(TMPro::FastAction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_OnPreRenderObject_Event");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "OnPreRenderObject_Event", value));
}
// Autogenerated static field getter
// Get static field: static public readonly TMPro.FastAction`1<UnityEngine.Object> TEXT_CHANGED_EVENT
TMPro::FastAction_1<UnityEngine::Object*>* TMPro::TMPro_EventManager::_get_TEXT_CHANGED_EVENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_get_TEXT_CHANGED_EVENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::FastAction_1<UnityEngine::Object*>*>("TMPro", "TMPro_EventManager", "TEXT_CHANGED_EVENT"));
}
// Autogenerated static field setter
// Set static field: static public readonly TMPro.FastAction`1<UnityEngine.Object> TEXT_CHANGED_EVENT
void TMPro::TMPro_EventManager::_set_TEXT_CHANGED_EVENT(TMPro::FastAction_1<UnityEngine::Object*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::_set_TEXT_CHANGED_EVENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMPro_EventManager", "TEXT_CHANGED_EVENT", value));
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_PRE_RENDER_OBJECT_CHANGED
void TMPro::TMPro_EventManager::ON_PRE_RENDER_OBJECT_CHANGED() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_PRE_RENDER_OBJECT_CHANGED");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_PRE_RENDER_OBJECT_CHANGED", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_MATERIAL_PROPERTY_CHANGED
void TMPro::TMPro_EventManager::ON_MATERIAL_PROPERTY_CHANGED(bool isChanged, UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_MATERIAL_PROPERTY_CHANGED");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_MATERIAL_PROPERTY_CHANGED", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(isChanged, mat)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, isChanged, mat);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_FONT_PROPERTY_CHANGED
void TMPro::TMPro_EventManager::ON_FONT_PROPERTY_CHANGED(bool isChanged, TMPro::TMP_FontAsset* font) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_FONT_PROPERTY_CHANGED");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_FONT_PROPERTY_CHANGED", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(isChanged, font)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, isChanged, font);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_SPRITE_ASSET_PROPERTY_CHANGED
void TMPro::TMPro_EventManager::ON_SPRITE_ASSET_PROPERTY_CHANGED(bool isChanged, UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_SPRITE_ASSET_PROPERTY_CHANGED");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_SPRITE_ASSET_PROPERTY_CHANGED", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(isChanged, obj)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, isChanged, obj);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_TEXTMESHPRO_PROPERTY_CHANGED
void TMPro::TMPro_EventManager::ON_TEXTMESHPRO_PROPERTY_CHANGED(bool isChanged, TMPro::TextMeshPro* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_TEXTMESHPRO_PROPERTY_CHANGED");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_TEXTMESHPRO_PROPERTY_CHANGED", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(isChanged, obj)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, isChanged, obj);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_DRAG_AND_DROP_MATERIAL_CHANGED
void TMPro::TMPro_EventManager::ON_DRAG_AND_DROP_MATERIAL_CHANGED(UnityEngine::GameObject* sender, UnityEngine::Material* currentMaterial, UnityEngine::Material* newMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_DRAG_AND_DROP_MATERIAL_CHANGED");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_DRAG_AND_DROP_MATERIAL_CHANGED", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sender, currentMaterial, newMaterial)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sender, currentMaterial, newMaterial);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_TEXT_STYLE_PROPERTY_CHANGED
void TMPro::TMPro_EventManager::ON_TEXT_STYLE_PROPERTY_CHANGED(bool isChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_TEXT_STYLE_PROPERTY_CHANGED");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_TEXT_STYLE_PROPERTY_CHANGED", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(isChanged)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, isChanged);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_COLOR_GRAIDENT_PROPERTY_CHANGED
void TMPro::TMPro_EventManager::ON_COLOR_GRAIDENT_PROPERTY_CHANGED(TMPro::TMP_ColorGradient* gradient) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_COLOR_GRAIDENT_PROPERTY_CHANGED");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_COLOR_GRAIDENT_PROPERTY_CHANGED", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(gradient)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, gradient);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_TEXT_CHANGED
void TMPro::TMPro_EventManager::ON_TEXT_CHANGED(UnityEngine::Object* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_TEXT_CHANGED");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_TEXT_CHANGED", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_TMP_SETTINGS_CHANGED
void TMPro::TMPro_EventManager::ON_TMP_SETTINGS_CHANGED() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_TMP_SETTINGS_CHANGED");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_TMP_SETTINGS_CHANGED", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_RESOURCES_LOADED
void TMPro::TMPro_EventManager::ON_RESOURCES_LOADED() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_RESOURCES_LOADED");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_RESOURCES_LOADED", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_TEXTMESHPRO_UGUI_PROPERTY_CHANGED
void TMPro::TMPro_EventManager::ON_TEXTMESHPRO_UGUI_PROPERTY_CHANGED(bool isChanged, TMPro::TextMeshProUGUI* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_TEXTMESHPRO_UGUI_PROPERTY_CHANGED");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_TEXTMESHPRO_UGUI_PROPERTY_CHANGED", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(isChanged, obj)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, isChanged, obj);
}
// Autogenerated method: TMPro.TMPro_EventManager.ON_COMPUTE_DT_EVENT
void TMPro::TMPro_EventManager::ON_COMPUTE_DT_EVENT(::Il2CppObject* Sender, TMPro::Compute_DT_EventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::ON_COMPUTE_DT_EVENT");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", "ON_COMPUTE_DT_EVENT", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(Sender, e)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, Sender, e);
}
// Autogenerated method: TMPro.TMPro_EventManager..cctor
void TMPro::TMPro_EventManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_EventManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMPro_EventManager", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.Compute_DT_EventArgs
#include "TMPro/Compute_DT_EventArgs.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMPro_ExtensionMethods
#include "TMPro/TMPro_ExtensionMethods.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Color32
#include "UnityEngine/Color32.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.TMPro_ExtensionMethods.ArrayToString
::Il2CppString* TMPro::TMPro_ExtensionMethods::ArrayToString(::Array<::Il2CppChar>* chars) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::ArrayToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "ArrayToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(chars)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, chars);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.IntToString
::Il2CppString* TMPro::TMPro_ExtensionMethods::IntToString(::Array<int>* unicodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::IntToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "IntToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(unicodes)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, unicodes);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.IntToString
::Il2CppString* TMPro::TMPro_ExtensionMethods::IntToString(::Array<int>* unicodes, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::IntToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "IntToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(unicodes, start, length)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, unicodes, start, length);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.Compare
bool TMPro::TMPro_ExtensionMethods::Compare(UnityEngine::Color32 a, UnityEngine::Color32 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::Compare");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "Compare", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.CompareRGB
bool TMPro::TMPro_ExtensionMethods::CompareRGB(UnityEngine::Color32 a, UnityEngine::Color32 b) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::CompareRGB");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "CompareRGB", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.Compare
bool TMPro::TMPro_ExtensionMethods::Compare(UnityEngine::Color a, UnityEngine::Color b) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::Compare");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "Compare", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.CompareRGB
bool TMPro::TMPro_ExtensionMethods::CompareRGB(UnityEngine::Color a, UnityEngine::Color b) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::CompareRGB");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "CompareRGB", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.Multiply
UnityEngine::Color32 TMPro::TMPro_ExtensionMethods::Multiply(UnityEngine::Color32 c1, UnityEngine::Color32 c2) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::Multiply");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "Multiply", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c1, c2)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color32, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c1, c2);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.Tint
UnityEngine::Color32 TMPro::TMPro_ExtensionMethods::Tint(UnityEngine::Color32 c1, UnityEngine::Color32 c2) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::Tint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "Tint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c1, c2)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color32, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c1, c2);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.Tint
UnityEngine::Color32 TMPro::TMPro_ExtensionMethods::Tint(UnityEngine::Color32 c1, float tint) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::Tint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "Tint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c1, tint)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color32, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c1, tint);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.Compare
bool TMPro::TMPro_ExtensionMethods::Compare(UnityEngine::Vector3 v1, UnityEngine::Vector3 v2, int accuracy) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::Compare");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "Compare", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(v1, v2, accuracy)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v1, v2, accuracy);
}
// Autogenerated method: TMPro.TMPro_ExtensionMethods.Compare
bool TMPro::TMPro_ExtensionMethods::Compare(UnityEngine::Quaternion q1, UnityEngine::Quaternion q2, int accuracy) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMPro_ExtensionMethods::Compare");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMPro_ExtensionMethods", "Compare", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(q1, q2, accuracy)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, q1, q2, accuracy);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_Math
#include "TMPro/TMP_Math.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single FLOAT_MAX
float TMPro::TMP_Math::_get_FLOAT_MAX() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_get_FLOAT_MAX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("TMPro", "TMP_Math", "FLOAT_MAX"));
}
// Autogenerated static field setter
// Set static field: static public System.Single FLOAT_MAX
void TMPro::TMP_Math::_set_FLOAT_MAX(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_set_FLOAT_MAX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Math", "FLOAT_MAX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single FLOAT_MIN
float TMPro::TMP_Math::_get_FLOAT_MIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_get_FLOAT_MIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("TMPro", "TMP_Math", "FLOAT_MIN"));
}
// Autogenerated static field setter
// Set static field: static public System.Single FLOAT_MIN
void TMPro::TMP_Math::_set_FLOAT_MIN(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_set_FLOAT_MIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Math", "FLOAT_MIN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 INT_MAX
int TMPro::TMP_Math::_get_INT_MAX() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_get_INT_MAX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "TMP_Math", "INT_MAX"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 INT_MAX
void TMPro::TMP_Math::_set_INT_MAX(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_set_INT_MAX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Math", "INT_MAX", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 INT_MIN
int TMPro::TMP_Math::_get_INT_MIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_get_INT_MIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "TMP_Math", "INT_MIN"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 INT_MIN
void TMPro::TMP_Math::_set_INT_MIN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_set_INT_MIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Math", "INT_MIN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single FLOAT_UNSET
float TMPro::TMP_Math::_get_FLOAT_UNSET() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_get_FLOAT_UNSET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("TMPro", "TMP_Math", "FLOAT_UNSET"));
}
// Autogenerated static field setter
// Set static field: static public System.Single FLOAT_UNSET
void TMPro::TMP_Math::_set_FLOAT_UNSET(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_set_FLOAT_UNSET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Math", "FLOAT_UNSET", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 INT_UNSET
int TMPro::TMP_Math::_get_INT_UNSET() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_get_INT_UNSET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("TMPro", "TMP_Math", "INT_UNSET"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 INT_UNSET
void TMPro::TMP_Math::_set_INT_UNSET(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_set_INT_UNSET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Math", "INT_UNSET", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Vector2 MAX_16BIT
UnityEngine::Vector2 TMPro::TMP_Math::_get_MAX_16BIT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_get_MAX_16BIT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("TMPro", "TMP_Math", "MAX_16BIT"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Vector2 MAX_16BIT
void TMPro::TMP_Math::_set_MAX_16BIT(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_set_MAX_16BIT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Math", "MAX_16BIT", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Vector2 MIN_16BIT
UnityEngine::Vector2 TMPro::TMP_Math::_get_MIN_16BIT() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_get_MIN_16BIT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("TMPro", "TMP_Math", "MIN_16BIT"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Vector2 MIN_16BIT
void TMPro::TMP_Math::_set_MIN_16BIT(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::_set_MIN_16BIT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_Math", "MIN_16BIT", value));
}
// Autogenerated method: TMPro.TMP_Math.Approximately
bool TMPro::TMP_Math::Approximately(float a, float b) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::Approximately");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_Math", "Approximately", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: TMPro.TMP_Math..cctor
void TMPro::TMP_Math::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_Math::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TMP_Math", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TMP_VertexDataUpdateFlags
#include "TMPro/TMP_VertexDataUpdateFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_VertexDataUpdateFlags None
TMPro::TMP_VertexDataUpdateFlags TMPro::TMP_VertexDataUpdateFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_VertexDataUpdateFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_VertexDataUpdateFlags>("TMPro", "TMP_VertexDataUpdateFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_VertexDataUpdateFlags None
void TMPro::TMP_VertexDataUpdateFlags::_set_None(TMPro::TMP_VertexDataUpdateFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_VertexDataUpdateFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_VertexDataUpdateFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_VertexDataUpdateFlags Vertices
TMPro::TMP_VertexDataUpdateFlags TMPro::TMP_VertexDataUpdateFlags::_get_Vertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_VertexDataUpdateFlags::_get_Vertices");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_VertexDataUpdateFlags>("TMPro", "TMP_VertexDataUpdateFlags", "Vertices"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_VertexDataUpdateFlags Vertices
void TMPro::TMP_VertexDataUpdateFlags::_set_Vertices(TMPro::TMP_VertexDataUpdateFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_VertexDataUpdateFlags::_set_Vertices");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_VertexDataUpdateFlags", "Vertices", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_VertexDataUpdateFlags Uv0
TMPro::TMP_VertexDataUpdateFlags TMPro::TMP_VertexDataUpdateFlags::_get_Uv0() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_VertexDataUpdateFlags::_get_Uv0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_VertexDataUpdateFlags>("TMPro", "TMP_VertexDataUpdateFlags", "Uv0"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_VertexDataUpdateFlags Uv0
void TMPro::TMP_VertexDataUpdateFlags::_set_Uv0(TMPro::TMP_VertexDataUpdateFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_VertexDataUpdateFlags::_set_Uv0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_VertexDataUpdateFlags", "Uv0", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_VertexDataUpdateFlags Uv2
TMPro::TMP_VertexDataUpdateFlags TMPro::TMP_VertexDataUpdateFlags::_get_Uv2() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_VertexDataUpdateFlags::_get_Uv2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_VertexDataUpdateFlags>("TMPro", "TMP_VertexDataUpdateFlags", "Uv2"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_VertexDataUpdateFlags Uv2
void TMPro::TMP_VertexDataUpdateFlags::_set_Uv2(TMPro::TMP_VertexDataUpdateFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_VertexDataUpdateFlags::_set_Uv2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_VertexDataUpdateFlags", "Uv2", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_VertexDataUpdateFlags Uv4
TMPro::TMP_VertexDataUpdateFlags TMPro::TMP_VertexDataUpdateFlags::_get_Uv4() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_VertexDataUpdateFlags::_get_Uv4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_VertexDataUpdateFlags>("TMPro", "TMP_VertexDataUpdateFlags", "Uv4"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_VertexDataUpdateFlags Uv4
void TMPro::TMP_VertexDataUpdateFlags::_set_Uv4(TMPro::TMP_VertexDataUpdateFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_VertexDataUpdateFlags::_set_Uv4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_VertexDataUpdateFlags", "Uv4", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_VertexDataUpdateFlags Colors32
TMPro::TMP_VertexDataUpdateFlags TMPro::TMP_VertexDataUpdateFlags::_get_Colors32() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_VertexDataUpdateFlags::_get_Colors32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_VertexDataUpdateFlags>("TMPro", "TMP_VertexDataUpdateFlags", "Colors32"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_VertexDataUpdateFlags Colors32
void TMPro::TMP_VertexDataUpdateFlags::_set_Colors32(TMPro::TMP_VertexDataUpdateFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_VertexDataUpdateFlags::_set_Colors32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_VertexDataUpdateFlags", "Colors32", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TMP_VertexDataUpdateFlags All
TMPro::TMP_VertexDataUpdateFlags TMPro::TMP_VertexDataUpdateFlags::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_VertexDataUpdateFlags::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TMP_VertexDataUpdateFlags>("TMPro", "TMP_VertexDataUpdateFlags", "All"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TMP_VertexDataUpdateFlags All
void TMPro::TMP_VertexDataUpdateFlags::_set_All(TMPro::TMP_VertexDataUpdateFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_VertexDataUpdateFlags::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TMP_VertexDataUpdateFlags", "All", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.VertexGradient
#include "TMPro/VertexGradient.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_LinkInfo
#include "TMPro/TMP_LinkInfo.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.TMP_LinkInfo.SetLinkID
void TMPro::TMP_LinkInfo::SetLinkID(::Array<::Il2CppChar>* text, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_LinkInfo::SetLinkID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetLinkID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, startIndex, length)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, text, startIndex, length);
}
// Autogenerated method: TMPro.TMP_LinkInfo.GetLinkText
::Il2CppString* TMPro::TMP_LinkInfo::GetLinkText() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_LinkInfo::GetLinkText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetLinkText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: TMPro.TMP_LinkInfo.GetLinkID
::Il2CppString* TMPro::TMP_LinkInfo::GetLinkID() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_LinkInfo::GetLinkID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetLinkID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TMP_WordInfo
#include "TMPro/TMP_WordInfo.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.TMP_WordInfo.GetWord
::Il2CppString* TMPro::TMP_WordInfo::GetWord() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TMP_WordInfo::GetWord");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetWord", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.Extents
#include "TMPro/Extents.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.Extents.ToString
::Il2CppString* TMPro::Extents::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::Extents::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.Mesh_Extents
#include "TMPro/Mesh_Extents.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.Mesh_Extents.ToString
::Il2CppString* TMPro::Mesh_Extents::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::Mesh_Extents::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: TMPro.TMP_SubMesh
#include "TMPro/TMP_SubMesh.hpp"
// Including type: UnityEngine.Vector4
#include "UnityEngine/Vector4.hpp"
// Including type: TMPro.TextContainer
#include "TMPro/TextContainer.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Color32
#include "UnityEngine/Color32.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.UI.CanvasUpdate
#include "UnityEngine/UI/CanvasUpdate.hpp"
// Including type: TMPro.TMP_TextInfo
#include "TMPro/TMP_TextInfo.hpp"
// Including type: TMPro.TMP_VertexDataUpdateFlags
#include "TMPro/TMP_VertexDataUpdateFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.TextMeshPro.UpdateEnvMapMatrix
void TMPro::TextMeshPro::UpdateEnvMapMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::UpdateEnvMapMatrix");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateEnvMapMatrix", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetMask
void TMPro::TextMeshPro::SetMask(TMPro::MaskingTypes maskType) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetMask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetMask", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(maskType)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, maskType);
}
// Autogenerated method: TMPro.TextMeshPro.SetMaskCoordinates
void TMPro::TextMeshPro::SetMaskCoordinates(UnityEngine::Vector4 coords) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetMaskCoordinates");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetMaskCoordinates", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(coords)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, coords);
}
// Autogenerated method: TMPro.TextMeshPro.SetMaskCoordinates
void TMPro::TextMeshPro::SetMaskCoordinates(UnityEngine::Vector4 coords, float softX, float softY) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetMaskCoordinates");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetMaskCoordinates", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(coords, softX, softY)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, coords, softX, softY);
}
// Autogenerated method: TMPro.TextMeshPro.EnableMasking
void TMPro::TextMeshPro::EnableMasking() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::EnableMasking");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EnableMasking", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.DisableMasking
void TMPro::TextMeshPro::DisableMasking() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::DisableMasking");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DisableMasking", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateMask
void TMPro::TextMeshPro::UpdateMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::UpdateMask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateMask", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.CreateMaterialInstance
void TMPro::TextMeshPro::CreateMaterialInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::CreateMaterialInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateMaterialInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetPerspectiveCorrection
void TMPro::TextMeshPro::SetPerspectiveCorrection() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetPerspectiveCorrection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetPerspectiveCorrection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.OnPreRenderObject
void TMPro::TextMeshPro::OnPreRenderObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::OnPreRenderObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnPreRenderObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetMeshFilters
void TMPro::TextMeshPro::SetMeshFilters(bool state) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetMeshFilters");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetMeshFilters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateSDFScale
void TMPro::TextMeshPro::UpdateSDFScale(float scaleDelta) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::UpdateSDFScale");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateSDFScale", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(scaleDelta)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, scaleDelta);
}
// Autogenerated method: TMPro.TextMeshPro.get_sortingLayerID
int TMPro::TextMeshPro::get_sortingLayerID() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::get_sortingLayerID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_sortingLayerID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.set_sortingLayerID
void TMPro::TextMeshPro::set_sortingLayerID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::set_sortingLayerID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_sortingLayerID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextMeshPro.get_sortingOrder
int TMPro::TextMeshPro::get_sortingOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::get_sortingOrder");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_sortingOrder", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.set_sortingOrder
void TMPro::TextMeshPro::set_sortingOrder(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::set_sortingOrder");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_sortingOrder", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextMeshPro.get_textContainer
TMPro::TextContainer* TMPro::TextMeshPro::get_textContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::get_textContainer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_textContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TextContainer*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.get_renderer
UnityEngine::Renderer* TMPro::TextMeshPro::get_renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::get_renderer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_renderer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Renderer*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.get_meshFilter
UnityEngine::MeshFilter* TMPro::TextMeshPro::get_meshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::get_meshFilter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_meshFilter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::MeshFilter*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.get_maskType
TMPro::MaskingTypes TMPro::TextMeshPro::get_maskType() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::get_maskType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_maskType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<TMPro::MaskingTypes, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.set_maskType
void TMPro::TextMeshPro::set_maskType(TMPro::MaskingTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::set_maskType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_maskType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextMeshPro.SetMask
void TMPro::TextMeshPro::SetMask(TMPro::MaskingTypes type, UnityEngine::Vector4 maskCoords) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetMask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetMask", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, maskCoords)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, type, maskCoords);
}
// Autogenerated method: TMPro.TextMeshPro.SetMask
void TMPro::TextMeshPro::SetMask(TMPro::MaskingTypes type, UnityEngine::Vector4 maskCoords, float softnessX, float softnessY) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetMask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetMask", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, maskCoords, softnessX, softnessY)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, type, maskCoords, softnessX, softnessY);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateFontAsset
void TMPro::TextMeshPro::UpdateFontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::UpdateFontAsset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateFontAsset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.CalculateLayoutInputHorizontal
void TMPro::TextMeshPro::CalculateLayoutInputHorizontal_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::CalculateLayoutInputHorizontal_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CalculateLayoutInputHorizontal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.CalculateLayoutInputVertical
void TMPro::TextMeshPro::CalculateLayoutInputVertical_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::CalculateLayoutInputVertical_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CalculateLayoutInputVertical", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.Awake
void TMPro::TextMeshPro::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.OnEnable
void TMPro::TextMeshPro::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.OnDisable
void TMPro::TextMeshPro::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.OnDestroy
void TMPro::TextMeshPro::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.LoadFontAsset
void TMPro::TextMeshPro::LoadFontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::LoadFontAsset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LoadFontAsset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.GetMaterial
UnityEngine::Material* TMPro::TextMeshPro::GetMaterial(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::GetMaterial");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMaterial", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mat)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TextMeshPro.GetMaterials
::Array<UnityEngine::Material*>* TMPro::TextMeshPro::GetMaterials(::Array<UnityEngine::Material*>* mats) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::GetMaterials");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMaterials", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mats)));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Material*>*, false>(this, ___internal__method, mats);
}
// Autogenerated method: TMPro.TextMeshPro.SetSharedMaterial
void TMPro::TextMeshPro::SetSharedMaterial(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetSharedMaterial");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetSharedMaterial", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mat)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TextMeshPro.GetSharedMaterials
::Array<UnityEngine::Material*>* TMPro::TextMeshPro::GetSharedMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::GetSharedMaterials");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSharedMaterials", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Material*>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetSharedMaterials
void TMPro::TextMeshPro::SetSharedMaterials(::Array<UnityEngine::Material*>* materials) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetSharedMaterials");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetSharedMaterials", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(materials)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, materials);
}
// Autogenerated method: TMPro.TextMeshPro.SetOutlineThickness
void TMPro::TextMeshPro::SetOutlineThickness(float thickness) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetOutlineThickness");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetOutlineThickness", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(thickness)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, thickness);
}
// Autogenerated method: TMPro.TextMeshPro.SetFaceColor
void TMPro::TextMeshPro::SetFaceColor(UnityEngine::Color32 color) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetFaceColor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetFaceColor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(color)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: TMPro.TextMeshPro.SetOutlineColor
void TMPro::TextMeshPro::SetOutlineColor(UnityEngine::Color32 color) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetOutlineColor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetOutlineColor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(color)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: TMPro.TextMeshPro.SetShaderDepth
void TMPro::TextMeshPro::SetShaderDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetShaderDepth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetShaderDepth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetCulling
void TMPro::TextMeshPro::SetCulling() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetCulling");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetCulling", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.GetPaddingForMaterial
float TMPro::TextMeshPro::GetPaddingForMaterial(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::GetPaddingForMaterial");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPaddingForMaterial", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mat)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TextMeshPro.GetPaddingForMaterial
float TMPro::TextMeshPro::GetPaddingForMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::GetPaddingForMaterial");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPaddingForMaterial", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetArraySizes
int TMPro::TextMeshPro::SetArraySizes(::Array<TMPro::TMP_Text::UnicodeChar>* chars) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetArraySizes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetArraySizes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(chars)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars);
}
// Autogenerated method: TMPro.TextMeshPro.ComputeMarginSize
void TMPro::TextMeshPro::ComputeMarginSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::ComputeMarginSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ComputeMarginSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.OnDidApplyAnimationProperties
void TMPro::TextMeshPro::OnDidApplyAnimationProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::OnDidApplyAnimationProperties");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDidApplyAnimationProperties", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.OnTransformParentChanged
void TMPro::TextMeshPro::OnTransformParentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::OnTransformParentChanged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnTransformParentChanged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.OnRectTransformDimensionsChange
void TMPro::TextMeshPro::OnRectTransformDimensionsChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::OnRectTransformDimensionsChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnRectTransformDimensionsChange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.InternalUpdate
void TMPro::TextMeshPro::InternalUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::InternalUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.GenerateTextMesh
void TMPro::TextMeshPro::GenerateTextMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::GenerateTextMesh");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GenerateTextMesh", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.GetTextContainerLocalCorners
::Array<UnityEngine::Vector3>* TMPro::TextMeshPro::GetTextContainerLocalCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::GetTextContainerLocalCorners");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTextContainerLocalCorners", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector3>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetActiveSubMeshes
void TMPro::TextMeshPro::SetActiveSubMeshes(bool state) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetActiveSubMeshes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetActiveSubMeshes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: TMPro.TextMeshPro.ClearSubMeshObjects
void TMPro::TextMeshPro::ClearSubMeshObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::ClearSubMeshObjects");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearSubMeshObjects", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.GetCompoundBounds
UnityEngine::Bounds TMPro::TextMeshPro::GetCompoundBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::GetCompoundBounds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCompoundBounds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.AdjustLineOffset
void TMPro::TextMeshPro::AdjustLineOffset(int startIndex, int endIndex, float offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::AdjustLineOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AdjustLineOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(startIndex, endIndex, offset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, startIndex, endIndex, offset);
}
// Autogenerated method: TMPro.TextMeshPro.get_autoSizeTextContainer
bool TMPro::TextMeshPro::get_autoSizeTextContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::get_autoSizeTextContainer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_autoSizeTextContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.set_autoSizeTextContainer
void TMPro::TextMeshPro::set_autoSizeTextContainer(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::set_autoSizeTextContainer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_autoSizeTextContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextMeshPro.get_transform
UnityEngine::Transform* TMPro::TextMeshPro::get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::get_transform");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_transform", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.get_mesh
UnityEngine::Mesh* TMPro::TextMeshPro::get_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::get_mesh");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_mesh", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetVerticesDirty
void TMPro::TextMeshPro::SetVerticesDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetVerticesDirty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetVerticesDirty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetLayoutDirty
void TMPro::TextMeshPro::SetLayoutDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetLayoutDirty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLayoutDirty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetMaterialDirty
void TMPro::TextMeshPro::SetMaterialDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetMaterialDirty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetMaterialDirty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.SetAllDirty
void TMPro::TextMeshPro::SetAllDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::SetAllDirty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetAllDirty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.Rebuild
void TMPro::TextMeshPro::Rebuild(UnityEngine::UI::CanvasUpdate update) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::Rebuild");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Rebuild", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(update)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, update);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateMaterial
void TMPro::TextMeshPro::UpdateMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::UpdateMaterial");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateMaterial", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateMeshPadding
void TMPro::TextMeshPro::UpdateMeshPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::UpdateMeshPadding");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateMeshPadding", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.ForceMeshUpdate
void TMPro::TextMeshPro::ForceMeshUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::ForceMeshUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ForceMeshUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshPro.ForceMeshUpdate
void TMPro::TextMeshPro::ForceMeshUpdate(bool ignoreInactive) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::ForceMeshUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ForceMeshUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ignoreInactive)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ignoreInactive);
}
// Autogenerated method: TMPro.TextMeshPro.GetTextInfo
TMPro::TMP_TextInfo* TMPro::TextMeshPro::GetTextInfo(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::GetTextInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTextInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text)));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_TextInfo*, false>(this, ___internal__method, text);
}
// Autogenerated method: TMPro.TextMeshPro.ClearMesh
void TMPro::TextMeshPro::ClearMesh(bool updateMesh) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::ClearMesh");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearMesh", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(updateMesh)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, updateMesh);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateGeometry
void TMPro::TextMeshPro::UpdateGeometry(UnityEngine::Mesh* mesh, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::UpdateGeometry");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateGeometry", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mesh, index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, mesh, index);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateVertexData
void TMPro::TextMeshPro::UpdateVertexData(TMPro::TMP_VertexDataUpdateFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::UpdateVertexData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateVertexData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(flags)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, flags);
}
// Autogenerated method: TMPro.TextMeshPro.UpdateVertexData
void TMPro::TextMeshPro::UpdateVertexData() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshPro::UpdateVertexData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateVertexData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: TMPro.TMP_SubMeshUI
#include "TMPro/TMP_SubMeshUI.hpp"
// Including type: UnityEngine.CanvasRenderer
#include "UnityEngine/CanvasRenderer.hpp"
// Including type: UnityEngine.Canvas
#include "UnityEngine/Canvas.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Color32
#include "UnityEngine/Color32.hpp"
// Including type: UnityEngine.Bounds
#include "UnityEngine/Bounds.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.UI.CanvasUpdate
#include "UnityEngine/UI/CanvasUpdate.hpp"
// Including type: UnityEngine.Rect
#include "UnityEngine/Rect.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: TMPro.TMP_TextInfo
#include "TMPro/TMP_TextInfo.hpp"
// Including type: TMPro.TMP_VertexDataUpdateFlags
#include "TMPro/TMP_VertexDataUpdateFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.TextMeshProUGUI.GetCanvas
UnityEngine::Canvas* TMPro::TextMeshProUGUI::GetCanvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::GetCanvas");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCanvas", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Canvas*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateEnvMapMatrix
void TMPro::TextMeshProUGUI::UpdateEnvMapMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::UpdateEnvMapMatrix");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateEnvMapMatrix", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.EnableMasking
void TMPro::TextMeshProUGUI::EnableMasking() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::EnableMasking");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EnableMasking", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.DisableMasking
void TMPro::TextMeshProUGUI::DisableMasking() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::DisableMasking");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DisableMasking", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateMask
void TMPro::TextMeshProUGUI::UpdateMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::UpdateMask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateMask", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetPerspectiveCorrection
void TMPro::TextMeshProUGUI::SetPerspectiveCorrection() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::SetPerspectiveCorrection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetPerspectiveCorrection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetMeshArrays
void TMPro::TextMeshProUGUI::SetMeshArrays(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::SetMeshArrays");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetMeshArrays", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(size)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: TMPro.TextMeshProUGUI.OnPreRenderCanvas
void TMPro::TextMeshProUGUI::OnPreRenderCanvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::OnPreRenderCanvas");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnPreRenderCanvas", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateSDFScale
void TMPro::TextMeshProUGUI::UpdateSDFScale(float scaleDelta) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::UpdateSDFScale");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateSDFScale", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(scaleDelta)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, scaleDelta);
}
// Autogenerated method: TMPro.TextMeshProUGUI.CalculateLayoutInputHorizontal
void TMPro::TextMeshProUGUI::CalculateLayoutInputHorizontal_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::CalculateLayoutInputHorizontal_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CalculateLayoutInputHorizontal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.CalculateLayoutInputVertical
void TMPro::TextMeshProUGUI::CalculateLayoutInputVertical_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::CalculateLayoutInputVertical_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CalculateLayoutInputVertical", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateSubObjectPivot
void TMPro::TextMeshProUGUI::UpdateSubObjectPivot() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::UpdateSubObjectPivot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateSubObjectPivot", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.get_maskOffset
UnityEngine::Vector4 TMPro::TextMeshProUGUI::get_maskOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::get_maskOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_maskOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector4, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.set_maskOffset
void TMPro::TextMeshProUGUI::set_maskOffset(UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::set_maskOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_maskOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateFontAsset
void TMPro::TextMeshProUGUI::UpdateFontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::UpdateFontAsset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateFontAsset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.Awake
void TMPro::TextMeshProUGUI::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.OnEnable
void TMPro::TextMeshProUGUI::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.OnDisable
void TMPro::TextMeshProUGUI::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.OnDestroy
void TMPro::TextMeshProUGUI::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.LoadFontAsset
void TMPro::TextMeshProUGUI::LoadFontAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::LoadFontAsset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LoadFontAsset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetMaterial
UnityEngine::Material* TMPro::TextMeshProUGUI::GetMaterial(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::GetMaterial");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMaterial", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mat)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetMaterials
::Array<UnityEngine::Material*>* TMPro::TextMeshProUGUI::GetMaterials(::Array<UnityEngine::Material*>* mats) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::GetMaterials");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMaterials", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mats)));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Material*>*, false>(this, ___internal__method, mats);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetSharedMaterial
void TMPro::TextMeshProUGUI::SetSharedMaterial(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::SetSharedMaterial");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetSharedMaterial", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mat)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetSharedMaterials
::Array<UnityEngine::Material*>* TMPro::TextMeshProUGUI::GetSharedMaterials() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::GetSharedMaterials");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSharedMaterials", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Material*>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetSharedMaterials
void TMPro::TextMeshProUGUI::SetSharedMaterials(::Array<UnityEngine::Material*>* materials) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::SetSharedMaterials");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetSharedMaterials", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(materials)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, materials);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetOutlineThickness
void TMPro::TextMeshProUGUI::SetOutlineThickness(float thickness) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::SetOutlineThickness");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetOutlineThickness", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(thickness)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, thickness);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetFaceColor
void TMPro::TextMeshProUGUI::SetFaceColor(UnityEngine::Color32 color) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::SetFaceColor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetFaceColor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(color)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetOutlineColor
void TMPro::TextMeshProUGUI::SetOutlineColor(UnityEngine::Color32 color) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::SetOutlineColor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetOutlineColor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(color)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetShaderDepth
void TMPro::TextMeshProUGUI::SetShaderDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::SetShaderDepth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetShaderDepth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetCulling
void TMPro::TextMeshProUGUI::SetCulling() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::SetCulling");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetCulling", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetPaddingForMaterial
float TMPro::TextMeshProUGUI::GetPaddingForMaterial(UnityEngine::Material* mat) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::GetPaddingForMaterial");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPaddingForMaterial", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mat)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, mat);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetPaddingForMaterial
float TMPro::TextMeshProUGUI::GetPaddingForMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::GetPaddingForMaterial");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPaddingForMaterial", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetArraySizes
int TMPro::TextMeshProUGUI::SetArraySizes(::Array<TMPro::TMP_Text::UnicodeChar>* chars) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::SetArraySizes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetArraySizes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(chars)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, chars);
}
// Autogenerated method: TMPro.TextMeshProUGUI.ComputeMarginSize
void TMPro::TextMeshProUGUI::ComputeMarginSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::ComputeMarginSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ComputeMarginSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.OnDidApplyAnimationProperties
void TMPro::TextMeshProUGUI::OnDidApplyAnimationProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::OnDidApplyAnimationProperties");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDidApplyAnimationProperties", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.OnCanvasHierarchyChanged
void TMPro::TextMeshProUGUI::OnCanvasHierarchyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::OnCanvasHierarchyChanged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnCanvasHierarchyChanged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.OnTransformParentChanged
void TMPro::TextMeshProUGUI::OnTransformParentChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::OnTransformParentChanged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnTransformParentChanged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.OnRectTransformDimensionsChange
void TMPro::TextMeshProUGUI::OnRectTransformDimensionsChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::OnRectTransformDimensionsChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnRectTransformDimensionsChange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.InternalUpdate
void TMPro::TextMeshProUGUI::InternalUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::InternalUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GenerateTextMesh
void TMPro::TextMeshProUGUI::GenerateTextMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::GenerateTextMesh");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GenerateTextMesh", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetTextContainerLocalCorners
::Array<UnityEngine::Vector3>* TMPro::TextMeshProUGUI::GetTextContainerLocalCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::GetTextContainerLocalCorners");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTextContainerLocalCorners", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector3>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetActiveSubMeshes
void TMPro::TextMeshProUGUI::SetActiveSubMeshes(bool state) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::SetActiveSubMeshes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetActiveSubMeshes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(state)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetCompoundBounds
UnityEngine::Bounds TMPro::TextMeshProUGUI::GetCompoundBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::GetCompoundBounds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCompoundBounds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Bounds, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.AdjustLineOffset
void TMPro::TextMeshProUGUI::AdjustLineOffset(int startIndex, int endIndex, float offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::AdjustLineOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AdjustLineOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(startIndex, endIndex, offset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, startIndex, endIndex, offset);
}
// Autogenerated method: TMPro.TextMeshProUGUI.get_materialForRendering
UnityEngine::Material* TMPro::TextMeshProUGUI::get_materialForRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::get_materialForRendering");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_materialForRendering", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.get_autoSizeTextContainer
bool TMPro::TextMeshProUGUI::get_autoSizeTextContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::get_autoSizeTextContainer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_autoSizeTextContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.set_autoSizeTextContainer
void TMPro::TextMeshProUGUI::set_autoSizeTextContainer(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::set_autoSizeTextContainer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_autoSizeTextContainer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextMeshProUGUI.get_mesh
UnityEngine::Mesh* TMPro::TextMeshProUGUI::get_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::get_mesh");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_mesh", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.get_canvasRenderer
UnityEngine::CanvasRenderer* TMPro::TextMeshProUGUI::get_canvasRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::get_canvasRenderer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_canvasRenderer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::CanvasRenderer*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetVerticesDirty
void TMPro::TextMeshProUGUI::SetVerticesDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::SetVerticesDirty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetVerticesDirty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetLayoutDirty
void TMPro::TextMeshProUGUI::SetLayoutDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::SetLayoutDirty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLayoutDirty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetMaterialDirty
void TMPro::TextMeshProUGUI::SetMaterialDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::SetMaterialDirty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetMaterialDirty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.SetAllDirty
void TMPro::TextMeshProUGUI::SetAllDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::SetAllDirty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetAllDirty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.Rebuild
void TMPro::TextMeshProUGUI::Rebuild(UnityEngine::UI::CanvasUpdate update) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::Rebuild");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Rebuild", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(update)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, update);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetModifiedMaterial
UnityEngine::Material* TMPro::TextMeshProUGUI::GetModifiedMaterial(UnityEngine::Material* baseMaterial) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::GetModifiedMaterial");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetModifiedMaterial", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(baseMaterial)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method, baseMaterial);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateMaterial
void TMPro::TextMeshProUGUI::UpdateMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::UpdateMaterial");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateMaterial", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.RecalculateClipping
void TMPro::TextMeshProUGUI::RecalculateClipping() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::RecalculateClipping");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RecalculateClipping", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.RecalculateMasking
void TMPro::TextMeshProUGUI::RecalculateMasking() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::RecalculateMasking");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RecalculateMasking", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.Cull
void TMPro::TextMeshProUGUI::Cull(UnityEngine::Rect clipRect, bool validRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::Cull");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Cull", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clipRect, validRect)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clipRect, validRect);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateMeshPadding
void TMPro::TextMeshProUGUI::UpdateMeshPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::UpdateMeshPadding");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateMeshPadding", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.InternalCrossFadeColor
void TMPro::TextMeshProUGUI::InternalCrossFadeColor(UnityEngine::Color targetColor, float duration, bool ignoreTimeScale, bool useAlpha) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::InternalCrossFadeColor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalCrossFadeColor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(targetColor, duration, ignoreTimeScale, useAlpha)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, targetColor, duration, ignoreTimeScale, useAlpha);
}
// Autogenerated method: TMPro.TextMeshProUGUI.InternalCrossFadeAlpha
void TMPro::TextMeshProUGUI::InternalCrossFadeAlpha(float alpha, float duration, bool ignoreTimeScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::InternalCrossFadeAlpha");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalCrossFadeAlpha", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(alpha, duration, ignoreTimeScale)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, alpha, duration, ignoreTimeScale);
}
// Autogenerated method: TMPro.TextMeshProUGUI.ForceMeshUpdate
void TMPro::TextMeshProUGUI::ForceMeshUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::ForceMeshUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ForceMeshUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.ForceMeshUpdate
void TMPro::TextMeshProUGUI::ForceMeshUpdate(bool ignoreInactive) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::ForceMeshUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ForceMeshUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ignoreInactive)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ignoreInactive);
}
// Autogenerated method: TMPro.TextMeshProUGUI.GetTextInfo
TMPro::TMP_TextInfo* TMPro::TextMeshProUGUI::GetTextInfo(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::GetTextInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTextInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text)));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TMP_TextInfo*, false>(this, ___internal__method, text);
}
// Autogenerated method: TMPro.TextMeshProUGUI.ClearMesh
void TMPro::TextMeshProUGUI::ClearMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::ClearMesh");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearMesh", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateGeometry
void TMPro::TextMeshProUGUI::UpdateGeometry(UnityEngine::Mesh* mesh, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::UpdateGeometry");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateGeometry", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mesh, index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, mesh, index);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateVertexData
void TMPro::TextMeshProUGUI::UpdateVertexData(TMPro::TMP_VertexDataUpdateFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::UpdateVertexData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateVertexData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(flags)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, flags);
}
// Autogenerated method: TMPro.TextMeshProUGUI.UpdateVertexData
void TMPro::TextMeshProUGUI::UpdateVertexData() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextMeshProUGUI::UpdateVertexData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateVertexData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.TextContainerAnchors
#include "TMPro/TextContainerAnchors.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors TopLeft
TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_TopLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_get_TopLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "TopLeft"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors TopLeft
void TMPro::TextContainerAnchors::_set_TopLeft(TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_set_TopLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "TopLeft", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors Top
TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_Top() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_get_Top");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "Top"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors Top
void TMPro::TextContainerAnchors::_set_Top(TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_set_Top");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "Top", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors TopRight
TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_TopRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_get_TopRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "TopRight"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors TopRight
void TMPro::TextContainerAnchors::_set_TopRight(TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_set_TopRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "TopRight", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors Left
TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "Left"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors Left
void TMPro::TextContainerAnchors::_set_Left(TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors Middle
TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_Middle() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_get_Middle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "Middle"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors Middle
void TMPro::TextContainerAnchors::_set_Middle(TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_set_Middle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "Middle", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors Right
TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "Right"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors Right
void TMPro::TextContainerAnchors::_set_Right(TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors BottomLeft
TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_BottomLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_get_BottomLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "BottomLeft"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors BottomLeft
void TMPro::TextContainerAnchors::_set_BottomLeft(TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_set_BottomLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "BottomLeft", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors Bottom
TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_Bottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_get_Bottom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "Bottom"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors Bottom
void TMPro::TextContainerAnchors::_set_Bottom(TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_set_Bottom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "Bottom", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors BottomRight
TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_BottomRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_get_BottomRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "BottomRight"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors BottomRight
void TMPro::TextContainerAnchors::_set_BottomRight(TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_set_BottomRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "BottomRight", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.TextContainerAnchors Custom
TMPro::TextContainerAnchors TMPro::TextContainerAnchors::_get_Custom() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_get_Custom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::TextContainerAnchors>("TMPro", "TextContainerAnchors", "Custom"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.TextContainerAnchors Custom
void TMPro::TextContainerAnchors::_set_Custom(TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainerAnchors::_set_Custom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainerAnchors", "Custom", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.TextContainer
#include "TMPro/TextContainer.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.Vector2 k_defaultSize
UnityEngine::Vector2 TMPro::TextContainer::_get_k_defaultSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::_get_k_defaultSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Vector2>("TMPro", "TextContainer", "k_defaultSize"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Vector2 k_defaultSize
void TMPro::TextContainer::_set_k_defaultSize(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::_set_k_defaultSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro", "TextContainer", "k_defaultSize", value));
}
// Autogenerated method: TMPro.TextContainer.get_hasChanged
bool TMPro::TextContainer::get_hasChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::get_hasChanged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasChanged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_hasChanged
void TMPro::TextContainer::set_hasChanged(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::set_hasChanged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_hasChanged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_pivot
UnityEngine::Vector2 TMPro::TextContainer::get_pivot() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::get_pivot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_pivot", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_pivot
void TMPro::TextContainer::set_pivot(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::set_pivot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_pivot", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_anchorPosition
TMPro::TextContainerAnchors TMPro::TextContainer::get_anchorPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::get_anchorPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_anchorPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TextContainerAnchors, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_anchorPosition
void TMPro::TextContainer::set_anchorPosition(TMPro::TextContainerAnchors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::set_anchorPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_anchorPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_rect
UnityEngine::Rect TMPro::TextContainer::get_rect() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::get_rect");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rect", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rect, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_rect
void TMPro::TextContainer::set_rect(UnityEngine::Rect value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::set_rect");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_rect", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_size
UnityEngine::Vector2 TMPro::TextContainer::get_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::get_size");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_size", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_size
void TMPro::TextContainer::set_size(UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::set_size");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_size", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_width
float TMPro::TextContainer::get_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::get_width");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_width", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_width
void TMPro::TextContainer::set_width(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::set_width");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_width", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_height
float TMPro::TextContainer::get_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::get_height");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_height", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_height
void TMPro::TextContainer::set_height(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::set_height");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_height", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_isDefaultWidth
bool TMPro::TextContainer::get_isDefaultWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::get_isDefaultWidth");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isDefaultWidth", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.get_isDefaultHeight
bool TMPro::TextContainer::get_isDefaultHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::get_isDefaultHeight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isDefaultHeight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.get_isAutoFitting
bool TMPro::TextContainer::get_isAutoFitting() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::get_isAutoFitting");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isAutoFitting", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_isAutoFitting
void TMPro::TextContainer::set_isAutoFitting(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::set_isAutoFitting");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_isAutoFitting", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_corners
::Array<UnityEngine::Vector3>* TMPro::TextContainer::get_corners() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::get_corners");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_corners", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector3>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.get_worldCorners
::Array<UnityEngine::Vector3>* TMPro::TextContainer::get_worldCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::get_worldCorners");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_worldCorners", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector3>*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.get_margins
UnityEngine::Vector4 TMPro::TextContainer::get_margins() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::get_margins");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_margins", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector4, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.set_margins
void TMPro::TextContainer::set_margins(UnityEngine::Vector4 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::set_margins");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_margins", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TMPro.TextContainer.get_rectTransform
UnityEngine::RectTransform* TMPro::TextContainer::get_rectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::get_rectTransform");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rectTransform", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.get_textMeshPro
TMPro::TextMeshPro* TMPro::TextContainer::get_textMeshPro() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::get_textMeshPro");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_textMeshPro", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TextMeshPro*, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.OnContainerChanged
void TMPro::TextContainer::OnContainerChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::OnContainerChanged");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnContainerChanged", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.SetRect
void TMPro::TextContainer::SetRect(UnityEngine::Vector2 size) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::SetRect");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetRect", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(size)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: TMPro.TextContainer.UpdateCorners
void TMPro::TextContainer::UpdateCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::UpdateCorners");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateCorners", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.GetPivot
UnityEngine::Vector2 TMPro::TextContainer::GetPivot(TMPro::TextContainerAnchors anchor) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::GetPivot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPivot", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(anchor)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method, anchor);
}
// Autogenerated method: TMPro.TextContainer.GetAnchorPosition
TMPro::TextContainerAnchors TMPro::TextContainer::GetAnchorPosition(UnityEngine::Vector2 pivot) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::GetAnchorPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAnchorPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pivot)));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TextContainerAnchors, false>(this, ___internal__method, pivot);
}
// Autogenerated method: TMPro.TextContainer.Awake
void TMPro::TextContainer::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.OnEnable
void TMPro::TextContainer::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.OnDisable
void TMPro::TextContainer::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer.OnRectTransformDimensionsChange
void TMPro::TextContainer::OnRectTransformDimensionsChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::OnRectTransformDimensionsChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnRectTransformDimensionsChange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TMPro.TextContainer..cctor
void TMPro::TextContainer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::TextContainer::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("TMPro", "TextContainer", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.SpriteAssetUtilities.SpriteAssetImportFormats
#include "TMPro/SpriteAssetUtilities/SpriteAssetImportFormats.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TMPro.SpriteAssetUtilities.SpriteAssetImportFormats None
TMPro::SpriteAssetUtilities::SpriteAssetImportFormats TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::SpriteAssetUtilities::SpriteAssetImportFormats>("TMPro.SpriteAssetUtilities", "SpriteAssetImportFormats", "None"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.SpriteAssetUtilities.SpriteAssetImportFormats None
void TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::_set_None(TMPro::SpriteAssetUtilities::SpriteAssetImportFormats value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro.SpriteAssetUtilities", "SpriteAssetImportFormats", "None", value));
}
// Autogenerated static field getter
// Get static field: static public TMPro.SpriteAssetUtilities.SpriteAssetImportFormats TexturePacker
TMPro::SpriteAssetUtilities::SpriteAssetImportFormats TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::_get_TexturePacker() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::_get_TexturePacker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<TMPro::SpriteAssetUtilities::SpriteAssetImportFormats>("TMPro.SpriteAssetUtilities", "SpriteAssetImportFormats", "TexturePacker"));
}
// Autogenerated static field setter
// Set static field: static public TMPro.SpriteAssetUtilities.SpriteAssetImportFormats TexturePacker
void TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::_set_TexturePacker(TMPro::SpriteAssetUtilities::SpriteAssetImportFormats value) {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::SpriteAssetUtilities::SpriteAssetImportFormats::_set_TexturePacker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("TMPro.SpriteAssetUtilities", "SpriteAssetImportFormats", "TexturePacker", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.SpriteAssetUtilities.TexturePacker
#include "TMPro/SpriteAssetUtilities/TexturePacker.hpp"
// Including type: TMPro.SpriteAssetUtilities.TexturePacker/SpriteFrame
#include "TMPro/SpriteAssetUtilities/TexturePacker_SpriteFrame.hpp"
// Including type: TMPro.SpriteAssetUtilities.TexturePacker/SpriteSize
#include "TMPro/SpriteAssetUtilities/TexturePacker_SpriteSize.hpp"
// Including type: TMPro.SpriteAssetUtilities.TexturePacker/SpriteData
#include "TMPro/SpriteAssetUtilities/TexturePacker_SpriteData.hpp"
// Including type: TMPro.SpriteAssetUtilities.TexturePacker/SpriteDataObject
#include "TMPro/SpriteAssetUtilities/TexturePacker_SpriteDataObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.SpriteAssetUtilities.TexturePacker/SpriteFrame
#include "TMPro/SpriteAssetUtilities/TexturePacker_SpriteFrame.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.SpriteAssetUtilities.TexturePacker/SpriteFrame.ToString
::Il2CppString* TMPro::SpriteAssetUtilities::TexturePacker::SpriteFrame::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::SpriteAssetUtilities::TexturePacker::SpriteFrame::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TMPro.SpriteAssetUtilities.TexturePacker/SpriteSize
#include "TMPro/SpriteAssetUtilities/TexturePacker_SpriteSize.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TMPro.SpriteAssetUtilities.TexturePacker/SpriteSize.ToString
::Il2CppString* TMPro::SpriteAssetUtilities::TexturePacker::SpriteSize::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("TMPro::SpriteAssetUtilities::TexturePacker::SpriteSize::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TMPro.SpriteAssetUtilities.TexturePacker/SpriteDataObject
#include "TMPro/SpriteAssetUtilities/TexturePacker_SpriteDataObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.ActivationMixerPlayable
#include "UnityEngine/Timeline/ActivationMixerPlayable.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ActivationMixerPlayable.Create
UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::ActivationMixerPlayable*> UnityEngine::Timeline::ActivationMixerPlayable::Create(UnityEngine::Playables::PlayableGraph graph, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationMixerPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ActivationMixerPlayable", "Create", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, inputCount)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::ActivationMixerPlayable*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, inputCount);
}
// Autogenerated method: UnityEngine.Timeline.ActivationMixerPlayable.get_postPlaybackState
UnityEngine::Timeline::ActivationTrack::PostPlaybackState UnityEngine::Timeline::ActivationMixerPlayable::get_postPlaybackState() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationMixerPlayable::get_postPlaybackState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_postPlaybackState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ActivationTrack::PostPlaybackState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ActivationMixerPlayable.set_postPlaybackState
void UnityEngine::Timeline::ActivationMixerPlayable::set_postPlaybackState(UnityEngine::Timeline::ActivationTrack::PostPlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationMixerPlayable::set_postPlaybackState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_postPlaybackState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.ActivationMixerPlayable.OnPlayableDestroy
void UnityEngine::Timeline::ActivationMixerPlayable::OnPlayableDestroy(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationMixerPlayable::OnPlayableDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.ActivationMixerPlayable.ProcessFrame
void UnityEngine::Timeline::ActivationMixerPlayable::ProcessFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationMixerPlayable::ProcessFrame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable, info, playerData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ActivationPlayableAsset
#include "UnityEngine/Timeline/ActivationPlayableAsset.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ActivationPlayableAsset.get_clipCaps
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ActivationPlayableAsset::get_clipCaps_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationPlayableAsset::get_clipCaps_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ActivationPlayableAsset.CreatePlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::ActivationPlayableAsset::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationPlayableAsset::CreatePlayable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, go)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ActivationTrack
#include "UnityEngine/Timeline/ActivationTrack.hpp"
// Including type: UnityEngine.Timeline.ActivationMixerPlayable
#include "UnityEngine/Timeline/ActivationMixerPlayable.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: UnityEngine.Timeline.IPropertyCollector
#include "UnityEngine/Timeline/IPropertyCollector.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ActivationTrack.get_postPlaybackState
UnityEngine::Timeline::ActivationTrack::PostPlaybackState UnityEngine::Timeline::ActivationTrack::get_postPlaybackState() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationTrack::get_postPlaybackState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_postPlaybackState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ActivationTrack::PostPlaybackState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ActivationTrack.set_postPlaybackState
void UnityEngine::Timeline::ActivationTrack::set_postPlaybackState(UnityEngine::Timeline::ActivationTrack::PostPlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationTrack::set_postPlaybackState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_postPlaybackState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.ActivationTrack.UpdateTrackMode
void UnityEngine::Timeline::ActivationTrack::UpdateTrackMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationTrack::UpdateTrackMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateTrackMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ActivationTrack.CanCompileClips
bool UnityEngine::Timeline::ActivationTrack::CanCompileClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationTrack::CanCompileClips");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CanCompileClips", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ActivationTrack.CreateTrackMixer
UnityEngine::Playables::Playable UnityEngine::Timeline::ActivationTrack::CreateTrackMixer(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationTrack::CreateTrackMixer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateTrackMixer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, go, inputCount)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, inputCount);
}
// Autogenerated method: UnityEngine.Timeline.ActivationTrack.GatherProperties
void UnityEngine::Timeline::ActivationTrack::GatherProperties(UnityEngine::Playables::PlayableDirector* director, UnityEngine::Timeline::IPropertyCollector* driver) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationTrack::GatherProperties");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GatherProperties", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(director, driver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, director, driver);
}
// Autogenerated method: UnityEngine.Timeline.ActivationTrack.OnCreateClip
void UnityEngine::Timeline::ActivationTrack::OnCreateClip(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationTrack::OnCreateClip");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnCreateClip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clip)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ActivationTrack/PostPlaybackState
#include "UnityEngine/Timeline/ActivationTrack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationTrack/PostPlaybackState Active
UnityEngine::Timeline::ActivationTrack::PostPlaybackState UnityEngine::Timeline::ActivationTrack::PostPlaybackState::_get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationTrack::PostPlaybackState::_get_Active");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ActivationTrack::PostPlaybackState>("UnityEngine.Timeline", "ActivationTrack/PostPlaybackState", "Active"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationTrack/PostPlaybackState Active
void UnityEngine::Timeline::ActivationTrack::PostPlaybackState::_set_Active(UnityEngine::Timeline::ActivationTrack::PostPlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationTrack::PostPlaybackState::_set_Active");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationTrack/PostPlaybackState", "Active", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationTrack/PostPlaybackState Inactive
UnityEngine::Timeline::ActivationTrack::PostPlaybackState UnityEngine::Timeline::ActivationTrack::PostPlaybackState::_get_Inactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationTrack::PostPlaybackState::_get_Inactive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ActivationTrack::PostPlaybackState>("UnityEngine.Timeline", "ActivationTrack/PostPlaybackState", "Inactive"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationTrack/PostPlaybackState Inactive
void UnityEngine::Timeline::ActivationTrack::PostPlaybackState::_set_Inactive(UnityEngine::Timeline::ActivationTrack::PostPlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationTrack::PostPlaybackState::_set_Inactive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationTrack/PostPlaybackState", "Inactive", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationTrack/PostPlaybackState Revert
UnityEngine::Timeline::ActivationTrack::PostPlaybackState UnityEngine::Timeline::ActivationTrack::PostPlaybackState::_get_Revert() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationTrack::PostPlaybackState::_get_Revert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ActivationTrack::PostPlaybackState>("UnityEngine.Timeline", "ActivationTrack/PostPlaybackState", "Revert"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationTrack/PostPlaybackState Revert
void UnityEngine::Timeline::ActivationTrack::PostPlaybackState::_set_Revert(UnityEngine::Timeline::ActivationTrack::PostPlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationTrack::PostPlaybackState::_set_Revert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationTrack/PostPlaybackState", "Revert", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationTrack/PostPlaybackState LeaveAsIs
UnityEngine::Timeline::ActivationTrack::PostPlaybackState UnityEngine::Timeline::ActivationTrack::PostPlaybackState::_get_LeaveAsIs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationTrack::PostPlaybackState::_get_LeaveAsIs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ActivationTrack::PostPlaybackState>("UnityEngine.Timeline", "ActivationTrack/PostPlaybackState", "LeaveAsIs"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationTrack/PostPlaybackState LeaveAsIs
void UnityEngine::Timeline::ActivationTrack::PostPlaybackState::_set_LeaveAsIs(UnityEngine::Timeline::ActivationTrack::PostPlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationTrack::PostPlaybackState::_set_LeaveAsIs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationTrack/PostPlaybackState", "LeaveAsIs", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AnimationOutputWeightProcessor
#include "UnityEngine/Timeline/AnimationOutputWeightProcessor.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.AnimationOutputWeightProcessor.FindMixers
void UnityEngine::Timeline::AnimationOutputWeightProcessor::FindMixers() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationOutputWeightProcessor::FindMixers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FindMixers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationOutputWeightProcessor.FindMixers
void UnityEngine::Timeline::AnimationOutputWeightProcessor::FindMixers(UnityEngine::Playables::Playable parent, int port, UnityEngine::Playables::Playable node) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationOutputWeightProcessor::FindMixers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FindMixers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(parent, port, node)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parent, port, node);
}
// Autogenerated method: UnityEngine.Timeline.AnimationOutputWeightProcessor.Evaluate
void UnityEngine::Timeline::AnimationOutputWeightProcessor::Evaluate_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationOutputWeightProcessor::Evaluate_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Evaluate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AnimationPlayableAsset
#include "UnityEngine/Timeline/AnimationPlayableAsset.hpp"
// Including type: UnityEngine.Timeline.AnimationPlayableAsset/Versions
#include "UnityEngine/Timeline/AnimationPlayableAsset_Versions.hpp"
// Including type: UnityEngine.Timeline.AnimationPlayableAsset/AnimationPlayableAssetUpgrade
#include "UnityEngine/Timeline/AnimationPlayableAsset_AnimationPlayableAssetUpgrade.hpp"
// Including type: UnityEngine.Timeline.AnimationPlayableAsset/<get_outputs>d__45
#include "UnityEngine/Timeline/AnimationPlayableAsset_-get_outputs-d__45.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: UnityEngine.Timeline.IPropertyCollector
#include "UnityEngine/Timeline/IPropertyCollector.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 k_LatestVersion
int UnityEngine::Timeline::AnimationPlayableAsset::_get_k_LatestVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::_get_k_LatestVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.Timeline", "AnimationPlayableAsset", "k_LatestVersion"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 k_LatestVersion
void UnityEngine::Timeline::AnimationPlayableAsset::_set_k_LatestVersion(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::_set_k_LatestVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AnimationPlayableAsset", "k_LatestVersion", value));
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.get_position
UnityEngine::Vector3 UnityEngine::Timeline::AnimationPlayableAsset::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::get_position");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.set_position
void UnityEngine::Timeline::AnimationPlayableAsset::set_position(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::set_position");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_position", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.get_rotation
UnityEngine::Quaternion UnityEngine::Timeline::AnimationPlayableAsset::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::get_rotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.set_rotation
void UnityEngine::Timeline::AnimationPlayableAsset::set_rotation(UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::set_rotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_rotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.get_eulerAngles
UnityEngine::Vector3 UnityEngine::Timeline::AnimationPlayableAsset::get_eulerAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::get_eulerAngles");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_eulerAngles", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.set_eulerAngles
void UnityEngine::Timeline::AnimationPlayableAsset::set_eulerAngles(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::set_eulerAngles");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_eulerAngles", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.get_useTrackMatchFields
bool UnityEngine::Timeline::AnimationPlayableAsset::get_useTrackMatchFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::get_useTrackMatchFields");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_useTrackMatchFields", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.set_useTrackMatchFields
void UnityEngine::Timeline::AnimationPlayableAsset::set_useTrackMatchFields(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::set_useTrackMatchFields");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_useTrackMatchFields", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.get_matchTargetFields
UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::AnimationPlayableAsset::get_matchTargetFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::get_matchTargetFields");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_matchTargetFields", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::MatchTargetFields, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.set_matchTargetFields
void UnityEngine::Timeline::AnimationPlayableAsset::set_matchTargetFields(UnityEngine::Timeline::MatchTargetFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::set_matchTargetFields");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_matchTargetFields", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.get_removeStartOffset
bool UnityEngine::Timeline::AnimationPlayableAsset::get_removeStartOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::get_removeStartOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_removeStartOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.set_removeStartOffset
void UnityEngine::Timeline::AnimationPlayableAsset::set_removeStartOffset(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::set_removeStartOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_removeStartOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.get_applyFootIK
bool UnityEngine::Timeline::AnimationPlayableAsset::get_applyFootIK() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::get_applyFootIK");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_applyFootIK", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.set_applyFootIK
void UnityEngine::Timeline::AnimationPlayableAsset::set_applyFootIK(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::set_applyFootIK");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_applyFootIK", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.get_loop
UnityEngine::Timeline::AnimationPlayableAsset::LoopMode UnityEngine::Timeline::AnimationPlayableAsset::get_loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::get_loop");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_loop", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::AnimationPlayableAsset::LoopMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.set_loop
void UnityEngine::Timeline::AnimationPlayableAsset::set_loop(UnityEngine::Timeline::AnimationPlayableAsset::LoopMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::set_loop");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_loop", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.get_hasRootTransforms
bool UnityEngine::Timeline::AnimationPlayableAsset::get_hasRootTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::get_hasRootTransforms");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasRootTransforms", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.get_appliedOffsetMode
UnityEngine::Timeline::AppliedOffsetMode UnityEngine::Timeline::AnimationPlayableAsset::get_appliedOffsetMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::get_appliedOffsetMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_appliedOffsetMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::AppliedOffsetMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.set_appliedOffsetMode
void UnityEngine::Timeline::AnimationPlayableAsset::set_appliedOffsetMode(UnityEngine::Timeline::AppliedOffsetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::set_appliedOffsetMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_appliedOffsetMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.get_clip
UnityEngine::AnimationClip* UnityEngine::Timeline::AnimationPlayableAsset::get_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::get_clip");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_clip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.set_clip
void UnityEngine::Timeline::AnimationPlayableAsset::set_clip(UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::set_clip");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_clip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.CreatePlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::AnimationPlayableAsset::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::AnimationClip* clip, UnityEngine::Vector3 positionOffset, UnityEngine::Vector3 eulerOffset, bool removeStartOffset, UnityEngine::Timeline::AppliedOffsetMode mode, bool applyFootIK, UnityEngine::Timeline::AnimationPlayableAsset::LoopMode loop) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::CreatePlayable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "AnimationPlayableAsset", "CreatePlayable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, clip, positionOffset, eulerOffset, removeStartOffset, mode, applyFootIK, loop)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, clip, positionOffset, eulerOffset, removeStartOffset, mode, applyFootIK, loop);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.ShouldApplyOffset
bool UnityEngine::Timeline::AnimationPlayableAsset::ShouldApplyOffset(UnityEngine::Timeline::AppliedOffsetMode mode, UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::ShouldApplyOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "AnimationPlayableAsset", "ShouldApplyOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mode, clip)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mode, clip);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.ShouldApplyScaleRemove
bool UnityEngine::Timeline::AnimationPlayableAsset::ShouldApplyScaleRemove(UnityEngine::Timeline::AppliedOffsetMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::ShouldApplyScaleRemove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "AnimationPlayableAsset", "ShouldApplyScaleRemove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mode)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mode);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.get_clipCaps
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::AnimationPlayableAsset::get_clipCaps_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::get_clipCaps_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.ResetOffsets
void UnityEngine::Timeline::AnimationPlayableAsset::ResetOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::ResetOffsets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResetOffsets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.GatherProperties
void UnityEngine::Timeline::AnimationPlayableAsset::GatherProperties_NEW(UnityEngine::Playables::PlayableDirector* director, UnityEngine::Timeline::IPropertyCollector* driver) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::GatherProperties_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GatherProperties", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(director, driver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, director, driver);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.HasRootTransforms
bool UnityEngine::Timeline::AnimationPlayableAsset::HasRootTransforms(UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::HasRootTransforms");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "AnimationPlayableAsset", "HasRootTransforms", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clip)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
void UnityEngine::Timeline::AnimationPlayableAsset::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
void UnityEngine::Timeline::AnimationPlayableAsset::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.OnUpgradeFromVersion
void UnityEngine::Timeline::AnimationPlayableAsset::OnUpgradeFromVersion(int oldVersion) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::OnUpgradeFromVersion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnUpgradeFromVersion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(oldVersion)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, oldVersion);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.get_duration
double UnityEngine::Timeline::AnimationPlayableAsset::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::get_duration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.get_outputs
System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::AnimationPlayableAsset::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::get_outputs");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_outputs", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset.CreatePlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::AnimationPlayableAsset::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::CreatePlayable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, go)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset..cctor
void UnityEngine::Timeline::AnimationPlayableAsset::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "AnimationPlayableAsset", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AnimationPlayableAsset/LoopMode
#include "UnityEngine/Timeline/AnimationPlayableAsset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [TooltipAttribute] Offset: 0xCEA8EC
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.AnimationPlayableAsset/LoopMode UseSourceAsset
UnityEngine::Timeline::AnimationPlayableAsset::LoopMode UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_get_UseSourceAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_get_UseSourceAsset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::AnimationPlayableAsset::LoopMode>("UnityEngine.Timeline", "AnimationPlayableAsset/LoopMode", "UseSourceAsset"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.AnimationPlayableAsset/LoopMode UseSourceAsset
void UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_set_UseSourceAsset(UnityEngine::Timeline::AnimationPlayableAsset::LoopMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_set_UseSourceAsset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AnimationPlayableAsset/LoopMode", "UseSourceAsset", value));
}
// [TooltipAttribute] Offset: 0xCEA924
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.AnimationPlayableAsset/LoopMode On
UnityEngine::Timeline::AnimationPlayableAsset::LoopMode UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_get_On() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_get_On");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::AnimationPlayableAsset::LoopMode>("UnityEngine.Timeline", "AnimationPlayableAsset/LoopMode", "On"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.AnimationPlayableAsset/LoopMode On
void UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_set_On(UnityEngine::Timeline::AnimationPlayableAsset::LoopMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_set_On");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AnimationPlayableAsset/LoopMode", "On", value));
}
// [TooltipAttribute] Offset: 0xCEA95C
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.AnimationPlayableAsset/LoopMode Off
UnityEngine::Timeline::AnimationPlayableAsset::LoopMode UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::AnimationPlayableAsset::LoopMode>("UnityEngine.Timeline", "AnimationPlayableAsset/LoopMode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.AnimationPlayableAsset/LoopMode Off
void UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_set_Off(UnityEngine::Timeline::AnimationPlayableAsset::LoopMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::LoopMode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AnimationPlayableAsset/LoopMode", "Off", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AnimationPlayableAsset/Versions
#include "UnityEngine/Timeline/AnimationPlayableAsset_Versions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.AnimationPlayableAsset/Versions Initial
UnityEngine::Timeline::AnimationPlayableAsset::Versions UnityEngine::Timeline::AnimationPlayableAsset::Versions::_get_Initial() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::Versions::_get_Initial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::AnimationPlayableAsset::Versions>("UnityEngine.Timeline", "AnimationPlayableAsset/Versions", "Initial"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.AnimationPlayableAsset/Versions Initial
void UnityEngine::Timeline::AnimationPlayableAsset::Versions::_set_Initial(UnityEngine::Timeline::AnimationPlayableAsset::Versions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::Versions::_set_Initial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AnimationPlayableAsset/Versions", "Initial", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.AnimationPlayableAsset/Versions RotationAsEuler
UnityEngine::Timeline::AnimationPlayableAsset::Versions UnityEngine::Timeline::AnimationPlayableAsset::Versions::_get_RotationAsEuler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::Versions::_get_RotationAsEuler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::AnimationPlayableAsset::Versions>("UnityEngine.Timeline", "AnimationPlayableAsset/Versions", "RotationAsEuler"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.AnimationPlayableAsset/Versions RotationAsEuler
void UnityEngine::Timeline::AnimationPlayableAsset::Versions::_set_RotationAsEuler(UnityEngine::Timeline::AnimationPlayableAsset::Versions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::Versions::_set_RotationAsEuler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AnimationPlayableAsset/Versions", "RotationAsEuler", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AnimationPlayableAsset/AnimationPlayableAssetUpgrade
#include "UnityEngine/Timeline/AnimationPlayableAsset_AnimationPlayableAssetUpgrade.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset/AnimationPlayableAssetUpgrade.ConvertRotationToEuler
void UnityEngine::Timeline::AnimationPlayableAsset::AnimationPlayableAssetUpgrade::ConvertRotationToEuler(UnityEngine::Timeline::AnimationPlayableAsset* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::AnimationPlayableAssetUpgrade::ConvertRotationToEuler");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "AnimationPlayableAsset/AnimationPlayableAssetUpgrade", "ConvertRotationToEuler", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(asset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, asset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.AnimationPlayableAsset/<get_outputs>d__45
#include "UnityEngine/Timeline/AnimationPlayableAsset_-get_outputs-d__45.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset/<get_outputs>d__45.System.IDisposable.Dispose
void UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System_IDisposable_Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System.IDisposable.Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset/<get_outputs>d__45.MoveNext
bool UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::MoveNext_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::MoveNext_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset/<get_outputs>d__45.System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current
UnityEngine::Playables::PlayableBinding UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System_Collections_Generic_IEnumerator$UnityEngine_Playables_PlayableBinding$_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableBinding, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset/<get_outputs>d__45.System.Collections.IEnumerator.Reset
void UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System_Collections_IEnumerator_Reset_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System.Collections.IEnumerator.Reset_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset/<get_outputs>d__45.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System_Collections_IEnumerator_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System.Collections.IEnumerator.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset/<get_outputs>d__45.System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator
System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System_Collections_Generic_IEnumerable$UnityEngine_Playables_PlayableBinding$_GetEnumerator_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator_NEW");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPlayableAsset/<get_outputs>d__45.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System_Collections_IEnumerable_GetEnumerator_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPlayableAsset::$get_outputs$d__45::System.Collections.IEnumerable.GetEnumerator_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AnimationPreviewUpdateCallback
#include "UnityEngine/Timeline/AnimationPreviewUpdateCallback.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Experimental.Animations.IAnimationWindowPreview
#include "UnityEngine/Experimental/Animations/IAnimationWindowPreview.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.AnimationPreviewUpdateCallback.Evaluate
void UnityEngine::Timeline::AnimationPreviewUpdateCallback::Evaluate_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPreviewUpdateCallback::Evaluate_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Evaluate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationPreviewUpdateCallback.FetchPreviewComponents
void UnityEngine::Timeline::AnimationPreviewUpdateCallback::FetchPreviewComponents() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationPreviewUpdateCallback::FetchPreviewComponents");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FetchPreviewComponents", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.MatchTargetFields
#include "UnityEngine/Timeline/MatchTargetFields.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.MatchTargetFields PositionX
UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::MatchTargetFields::_get_PositionX() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFields::_get_PositionX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::MatchTargetFields>("UnityEngine.Timeline", "MatchTargetFields", "PositionX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.MatchTargetFields PositionX
void UnityEngine::Timeline::MatchTargetFields::_set_PositionX(UnityEngine::Timeline::MatchTargetFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFields::_set_PositionX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "MatchTargetFields", "PositionX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.MatchTargetFields PositionY
UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::MatchTargetFields::_get_PositionY() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFields::_get_PositionY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::MatchTargetFields>("UnityEngine.Timeline", "MatchTargetFields", "PositionY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.MatchTargetFields PositionY
void UnityEngine::Timeline::MatchTargetFields::_set_PositionY(UnityEngine::Timeline::MatchTargetFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFields::_set_PositionY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "MatchTargetFields", "PositionY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.MatchTargetFields PositionZ
UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::MatchTargetFields::_get_PositionZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFields::_get_PositionZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::MatchTargetFields>("UnityEngine.Timeline", "MatchTargetFields", "PositionZ"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.MatchTargetFields PositionZ
void UnityEngine::Timeline::MatchTargetFields::_set_PositionZ(UnityEngine::Timeline::MatchTargetFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFields::_set_PositionZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "MatchTargetFields", "PositionZ", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.MatchTargetFields RotationX
UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::MatchTargetFields::_get_RotationX() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFields::_get_RotationX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::MatchTargetFields>("UnityEngine.Timeline", "MatchTargetFields", "RotationX"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.MatchTargetFields RotationX
void UnityEngine::Timeline::MatchTargetFields::_set_RotationX(UnityEngine::Timeline::MatchTargetFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFields::_set_RotationX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "MatchTargetFields", "RotationX", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.MatchTargetFields RotationY
UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::MatchTargetFields::_get_RotationY() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFields::_get_RotationY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::MatchTargetFields>("UnityEngine.Timeline", "MatchTargetFields", "RotationY"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.MatchTargetFields RotationY
void UnityEngine::Timeline::MatchTargetFields::_set_RotationY(UnityEngine::Timeline::MatchTargetFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFields::_set_RotationY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "MatchTargetFields", "RotationY", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.MatchTargetFields RotationZ
UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::MatchTargetFields::_get_RotationZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFields::_get_RotationZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::MatchTargetFields>("UnityEngine.Timeline", "MatchTargetFields", "RotationZ"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.MatchTargetFields RotationZ
void UnityEngine::Timeline::MatchTargetFields::_set_RotationZ(UnityEngine::Timeline::MatchTargetFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFields::_set_RotationZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "MatchTargetFields", "RotationZ", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackOffset
#include "UnityEngine/Timeline/TrackOffset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackOffset ApplyTransformOffsets
UnityEngine::Timeline::TrackOffset UnityEngine::Timeline::TrackOffset::_get_ApplyTransformOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackOffset::_get_ApplyTransformOffsets");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackOffset>("UnityEngine.Timeline", "TrackOffset", "ApplyTransformOffsets"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackOffset ApplyTransformOffsets
void UnityEngine::Timeline::TrackOffset::_set_ApplyTransformOffsets(UnityEngine::Timeline::TrackOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackOffset::_set_ApplyTransformOffsets");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackOffset", "ApplyTransformOffsets", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackOffset ApplySceneOffsets
UnityEngine::Timeline::TrackOffset UnityEngine::Timeline::TrackOffset::_get_ApplySceneOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackOffset::_get_ApplySceneOffsets");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackOffset>("UnityEngine.Timeline", "TrackOffset", "ApplySceneOffsets"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackOffset ApplySceneOffsets
void UnityEngine::Timeline::TrackOffset::_set_ApplySceneOffsets(UnityEngine::Timeline::TrackOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackOffset::_set_ApplySceneOffsets");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackOffset", "ApplySceneOffsets", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackOffset Auto
UnityEngine::Timeline::TrackOffset UnityEngine::Timeline::TrackOffset::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackOffset::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackOffset>("UnityEngine.Timeline", "TrackOffset", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackOffset Auto
void UnityEngine::Timeline::TrackOffset::_set_Auto(UnityEngine::Timeline::TrackOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackOffset::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackOffset", "Auto", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AppliedOffsetMode
#include "UnityEngine/Timeline/AppliedOffsetMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.AppliedOffsetMode NoRootTransform
UnityEngine::Timeline::AppliedOffsetMode UnityEngine::Timeline::AppliedOffsetMode::_get_NoRootTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AppliedOffsetMode::_get_NoRootTransform");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::AppliedOffsetMode>("UnityEngine.Timeline", "AppliedOffsetMode", "NoRootTransform"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.AppliedOffsetMode NoRootTransform
void UnityEngine::Timeline::AppliedOffsetMode::_set_NoRootTransform(UnityEngine::Timeline::AppliedOffsetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AppliedOffsetMode::_set_NoRootTransform");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AppliedOffsetMode", "NoRootTransform", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.AppliedOffsetMode TransformOffset
UnityEngine::Timeline::AppliedOffsetMode UnityEngine::Timeline::AppliedOffsetMode::_get_TransformOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AppliedOffsetMode::_get_TransformOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::AppliedOffsetMode>("UnityEngine.Timeline", "AppliedOffsetMode", "TransformOffset"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.AppliedOffsetMode TransformOffset
void UnityEngine::Timeline::AppliedOffsetMode::_set_TransformOffset(UnityEngine::Timeline::AppliedOffsetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AppliedOffsetMode::_set_TransformOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AppliedOffsetMode", "TransformOffset", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.AppliedOffsetMode SceneOffset
UnityEngine::Timeline::AppliedOffsetMode UnityEngine::Timeline::AppliedOffsetMode::_get_SceneOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AppliedOffsetMode::_get_SceneOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::AppliedOffsetMode>("UnityEngine.Timeline", "AppliedOffsetMode", "SceneOffset"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.AppliedOffsetMode SceneOffset
void UnityEngine::Timeline::AppliedOffsetMode::_set_SceneOffset(UnityEngine::Timeline::AppliedOffsetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AppliedOffsetMode::_set_SceneOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AppliedOffsetMode", "SceneOffset", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.AppliedOffsetMode TransformOffsetLegacy
UnityEngine::Timeline::AppliedOffsetMode UnityEngine::Timeline::AppliedOffsetMode::_get_TransformOffsetLegacy() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AppliedOffsetMode::_get_TransformOffsetLegacy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::AppliedOffsetMode>("UnityEngine.Timeline", "AppliedOffsetMode", "TransformOffsetLegacy"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.AppliedOffsetMode TransformOffsetLegacy
void UnityEngine::Timeline::AppliedOffsetMode::_set_TransformOffsetLegacy(UnityEngine::Timeline::AppliedOffsetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AppliedOffsetMode::_set_TransformOffsetLegacy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AppliedOffsetMode", "TransformOffsetLegacy", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.AppliedOffsetMode SceneOffsetLegacy
UnityEngine::Timeline::AppliedOffsetMode UnityEngine::Timeline::AppliedOffsetMode::_get_SceneOffsetLegacy() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AppliedOffsetMode::_get_SceneOffsetLegacy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::AppliedOffsetMode>("UnityEngine.Timeline", "AppliedOffsetMode", "SceneOffsetLegacy"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.AppliedOffsetMode SceneOffsetLegacy
void UnityEngine::Timeline::AppliedOffsetMode::_set_SceneOffsetLegacy(UnityEngine::Timeline::AppliedOffsetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AppliedOffsetMode::_set_SceneOffsetLegacy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AppliedOffsetMode", "SceneOffsetLegacy", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.AppliedOffsetMode SceneOffsetEditor
UnityEngine::Timeline::AppliedOffsetMode UnityEngine::Timeline::AppliedOffsetMode::_get_SceneOffsetEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AppliedOffsetMode::_get_SceneOffsetEditor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::AppliedOffsetMode>("UnityEngine.Timeline", "AppliedOffsetMode", "SceneOffsetEditor"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.AppliedOffsetMode SceneOffsetEditor
void UnityEngine::Timeline::AppliedOffsetMode::_set_SceneOffsetEditor(UnityEngine::Timeline::AppliedOffsetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AppliedOffsetMode::_set_SceneOffsetEditor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AppliedOffsetMode", "SceneOffsetEditor", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.AppliedOffsetMode SceneOffsetLegacyEditor
UnityEngine::Timeline::AppliedOffsetMode UnityEngine::Timeline::AppliedOffsetMode::_get_SceneOffsetLegacyEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AppliedOffsetMode::_get_SceneOffsetLegacyEditor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::AppliedOffsetMode>("UnityEngine.Timeline", "AppliedOffsetMode", "SceneOffsetLegacyEditor"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.AppliedOffsetMode SceneOffsetLegacyEditor
void UnityEngine::Timeline::AppliedOffsetMode::_set_SceneOffsetLegacyEditor(UnityEngine::Timeline::AppliedOffsetMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AppliedOffsetMode::_set_SceneOffsetLegacyEditor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AppliedOffsetMode", "SceneOffsetLegacyEditor", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.MatchTargetFieldConstants
#include "UnityEngine/Timeline/MatchTargetFieldConstants.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.MatchTargetFields All
UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::MatchTargetFieldConstants::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFieldConstants::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::MatchTargetFields>("UnityEngine.Timeline", "MatchTargetFieldConstants", "All"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.MatchTargetFields All
void UnityEngine::Timeline::MatchTargetFieldConstants::_set_All(UnityEngine::Timeline::MatchTargetFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFieldConstants::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "MatchTargetFieldConstants", "All", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.MatchTargetFields None
UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::MatchTargetFieldConstants::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFieldConstants::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::MatchTargetFields>("UnityEngine.Timeline", "MatchTargetFieldConstants", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.MatchTargetFields None
void UnityEngine::Timeline::MatchTargetFieldConstants::_set_None(UnityEngine::Timeline::MatchTargetFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFieldConstants::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "MatchTargetFieldConstants", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.MatchTargetFields Position
UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::MatchTargetFieldConstants::_get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFieldConstants::_get_Position");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::MatchTargetFields>("UnityEngine.Timeline", "MatchTargetFieldConstants", "Position"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.MatchTargetFields Position
void UnityEngine::Timeline::MatchTargetFieldConstants::_set_Position(UnityEngine::Timeline::MatchTargetFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFieldConstants::_set_Position");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "MatchTargetFieldConstants", "Position", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.MatchTargetFields Rotation
UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::MatchTargetFieldConstants::_get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFieldConstants::_get_Rotation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::MatchTargetFields>("UnityEngine.Timeline", "MatchTargetFieldConstants", "Rotation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.MatchTargetFields Rotation
void UnityEngine::Timeline::MatchTargetFieldConstants::_set_Rotation(UnityEngine::Timeline::MatchTargetFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFieldConstants::_set_Rotation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "MatchTargetFieldConstants", "Rotation", value));
}
// Autogenerated method: UnityEngine.Timeline.MatchTargetFieldConstants.HasAny
bool UnityEngine::Timeline::MatchTargetFieldConstants::HasAny(UnityEngine::Timeline::MatchTargetFields me, UnityEngine::Timeline::MatchTargetFields fields) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFieldConstants::HasAny");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "MatchTargetFieldConstants", "HasAny", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(me, fields)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, me, fields);
}
// Autogenerated method: UnityEngine.Timeline.MatchTargetFieldConstants.Toggle
UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::MatchTargetFieldConstants::Toggle(UnityEngine::Timeline::MatchTargetFields me, UnityEngine::Timeline::MatchTargetFields flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFieldConstants::Toggle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "MatchTargetFieldConstants", "Toggle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(me, flag)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::MatchTargetFields, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, me, flag);
}
// Autogenerated method: UnityEngine.Timeline.MatchTargetFieldConstants..cctor
void UnityEngine::Timeline::MatchTargetFieldConstants::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MatchTargetFieldConstants::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "MatchTargetFieldConstants", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.AnimationTrack
#include "UnityEngine/Timeline/AnimationTrack.hpp"
// Including type: UnityEngine.Timeline.AnimationTrack/AnimationTrackUpgrade
#include "UnityEngine/Timeline/AnimationTrack_AnimationTrackUpgrade.hpp"
// Including type: UnityEngine.Timeline.AnimationTrack/<get_outputs>d__49
#include "UnityEngine/Timeline/AnimationTrack_-get_outputs-d__49.hpp"
// Including type: UnityEngine.AvatarMask
#include "UnityEngine/AvatarMask.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Timeline.IntervalTree`1
#include "UnityEngine/Timeline/IntervalTree_1.hpp"
// Including type: UnityEngine.Timeline.RuntimeElement
#include "UnityEngine/Timeline/RuntimeElement.hpp"
// Including type: UnityEngine.Timeline.AppliedOffsetMode
#include "UnityEngine/Timeline/AppliedOffsetMode.hpp"
// Including type: UnityEngine.Animations.AnimationLayerMixerPlayable
#include "UnityEngine/Animations/AnimationLayerMixerPlayable.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Timeline.IPropertyCollector
#include "UnityEngine/Timeline/IPropertyCollector.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String k_DefaultInfiniteClipName
::Il2CppString* UnityEngine::Timeline::AnimationTrack::_get_k_DefaultInfiniteClipName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::_get_k_DefaultInfiniteClipName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("UnityEngine.Timeline", "AnimationTrack", "k_DefaultInfiniteClipName"));
}
// Autogenerated static field setter
// Set static field: static private System.String k_DefaultInfiniteClipName
void UnityEngine::Timeline::AnimationTrack::_set_k_DefaultInfiniteClipName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::_set_k_DefaultInfiniteClipName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AnimationTrack", "k_DefaultInfiniteClipName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String k_DefaultRecordableClipName
::Il2CppString* UnityEngine::Timeline::AnimationTrack::_get_k_DefaultRecordableClipName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::_get_k_DefaultRecordableClipName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("UnityEngine.Timeline", "AnimationTrack", "k_DefaultRecordableClipName"));
}
// Autogenerated static field setter
// Set static field: static private System.String k_DefaultRecordableClipName
void UnityEngine::Timeline::AnimationTrack::_set_k_DefaultRecordableClipName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::_set_k_DefaultRecordableClipName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AnimationTrack", "k_DefaultRecordableClipName", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Queue`1<UnityEngine.Transform> s_CachedQueue
System::Collections::Generic::Queue_1<UnityEngine::Transform*>* UnityEngine::Timeline::AnimationTrack::_get_s_CachedQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::_get_s_CachedQueue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::Queue_1<UnityEngine::Transform*>*>("UnityEngine.Timeline", "AnimationTrack", "s_CachedQueue"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Queue`1<UnityEngine.Transform> s_CachedQueue
void UnityEngine::Timeline::AnimationTrack::_set_s_CachedQueue(System::Collections::Generic::Queue_1<UnityEngine::Transform*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::_set_s_CachedQueue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "AnimationTrack", "s_CachedQueue", value));
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_position
UnityEngine::Vector3 UnityEngine::Timeline::AnimationTrack::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_position");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_position
void UnityEngine::Timeline::AnimationTrack::set_position(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_position");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_position", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_rotation
UnityEngine::Quaternion UnityEngine::Timeline::AnimationTrack::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_rotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_rotation
void UnityEngine::Timeline::AnimationTrack::set_rotation(UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_rotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_rotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_eulerAngles
UnityEngine::Vector3 UnityEngine::Timeline::AnimationTrack::get_eulerAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_eulerAngles");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_eulerAngles", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_eulerAngles
void UnityEngine::Timeline::AnimationTrack::set_eulerAngles(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_eulerAngles");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_eulerAngles", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_applyOffsets
bool UnityEngine::Timeline::AnimationTrack::get_applyOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_applyOffsets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_applyOffsets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_applyOffsets
void UnityEngine::Timeline::AnimationTrack::set_applyOffsets(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_applyOffsets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_applyOffsets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_trackOffset
UnityEngine::Timeline::TrackOffset UnityEngine::Timeline::AnimationTrack::get_trackOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_trackOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_trackOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TrackOffset, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_trackOffset
void UnityEngine::Timeline::AnimationTrack::set_trackOffset(UnityEngine::Timeline::TrackOffset value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_trackOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_trackOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_matchTargetFields
UnityEngine::Timeline::MatchTargetFields UnityEngine::Timeline::AnimationTrack::get_matchTargetFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_matchTargetFields");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_matchTargetFields", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::MatchTargetFields, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_matchTargetFields
void UnityEngine::Timeline::AnimationTrack::set_matchTargetFields(UnityEngine::Timeline::MatchTargetFields value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_matchTargetFields");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_matchTargetFields", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClip
UnityEngine::AnimationClip* UnityEngine::Timeline::AnimationTrack::get_infiniteClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_infiniteClip");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_infiniteClip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClip
void UnityEngine::Timeline::AnimationTrack::set_infiniteClip(UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_infiniteClip");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_infiniteClip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipRemoveOffset
bool UnityEngine::Timeline::AnimationTrack::get_infiniteClipRemoveOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_infiniteClipRemoveOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_infiniteClipRemoveOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipRemoveOffset
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipRemoveOffset(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_infiniteClipRemoveOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_infiniteClipRemoveOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_avatarMask
UnityEngine::AvatarMask* UnityEngine::Timeline::AnimationTrack::get_avatarMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_avatarMask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_avatarMask", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AvatarMask*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_avatarMask
void UnityEngine::Timeline::AnimationTrack::set_avatarMask(UnityEngine::AvatarMask* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_avatarMask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_avatarMask", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_applyAvatarMask
bool UnityEngine::Timeline::AnimationTrack::get_applyAvatarMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_applyAvatarMask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_applyAvatarMask", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_applyAvatarMask
void UnityEngine::Timeline::AnimationTrack::set_applyAvatarMask(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_applyAvatarMask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_applyAvatarMask", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_inClipMode
bool UnityEngine::Timeline::AnimationTrack::get_inClipMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_inClipMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_inClipMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipOffsetPosition
UnityEngine::Vector3 UnityEngine::Timeline::AnimationTrack::get_infiniteClipOffsetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_infiniteClipOffsetPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_infiniteClipOffsetPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipOffsetPosition
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipOffsetPosition(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_infiniteClipOffsetPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_infiniteClipOffsetPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipOffsetRotation
UnityEngine::Quaternion UnityEngine::Timeline::AnimationTrack::get_infiniteClipOffsetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_infiniteClipOffsetRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_infiniteClipOffsetRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipOffsetRotation
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipOffsetRotation(UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_infiniteClipOffsetRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_infiniteClipOffsetRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipOffsetEulerAngles
UnityEngine::Vector3 UnityEngine::Timeline::AnimationTrack::get_infiniteClipOffsetEulerAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_infiniteClipOffsetEulerAngles");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_infiniteClipOffsetEulerAngles", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipOffsetEulerAngles
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipOffsetEulerAngles(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_infiniteClipOffsetEulerAngles");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_infiniteClipOffsetEulerAngles", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipApplyFootIK
bool UnityEngine::Timeline::AnimationTrack::get_infiniteClipApplyFootIK() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_infiniteClipApplyFootIK");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_infiniteClipApplyFootIK", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipApplyFootIK
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipApplyFootIK(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_infiniteClipApplyFootIK");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_infiniteClipApplyFootIK", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipTimeOffset
double UnityEngine::Timeline::AnimationTrack::get_infiniteClipTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_infiniteClipTimeOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_infiniteClipTimeOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipTimeOffset
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipTimeOffset(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_infiniteClipTimeOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_infiniteClipTimeOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipPreExtrapolation
UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::AnimationTrack::get_infiniteClipPreExtrapolation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_infiniteClipPreExtrapolation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_infiniteClipPreExtrapolation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip::ClipExtrapolation, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipPreExtrapolation
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipPreExtrapolation(UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_infiniteClipPreExtrapolation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_infiniteClipPreExtrapolation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipPostExtrapolation
UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::AnimationTrack::get_infiniteClipPostExtrapolation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_infiniteClipPostExtrapolation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_infiniteClipPostExtrapolation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip::ClipExtrapolation, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipPostExtrapolation
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipPostExtrapolation(UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_infiniteClipPostExtrapolation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_infiniteClipPostExtrapolation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_infiniteClipLoop
UnityEngine::Timeline::AnimationPlayableAsset::LoopMode UnityEngine::Timeline::AnimationTrack::get_infiniteClipLoop() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_infiniteClipLoop");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_infiniteClipLoop", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::AnimationPlayableAsset::LoopMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_infiniteClipLoop
void UnityEngine::Timeline::AnimationTrack::set_infiniteClipLoop(UnityEngine::Timeline::AnimationPlayableAsset::LoopMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_infiniteClipLoop");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_infiniteClipLoop", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.ResetOffsets
void UnityEngine::Timeline::AnimationTrack::ResetOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::ResetOffsets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResetOffsets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.CreateClip
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::AnimationTrack::CreateClip(UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::CreateClip");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateClip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clip)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.CreateInfiniteClip
void UnityEngine::Timeline::AnimationTrack::CreateInfiniteClip(::Il2CppString* infiniteClipName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::CreateInfiniteClip");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateInfiniteClip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(infiniteClipName)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, infiniteClipName);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.CreateRecordableClip
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::AnimationTrack::CreateRecordableClip(::Il2CppString* animClipName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::CreateRecordableClip");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateRecordableClip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(animClipName)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method, animClipName);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.UpdateClipOffsets
void UnityEngine::Timeline::AnimationTrack::UpdateClipOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::UpdateClipOffsets");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateClipOffsets", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.CompileTrackPlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::AnimationTrack::CompileTrackPlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Timeline::AnimationTrack* track, UnityEngine::GameObject* go, UnityEngine::Timeline::IntervalTree_1<UnityEngine::Timeline::RuntimeElement*>* tree, UnityEngine::Timeline::AppliedOffsetMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::CompileTrackPlayable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CompileTrackPlayable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, track, go, tree, mode)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, track, go, tree, mode);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.UnityEngine.Timeline.ILayerable.CreateLayerMixer
UnityEngine::Playables::Playable UnityEngine::Timeline::AnimationTrack::UnityEngine_Timeline_ILayerable_CreateLayerMixer_NEW(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::UnityEngine.Timeline.ILayerable.CreateLayerMixer_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnityEngine.Timeline.ILayerable.CreateLayerMixer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, go, inputCount)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, inputCount);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.GetDefaultBlendCount
int UnityEngine::Timeline::AnimationTrack::GetDefaultBlendCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::GetDefaultBlendCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDefaultBlendCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.AttachDefaultBlend
void UnityEngine::Timeline::AnimationTrack::AttachDefaultBlend(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Animations::AnimationLayerMixerPlayable mixer, bool requireOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::AttachDefaultBlend");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AttachDefaultBlend", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, mixer, requireOffset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, graph, mixer, requireOffset);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.AttachOffsetPlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::AnimationTrack::AttachOffsetPlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Playables::Playable playable, UnityEngine::Vector3 pos, UnityEngine::Quaternion rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::AttachOffsetPlayable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AttachOffsetPlayable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, playable, pos, rot)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, playable, pos, rot);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.RequiresMotionXPlayable
bool UnityEngine::Timeline::AnimationTrack::RequiresMotionXPlayable(UnityEngine::Timeline::AppliedOffsetMode mode, UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::RequiresMotionXPlayable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RequiresMotionXPlayable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mode, gameObject)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, mode, gameObject);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.UsesAbsoluteMotion
bool UnityEngine::Timeline::AnimationTrack::UsesAbsoluteMotion(UnityEngine::Timeline::AppliedOffsetMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::UsesAbsoluteMotion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "AnimationTrack", "UsesAbsoluteMotion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mode)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mode);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.HasController
bool UnityEngine::Timeline::AnimationTrack::HasController(UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::HasController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HasController", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(gameObject)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, gameObject);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.GetBinding
UnityEngine::Animator* UnityEngine::Timeline::AnimationTrack::GetBinding(UnityEngine::Playables::PlayableDirector* director) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::GetBinding");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetBinding", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(director)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Animator*, false>(this, ___internal__method, director);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.CreateGroupMixer
UnityEngine::Animations::AnimationLayerMixerPlayable UnityEngine::Timeline::AnimationTrack::CreateGroupMixer(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::CreateGroupMixer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "AnimationTrack", "CreateGroupMixer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, go, inputCount)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Animations::AnimationLayerMixerPlayable, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, go, inputCount);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.CreateInfiniteTrackPlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::AnimationTrack::CreateInfiniteTrackPlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go, UnityEngine::Timeline::IntervalTree_1<UnityEngine::Timeline::RuntimeElement*>* tree, UnityEngine::Timeline::AppliedOffsetMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::CreateInfiniteTrackPlayable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateInfiniteTrackPlayable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, go, tree, mode)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, tree, mode);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.ApplyTrackOffset
UnityEngine::Playables::Playable UnityEngine::Timeline::AnimationTrack::ApplyTrackOffset(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Playables::Playable root, UnityEngine::GameObject* go, UnityEngine::Timeline::AppliedOffsetMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::ApplyTrackOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ApplyTrackOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, root, go, mode)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, root, go, mode);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.AssignAnimationClip
void UnityEngine::Timeline::AnimationTrack::AssignAnimationClip(UnityEngine::Timeline::TimelineClip* clip, UnityEngine::AnimationClip* animClip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::AssignAnimationClip");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AssignAnimationClip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clip, animClip)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip, animClip);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.GetAnimationClips
void UnityEngine::Timeline::AnimationTrack::GetAnimationClips(System::Collections::Generic::List_1<UnityEngine::AnimationClip*>* animClips) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::GetAnimationClips");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAnimationClips", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(animClips)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animClips);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.GetOffsetMode
UnityEngine::Timeline::AppliedOffsetMode UnityEngine::Timeline::AnimationTrack::GetOffsetMode(UnityEngine::GameObject* go, bool animatesRootTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::GetOffsetMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetOffsetMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(go, animatesRootTransform)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::AppliedOffsetMode, false>(this, ___internal__method, go, animatesRootTransform);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.IsRootTransformDisabledByMask
bool UnityEngine::Timeline::AnimationTrack::IsRootTransformDisabledByMask(UnityEngine::GameObject* gameObject, UnityEngine::Transform* genericRootNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::IsRootTransformDisabledByMask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsRootTransformDisabledByMask", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(gameObject, genericRootNode)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, gameObject, genericRootNode);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.GetGenericRootNode
UnityEngine::Transform* UnityEngine::Timeline::AnimationTrack::GetGenericRootNode(UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::GetGenericRootNode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetGenericRootNode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(gameObject)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method, gameObject);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.AnimatesRootTransform
bool UnityEngine::Timeline::AnimationTrack::AnimatesRootTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::AnimatesRootTransform");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AnimatesRootTransform", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.FindInHierarchyBreadthFirst
UnityEngine::Transform* UnityEngine::Timeline::AnimationTrack::FindInHierarchyBreadthFirst(UnityEngine::Transform* t, ::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::FindInHierarchyBreadthFirst");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "AnimationTrack", "FindInHierarchyBreadthFirst", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t, name)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, name);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_openClipOffsetPosition
UnityEngine::Vector3 UnityEngine::Timeline::AnimationTrack::get_openClipOffsetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_openClipOffsetPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_openClipOffsetPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_openClipOffsetPosition
void UnityEngine::Timeline::AnimationTrack::set_openClipOffsetPosition(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_openClipOffsetPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_openClipOffsetPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_openClipOffsetRotation
UnityEngine::Quaternion UnityEngine::Timeline::AnimationTrack::get_openClipOffsetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_openClipOffsetRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_openClipOffsetRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_openClipOffsetRotation
void UnityEngine::Timeline::AnimationTrack::set_openClipOffsetRotation(UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_openClipOffsetRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_openClipOffsetRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_openClipOffsetEulerAngles
UnityEngine::Vector3 UnityEngine::Timeline::AnimationTrack::get_openClipOffsetEulerAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_openClipOffsetEulerAngles");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_openClipOffsetEulerAngles", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_openClipOffsetEulerAngles
void UnityEngine::Timeline::AnimationTrack::set_openClipOffsetEulerAngles(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_openClipOffsetEulerAngles");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_openClipOffsetEulerAngles", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_openClipPreExtrapolation
UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::AnimationTrack::get_openClipPreExtrapolation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_openClipPreExtrapolation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_openClipPreExtrapolation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip::ClipExtrapolation, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_openClipPreExtrapolation
void UnityEngine::Timeline::AnimationTrack::set_openClipPreExtrapolation(UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_openClipPreExtrapolation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_openClipPreExtrapolation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_openClipPostExtrapolation
UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::AnimationTrack::get_openClipPostExtrapolation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_openClipPostExtrapolation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_openClipPostExtrapolation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip::ClipExtrapolation, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.set_openClipPostExtrapolation
void UnityEngine::Timeline::AnimationTrack::set_openClipPostExtrapolation(UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::set_openClipPostExtrapolation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_openClipPostExtrapolation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.CanCompileClips
bool UnityEngine::Timeline::AnimationTrack::CanCompileClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::CanCompileClips");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CanCompileClips", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.get_outputs
System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::AnimationTrack::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::get_outputs");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_outputs", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.OnCreateClip
void UnityEngine::Timeline::AnimationTrack::OnCreateClip(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::OnCreateClip");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnCreateClip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clip)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.CalculateItemsHash
int UnityEngine::Timeline::AnimationTrack::CalculateItemsHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::CalculateItemsHash");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CalculateItemsHash", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.OnCreateClipPlayableGraph
UnityEngine::Playables::Playable UnityEngine::Timeline::AnimationTrack::OnCreateClipPlayableGraph(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go, UnityEngine::Timeline::IntervalTree_1<UnityEngine::Timeline::RuntimeElement*>* tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::OnCreateClipPlayableGraph");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnCreateClipPlayableGraph", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, go, tree)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, tree);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.GetEvaluationTime
void UnityEngine::Timeline::AnimationTrack::GetEvaluationTime(double& outStart, double& outDuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::GetEvaluationTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEvaluationTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(outStart, outDuration)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, outStart, outDuration);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.GetSequenceTime
void UnityEngine::Timeline::AnimationTrack::GetSequenceTime(double& outStart, double& outDuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::GetSequenceTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSequenceTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(outStart, outDuration)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, outStart, outDuration);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.GatherProperties
void UnityEngine::Timeline::AnimationTrack::GatherProperties(UnityEngine::Playables::PlayableDirector* director, UnityEngine::Timeline::IPropertyCollector* driver) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::GatherProperties");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GatherProperties", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(director, driver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, director, driver);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack.OnUpgradeFromVersion
void UnityEngine::Timeline::AnimationTrack::OnUpgradeFromVersion(int oldVersion) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::OnUpgradeFromVersion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnUpgradeFromVersion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(oldVersion)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, oldVersion);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack..cctor
void UnityEngine::Timeline::AnimationTrack::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "AnimationTrack", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AnimationTrack/AnimationTrackUpgrade
#include "UnityEngine/Timeline/AnimationTrack_AnimationTrackUpgrade.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.AnimationTrack/AnimationTrackUpgrade.ConvertRotationsToEuler
void UnityEngine::Timeline::AnimationTrack::AnimationTrackUpgrade::ConvertRotationsToEuler(UnityEngine::Timeline::AnimationTrack* track) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::AnimationTrackUpgrade::ConvertRotationsToEuler");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "AnimationTrack/AnimationTrackUpgrade", "ConvertRotationsToEuler", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(track)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, track);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack/AnimationTrackUpgrade.ConvertRootMotion
void UnityEngine::Timeline::AnimationTrack::AnimationTrackUpgrade::ConvertRootMotion(UnityEngine::Timeline::AnimationTrack* track) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::AnimationTrackUpgrade::ConvertRootMotion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "AnimationTrack/AnimationTrackUpgrade", "ConvertRootMotion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(track)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, track);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack/AnimationTrackUpgrade.ConvertInfiniteTrack
void UnityEngine::Timeline::AnimationTrack::AnimationTrackUpgrade::ConvertInfiniteTrack(UnityEngine::Timeline::AnimationTrack* track) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::AnimationTrackUpgrade::ConvertInfiniteTrack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "AnimationTrack/AnimationTrackUpgrade", "ConvertInfiniteTrack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(track)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, track);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.AnimationTrack/<get_outputs>d__49
#include "UnityEngine/Timeline/AnimationTrack_-get_outputs-d__49.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.AnimationTrack/<get_outputs>d__49.System.IDisposable.Dispose
void UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System_IDisposable_Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System.IDisposable.Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack/<get_outputs>d__49.MoveNext
bool UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::MoveNext_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::MoveNext_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack/<get_outputs>d__49.System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current
UnityEngine::Playables::PlayableBinding UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System_Collections_Generic_IEnumerator$UnityEngine_Playables_PlayableBinding$_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableBinding, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack/<get_outputs>d__49.System.Collections.IEnumerator.Reset
void UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System_Collections_IEnumerator_Reset_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System.Collections.IEnumerator.Reset_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack/<get_outputs>d__49.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System_Collections_IEnumerator_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System.Collections.IEnumerator.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack/<get_outputs>d__49.System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator
System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System_Collections_Generic_IEnumerable$UnityEngine_Playables_PlayableBinding$_GetEnumerator_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator_NEW");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AnimationTrack/<get_outputs>d__49.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System_Collections_IEnumerable_GetEnumerator_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AnimationTrack::$get_outputs$d__49::System.Collections.IEnumerable.GetEnumerator_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.ICurvesOwner
#include "UnityEngine/Timeline/ICurvesOwner.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ICurvesOwner.get_curves
UnityEngine::AnimationClip* UnityEngine::Timeline::ICurvesOwner::get_curves_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ICurvesOwner::get_curves_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_curves", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ICurvesOwner.get_hasCurves
bool UnityEngine::Timeline::ICurvesOwner::get_hasCurves_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ICurvesOwner::get_hasCurves_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasCurves", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ICurvesOwner.get_duration
double UnityEngine::Timeline::ICurvesOwner::get_duration_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ICurvesOwner::get_duration_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ICurvesOwner.CreateCurves
void UnityEngine::Timeline::ICurvesOwner::CreateCurves_NEW(::Il2CppString* curvesClipName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ICurvesOwner::CreateCurves_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateCurves", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(curvesClipName)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, curvesClipName);
}
// Autogenerated method: UnityEngine.Timeline.ICurvesOwner.get_defaultCurvesName
::Il2CppString* UnityEngine::Timeline::ICurvesOwner::get_defaultCurvesName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ICurvesOwner::get_defaultCurvesName_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_defaultCurvesName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ICurvesOwner.get_asset
UnityEngine::Object* UnityEngine::Timeline::ICurvesOwner::get_asset_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ICurvesOwner::get_asset_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_asset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ICurvesOwner.get_assetOwner
UnityEngine::Object* UnityEngine::Timeline::ICurvesOwner::get_assetOwner_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ICurvesOwner::get_assetOwner_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_assetOwner", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ICurvesOwner.get_targetTrack
UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::ICurvesOwner::get_targetTrack_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ICurvesOwner::get_targetTrack_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_targetTrack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: UnityEngine.Timeline.TimelineClip/Versions
#include "UnityEngine/Timeline/TimelineClip_Versions.hpp"
// Including type: UnityEngine.Timeline.TimelineClip/TimelineClipUpgrade
#include "UnityEngine/Timeline/TimelineClip_TimelineClipUpgrade.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 k_LatestVersion
int UnityEngine::Timeline::TimelineClip::_get_k_LatestVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::_get_k_LatestVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.Timeline", "TimelineClip", "k_LatestVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_LatestVersion
void UnityEngine::Timeline::TimelineClip::_set_k_LatestVersion(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::_set_k_LatestVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip", "k_LatestVersion", value));
}
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Timeline.ClipCaps kDefaultClipCaps
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::TimelineClip::_get_kDefaultClipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::_get_kDefaultClipCaps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "TimelineClip", "kDefaultClipCaps"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Timeline.ClipCaps kDefaultClipCaps
void UnityEngine::Timeline::TimelineClip::_set_kDefaultClipCaps(UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::_set_kDefaultClipCaps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip", "kDefaultClipCaps", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Single kDefaultClipDurationInSeconds
float UnityEngine::Timeline::TimelineClip::_get_kDefaultClipDurationInSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::_get_kDefaultClipDurationInSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.Timeline", "TimelineClip", "kDefaultClipDurationInSeconds"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Single kDefaultClipDurationInSeconds
void UnityEngine::Timeline::TimelineClip::_set_kDefaultClipDurationInSeconds(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::_set_kDefaultClipDurationInSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip", "kDefaultClipDurationInSeconds", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Double kTimeScaleMin
double UnityEngine::Timeline::TimelineClip::_get_kTimeScaleMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::_get_kTimeScaleMin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimelineClip", "kTimeScaleMin"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double kTimeScaleMin
void UnityEngine::Timeline::TimelineClip::_set_kTimeScaleMin(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::_set_kTimeScaleMin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip", "kTimeScaleMin", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Double kTimeScaleMax
double UnityEngine::Timeline::TimelineClip::_get_kTimeScaleMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::_get_kTimeScaleMax");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimelineClip", "kTimeScaleMax"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double kTimeScaleMax
void UnityEngine::Timeline::TimelineClip::_set_kTimeScaleMax(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::_set_kTimeScaleMax");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip", "kTimeScaleMax", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String kDefaultCurvesName
::Il2CppString* UnityEngine::Timeline::TimelineClip::_get_kDefaultCurvesName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::_get_kDefaultCurvesName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("UnityEngine.Timeline", "TimelineClip", "kDefaultCurvesName"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String kDefaultCurvesName
void UnityEngine::Timeline::TimelineClip::_set_kDefaultCurvesName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::_set_kDefaultCurvesName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip", "kDefaultCurvesName", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Double kMinDuration
double UnityEngine::Timeline::TimelineClip::_get_kMinDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::_get_kMinDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimelineClip", "kMinDuration"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Double kMinDuration
void UnityEngine::Timeline::TimelineClip::_set_kMinDuration(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::_set_kMinDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip", "kMinDuration", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Double kMaxTimeValue
double UnityEngine::Timeline::TimelineClip::_get_kMaxTimeValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::_get_kMaxTimeValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimelineClip", "kMaxTimeValue"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Double kMaxTimeValue
void UnityEngine::Timeline::TimelineClip::_set_kMaxTimeValue(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::_set_kMaxTimeValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip", "kMaxTimeValue", value));
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.UpgradeToLatestVersion
void UnityEngine::Timeline::TimelineClip::UpgradeToLatestVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::UpgradeToLatestVersion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpgradeToLatestVersion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_hasPreExtrapolation
bool UnityEngine::Timeline::TimelineClip::get_hasPreExtrapolation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_hasPreExtrapolation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasPreExtrapolation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_hasPostExtrapolation
bool UnityEngine::Timeline::TimelineClip::get_hasPostExtrapolation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_hasPostExtrapolation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasPostExtrapolation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_timeScale
double UnityEngine::Timeline::TimelineClip::get_timeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_timeScale");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_timeScale", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_timeScale
void UnityEngine::Timeline::TimelineClip::set_timeScale(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_timeScale");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_timeScale", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_start
double UnityEngine::Timeline::TimelineClip::get_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_start
void UnityEngine::Timeline::TimelineClip::set_start(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_duration
double UnityEngine::Timeline::TimelineClip::get_duration_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_duration_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_duration
void UnityEngine::Timeline::TimelineClip::set_duration(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_duration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_duration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_end
double UnityEngine::Timeline::TimelineClip::get_end() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_end");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_end", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_clipIn
double UnityEngine::Timeline::TimelineClip::get_clipIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_clipIn");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_clipIn", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_clipIn
void UnityEngine::Timeline::TimelineClip::set_clipIn(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_clipIn");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_clipIn", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_displayName
::Il2CppString* UnityEngine::Timeline::TimelineClip::get_displayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_displayName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_displayName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_displayName
void UnityEngine::Timeline::TimelineClip::set_displayName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_displayName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_displayName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_clipAssetDuration
double UnityEngine::Timeline::TimelineClip::get_clipAssetDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_clipAssetDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_clipAssetDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_curves
UnityEngine::AnimationClip* UnityEngine::Timeline::TimelineClip::get_curves_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_curves_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_curves", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_curves
void UnityEngine::Timeline::TimelineClip::set_curves(UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_curves");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_curves", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.UnityEngine.Timeline.ICurvesOwner.get_defaultCurvesName
::Il2CppString* UnityEngine::Timeline::TimelineClip::UnityEngine_Timeline_ICurvesOwner_get_defaultCurvesName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::UnityEngine.Timeline.ICurvesOwner.get_defaultCurvesName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnityEngine.Timeline.ICurvesOwner.get_defaultCurvesName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_hasCurves
bool UnityEngine::Timeline::TimelineClip::get_hasCurves_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_hasCurves_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasCurves", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_asset
UnityEngine::Object* UnityEngine::Timeline::TimelineClip::get_asset_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_asset_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_asset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_asset
void UnityEngine::Timeline::TimelineClip::set_asset(UnityEngine::Object* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_asset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_asset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.UnityEngine.Timeline.ICurvesOwner.get_assetOwner
UnityEngine::Object* UnityEngine::Timeline::TimelineClip::UnityEngine_Timeline_ICurvesOwner_get_assetOwner_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::UnityEngine.Timeline.ICurvesOwner.get_assetOwner_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnityEngine.Timeline.ICurvesOwner.get_assetOwner", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.UnityEngine.Timeline.ICurvesOwner.get_targetTrack
UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::TimelineClip::UnityEngine_Timeline_ICurvesOwner_get_targetTrack_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::UnityEngine.Timeline.ICurvesOwner.get_targetTrack_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnityEngine.Timeline.ICurvesOwner.get_targetTrack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_underlyingAsset
UnityEngine::Object* UnityEngine::Timeline::TimelineClip::get_underlyingAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_underlyingAsset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_underlyingAsset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_underlyingAsset
void UnityEngine::Timeline::TimelineClip::set_underlyingAsset(UnityEngine::Object* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_underlyingAsset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_underlyingAsset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_parentTrack
UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::TimelineClip::get_parentTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_parentTrack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_parentTrack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_parentTrack
void UnityEngine::Timeline::TimelineClip::set_parentTrack(UnityEngine::Timeline::TrackAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_parentTrack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_parentTrack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_easeInDuration
double UnityEngine::Timeline::TimelineClip::get_easeInDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_easeInDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_easeInDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_easeInDuration
void UnityEngine::Timeline::TimelineClip::set_easeInDuration(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_easeInDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_easeInDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_easeOutDuration
double UnityEngine::Timeline::TimelineClip::get_easeOutDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_easeOutDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_easeOutDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_easeOutDuration
void UnityEngine::Timeline::TimelineClip::set_easeOutDuration(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_easeOutDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_easeOutDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_eastOutTime
double UnityEngine::Timeline::TimelineClip::get_eastOutTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_eastOutTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_eastOutTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_easeOutTime
double UnityEngine::Timeline::TimelineClip::get_easeOutTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_easeOutTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_easeOutTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_blendInDuration
double UnityEngine::Timeline::TimelineClip::get_blendInDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_blendInDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_blendInDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_blendInDuration
void UnityEngine::Timeline::TimelineClip::set_blendInDuration(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_blendInDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_blendInDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_blendOutDuration
double UnityEngine::Timeline::TimelineClip::get_blendOutDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_blendOutDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_blendOutDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_blendOutDuration
void UnityEngine::Timeline::TimelineClip::set_blendOutDuration(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_blendOutDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_blendOutDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_blendInCurveMode
UnityEngine::Timeline::TimelineClip::BlendCurveMode UnityEngine::Timeline::TimelineClip::get_blendInCurveMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_blendInCurveMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_blendInCurveMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip::BlendCurveMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_blendInCurveMode
void UnityEngine::Timeline::TimelineClip::set_blendInCurveMode(UnityEngine::Timeline::TimelineClip::BlendCurveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_blendInCurveMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_blendInCurveMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_blendOutCurveMode
UnityEngine::Timeline::TimelineClip::BlendCurveMode UnityEngine::Timeline::TimelineClip::get_blendOutCurveMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_blendOutCurveMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_blendOutCurveMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip::BlendCurveMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_blendOutCurveMode
void UnityEngine::Timeline::TimelineClip::set_blendOutCurveMode(UnityEngine::Timeline::TimelineClip::BlendCurveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_blendOutCurveMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_blendOutCurveMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_hasBlendIn
bool UnityEngine::Timeline::TimelineClip::get_hasBlendIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_hasBlendIn");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasBlendIn", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_hasBlendOut
bool UnityEngine::Timeline::TimelineClip::get_hasBlendOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_hasBlendOut");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasBlendOut", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_mixInCurve
UnityEngine::AnimationCurve* UnityEngine::Timeline::TimelineClip::get_mixInCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_mixInCurve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_mixInCurve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationCurve*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_mixInCurve
void UnityEngine::Timeline::TimelineClip::set_mixInCurve(UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_mixInCurve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_mixInCurve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_mixInPercentage
float UnityEngine::Timeline::TimelineClip::get_mixInPercentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_mixInPercentage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_mixInPercentage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_mixInDuration
double UnityEngine::Timeline::TimelineClip::get_mixInDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_mixInDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_mixInDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_mixOutCurve
UnityEngine::AnimationCurve* UnityEngine::Timeline::TimelineClip::get_mixOutCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_mixOutCurve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_mixOutCurve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationCurve*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_mixOutCurve
void UnityEngine::Timeline::TimelineClip::set_mixOutCurve(UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_mixOutCurve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_mixOutCurve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_mixOutTime
double UnityEngine::Timeline::TimelineClip::get_mixOutTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_mixOutTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_mixOutTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_mixOutDuration
double UnityEngine::Timeline::TimelineClip::get_mixOutDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_mixOutDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_mixOutDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_mixOutPercentage
float UnityEngine::Timeline::TimelineClip::get_mixOutPercentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_mixOutPercentage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_mixOutPercentage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_recordable
bool UnityEngine::Timeline::TimelineClip::get_recordable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_recordable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_recordable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_recordable
void UnityEngine::Timeline::TimelineClip::set_recordable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_recordable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_recordable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_exposedParameters
System::Collections::Generic::List_1<::Il2CppString*>* UnityEngine::Timeline::TimelineClip::get_exposedParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_exposedParameters");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_exposedParameters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_clipCaps
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::TimelineClip::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_clipCaps");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.Hash
int UnityEngine::Timeline::TimelineClip::Hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::Hash");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Hash", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.EvaluateMixOut
float UnityEngine::Timeline::TimelineClip::EvaluateMixOut(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::EvaluateMixOut");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EvaluateMixOut", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.EvaluateMixIn
float UnityEngine::Timeline::TimelineClip::EvaluateMixIn(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::EvaluateMixIn");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EvaluateMixIn", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.GetDefaultMixInCurve
UnityEngine::AnimationCurve* UnityEngine::Timeline::TimelineClip::GetDefaultMixInCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::GetDefaultMixInCurve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClip", "GetDefaultMixInCurve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationCurve*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.GetDefaultMixOutCurve
UnityEngine::AnimationCurve* UnityEngine::Timeline::TimelineClip::GetDefaultMixOutCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::GetDefaultMixOutCurve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClip", "GetDefaultMixOutCurve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationCurve*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.ToLocalTime
double UnityEngine::Timeline::TimelineClip::ToLocalTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::ToLocalTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToLocalTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.ToLocalTimeUnbound
double UnityEngine::Timeline::TimelineClip::ToLocalTimeUnbound(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::ToLocalTimeUnbound");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToLocalTimeUnbound", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.FromLocalTimeUnbound
double UnityEngine::Timeline::TimelineClip::FromLocalTimeUnbound(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::FromLocalTimeUnbound");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FromLocalTimeUnbound", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_animationClip
UnityEngine::AnimationClip* UnityEngine::Timeline::TimelineClip::get_animationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_animationClip");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_animationClip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.SanitizeTimeValue
double UnityEngine::Timeline::TimelineClip::SanitizeTimeValue(double value, double defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::SanitizeTimeValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClip", "SanitizeTimeValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, defaultValue)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, defaultValue);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_postExtrapolationMode
UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::TimelineClip::get_postExtrapolationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_postExtrapolationMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_postExtrapolationMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip::ClipExtrapolation, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_postExtrapolationMode
void UnityEngine::Timeline::TimelineClip::set_postExtrapolationMode(UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_postExtrapolationMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_postExtrapolationMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_preExtrapolationMode
UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::TimelineClip::get_preExtrapolationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_preExtrapolationMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_preExtrapolationMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip::ClipExtrapolation, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.set_preExtrapolationMode
void UnityEngine::Timeline::TimelineClip::set_preExtrapolationMode(UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::set_preExtrapolationMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_preExtrapolationMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.SetPostExtrapolationTime
void UnityEngine::Timeline::TimelineClip::SetPostExtrapolationTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::SetPostExtrapolationTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetPostExtrapolationTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.SetPreExtrapolationTime
void UnityEngine::Timeline::TimelineClip::SetPreExtrapolationTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::SetPreExtrapolationTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetPreExtrapolationTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.IsExtrapolatedTime
bool UnityEngine::Timeline::TimelineClip::IsExtrapolatedTime(double sequenceTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::IsExtrapolatedTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsExtrapolatedTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sequenceTime)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sequenceTime);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.IsPreExtrapolatedTime
bool UnityEngine::Timeline::TimelineClip::IsPreExtrapolatedTime(double sequenceTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::IsPreExtrapolatedTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsPreExtrapolatedTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sequenceTime)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sequenceTime);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.IsPostExtrapolatedTime
bool UnityEngine::Timeline::TimelineClip::IsPostExtrapolatedTime(double sequenceTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::IsPostExtrapolatedTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsPostExtrapolatedTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sequenceTime)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sequenceTime);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_extrapolatedStart
double UnityEngine::Timeline::TimelineClip::get_extrapolatedStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_extrapolatedStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_extrapolatedStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.get_extrapolatedDuration
double UnityEngine::Timeline::TimelineClip::get_extrapolatedDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::get_extrapolatedDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_extrapolatedDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.GetExtrapolatedTime
double UnityEngine::Timeline::TimelineClip::GetExtrapolatedTime(double time, UnityEngine::Timeline::TimelineClip::ClipExtrapolation mode, double duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::GetExtrapolatedTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClip", "GetExtrapolatedTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time, mode, duration)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time, mode, duration);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.CreateCurves
void UnityEngine::Timeline::TimelineClip::CreateCurves_NEW(::Il2CppString* curvesClipName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::CreateCurves_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateCurves", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(curvesClipName)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, curvesClipName);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
void UnityEngine::Timeline::TimelineClip::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
void UnityEngine::Timeline::TimelineClip::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.ConformEaseValues
void UnityEngine::Timeline::TimelineClip::ConformEaseValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::ConformEaseValues");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConformEaseValues", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.CalculateEasingRatio
double UnityEngine::Timeline::TimelineClip::CalculateEasingRatio(double easeIn, double easeOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::CalculateEasingRatio");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClip", "CalculateEasingRatio", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(easeIn, easeOut)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, easeIn, easeOut);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.UpdateDirty
void UnityEngine::Timeline::TimelineClip::UpdateDirty(double oldValue, double newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::UpdateDirty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateDirty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(oldValue, newValue)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, oldValue, newValue);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip..cctor
void UnityEngine::Timeline::TimelineClip::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClip", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClip.ToString
::Il2CppString* UnityEngine::Timeline::TimelineClip::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineClip/Versions
#include "UnityEngine/Timeline/TimelineClip_Versions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineClip/Versions Initial
UnityEngine::Timeline::TimelineClip::Versions UnityEngine::Timeline::TimelineClip::Versions::_get_Initial() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::Versions::_get_Initial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineClip::Versions>("UnityEngine.Timeline", "TimelineClip/Versions", "Initial"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineClip/Versions Initial
void UnityEngine::Timeline::TimelineClip::Versions::_set_Initial(UnityEngine::Timeline::TimelineClip::Versions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::Versions::_set_Initial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip/Versions", "Initial", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineClip/Versions ClipInFromGlobalToLocal
UnityEngine::Timeline::TimelineClip::Versions UnityEngine::Timeline::TimelineClip::Versions::_get_ClipInFromGlobalToLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::Versions::_get_ClipInFromGlobalToLocal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineClip::Versions>("UnityEngine.Timeline", "TimelineClip/Versions", "ClipInFromGlobalToLocal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineClip/Versions ClipInFromGlobalToLocal
void UnityEngine::Timeline::TimelineClip::Versions::_set_ClipInFromGlobalToLocal(UnityEngine::Timeline::TimelineClip::Versions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::Versions::_set_ClipInFromGlobalToLocal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip/Versions", "ClipInFromGlobalToLocal", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineClip/TimelineClipUpgrade
#include "UnityEngine/Timeline/TimelineClip_TimelineClipUpgrade.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimelineClip/TimelineClipUpgrade.UpgradeClipInFromGlobalToLocal
void UnityEngine::Timeline::TimelineClip::TimelineClipUpgrade::UpgradeClipInFromGlobalToLocal(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::TimelineClipUpgrade::UpgradeClipInFromGlobalToLocal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClip/TimelineClipUpgrade", "UpgradeClipInFromGlobalToLocal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clip)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clip);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineClip/ClipExtrapolation
#include "UnityEngine/Timeline/TimelineClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation None
UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineClip::ClipExtrapolation>("UnityEngine.Timeline", "TimelineClip/ClipExtrapolation", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation None
void UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_set_None(UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip/ClipExtrapolation", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation Hold
UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_get_Hold() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_get_Hold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineClip::ClipExtrapolation>("UnityEngine.Timeline", "TimelineClip/ClipExtrapolation", "Hold"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation Hold
void UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_set_Hold(UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_set_Hold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip/ClipExtrapolation", "Hold", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation Loop
UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_get_Loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_get_Loop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineClip::ClipExtrapolation>("UnityEngine.Timeline", "TimelineClip/ClipExtrapolation", "Loop"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation Loop
void UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_set_Loop(UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_set_Loop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip/ClipExtrapolation", "Loop", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation PingPong
UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_get_PingPong() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_get_PingPong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineClip::ClipExtrapolation>("UnityEngine.Timeline", "TimelineClip/ClipExtrapolation", "PingPong"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation PingPong
void UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_set_PingPong(UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_set_PingPong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip/ClipExtrapolation", "PingPong", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation Continue
UnityEngine::Timeline::TimelineClip::ClipExtrapolation UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_get_Continue() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_get_Continue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineClip::ClipExtrapolation>("UnityEngine.Timeline", "TimelineClip/ClipExtrapolation", "Continue"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineClip/ClipExtrapolation Continue
void UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_set_Continue(UnityEngine::Timeline::TimelineClip::ClipExtrapolation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::ClipExtrapolation::_set_Continue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip/ClipExtrapolation", "Continue", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineClip/BlendCurveMode
#include "UnityEngine/Timeline/TimelineClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineClip/BlendCurveMode Auto
UnityEngine::Timeline::TimelineClip::BlendCurveMode UnityEngine::Timeline::TimelineClip::BlendCurveMode::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::BlendCurveMode::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineClip::BlendCurveMode>("UnityEngine.Timeline", "TimelineClip/BlendCurveMode", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineClip/BlendCurveMode Auto
void UnityEngine::Timeline::TimelineClip::BlendCurveMode::_set_Auto(UnityEngine::Timeline::TimelineClip::BlendCurveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::BlendCurveMode::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip/BlendCurveMode", "Auto", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineClip/BlendCurveMode Manual
UnityEngine::Timeline::TimelineClip::BlendCurveMode UnityEngine::Timeline::TimelineClip::BlendCurveMode::_get_Manual() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::BlendCurveMode::_get_Manual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineClip::BlendCurveMode>("UnityEngine.Timeline", "TimelineClip/BlendCurveMode", "Manual"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineClip/BlendCurveMode Manual
void UnityEngine::Timeline::TimelineClip::BlendCurveMode::_set_Manual(UnityEngine::Timeline::TimelineClip::BlendCurveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClip::BlendCurveMode::_set_Manual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineClip/BlendCurveMode", "Manual", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.TimelineAsset
#include "UnityEngine/Timeline/TimelineAsset.hpp"
// Including type: UnityEngine.Timeline.TimelineAsset/Versions
#include "UnityEngine/Timeline/TimelineAsset_Versions.hpp"
// Including type: UnityEngine.Timeline.TimelineAsset/TimelineAssetUpgrade
#include "UnityEngine/Timeline/TimelineAsset_TimelineAssetUpgrade.hpp"
// Including type: UnityEngine.Timeline.TimelineAsset/MediaType
#include "UnityEngine/Timeline/TimelineAsset_MediaType.hpp"
// Including type: UnityEngine.Timeline.MarkerTrack
#include "UnityEngine/Timeline/MarkerTrack.hpp"
// Including type: UnityEngine.Timeline.TimelineAsset/EditorSettings
#include "UnityEngine/Timeline/TimelineAsset_EditorSettings.hpp"
// Including type: UnityEngine.Timeline.TimelineAsset/<get_outputs>d__27
#include "UnityEngine/Timeline/TimelineAsset_-get_outputs-d__27.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: UnityEngine.Timeline.IPropertyCollector
#include "UnityEngine/Timeline/IPropertyCollector.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 k_LatestVersion
int UnityEngine::Timeline::TimelineAsset::_get_k_LatestVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::_get_k_LatestVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.Timeline", "TimelineAsset", "k_LatestVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_LatestVersion
void UnityEngine::Timeline::TimelineAsset::_set_k_LatestVersion(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::_set_k_LatestVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset", "k_LatestVersion", value));
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.UpgradeToLatestVersion
void UnityEngine::Timeline::TimelineAsset::UpgradeToLatestVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::UpgradeToLatestVersion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpgradeToLatestVersion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_editorSettings
UnityEngine::Timeline::TimelineAsset::EditorSettings* UnityEngine::Timeline::TimelineAsset::get_editorSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::get_editorSettings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_editorSettings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineAsset::EditorSettings*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_fixedDuration
double UnityEngine::Timeline::TimelineAsset::get_fixedDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::get_fixedDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_fixedDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.set_fixedDuration
void UnityEngine::Timeline::TimelineAsset::set_fixedDuration(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::set_fixedDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_fixedDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_durationMode
UnityEngine::Timeline::TimelineAsset::DurationMode UnityEngine::Timeline::TimelineAsset::get_durationMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::get_durationMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_durationMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineAsset::DurationMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.set_durationMode
void UnityEngine::Timeline::TimelineAsset::set_durationMode(UnityEngine::Timeline::TimelineAsset::DurationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::set_durationMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_durationMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_clipCaps
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::TimelineAsset::get_clipCaps_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::get_clipCaps_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_outputTrackCount
int UnityEngine::Timeline::TimelineAsset::get_outputTrackCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::get_outputTrackCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_outputTrackCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_rootTrackCount
int UnityEngine::Timeline::TimelineAsset::get_rootTrackCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::get_rootTrackCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_rootTrackCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.OnValidate
void UnityEngine::Timeline::TimelineAsset::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::OnValidate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.GetValidFramerate
float UnityEngine::Timeline::TimelineAsset::GetValidFramerate(float framerate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::GetValidFramerate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineAsset", "GetValidFramerate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(framerate)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, framerate);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.GetRootTrack
UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::TimelineAsset::GetRootTrack(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::GetRootTrack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRootTrack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.GetRootTracks
System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>* UnityEngine::Timeline::TimelineAsset::GetRootTracks() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::GetRootTracks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRootTracks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.GetOutputTrack
UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::TimelineAsset::GetOutputTrack(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::GetOutputTrack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetOutputTrack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.GetOutputTracks
System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>* UnityEngine::Timeline::TimelineAsset::GetOutputTracks() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::GetOutputTracks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetOutputTracks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.UpdateRootTrackCache
void UnityEngine::Timeline::TimelineAsset::UpdateRootTrackCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::UpdateRootTrackCache");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateRootTrackCache", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.UpdateOutputTrackCache
void UnityEngine::Timeline::TimelineAsset::UpdateOutputTrackCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::UpdateOutputTrackCache");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateOutputTrackCache", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_flattenedTracks
System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>* UnityEngine::Timeline::TimelineAsset::get_flattenedTracks() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::get_flattenedTracks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_flattenedTracks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_markerTrack
UnityEngine::Timeline::MarkerTrack* UnityEngine::Timeline::TimelineAsset::get_markerTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::get_markerTrack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_markerTrack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::MarkerTrack*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_trackObjects
System::Collections::Generic::List_1<UnityEngine::ScriptableObject*>* UnityEngine::Timeline::TimelineAsset::get_trackObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::get_trackObjects");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_trackObjects", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::ScriptableObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.AddTrackInternal
void UnityEngine::Timeline::TimelineAsset::AddTrackInternal(UnityEngine::Timeline::TrackAsset* track) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::AddTrackInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddTrackInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(track)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, track);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.RemoveTrack
void UnityEngine::Timeline::TimelineAsset::RemoveTrack(UnityEngine::Timeline::TrackAsset* track) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::RemoveTrack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveTrack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(track)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, track);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
void UnityEngine::Timeline::TimelineAsset::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
void UnityEngine::Timeline::TimelineAsset::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.__internalAwake
void UnityEngine::Timeline::TimelineAsset::__internalAwake() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::__internalAwake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "__internalAwake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.GatherProperties
void UnityEngine::Timeline::TimelineAsset::GatherProperties_NEW(UnityEngine::Playables::PlayableDirector* director, UnityEngine::Timeline::IPropertyCollector* driver) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::GatherProperties_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GatherProperties", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(director, driver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, director, driver);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.CreateMarkerTrack
void UnityEngine::Timeline::TimelineAsset::CreateMarkerTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::CreateMarkerTrack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateMarkerTrack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.Invalidate
void UnityEngine::Timeline::TimelineAsset::Invalidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::Invalidate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invalidate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.CalculateDuration
double UnityEngine::Timeline::TimelineAsset::CalculateDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::CalculateDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CalculateDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.AddSubTracksRecursive
void UnityEngine::Timeline::TimelineAsset::AddSubTracksRecursive(UnityEngine::Timeline::TrackAsset* track, System::Collections::Generic::List_1<UnityEngine::Timeline::TrackAsset*>*& allTracks) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::AddSubTracksRecursive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineAsset", "AddSubTracksRecursive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(track, allTracks)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, track, allTracks);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.CreateTrack
UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::TimelineAsset::CreateTrack(System::Type* type, UnityEngine::Timeline::TrackAsset* parent, ::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::CreateTrack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateTrack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, parent, name)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method, type, parent, name);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.DeleteClip
bool UnityEngine::Timeline::TimelineAsset::DeleteClip(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::DeleteClip");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DeleteClip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clip)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.DeleteTrack
bool UnityEngine::Timeline::TimelineAsset::DeleteTrack(UnityEngine::Timeline::TrackAsset* track) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::DeleteTrack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DeleteTrack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(track)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, track);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.MoveLastTrackBefore
void UnityEngine::Timeline::TimelineAsset::MoveLastTrackBefore(UnityEngine::Timeline::TrackAsset* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::MoveLastTrackBefore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveLastTrackBefore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(asset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, asset);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.AllocateTrack
UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::TimelineAsset::AllocateTrack(UnityEngine::Timeline::TrackAsset* trackAssetParent, ::Il2CppString* trackName, System::Type* trackType) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::AllocateTrack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AllocateTrack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(trackAssetParent, trackName, trackType)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method, trackAssetParent, trackName, trackType);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.DeleteRecordedAnimation
void UnityEngine::Timeline::TimelineAsset::DeleteRecordedAnimation(UnityEngine::Timeline::TrackAsset* track) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::DeleteRecordedAnimation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DeleteRecordedAnimation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(track)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, track);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.DeleteRecordedAnimation
void UnityEngine::Timeline::TimelineAsset::DeleteRecordedAnimation(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::DeleteRecordedAnimation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DeleteRecordedAnimation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clip)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_duration
double UnityEngine::Timeline::TimelineAsset::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::get_duration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.get_outputs
System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::TimelineAsset::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::get_outputs");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_outputs", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset.CreatePlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::TimelineAsset::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::CreatePlayable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, go)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineAsset/Versions
#include "UnityEngine/Timeline/TimelineAsset_Versions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineAsset/Versions Initial
UnityEngine::Timeline::TimelineAsset::Versions UnityEngine::Timeline::TimelineAsset::Versions::_get_Initial() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::Versions::_get_Initial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineAsset::Versions>("UnityEngine.Timeline", "TimelineAsset/Versions", "Initial"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineAsset/Versions Initial
void UnityEngine::Timeline::TimelineAsset::Versions::_set_Initial(UnityEngine::Timeline::TimelineAsset::Versions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::Versions::_set_Initial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset/Versions", "Initial", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineAsset/MediaType
#include "UnityEngine/Timeline/TimelineAsset_MediaType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineAsset/MediaType Animation
UnityEngine::Timeline::TimelineAsset::MediaType UnityEngine::Timeline::TimelineAsset::MediaType::_get_Animation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::MediaType::_get_Animation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineAsset::MediaType>("UnityEngine.Timeline", "TimelineAsset/MediaType", "Animation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineAsset/MediaType Animation
void UnityEngine::Timeline::TimelineAsset::MediaType::_set_Animation(UnityEngine::Timeline::TimelineAsset::MediaType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::MediaType::_set_Animation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset/MediaType", "Animation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineAsset/MediaType Audio
UnityEngine::Timeline::TimelineAsset::MediaType UnityEngine::Timeline::TimelineAsset::MediaType::_get_Audio() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::MediaType::_get_Audio");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineAsset::MediaType>("UnityEngine.Timeline", "TimelineAsset/MediaType", "Audio"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineAsset/MediaType Audio
void UnityEngine::Timeline::TimelineAsset::MediaType::_set_Audio(UnityEngine::Timeline::TimelineAsset::MediaType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::MediaType::_set_Audio");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset/MediaType", "Audio", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineAsset/MediaType Texture
UnityEngine::Timeline::TimelineAsset::MediaType UnityEngine::Timeline::TimelineAsset::MediaType::_get_Texture() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::MediaType::_get_Texture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineAsset::MediaType>("UnityEngine.Timeline", "TimelineAsset/MediaType", "Texture"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineAsset/MediaType Texture
void UnityEngine::Timeline::TimelineAsset::MediaType::_set_Texture(UnityEngine::Timeline::TimelineAsset::MediaType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::MediaType::_set_Texture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset/MediaType", "Texture", value));
}
// [ObsoleteAttribute] Offset: 0xCEA994
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineAsset/MediaType Video
UnityEngine::Timeline::TimelineAsset::MediaType UnityEngine::Timeline::TimelineAsset::MediaType::_get_Video() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::MediaType::_get_Video");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineAsset::MediaType>("UnityEngine.Timeline", "TimelineAsset/MediaType", "Video"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineAsset/MediaType Video
void UnityEngine::Timeline::TimelineAsset::MediaType::_set_Video(UnityEngine::Timeline::TimelineAsset::MediaType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::MediaType::_set_Video");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset/MediaType", "Video", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineAsset/MediaType Script
UnityEngine::Timeline::TimelineAsset::MediaType UnityEngine::Timeline::TimelineAsset::MediaType::_get_Script() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::MediaType::_get_Script");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineAsset::MediaType>("UnityEngine.Timeline", "TimelineAsset/MediaType", "Script"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineAsset/MediaType Script
void UnityEngine::Timeline::TimelineAsset::MediaType::_set_Script(UnityEngine::Timeline::TimelineAsset::MediaType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::MediaType::_set_Script");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset/MediaType", "Script", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineAsset/MediaType Hybrid
UnityEngine::Timeline::TimelineAsset::MediaType UnityEngine::Timeline::TimelineAsset::MediaType::_get_Hybrid() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::MediaType::_get_Hybrid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineAsset::MediaType>("UnityEngine.Timeline", "TimelineAsset/MediaType", "Hybrid"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineAsset/MediaType Hybrid
void UnityEngine::Timeline::TimelineAsset::MediaType::_set_Hybrid(UnityEngine::Timeline::TimelineAsset::MediaType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::MediaType::_set_Hybrid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset/MediaType", "Hybrid", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineAsset/MediaType Group
UnityEngine::Timeline::TimelineAsset::MediaType UnityEngine::Timeline::TimelineAsset::MediaType::_get_Group() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::MediaType::_get_Group");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineAsset::MediaType>("UnityEngine.Timeline", "TimelineAsset/MediaType", "Group"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineAsset/MediaType Group
void UnityEngine::Timeline::TimelineAsset::MediaType::_set_Group(UnityEngine::Timeline::TimelineAsset::MediaType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::MediaType::_set_Group");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset/MediaType", "Group", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineAsset/DurationMode
#include "UnityEngine/Timeline/TimelineAsset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineAsset/DurationMode BasedOnClips
UnityEngine::Timeline::TimelineAsset::DurationMode UnityEngine::Timeline::TimelineAsset::DurationMode::_get_BasedOnClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::DurationMode::_get_BasedOnClips");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineAsset::DurationMode>("UnityEngine.Timeline", "TimelineAsset/DurationMode", "BasedOnClips"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineAsset/DurationMode BasedOnClips
void UnityEngine::Timeline::TimelineAsset::DurationMode::_set_BasedOnClips(UnityEngine::Timeline::TimelineAsset::DurationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::DurationMode::_set_BasedOnClips");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset/DurationMode", "BasedOnClips", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimelineAsset/DurationMode FixedLength
UnityEngine::Timeline::TimelineAsset::DurationMode UnityEngine::Timeline::TimelineAsset::DurationMode::_get_FixedLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::DurationMode::_get_FixedLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimelineAsset::DurationMode>("UnityEngine.Timeline", "TimelineAsset/DurationMode", "FixedLength"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimelineAsset/DurationMode FixedLength
void UnityEngine::Timeline::TimelineAsset::DurationMode::_set_FixedLength(UnityEngine::Timeline::TimelineAsset::DurationMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::DurationMode::_set_FixedLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset/DurationMode", "FixedLength", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineAsset/EditorSettings
#include "UnityEngine/Timeline/TimelineAsset_EditorSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Single kMinFps
float UnityEngine::Timeline::TimelineAsset::EditorSettings::_get_kMinFps() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::EditorSettings::_get_kMinFps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.Timeline", "TimelineAsset/EditorSettings", "kMinFps"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Single kMinFps
void UnityEngine::Timeline::TimelineAsset::EditorSettings::_set_kMinFps(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::EditorSettings::_set_kMinFps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset/EditorSettings", "kMinFps", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Single kMaxFps
float UnityEngine::Timeline::TimelineAsset::EditorSettings::_get_kMaxFps() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::EditorSettings::_get_kMaxFps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.Timeline", "TimelineAsset/EditorSettings", "kMaxFps"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Single kMaxFps
void UnityEngine::Timeline::TimelineAsset::EditorSettings::_set_kMaxFps(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::EditorSettings::_set_kMaxFps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset/EditorSettings", "kMaxFps", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Single kDefaultFps
float UnityEngine::Timeline::TimelineAsset::EditorSettings::_get_kDefaultFps() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::EditorSettings::_get_kDefaultFps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.Timeline", "TimelineAsset/EditorSettings", "kDefaultFps"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Single kDefaultFps
void UnityEngine::Timeline::TimelineAsset::EditorSettings::_set_kDefaultFps(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::EditorSettings::_set_kDefaultFps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelineAsset/EditorSettings", "kDefaultFps", value));
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/EditorSettings.get_fps
float UnityEngine::Timeline::TimelineAsset::EditorSettings::get_fps() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::EditorSettings::get_fps");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_fps", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/EditorSettings.set_fps
void UnityEngine::Timeline::TimelineAsset::EditorSettings::set_fps(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::EditorSettings::set_fps");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_fps", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/EditorSettings.get_scenePreview
bool UnityEngine::Timeline::TimelineAsset::EditorSettings::get_scenePreview() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::EditorSettings::get_scenePreview");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_scenePreview", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/EditorSettings.set_scenePreview
void UnityEngine::Timeline::TimelineAsset::EditorSettings::set_scenePreview(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::EditorSettings::set_scenePreview");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_scenePreview", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/EditorSettings..cctor
void UnityEngine::Timeline::TimelineAsset::EditorSettings::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::EditorSettings::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineAsset/EditorSettings", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.TimelineAsset/<get_outputs>d__27
#include "UnityEngine/Timeline/TimelineAsset_-get_outputs-d__27.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/<get_outputs>d__27.System.IDisposable.Dispose
void UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System_IDisposable_Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System.IDisposable.Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/<get_outputs>d__27.MoveNext
bool UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::MoveNext_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::MoveNext_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/<get_outputs>d__27.<>m__Finally1
void UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/<get_outputs>d__27.<>m__Finally2
void UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::$$m__Finally2() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::<>m__Finally2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/<get_outputs>d__27.System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current
UnityEngine::Playables::PlayableBinding UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System_Collections_Generic_IEnumerator$UnityEngine_Playables_PlayableBinding$_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableBinding, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/<get_outputs>d__27.System.Collections.IEnumerator.Reset
void UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System_Collections_IEnumerator_Reset_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System.Collections.IEnumerator.Reset_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/<get_outputs>d__27.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System_Collections_IEnumerator_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System.Collections.IEnumerator.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/<get_outputs>d__27.System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator
System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System_Collections_Generic_IEnumerable$UnityEngine_Playables_PlayableBinding$_GetEnumerator_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator_NEW");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelineAsset/<get_outputs>d__27.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System_Collections_IEnumerable_GetEnumerator_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineAsset::$get_outputs$d__27::System.Collections.IEnumerable.GetEnumerator_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: UnityEngine.Timeline.TrackAsset/Versions
#include "UnityEngine/Timeline/TrackAsset_Versions.hpp"
// Including type: UnityEngine.Timeline.TrackAsset/TrackAssetUpgrade
#include "UnityEngine/Timeline/TrackAsset_TrackAssetUpgrade.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.Timeline.TrackAsset/<get_outputs>d__65
#include "UnityEngine/Timeline/TrackAsset_-get_outputs-d__65.hpp"
// Including type: UnityEngine.Timeline.TrackAsset/<>c
#include "UnityEngine/Timeline/TrackAsset_--c.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Timeline.TrackBindingTypeAttribute
#include "UnityEngine/Timeline/TrackBindingTypeAttribute.hpp"
// Including type: UnityEngine.Timeline.TimelineAsset
#include "UnityEngine/Timeline/TimelineAsset.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.IPlayableAsset
#include "UnityEngine/Playables/IPlayableAsset.hpp"
// Including type: UnityEngine.Timeline.IMarker
#include "UnityEngine/Timeline/IMarker.hpp"
// Including type: UnityEngine.Timeline.IntervalTree`1
#include "UnityEngine/Timeline/IntervalTree_1.hpp"
// Including type: UnityEngine.Timeline.RuntimeElement
#include "UnityEngine/Timeline/RuntimeElement.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: UnityEngine.Timeline.IPropertyCollector
#include "UnityEngine/Timeline/IPropertyCollector.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 k_LatestVersion
int UnityEngine::Timeline::TrackAsset::_get_k_LatestVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_get_k_LatestVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.Timeline", "TrackAsset", "k_LatestVersion"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_LatestVersion
void UnityEngine::Timeline::TrackAsset::_set_k_LatestVersion(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_set_k_LatestVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset", "k_LatestVersion", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Timeline.TrackAsset/TransientBuildData s_BuildData
UnityEngine::Timeline::TrackAsset::TransientBuildData UnityEngine::Timeline::TrackAsset::_get_s_BuildData() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_get_s_BuildData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackAsset::TransientBuildData>("UnityEngine.Timeline", "TrackAsset", "s_BuildData"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Timeline.TrackAsset/TransientBuildData s_BuildData
void UnityEngine::Timeline::TrackAsset::_set_s_BuildData(UnityEngine::Timeline::TrackAsset::TransientBuildData value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_set_s_BuildData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset", "s_BuildData", value));
}
// Autogenerated static field getter
// Get static field: static System.String kDefaultCurvesName
::Il2CppString* UnityEngine::Timeline::TrackAsset::_get_kDefaultCurvesName() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_get_kDefaultCurvesName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("UnityEngine.Timeline", "TrackAsset", "kDefaultCurvesName"));
}
// Autogenerated static field setter
// Set static field: static System.String kDefaultCurvesName
void UnityEngine::Timeline::TrackAsset::_set_kDefaultCurvesName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_set_kDefaultCurvesName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset", "kDefaultCurvesName", value));
}
// [CompilerGeneratedAttribute] Offset: 0xCEA43C
// Autogenerated static field getter
// Get static field: static private System.Action`3<UnityEngine.Timeline.TimelineClip,UnityEngine.GameObject,UnityEngine.Playables.Playable> OnClipPlayableCreate
System::Action_3<UnityEngine::Timeline::TimelineClip*, UnityEngine::GameObject*, UnityEngine::Playables::Playable>* UnityEngine::Timeline::TrackAsset::_get_OnClipPlayableCreate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_get_OnClipPlayableCreate");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Action_3<UnityEngine::Timeline::TimelineClip*, UnityEngine::GameObject*, UnityEngine::Playables::Playable>*>("UnityEngine.Timeline", "TrackAsset", "OnClipPlayableCreate")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`3<UnityEngine.Timeline.TimelineClip,UnityEngine.GameObject,UnityEngine.Playables.Playable> OnClipPlayableCreate
void UnityEngine::Timeline::TrackAsset::_set_OnClipPlayableCreate(System::Action_3<UnityEngine::Timeline::TimelineClip*, UnityEngine::GameObject*, UnityEngine::Playables::Playable>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_set_OnClipPlayableCreate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset", "OnClipPlayableCreate", value));
}
// [CompilerGeneratedAttribute] Offset: 0xCEA44C
// Autogenerated static field getter
// Get static field: static private System.Action`3<UnityEngine.Timeline.TrackAsset,UnityEngine.GameObject,UnityEngine.Playables.Playable> OnTrackAnimationPlayableCreate
System::Action_3<UnityEngine::Timeline::TrackAsset*, UnityEngine::GameObject*, UnityEngine::Playables::Playable>* UnityEngine::Timeline::TrackAsset::_get_OnTrackAnimationPlayableCreate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_get_OnTrackAnimationPlayableCreate");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Action_3<UnityEngine::Timeline::TrackAsset*, UnityEngine::GameObject*, UnityEngine::Playables::Playable>*>("UnityEngine.Timeline", "TrackAsset", "OnTrackAnimationPlayableCreate")));
}
// Autogenerated static field setter
// Set static field: static private System.Action`3<UnityEngine.Timeline.TrackAsset,UnityEngine.GameObject,UnityEngine.Playables.Playable> OnTrackAnimationPlayableCreate
void UnityEngine::Timeline::TrackAsset::_set_OnTrackAnimationPlayableCreate(System::Action_3<UnityEngine::Timeline::TrackAsset*, UnityEngine::GameObject*, UnityEngine::Playables::Playable>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_set_OnTrackAnimationPlayableCreate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset", "OnTrackAnimationPlayableCreate", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Timeline.TrackAsset[] s_EmptyCache
::Array<UnityEngine::Timeline::TrackAsset*>* UnityEngine::Timeline::TrackAsset::_get_s_EmptyCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_get_s_EmptyCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<UnityEngine::Timeline::TrackAsset*>*>("UnityEngine.Timeline", "TrackAsset", "s_EmptyCache"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Timeline.TrackAsset[] s_EmptyCache
void UnityEngine::Timeline::TrackAsset::_set_s_EmptyCache(::Array<UnityEngine::Timeline::TrackAsset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_set_s_EmptyCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset", "s_EmptyCache", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Type,UnityEngine.Timeline.TrackBindingTypeAttribute> s_TrackBindingTypeAttributeCache
System::Collections::Generic::Dictionary_2<System::Type*, UnityEngine::Timeline::TrackBindingTypeAttribute*>* UnityEngine::Timeline::TrackAsset::_get_s_TrackBindingTypeAttributeCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_get_s_TrackBindingTypeAttributeCache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<System::Type*, UnityEngine::Timeline::TrackBindingTypeAttribute*>*>("UnityEngine.Timeline", "TrackAsset", "s_TrackBindingTypeAttributeCache")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Type,UnityEngine.Timeline.TrackBindingTypeAttribute> s_TrackBindingTypeAttributeCache
void UnityEngine::Timeline::TrackAsset::_set_s_TrackBindingTypeAttributeCache(System::Collections::Generic::Dictionary_2<System::Type*, UnityEngine::Timeline::TrackBindingTypeAttribute*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::_set_s_TrackBindingTypeAttributeCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset", "s_TrackBindingTypeAttributeCache", value));
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.OnBeforeTrackSerialize
void UnityEngine::Timeline::TrackAsset::OnBeforeTrackSerialize_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::OnBeforeTrackSerialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnBeforeTrackSerialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.OnAfterTrackDeserialize
void UnityEngine::Timeline::TrackAsset::OnAfterTrackDeserialize_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::OnAfterTrackDeserialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnAfterTrackDeserialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.OnUpgradeFromVersion
void UnityEngine::Timeline::TrackAsset::OnUpgradeFromVersion_NEW(int oldVersion) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::OnUpgradeFromVersion_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnUpgradeFromVersion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(oldVersion)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, oldVersion);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
void UnityEngine::Timeline::TrackAsset::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
void UnityEngine::Timeline::TrackAsset::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UpgradeToLatestVersion
void UnityEngine::Timeline::TrackAsset::UpgradeToLatestVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::UpgradeToLatestVersion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpgradeToLatestVersion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.add_OnClipPlayableCreate
void UnityEngine::Timeline::TrackAsset::add_OnClipPlayableCreate(System::Action_3<UnityEngine::Timeline::TimelineClip*, UnityEngine::GameObject*, UnityEngine::Playables::Playable>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::add_OnClipPlayableCreate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAsset", "add_OnClipPlayableCreate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.remove_OnClipPlayableCreate
void UnityEngine::Timeline::TrackAsset::remove_OnClipPlayableCreate(System::Action_3<UnityEngine::Timeline::TimelineClip*, UnityEngine::GameObject*, UnityEngine::Playables::Playable>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::remove_OnClipPlayableCreate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAsset", "remove_OnClipPlayableCreate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.add_OnTrackAnimationPlayableCreate
void UnityEngine::Timeline::TrackAsset::add_OnTrackAnimationPlayableCreate(System::Action_3<UnityEngine::Timeline::TrackAsset*, UnityEngine::GameObject*, UnityEngine::Playables::Playable>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::add_OnTrackAnimationPlayableCreate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAsset", "add_OnTrackAnimationPlayableCreate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.remove_OnTrackAnimationPlayableCreate
void UnityEngine::Timeline::TrackAsset::remove_OnTrackAnimationPlayableCreate(System::Action_3<UnityEngine::Timeline::TrackAsset*, UnityEngine::GameObject*, UnityEngine::Playables::Playable>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::remove_OnTrackAnimationPlayableCreate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAsset", "remove_OnTrackAnimationPlayableCreate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_start
double UnityEngine::Timeline::TrackAsset::get_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_end
double UnityEngine::Timeline::TrackAsset::get_end() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_end");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_end", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_muted
bool UnityEngine::Timeline::TrackAsset::get_muted() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_muted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_muted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.set_muted
void UnityEngine::Timeline::TrackAsset::set_muted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::set_muted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_muted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_mutedInHierarchy
bool UnityEngine::Timeline::TrackAsset::get_mutedInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_mutedInHierarchy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_mutedInHierarchy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_timelineAsset
UnityEngine::Timeline::TimelineAsset* UnityEngine::Timeline::TrackAsset::get_timelineAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_timelineAsset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_timelineAsset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_parent
UnityEngine::Playables::PlayableAsset* UnityEngine::Timeline::TrackAsset::get_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_parent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_parent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.set_parent
void UnityEngine::Timeline::TrackAsset::set_parent(UnityEngine::Playables::PlayableAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::set_parent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_parent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetClips
System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TimelineClip*>* UnityEngine::Timeline::TrackAsset::GetClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetClips");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetClips", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TimelineClip*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_clips
::Array<UnityEngine::Timeline::TimelineClip*>* UnityEngine::Timeline::TrackAsset::get_clips() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_clips");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_clips", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Timeline::TimelineClip*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_isEmpty
bool UnityEngine::Timeline::TrackAsset::get_isEmpty_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_isEmpty_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isEmpty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_hasClips
bool UnityEngine::Timeline::TrackAsset::get_hasClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_hasClips");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasClips", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_hasCurves
bool UnityEngine::Timeline::TrackAsset::get_hasCurves_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_hasCurves_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasCurves", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_isSubTrack
bool UnityEngine::Timeline::TrackAsset::get_isSubTrack() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_isSubTrack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isSubTrack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetChildTracks
System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>* UnityEngine::Timeline::TrackAsset::GetChildTracks() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetChildTracks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetChildTracks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_customPlayableTypename
::Il2CppString* UnityEngine::Timeline::TrackAsset::get_customPlayableTypename() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_customPlayableTypename");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_customPlayableTypename", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.set_customPlayableTypename
void UnityEngine::Timeline::TrackAsset::set_customPlayableTypename(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::set_customPlayableTypename");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_customPlayableTypename", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_curves
UnityEngine::AnimationClip* UnityEngine::Timeline::TrackAsset::get_curves_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_curves_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_curves", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.set_curves
void UnityEngine::Timeline::TrackAsset::set_curves(UnityEngine::AnimationClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::set_curves");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_curves", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UnityEngine.Timeline.ICurvesOwner.get_defaultCurvesName
::Il2CppString* UnityEngine::Timeline::TrackAsset::UnityEngine_Timeline_ICurvesOwner_get_defaultCurvesName_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::UnityEngine.Timeline.ICurvesOwner.get_defaultCurvesName_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnityEngine.Timeline.ICurvesOwner.get_defaultCurvesName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UnityEngine.Timeline.ICurvesOwner.get_asset
UnityEngine::Object* UnityEngine::Timeline::TrackAsset::UnityEngine_Timeline_ICurvesOwner_get_asset_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::UnityEngine.Timeline.ICurvesOwner.get_asset_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnityEngine.Timeline.ICurvesOwner.get_asset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UnityEngine.Timeline.ICurvesOwner.get_assetOwner
UnityEngine::Object* UnityEngine::Timeline::TrackAsset::UnityEngine_Timeline_ICurvesOwner_get_assetOwner_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::UnityEngine.Timeline.ICurvesOwner.get_assetOwner_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnityEngine.Timeline.ICurvesOwner.get_assetOwner", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Object*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UnityEngine.Timeline.ICurvesOwner.get_targetTrack
UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::TrackAsset::UnityEngine_Timeline_ICurvesOwner_get_targetTrack_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::UnityEngine.Timeline.ICurvesOwner.get_targetTrack_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnityEngine.Timeline.ICurvesOwner.get_targetTrack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_subTracksObjects
System::Collections::Generic::List_1<UnityEngine::ScriptableObject*>* UnityEngine::Timeline::TrackAsset::get_subTracksObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_subTracksObjects");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_subTracksObjects", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::ScriptableObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_locked
bool UnityEngine::Timeline::TrackAsset::get_locked() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_locked");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_locked", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.set_locked
void UnityEngine::Timeline::TrackAsset::set_locked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::set_locked");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_locked", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_lockedInHierarchy
bool UnityEngine::Timeline::TrackAsset::get_lockedInHierarchy() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_lockedInHierarchy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_lockedInHierarchy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_supportsNotifications
bool UnityEngine::Timeline::TrackAsset::get_supportsNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_supportsNotifications");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_supportsNotifications", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.__internalAwake
void UnityEngine::Timeline::TrackAsset::__internalAwake() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::__internalAwake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "__internalAwake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateCurves
void UnityEngine::Timeline::TrackAsset::CreateCurves_NEW(::Il2CppString* curvesClipName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreateCurves_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateCurves", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(curvesClipName)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, curvesClipName);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateTrackMixer
UnityEngine::Playables::Playable UnityEngine::Timeline::TrackAsset::CreateTrackMixer(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreateTrackMixer_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateTrackMixer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, go, inputCount)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, inputCount);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateDefaultClip
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::TrackAsset::CreateDefaultClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreateDefaultClip");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateDefaultClip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.DeleteClip
bool UnityEngine::Timeline::TrackAsset::DeleteClip(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::DeleteClip");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DeleteClip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clip)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateMarker
UnityEngine::Timeline::IMarker* UnityEngine::Timeline::TrackAsset::CreateMarker(System::Type* type, double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreateMarker");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateMarker", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, time)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::IMarker*, false>(this, ___internal__method, type, time);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.DeleteMarker
bool UnityEngine::Timeline::TrackAsset::DeleteMarker(UnityEngine::Timeline::IMarker* marker) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::DeleteMarker");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DeleteMarker", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(marker)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, marker);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetMarkers
System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::IMarker*>* UnityEngine::Timeline::TrackAsset::GetMarkers() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetMarkers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMarkers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::IMarker*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetMarkerCount
int UnityEngine::Timeline::TrackAsset::GetMarkerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetMarkerCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMarkerCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetMarker
UnityEngine::Timeline::IMarker* UnityEngine::Timeline::TrackAsset::GetMarker(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetMarker");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMarker", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(idx)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::IMarker*, false>(this, ___internal__method, idx);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateClip
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::TrackAsset::CreateClip(System::Type* requestedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreateClip");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateClip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(requestedType)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method, requestedType);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateAndAddNewClipOfType
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::TrackAsset::CreateAndAddNewClipOfType(System::Type* requestedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreateAndAddNewClipOfType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateAndAddNewClipOfType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(requestedType)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method, requestedType);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateClipOfType
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::TrackAsset::CreateClipOfType(System::Type* requestedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreateClipOfType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateClipOfType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(requestedType)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method, requestedType);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateClipFromPlayableAsset
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::TrackAsset::CreateClipFromPlayableAsset(UnityEngine::Playables::IPlayableAsset* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreateClipFromPlayableAsset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateClipFromPlayableAsset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(asset)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method, asset);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateClipFromAsset
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::TrackAsset::CreateClipFromAsset(UnityEngine::ScriptableObject* playableAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreateClipFromAsset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateClipFromAsset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playableAsset)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method, playableAsset);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetMarkersRaw
System::Collections::Generic::IEnumerable_1<UnityEngine::ScriptableObject*>* UnityEngine::Timeline::TrackAsset::GetMarkersRaw() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetMarkersRaw");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMarkersRaw", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::ScriptableObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.ClearMarkers
void UnityEngine::Timeline::TrackAsset::ClearMarkers() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::ClearMarkers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearMarkers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.AddMarker
void UnityEngine::Timeline::TrackAsset::AddMarker(UnityEngine::ScriptableObject* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::AddMarker");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddMarker", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(e)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.DeleteMarkerRaw
bool UnityEngine::Timeline::TrackAsset::DeleteMarkerRaw(UnityEngine::ScriptableObject* marker) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::DeleteMarkerRaw");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DeleteMarkerRaw", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(marker)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, marker);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetTimeRangeHash
int UnityEngine::Timeline::TrackAsset::GetTimeRangeHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetTimeRangeHash");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTimeRangeHash", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.AddClip
void UnityEngine::Timeline::TrackAsset::AddClip(UnityEngine::Timeline::TimelineClip* newClip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::AddClip");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddClip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(newClip)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newClip);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateNotificationsPlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::TrackAsset::CreateNotificationsPlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Playables::Playable mixerPlayable, UnityEngine::GameObject* go, UnityEngine::Playables::Playable timelinePlayable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreateNotificationsPlayable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateNotificationsPlayable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, mixerPlayable, go, timelinePlayable)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, mixerPlayable, go, timelinePlayable);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreatePlayableGraph
UnityEngine::Playables::Playable UnityEngine::Timeline::TrackAsset::CreatePlayableGraph(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go, UnityEngine::Timeline::IntervalTree_1<UnityEngine::Timeline::RuntimeElement*>* tree, UnityEngine::Playables::Playable timelinePlayable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreatePlayableGraph");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreatePlayableGraph", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, go, tree, timelinePlayable)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, tree, timelinePlayable);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CompileClips
UnityEngine::Playables::Playable UnityEngine::Timeline::TrackAsset::CompileClips_NEW(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go, System::Collections::Generic::IList_1<UnityEngine::Timeline::TimelineClip*>* timelineClips, UnityEngine::Timeline::IntervalTree_1<UnityEngine::Timeline::RuntimeElement*>* tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CompileClips_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CompileClips", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, go, timelineClips, tree)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, timelineClips, tree);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GatherCompilableTracks
void UnityEngine::Timeline::TrackAsset::GatherCompilableTracks(System::Collections::Generic::IList_1<UnityEngine::Timeline::TrackAsset*>* tracks) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GatherCompilableTracks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GatherCompilableTracks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tracks)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tracks);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GatherNotificiations
void UnityEngine::Timeline::TrackAsset::GatherNotificiations(System::Collections::Generic::List_1<UnityEngine::Timeline::IMarker*>* markers) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GatherNotificiations");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GatherNotificiations", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(markers)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, markers);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.OnCreateClipPlayableGraph
UnityEngine::Playables::Playable UnityEngine::Timeline::TrackAsset::OnCreateClipPlayableGraph_NEW(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go, UnityEngine::Timeline::IntervalTree_1<UnityEngine::Timeline::RuntimeElement*>* tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::OnCreateClipPlayableGraph_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnCreateClipPlayableGraph", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, go, tree)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, tree);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.ConfigureTrackAnimation
void UnityEngine::Timeline::TrackAsset::ConfigureTrackAnimation(UnityEngine::Timeline::IntervalTree_1<UnityEngine::Timeline::RuntimeElement*>* tree, UnityEngine::GameObject* go, UnityEngine::Playables::Playable blend) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::ConfigureTrackAnimation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConfigureTrackAnimation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tree, go, blend)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tree, go, blend);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.SortClips
void UnityEngine::Timeline::TrackAsset::SortClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::SortClips");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SortClips", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.ClearClipsInternal
void UnityEngine::Timeline::TrackAsset::ClearClipsInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::ClearClipsInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearClipsInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.ClearSubTracksInternal
void UnityEngine::Timeline::TrackAsset::ClearSubTracksInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::ClearSubTracksInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearSubTracksInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.OnClipMove
void UnityEngine::Timeline::TrackAsset::OnClipMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::OnClipMove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnClipMove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreateNewClipContainerInternal
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::TrackAsset::CreateNewClipContainerInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreateNewClipContainerInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateNewClipContainerInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.AddChild
void UnityEngine::Timeline::TrackAsset::AddChild(UnityEngine::Timeline::TrackAsset* child) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::AddChild");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddChild", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(child)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, child);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.MoveLastTrackBefore
void UnityEngine::Timeline::TrackAsset::MoveLastTrackBefore(UnityEngine::Timeline::TrackAsset* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::MoveLastTrackBefore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveLastTrackBefore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(asset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, asset);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.RemoveSubTrack
bool UnityEngine::Timeline::TrackAsset::RemoveSubTrack(UnityEngine::Timeline::TrackAsset* child) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::RemoveSubTrack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveSubTrack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(child)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, child);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.RemoveClip
void UnityEngine::Timeline::TrackAsset::RemoveClip(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::RemoveClip");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveClip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clip)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetEvaluationTime
void UnityEngine::Timeline::TrackAsset::GetEvaluationTime_NEW(double& outStart, double& outDuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetEvaluationTime_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEvaluationTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(outStart, outDuration)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, outStart, outDuration);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetSequenceTime
void UnityEngine::Timeline::TrackAsset::GetSequenceTime_NEW(double& outStart, double& outDuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetSequenceTime_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSequenceTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(outStart, outDuration)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, outStart, outDuration);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GatherProperties
void UnityEngine::Timeline::TrackAsset::GatherProperties(UnityEngine::Playables::PlayableDirector* director, UnityEngine::Timeline::IPropertyCollector* driver) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GatherProperties_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GatherProperties", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(director, driver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, director, driver);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetGameObjectBinding
UnityEngine::GameObject* UnityEngine::Timeline::TrackAsset::GetGameObjectBinding(UnityEngine::Playables::PlayableDirector* director) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetGameObjectBinding");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetGameObjectBinding", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(director)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, director);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.ValidateClipType
bool UnityEngine::Timeline::TrackAsset::ValidateClipType(System::Type* clipType) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::ValidateClipType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ValidateClipType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clipType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, clipType);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.OnCreateClip
void UnityEngine::Timeline::TrackAsset::OnCreateClip(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::OnCreateClip_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnCreateClip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clip)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UpdateDuration
void UnityEngine::Timeline::TrackAsset::UpdateDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::UpdateDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CalculateItemsHash
int UnityEngine::Timeline::TrackAsset::CalculateItemsHash_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CalculateItemsHash_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CalculateItemsHash", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreatePlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::TrackAsset::CreatePlayable_NEW(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* gameObject, UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreatePlayable_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, gameObject, clip)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, gameObject, clip);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.Invalidate
void UnityEngine::Timeline::TrackAsset::Invalidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::Invalidate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invalidate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetNotificationDuration
double UnityEngine::Timeline::TrackAsset::GetNotificationDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetNotificationDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetNotificationDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CanCompileClips
bool UnityEngine::Timeline::TrackAsset::CanCompileClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CanCompileClips_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CanCompileClips", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.IsCompilable
bool UnityEngine::Timeline::TrackAsset::IsCompilable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::IsCompilable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsCompilable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.UpdateChildTrackCache
void UnityEngine::Timeline::TrackAsset::UpdateChildTrackCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::UpdateChildTrackCache");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateChildTrackCache", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.Hash
int UnityEngine::Timeline::TrackAsset::Hash_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::Hash_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Hash", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetClipsHash
int UnityEngine::Timeline::TrackAsset::GetClipsHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetClipsHash");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetClipsHash", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.GetAnimationClipHash
int UnityEngine::Timeline::TrackAsset::GetAnimationClipHash(UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::GetAnimationClipHash");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAsset", "GetAnimationClipHash", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clip)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.HasNotifications
bool UnityEngine::Timeline::TrackAsset::HasNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::HasNotifications");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HasNotifications", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CanCompileNotifications
bool UnityEngine::Timeline::TrackAsset::CanCompileNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CanCompileNotifications");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CanCompileNotifications", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CanCompileClipsRecursive
bool UnityEngine::Timeline::TrackAsset::CanCompileClipsRecursive() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CanCompileClipsRecursive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CanCompileClipsRecursive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_duration
double UnityEngine::Timeline::TrackAsset::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_duration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.get_outputs
System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::TrackAsset::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::get_outputs");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_outputs", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset.CreatePlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::TrackAsset::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::CreatePlayable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, go)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset..cctor
void UnityEngine::Timeline::TrackAsset::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAsset", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackAsset/Versions
#include "UnityEngine/Timeline/TrackAsset_Versions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackAsset/Versions Initial
UnityEngine::Timeline::TrackAsset::Versions UnityEngine::Timeline::TrackAsset::Versions::_get_Initial() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::Versions::_get_Initial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackAsset::Versions>("UnityEngine.Timeline", "TrackAsset/Versions", "Initial"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackAsset/Versions Initial
void UnityEngine::Timeline::TrackAsset::Versions::_set_Initial(UnityEngine::Timeline::TrackAsset::Versions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::Versions::_set_Initial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset/Versions", "Initial", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackAsset/Versions RotationAsEuler
UnityEngine::Timeline::TrackAsset::Versions UnityEngine::Timeline::TrackAsset::Versions::_get_RotationAsEuler() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::Versions::_get_RotationAsEuler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackAsset::Versions>("UnityEngine.Timeline", "TrackAsset/Versions", "RotationAsEuler"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackAsset/Versions RotationAsEuler
void UnityEngine::Timeline::TrackAsset::Versions::_set_RotationAsEuler(UnityEngine::Timeline::TrackAsset::Versions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::Versions::_set_RotationAsEuler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset/Versions", "RotationAsEuler", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackAsset/Versions RootMotionUpgrade
UnityEngine::Timeline::TrackAsset::Versions UnityEngine::Timeline::TrackAsset::Versions::_get_RootMotionUpgrade() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::Versions::_get_RootMotionUpgrade");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackAsset::Versions>("UnityEngine.Timeline", "TrackAsset/Versions", "RootMotionUpgrade"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackAsset/Versions RootMotionUpgrade
void UnityEngine::Timeline::TrackAsset::Versions::_set_RootMotionUpgrade(UnityEngine::Timeline::TrackAsset::Versions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::Versions::_set_RootMotionUpgrade");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset/Versions", "RootMotionUpgrade", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackAsset/Versions AnimatedTrackProperties
UnityEngine::Timeline::TrackAsset::Versions UnityEngine::Timeline::TrackAsset::Versions::_get_AnimatedTrackProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::Versions::_get_AnimatedTrackProperties");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackAsset::Versions>("UnityEngine.Timeline", "TrackAsset/Versions", "AnimatedTrackProperties"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackAsset/Versions AnimatedTrackProperties
void UnityEngine::Timeline::TrackAsset::Versions::_set_AnimatedTrackProperties(UnityEngine::Timeline::TrackAsset::Versions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::Versions::_set_AnimatedTrackProperties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset/Versions", "AnimatedTrackProperties", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackAsset/TransientBuildData
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: UnityEngine.Timeline.IMarker
#include "UnityEngine/Timeline/IMarker.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TrackAsset/TransientBuildData.Create
UnityEngine::Timeline::TrackAsset::TransientBuildData UnityEngine::Timeline::TrackAsset::TransientBuildData::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::TransientBuildData::Create");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAsset/TransientBuildData", "Create", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TrackAsset::TransientBuildData, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/TransientBuildData.Clear
void UnityEngine::Timeline::TrackAsset::TransientBuildData::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::TransientBuildData::Clear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.TrackAsset/<get_outputs>d__65
#include "UnityEngine/Timeline/TrackAsset_-get_outputs-d__65.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TrackAsset/<get_outputs>d__65.System.IDisposable.Dispose
void UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System_IDisposable_Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System.IDisposable.Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/<get_outputs>d__65.MoveNext
bool UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::MoveNext_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::MoveNext_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/<get_outputs>d__65.System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current
UnityEngine::Playables::PlayableBinding UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System_Collections_Generic_IEnumerator$UnityEngine_Playables_PlayableBinding$_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableBinding, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/<get_outputs>d__65.System.Collections.IEnumerator.Reset
void UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System_Collections_IEnumerator_Reset_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System.Collections.IEnumerator.Reset_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/<get_outputs>d__65.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System_Collections_IEnumerator_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System.Collections.IEnumerator.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/<get_outputs>d__65.System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator
System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System_Collections_Generic_IEnumerable$UnityEngine_Playables_PlayableBinding$_GetEnumerator_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator_NEW");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/<get_outputs>d__65.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System_Collections_IEnumerable_GetEnumerator_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$get_outputs$d__65::System.Collections.IEnumerable.GetEnumerator_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackAsset/<>c
#include "UnityEngine/Timeline/TrackAsset_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Timeline.TrackAsset/<>c <>9
UnityEngine::Timeline::TrackAsset::$$c* UnityEngine::Timeline::TrackAsset::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackAsset::$$c*>("UnityEngine.Timeline", "TrackAsset/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Timeline.TrackAsset/<>c <>9
void UnityEngine::Timeline::TrackAsset::$$c::_set_$$9(UnityEngine::Timeline::TrackAsset::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.Timeline.TimelineClip> <>9__121_0
System::Comparison_1<UnityEngine::Timeline::TimelineClip*>* UnityEngine::Timeline::TrackAsset::$$c::_get_$$9__121_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$$c::_get_$$9__121_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Comparison_1<UnityEngine::Timeline::TimelineClip*>*>("UnityEngine.Timeline", "TrackAsset/<>c", "<>9__121_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.Timeline.TimelineClip> <>9__121_0
void UnityEngine::Timeline::TrackAsset::$$c::_set_$$9__121_0(System::Comparison_1<UnityEngine::Timeline::TimelineClip*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$$c::_set_$$9__121_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackAsset/<>c", "<>9__121_0", value)));
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/<>c..cctor
void UnityEngine::Timeline::TrackAsset::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAsset/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TrackAsset/<>c.<SortClips>b__121_0
int UnityEngine::Timeline::TrackAsset::$$c::$SortClips$b__121_0(UnityEngine::Timeline::TimelineClip* clip1, UnityEngine::Timeline::TimelineClip* clip2) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAsset::$$c::<SortClips>b__121_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortClips>b__121_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clip1, clip2))));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, clip1, clip2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackColorAttribute
#include "UnityEngine/Timeline/TrackColorAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TrackColorAttribute.get_color
UnityEngine::Color UnityEngine::Timeline::TrackColorAttribute::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackColorAttribute::get_color");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AudioClipProperties
#include "UnityEngine/Timeline/AudioClipProperties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AudioMixerProperties
#include "UnityEngine/Timeline/AudioMixerProperties.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.AudioMixerProperties.PrepareFrame
void UnityEngine::Timeline::AudioMixerProperties::PrepareFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioMixerProperties::PrepareFrame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PrepareFrame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable, info)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AudioPlayableAsset
#include "UnityEngine/Timeline/AudioPlayableAsset.hpp"
// Including type: UnityEngine.Timeline.AudioPlayableAsset/<get_outputs>d__16
#include "UnityEngine/Timeline/AudioPlayableAsset_-get_outputs-d__16.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Timeline.AudioClipProperties
#include "UnityEngine/Timeline/AudioClipProperties.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.get_bufferingTime
float UnityEngine::Timeline::AudioPlayableAsset::get_bufferingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::get_bufferingTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_bufferingTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.set_bufferingTime
void UnityEngine::Timeline::AudioPlayableAsset::set_bufferingTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::set_bufferingTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_bufferingTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.get_clip
UnityEngine::AudioClip* UnityEngine::Timeline::AudioPlayableAsset::get_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::get_clip");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_clip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.set_clip
void UnityEngine::Timeline::AudioPlayableAsset::set_clip(UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::set_clip");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_clip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.get_loop
bool UnityEngine::Timeline::AudioPlayableAsset::get_loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::get_loop");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_loop", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.set_loop
void UnityEngine::Timeline::AudioPlayableAsset::set_loop(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::set_loop");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_loop", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.get_clipCaps
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::AudioPlayableAsset::get_clipCaps_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::get_clipCaps_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.get_duration
double UnityEngine::Timeline::AudioPlayableAsset::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::get_duration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.get_outputs
System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::AudioPlayableAsset::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::get_outputs");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_outputs", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset.CreatePlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::AudioPlayableAsset::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::CreatePlayable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, go)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.AudioPlayableAsset/<get_outputs>d__16
#include "UnityEngine/Timeline/AudioPlayableAsset_-get_outputs-d__16.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset/<get_outputs>d__16.System.IDisposable.Dispose
void UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System_IDisposable_Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System.IDisposable.Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset/<get_outputs>d__16.MoveNext
bool UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::MoveNext_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::MoveNext_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset/<get_outputs>d__16.System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current
UnityEngine::Playables::PlayableBinding UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System_Collections_Generic_IEnumerator$UnityEngine_Playables_PlayableBinding$_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableBinding, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset/<get_outputs>d__16.System.Collections.IEnumerator.Reset
void UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System_Collections_IEnumerator_Reset_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System.Collections.IEnumerator.Reset_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset/<get_outputs>d__16.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System_Collections_IEnumerator_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System.Collections.IEnumerator.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset/<get_outputs>d__16.System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator
System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System_Collections_Generic_IEnumerable$UnityEngine_Playables_PlayableBinding$_GetEnumerator_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator_NEW");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioPlayableAsset/<get_outputs>d__16.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System_Collections_IEnumerable_GetEnumerator_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioPlayableAsset::$get_outputs$d__16::System.Collections.IEnumerable.GetEnumerator_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.AudioTrack
#include "UnityEngine/Timeline/AudioTrack.hpp"
// Including type: UnityEngine.Timeline.AudioTrack/<get_outputs>d__4
#include "UnityEngine/Timeline/AudioTrack_-get_outputs-d__4.hpp"
// Including type: UnityEngine.Timeline.AudioMixerProperties
#include "UnityEngine/Timeline/AudioMixerProperties.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: UnityEngine.Timeline.IntervalTree`1
#include "UnityEngine/Timeline/IntervalTree_1.hpp"
// Including type: UnityEngine.Timeline.RuntimeElement
#include "UnityEngine/Timeline/RuntimeElement.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.AudioTrack.CreateClip
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::AudioTrack::CreateClip(UnityEngine::AudioClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::CreateClip");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateClip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clip)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack.OnValidate
void UnityEngine::Timeline::AudioTrack::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::OnValidate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack.CompileClips
UnityEngine::Playables::Playable UnityEngine::Timeline::AudioTrack::CompileClips(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go, System::Collections::Generic::IList_1<UnityEngine::Timeline::TimelineClip*>* timelineClips, UnityEngine::Timeline::IntervalTree_1<UnityEngine::Timeline::RuntimeElement*>* tree) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::CompileClips");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CompileClips", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, go, timelineClips, tree)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, timelineClips, tree);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack.get_outputs
System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::AudioTrack::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::get_outputs");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_outputs", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.AudioTrack/<get_outputs>d__4
#include "UnityEngine/Timeline/AudioTrack_-get_outputs-d__4.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.AudioTrack/<get_outputs>d__4.System.IDisposable.Dispose
void UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System_IDisposable_Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System.IDisposable.Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack/<get_outputs>d__4.MoveNext
bool UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::MoveNext_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::MoveNext_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack/<get_outputs>d__4.System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current
UnityEngine::Playables::PlayableBinding UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System_Collections_Generic_IEnumerator$UnityEngine_Playables_PlayableBinding$_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<UnityEngine.Playables.PlayableBinding>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::PlayableBinding, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack/<get_outputs>d__4.System.Collections.IEnumerator.Reset
void UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System_Collections_IEnumerator_Reset_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System.Collections.IEnumerator.Reset_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack/<get_outputs>d__4.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System_Collections_IEnumerator_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System.Collections.IEnumerator.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack/<get_outputs>d__4.System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator
System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System_Collections_Generic_IEnumerable$UnityEngine_Playables_PlayableBinding$_GetEnumerator_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator_NEW");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<UnityEngine.Playables.PlayableBinding>.GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.AudioTrack/<get_outputs>d__4.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System_Collections_IEnumerable_GetEnumerator_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::AudioTrack::$get_outputs$d__4::System.Collections.IEnumerable.GetEnumerator_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps None
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps None
void UnityEngine::Timeline::ClipCaps::_set_None(UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps Looping
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_Looping() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_get_Looping");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "Looping"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps Looping
void UnityEngine::Timeline::ClipCaps::_set_Looping(UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_set_Looping");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "Looping", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps Extrapolation
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_Extrapolation() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_get_Extrapolation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "Extrapolation"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps Extrapolation
void UnityEngine::Timeline::ClipCaps::_set_Extrapolation(UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_set_Extrapolation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "Extrapolation", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps ClipIn
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_ClipIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_get_ClipIn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "ClipIn"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps ClipIn
void UnityEngine::Timeline::ClipCaps::_set_ClipIn(UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_set_ClipIn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "ClipIn", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps SpeedMultiplier
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_SpeedMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_get_SpeedMultiplier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "SpeedMultiplier"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps SpeedMultiplier
void UnityEngine::Timeline::ClipCaps::_set_SpeedMultiplier(UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_set_SpeedMultiplier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "SpeedMultiplier", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps Blending
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_Blending() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_get_Blending");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "Blending"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps Blending
void UnityEngine::Timeline::ClipCaps::_set_Blending(UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_set_Blending");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "Blending", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps AutoScale
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_AutoScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_get_AutoScale");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "AutoScale"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps AutoScale
void UnityEngine::Timeline::ClipCaps::_set_AutoScale(UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_set_AutoScale");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "AutoScale", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ClipCaps All
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ClipCaps::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ClipCaps>("UnityEngine.Timeline", "ClipCaps", "All"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ClipCaps All
void UnityEngine::Timeline::ClipCaps::_set_All(UnityEngine::Timeline::ClipCaps value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ClipCaps::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ClipCaps", "All", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelineClipCapsExtensions
#include "UnityEngine/Timeline/TimelineClipCapsExtensions.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimelineClipCapsExtensions.SupportsLooping
bool UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsLooping(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsLooping");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipCapsExtensions", "SupportsLooping", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clip)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClipCapsExtensions.SupportsExtrapolation
bool UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsExtrapolation(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsExtrapolation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipCapsExtensions", "SupportsExtrapolation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clip)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClipCapsExtensions.SupportsClipIn
bool UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsClipIn(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsClipIn");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipCapsExtensions", "SupportsClipIn", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clip)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClipCapsExtensions.SupportsSpeedMultiplier
bool UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsSpeedMultiplier(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsSpeedMultiplier");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipCapsExtensions", "SupportsSpeedMultiplier", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clip)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClipCapsExtensions.SupportsBlending
bool UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsBlending(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClipCapsExtensions::SupportsBlending");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipCapsExtensions", "SupportsBlending", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clip)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClipCapsExtensions.HasAll
bool UnityEngine::Timeline::TimelineClipCapsExtensions::HasAll(UnityEngine::Timeline::ClipCaps caps, UnityEngine::Timeline::ClipCaps flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClipCapsExtensions::HasAll");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipCapsExtensions", "HasAll", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(caps, flags)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, caps, flags);
}
// Autogenerated method: UnityEngine.Timeline.TimelineClipCapsExtensions.HasAny
bool UnityEngine::Timeline::TimelineClipCapsExtensions::HasAny(UnityEngine::Timeline::ClipCaps caps, UnityEngine::Timeline::ClipCaps flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineClipCapsExtensions::HasAny");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineClipCapsExtensions", "HasAny", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(caps, flags)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, caps, flags);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ControlPlayableAsset
#include "UnityEngine/Timeline/ControlPlayableAsset.hpp"
// Including type: UnityEngine.Timeline.ControlPlayableAsset/<GetControlableScripts>d__38
#include "UnityEngine/Timeline/ControlPlayableAsset_-GetControlableScripts-d__38.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
// Including type: UnityEngine.Timeline.IPropertyCollector
#include "UnityEngine/Timeline/IPropertyCollector.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 k_MaxRandInt
int UnityEngine::Timeline::ControlPlayableAsset::_get_k_MaxRandInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::_get_k_MaxRandInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.Timeline", "ControlPlayableAsset", "k_MaxRandInt"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_MaxRandInt
void UnityEngine::Timeline::ControlPlayableAsset::_set_k_MaxRandInt(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::_set_k_MaxRandInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ControlPlayableAsset", "k_MaxRandInt", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.Playables.PlayableDirector> k_EmptyDirectorsList
System::Collections::Generic::List_1<UnityEngine::Playables::PlayableDirector*>* UnityEngine::Timeline::ControlPlayableAsset::_get_k_EmptyDirectorsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::_get_k_EmptyDirectorsList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<UnityEngine::Playables::PlayableDirector*>*>("UnityEngine.Timeline", "ControlPlayableAsset", "k_EmptyDirectorsList"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.Playables.PlayableDirector> k_EmptyDirectorsList
void UnityEngine::Timeline::ControlPlayableAsset::_set_k_EmptyDirectorsList(System::Collections::Generic::List_1<UnityEngine::Playables::PlayableDirector*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::_set_k_EmptyDirectorsList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ControlPlayableAsset", "k_EmptyDirectorsList", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<UnityEngine.ParticleSystem> k_EmptyParticlesList
System::Collections::Generic::List_1<UnityEngine::ParticleSystem*>* UnityEngine::Timeline::ControlPlayableAsset::_get_k_EmptyParticlesList() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::_get_k_EmptyParticlesList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<UnityEngine::ParticleSystem*>*>("UnityEngine.Timeline", "ControlPlayableAsset", "k_EmptyParticlesList"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<UnityEngine.ParticleSystem> k_EmptyParticlesList
void UnityEngine::Timeline::ControlPlayableAsset::_set_k_EmptyParticlesList(System::Collections::Generic::List_1<UnityEngine::ParticleSystem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::_set_k_EmptyParticlesList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ControlPlayableAsset", "k_EmptyParticlesList", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.HashSet`1<UnityEngine.Playables.PlayableDirector> s_ProcessedDirectors
System::Collections::Generic::HashSet_1<UnityEngine::Playables::PlayableDirector*>* UnityEngine::Timeline::ControlPlayableAsset::_get_s_ProcessedDirectors() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::_get_s_ProcessedDirectors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::HashSet_1<UnityEngine::Playables::PlayableDirector*>*>("UnityEngine.Timeline", "ControlPlayableAsset", "s_ProcessedDirectors"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.HashSet`1<UnityEngine.Playables.PlayableDirector> s_ProcessedDirectors
void UnityEngine::Timeline::ControlPlayableAsset::_set_s_ProcessedDirectors(System::Collections::Generic::HashSet_1<UnityEngine::Playables::PlayableDirector*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::_set_s_ProcessedDirectors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ControlPlayableAsset", "s_ProcessedDirectors", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.HashSet`1<UnityEngine.GameObject> s_CreatedPrefabs
System::Collections::Generic::HashSet_1<UnityEngine::GameObject*>* UnityEngine::Timeline::ControlPlayableAsset::_get_s_CreatedPrefabs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::_get_s_CreatedPrefabs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::HashSet_1<UnityEngine::GameObject*>*>("UnityEngine.Timeline", "ControlPlayableAsset", "s_CreatedPrefabs"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.HashSet`1<UnityEngine.GameObject> s_CreatedPrefabs
void UnityEngine::Timeline::ControlPlayableAsset::_set_s_CreatedPrefabs(System::Collections::Generic::HashSet_1<UnityEngine::GameObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::_set_s_CreatedPrefabs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ControlPlayableAsset", "s_CreatedPrefabs", value));
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.get_controllingDirectors
bool UnityEngine::Timeline::ControlPlayableAsset::get_controllingDirectors() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::get_controllingDirectors");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_controllingDirectors", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.set_controllingDirectors
void UnityEngine::Timeline::ControlPlayableAsset::set_controllingDirectors(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::set_controllingDirectors");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_controllingDirectors", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.get_controllingParticles
bool UnityEngine::Timeline::ControlPlayableAsset::get_controllingParticles() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::get_controllingParticles");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_controllingParticles", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.set_controllingParticles
void UnityEngine::Timeline::ControlPlayableAsset::set_controllingParticles(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::set_controllingParticles");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_controllingParticles", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.OnEnable
void UnityEngine::Timeline::ControlPlayableAsset::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.get_clipCaps
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ControlPlayableAsset::get_clipCaps_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::get_clipCaps_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.ConnectPlayablesToMixer
UnityEngine::Playables::Playable UnityEngine::Timeline::ControlPlayableAsset::ConnectPlayablesToMixer(UnityEngine::Playables::PlayableGraph graph, System::Collections::Generic::List_1<UnityEngine::Playables::Playable>* playables) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::ConnectPlayablesToMixer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "ConnectPlayablesToMixer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, playables)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, playables);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.CreateActivationPlayable
void UnityEngine::Timeline::ControlPlayableAsset::CreateActivationPlayable(UnityEngine::GameObject* root, UnityEngine::Playables::PlayableGraph graph, System::Collections::Generic::List_1<UnityEngine::Playables::Playable>* outplayables) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::CreateActivationPlayable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateActivationPlayable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(root, graph, outplayables)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, root, graph, outplayables);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.SearchHiearchyAndConnectParticleSystem
void UnityEngine::Timeline::ControlPlayableAsset::SearchHiearchyAndConnectParticleSystem(System::Collections::Generic::IEnumerable_1<UnityEngine::ParticleSystem*>* particleSystems, UnityEngine::Playables::PlayableGraph graph, System::Collections::Generic::List_1<UnityEngine::Playables::Playable>* outplayables) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::SearchHiearchyAndConnectParticleSystem");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SearchHiearchyAndConnectParticleSystem", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(particleSystems, graph, outplayables)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, particleSystems, graph, outplayables);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.SearchHierarchyAndConnectDirector
void UnityEngine::Timeline::ControlPlayableAsset::SearchHierarchyAndConnectDirector(System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableDirector*>* directors, UnityEngine::Playables::PlayableGraph graph, System::Collections::Generic::List_1<UnityEngine::Playables::Playable>* outplayables, bool disableSelfReferences) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::SearchHierarchyAndConnectDirector");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SearchHierarchyAndConnectDirector", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(directors, graph, outplayables, disableSelfReferences)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, directors, graph, outplayables, disableSelfReferences);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.SearchHierarchyAndConnectControlableScripts
void UnityEngine::Timeline::ControlPlayableAsset::SearchHierarchyAndConnectControlableScripts(System::Collections::Generic::IEnumerable_1<UnityEngine::MonoBehaviour*>* controlableScripts, UnityEngine::Playables::PlayableGraph graph, System::Collections::Generic::List_1<UnityEngine::Playables::Playable>* outplayables) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::SearchHierarchyAndConnectControlableScripts");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "SearchHierarchyAndConnectControlableScripts", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(controlableScripts, graph, outplayables)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, controlableScripts, graph, outplayables);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.ConnectMixerAndPlayable
void UnityEngine::Timeline::ControlPlayableAsset::ConnectMixerAndPlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Playables::Playable mixer, UnityEngine::Playables::Playable playable, int portIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::ConnectMixerAndPlayable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "ConnectMixerAndPlayable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, mixer, playable, portIndex)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, mixer, playable, portIndex);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.GetControlableScripts
System::Collections::Generic::IEnumerable_1<UnityEngine::MonoBehaviour*>* UnityEngine::Timeline::ControlPlayableAsset::GetControlableScripts(UnityEngine::GameObject* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::GetControlableScripts");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "GetControlableScripts", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(root)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::MonoBehaviour*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, root);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.UpdateDurationAndLoopFlag
void UnityEngine::Timeline::ControlPlayableAsset::UpdateDurationAndLoopFlag(System::Collections::Generic::IList_1<UnityEngine::Playables::PlayableDirector*>* directors, System::Collections::Generic::IList_1<UnityEngine::ParticleSystem*>* particleSystems) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::UpdateDurationAndLoopFlag");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateDurationAndLoopFlag", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(directors, particleSystems)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, directors, particleSystems);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.GetParticleSystemRoots
System::Collections::Generic::IList_1<UnityEngine::ParticleSystem*>* UnityEngine::Timeline::ControlPlayableAsset::GetParticleSystemRoots(UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::GetParticleSystemRoots");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetParticleSystemRoots", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(go)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IList_1<UnityEngine::ParticleSystem*>*, false>(this, ___internal__method, go);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.GetParticleSystemRoots
void UnityEngine::Timeline::ControlPlayableAsset::GetParticleSystemRoots(UnityEngine::Transform* t, System::Collections::Generic::ICollection_1<UnityEngine::ParticleSystem*>* roots) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::GetParticleSystemRoots");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "GetParticleSystemRoots", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t, roots)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, roots);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.GatherProperties
void UnityEngine::Timeline::ControlPlayableAsset::GatherProperties_NEW(UnityEngine::Playables::PlayableDirector* director, UnityEngine::Timeline::IPropertyCollector* driver) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::GatherProperties_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GatherProperties", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(director, driver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, director, driver);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.PreviewParticles
void UnityEngine::Timeline::ControlPlayableAsset::PreviewParticles(UnityEngine::Timeline::IPropertyCollector* driver, System::Collections::Generic::IEnumerable_1<UnityEngine::ParticleSystem*>* particles) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::PreviewParticles");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "PreviewParticles", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(driver, particles)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, driver, particles);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.PreviewActivation
void UnityEngine::Timeline::ControlPlayableAsset::PreviewActivation(UnityEngine::Timeline::IPropertyCollector* driver, System::Collections::Generic::IEnumerable_1<UnityEngine::GameObject*>* objects) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::PreviewActivation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "PreviewActivation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(driver, objects)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, driver, objects);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.PreviewTimeControl
void UnityEngine::Timeline::ControlPlayableAsset::PreviewTimeControl(UnityEngine::Timeline::IPropertyCollector* driver, UnityEngine::Playables::PlayableDirector* director, System::Collections::Generic::IEnumerable_1<UnityEngine::MonoBehaviour*>* scripts) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::PreviewTimeControl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "PreviewTimeControl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(driver, director, scripts)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, driver, director, scripts);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.PreviewDirectors
void UnityEngine::Timeline::ControlPlayableAsset::PreviewDirectors(UnityEngine::Timeline::IPropertyCollector* driver, System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableDirector*>* directors) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::PreviewDirectors");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", "PreviewDirectors", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(driver, directors)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, driver, directors);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.get_duration
double UnityEngine::Timeline::ControlPlayableAsset::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::get_duration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset.CreatePlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::ControlPlayableAsset::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::CreatePlayable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, go)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset..cctor
void UnityEngine::Timeline::ControlPlayableAsset::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ControlPlayableAsset", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.ControlPlayableAsset/<GetControlableScripts>d__38
#include "UnityEngine/Timeline/ControlPlayableAsset_-GetControlableScripts-d__38.hpp"
// Including type: UnityEngine.MonoBehaviour
#include "UnityEngine/MonoBehaviour.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset/<GetControlableScripts>d__38.System.IDisposable.Dispose
void UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__38::System_IDisposable_Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__38::System.IDisposable.Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset/<GetControlableScripts>d__38.MoveNext
bool UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__38::MoveNext_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__38::MoveNext_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset/<GetControlableScripts>d__38.System.Collections.Generic.IEnumerator<UnityEngine.MonoBehaviour>.get_Current
UnityEngine::MonoBehaviour* UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__38::System_Collections_Generic_IEnumerator$UnityEngine_MonoBehaviour$_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__38::System.Collections.Generic.IEnumerator<UnityEngine.MonoBehaviour>.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<UnityEngine.MonoBehaviour>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::MonoBehaviour*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset/<GetControlableScripts>d__38.System.Collections.IEnumerator.Reset
void UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__38::System_Collections_IEnumerator_Reset_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__38::System.Collections.IEnumerator.Reset_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset/<GetControlableScripts>d__38.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__38::System_Collections_IEnumerator_get_Current_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__38::System.Collections.IEnumerator.get_Current_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset/<GetControlableScripts>d__38.System.Collections.Generic.IEnumerable<UnityEngine.MonoBehaviour>.GetEnumerator
System::Collections::Generic::IEnumerator_1<UnityEngine::MonoBehaviour*>* UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__38::System_Collections_Generic_IEnumerable$UnityEngine_MonoBehaviour$_GetEnumerator_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__38::System.Collections.Generic.IEnumerable<UnityEngine.MonoBehaviour>.GetEnumerator_NEW");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<UnityEngine.MonoBehaviour>.GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<UnityEngine::MonoBehaviour*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ControlPlayableAsset/<GetControlableScripts>d__38.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__38::System_Collections_IEnumerable_GetEnumerator_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ControlPlayableAsset::$GetControlableScripts$d__38::System.Collections.IEnumerable.GetEnumerator_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ControlTrack
#include "UnityEngine/Timeline/ControlTrack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.DiscreteTime
#include "UnityEngine/Timeline/DiscreteTime.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Double k_Tick
double UnityEngine::Timeline::DiscreteTime::_get_k_Tick() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::_get_k_Tick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "DiscreteTime", "k_Tick"));
}
// Autogenerated static field setter
// Set static field: static private System.Double k_Tick
void UnityEngine::Timeline::DiscreteTime::_set_k_Tick(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::_set_k_Tick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "DiscreteTime", "k_Tick", value));
}
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Timeline.DiscreteTime kMaxTime
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::_get_kMaxTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::_get_kMaxTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::DiscreteTime>("UnityEngine.Timeline", "DiscreteTime", "kMaxTime"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Timeline.DiscreteTime kMaxTime
void UnityEngine::Timeline::DiscreteTime::_set_kMaxTime(UnityEngine::Timeline::DiscreteTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::_set_kMaxTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "DiscreteTime", "kMaxTime", value));
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.get_tickValue
double UnityEngine::Timeline::DiscreteTime::get_tickValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::get_tickValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "get_tickValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.OneTickBefore
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::OneTickBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::OneTickBefore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "OneTickBefore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::DiscreteTime, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.OneTickAfter
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::OneTickAfter() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::OneTickAfter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "OneTickAfter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::DiscreteTime, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.GetTick
int64_t UnityEngine::Timeline::DiscreteTime::GetTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::GetTick");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetTick", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.FromTicks
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::FromTicks(int64_t ticks) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::FromTicks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "FromTicks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ticks)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ticks);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.CompareTo
int UnityEngine::Timeline::DiscreteTime::CompareTo_NEW(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::CompareTo_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.Equals
bool UnityEngine::Timeline::DiscreteTime::Equals(UnityEngine::Timeline::DiscreteTime other) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.DoubleToDiscreteTime
int64_t UnityEngine::Timeline::DiscreteTime::DoubleToDiscreteTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::DoubleToDiscreteTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "DoubleToDiscreteTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.FloatToDiscreteTime
int64_t UnityEngine::Timeline::DiscreteTime::FloatToDiscreteTime(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::FloatToDiscreteTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "FloatToDiscreteTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.IntToDiscreteTime
int64_t UnityEngine::Timeline::DiscreteTime::IntToDiscreteTime(int time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::IntToDiscreteTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "IntToDiscreteTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.ToDouble
double UnityEngine::Timeline::DiscreteTime::ToDouble(int64_t time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::ToDouble");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "ToDouble", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.ToFloat
float UnityEngine::Timeline::DiscreteTime::ToFloat(int64_t time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::ToFloat");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "ToFloat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Explicit
UnityEngine::Timeline::DiscreteTime::operator double() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Explicit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Explicit
UnityEngine::Timeline::DiscreteTime::operator float() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Explicit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Explicit
// ABORTED elsewhere.  UnityEngine::Timeline::DiscreteTime::operator int64_t()
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Explicit
UnityEngine::Timeline::DiscreteTime::DiscreteTime(double& time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Explicit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  *this = ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Explicit
UnityEngine::Timeline::DiscreteTime::DiscreteTime(float& time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Explicit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  *this = ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Explicit
UnityEngine::Timeline::DiscreteTime::DiscreteTime(int64_t& time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Explicit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  *this = ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.Min
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::Min(UnityEngine::Timeline::DiscreteTime lhs, UnityEngine::Timeline::DiscreteTime rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::Min");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "Min", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lhs, rhs)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.Max
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::DiscreteTime::Max(UnityEngine::Timeline::DiscreteTime lhs, UnityEngine::Timeline::DiscreteTime rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::Max");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "Max", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lhs, rhs)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.SnapToNearestTick
double UnityEngine::Timeline::DiscreteTime::SnapToNearestTick(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::SnapToNearestTick");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "SnapToNearestTick", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.SnapToNearestTick
float UnityEngine::Timeline::DiscreteTime::SnapToNearestTick(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::SnapToNearestTick");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "SnapToNearestTick", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.GetNearestTick
int64_t UnityEngine::Timeline::DiscreteTime::GetNearestTick(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::GetNearestTick");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "GetNearestTick", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime..cctor
void UnityEngine::Timeline::DiscreteTime::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.Equals
bool UnityEngine::Timeline::DiscreteTime::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.ToString
::Il2CppString* UnityEngine::Timeline::DiscreteTime::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.GetHashCode
int UnityEngine::Timeline::DiscreteTime::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Equality
bool UnityEngine::Timeline::operator ==(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Equality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Equality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lhs, rhs)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Inequality
bool UnityEngine::Timeline::operator !=(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Inequality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lhs, rhs)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_GreaterThan
bool UnityEngine::Timeline::operator >(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_GreaterThan");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_GreaterThan", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lhs, rhs)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_LessThan
bool UnityEngine::Timeline::operator <(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_LessThan", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lhs, rhs)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_LessThanOrEqual
bool UnityEngine::Timeline::operator <=(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_LessThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_LessThanOrEqual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lhs, rhs)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_GreaterThanOrEqual
bool UnityEngine::Timeline::operator >=(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_GreaterThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_GreaterThanOrEqual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lhs, rhs)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Addition
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::operator+(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Addition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Addition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lhs, rhs)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Timeline.DiscreteTime.op_Subtraction
UnityEngine::Timeline::DiscreteTime UnityEngine::Timeline::operator-(const UnityEngine::Timeline::DiscreteTime& lhs, const UnityEngine::Timeline::DiscreteTime& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DiscreteTime::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DiscreteTime", "op_Subtraction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lhs, rhs)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::DiscreteTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.InfiniteRuntimeClip
#include "UnityEngine/Timeline/InfiniteRuntimeClip.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int64 kIntervalEnd
int64_t UnityEngine::Timeline::InfiniteRuntimeClip::_get_kIntervalEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::InfiniteRuntimeClip::_get_kIntervalEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("UnityEngine.Timeline", "InfiniteRuntimeClip", "kIntervalEnd"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int64 kIntervalEnd
void UnityEngine::Timeline::InfiniteRuntimeClip::_set_kIntervalEnd(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::InfiniteRuntimeClip::_set_kIntervalEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "InfiniteRuntimeClip", "kIntervalEnd", value));
}
// Autogenerated method: UnityEngine.Timeline.InfiniteRuntimeClip..cctor
void UnityEngine::Timeline::InfiniteRuntimeClip::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::InfiniteRuntimeClip::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "InfiniteRuntimeClip", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.InfiniteRuntimeClip.get_intervalStart
int64_t UnityEngine::Timeline::InfiniteRuntimeClip::get_intervalStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::InfiniteRuntimeClip::get_intervalStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_intervalStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.InfiniteRuntimeClip.get_intervalEnd
int64_t UnityEngine::Timeline::InfiniteRuntimeClip::get_intervalEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::InfiniteRuntimeClip::get_intervalEnd");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_intervalEnd", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.InfiniteRuntimeClip.set_enable
void UnityEngine::Timeline::InfiniteRuntimeClip::set_enable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::InfiniteRuntimeClip::set_enable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_enable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.InfiniteRuntimeClip.EvaluateAt
void UnityEngine::Timeline::InfiniteRuntimeClip::EvaluateAt(double localTime, UnityEngine::Playables::FrameData frameData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::InfiniteRuntimeClip::EvaluateAt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EvaluateAt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(localTime, frameData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, localTime, frameData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.IInterval
#include "UnityEngine/Timeline/IInterval.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.IInterval.get_intervalStart
int64_t UnityEngine::Timeline::IInterval::get_intervalStart_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IInterval::get_intervalStart_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_intervalStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.IInterval.get_intervalEnd
int64_t UnityEngine::Timeline::IInterval::get_intervalEnd_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IInterval::get_intervalEnd_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_intervalEnd", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.RuntimeClip
#include "UnityEngine/Timeline/RuntimeClip.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.Create
void UnityEngine::Timeline::RuntimeClip::Create(UnityEngine::Timeline::TimelineClip* clip, UnityEngine::Playables::Playable clipPlayable, UnityEngine::Playables::Playable parentMixer) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::Create");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clip, clipPlayable, parentMixer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip, clipPlayable, parentMixer);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.get_clip
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::RuntimeClip::get_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::get_clip");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_clip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.get_mixer
UnityEngine::Playables::Playable UnityEngine::Timeline::RuntimeClip::get_mixer() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::get_mixer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_mixer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.get_playable
UnityEngine::Playables::Playable UnityEngine::Timeline::RuntimeClip::get_playable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::get_playable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_playable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.SetTime
void UnityEngine::Timeline::RuntimeClip::SetTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::SetTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.SetDuration
void UnityEngine::Timeline::RuntimeClip::SetDuration(double duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::SetDuration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetDuration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(duration)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, duration);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.get_start
double UnityEngine::Timeline::RuntimeClip::get_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::get_start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.get_duration
double UnityEngine::Timeline::RuntimeClip::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::get_duration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.set_enable
void UnityEngine::Timeline::RuntimeClip::set_enable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::set_enable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_enable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.EvaluateAt
void UnityEngine::Timeline::RuntimeClip::EvaluateAt(double localTime, UnityEngine::Playables::FrameData frameData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::EvaluateAt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EvaluateAt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(localTime, frameData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, localTime, frameData);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClip.Reset
void UnityEngine::Timeline::RuntimeClip::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClip::Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.RuntimeClipBase
#include "UnityEngine/Timeline/RuntimeClipBase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.RuntimeClipBase.get_start
double UnityEngine::Timeline::RuntimeClipBase::get_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClipBase::get_start_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClipBase.get_duration
double UnityEngine::Timeline::RuntimeClipBase::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClipBase::get_duration_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClipBase.get_intervalStart
int64_t UnityEngine::Timeline::RuntimeClipBase::get_intervalStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClipBase::get_intervalStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_intervalStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeClipBase.get_intervalEnd
int64_t UnityEngine::Timeline::RuntimeClipBase::get_intervalEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeClipBase::get_intervalEnd");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_intervalEnd", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.RuntimeElement
#include "UnityEngine/Timeline/RuntimeElement.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.get_intervalStart
int64_t UnityEngine::Timeline::RuntimeElement::get_intervalStart_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeElement::get_intervalStart_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_intervalStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.get_intervalEnd
int64_t UnityEngine::Timeline::RuntimeElement::get_intervalEnd_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeElement::get_intervalEnd_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_intervalEnd", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.get_intervalBit
int UnityEngine::Timeline::RuntimeElement::get_intervalBit() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeElement::get_intervalBit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_intervalBit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.set_intervalBit
void UnityEngine::Timeline::RuntimeElement::set_intervalBit(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeElement::set_intervalBit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_intervalBit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.set_enable
void UnityEngine::Timeline::RuntimeElement::set_enable_NEW(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeElement::set_enable_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_enable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.EvaluateAt
void UnityEngine::Timeline::RuntimeElement::EvaluateAt_NEW(double localTime, UnityEngine::Playables::FrameData frameData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeElement::EvaluateAt_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EvaluateAt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(localTime, frameData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, localTime, frameData);
}
// Autogenerated method: UnityEngine.Timeline.RuntimeElement.Reset
void UnityEngine::Timeline::RuntimeElement::Reset_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::RuntimeElement::Reset_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ScheduleRuntimeClip
#include "UnityEngine/Timeline/ScheduleRuntimeClip.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.SetTime
void UnityEngine::Timeline::ScheduleRuntimeClip::SetTime(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::SetTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.get_clip
UnityEngine::Timeline::TimelineClip* UnityEngine::Timeline::ScheduleRuntimeClip::get_clip() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::get_clip");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_clip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimelineClip*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.get_mixer
UnityEngine::Playables::Playable UnityEngine::Timeline::ScheduleRuntimeClip::get_mixer() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::get_mixer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_mixer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.get_playable
UnityEngine::Playables::Playable UnityEngine::Timeline::ScheduleRuntimeClip::get_playable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::get_playable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_playable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.Create
void UnityEngine::Timeline::ScheduleRuntimeClip::Create(UnityEngine::Timeline::TimelineClip* clip, UnityEngine::Playables::Playable clipPlayable, UnityEngine::Playables::Playable parentMixer, double startDelay, double finishTail) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::Create");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clip, clipPlayable, parentMixer, startDelay, finishTail)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip, clipPlayable, parentMixer, startDelay, finishTail);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.get_start
double UnityEngine::Timeline::ScheduleRuntimeClip::get_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::get_start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.get_duration
double UnityEngine::Timeline::ScheduleRuntimeClip::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::get_duration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.set_enable
void UnityEngine::Timeline::ScheduleRuntimeClip::set_enable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::set_enable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_enable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.ScheduleRuntimeClip.EvaluateAt
void UnityEngine::Timeline::ScheduleRuntimeClip::EvaluateAt(double localTime, UnityEngine::Playables::FrameData frameData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ScheduleRuntimeClip::EvaluateAt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EvaluateAt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(localTime, frameData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, localTime, frameData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.IMarker
#include "UnityEngine/Timeline/IMarker.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.IMarker.get_time
double UnityEngine::Timeline::IMarker::get_time_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IMarker::get_time_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.IMarker.set_time
void UnityEngine::Timeline::IMarker::set_time_NEW(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IMarker::set_time_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_time", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.IMarker.get_parent
UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::IMarker::get_parent_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IMarker::get_parent_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_parent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.IMarker.Initialize
void UnityEngine::Timeline::IMarker::Initialize_NEW(UnityEngine::Timeline::TrackAsset* parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IMarker::Initialize_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(parent)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.INotificationOptionProvider
#include "UnityEngine/Timeline/INotificationOptionProvider.hpp"
// Including type: UnityEngine.Timeline.NotificationFlags
#include "UnityEngine/Timeline/NotificationFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.INotificationOptionProvider.get_flags
UnityEngine::Timeline::NotificationFlags UnityEngine::Timeline::INotificationOptionProvider::get_flags_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::INotificationOptionProvider::get_flags_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_flags", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::NotificationFlags, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.Marker
#include "UnityEngine/Timeline/Marker.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.Marker.get_parent
UnityEngine::Timeline::TrackAsset* UnityEngine::Timeline::Marker::get_parent_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Marker::get_parent_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_parent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TrackAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.Marker.set_parent
void UnityEngine::Timeline::Marker::set_parent(UnityEngine::Timeline::TrackAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Marker::set_parent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_parent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.Marker.get_time
double UnityEngine::Timeline::Marker::get_time_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Marker::get_time_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.Marker.set_time
void UnityEngine::Timeline::Marker::set_time_NEW(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Marker::set_time_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_time", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.Marker.UnityEngine.Timeline.IMarker.Initialize
void UnityEngine::Timeline::Marker::UnityEngine_Timeline_IMarker_Initialize_NEW(UnityEngine::Timeline::TrackAsset* parentTrack) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Marker::UnityEngine.Timeline.IMarker.Initialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnityEngine.Timeline.IMarker.Initialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(parentTrack)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parentTrack);
}
// Autogenerated method: UnityEngine.Timeline.Marker.OnInitialize
void UnityEngine::Timeline::Marker::OnInitialize_NEW(UnityEngine::Timeline::TrackAsset* aPent) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Marker::OnInitialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnInitialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(aPent)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, aPent);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.MarkerList
#include "UnityEngine/Timeline/MarkerList.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: UnityEngine.Timeline.IMarker
#include "UnityEngine/Timeline/IMarker.hpp"
// Including type: UnityEngine.Timeline.TimelineAsset
#include "UnityEngine/Timeline/TimelineAsset.hpp"
// Including type: UnityEngine.Playables.PlayableAsset
#include "UnityEngine/Playables/PlayableAsset.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.MarkerList.get_markers
System::Collections::Generic::List_1<UnityEngine::Timeline::IMarker*>* UnityEngine::Timeline::MarkerList::get_markers() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::get_markers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_markers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::Timeline::IMarker*>*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.Add
void UnityEngine::Timeline::MarkerList::Add(UnityEngine::ScriptableObject* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(item)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, item);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.Remove
bool UnityEngine::Timeline::MarkerList::Remove(UnityEngine::Timeline::IMarker* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::Remove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Remove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(item)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, item);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.Remove
bool UnityEngine::Timeline::MarkerList::Remove(UnityEngine::ScriptableObject* item, UnityEngine::Timeline::TimelineAsset* timelineAsset, UnityEngine::Playables::PlayableAsset* thingToDirty) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::Remove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Remove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(item, timelineAsset, thingToDirty)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, item, timelineAsset, thingToDirty);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.Clear
void UnityEngine::Timeline::MarkerList::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::Clear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Clear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.Contains
bool UnityEngine::Timeline::MarkerList::Contains(UnityEngine::ScriptableObject* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::Contains");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Contains", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(item)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, item);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.GetMarkers
System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::IMarker*>* UnityEngine::Timeline::MarkerList::GetMarkers() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::GetMarkers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetMarkers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::IMarker*>*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.get_Count
int UnityEngine::Timeline::MarkerList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::get_Count");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_Count", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.get_Item
UnityEngine::Timeline::IMarker* UnityEngine::Timeline::MarkerList::get_Item(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::get_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(idx)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::IMarker*, false>(*this, ___internal__method, idx);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.GetRawMarkerList
System::Collections::Generic::List_1<UnityEngine::ScriptableObject*>* UnityEngine::Timeline::MarkerList::GetRawMarkerList() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::GetRawMarkerList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetRawMarkerList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::ScriptableObject*>*, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.CreateMarker
UnityEngine::Timeline::IMarker* UnityEngine::Timeline::MarkerList::CreateMarker(System::Type* type, double time, UnityEngine::Timeline::TrackAsset* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::CreateMarker");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "CreateMarker", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, time, owner)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::IMarker*, false>(*this, ___internal__method, type, time, owner);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.HasNotifications
bool UnityEngine::Timeline::MarkerList::HasNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::HasNotifications");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "HasNotifications", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize
void UnityEngine::Timeline::MarkerList::UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize
void UnityEngine::Timeline::MarkerList::UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.MarkerList.BuildCache
void UnityEngine::Timeline::MarkerList::BuildCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerList::BuildCache");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "BuildCache", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.MarkerTrack
#include "UnityEngine/Timeline/MarkerTrack.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.MarkerTrack.get_outputs
System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::MarkerTrack::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::MarkerTrack::get_outputs");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_outputs", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.SignalTrack
#include "UnityEngine/Timeline/SignalTrack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.CustomSignalEventDrawer
#include "UnityEngine/Timeline/CustomSignalEventDrawer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.SignalAsset
#include "UnityEngine/Timeline/SignalAsset.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [CompilerGeneratedAttribute] Offset: 0xCEA87C
// Autogenerated static field getter
// Get static field: static private System.Action`1<UnityEngine.Timeline.SignalAsset> OnEnableCallback
System::Action_1<UnityEngine::Timeline::SignalAsset*>* UnityEngine::Timeline::SignalAsset::_get_OnEnableCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalAsset::_get_OnEnableCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<UnityEngine::Timeline::SignalAsset*>*>("UnityEngine.Timeline", "SignalAsset", "OnEnableCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<UnityEngine.Timeline.SignalAsset> OnEnableCallback
void UnityEngine::Timeline::SignalAsset::_set_OnEnableCallback(System::Action_1<UnityEngine::Timeline::SignalAsset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalAsset::_set_OnEnableCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "SignalAsset", "OnEnableCallback", value));
}
// Autogenerated method: UnityEngine.Timeline.SignalAsset.add_OnEnableCallback
void UnityEngine::Timeline::SignalAsset::add_OnEnableCallback(System::Action_1<UnityEngine::Timeline::SignalAsset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalAsset::add_OnEnableCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "SignalAsset", "add_OnEnableCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.SignalAsset.remove_OnEnableCallback
void UnityEngine::Timeline::SignalAsset::remove_OnEnableCallback(System::Action_1<UnityEngine::Timeline::SignalAsset*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalAsset::remove_OnEnableCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "SignalAsset", "remove_OnEnableCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.SignalAsset.OnEnable
void UnityEngine::Timeline::SignalAsset::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalAsset::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.SignalEmitter
#include "UnityEngine/Timeline/SignalEmitter.hpp"
// Including type: UnityEngine.Timeline.SignalAsset
#include "UnityEngine/Timeline/SignalAsset.hpp"
// Including type: UnityEngine.PropertyName
#include "UnityEngine/PropertyName.hpp"
// Including type: UnityEngine.Timeline.NotificationFlags
#include "UnityEngine/Timeline/NotificationFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.get_retroactive
bool UnityEngine::Timeline::SignalEmitter::get_retroactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalEmitter::get_retroactive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_retroactive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.set_retroactive
void UnityEngine::Timeline::SignalEmitter::set_retroactive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalEmitter::set_retroactive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_retroactive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.get_emitOnce
bool UnityEngine::Timeline::SignalEmitter::get_emitOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalEmitter::get_emitOnce");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_emitOnce", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.set_emitOnce
void UnityEngine::Timeline::SignalEmitter::set_emitOnce(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalEmitter::set_emitOnce");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_emitOnce", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.get_asset
UnityEngine::Timeline::SignalAsset* UnityEngine::Timeline::SignalEmitter::get_asset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalEmitter::get_asset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_asset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::SignalAsset*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.set_asset
void UnityEngine::Timeline::SignalEmitter::set_asset(UnityEngine::Timeline::SignalAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalEmitter::set_asset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_asset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.UnityEngine.Playables.INotification.get_id
UnityEngine::PropertyName UnityEngine::Timeline::SignalEmitter::UnityEngine_Playables_INotification_get_id_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalEmitter::UnityEngine.Playables.INotification.get_id_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnityEngine.Playables.INotification.get_id", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::PropertyName, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalEmitter.UnityEngine.Timeline.INotificationOptionProvider.get_flags
UnityEngine::Timeline::NotificationFlags UnityEngine::Timeline::SignalEmitter::UnityEngine_Timeline_INotificationOptionProvider_get_flags_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalEmitter::UnityEngine.Timeline.INotificationOptionProvider.get_flags_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UnityEngine.Timeline.INotificationOptionProvider.get_flags", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::NotificationFlags, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.SignalReceiver
#include "UnityEngine/Timeline/SignalReceiver.hpp"
// Including type: UnityEngine.Timeline.SignalReceiver/EventKeyValue
#include "UnityEngine/Timeline/SignalReceiver_EventKeyValue.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.INotification
#include "UnityEngine/Playables/INotification.hpp"
// Including type: UnityEngine.Timeline.SignalAsset
#include "UnityEngine/Timeline/SignalAsset.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.OnNotify
void UnityEngine::Timeline::SignalReceiver::OnNotify_NEW(UnityEngine::Playables::Playable origin, UnityEngine::Playables::INotification* notification, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::OnNotify_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnNotify", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(origin, notification, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, origin, notification, context);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.AddReaction
void UnityEngine::Timeline::SignalReceiver::AddReaction(UnityEngine::Timeline::SignalAsset* asset, UnityEngine::Events::UnityEvent* reaction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::AddReaction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddReaction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(asset, reaction)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, asset, reaction);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.AddEmptyReaction
int UnityEngine::Timeline::SignalReceiver::AddEmptyReaction(UnityEngine::Events::UnityEvent* reaction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::AddEmptyReaction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddEmptyReaction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reaction)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, reaction);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.Remove
void UnityEngine::Timeline::SignalReceiver::Remove(UnityEngine::Timeline::SignalAsset* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::Remove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(asset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, asset);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.GetRegisteredSignals
System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::SignalAsset*>* UnityEngine::Timeline::SignalReceiver::GetRegisteredSignals() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::GetRegisteredSignals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRegisteredSignals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::SignalAsset*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.GetReaction
UnityEngine::Events::UnityEvent* UnityEngine::Timeline::SignalReceiver::GetReaction(UnityEngine::Timeline::SignalAsset* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::GetReaction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetReaction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Events::UnityEvent*, false>(this, ___internal__method, key);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.Count
int UnityEngine::Timeline::SignalReceiver::Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::Count");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Count", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.ChangeSignalAtIndex
void UnityEngine::Timeline::SignalReceiver::ChangeSignalAtIndex(int idx, UnityEngine::Timeline::SignalAsset* newKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::ChangeSignalAtIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ChangeSignalAtIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(idx, newKey)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx, newKey);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.RemoveAtIndex
void UnityEngine::Timeline::SignalReceiver::RemoveAtIndex(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::RemoveAtIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveAtIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(idx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.ChangeReactionAtIndex
void UnityEngine::Timeline::SignalReceiver::ChangeReactionAtIndex(int idx, UnityEngine::Events::UnityEvent* reaction) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::ChangeReactionAtIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ChangeReactionAtIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(idx, reaction)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx, reaction);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.GetReactionAtIndex
UnityEngine::Events::UnityEvent* UnityEngine::Timeline::SignalReceiver::GetReactionAtIndex(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::GetReactionAtIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetReactionAtIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(idx)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Events::UnityEvent*, false>(this, ___internal__method, idx);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.GetSignalAssetAtIndex
UnityEngine::Timeline::SignalAsset* UnityEngine::Timeline::SignalReceiver::GetSignalAssetAtIndex(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::GetSignalAssetAtIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSignalAssetAtIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(idx)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::SignalAsset*, false>(this, ___internal__method, idx);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver.OnEnable
void UnityEngine::Timeline::SignalReceiver::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.SignalReceiver/EventKeyValue
#include "UnityEngine/Timeline/SignalReceiver_EventKeyValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Timeline.SignalAsset
#include "UnityEngine/Timeline/SignalAsset.hpp"
// Including type: UnityEngine.Events.UnityEvent
#include "UnityEngine/Events/UnityEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.SignalReceiver/EventKeyValue.TryGetValue
bool UnityEngine::Timeline::SignalReceiver::EventKeyValue::TryGetValue(UnityEngine::Timeline::SignalAsset* key, UnityEngine::Events::UnityEvent*& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::EventKeyValue::TryGetValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryGetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key, value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, key, value);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver/EventKeyValue.Append
void UnityEngine::Timeline::SignalReceiver::EventKeyValue::Append(UnityEngine::Timeline::SignalAsset* key, UnityEngine::Events::UnityEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::EventKeyValue::Append");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Append", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver/EventKeyValue.Remove
void UnityEngine::Timeline::SignalReceiver::EventKeyValue::Remove(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::EventKeyValue::Remove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(idx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver/EventKeyValue.Remove
void UnityEngine::Timeline::SignalReceiver::EventKeyValue::Remove(UnityEngine::Timeline::SignalAsset* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::EventKeyValue::Remove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver/EventKeyValue.get_signals
System::Collections::Generic::List_1<UnityEngine::Timeline::SignalAsset*>* UnityEngine::Timeline::SignalReceiver::EventKeyValue::get_signals() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::EventKeyValue::get_signals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_signals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::Timeline::SignalAsset*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.SignalReceiver/EventKeyValue.get_events
System::Collections::Generic::List_1<UnityEngine::Events::UnityEvent*>* UnityEngine::Timeline::SignalReceiver::EventKeyValue::get_events() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::SignalReceiver::EventKeyValue::get_events");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_events", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<UnityEngine::Events::UnityEvent*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackAssetExtensions
#include "UnityEngine/Timeline/TrackAssetExtensions.hpp"
// Including type: UnityEngine.Timeline.GroupTrack
#include "UnityEngine/Timeline/GroupTrack.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TrackAssetExtensions.GetGroup
UnityEngine::Timeline::GroupTrack* UnityEngine::Timeline::TrackAssetExtensions::GetGroup(UnityEngine::Timeline::TrackAsset* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAssetExtensions::GetGroup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAssetExtensions", "GetGroup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(asset)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::GroupTrack*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, asset);
}
// Autogenerated method: UnityEngine.Timeline.TrackAssetExtensions.SetGroup
void UnityEngine::Timeline::TrackAssetExtensions::SetGroup(UnityEngine::Timeline::TrackAsset* asset, UnityEngine::Timeline::GroupTrack* group) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackAssetExtensions::SetGroup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TrackAssetExtensions", "SetGroup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(asset, group)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, asset, group);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.GroupTrack
#include "UnityEngine/Timeline/GroupTrack.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.GroupTrack.CanCompileClips
bool UnityEngine::Timeline::GroupTrack::CanCompileClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::GroupTrack::CanCompileClips");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CanCompileClips", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.GroupTrack.get_outputs
System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::GroupTrack::get_outputs() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::GroupTrack::get_outputs");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_outputs", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ILayerable
#include "UnityEngine/Timeline/ILayerable.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ILayerable.CreateLayerMixer
UnityEngine::Playables::Playable UnityEngine::Timeline::ILayerable::CreateLayerMixer_NEW(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ILayerable::CreateLayerMixer_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateLayerMixer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, go, inputCount)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go, inputCount);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.ActivationControlPlayable
#include "UnityEngine/Timeline/ActivationControlPlayable.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ActivationControlPlayable.Create
UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::ActivationControlPlayable*> UnityEngine::Timeline::ActivationControlPlayable::Create(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* gameObject, UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState postPlaybackState) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ActivationControlPlayable", "Create", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, gameObject, postPlaybackState)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::ActivationControlPlayable*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, gameObject, postPlaybackState);
}
// Autogenerated method: UnityEngine.Timeline.ActivationControlPlayable.OnBehaviourPlay
void UnityEngine::Timeline::ActivationControlPlayable::OnBehaviourPlay(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::OnBehaviourPlay");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable, info)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.ActivationControlPlayable.OnBehaviourPause
void UnityEngine::Timeline::ActivationControlPlayable::OnBehaviourPause(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::OnBehaviourPause");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnBehaviourPause", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable, info)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.ActivationControlPlayable.ProcessFrame
void UnityEngine::Timeline::ActivationControlPlayable::ProcessFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info, ::Il2CppObject* userData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::ProcessFrame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable, info, userData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info, userData);
}
// Autogenerated method: UnityEngine.Timeline.ActivationControlPlayable.OnGraphStart
void UnityEngine::Timeline::ActivationControlPlayable::OnGraphStart(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::OnGraphStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnGraphStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.ActivationControlPlayable.OnPlayableDestroy
void UnityEngine::Timeline::ActivationControlPlayable::OnPlayableDestroy(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::OnPlayableDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ActivationControlPlayable/PostPlaybackState
#include "UnityEngine/Timeline/ActivationControlPlayable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationControlPlayable/PostPlaybackState Active
UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_get_Active");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState>("UnityEngine.Timeline", "ActivationControlPlayable/PostPlaybackState", "Active"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationControlPlayable/PostPlaybackState Active
void UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_set_Active(UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_set_Active");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationControlPlayable/PostPlaybackState", "Active", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationControlPlayable/PostPlaybackState Inactive
UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_get_Inactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_get_Inactive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState>("UnityEngine.Timeline", "ActivationControlPlayable/PostPlaybackState", "Inactive"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationControlPlayable/PostPlaybackState Inactive
void UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_set_Inactive(UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_set_Inactive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationControlPlayable/PostPlaybackState", "Inactive", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationControlPlayable/PostPlaybackState Revert
UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_get_Revert() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_get_Revert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState>("UnityEngine.Timeline", "ActivationControlPlayable/PostPlaybackState", "Revert"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationControlPlayable/PostPlaybackState Revert
void UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_set_Revert(UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::PostPlaybackState::_set_Revert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationControlPlayable/PostPlaybackState", "Revert", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ActivationControlPlayable/InitialState
#include "UnityEngine/Timeline/ActivationControlPlayable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationControlPlayable/InitialState Unset
UnityEngine::Timeline::ActivationControlPlayable::InitialState UnityEngine::Timeline::ActivationControlPlayable::InitialState::_get_Unset() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::InitialState::_get_Unset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ActivationControlPlayable::InitialState>("UnityEngine.Timeline", "ActivationControlPlayable/InitialState", "Unset"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationControlPlayable/InitialState Unset
void UnityEngine::Timeline::ActivationControlPlayable::InitialState::_set_Unset(UnityEngine::Timeline::ActivationControlPlayable::InitialState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::InitialState::_set_Unset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationControlPlayable/InitialState", "Unset", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationControlPlayable/InitialState Active
UnityEngine::Timeline::ActivationControlPlayable::InitialState UnityEngine::Timeline::ActivationControlPlayable::InitialState::_get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::InitialState::_get_Active");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ActivationControlPlayable::InitialState>("UnityEngine.Timeline", "ActivationControlPlayable/InitialState", "Active"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationControlPlayable/InitialState Active
void UnityEngine::Timeline::ActivationControlPlayable::InitialState::_set_Active(UnityEngine::Timeline::ActivationControlPlayable::InitialState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::InitialState::_set_Active");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationControlPlayable/InitialState", "Active", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.ActivationControlPlayable/InitialState Inactive
UnityEngine::Timeline::ActivationControlPlayable::InitialState UnityEngine::Timeline::ActivationControlPlayable::InitialState::_get_Inactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::InitialState::_get_Inactive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::ActivationControlPlayable::InitialState>("UnityEngine.Timeline", "ActivationControlPlayable/InitialState", "Inactive"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.ActivationControlPlayable/InitialState Inactive
void UnityEngine::Timeline::ActivationControlPlayable::InitialState::_set_Inactive(UnityEngine::Timeline::ActivationControlPlayable::InitialState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ActivationControlPlayable::InitialState::_set_Inactive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ActivationControlPlayable/InitialState", "Inactive", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.BasicPlayableBehaviour
#include "UnityEngine/Timeline/BasicPlayableBehaviour.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.get_duration
double UnityEngine::Timeline::BasicPlayableBehaviour::get_duration_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::get_duration_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.get_outputs
System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>* UnityEngine::Timeline::BasicPlayableBehaviour::get_outputs_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::get_outputs_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_outputs", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<UnityEngine::Playables::PlayableBinding>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnGraphStart
void UnityEngine::Timeline::BasicPlayableBehaviour::OnGraphStart_NEW(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::OnGraphStart_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnGraphStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnGraphStop
void UnityEngine::Timeline::BasicPlayableBehaviour::OnGraphStop_NEW(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::OnGraphStop_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnGraphStop", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnPlayableCreate
void UnityEngine::Timeline::BasicPlayableBehaviour::OnPlayableCreate_NEW(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::OnPlayableCreate_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnPlayableCreate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnPlayableDestroy
void UnityEngine::Timeline::BasicPlayableBehaviour::OnPlayableDestroy_NEW(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::OnPlayableDestroy_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnBehaviourPlay
void UnityEngine::Timeline::BasicPlayableBehaviour::OnBehaviourPlay_NEW(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::OnBehaviourPlay_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable, info)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.OnBehaviourPause
void UnityEngine::Timeline::BasicPlayableBehaviour::OnBehaviourPause_NEW(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::OnBehaviourPause_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnBehaviourPause", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable, info)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.PrepareFrame
void UnityEngine::Timeline::BasicPlayableBehaviour::PrepareFrame_NEW(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::PrepareFrame_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PrepareFrame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable, info)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.ProcessFrame
void UnityEngine::Timeline::BasicPlayableBehaviour::ProcessFrame_NEW(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::ProcessFrame_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable, info, playerData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated method: UnityEngine.Timeline.BasicPlayableBehaviour.CreatePlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::BasicPlayableBehaviour::CreatePlayable_NEW(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::BasicPlayableBehaviour::CreatePlayable_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, owner)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, owner);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.DirectorControlPlayable
#include "UnityEngine/Timeline/DirectorControlPlayable.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.Create
UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::DirectorControlPlayable*> UnityEngine::Timeline::DirectorControlPlayable::Create(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Playables::PlayableDirector* director) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "DirectorControlPlayable", "Create", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, director)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::DirectorControlPlayable*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, director);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.SyncSpeed
void UnityEngine::Timeline::DirectorControlPlayable::SyncSpeed(double speed) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::SyncSpeed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SyncSpeed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(speed)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, speed);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.SyncPlayState
void UnityEngine::Timeline::DirectorControlPlayable::SyncPlayState(UnityEngine::Playables::PlayableGraph graph, double playableTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::SyncPlayState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SyncPlayState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, playableTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, graph, playableTime);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.DetectDiscontinuity
bool UnityEngine::Timeline::DirectorControlPlayable::DetectDiscontinuity(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::DetectDiscontinuity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DetectDiscontinuity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable, info)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.DetectOutOfSync
bool UnityEngine::Timeline::DirectorControlPlayable::DetectOutOfSync(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::DetectOutOfSync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DetectOutOfSync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.UpdateTime
void UnityEngine::Timeline::DirectorControlPlayable::UpdateTime(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::UpdateTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.OnPlayableDestroy
void UnityEngine::Timeline::DirectorControlPlayable::OnPlayableDestroy(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::OnPlayableDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.PrepareFrame
void UnityEngine::Timeline::DirectorControlPlayable::PrepareFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::PrepareFrame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PrepareFrame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable, info)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.OnBehaviourPlay
void UnityEngine::Timeline::DirectorControlPlayable::OnBehaviourPlay(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::OnBehaviourPlay");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable, info)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.OnBehaviourPause
void UnityEngine::Timeline::DirectorControlPlayable::OnBehaviourPause(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::OnBehaviourPause");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnBehaviourPause", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable, info)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.DirectorControlPlayable.ProcessFrame
void UnityEngine::Timeline::DirectorControlPlayable::ProcessFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::DirectorControlPlayable::ProcessFrame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable, info, playerData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ITimeControl
#include "UnityEngine/Timeline/ITimeControl.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ITimeControl.SetTime
void UnityEngine::Timeline::ITimeControl::SetTime_NEW(double time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ITimeControl::SetTime_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: UnityEngine.Timeline.ITimeControl.OnControlTimeStart
void UnityEngine::Timeline::ITimeControl::OnControlTimeStart_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ITimeControl::OnControlTimeStart_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnControlTimeStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ITimeControl.OnControlTimeStop
void UnityEngine::Timeline::ITimeControl::OnControlTimeStop_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ITimeControl::OnControlTimeStop_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnControlTimeStop", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.NotificationFlags
#include "UnityEngine/Timeline/NotificationFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.NotificationFlags TriggerInEditMode
UnityEngine::Timeline::NotificationFlags UnityEngine::Timeline::NotificationFlags::_get_TriggerInEditMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::NotificationFlags::_get_TriggerInEditMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::NotificationFlags>("UnityEngine.Timeline", "NotificationFlags", "TriggerInEditMode"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.NotificationFlags TriggerInEditMode
void UnityEngine::Timeline::NotificationFlags::_set_TriggerInEditMode(UnityEngine::Timeline::NotificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::NotificationFlags::_set_TriggerInEditMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "NotificationFlags", "TriggerInEditMode", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.NotificationFlags Retroactive
UnityEngine::Timeline::NotificationFlags UnityEngine::Timeline::NotificationFlags::_get_Retroactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::NotificationFlags::_get_Retroactive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::NotificationFlags>("UnityEngine.Timeline", "NotificationFlags", "Retroactive"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.NotificationFlags Retroactive
void UnityEngine::Timeline::NotificationFlags::_set_Retroactive(UnityEngine::Timeline::NotificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::NotificationFlags::_set_Retroactive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "NotificationFlags", "Retroactive", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.NotificationFlags TriggerOnce
UnityEngine::Timeline::NotificationFlags UnityEngine::Timeline::NotificationFlags::_get_TriggerOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::NotificationFlags::_get_TriggerOnce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::NotificationFlags>("UnityEngine.Timeline", "NotificationFlags", "TriggerOnce"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.NotificationFlags TriggerOnce
void UnityEngine::Timeline::NotificationFlags::_set_TriggerOnce(UnityEngine::Timeline::NotificationFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::NotificationFlags::_set_TriggerOnce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "NotificationFlags", "TriggerOnce", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ParticleControlPlayable
#include "UnityEngine/Timeline/ParticleControlPlayable.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kUnsetTime
float UnityEngine::Timeline::ParticleControlPlayable::_get_kUnsetTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::_get_kUnsetTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.Timeline", "ParticleControlPlayable", "kUnsetTime"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kUnsetTime
void UnityEngine::Timeline::ParticleControlPlayable::_set_kUnsetTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::_set_kUnsetTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "ParticleControlPlayable", "kUnsetTime", value));
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.Create
UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::ParticleControlPlayable*> UnityEngine::Timeline::ParticleControlPlayable::Create(UnityEngine::Playables::PlayableGraph graph, UnityEngine::ParticleSystem* component, uint randomSeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "ParticleControlPlayable", "Create", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, component, randomSeed)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::ParticleControlPlayable*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, component, randomSeed);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.get_particleSystem
UnityEngine::ParticleSystem* UnityEngine::Timeline::ParticleControlPlayable::get_particleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::get_particleSystem");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_particleSystem", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::ParticleSystem*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.set_particleSystem
void UnityEngine::Timeline::ParticleControlPlayable::set_particleSystem(UnityEngine::ParticleSystem* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::set_particleSystem");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_particleSystem", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.Initialize
void UnityEngine::Timeline::ParticleControlPlayable::Initialize(UnityEngine::ParticleSystem* ps, uint randomSeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::Initialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ps, randomSeed)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ps, randomSeed);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.SetRandomSeed
void UnityEngine::Timeline::ParticleControlPlayable::SetRandomSeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::SetRandomSeed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetRandomSeed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.PrepareFrame
void UnityEngine::Timeline::ParticleControlPlayable::PrepareFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData data) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::PrepareFrame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PrepareFrame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable, data)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, data);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.OnBehaviourPlay
void UnityEngine::Timeline::ParticleControlPlayable::OnBehaviourPlay(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::OnBehaviourPlay");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable, info)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.ParticleControlPlayable.OnBehaviourPause
void UnityEngine::Timeline::ParticleControlPlayable::OnBehaviourPause(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ParticleControlPlayable::OnBehaviourPause");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnBehaviourPause", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable, info)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.PrefabControlPlayable
#include "UnityEngine/Timeline/PrefabControlPlayable.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.Create
UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::PrefabControlPlayable*> UnityEngine::Timeline::PrefabControlPlayable::Create(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* prefabGameObject, UnityEngine::Transform* parentTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::PrefabControlPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "PrefabControlPlayable", "Create", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, prefabGameObject, parentTransform)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::PrefabControlPlayable*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, prefabGameObject, parentTransform);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.get_prefabInstance
UnityEngine::GameObject* UnityEngine::Timeline::PrefabControlPlayable::get_prefabInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::PrefabControlPlayable::get_prefabInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_prefabInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.Initialize
UnityEngine::GameObject* UnityEngine::Timeline::PrefabControlPlayable::Initialize(UnityEngine::GameObject* prefabGameObject, UnityEngine::Transform* parentTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::PrefabControlPlayable::Initialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(prefabGameObject, parentTransform)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method, prefabGameObject, parentTransform);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.SetHideFlagsRecursive
void UnityEngine::Timeline::PrefabControlPlayable::SetHideFlagsRecursive(UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::PrefabControlPlayable::SetHideFlagsRecursive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "PrefabControlPlayable", "SetHideFlagsRecursive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(gameObject)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, gameObject);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.OnPlayableDestroy
void UnityEngine::Timeline::PrefabControlPlayable::OnPlayableDestroy(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::PrefabControlPlayable::OnPlayableDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.OnBehaviourPlay
void UnityEngine::Timeline::PrefabControlPlayable::OnBehaviourPlay(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::PrefabControlPlayable::OnBehaviourPlay");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable, info)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.PrefabControlPlayable.OnBehaviourPause
void UnityEngine::Timeline::PrefabControlPlayable::OnBehaviourPause(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::PrefabControlPlayable::OnBehaviourPause");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnBehaviourPause", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable, info)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeControlPlayable
#include "UnityEngine/Timeline/TimeControlPlayable.hpp"
// Including type: UnityEngine.Timeline.ITimeControl
#include "UnityEngine/Timeline/ITimeControl.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimeControlPlayable.Create
UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::TimeControlPlayable*> UnityEngine::Timeline::TimeControlPlayable::Create(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Timeline::ITimeControl* timeControl) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeControlPlayable::Create");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeControlPlayable", "Create", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, timeControl)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::TimeControlPlayable*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, timeControl);
}
// Autogenerated method: UnityEngine.Timeline.TimeControlPlayable.Initialize
void UnityEngine::Timeline::TimeControlPlayable::Initialize(UnityEngine::Timeline::ITimeControl* timeControl) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeControlPlayable::Initialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timeControl)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, timeControl);
}
// Autogenerated method: UnityEngine.Timeline.TimeControlPlayable.PrepareFrame
void UnityEngine::Timeline::TimeControlPlayable::PrepareFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeControlPlayable::PrepareFrame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PrepareFrame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable, info)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.TimeControlPlayable.OnBehaviourPlay
void UnityEngine::Timeline::TimeControlPlayable::OnBehaviourPlay(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeControlPlayable::OnBehaviourPlay");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable, info)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.TimeControlPlayable.OnBehaviourPause
void UnityEngine::Timeline::TimeControlPlayable::OnBehaviourPause(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeControlPlayable::OnBehaviourPause");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnBehaviourPause", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable, info)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour
#include "UnityEngine/Timeline/TimeNotificationBehaviour.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour/<>c
#include "UnityEngine/Timeline/TimeNotificationBehaviour_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.Playables.DirectorWrapMode
#include "UnityEngine/Playables/DirectorWrapMode.hpp"
// Including type: UnityEngine.Playables.INotification
#include "UnityEngine/Playables/INotification.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
// Including type: UnityEngine.Playables.PlayableOutput
#include "UnityEngine/Playables/PlayableOutput.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.set_timeSource
void UnityEngine::Timeline::TimeNotificationBehaviour::set_timeSource(UnityEngine::Playables::Playable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::set_timeSource");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_timeSource", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.Create
UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::TimeNotificationBehaviour*> UnityEngine::Timeline::TimeNotificationBehaviour::Create(UnityEngine::Playables::PlayableGraph graph, double duration, UnityEngine::Playables::DirectorWrapMode loopMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::Create");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour", "Create", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, duration, loopMode)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::TimeNotificationBehaviour*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, duration, loopMode);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.AddNotification
void UnityEngine::Timeline::TimeNotificationBehaviour::AddNotification(double time, UnityEngine::Playables::INotification* payload, UnityEngine::Timeline::NotificationFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::AddNotification");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddNotification", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time, payload, flags)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time, payload, flags);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.SortNotifications
void UnityEngine::Timeline::TimeNotificationBehaviour::SortNotifications() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::SortNotifications");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SortNotifications", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.CanRestoreNotification
bool UnityEngine::Timeline::TimeNotificationBehaviour::CanRestoreNotification(UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry e, UnityEngine::Playables::FrameData info, double currentTime, double previousTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::CanRestoreNotification");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour", "CanRestoreNotification", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(e, info, currentTime, previousTime)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, e, info, currentTime, previousTime);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.TriggerNotificationsInRange
void UnityEngine::Timeline::TimeNotificationBehaviour::TriggerNotificationsInRange(double start, double end, UnityEngine::Playables::FrameData info, UnityEngine::Playables::Playable playable, bool checkState) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::TriggerNotificationsInRange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TriggerNotificationsInRange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(start, end, info, playable, checkState)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, start, end, info, playable, checkState);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.SyncDurationWithExternalSource
void UnityEngine::Timeline::TimeNotificationBehaviour::SyncDurationWithExternalSource(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::SyncDurationWithExternalSource");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SyncDurationWithExternalSource", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.Trigger_internal
void UnityEngine::Timeline::TimeNotificationBehaviour::Trigger_internal(UnityEngine::Playables::Playable playable, UnityEngine::Playables::PlayableOutput output, UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry& e) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::Trigger_internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour", "Trigger_internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable, output, e)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, playable, output, e);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.Restore_internal
void UnityEngine::Timeline::TimeNotificationBehaviour::Restore_internal(UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry& e) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::Restore_internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour", "Restore_internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(e)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, e);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.OnGraphStart
void UnityEngine::Timeline::TimeNotificationBehaviour::OnGraphStart(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::OnGraphStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnGraphStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.OnBehaviourPause
void UnityEngine::Timeline::TimeNotificationBehaviour::OnBehaviourPause(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::OnBehaviourPause");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnBehaviourPause", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable, info)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour.PrepareFrame
void UnityEngine::Timeline::TimeNotificationBehaviour::PrepareFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::PrepareFrame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PrepareFrame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable, info)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour/NotificationEntry
#include "UnityEngine/Timeline/TimeNotificationBehaviour.hpp"
// Including type: UnityEngine.Playables.INotification
#include "UnityEngine/Playables/INotification.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour/NotificationEntry.get_triggerInEditor
bool UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_triggerInEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_triggerInEditor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_triggerInEditor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour/NotificationEntry.get_prewarm
bool UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_prewarm() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_prewarm");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_prewarm", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour/NotificationEntry.get_triggerOnce
bool UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_triggerOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry::get_triggerOnce");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_triggerOnce", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour/<>c
#include "UnityEngine/Timeline/TimeNotificationBehaviour_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Timeline.TimeNotificationBehaviour/<>c <>9
UnityEngine::Timeline::TimeNotificationBehaviour::$$c* UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimeNotificationBehaviour::$$c*>("UnityEngine.Timeline", "TimeNotificationBehaviour/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Timeline.TimeNotificationBehaviour/<>c <>9
void UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_set_$$9(UnityEngine::Timeline::TimeNotificationBehaviour::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeNotificationBehaviour/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.Timeline.TimeNotificationBehaviour/NotificationEntry> <>9__12_0
System::Comparison_1<UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry>* UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_get_$$9__12_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_get_$$9__12_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Comparison_1<UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry>*>("UnityEngine.Timeline", "TimeNotificationBehaviour/<>c", "<>9__12_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.Timeline.TimeNotificationBehaviour/NotificationEntry> <>9__12_0
void UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_set_$$9__12_0(System::Comparison_1<UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_set_$$9__12_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeNotificationBehaviour/<>c", "<>9__12_0", value)));
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour/<>c..cctor
void UnityEngine::Timeline::TimeNotificationBehaviour::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeNotificationBehaviour/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeNotificationBehaviour/<>c.<SortNotifications>b__12_0
int UnityEngine::Timeline::TimeNotificationBehaviour::$$c::$SortNotifications$b__12_0(UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry x, UnityEngine::Timeline::TimeNotificationBehaviour::NotificationEntry y) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeNotificationBehaviour::$$c::<SortNotifications>b__12_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortNotifications>b__12_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y))));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.PlayableTrack
#include "UnityEngine/Timeline/PlayableTrack.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.PlayableTrack.OnCreateClip
void UnityEngine::Timeline::PlayableTrack::OnCreateClip(UnityEngine::Timeline::TimelineClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::PlayableTrack::OnCreateClip");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnCreateClip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clip)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackMediaType
#include "UnityEngine/Timeline/TrackMediaType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackClipTypeAttribute
#include "UnityEngine/Timeline/TrackClipTypeAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.NotKeyableAttribute
#include "UnityEngine/Timeline/NotKeyableAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackBindingFlags
#include "UnityEngine/Timeline/TrackBindingFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackBindingFlags None
UnityEngine::Timeline::TrackBindingFlags UnityEngine::Timeline::TrackBindingFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackBindingFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackBindingFlags>("UnityEngine.Timeline", "TrackBindingFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackBindingFlags None
void UnityEngine::Timeline::TrackBindingFlags::_set_None(UnityEngine::Timeline::TrackBindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackBindingFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackBindingFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackBindingFlags AllowCreateComponent
UnityEngine::Timeline::TrackBindingFlags UnityEngine::Timeline::TrackBindingFlags::_get_AllowCreateComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackBindingFlags::_get_AllowCreateComponent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackBindingFlags>("UnityEngine.Timeline", "TrackBindingFlags", "AllowCreateComponent"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackBindingFlags AllowCreateComponent
void UnityEngine::Timeline::TrackBindingFlags::_set_AllowCreateComponent(UnityEngine::Timeline::TrackBindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackBindingFlags::_set_AllowCreateComponent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackBindingFlags", "AllowCreateComponent", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TrackBindingFlags All
UnityEngine::Timeline::TrackBindingFlags UnityEngine::Timeline::TrackBindingFlags::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackBindingFlags::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TrackBindingFlags>("UnityEngine.Timeline", "TrackBindingFlags", "All"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TrackBindingFlags All
void UnityEngine::Timeline::TrackBindingFlags::_set_All(UnityEngine::Timeline::TrackBindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TrackBindingFlags::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TrackBindingFlags", "All", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TrackBindingTypeAttribute
#include "UnityEngine/Timeline/TrackBindingTypeAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.SupportsChildTracksAttribute
#include "UnityEngine/Timeline/SupportsChildTracksAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.IgnoreOnPlayableTrackAttribute
#include "UnityEngine/Timeline/IgnoreOnPlayableTrackAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeFieldAttribute
#include "UnityEngine/Timeline/TimeFieldAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimeFieldAttribute.get_useEditMode
UnityEngine::Timeline::TimeFieldAttribute::UseEditMode UnityEngine::Timeline::TimeFieldAttribute::get_useEditMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeFieldAttribute::get_useEditMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_useEditMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::TimeFieldAttribute::UseEditMode, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeFieldAttribute/UseEditMode
#include "UnityEngine/Timeline/TimeFieldAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimeFieldAttribute/UseEditMode None
UnityEngine::Timeline::TimeFieldAttribute::UseEditMode UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimeFieldAttribute::UseEditMode>("UnityEngine.Timeline", "TimeFieldAttribute/UseEditMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimeFieldAttribute/UseEditMode None
void UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_set_None(UnityEngine::Timeline::TimeFieldAttribute::UseEditMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeFieldAttribute/UseEditMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Timeline.TimeFieldAttribute/UseEditMode ApplyEditMode
UnityEngine::Timeline::TimeFieldAttribute::UseEditMode UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_get_ApplyEditMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_get_ApplyEditMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimeFieldAttribute::UseEditMode>("UnityEngine.Timeline", "TimeFieldAttribute/UseEditMode", "ApplyEditMode"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Timeline.TimeFieldAttribute/UseEditMode ApplyEditMode
void UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_set_ApplyEditMode(UnityEngine::Timeline::TimeFieldAttribute::UseEditMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeFieldAttribute::UseEditMode::_set_ApplyEditMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeFieldAttribute/UseEditMode", "ApplyEditMode", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.HideInMenuAttribute
#include "UnityEngine/Timeline/HideInMenuAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.CustomStyleAttribute
#include "UnityEngine/Timeline/CustomStyleAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.MenuCategoryAttribute
#include "UnityEngine/Timeline/MenuCategoryAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ITimelineClipAsset
#include "UnityEngine/Timeline/ITimelineClipAsset.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ITimelineClipAsset.get_clipCaps
UnityEngine::Timeline::ClipCaps UnityEngine::Timeline::ITimelineClipAsset::get_clipCaps_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ITimelineClipAsset::get_clipCaps_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.ITimelineEvaluateCallback
#include "UnityEngine/Timeline/ITimelineEvaluateCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.ITimelineEvaluateCallback.Evaluate
void UnityEngine::Timeline::ITimelineEvaluateCallback::Evaluate_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::ITimelineEvaluateCallback::Evaluate_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Evaluate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimelinePlayable
#include "UnityEngine/Timeline/TimelinePlayable.hpp"
// Including type: UnityEngine.Timeline.IntervalTree`1
#include "UnityEngine/Timeline/IntervalTree_1.hpp"
// Including type: UnityEngine.Timeline.RuntimeElement
#include "UnityEngine/Timeline/RuntimeElement.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Timeline.ITimelineEvaluateCallback
#include "UnityEngine/Timeline/ITimelineEvaluateCallback.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Animations.AnimationPlayableOutput
#include "UnityEngine/Animations/AnimationPlayableOutput.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Boolean muteAudioScrubbing
bool UnityEngine::Timeline::TimelinePlayable::_get_muteAudioScrubbing() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::_get_muteAudioScrubbing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("UnityEngine.Timeline", "TimelinePlayable", "muteAudioScrubbing"));
}
// Autogenerated static field setter
// Set static field: static System.Boolean muteAudioScrubbing
void UnityEngine::Timeline::TimelinePlayable::_set_muteAudioScrubbing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::_set_muteAudioScrubbing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimelinePlayable", "muteAudioScrubbing", value));
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.Create
UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::TimelinePlayable*> UnityEngine::Timeline::TimelinePlayable::Create(UnityEngine::Playables::PlayableGraph graph, System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>* tracks, UnityEngine::GameObject* go, bool autoRebalance, bool createOutputs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::Create");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelinePlayable", "Create", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, tracks, go, autoRebalance, createOutputs)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::TimelinePlayable*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, tracks, go, autoRebalance, createOutputs);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.Compile
void UnityEngine::Timeline::TimelinePlayable::Compile(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Playables::Playable timelinePlayable, System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>* tracks, UnityEngine::GameObject* go, bool autoRebalance, bool createOutputs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::Compile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Compile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, timelinePlayable, tracks, go, autoRebalance, createOutputs)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, graph, timelinePlayable, tracks, go, autoRebalance, createOutputs);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.CompileTrackList
void UnityEngine::Timeline::TimelinePlayable::CompileTrackList(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Playables::Playable timelinePlayable, System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::TrackAsset*>* tracks, UnityEngine::GameObject* go, bool createOutputs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::CompileTrackList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CompileTrackList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, timelinePlayable, tracks, go, createOutputs)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, graph, timelinePlayable, tracks, go, createOutputs);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.CreateTrackOutput
void UnityEngine::Timeline::TimelinePlayable::CreateTrackOutput(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Timeline::TrackAsset* track, UnityEngine::GameObject* go, UnityEngine::Playables::Playable playable, int port) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::CreateTrackOutput");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateTrackOutput", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, track, go, playable, port)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, graph, track, go, playable, port);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.EvaluateWeightsForAnimationPlayableOutput
void UnityEngine::Timeline::TimelinePlayable::EvaluateWeightsForAnimationPlayableOutput(UnityEngine::Timeline::TrackAsset* track, UnityEngine::Animations::AnimationPlayableOutput animOutput) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::EvaluateWeightsForAnimationPlayableOutput");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EvaluateWeightsForAnimationPlayableOutput", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(track, animOutput)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, track, animOutput);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.EvaluateAnimationPreviewUpdateCallback
void UnityEngine::Timeline::TimelinePlayable::EvaluateAnimationPreviewUpdateCallback(UnityEngine::Timeline::TrackAsset* track, UnityEngine::Animations::AnimationPlayableOutput animOutput) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::EvaluateAnimationPreviewUpdateCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EvaluateAnimationPreviewUpdateCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(track, animOutput)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, track, animOutput);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.CreatePlayableGraph
UnityEngine::Playables::Playable UnityEngine::Timeline::TimelinePlayable::CreatePlayableGraph(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Timeline::TrackAsset* asset, UnityEngine::GameObject* go, UnityEngine::Timeline::IntervalTree_1<UnityEngine::Timeline::RuntimeElement*>* tree, UnityEngine::Playables::Playable timelinePlayable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::CreatePlayableGraph");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelinePlayable", "CreatePlayableGraph", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, asset, go, tree, timelinePlayable)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, asset, go, tree, timelinePlayable);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.CreateTrackPlayable
UnityEngine::Playables::Playable UnityEngine::Timeline::TimelinePlayable::CreateTrackPlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::Playables::Playable timelinePlayable, UnityEngine::Timeline::TrackAsset* track, UnityEngine::GameObject* go, bool createOutputs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::CreateTrackPlayable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateTrackPlayable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, timelinePlayable, track, go, createOutputs)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, timelinePlayable, track, go, createOutputs);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.Evaluate
void UnityEngine::Timeline::TimelinePlayable::Evaluate(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData frameData) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::Evaluate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Evaluate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable, frameData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, frameData);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.CacheTrack
void UnityEngine::Timeline::TimelinePlayable::CacheTrack(UnityEngine::Timeline::TrackAsset* track, UnityEngine::Playables::Playable playable, int port, UnityEngine::Playables::Playable parent) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::CacheTrack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CacheTrack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(track, playable, port, parent)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, track, playable, port, parent);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.ForAOTCompilationOnly
void UnityEngine::Timeline::TimelinePlayable::ForAOTCompilationOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::ForAOTCompilationOnly");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelinePlayable", "ForAOTCompilationOnly", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable..cctor
void UnityEngine::Timeline::TimelinePlayable::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelinePlayable", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimelinePlayable.PrepareFrame
void UnityEngine::Timeline::TimelinePlayable::PrepareFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelinePlayable::PrepareFrame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PrepareFrame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playable, info)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.Extrapolation
#include "UnityEngine/Timeline/Extrapolation.hpp"
// Including type: UnityEngine.Timeline.Extrapolation/<>c
#include "UnityEngine/Timeline/Extrapolation_--c.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Double kMinExtrapolationTime
double UnityEngine::Timeline::Extrapolation::_get_kMinExtrapolationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::_get_kMinExtrapolationTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "Extrapolation", "kMinExtrapolationTime"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Double kMinExtrapolationTime
void UnityEngine::Timeline::Extrapolation::_set_kMinExtrapolationTime(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::_set_kMinExtrapolationTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "Extrapolation", "kMinExtrapolationTime", value));
}
// Autogenerated method: UnityEngine.Timeline.Extrapolation.CalculateExtrapolationTimes
void UnityEngine::Timeline::Extrapolation::CalculateExtrapolationTimes(UnityEngine::Timeline::TrackAsset* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::CalculateExtrapolationTimes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "Extrapolation", "CalculateExtrapolationTimes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(asset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, asset);
}
// Autogenerated method: UnityEngine.Timeline.Extrapolation.SortClipsByStartTime
::Array<UnityEngine::Timeline::TimelineClip*>* UnityEngine::Timeline::Extrapolation::SortClipsByStartTime(::Array<UnityEngine::Timeline::TimelineClip*>* clips) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::SortClipsByStartTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "Extrapolation", "SortClipsByStartTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clips)));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Timeline::TimelineClip*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clips);
}
// Autogenerated method: UnityEngine.Timeline.Extrapolation..cctor
void UnityEngine::Timeline::Extrapolation::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "Extrapolation", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.Extrapolation/<>c
#include "UnityEngine/Timeline/Extrapolation_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: UnityEngine.Timeline.TimelineClip
#include "UnityEngine/Timeline/TimelineClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Timeline.Extrapolation/<>c <>9
UnityEngine::Timeline::Extrapolation::$$c* UnityEngine::Timeline::Extrapolation::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::Timeline::Extrapolation::$$c*>("UnityEngine.Timeline", "Extrapolation/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Timeline.Extrapolation/<>c <>9
void UnityEngine::Timeline::Extrapolation::$$c::_set_$$9(UnityEngine::Timeline::Extrapolation::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "Extrapolation/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<UnityEngine.Timeline.TimelineClip> <>9__2_0
System::Comparison_1<UnityEngine::Timeline::TimelineClip*>* UnityEngine::Timeline::Extrapolation::$$c::_get_$$9__2_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::$$c::_get_$$9__2_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Comparison_1<UnityEngine::Timeline::TimelineClip*>*>("UnityEngine.Timeline", "Extrapolation/<>c", "<>9__2_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<UnityEngine.Timeline.TimelineClip> <>9__2_0
void UnityEngine::Timeline::Extrapolation::$$c::_set_$$9__2_0(System::Comparison_1<UnityEngine::Timeline::TimelineClip*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::$$c::_set_$$9__2_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "Extrapolation/<>c", "<>9__2_0", value)));
}
// Autogenerated method: UnityEngine.Timeline.Extrapolation/<>c..cctor
void UnityEngine::Timeline::Extrapolation::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "Extrapolation/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.Extrapolation/<>c.<SortClipsByStartTime>b__2_0
int UnityEngine::Timeline::Extrapolation::$$c::$SortClipsByStartTime$b__2_0(UnityEngine::Timeline::TimelineClip* clip1, UnityEngine::Timeline::TimelineClip* clip2) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::Extrapolation::$$c::<SortClipsByStartTime>b__2_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SortClipsByStartTime>b__2_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clip1, clip2))));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, clip1, clip2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.HashUtility
#include "UnityEngine/Timeline/HashUtility.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(h1, h2)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, h1, h2);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2, int h3) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(h1, h2, h3)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, h1, h2, h3);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2, int h3, int h4) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(h1, h2, h3, h4)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, h1, h2, h3, h4);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2, int h3, int h4, int h5) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(h1, h2, h3, h4, h5)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, h1, h2, h3, h4, h5);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2, int h3, int h4, int h5, int h6) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(h1, h2, h3, h4, h5, h6)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, h1, h2, h3, h4, h5, h6);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(int h1, int h2, int h3, int h4, int h5, int h6, int h7) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(h1, h2, h3, h4, h5, h6, h7)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, h1, h2, h3, h4, h5, h6, h7);
}
// Autogenerated method: UnityEngine.Timeline.HashUtility.CombineHash
int UnityEngine::Timeline::HashUtility::CombineHash(::Array<int>* hashes) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::HashUtility::CombineHash");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "HashUtility", "CombineHash", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hashes)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hashes);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.IPropertyCollector
#include "UnityEngine/Timeline/IPropertyCollector.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.PushActiveGameObject
void UnityEngine::Timeline::IPropertyCollector::PushActiveGameObject_NEW(UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::PushActiveGameObject_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PushActiveGameObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(gameObject)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, gameObject);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.PopActiveGameObject
void UnityEngine::Timeline::IPropertyCollector::PopActiveGameObject_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::PopActiveGameObject_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PopActiveGameObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromClip
void UnityEngine::Timeline::IPropertyCollector::AddFromClip_NEW(UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddFromClip_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddFromClip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clip)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromClips
void UnityEngine::Timeline::IPropertyCollector::AddFromClips_NEW(System::Collections::Generic::IEnumerable_1<UnityEngine::AnimationClip*>* clips) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddFromClips_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddFromClips", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clips)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, clips);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromName
void UnityEngine::Timeline::IPropertyCollector::AddFromName_NEW(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddFromName_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddFromName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromClip
void UnityEngine::Timeline::IPropertyCollector::AddFromClip_NEW(UnityEngine::GameObject* obj, UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddFromClip_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddFromClip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, clip)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj, clip);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromClips
void UnityEngine::Timeline::IPropertyCollector::AddFromClips_NEW(UnityEngine::GameObject* obj, System::Collections::Generic::IEnumerable_1<UnityEngine::AnimationClip*>* clips) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddFromClips_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddFromClips", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, clips)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj, clips);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromName
void UnityEngine::Timeline::IPropertyCollector::AddFromName_NEW(UnityEngine::GameObject* obj, ::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddFromName_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddFromName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, name)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj, name);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromName
void UnityEngine::Timeline::IPropertyCollector::AddFromName_NEW(UnityEngine::Component* component, ::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddFromName_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddFromName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(component, name)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, component, name);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddFromComponent
void UnityEngine::Timeline::IPropertyCollector::AddFromComponent_NEW(UnityEngine::GameObject* obj, UnityEngine::Component* component) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddFromComponent_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddFromComponent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, component)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj, component);
}
// Autogenerated method: UnityEngine.Timeline.IPropertyCollector.AddObjectProperties
void UnityEngine::Timeline::IPropertyCollector::AddObjectProperties_NEW(UnityEngine::Object* obj, UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyCollector::AddObjectProperties_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddObjectProperties", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, clip)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj, clip);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.IPropertyPreview
#include "UnityEngine/Timeline/IPropertyPreview.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: UnityEngine.Timeline.IPropertyCollector
#include "UnityEngine/Timeline/IPropertyCollector.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.IPropertyPreview.GatherProperties
void UnityEngine::Timeline::IPropertyPreview::GatherProperties_NEW(UnityEngine::Playables::PlayableDirector* director, UnityEngine::Timeline::IPropertyCollector* driver) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::IPropertyPreview::GatherProperties_NEW");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GatherProperties", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(director, driver)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, director, driver);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.NotificationUtilities
#include "UnityEngine/Timeline/NotificationUtilities.hpp"
// Including type: UnityEngine.Playables.ScriptPlayable`1
#include "UnityEngine/Playables/ScriptPlayable_1.hpp"
// Including type: UnityEngine.Timeline.TimeNotificationBehaviour
#include "UnityEngine/Timeline/TimeNotificationBehaviour.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.Timeline.IMarker
#include "UnityEngine/Timeline/IMarker.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.NotificationUtilities.CreateNotificationsPlayable
UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::TimeNotificationBehaviour*> UnityEngine::Timeline::NotificationUtilities::CreateNotificationsPlayable(UnityEngine::Playables::PlayableGraph graph, System::Collections::Generic::IEnumerable_1<UnityEngine::Timeline::IMarker*>* markers, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::NotificationUtilities::CreateNotificationsPlayable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "NotificationUtilities", "CreateNotificationsPlayable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(graph, markers, go)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::ScriptPlayable_1<UnityEngine::Timeline::TimeNotificationBehaviour*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, graph, markers, go);
}
// Autogenerated method: UnityEngine.Timeline.NotificationUtilities.TrackTypeSupportsNotifications
bool UnityEngine::Timeline::NotificationUtilities::TrackTypeSupportsNotifications(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::NotificationUtilities::TrackTypeSupportsNotifications");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "NotificationUtilities", "TrackTypeSupportsNotifications", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.TimeUtility
#include "UnityEngine/Timeline/TimeUtility.hpp"
// Including type: UnityEngine.Timeline.TimeUtility/<>c
#include "UnityEngine/Timeline/TimeUtility_--c.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Double kTimeEpsilon
double UnityEngine::Timeline::TimeUtility::_get_kTimeEpsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::_get_kTimeEpsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimeUtility", "kTimeEpsilon"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double kTimeEpsilon
void UnityEngine::Timeline::TimeUtility::_set_kTimeEpsilon(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::_set_kTimeEpsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility", "kTimeEpsilon", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Double kFrameRateEpsilon
double UnityEngine::Timeline::TimeUtility::_get_kFrameRateEpsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::_get_kFrameRateEpsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimeUtility", "kFrameRateEpsilon"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double kFrameRateEpsilon
void UnityEngine::Timeline::TimeUtility::_set_kFrameRateEpsilon(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::_set_kFrameRateEpsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility", "kFrameRateEpsilon", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Double k_MaxTimelineDurationInSeconds
double UnityEngine::Timeline::TimeUtility::_get_k_MaxTimelineDurationInSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::_get_k_MaxTimelineDurationInSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<double>("UnityEngine.Timeline", "TimeUtility", "k_MaxTimelineDurationInSeconds"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Double k_MaxTimelineDurationInSeconds
void UnityEngine::Timeline::TimeUtility::_set_k_MaxTimelineDurationInSeconds(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::_set_k_MaxTimelineDurationInSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility", "k_MaxTimelineDurationInSeconds", value));
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.ValidateFrameRate
void UnityEngine::Timeline::TimeUtility::ValidateFrameRate(double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::ValidateFrameRate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "ValidateFrameRate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(frameRate)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.ToFrames
int UnityEngine::Timeline::TimeUtility::ToFrames(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::ToFrames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "ToFrames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time, frameRate)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.ToExactFrames
double UnityEngine::Timeline::TimeUtility::ToExactFrames(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::ToExactFrames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "ToExactFrames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time, frameRate)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.FromFrames
double UnityEngine::Timeline::TimeUtility::FromFrames(int frames, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::FromFrames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "FromFrames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(frames, frameRate)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, frames, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.FromFrames
double UnityEngine::Timeline::TimeUtility::FromFrames(double frames, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::FromFrames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "FromFrames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(frames, frameRate)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, frames, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.OnFrameBoundary
bool UnityEngine::Timeline::TimeUtility::OnFrameBoundary(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::OnFrameBoundary");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "OnFrameBoundary", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time, frameRate)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.GetEpsilon
double UnityEngine::Timeline::TimeUtility::GetEpsilon(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::GetEpsilon");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "GetEpsilon", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time, frameRate)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.OnFrameBoundary
bool UnityEngine::Timeline::TimeUtility::OnFrameBoundary(double time, double frameRate, double epsilon) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::OnFrameBoundary");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "OnFrameBoundary", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time, frameRate, epsilon)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time, frameRate, epsilon);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.RoundToFrame
double UnityEngine::Timeline::TimeUtility::RoundToFrame(double time, double frameRate) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::RoundToFrame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "RoundToFrame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time, frameRate)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time, frameRate);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.TimeAsFrames
::Il2CppString* UnityEngine::Timeline::TimeUtility::TimeAsFrames(double timeValue, double frameRate, ::Il2CppString* format) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::TimeAsFrames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "TimeAsFrames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timeValue, frameRate, format)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, timeValue, frameRate, format);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.TimeAsTimeCode
::Il2CppString* UnityEngine::Timeline::TimeUtility::TimeAsTimeCode(double timeValue, double frameRate, ::Il2CppString* format) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::TimeAsTimeCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "TimeAsTimeCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timeValue, frameRate, format)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, timeValue, frameRate, format);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.ParseTimeCode
double UnityEngine::Timeline::TimeUtility::ParseTimeCode(::Il2CppString* timeCode, double frameRate, double defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::ParseTimeCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "ParseTimeCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timeCode, frameRate, defaultValue)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, timeCode, frameRate, defaultValue);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.GetAnimationClipLength
double UnityEngine::Timeline::TimeUtility::GetAnimationClipLength(UnityEngine::AnimationClip* clip) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::GetAnimationClipLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "GetAnimationClipLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clip)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clip);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility.RemoveChar
::Il2CppString* UnityEngine::Timeline::TimeUtility::RemoveChar(::Il2CppString* str, System::Func_2<::Il2CppChar, bool>* charToRemoveFunc) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::RemoveChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", "RemoveChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, charToRemoveFunc)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, charToRemoveFunc);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility..cctor
void UnityEngine::Timeline::TimeUtility::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.TimeUtility/<>c
#include "UnityEngine/Timeline/TimeUtility_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Timeline.TimeUtility/<>c <>9
UnityEngine::Timeline::TimeUtility::$$c* UnityEngine::Timeline::TimeUtility::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<UnityEngine::Timeline::TimeUtility::$$c*>("UnityEngine.Timeline", "TimeUtility/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Timeline.TimeUtility/<>c <>9
void UnityEngine::Timeline::TimeUtility::$$c::_set_$$9(UnityEngine::Timeline::TimeUtility::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Char,System.Boolean> <>9__14_0
System::Func_2<::Il2CppChar, bool>* UnityEngine::Timeline::TimeUtility::$$c::_get_$$9__14_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::_get_$$9__14_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<::Il2CppChar, bool>*>("UnityEngine.Timeline", "TimeUtility/<>c", "<>9__14_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Char,System.Boolean> <>9__14_0
void UnityEngine::Timeline::TimeUtility::$$c::_set_$$9__14_0(System::Func_2<::Il2CppChar, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::_set_$$9__14_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility/<>c", "<>9__14_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Char,System.Boolean> <>9__14_1
System::Func_2<::Il2CppChar, bool>* UnityEngine::Timeline::TimeUtility::$$c::_get_$$9__14_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::_get_$$9__14_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<::Il2CppChar, bool>*>("UnityEngine.Timeline", "TimeUtility/<>c", "<>9__14_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Char,System.Boolean> <>9__14_1
void UnityEngine::Timeline::TimeUtility::$$c::_set_$$9__14_1(System::Func_2<::Il2CppChar, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::_set_$$9__14_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("UnityEngine.Timeline", "TimeUtility/<>c", "<>9__14_1", value)));
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility/<>c..cctor
void UnityEngine::Timeline::TimeUtility::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimeUtility/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility/<>c.<ParseTimeCode>b__14_0
bool UnityEngine::Timeline::TimeUtility::$$c::$ParseTimeCode$b__14_0(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::<ParseTimeCode>b__14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ParseTimeCode>b__14_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: UnityEngine.Timeline.TimeUtility/<>c.<ParseTimeCode>b__14_1
bool UnityEngine::Timeline::TimeUtility::$$c::$ParseTimeCode$b__14_1(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimeUtility::$$c::<ParseTimeCode>b__14_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ParseTimeCode>b__14_1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.TimelineCreateUtilities
#include "UnityEngine/Timeline/TimelineCreateUtilities.hpp"
// Including type: UnityEngine.Timeline.TimelineCreateUtilities/<>c__DisplayClass0_0
#include "UnityEngine/Timeline/TimelineCreateUtilities_--c__DisplayClass0_0.hpp"
// Including type: UnityEngine.Timeline.TimelineCreateUtilities/<>c__DisplayClass0_1
#include "UnityEngine/Timeline/TimelineCreateUtilities_--c__DisplayClass0_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: UnityEngine.Timeline.TrackAsset
#include "UnityEngine/Timeline/TrackAsset.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities.GenerateUniqueActorName
::Il2CppString* UnityEngine::Timeline::TimelineCreateUtilities::GenerateUniqueActorName(System::Collections::Generic::List_1<UnityEngine::ScriptableObject*>* tracks, ::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineCreateUtilities::GenerateUniqueActorName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineCreateUtilities", "GenerateUniqueActorName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tracks, name)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, tracks, name);
}
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities.SaveAssetIntoObject
void UnityEngine::Timeline::TimelineCreateUtilities::SaveAssetIntoObject(UnityEngine::Object* childAsset, UnityEngine::Object* masterAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineCreateUtilities::SaveAssetIntoObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineCreateUtilities", "SaveAssetIntoObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(childAsset, masterAsset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, childAsset, masterAsset);
}
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities.CreateAnimationClipForTrack
UnityEngine::AnimationClip* UnityEngine::Timeline::TimelineCreateUtilities::CreateAnimationClipForTrack(::Il2CppString* name, UnityEngine::Timeline::TrackAsset* track, bool isLegacy) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineCreateUtilities::CreateAnimationClipForTrack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineCreateUtilities", "CreateAnimationClipForTrack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, track, isLegacy)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationClip*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, track, isLegacy);
}
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities.ValidateParentTrack
bool UnityEngine::Timeline::TimelineCreateUtilities::ValidateParentTrack(UnityEngine::Timeline::TrackAsset* parent, System::Type* childType) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineCreateUtilities::ValidateParentTrack");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineCreateUtilities", "ValidateParentTrack", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(parent, childType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, parent, childType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.TimelineCreateUtilities/<>c__DisplayClass0_0
#include "UnityEngine/Timeline/TimelineCreateUtilities_--c__DisplayClass0_0.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities/<>c__DisplayClass0_0.<GenerateUniqueActorName>b__0
bool UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_0::$GenerateUniqueActorName$b__0(UnityEngine::ScriptableObject* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_0::<GenerateUniqueActorName>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GenerateUniqueActorName>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.TimelineCreateUtilities/<>c__DisplayClass0_1
#include "UnityEngine/Timeline/TimelineCreateUtilities_--c__DisplayClass0_1.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimelineCreateUtilities/<>c__DisplayClass0_1.<GenerateUniqueActorName>b__1
bool UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_1::$GenerateUniqueActorName$b__1(UnityEngine::ScriptableObject* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineCreateUtilities::$$c__DisplayClass0_1::<GenerateUniqueActorName>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GenerateUniqueActorName>b__1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Timeline.TimelineUndo
#include "UnityEngine/Timeline/TimelineUndo.hpp"
// Including type: UnityEngine.Timeline.TimelineAsset
#include "UnityEngine/Timeline/TimelineAsset.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.TimelineUndo.PushDestroyUndo
void UnityEngine::Timeline::TimelineUndo::PushDestroyUndo(UnityEngine::Timeline::TimelineAsset* timeline, UnityEngine::Object* thingToDirty, UnityEngine::Object* objectToDestroy) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineUndo::PushDestroyUndo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineUndo", "PushDestroyUndo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timeline, thingToDirty, objectToDestroy)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, timeline, thingToDirty, objectToDestroy);
}
// Autogenerated method: UnityEngine.Timeline.TimelineUndo.PushUndo
void UnityEngine::Timeline::TimelineUndo::PushUndo(::Array<UnityEngine::Object*>* thingsToDirty, ::Il2CppString* operation) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineUndo::PushUndo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineUndo", "PushUndo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(thingsToDirty, operation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, thingsToDirty, operation);
}
// Autogenerated method: UnityEngine.Timeline.TimelineUndo.PushUndo
void UnityEngine::Timeline::TimelineUndo::PushUndo(UnityEngine::Object* thingToDirty, ::Il2CppString* operation) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineUndo::PushUndo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineUndo", "PushUndo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(thingToDirty, operation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, thingToDirty, operation);
}
// Autogenerated method: UnityEngine.Timeline.TimelineUndo.RegisterCreatedObjectUndo
void UnityEngine::Timeline::TimelineUndo::RegisterCreatedObjectUndo(UnityEngine::Object* thingCreated, ::Il2CppString* operation) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineUndo::RegisterCreatedObjectUndo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineUndo", "RegisterCreatedObjectUndo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(thingCreated, operation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, thingCreated, operation);
}
// Autogenerated method: UnityEngine.Timeline.TimelineUndo.UndoName
::Il2CppString* UnityEngine::Timeline::TimelineUndo::UndoName(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::TimelineUndo::UndoName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "TimelineUndo", "UndoName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Timeline.WeightUtility
#include "UnityEngine/Timeline/WeightUtility.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Timeline.WeightUtility.NormalizeMixer
float UnityEngine::Timeline::WeightUtility::NormalizeMixer(UnityEngine::Playables::Playable mixer) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Timeline::WeightUtility::NormalizeMixer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.Timeline", "WeightUtility", "NormalizeMixer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mixer)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mixer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AI.NavMeshPathStatus
#include "UnityEngine/AI/NavMeshPathStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AI.NavMeshPathStatus PathComplete
UnityEngine::AI::NavMeshPathStatus UnityEngine::AI::NavMeshPathStatus::_get_PathComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPathStatus::_get_PathComplete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AI::NavMeshPathStatus>("UnityEngine.AI", "NavMeshPathStatus", "PathComplete"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AI.NavMeshPathStatus PathComplete
void UnityEngine::AI::NavMeshPathStatus::_set_PathComplete(UnityEngine::AI::NavMeshPathStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPathStatus::_set_PathComplete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AI", "NavMeshPathStatus", "PathComplete", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AI.NavMeshPathStatus PathPartial
UnityEngine::AI::NavMeshPathStatus UnityEngine::AI::NavMeshPathStatus::_get_PathPartial() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPathStatus::_get_PathPartial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AI::NavMeshPathStatus>("UnityEngine.AI", "NavMeshPathStatus", "PathPartial"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AI.NavMeshPathStatus PathPartial
void UnityEngine::AI::NavMeshPathStatus::_set_PathPartial(UnityEngine::AI::NavMeshPathStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPathStatus::_set_PathPartial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AI", "NavMeshPathStatus", "PathPartial", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AI.NavMeshPathStatus PathInvalid
UnityEngine::AI::NavMeshPathStatus UnityEngine::AI::NavMeshPathStatus::_get_PathInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPathStatus::_get_PathInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AI::NavMeshPathStatus>("UnityEngine.AI", "NavMeshPathStatus", "PathInvalid"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AI.NavMeshPathStatus PathInvalid
void UnityEngine::AI::NavMeshPathStatus::_set_PathInvalid(UnityEngine::AI::NavMeshPathStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPathStatus::_set_PathInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AI", "NavMeshPathStatus", "PathInvalid", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AI.NavMeshPath
#include "UnityEngine/AI/NavMeshPath.hpp"
// Including type: UnityEngine.AI.NavMeshPathStatus
#include "UnityEngine/AI/NavMeshPathStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AI.NavMeshPath.InitializeNavMeshPath
System::IntPtr UnityEngine::AI::NavMeshPath::InitializeNavMeshPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::InitializeNavMeshPath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMeshPath", "InitializeNavMeshPath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.DestroyNavMeshPath
void UnityEngine::AI::NavMeshPath::DestroyNavMeshPath(System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::DestroyNavMeshPath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMeshPath", "DestroyNavMeshPath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ptr)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.CalculateCornersInternal
::Array<UnityEngine::Vector3>* UnityEngine::AI::NavMeshPath::CalculateCornersInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::CalculateCornersInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CalculateCornersInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector3>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.ClearCornersInternal
void UnityEngine::AI::NavMeshPath::ClearCornersInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::ClearCornersInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearCornersInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.ClearCorners
void UnityEngine::AI::NavMeshPath::ClearCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::ClearCorners");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ClearCorners", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.CalculateCorners
void UnityEngine::AI::NavMeshPath::CalculateCorners() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::CalculateCorners");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CalculateCorners", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.get_corners
::Array<UnityEngine::Vector3>* UnityEngine::AI::NavMeshPath::get_corners() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::get_corners");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_corners", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Vector3>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.get_status
UnityEngine::AI::NavMeshPathStatus UnityEngine::AI::NavMeshPath::get_status() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::get_status");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_status", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AI::NavMeshPathStatus, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMeshPath.Finalize
void UnityEngine::AI::NavMeshPath::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshPath::Finalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AI.NavMeshHit
#include "UnityEngine/AI/NavMeshHit.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AI.NavMeshHit.get_position
UnityEngine::Vector3 UnityEngine::AI::NavMeshHit::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMeshHit::get_position");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_position", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AI.NavMesh
#include "UnityEngine/AI/NavMesh.hpp"
// Including type: UnityEngine.AI.NavMesh/OnNavMeshPreUpdate
#include "UnityEngine/AI/NavMesh_OnNavMeshPreUpdate.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.AI.NavMeshPath
#include "UnityEngine/AI/NavMeshPath.hpp"
// Including type: UnityEngine.AI.NavMeshHit
#include "UnityEngine/AI/NavMeshHit.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AI.NavMesh/OnNavMeshPreUpdate onPreUpdate
UnityEngine::AI::NavMesh::OnNavMeshPreUpdate* UnityEngine::AI::NavMesh::_get_onPreUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::_get_onPreUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AI::NavMesh::OnNavMeshPreUpdate*>("UnityEngine.AI", "NavMesh", "onPreUpdate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AI.NavMesh/OnNavMeshPreUpdate onPreUpdate
void UnityEngine::AI::NavMesh::_set_onPreUpdate(UnityEngine::AI::NavMesh::OnNavMeshPreUpdate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::_set_onPreUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.AI", "NavMesh", "onPreUpdate", value));
}
// Autogenerated method: UnityEngine.AI.NavMesh.Internal_CallOnNavMeshPreUpdate
void UnityEngine::AI::NavMesh::Internal_CallOnNavMeshPreUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::Internal_CallOnNavMeshPreUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMesh", "Internal_CallOnNavMeshPreUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMesh.CalculatePath
bool UnityEngine::AI::NavMesh::CalculatePath(UnityEngine::Vector3 sourcePosition, UnityEngine::Vector3 targetPosition, int areaMask, UnityEngine::AI::NavMeshPath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::CalculatePath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMesh", "CalculatePath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sourcePosition, targetPosition, areaMask, path)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourcePosition, targetPosition, areaMask, path);
}
// Autogenerated method: UnityEngine.AI.NavMesh.CalculatePathInternal
bool UnityEngine::AI::NavMesh::CalculatePathInternal(UnityEngine::Vector3 sourcePosition, UnityEngine::Vector3 targetPosition, int areaMask, UnityEngine::AI::NavMeshPath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::CalculatePathInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMesh", "CalculatePathInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sourcePosition, targetPosition, areaMask, path)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourcePosition, targetPosition, areaMask, path);
}
// Autogenerated method: UnityEngine.AI.NavMesh.SamplePosition
bool UnityEngine::AI::NavMesh::SamplePosition(UnityEngine::Vector3 sourcePosition, UnityEngine::AI::NavMeshHit& hit, float maxDistance, int areaMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::SamplePosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMesh", "SamplePosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sourcePosition, hit, maxDistance, areaMask)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourcePosition, hit, maxDistance, areaMask);
}
// Autogenerated method: UnityEngine.AI.NavMesh.CalculatePathInternal_Injected
bool UnityEngine::AI::NavMesh::CalculatePathInternal_Injected(UnityEngine::Vector3& sourcePosition, UnityEngine::Vector3& targetPosition, int areaMask, UnityEngine::AI::NavMeshPath* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::CalculatePathInternal_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMesh", "CalculatePathInternal_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sourcePosition, targetPosition, areaMask, path)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourcePosition, targetPosition, areaMask, path);
}
// Autogenerated method: UnityEngine.AI.NavMesh.SamplePosition_Injected
bool UnityEngine::AI::NavMesh::SamplePosition_Injected(UnityEngine::Vector3& sourcePosition, UnityEngine::AI::NavMeshHit& hit, float maxDistance, int areaMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::SamplePosition_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine.AI", "NavMesh", "SamplePosition_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sourcePosition, hit, maxDistance, areaMask)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourcePosition, hit, maxDistance, areaMask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AI.NavMesh/OnNavMeshPreUpdate
#include "UnityEngine/AI/NavMesh_OnNavMeshPreUpdate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AI.NavMesh/OnNavMeshPreUpdate.Invoke
void UnityEngine::AI::NavMesh::OnNavMeshPreUpdate::Invoke_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::OnNavMeshPreUpdate::Invoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AI.NavMesh/OnNavMeshPreUpdate.BeginInvoke
System::IAsyncResult* UnityEngine::AI::NavMesh::OnNavMeshPreUpdate::BeginInvoke_NEW(System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::OnNavMeshPreUpdate::BeginInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: UnityEngine.AI.NavMesh/OnNavMeshPreUpdate.EndInvoke
void UnityEngine::AI::NavMesh::OnNavMeshPreUpdate::EndInvoke_NEW(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AI::NavMesh::OnNavMeshPreUpdate::EndInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AndroidJNIHelper
#include "UnityEngine/AndroidJNIHelper.hpp"
// Including type: UnityEngine.AndroidJavaRunnable
#include "UnityEngine/AndroidJavaRunnable.hpp"
// Including type: UnityEngine.AndroidJavaProxy
#include "UnityEngine/AndroidJavaProxy.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AndroidJNIHelper.get_debug
bool UnityEngine::AndroidJNIHelper::get_debug() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::get_debug");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "get_debug", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.set_debug
void UnityEngine::AndroidJNIHelper::set_debug(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::set_debug");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "set_debug", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetConstructorID
System::IntPtr UnityEngine::AndroidJNIHelper::GetConstructorID(System::IntPtr javaClass) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetConstructorID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetConstructorID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(javaClass)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, javaClass);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetConstructorID
System::IntPtr UnityEngine::AndroidJNIHelper::GetConstructorID(System::IntPtr javaClass, ::Il2CppString* signature) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetConstructorID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetConstructorID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(javaClass, signature)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, javaClass, signature);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetMethodID
System::IntPtr UnityEngine::AndroidJNIHelper::GetMethodID(System::IntPtr javaClass, ::Il2CppString* methodName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetMethodID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetMethodID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(javaClass, methodName)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, javaClass, methodName);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetMethodID
System::IntPtr UnityEngine::AndroidJNIHelper::GetMethodID(System::IntPtr javaClass, ::Il2CppString* methodName, ::Il2CppString* signature) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetMethodID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetMethodID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(javaClass, methodName, signature)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, javaClass, methodName, signature);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetMethodID
System::IntPtr UnityEngine::AndroidJNIHelper::GetMethodID(System::IntPtr javaClass, ::Il2CppString* methodName, ::Il2CppString* signature, bool isStatic) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetMethodID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetMethodID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(javaClass, methodName, signature, isStatic)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, javaClass, methodName, signature, isStatic);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetFieldID
System::IntPtr UnityEngine::AndroidJNIHelper::GetFieldID(System::IntPtr javaClass, ::Il2CppString* fieldName) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetFieldID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetFieldID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(javaClass, fieldName)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, javaClass, fieldName);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetFieldID
System::IntPtr UnityEngine::AndroidJNIHelper::GetFieldID(System::IntPtr javaClass, ::Il2CppString* fieldName, ::Il2CppString* signature) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetFieldID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetFieldID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(javaClass, fieldName, signature)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, javaClass, fieldName, signature);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetFieldID
System::IntPtr UnityEngine::AndroidJNIHelper::GetFieldID(System::IntPtr javaClass, ::Il2CppString* fieldName, ::Il2CppString* signature, bool isStatic) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetFieldID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetFieldID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(javaClass, fieldName, signature, isStatic)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, javaClass, fieldName, signature, isStatic);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.CreateJavaRunnable
System::IntPtr UnityEngine::AndroidJNIHelper::CreateJavaRunnable(UnityEngine::AndroidJavaRunnable* jrunnable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::CreateJavaRunnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "CreateJavaRunnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(jrunnable)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, jrunnable);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.CreateJavaProxy
System::IntPtr UnityEngine::AndroidJNIHelper::CreateJavaProxy(UnityEngine::AndroidJavaProxy* proxy) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::CreateJavaProxy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "CreateJavaProxy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(proxy)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, proxy);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.ConvertToJNIArray
System::IntPtr UnityEngine::AndroidJNIHelper::ConvertToJNIArray(System::Array* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::ConvertToJNIArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "ConvertToJNIArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.CreateJNIArgArray
::Array<UnityEngine::jvalue>* UnityEngine::AndroidJNIHelper::CreateJNIArgArray(::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::CreateJNIArgArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "CreateJNIArgArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args)));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::jvalue>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, args);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.DeleteJNIArgArray
void UnityEngine::AndroidJNIHelper::DeleteJNIArgArray(::Array<::Il2CppObject*>* args, ::Array<UnityEngine::jvalue>* jniArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::DeleteJNIArgArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "DeleteJNIArgArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args, jniArgs)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, args, jniArgs);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetConstructorID
System::IntPtr UnityEngine::AndroidJNIHelper::GetConstructorID(System::IntPtr jclass, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetConstructorID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetConstructorID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(jclass, args)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, jclass, args);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetMethodID
System::IntPtr UnityEngine::AndroidJNIHelper::GetMethodID(System::IntPtr jclass, ::Il2CppString* methodName, ::Array<::Il2CppObject*>* args, bool isStatic) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetMethodID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetMethodID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(jclass, methodName, args, isStatic)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, jclass, methodName, args, isStatic);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetSignature
::Il2CppString* UnityEngine::AndroidJNIHelper::GetSignature(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetSignature");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetSignature", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNIHelper.GetSignature
::Il2CppString* UnityEngine::AndroidJNIHelper::GetSignature(::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNIHelper::GetSignature");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNIHelper", "GetSignature", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AndroidJNI
#include "UnityEngine/AndroidJNI.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AndroidJNI.AttachCurrentThread
int UnityEngine::AndroidJNI::AttachCurrentThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::AttachCurrentThread");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "AttachCurrentThread", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJNI.DetachCurrentThread
int UnityEngine::AndroidJNI::DetachCurrentThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::DetachCurrentThread");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "DetachCurrentThread", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetVersion
int UnityEngine::AndroidJNI::GetVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetVersion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetVersion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJNI.FindClass
System::IntPtr UnityEngine::AndroidJNI::FindClass(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FindClass");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FindClass", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromReflectedMethod
System::IntPtr UnityEngine::AndroidJNI::FromReflectedMethod(System::IntPtr refMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromReflectedMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromReflectedMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(refMethod)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, refMethod);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromReflectedField
System::IntPtr UnityEngine::AndroidJNI::FromReflectedField(System::IntPtr refField) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromReflectedField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromReflectedField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(refField)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, refField);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToReflectedMethod
System::IntPtr UnityEngine::AndroidJNI::ToReflectedMethod(System::IntPtr clazz, System::IntPtr methodID, bool isStatic) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToReflectedMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToReflectedMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, methodID, isStatic)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, isStatic);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToReflectedField
System::IntPtr UnityEngine::AndroidJNI::ToReflectedField(System::IntPtr clazz, System::IntPtr fieldID, bool isStatic) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToReflectedField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToReflectedField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID, isStatic)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, isStatic);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetSuperclass
System::IntPtr UnityEngine::AndroidJNI::GetSuperclass(System::IntPtr clazz) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetSuperclass");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetSuperclass", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz);
}
// Autogenerated method: UnityEngine.AndroidJNI.IsAssignableFrom
bool UnityEngine::AndroidJNI::IsAssignableFrom(System::IntPtr clazz1, System::IntPtr clazz2) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::IsAssignableFrom");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "IsAssignableFrom", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz1, clazz2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz1, clazz2);
}
// Autogenerated method: UnityEngine.AndroidJNI.Throw
int UnityEngine::AndroidJNI::Throw(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::Throw");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "Throw", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.ThrowNew
int UnityEngine::AndroidJNI::ThrowNew(System::IntPtr clazz, ::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ThrowNew");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ThrowNew", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, message)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, message);
}
// Autogenerated method: UnityEngine.AndroidJNI.ExceptionOccurred
System::IntPtr UnityEngine::AndroidJNI::ExceptionOccurred() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ExceptionOccurred");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ExceptionOccurred", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJNI.ExceptionDescribe
void UnityEngine::AndroidJNI::ExceptionDescribe() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ExceptionDescribe");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ExceptionDescribe", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJNI.ExceptionClear
void UnityEngine::AndroidJNI::ExceptionClear() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ExceptionClear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ExceptionClear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJNI.FatalError
void UnityEngine::AndroidJNI::FatalError(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FatalError");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FatalError", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message);
}
// Autogenerated method: UnityEngine.AndroidJNI.PushLocalFrame
int UnityEngine::AndroidJNI::PushLocalFrame(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::PushLocalFrame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "PushLocalFrame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(capacity)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, capacity);
}
// Autogenerated method: UnityEngine.AndroidJNI.PopLocalFrame
System::IntPtr UnityEngine::AndroidJNI::PopLocalFrame(System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::PopLocalFrame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "PopLocalFrame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ptr)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewGlobalRef
System::IntPtr UnityEngine::AndroidJNI::NewGlobalRef(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewGlobalRef");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewGlobalRef", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.DeleteGlobalRef
void UnityEngine::AndroidJNI::DeleteGlobalRef(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::DeleteGlobalRef");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "DeleteGlobalRef", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewWeakGlobalRef
System::IntPtr UnityEngine::AndroidJNI::NewWeakGlobalRef(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewWeakGlobalRef");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewWeakGlobalRef", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.DeleteWeakGlobalRef
void UnityEngine::AndroidJNI::DeleteWeakGlobalRef(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::DeleteWeakGlobalRef");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "DeleteWeakGlobalRef", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewLocalRef
System::IntPtr UnityEngine::AndroidJNI::NewLocalRef(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewLocalRef");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewLocalRef", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.DeleteLocalRef
void UnityEngine::AndroidJNI::DeleteLocalRef(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::DeleteLocalRef");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "DeleteLocalRef", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.IsSameObject
bool UnityEngine::AndroidJNI::IsSameObject(System::IntPtr obj1, System::IntPtr obj2) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::IsSameObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "IsSameObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj1, obj2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj1, obj2);
}
// Autogenerated method: UnityEngine.AndroidJNI.EnsureLocalCapacity
int UnityEngine::AndroidJNI::EnsureLocalCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::EnsureLocalCapacity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "EnsureLocalCapacity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(capacity)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, capacity);
}
// Autogenerated method: UnityEngine.AndroidJNI.AllocObject
System::IntPtr UnityEngine::AndroidJNI::AllocObject(System::IntPtr clazz) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::AllocObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "AllocObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewObject
System::IntPtr UnityEngine::AndroidJNI::NewObject(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetObjectClass
System::IntPtr UnityEngine::AndroidJNI::GetObjectClass(System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetObjectClass");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetObjectClass", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.IsInstanceOf
bool UnityEngine::AndroidJNI::IsInstanceOf(System::IntPtr obj, System::IntPtr clazz) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::IsInstanceOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "IsInstanceOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, clazz)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, clazz);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetMethodID
System::IntPtr UnityEngine::AndroidJNI::GetMethodID(System::IntPtr clazz, ::Il2CppString* name, ::Il2CppString* sig) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetMethodID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetMethodID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, name, sig)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, name, sig);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetFieldID
System::IntPtr UnityEngine::AndroidJNI::GetFieldID(System::IntPtr clazz, ::Il2CppString* name, ::Il2CppString* sig) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetFieldID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetFieldID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, name, sig)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, name, sig);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticMethodID
System::IntPtr UnityEngine::AndroidJNI::GetStaticMethodID(System::IntPtr clazz, ::Il2CppString* name, ::Il2CppString* sig) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticMethodID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticMethodID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, name, sig)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, name, sig);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticFieldID
System::IntPtr UnityEngine::AndroidJNI::GetStaticFieldID(System::IntPtr clazz, ::Il2CppString* name, ::Il2CppString* sig) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticFieldID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticFieldID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, name, sig)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, name, sig);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewString
System::IntPtr UnityEngine::AndroidJNI::NewString(::Il2CppString* chars) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(chars)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, chars);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewStringFromStr
System::IntPtr UnityEngine::AndroidJNI::NewStringFromStr(::Il2CppString* chars) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewStringFromStr");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewStringFromStr", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(chars)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, chars);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewString
System::IntPtr UnityEngine::AndroidJNI::NewString(::Array<::Il2CppChar>* chars) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(chars)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, chars);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewStringUTF
System::IntPtr UnityEngine::AndroidJNI::NewStringUTF(::Il2CppString* bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewStringUTF");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewStringUTF", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bytes)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bytes);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStringChars
::Il2CppString* UnityEngine::AndroidJNI::GetStringChars(System::IntPtr str) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStringChars");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStringChars", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStringLength
int UnityEngine::AndroidJNI::GetStringLength(System::IntPtr str) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStringLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStringLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStringUTFLength
int UnityEngine::AndroidJNI::GetStringUTFLength(System::IntPtr str) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStringUTFLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStringUTFLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStringUTFChars
::Il2CppString* UnityEngine::AndroidJNI::GetStringUTFChars(System::IntPtr str) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStringUTFChars");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStringUTFChars", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStringMethod
::Il2CppString* UnityEngine::AndroidJNI::CallStringMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStringMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStringMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallObjectMethod
System::IntPtr UnityEngine::AndroidJNI::CallObjectMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallObjectMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallObjectMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallIntMethod
int UnityEngine::AndroidJNI::CallIntMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallIntMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallIntMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallBooleanMethod
bool UnityEngine::AndroidJNI::CallBooleanMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallBooleanMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallBooleanMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallShortMethod
int16_t UnityEngine::AndroidJNI::CallShortMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallShortMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallShortMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallByteMethod
uint8_t UnityEngine::AndroidJNI::CallByteMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallByteMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallByteMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallSByteMethod
int8_t UnityEngine::AndroidJNI::CallSByteMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallSByteMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallSByteMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallCharMethod
::Il2CppChar UnityEngine::AndroidJNI::CallCharMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallCharMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallCharMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallFloatMethod
float UnityEngine::AndroidJNI::CallFloatMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallFloatMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallFloatMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallDoubleMethod
double UnityEngine::AndroidJNI::CallDoubleMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallDoubleMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallDoubleMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallLongMethod
int64_t UnityEngine::AndroidJNI::CallLongMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallLongMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallLongMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallVoidMethod
void UnityEngine::AndroidJNI::CallVoidMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallVoidMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallVoidMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, methodID, args)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStringField
::Il2CppString* UnityEngine::AndroidJNI::GetStringField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStringField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStringField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetObjectField
System::IntPtr UnityEngine::AndroidJNI::GetObjectField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetObjectField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetObjectField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetBooleanField
bool UnityEngine::AndroidJNI::GetBooleanField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetBooleanField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetBooleanField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetByteField
uint8_t UnityEngine::AndroidJNI::GetByteField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetByteField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetByteField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetSByteField
int8_t UnityEngine::AndroidJNI::GetSByteField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetSByteField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetSByteField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetCharField
::Il2CppChar UnityEngine::AndroidJNI::GetCharField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetCharField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetCharField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetShortField
int16_t UnityEngine::AndroidJNI::GetShortField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetShortField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetShortField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetIntField
int UnityEngine::AndroidJNI::GetIntField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetIntField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetIntField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetLongField
int64_t UnityEngine::AndroidJNI::GetLongField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetLongField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetLongField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetFloatField
float UnityEngine::AndroidJNI::GetFloatField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetFloatField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetFloatField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetDoubleField
double UnityEngine::AndroidJNI::GetDoubleField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetDoubleField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetDoubleField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStringField
void UnityEngine::AndroidJNI::SetStringField(System::IntPtr obj, System::IntPtr fieldID, ::Il2CppString* val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStringField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStringField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetObjectField
void UnityEngine::AndroidJNI::SetObjectField(System::IntPtr obj, System::IntPtr fieldID, System::IntPtr val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetObjectField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetObjectField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetBooleanField
void UnityEngine::AndroidJNI::SetBooleanField(System::IntPtr obj, System::IntPtr fieldID, bool val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetBooleanField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetBooleanField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetByteField
void UnityEngine::AndroidJNI::SetByteField(System::IntPtr obj, System::IntPtr fieldID, uint8_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetByteField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetByteField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetSByteField
void UnityEngine::AndroidJNI::SetSByteField(System::IntPtr obj, System::IntPtr fieldID, int8_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetSByteField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetSByteField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetCharField
void UnityEngine::AndroidJNI::SetCharField(System::IntPtr obj, System::IntPtr fieldID, ::Il2CppChar val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetCharField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetCharField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetShortField
void UnityEngine::AndroidJNI::SetShortField(System::IntPtr obj, System::IntPtr fieldID, int16_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetShortField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetShortField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetIntField
void UnityEngine::AndroidJNI::SetIntField(System::IntPtr obj, System::IntPtr fieldID, int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetIntField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetIntField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetLongField
void UnityEngine::AndroidJNI::SetLongField(System::IntPtr obj, System::IntPtr fieldID, int64_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetLongField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetLongField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetFloatField
void UnityEngine::AndroidJNI::SetFloatField(System::IntPtr obj, System::IntPtr fieldID, float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetFloatField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetFloatField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetDoubleField
void UnityEngine::AndroidJNI::SetDoubleField(System::IntPtr obj, System::IntPtr fieldID, double val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetDoubleField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetDoubleField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticStringMethod
::Il2CppString* UnityEngine::AndroidJNI::CallStaticStringMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticStringMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticStringMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticObjectMethod
System::IntPtr UnityEngine::AndroidJNI::CallStaticObjectMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticObjectMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticObjectMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticIntMethod
int UnityEngine::AndroidJNI::CallStaticIntMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticIntMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticIntMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticBooleanMethod
bool UnityEngine::AndroidJNI::CallStaticBooleanMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticBooleanMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticBooleanMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticShortMethod
int16_t UnityEngine::AndroidJNI::CallStaticShortMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticShortMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticShortMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticByteMethod
uint8_t UnityEngine::AndroidJNI::CallStaticByteMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticByteMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticByteMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticSByteMethod
int8_t UnityEngine::AndroidJNI::CallStaticSByteMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticSByteMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticSByteMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticCharMethod
::Il2CppChar UnityEngine::AndroidJNI::CallStaticCharMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticCharMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticCharMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticFloatMethod
float UnityEngine::AndroidJNI::CallStaticFloatMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticFloatMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticFloatMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticDoubleMethod
double UnityEngine::AndroidJNI::CallStaticDoubleMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticDoubleMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticDoubleMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticLongMethod
int64_t UnityEngine::AndroidJNI::CallStaticLongMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticLongMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticLongMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.CallStaticVoidMethod
void UnityEngine::AndroidJNI::CallStaticVoidMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::CallStaticVoidMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "CallStaticVoidMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, methodID, args)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticStringField
::Il2CppString* UnityEngine::AndroidJNI::GetStaticStringField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticStringField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticStringField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticObjectField
System::IntPtr UnityEngine::AndroidJNI::GetStaticObjectField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticObjectField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticObjectField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticBooleanField
bool UnityEngine::AndroidJNI::GetStaticBooleanField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticBooleanField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticBooleanField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticByteField
uint8_t UnityEngine::AndroidJNI::GetStaticByteField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticByteField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticByteField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticSByteField
int8_t UnityEngine::AndroidJNI::GetStaticSByteField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticSByteField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticSByteField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticCharField
::Il2CppChar UnityEngine::AndroidJNI::GetStaticCharField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticCharField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticCharField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticShortField
int16_t UnityEngine::AndroidJNI::GetStaticShortField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticShortField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticShortField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticIntField
int UnityEngine::AndroidJNI::GetStaticIntField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticIntField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticIntField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticLongField
int64_t UnityEngine::AndroidJNI::GetStaticLongField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticLongField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticLongField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticFloatField
float UnityEngine::AndroidJNI::GetStaticFloatField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticFloatField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticFloatField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetStaticDoubleField
double UnityEngine::AndroidJNI::GetStaticDoubleField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetStaticDoubleField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetStaticDoubleField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticStringField
void UnityEngine::AndroidJNI::SetStaticStringField(System::IntPtr clazz, System::IntPtr fieldID, ::Il2CppString* val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticStringField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticStringField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticObjectField
void UnityEngine::AndroidJNI::SetStaticObjectField(System::IntPtr clazz, System::IntPtr fieldID, System::IntPtr val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticObjectField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticObjectField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticBooleanField
void UnityEngine::AndroidJNI::SetStaticBooleanField(System::IntPtr clazz, System::IntPtr fieldID, bool val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticBooleanField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticBooleanField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticByteField
void UnityEngine::AndroidJNI::SetStaticByteField(System::IntPtr clazz, System::IntPtr fieldID, uint8_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticByteField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticByteField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticSByteField
void UnityEngine::AndroidJNI::SetStaticSByteField(System::IntPtr clazz, System::IntPtr fieldID, int8_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticSByteField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticSByteField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticCharField
void UnityEngine::AndroidJNI::SetStaticCharField(System::IntPtr clazz, System::IntPtr fieldID, ::Il2CppChar val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticCharField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticCharField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticShortField
void UnityEngine::AndroidJNI::SetStaticShortField(System::IntPtr clazz, System::IntPtr fieldID, int16_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticShortField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticShortField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticIntField
void UnityEngine::AndroidJNI::SetStaticIntField(System::IntPtr clazz, System::IntPtr fieldID, int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticIntField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticIntField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticLongField
void UnityEngine::AndroidJNI::SetStaticLongField(System::IntPtr clazz, System::IntPtr fieldID, int64_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticLongField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticLongField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticFloatField
void UnityEngine::AndroidJNI::SetStaticFloatField(System::IntPtr clazz, System::IntPtr fieldID, float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticFloatField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticFloatField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetStaticDoubleField
void UnityEngine::AndroidJNI::SetStaticDoubleField(System::IntPtr clazz, System::IntPtr fieldID, double val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetStaticDoubleField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetStaticDoubleField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToBooleanArray
System::IntPtr UnityEngine::AndroidJNI::ToBooleanArray(::Array<bool>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToBooleanArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToBooleanArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToByteArray
System::IntPtr UnityEngine::AndroidJNI::ToByteArray(::Array<uint8_t>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToByteArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToByteArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToSByteArray
System::IntPtr UnityEngine::AndroidJNI::ToSByteArray(::Array<int8_t>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToSByteArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToSByteArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToCharArray
System::IntPtr UnityEngine::AndroidJNI::ToCharArray(::Array<::Il2CppChar>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToCharArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToCharArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToShortArray
System::IntPtr UnityEngine::AndroidJNI::ToShortArray(::Array<int16_t>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToShortArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToShortArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToIntArray
System::IntPtr UnityEngine::AndroidJNI::ToIntArray(::Array<int>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToIntArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToIntArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToLongArray
System::IntPtr UnityEngine::AndroidJNI::ToLongArray(::Array<int64_t>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToLongArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToLongArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToFloatArray
System::IntPtr UnityEngine::AndroidJNI::ToFloatArray(::Array<float>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToFloatArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToFloatArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToDoubleArray
System::IntPtr UnityEngine::AndroidJNI::ToDoubleArray(::Array<double>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToDoubleArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToDoubleArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToObjectArray
System::IntPtr UnityEngine::AndroidJNI::ToObjectArray(::Array<System::IntPtr>* array, System::IntPtr arrayClass) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToObjectArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToObjectArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, arrayClass)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, arrayClass);
}
// Autogenerated method: UnityEngine.AndroidJNI.ToObjectArray
System::IntPtr UnityEngine::AndroidJNI::ToObjectArray(::Array<System::IntPtr>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::ToObjectArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "ToObjectArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromBooleanArray
::Array<bool>* UnityEngine::AndroidJNI::FromBooleanArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromBooleanArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromBooleanArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<::Array<bool>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromByteArray
::Array<uint8_t>* UnityEngine::AndroidJNI::FromByteArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromByteArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromByteArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromSByteArray
::Array<int8_t>* UnityEngine::AndroidJNI::FromSByteArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromSByteArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromSByteArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<::Array<int8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromCharArray
::Array<::Il2CppChar>* UnityEngine::AndroidJNI::FromCharArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromCharArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromCharArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppChar>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromShortArray
::Array<int16_t>* UnityEngine::AndroidJNI::FromShortArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromShortArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromShortArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<::Array<int16_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromIntArray
::Array<int>* UnityEngine::AndroidJNI::FromIntArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromIntArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromIntArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromLongArray
::Array<int64_t>* UnityEngine::AndroidJNI::FromLongArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromLongArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromLongArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<::Array<int64_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromFloatArray
::Array<float>* UnityEngine::AndroidJNI::FromFloatArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromFloatArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromFloatArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<::Array<float>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromDoubleArray
::Array<double>* UnityEngine::AndroidJNI::FromDoubleArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromDoubleArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromDoubleArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<::Array<double>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.FromObjectArray
::Array<System::IntPtr>* UnityEngine::AndroidJNI::FromObjectArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::FromObjectArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "FromObjectArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::IntPtr>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetArrayLength
int UnityEngine::AndroidJNI::GetArrayLength(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetArrayLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetArrayLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewBooleanArray
System::IntPtr UnityEngine::AndroidJNI::NewBooleanArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewBooleanArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewBooleanArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(size)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewByteArray
System::IntPtr UnityEngine::AndroidJNI::NewByteArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewByteArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewByteArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(size)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewSByteArray
System::IntPtr UnityEngine::AndroidJNI::NewSByteArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewSByteArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewSByteArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(size)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewCharArray
System::IntPtr UnityEngine::AndroidJNI::NewCharArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewCharArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewCharArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(size)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewShortArray
System::IntPtr UnityEngine::AndroidJNI::NewShortArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewShortArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewShortArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(size)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewIntArray
System::IntPtr UnityEngine::AndroidJNI::NewIntArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewIntArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewIntArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(size)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewLongArray
System::IntPtr UnityEngine::AndroidJNI::NewLongArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewLongArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewLongArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(size)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewFloatArray
System::IntPtr UnityEngine::AndroidJNI::NewFloatArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewFloatArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewFloatArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(size)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewDoubleArray
System::IntPtr UnityEngine::AndroidJNI::NewDoubleArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewDoubleArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewDoubleArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(size)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.AndroidJNI.NewObjectArray
System::IntPtr UnityEngine::AndroidJNI::NewObjectArray(int size, System::IntPtr clazz, System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::NewObjectArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "NewObjectArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(size, clazz, obj)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, size, clazz, obj);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetBooleanArrayElement
bool UnityEngine::AndroidJNI::GetBooleanArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetBooleanArrayElement");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetBooleanArrayElement", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetByteArrayElement
uint8_t UnityEngine::AndroidJNI::GetByteArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetByteArrayElement");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetByteArrayElement", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index)));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetSByteArrayElement
int8_t UnityEngine::AndroidJNI::GetSByteArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetSByteArrayElement");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetSByteArrayElement", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index)));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetCharArrayElement
::Il2CppChar UnityEngine::AndroidJNI::GetCharArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetCharArrayElement");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetCharArrayElement", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetShortArrayElement
int16_t UnityEngine::AndroidJNI::GetShortArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetShortArrayElement");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetShortArrayElement", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index)));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetIntArrayElement
int UnityEngine::AndroidJNI::GetIntArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetIntArrayElement");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetIntArrayElement", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetLongArrayElement
int64_t UnityEngine::AndroidJNI::GetLongArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetLongArrayElement");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetLongArrayElement", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetFloatArrayElement
float UnityEngine::AndroidJNI::GetFloatArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetFloatArrayElement");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetFloatArrayElement", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetDoubleArrayElement
double UnityEngine::AndroidJNI::GetDoubleArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetDoubleArrayElement");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetDoubleArrayElement", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.GetObjectArrayElement
System::IntPtr UnityEngine::AndroidJNI::GetObjectArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::GetObjectArrayElement");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "GetObjectArrayElement", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetBooleanArrayElement
void UnityEngine::AndroidJNI::SetBooleanArrayElement(System::IntPtr array, int index, uint8_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetBooleanArrayElement");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetBooleanArrayElement", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetBooleanArrayElement
void UnityEngine::AndroidJNI::SetBooleanArrayElement(System::IntPtr array, int index, bool val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetBooleanArrayElement");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetBooleanArrayElement", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetByteArrayElement
void UnityEngine::AndroidJNI::SetByteArrayElement(System::IntPtr array, int index, int8_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetByteArrayElement");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetByteArrayElement", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetSByteArrayElement
void UnityEngine::AndroidJNI::SetSByteArrayElement(System::IntPtr array, int index, int8_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetSByteArrayElement");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetSByteArrayElement", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetCharArrayElement
void UnityEngine::AndroidJNI::SetCharArrayElement(System::IntPtr array, int index, ::Il2CppChar val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetCharArrayElement");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetCharArrayElement", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetShortArrayElement
void UnityEngine::AndroidJNI::SetShortArrayElement(System::IntPtr array, int index, int16_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetShortArrayElement");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetShortArrayElement", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetIntArrayElement
void UnityEngine::AndroidJNI::SetIntArrayElement(System::IntPtr array, int index, int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetIntArrayElement");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetIntArrayElement", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetLongArrayElement
void UnityEngine::AndroidJNI::SetLongArrayElement(System::IntPtr array, int index, int64_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetLongArrayElement");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetLongArrayElement", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetFloatArrayElement
void UnityEngine::AndroidJNI::SetFloatArrayElement(System::IntPtr array, int index, float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetFloatArrayElement");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetFloatArrayElement", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetDoubleArrayElement
void UnityEngine::AndroidJNI::SetDoubleArrayElement(System::IntPtr array, int index, double val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetDoubleArrayElement");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetDoubleArrayElement", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, val);
}
// Autogenerated method: UnityEngine.AndroidJNI.SetObjectArrayElement
void UnityEngine::AndroidJNI::SetObjectArrayElement(System::IntPtr array, int index, System::IntPtr obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNI::SetObjectArrayElement");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNI", "SetObjectArrayElement", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index, obj)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AndroidJNISafe
#include "UnityEngine/AndroidJNISafe.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AndroidJNISafe.CheckException
void UnityEngine::AndroidJNISafe::CheckException() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CheckException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CheckException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.DeleteGlobalRef
void UnityEngine::AndroidJNISafe::DeleteGlobalRef(System::IntPtr globalref) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::DeleteGlobalRef");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "DeleteGlobalRef", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(globalref)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, globalref);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.DeleteWeakGlobalRef
void UnityEngine::AndroidJNISafe::DeleteWeakGlobalRef(System::IntPtr globalref) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::DeleteWeakGlobalRef");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "DeleteWeakGlobalRef", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(globalref)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, globalref);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.DeleteLocalRef
void UnityEngine::AndroidJNISafe::DeleteLocalRef(System::IntPtr localref) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::DeleteLocalRef");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "DeleteLocalRef", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(localref)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, localref);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.NewString
System::IntPtr UnityEngine::AndroidJNISafe::NewString(::Il2CppString* chars) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::NewString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "NewString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(chars)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, chars);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStringChars
::Il2CppString* UnityEngine::AndroidJNISafe::GetStringChars(System::IntPtr str) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStringChars");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStringChars", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetObjectClass
System::IntPtr UnityEngine::AndroidJNISafe::GetObjectClass(System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetObjectClass");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetObjectClass", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ptr)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticMethodID
System::IntPtr UnityEngine::AndroidJNISafe::GetStaticMethodID(System::IntPtr clazz, ::Il2CppString* name, ::Il2CppString* sig) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticMethodID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticMethodID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, name, sig)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, name, sig);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetMethodID
System::IntPtr UnityEngine::AndroidJNISafe::GetMethodID(System::IntPtr obj, ::Il2CppString* name, ::Il2CppString* sig) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetMethodID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetMethodID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, name, sig)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, name, sig);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetFieldID
System::IntPtr UnityEngine::AndroidJNISafe::GetFieldID(System::IntPtr clazz, ::Il2CppString* name, ::Il2CppString* sig) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetFieldID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetFieldID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, name, sig)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, name, sig);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticFieldID
System::IntPtr UnityEngine::AndroidJNISafe::GetStaticFieldID(System::IntPtr clazz, ::Il2CppString* name, ::Il2CppString* sig) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticFieldID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticFieldID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, name, sig)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, name, sig);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.FromReflectedMethod
System::IntPtr UnityEngine::AndroidJNISafe::FromReflectedMethod(System::IntPtr refMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::FromReflectedMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "FromReflectedMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(refMethod)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, refMethod);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.FindClass
System::IntPtr UnityEngine::AndroidJNISafe::FindClass(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::FindClass");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "FindClass", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.NewObject
System::IntPtr UnityEngine::AndroidJNISafe::NewObject(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::NewObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "NewObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetStaticObjectField
void UnityEngine::AndroidJNISafe::SetStaticObjectField(System::IntPtr clazz, System::IntPtr fieldID, System::IntPtr val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetStaticObjectField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetStaticObjectField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetStaticStringField
void UnityEngine::AndroidJNISafe::SetStaticStringField(System::IntPtr clazz, System::IntPtr fieldID, ::Il2CppString* val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetStaticStringField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetStaticStringField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetStaticCharField
void UnityEngine::AndroidJNISafe::SetStaticCharField(System::IntPtr clazz, System::IntPtr fieldID, ::Il2CppChar val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetStaticCharField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetStaticCharField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetStaticDoubleField
void UnityEngine::AndroidJNISafe::SetStaticDoubleField(System::IntPtr clazz, System::IntPtr fieldID, double val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetStaticDoubleField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetStaticDoubleField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetStaticFloatField
void UnityEngine::AndroidJNISafe::SetStaticFloatField(System::IntPtr clazz, System::IntPtr fieldID, float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetStaticFloatField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetStaticFloatField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetStaticLongField
void UnityEngine::AndroidJNISafe::SetStaticLongField(System::IntPtr clazz, System::IntPtr fieldID, int64_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetStaticLongField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetStaticLongField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetStaticShortField
void UnityEngine::AndroidJNISafe::SetStaticShortField(System::IntPtr clazz, System::IntPtr fieldID, int16_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetStaticShortField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetStaticShortField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetStaticSByteField
void UnityEngine::AndroidJNISafe::SetStaticSByteField(System::IntPtr clazz, System::IntPtr fieldID, int8_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetStaticSByteField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetStaticSByteField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetStaticBooleanField
void UnityEngine::AndroidJNISafe::SetStaticBooleanField(System::IntPtr clazz, System::IntPtr fieldID, bool val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetStaticBooleanField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetStaticBooleanField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetStaticIntField
void UnityEngine::AndroidJNISafe::SetStaticIntField(System::IntPtr clazz, System::IntPtr fieldID, int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetStaticIntField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetStaticIntField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticObjectField
System::IntPtr UnityEngine::AndroidJNISafe::GetStaticObjectField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticObjectField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticObjectField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticStringField
::Il2CppString* UnityEngine::AndroidJNISafe::GetStaticStringField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticStringField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticStringField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticCharField
::Il2CppChar UnityEngine::AndroidJNISafe::GetStaticCharField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticCharField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticCharField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticDoubleField
double UnityEngine::AndroidJNISafe::GetStaticDoubleField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticDoubleField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticDoubleField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticFloatField
float UnityEngine::AndroidJNISafe::GetStaticFloatField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticFloatField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticFloatField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticLongField
int64_t UnityEngine::AndroidJNISafe::GetStaticLongField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticLongField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticLongField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticShortField
int16_t UnityEngine::AndroidJNISafe::GetStaticShortField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticShortField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticShortField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticSByteField
int8_t UnityEngine::AndroidJNISafe::GetStaticSByteField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticSByteField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticSByteField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticBooleanField
bool UnityEngine::AndroidJNISafe::GetStaticBooleanField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticBooleanField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticBooleanField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStaticIntField
int UnityEngine::AndroidJNISafe::GetStaticIntField(System::IntPtr clazz, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStaticIntField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStaticIntField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStaticVoidMethod
void UnityEngine::AndroidJNISafe::CallStaticVoidMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStaticVoidMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStaticVoidMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, methodID, args)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStaticObjectMethod
System::IntPtr UnityEngine::AndroidJNISafe::CallStaticObjectMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStaticObjectMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStaticObjectMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStaticStringMethod
::Il2CppString* UnityEngine::AndroidJNISafe::CallStaticStringMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStaticStringMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStaticStringMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStaticCharMethod
::Il2CppChar UnityEngine::AndroidJNISafe::CallStaticCharMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStaticCharMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStaticCharMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStaticDoubleMethod
double UnityEngine::AndroidJNISafe::CallStaticDoubleMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStaticDoubleMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStaticDoubleMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStaticFloatMethod
float UnityEngine::AndroidJNISafe::CallStaticFloatMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStaticFloatMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStaticFloatMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStaticLongMethod
int64_t UnityEngine::AndroidJNISafe::CallStaticLongMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStaticLongMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStaticLongMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStaticShortMethod
int16_t UnityEngine::AndroidJNISafe::CallStaticShortMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStaticShortMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStaticShortMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStaticSByteMethod
int8_t UnityEngine::AndroidJNISafe::CallStaticSByteMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStaticSByteMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStaticSByteMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStaticBooleanMethod
bool UnityEngine::AndroidJNISafe::CallStaticBooleanMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStaticBooleanMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStaticBooleanMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStaticIntMethod
int UnityEngine::AndroidJNISafe::CallStaticIntMethod(System::IntPtr clazz, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStaticIntMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStaticIntMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetObjectField
void UnityEngine::AndroidJNISafe::SetObjectField(System::IntPtr obj, System::IntPtr fieldID, System::IntPtr val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetObjectField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetObjectField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetStringField
void UnityEngine::AndroidJNISafe::SetStringField(System::IntPtr obj, System::IntPtr fieldID, ::Il2CppString* val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetStringField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetStringField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetCharField
void UnityEngine::AndroidJNISafe::SetCharField(System::IntPtr obj, System::IntPtr fieldID, ::Il2CppChar val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetCharField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetCharField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetDoubleField
void UnityEngine::AndroidJNISafe::SetDoubleField(System::IntPtr obj, System::IntPtr fieldID, double val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetDoubleField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetDoubleField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetFloatField
void UnityEngine::AndroidJNISafe::SetFloatField(System::IntPtr obj, System::IntPtr fieldID, float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetFloatField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetFloatField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetLongField
void UnityEngine::AndroidJNISafe::SetLongField(System::IntPtr obj, System::IntPtr fieldID, int64_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetLongField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetLongField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetShortField
void UnityEngine::AndroidJNISafe::SetShortField(System::IntPtr obj, System::IntPtr fieldID, int16_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetShortField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetShortField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetSByteField
void UnityEngine::AndroidJNISafe::SetSByteField(System::IntPtr obj, System::IntPtr fieldID, int8_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetSByteField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetSByteField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetBooleanField
void UnityEngine::AndroidJNISafe::SetBooleanField(System::IntPtr obj, System::IntPtr fieldID, bool val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetBooleanField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetBooleanField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.SetIntField
void UnityEngine::AndroidJNISafe::SetIntField(System::IntPtr obj, System::IntPtr fieldID, int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::SetIntField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "SetIntField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID, val)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID, val);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetObjectField
System::IntPtr UnityEngine::AndroidJNISafe::GetObjectField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetObjectField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetObjectField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetStringField
::Il2CppString* UnityEngine::AndroidJNISafe::GetStringField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetStringField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetStringField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetCharField
::Il2CppChar UnityEngine::AndroidJNISafe::GetCharField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetCharField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetCharField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetDoubleField
double UnityEngine::AndroidJNISafe::GetDoubleField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetDoubleField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetDoubleField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetFloatField
float UnityEngine::AndroidJNISafe::GetFloatField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetFloatField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetFloatField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetLongField
int64_t UnityEngine::AndroidJNISafe::GetLongField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetLongField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetLongField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetShortField
int16_t UnityEngine::AndroidJNISafe::GetShortField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetShortField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetShortField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetSByteField
int8_t UnityEngine::AndroidJNISafe::GetSByteField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetSByteField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetSByteField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetBooleanField
bool UnityEngine::AndroidJNISafe::GetBooleanField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetBooleanField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetBooleanField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetIntField
int UnityEngine::AndroidJNISafe::GetIntField(System::IntPtr obj, System::IntPtr fieldID) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetIntField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetIntField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, fieldID)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, fieldID);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallVoidMethod
void UnityEngine::AndroidJNISafe::CallVoidMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallVoidMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallVoidMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, methodID, args)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallObjectMethod
System::IntPtr UnityEngine::AndroidJNISafe::CallObjectMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallObjectMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallObjectMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallStringMethod
::Il2CppString* UnityEngine::AndroidJNISafe::CallStringMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallStringMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallStringMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallCharMethod
::Il2CppChar UnityEngine::AndroidJNISafe::CallCharMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallCharMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallCharMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallDoubleMethod
double UnityEngine::AndroidJNISafe::CallDoubleMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallDoubleMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallDoubleMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallFloatMethod
float UnityEngine::AndroidJNISafe::CallFloatMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallFloatMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallFloatMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallLongMethod
int64_t UnityEngine::AndroidJNISafe::CallLongMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallLongMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallLongMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallShortMethod
int16_t UnityEngine::AndroidJNISafe::CallShortMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallShortMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallShortMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallSByteMethod
int8_t UnityEngine::AndroidJNISafe::CallSByteMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallSByteMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallSByteMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallBooleanMethod
bool UnityEngine::AndroidJNISafe::CallBooleanMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallBooleanMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallBooleanMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.CallIntMethod
int UnityEngine::AndroidJNISafe::CallIntMethod(System::IntPtr obj, System::IntPtr methodID, ::Array<UnityEngine::jvalue>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::CallIntMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "CallIntMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj, methodID, args)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, methodID, args);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.FromCharArray
::Array<::Il2CppChar>* UnityEngine::AndroidJNISafe::FromCharArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::FromCharArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "FromCharArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppChar>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.FromDoubleArray
::Array<double>* UnityEngine::AndroidJNISafe::FromDoubleArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::FromDoubleArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "FromDoubleArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<::Array<double>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.FromFloatArray
::Array<float>* UnityEngine::AndroidJNISafe::FromFloatArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::FromFloatArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "FromFloatArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<::Array<float>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.FromLongArray
::Array<int64_t>* UnityEngine::AndroidJNISafe::FromLongArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::FromLongArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "FromLongArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<::Array<int64_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.FromShortArray
::Array<int16_t>* UnityEngine::AndroidJNISafe::FromShortArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::FromShortArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "FromShortArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<::Array<int16_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.FromByteArray
::Array<uint8_t>* UnityEngine::AndroidJNISafe::FromByteArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::FromByteArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "FromByteArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.FromSByteArray
::Array<int8_t>* UnityEngine::AndroidJNISafe::FromSByteArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::FromSByteArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "FromSByteArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<::Array<int8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.FromBooleanArray
::Array<bool>* UnityEngine::AndroidJNISafe::FromBooleanArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::FromBooleanArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "FromBooleanArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<::Array<bool>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.FromIntArray
::Array<int>* UnityEngine::AndroidJNISafe::FromIntArray(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::FromIntArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "FromIntArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.ToObjectArray
System::IntPtr UnityEngine::AndroidJNISafe::ToObjectArray(::Array<System::IntPtr>* array, System::IntPtr type) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::ToObjectArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "ToObjectArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, type)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, type);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.ToCharArray
System::IntPtr UnityEngine::AndroidJNISafe::ToCharArray(::Array<::Il2CppChar>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::ToCharArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "ToCharArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.ToDoubleArray
System::IntPtr UnityEngine::AndroidJNISafe::ToDoubleArray(::Array<double>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::ToDoubleArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "ToDoubleArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.ToFloatArray
System::IntPtr UnityEngine::AndroidJNISafe::ToFloatArray(::Array<float>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::ToFloatArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "ToFloatArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.ToLongArray
System::IntPtr UnityEngine::AndroidJNISafe::ToLongArray(::Array<int64_t>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::ToLongArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "ToLongArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.ToShortArray
System::IntPtr UnityEngine::AndroidJNISafe::ToShortArray(::Array<int16_t>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::ToShortArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "ToShortArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.ToByteArray
System::IntPtr UnityEngine::AndroidJNISafe::ToByteArray(::Array<uint8_t>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::ToByteArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "ToByteArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.ToSByteArray
System::IntPtr UnityEngine::AndroidJNISafe::ToSByteArray(::Array<int8_t>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::ToSByteArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "ToSByteArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.ToBooleanArray
System::IntPtr UnityEngine::AndroidJNISafe::ToBooleanArray(::Array<bool>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::ToBooleanArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "ToBooleanArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.ToIntArray
System::IntPtr UnityEngine::AndroidJNISafe::ToIntArray(::Array<int>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::ToIntArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "ToIntArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetObjectArrayElement
System::IntPtr UnityEngine::AndroidJNISafe::GetObjectArrayElement(System::IntPtr array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetObjectArrayElement");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetObjectArrayElement", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: UnityEngine.AndroidJNISafe.GetArrayLength
int UnityEngine::AndroidJNISafe::GetArrayLength(System::IntPtr array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJNISafe::GetArrayLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJNISafe", "GetArrayLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AndroidJavaRunnable
#include "UnityEngine/AndroidJavaRunnable.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AndroidJavaRunnable.Invoke
void UnityEngine::AndroidJavaRunnable::Invoke_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaRunnable::Invoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJavaRunnable.BeginInvoke
System::IAsyncResult* UnityEngine::AndroidJavaRunnable::BeginInvoke_NEW(System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaRunnable::BeginInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: UnityEngine.AndroidJavaRunnable.EndInvoke
void UnityEngine::AndroidJavaRunnable::EndInvoke_NEW(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaRunnable::EndInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AndroidJavaException
#include "UnityEngine/AndroidJavaException.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AndroidJavaException.get_StackTrace
::Il2CppString* UnityEngine::AndroidJavaException::get_StackTrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaException::get_StackTrace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_StackTrace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.GlobalJavaObjectRef
#include "UnityEngine/GlobalJavaObjectRef.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.GlobalJavaObjectRef.Dispose
void UnityEngine::GlobalJavaObjectRef::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::GlobalJavaObjectRef::Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.GlobalJavaObjectRef.Finalize
void UnityEngine::GlobalJavaObjectRef::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::GlobalJavaObjectRef::Finalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AndroidJavaRunnableProxy
#include "UnityEngine/AndroidJavaRunnableProxy.hpp"
// Including type: UnityEngine.AndroidJavaRunnable
#include "UnityEngine/AndroidJavaRunnable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AndroidJavaRunnableProxy.run
void UnityEngine::AndroidJavaRunnableProxy::run() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaRunnableProxy::run");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "run", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AndroidJavaProxy
#include "UnityEngine/AndroidJavaProxy.hpp"
// Including type: UnityEngine.AndroidJavaClass
#include "UnityEngine/AndroidJavaClass.hpp"
// Including type: UnityEngine.GlobalJavaObjectRef
#include "UnityEngine/GlobalJavaObjectRef.hpp"
// Including type: UnityEngine.AndroidJavaObject
#include "UnityEngine/AndroidJavaObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.GlobalJavaObjectRef s_JavaLangSystemClass
UnityEngine::GlobalJavaObjectRef* UnityEngine::AndroidJavaProxy::_get_s_JavaLangSystemClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaProxy::_get_s_JavaLangSystemClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::GlobalJavaObjectRef*>("UnityEngine", "AndroidJavaProxy", "s_JavaLangSystemClass"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.GlobalJavaObjectRef s_JavaLangSystemClass
void UnityEngine::AndroidJavaProxy::_set_s_JavaLangSystemClass(UnityEngine::GlobalJavaObjectRef* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaProxy::_set_s_JavaLangSystemClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AndroidJavaProxy", "s_JavaLangSystemClass", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.IntPtr s_HashCodeMethodID
System::IntPtr UnityEngine::AndroidJavaProxy::_get_s_HashCodeMethodID() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaProxy::_get_s_HashCodeMethodID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("UnityEngine", "AndroidJavaProxy", "s_HashCodeMethodID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IntPtr s_HashCodeMethodID
void UnityEngine::AndroidJavaProxy::_set_s_HashCodeMethodID(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaProxy::_set_s_HashCodeMethodID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AndroidJavaProxy", "s_HashCodeMethodID", value));
}
// Autogenerated method: UnityEngine.AndroidJavaProxy.Invoke
UnityEngine::AndroidJavaObject* UnityEngine::AndroidJavaProxy::Invoke_NEW(::Il2CppString* methodName, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaProxy::Invoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(methodName, args)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AndroidJavaObject*, false>(this, ___internal__method, methodName, args);
}
// Autogenerated method: UnityEngine.AndroidJavaProxy.Invoke
UnityEngine::AndroidJavaObject* UnityEngine::AndroidJavaProxy::Invoke_NEW(::Il2CppString* methodName, ::Array<UnityEngine::AndroidJavaObject*>* javaArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaProxy::Invoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(methodName, javaArgs)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AndroidJavaObject*, false>(this, ___internal__method, methodName, javaArgs);
}
// Autogenerated method: UnityEngine.AndroidJavaProxy.equals
bool UnityEngine::AndroidJavaProxy::equals_NEW(UnityEngine::AndroidJavaObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaProxy::equals_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: UnityEngine.AndroidJavaProxy.hashCode
int UnityEngine::AndroidJavaProxy::hashCode_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaProxy::hashCode_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "hashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJavaProxy.toString
::Il2CppString* UnityEngine::AndroidJavaProxy::toString_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaProxy::toString_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "toString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJavaProxy.GetProxyObject
UnityEngine::AndroidJavaObject* UnityEngine::AndroidJavaProxy::GetProxyObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaProxy::GetProxyObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetProxyObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AndroidJavaObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJavaProxy.GetRawProxy
System::IntPtr UnityEngine::AndroidJavaProxy::GetRawProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaProxy::GetRawProxy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRawProxy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJavaProxy..cctor
void UnityEngine::AndroidJavaProxy::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaProxy::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJavaProxy", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJavaProxy.Finalize
void UnityEngine::AndroidJavaProxy::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaProxy::Finalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AndroidJavaObject
#include "UnityEngine/AndroidJavaObject.hpp"
// Including type: UnityEngine.GlobalJavaObjectRef
#include "UnityEngine/GlobalJavaObjectRef.hpp"
// Including type: UnityEngine.AndroidJavaClass
#include "UnityEngine/AndroidJavaClass.hpp"
// Including type: UnityEngine.AndroidJavaProxy
#include "UnityEngine/AndroidJavaProxy.hpp"
// Including type: UnityEngine.AndroidJavaRunnable
#include "UnityEngine/AndroidJavaRunnable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean enableDebugPrints
bool UnityEngine::AndroidJavaObject::_get_enableDebugPrints() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::_get_enableDebugPrints");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("UnityEngine", "AndroidJavaObject", "enableDebugPrints"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean enableDebugPrints
void UnityEngine::AndroidJavaObject::_set_enableDebugPrints(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::_set_enableDebugPrints");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AndroidJavaObject", "enableDebugPrints", value));
}
// Autogenerated method: UnityEngine.AndroidJavaObject.Dispose
void UnityEngine::AndroidJavaObject::Dispose_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJavaObject.Call
void UnityEngine::AndroidJavaObject::Call(::Il2CppString* methodName, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::Call");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Call", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(methodName, args)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, methodName, args);
}
// Creating initializer_list -> params proxy for: System.Void Call(System.String methodName, params System.Object[] args)
void UnityEngine::AndroidJavaObject::Call(::Il2CppString* methodName, std::initializer_list<::Il2CppObject*> args) {
  UnityEngine::AndroidJavaObject::Call(methodName, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: UnityEngine.AndroidJavaObject.CallStatic
void UnityEngine::AndroidJavaObject::CallStatic(::Il2CppString* methodName, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::CallStatic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CallStatic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(methodName, args)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, methodName, args);
}
// Creating initializer_list -> params proxy for: System.Void CallStatic(System.String methodName, params System.Object[] args)
void UnityEngine::AndroidJavaObject::CallStatic(::Il2CppString* methodName, std::initializer_list<::Il2CppObject*> args) {
  UnityEngine::AndroidJavaObject::CallStatic(methodName, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: UnityEngine.AndroidJavaObject.GetRawObject
System::IntPtr UnityEngine::AndroidJavaObject::GetRawObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::GetRawObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRawObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJavaObject.GetRawClass
System::IntPtr UnityEngine::AndroidJavaObject::GetRawClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::GetRawClass");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRawClass", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJavaObject.DebugPrint
void UnityEngine::AndroidJavaObject::DebugPrint(::Il2CppString* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::DebugPrint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DebugPrint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(msg)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: UnityEngine.AndroidJavaObject.DebugPrint
void UnityEngine::AndroidJavaObject::DebugPrint(::Il2CppString* call, ::Il2CppString* methodName, ::Il2CppString* signature, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::DebugPrint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DebugPrint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(call, methodName, signature, args)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, call, methodName, signature, args);
}
// Autogenerated method: UnityEngine.AndroidJavaObject._AndroidJavaObject
void UnityEngine::AndroidJavaObject::_AndroidJavaObject(::Il2CppString* className, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::_AndroidJavaObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "_AndroidJavaObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(className, args)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, className, args);
}
// Creating initializer_list -> params proxy for: System.Void _AndroidJavaObject(System.String className, params System.Object[] args)
void UnityEngine::AndroidJavaObject::_AndroidJavaObject(::Il2CppString* className, std::initializer_list<::Il2CppObject*> args) {
  UnityEngine::AndroidJavaObject::_AndroidJavaObject(className, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: UnityEngine.AndroidJavaObject.Dispose
void UnityEngine::AndroidJavaObject::Dispose_NEW(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::Dispose_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposing)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: UnityEngine.AndroidJavaObject._Call
void UnityEngine::AndroidJavaObject::_Call(::Il2CppString* methodName, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::_Call");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "_Call", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(methodName, args)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, methodName, args);
}
// Creating initializer_list -> params proxy for: System.Void _Call(System.String methodName, params System.Object[] args)
void UnityEngine::AndroidJavaObject::_Call(::Il2CppString* methodName, std::initializer_list<::Il2CppObject*> args) {
  UnityEngine::AndroidJavaObject::_Call(methodName, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: UnityEngine.AndroidJavaObject._CallStatic
void UnityEngine::AndroidJavaObject::_CallStatic(::Il2CppString* methodName, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::_CallStatic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "_CallStatic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(methodName, args)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, methodName, args);
}
// Creating initializer_list -> params proxy for: System.Void _CallStatic(System.String methodName, params System.Object[] args)
void UnityEngine::AndroidJavaObject::_CallStatic(::Il2CppString* methodName, std::initializer_list<::Il2CppObject*> args) {
  UnityEngine::AndroidJavaObject::_CallStatic(methodName, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: UnityEngine.AndroidJavaObject.AndroidJavaObjectDeleteLocalRef
UnityEngine::AndroidJavaObject* UnityEngine::AndroidJavaObject::AndroidJavaObjectDeleteLocalRef(System::IntPtr jobject) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::AndroidJavaObjectDeleteLocalRef");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJavaObject", "AndroidJavaObjectDeleteLocalRef", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(jobject)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AndroidJavaObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, jobject);
}
// Autogenerated method: UnityEngine.AndroidJavaObject.AndroidJavaClassDeleteLocalRef
UnityEngine::AndroidJavaClass* UnityEngine::AndroidJavaObject::AndroidJavaClassDeleteLocalRef(System::IntPtr jclass) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::AndroidJavaClassDeleteLocalRef");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJavaObject", "AndroidJavaClassDeleteLocalRef", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(jclass)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AndroidJavaClass*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, jclass);
}
// Autogenerated method: UnityEngine.AndroidJavaObject._GetRawObject
System::IntPtr UnityEngine::AndroidJavaObject::_GetRawObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::_GetRawObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "_GetRawObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJavaObject._GetRawClass
System::IntPtr UnityEngine::AndroidJavaObject::_GetRawClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::_GetRawClass");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "_GetRawClass", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJavaObject..cctor
void UnityEngine::AndroidJavaObject::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidJavaObject", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.AndroidJavaObject.Finalize
void UnityEngine::AndroidJavaObject::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaObject::Finalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AndroidJavaClass
#include "UnityEngine/AndroidJavaClass.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AndroidJavaClass._AndroidJavaClass
void UnityEngine::AndroidJavaClass::_AndroidJavaClass(::Il2CppString* className) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidJavaClass::_AndroidJavaClass");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "_AndroidJavaClass", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(className)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, className);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AndroidReflection
#include "UnityEngine/AndroidReflection.hpp"
// Including type: UnityEngine.GlobalJavaObjectRef
#include "UnityEngine/GlobalJavaObjectRef.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.GlobalJavaObjectRef s_ReflectionHelperClass
UnityEngine::GlobalJavaObjectRef* UnityEngine::AndroidReflection::_get_s_ReflectionHelperClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::_get_s_ReflectionHelperClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::GlobalJavaObjectRef*>("UnityEngine", "AndroidReflection", "s_ReflectionHelperClass"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.GlobalJavaObjectRef s_ReflectionHelperClass
void UnityEngine::AndroidReflection::_set_s_ReflectionHelperClass(UnityEngine::GlobalJavaObjectRef* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::_set_s_ReflectionHelperClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AndroidReflection", "s_ReflectionHelperClass", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.IntPtr s_ReflectionHelperGetConstructorID
System::IntPtr UnityEngine::AndroidReflection::_get_s_ReflectionHelperGetConstructorID() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::_get_s_ReflectionHelperGetConstructorID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("UnityEngine", "AndroidReflection", "s_ReflectionHelperGetConstructorID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IntPtr s_ReflectionHelperGetConstructorID
void UnityEngine::AndroidReflection::_set_s_ReflectionHelperGetConstructorID(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::_set_s_ReflectionHelperGetConstructorID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AndroidReflection", "s_ReflectionHelperGetConstructorID", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.IntPtr s_ReflectionHelperGetMethodID
System::IntPtr UnityEngine::AndroidReflection::_get_s_ReflectionHelperGetMethodID() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::_get_s_ReflectionHelperGetMethodID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("UnityEngine", "AndroidReflection", "s_ReflectionHelperGetMethodID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IntPtr s_ReflectionHelperGetMethodID
void UnityEngine::AndroidReflection::_set_s_ReflectionHelperGetMethodID(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::_set_s_ReflectionHelperGetMethodID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AndroidReflection", "s_ReflectionHelperGetMethodID", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.IntPtr s_ReflectionHelperGetFieldID
System::IntPtr UnityEngine::AndroidReflection::_get_s_ReflectionHelperGetFieldID() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::_get_s_ReflectionHelperGetFieldID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("UnityEngine", "AndroidReflection", "s_ReflectionHelperGetFieldID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IntPtr s_ReflectionHelperGetFieldID
void UnityEngine::AndroidReflection::_set_s_ReflectionHelperGetFieldID(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::_set_s_ReflectionHelperGetFieldID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AndroidReflection", "s_ReflectionHelperGetFieldID", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.IntPtr s_ReflectionHelperGetFieldSignature
System::IntPtr UnityEngine::AndroidReflection::_get_s_ReflectionHelperGetFieldSignature() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::_get_s_ReflectionHelperGetFieldSignature");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("UnityEngine", "AndroidReflection", "s_ReflectionHelperGetFieldSignature"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IntPtr s_ReflectionHelperGetFieldSignature
void UnityEngine::AndroidReflection::_set_s_ReflectionHelperGetFieldSignature(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::_set_s_ReflectionHelperGetFieldSignature");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AndroidReflection", "s_ReflectionHelperGetFieldSignature", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.IntPtr s_ReflectionHelperNewProxyInstance
System::IntPtr UnityEngine::AndroidReflection::_get_s_ReflectionHelperNewProxyInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::_get_s_ReflectionHelperNewProxyInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("UnityEngine", "AndroidReflection", "s_ReflectionHelperNewProxyInstance"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IntPtr s_ReflectionHelperNewProxyInstance
void UnityEngine::AndroidReflection::_set_s_ReflectionHelperNewProxyInstance(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::_set_s_ReflectionHelperNewProxyInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AndroidReflection", "s_ReflectionHelperNewProxyInstance", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.IntPtr s_ReflectionHelperSetNativeExceptionOnProxy
System::IntPtr UnityEngine::AndroidReflection::_get_s_ReflectionHelperSetNativeExceptionOnProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::_get_s_ReflectionHelperSetNativeExceptionOnProxy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("UnityEngine", "AndroidReflection", "s_ReflectionHelperSetNativeExceptionOnProxy"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IntPtr s_ReflectionHelperSetNativeExceptionOnProxy
void UnityEngine::AndroidReflection::_set_s_ReflectionHelperSetNativeExceptionOnProxy(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::_set_s_ReflectionHelperSetNativeExceptionOnProxy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AndroidReflection", "s_ReflectionHelperSetNativeExceptionOnProxy", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.IntPtr s_FieldGetDeclaringClass
System::IntPtr UnityEngine::AndroidReflection::_get_s_FieldGetDeclaringClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::_get_s_FieldGetDeclaringClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("UnityEngine", "AndroidReflection", "s_FieldGetDeclaringClass"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IntPtr s_FieldGetDeclaringClass
void UnityEngine::AndroidReflection::_set_s_FieldGetDeclaringClass(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::_set_s_FieldGetDeclaringClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AndroidReflection", "s_FieldGetDeclaringClass", value));
}
// Autogenerated method: UnityEngine.AndroidReflection.IsPrimitive
bool UnityEngine::AndroidReflection::IsPrimitive(System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::IsPrimitive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidReflection", "IsPrimitive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: UnityEngine.AndroidReflection.IsAssignableFrom
bool UnityEngine::AndroidReflection::IsAssignableFrom(System::Type* t, System::Type* from) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::IsAssignableFrom");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidReflection", "IsAssignableFrom", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t, from)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, from);
}
// Autogenerated method: UnityEngine.AndroidReflection.GetStaticMethodID
System::IntPtr UnityEngine::AndroidReflection::GetStaticMethodID(::Il2CppString* clazz, ::Il2CppString* methodName, ::Il2CppString* signature) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::GetStaticMethodID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidReflection", "GetStaticMethodID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, methodName, signature)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodName, signature);
}
// Autogenerated method: UnityEngine.AndroidReflection.GetMethodID
System::IntPtr UnityEngine::AndroidReflection::GetMethodID(::Il2CppString* clazz, ::Il2CppString* methodName, ::Il2CppString* signature) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::GetMethodID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidReflection", "GetMethodID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(clazz, methodName, signature)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, clazz, methodName, signature);
}
// Autogenerated method: UnityEngine.AndroidReflection.GetConstructorMember
System::IntPtr UnityEngine::AndroidReflection::GetConstructorMember(System::IntPtr jclass, ::Il2CppString* signature) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::GetConstructorMember");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidReflection", "GetConstructorMember", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(jclass, signature)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, jclass, signature);
}
// Autogenerated method: UnityEngine.AndroidReflection.GetMethodMember
System::IntPtr UnityEngine::AndroidReflection::GetMethodMember(System::IntPtr jclass, ::Il2CppString* methodName, ::Il2CppString* signature, bool isStatic) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::GetMethodMember");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidReflection", "GetMethodMember", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(jclass, methodName, signature, isStatic)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, jclass, methodName, signature, isStatic);
}
// Autogenerated method: UnityEngine.AndroidReflection.GetFieldMember
System::IntPtr UnityEngine::AndroidReflection::GetFieldMember(System::IntPtr jclass, ::Il2CppString* fieldName, ::Il2CppString* signature, bool isStatic) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::GetFieldMember");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidReflection", "GetFieldMember", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(jclass, fieldName, signature, isStatic)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, jclass, fieldName, signature, isStatic);
}
// Autogenerated method: UnityEngine.AndroidReflection.GetFieldClass
System::IntPtr UnityEngine::AndroidReflection::GetFieldClass(System::IntPtr field) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::GetFieldClass");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidReflection", "GetFieldClass", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(field)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, field);
}
// Autogenerated method: UnityEngine.AndroidReflection.GetFieldSignature
::Il2CppString* UnityEngine::AndroidReflection::GetFieldSignature(System::IntPtr field) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::GetFieldSignature");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidReflection", "GetFieldSignature", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(field)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, field);
}
// Autogenerated method: UnityEngine.AndroidReflection.NewProxyInstance
System::IntPtr UnityEngine::AndroidReflection::NewProxyInstance(System::IntPtr delegateHandle, System::IntPtr interfaze) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::NewProxyInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidReflection", "NewProxyInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(delegateHandle, interfaze)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, delegateHandle, interfaze);
}
// Autogenerated method: UnityEngine.AndroidReflection.SetNativeExceptionOnProxy
void UnityEngine::AndroidReflection::SetNativeExceptionOnProxy(System::IntPtr proxy, System::Exception* e, bool methodNotFound) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::SetNativeExceptionOnProxy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidReflection", "SetNativeExceptionOnProxy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(proxy, e, methodNotFound)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, proxy, e, methodNotFound);
}
// Autogenerated method: UnityEngine.AndroidReflection..cctor
void UnityEngine::AndroidReflection::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AndroidReflection::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AndroidReflection", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine._AndroidJNIHelper
#include "UnityEngine/_AndroidJNIHelper.hpp"
// Including type: UnityEngine.AndroidJavaProxy
#include "UnityEngine/AndroidJavaProxy.hpp"
// Including type: UnityEngine.AndroidJavaRunnable
#include "UnityEngine/AndroidJavaRunnable.hpp"
// Including type: UnityEngine.AndroidJavaObject
#include "UnityEngine/AndroidJavaObject.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine._AndroidJNIHelper.CreateJavaProxy
System::IntPtr UnityEngine::_AndroidJNIHelper::CreateJavaProxy(System::IntPtr delegateHandle, UnityEngine::AndroidJavaProxy* proxy) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_AndroidJNIHelper::CreateJavaProxy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "_AndroidJNIHelper", "CreateJavaProxy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(delegateHandle, proxy)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, delegateHandle, proxy);
}
// Autogenerated method: UnityEngine._AndroidJNIHelper.CreateJavaRunnable
System::IntPtr UnityEngine::_AndroidJNIHelper::CreateJavaRunnable(UnityEngine::AndroidJavaRunnable* jrunnable) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_AndroidJNIHelper::CreateJavaRunnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "_AndroidJNIHelper", "CreateJavaRunnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(jrunnable)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, jrunnable);
}
// Autogenerated method: UnityEngine._AndroidJNIHelper.InvokeJavaProxyMethod
System::IntPtr UnityEngine::_AndroidJNIHelper::InvokeJavaProxyMethod(UnityEngine::AndroidJavaProxy* proxy, System::IntPtr jmethodName, System::IntPtr jargs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_AndroidJNIHelper::InvokeJavaProxyMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "_AndroidJNIHelper", "InvokeJavaProxyMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(proxy, jmethodName, jargs)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, proxy, jmethodName, jargs);
}
// Autogenerated method: UnityEngine._AndroidJNIHelper.CreateJNIArgArray
::Array<UnityEngine::jvalue>* UnityEngine::_AndroidJNIHelper::CreateJNIArgArray(::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_AndroidJNIHelper::CreateJNIArgArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "_AndroidJNIHelper", "CreateJNIArgArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args)));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::jvalue>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, args);
}
// Autogenerated method: UnityEngine._AndroidJNIHelper.UnboxArray
::Il2CppObject* UnityEngine::_AndroidJNIHelper::UnboxArray(UnityEngine::AndroidJavaObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_AndroidJNIHelper::UnboxArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "_AndroidJNIHelper", "UnboxArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine._AndroidJNIHelper.Unbox
::Il2CppObject* UnityEngine::_AndroidJNIHelper::Unbox(UnityEngine::AndroidJavaObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_AndroidJNIHelper::Unbox");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "_AndroidJNIHelper", "Unbox", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine._AndroidJNIHelper.Box
UnityEngine::AndroidJavaObject* UnityEngine::_AndroidJNIHelper::Box(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_AndroidJNIHelper::Box");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "_AndroidJNIHelper", "Box", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AndroidJavaObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine._AndroidJNIHelper.DeleteJNIArgArray
void UnityEngine::_AndroidJNIHelper::DeleteJNIArgArray(::Array<::Il2CppObject*>* args, ::Array<UnityEngine::jvalue>* jniArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_AndroidJNIHelper::DeleteJNIArgArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "_AndroidJNIHelper", "DeleteJNIArgArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args, jniArgs)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, args, jniArgs);
}
// Autogenerated method: UnityEngine._AndroidJNIHelper.ConvertToJNIArray
System::IntPtr UnityEngine::_AndroidJNIHelper::ConvertToJNIArray(System::Array* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_AndroidJNIHelper::ConvertToJNIArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "_AndroidJNIHelper", "ConvertToJNIArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: UnityEngine._AndroidJNIHelper.GetConstructorID
System::IntPtr UnityEngine::_AndroidJNIHelper::GetConstructorID(System::IntPtr jclass, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_AndroidJNIHelper::GetConstructorID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "_AndroidJNIHelper", "GetConstructorID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(jclass, args)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, jclass, args);
}
// Autogenerated method: UnityEngine._AndroidJNIHelper.GetMethodID
System::IntPtr UnityEngine::_AndroidJNIHelper::GetMethodID(System::IntPtr jclass, ::Il2CppString* methodName, ::Array<::Il2CppObject*>* args, bool isStatic) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_AndroidJNIHelper::GetMethodID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "_AndroidJNIHelper", "GetMethodID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(jclass, methodName, args, isStatic)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, jclass, methodName, args, isStatic);
}
// Autogenerated method: UnityEngine._AndroidJNIHelper.GetConstructorID
System::IntPtr UnityEngine::_AndroidJNIHelper::GetConstructorID(System::IntPtr jclass, ::Il2CppString* signature) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_AndroidJNIHelper::GetConstructorID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "_AndroidJNIHelper", "GetConstructorID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(jclass, signature)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, jclass, signature);
}
// Autogenerated method: UnityEngine._AndroidJNIHelper.GetMethodID
System::IntPtr UnityEngine::_AndroidJNIHelper::GetMethodID(System::IntPtr jclass, ::Il2CppString* methodName, ::Il2CppString* signature, bool isStatic) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_AndroidJNIHelper::GetMethodID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "_AndroidJNIHelper", "GetMethodID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(jclass, methodName, signature, isStatic)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, jclass, methodName, signature, isStatic);
}
// Autogenerated method: UnityEngine._AndroidJNIHelper.GetMethodIDFallback
System::IntPtr UnityEngine::_AndroidJNIHelper::GetMethodIDFallback(System::IntPtr jclass, ::Il2CppString* methodName, ::Il2CppString* signature, bool isStatic) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_AndroidJNIHelper::GetMethodIDFallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "_AndroidJNIHelper", "GetMethodIDFallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(jclass, methodName, signature, isStatic)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, jclass, methodName, signature, isStatic);
}
// Autogenerated method: UnityEngine._AndroidJNIHelper.GetFieldID
System::IntPtr UnityEngine::_AndroidJNIHelper::GetFieldID(System::IntPtr jclass, ::Il2CppString* fieldName, ::Il2CppString* signature, bool isStatic) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_AndroidJNIHelper::GetFieldID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "_AndroidJNIHelper", "GetFieldID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(jclass, fieldName, signature, isStatic)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, jclass, fieldName, signature, isStatic);
}
// Autogenerated method: UnityEngine._AndroidJNIHelper.GetSignature
::Il2CppString* UnityEngine::_AndroidJNIHelper::GetSignature(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_AndroidJNIHelper::GetSignature");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "_AndroidJNIHelper", "GetSignature", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: UnityEngine._AndroidJNIHelper.GetSignature
::Il2CppString* UnityEngine::_AndroidJNIHelper::GetSignature(::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::_AndroidJNIHelper::GetSignature");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "_AndroidJNIHelper", "GetSignature", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.StateMachineBehaviour
#include "UnityEngine/StateMachineBehaviour.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.AnimatorStateInfo
#include "UnityEngine/AnimatorStateInfo.hpp"
// Including type: UnityEngine.Animations.AnimatorControllerPlayable
#include "UnityEngine/Animations/AnimatorControllerPlayable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateEnter
void UnityEngine::StateMachineBehaviour::OnStateEnter_NEW(UnityEngine::Animator* animator, UnityEngine::AnimatorStateInfo stateInfo, int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateMachineBehaviour::OnStateEnter_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnStateEnter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(animator, stateInfo, layerIndex)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateUpdate
void UnityEngine::StateMachineBehaviour::OnStateUpdate_NEW(UnityEngine::Animator* animator, UnityEngine::AnimatorStateInfo stateInfo, int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateMachineBehaviour::OnStateUpdate_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnStateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(animator, stateInfo, layerIndex)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateExit
void UnityEngine::StateMachineBehaviour::OnStateExit_NEW(UnityEngine::Animator* animator, UnityEngine::AnimatorStateInfo stateInfo, int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateMachineBehaviour::OnStateExit_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnStateExit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(animator, stateInfo, layerIndex)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateMove
void UnityEngine::StateMachineBehaviour::OnStateMove_NEW(UnityEngine::Animator* animator, UnityEngine::AnimatorStateInfo stateInfo, int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateMachineBehaviour::OnStateMove_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnStateMove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(animator, stateInfo, layerIndex)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateIK
void UnityEngine::StateMachineBehaviour::OnStateIK_NEW(UnityEngine::Animator* animator, UnityEngine::AnimatorStateInfo stateInfo, int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateMachineBehaviour::OnStateIK_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnStateIK", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(animator, stateInfo, layerIndex)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateMachineEnter
void UnityEngine::StateMachineBehaviour::OnStateMachineEnter_NEW(UnityEngine::Animator* animator, int stateMachinePathHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateMachineBehaviour::OnStateMachineEnter_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnStateMachineEnter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(animator, stateMachinePathHash)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animator, stateMachinePathHash);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateMachineExit
void UnityEngine::StateMachineBehaviour::OnStateMachineExit_NEW(UnityEngine::Animator* animator, int stateMachinePathHash) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateMachineBehaviour::OnStateMachineExit_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnStateMachineExit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(animator, stateMachinePathHash)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animator, stateMachinePathHash);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateEnter
void UnityEngine::StateMachineBehaviour::OnStateEnter_NEW(UnityEngine::Animator* animator, UnityEngine::AnimatorStateInfo stateInfo, int layerIndex, UnityEngine::Animations::AnimatorControllerPlayable controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateMachineBehaviour::OnStateEnter_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnStateEnter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(animator, stateInfo, layerIndex, controller)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex, controller);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateUpdate
void UnityEngine::StateMachineBehaviour::OnStateUpdate_NEW(UnityEngine::Animator* animator, UnityEngine::AnimatorStateInfo stateInfo, int layerIndex, UnityEngine::Animations::AnimatorControllerPlayable controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateMachineBehaviour::OnStateUpdate_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnStateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(animator, stateInfo, layerIndex, controller)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex, controller);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateExit
void UnityEngine::StateMachineBehaviour::OnStateExit_NEW(UnityEngine::Animator* animator, UnityEngine::AnimatorStateInfo stateInfo, int layerIndex, UnityEngine::Animations::AnimatorControllerPlayable controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateMachineBehaviour::OnStateExit_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnStateExit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(animator, stateInfo, layerIndex, controller)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex, controller);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateMove
void UnityEngine::StateMachineBehaviour::OnStateMove_NEW(UnityEngine::Animator* animator, UnityEngine::AnimatorStateInfo stateInfo, int layerIndex, UnityEngine::Animations::AnimatorControllerPlayable controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateMachineBehaviour::OnStateMove_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnStateMove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(animator, stateInfo, layerIndex, controller)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex, controller);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateIK
void UnityEngine::StateMachineBehaviour::OnStateIK_NEW(UnityEngine::Animator* animator, UnityEngine::AnimatorStateInfo stateInfo, int layerIndex, UnityEngine::Animations::AnimatorControllerPlayable controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateMachineBehaviour::OnStateIK_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnStateIK", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(animator, stateInfo, layerIndex, controller)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animator, stateInfo, layerIndex, controller);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateMachineEnter
void UnityEngine::StateMachineBehaviour::OnStateMachineEnter_NEW(UnityEngine::Animator* animator, int stateMachinePathHash, UnityEngine::Animations::AnimatorControllerPlayable controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateMachineBehaviour::OnStateMachineEnter_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnStateMachineEnter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(animator, stateMachinePathHash, controller)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animator, stateMachinePathHash, controller);
}
// Autogenerated method: UnityEngine.StateMachineBehaviour.OnStateMachineExit
void UnityEngine::StateMachineBehaviour::OnStateMachineExit_NEW(UnityEngine::Animator* animator, int stateMachinePathHash, UnityEngine::Animations::AnimatorControllerPlayable controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateMachineBehaviour::OnStateMachineExit_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnStateMachineExit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(animator, stateMachinePathHash, controller)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animator, stateMachinePathHash, controller);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.WrapMode
#include "UnityEngine/WrapMode.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AnimationClip.Internal_CreateAnimationClip
void UnityEngine::AnimationClip::Internal_CreateAnimationClip(UnityEngine::AnimationClip* self) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationClip::Internal_CreateAnimationClip");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AnimationClip", "Internal_CreateAnimationClip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(self)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, self);
}
// Autogenerated method: UnityEngine.AnimationClip.SampleAnimation
void UnityEngine::AnimationClip::SampleAnimation(UnityEngine::GameObject* go, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationClip::SampleAnimation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SampleAnimation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(go, time)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, go, time);
}
// Autogenerated method: UnityEngine.AnimationClip.SampleAnimation
void UnityEngine::AnimationClip::SampleAnimation(UnityEngine::GameObject* go, UnityEngine::AnimationClip* clip, float inTime, UnityEngine::WrapMode wrapMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationClip::SampleAnimation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AnimationClip", "SampleAnimation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(go, clip, inTime, wrapMode)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, go, clip, inTime, wrapMode);
}
// Autogenerated method: UnityEngine.AnimationClip.get_length
float UnityEngine::AnimationClip::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationClip::get_length");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_length", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.get_frameRate
float UnityEngine::AnimationClip::get_frameRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationClip::get_frameRate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_frameRate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.set_frameRate
void UnityEngine::AnimationClip::set_frameRate(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationClip::set_frameRate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_frameRate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AnimationClip.SetCurve
void UnityEngine::AnimationClip::SetCurve(::Il2CppString* relativePath, System::Type* type, ::Il2CppString* propertyName, UnityEngine::AnimationCurve* curve) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationClip::SetCurve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetCurve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(relativePath, type, propertyName, curve)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, relativePath, type, propertyName, curve);
}
// Autogenerated method: UnityEngine.AnimationClip.EnsureQuaternionContinuity
void UnityEngine::AnimationClip::EnsureQuaternionContinuity() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationClip::EnsureQuaternionContinuity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EnsureQuaternionContinuity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.get_wrapMode
UnityEngine::WrapMode UnityEngine::AnimationClip::get_wrapMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationClip::get_wrapMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_wrapMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::WrapMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.get_legacy
bool UnityEngine::AnimationClip::get_legacy() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationClip::get_legacy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_legacy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.set_legacy
void UnityEngine::AnimationClip::set_legacy(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationClip::set_legacy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_legacy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.AnimationClip.get_empty
bool UnityEngine::AnimationClip::get_empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationClip::get_empty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_empty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.get_hasGenericRootTransform
bool UnityEngine::AnimationClip::get_hasGenericRootTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationClip::get_hasGenericRootTransform");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasGenericRootTransform", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.get_hasMotionCurves
bool UnityEngine::AnimationClip::get_hasMotionCurves() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationClip::get_hasMotionCurves");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasMotionCurves", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.get_hasRootCurves
bool UnityEngine::AnimationClip::get_hasRootCurves() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationClip::get_hasRootCurves");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasRootCurves", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimationClip.get_hasRootMotion
bool UnityEngine::AnimationClip::get_hasRootMotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimationClip::get_hasRootMotion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasRootMotion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AvatarIKGoal
#include "UnityEngine/AvatarIKGoal.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarIKGoal LeftFoot
UnityEngine::AvatarIKGoal UnityEngine::AvatarIKGoal::_get_LeftFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarIKGoal::_get_LeftFoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AvatarIKGoal>("UnityEngine", "AvatarIKGoal", "LeftFoot"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarIKGoal LeftFoot
void UnityEngine::AvatarIKGoal::_set_LeftFoot(UnityEngine::AvatarIKGoal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarIKGoal::_set_LeftFoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarIKGoal", "LeftFoot", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarIKGoal RightFoot
UnityEngine::AvatarIKGoal UnityEngine::AvatarIKGoal::_get_RightFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarIKGoal::_get_RightFoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AvatarIKGoal>("UnityEngine", "AvatarIKGoal", "RightFoot"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarIKGoal RightFoot
void UnityEngine::AvatarIKGoal::_set_RightFoot(UnityEngine::AvatarIKGoal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarIKGoal::_set_RightFoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarIKGoal", "RightFoot", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarIKGoal LeftHand
UnityEngine::AvatarIKGoal UnityEngine::AvatarIKGoal::_get_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarIKGoal::_get_LeftHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AvatarIKGoal>("UnityEngine", "AvatarIKGoal", "LeftHand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarIKGoal LeftHand
void UnityEngine::AvatarIKGoal::_set_LeftHand(UnityEngine::AvatarIKGoal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarIKGoal::_set_LeftHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarIKGoal", "LeftHand", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AvatarIKGoal RightHand
UnityEngine::AvatarIKGoal UnityEngine::AvatarIKGoal::_get_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarIKGoal::_get_RightHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AvatarIKGoal>("UnityEngine", "AvatarIKGoal", "RightHand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AvatarIKGoal RightHand
void UnityEngine::AvatarIKGoal::_set_RightHand(UnityEngine::AvatarIKGoal value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AvatarIKGoal::_set_RightHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AvatarIKGoal", "RightHand", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.StateInfoIndex
#include "UnityEngine/StateInfoIndex.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.StateInfoIndex CurrentState
UnityEngine::StateInfoIndex UnityEngine::StateInfoIndex::_get_CurrentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateInfoIndex::_get_CurrentState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::StateInfoIndex>("UnityEngine", "StateInfoIndex", "CurrentState"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.StateInfoIndex CurrentState
void UnityEngine::StateInfoIndex::_set_CurrentState(UnityEngine::StateInfoIndex value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateInfoIndex::_set_CurrentState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "StateInfoIndex", "CurrentState", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.StateInfoIndex NextState
UnityEngine::StateInfoIndex UnityEngine::StateInfoIndex::_get_NextState() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateInfoIndex::_get_NextState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::StateInfoIndex>("UnityEngine", "StateInfoIndex", "NextState"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.StateInfoIndex NextState
void UnityEngine::StateInfoIndex::_set_NextState(UnityEngine::StateInfoIndex value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateInfoIndex::_set_NextState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "StateInfoIndex", "NextState", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.StateInfoIndex ExitState
UnityEngine::StateInfoIndex UnityEngine::StateInfoIndex::_get_ExitState() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateInfoIndex::_get_ExitState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::StateInfoIndex>("UnityEngine", "StateInfoIndex", "ExitState"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.StateInfoIndex ExitState
void UnityEngine::StateInfoIndex::_set_ExitState(UnityEngine::StateInfoIndex value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateInfoIndex::_set_ExitState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "StateInfoIndex", "ExitState", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.StateInfoIndex InterruptedState
UnityEngine::StateInfoIndex UnityEngine::StateInfoIndex::_get_InterruptedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateInfoIndex::_get_InterruptedState");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::StateInfoIndex>("UnityEngine", "StateInfoIndex", "InterruptedState"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.StateInfoIndex InterruptedState
void UnityEngine::StateInfoIndex::_set_InterruptedState(UnityEngine::StateInfoIndex value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::StateInfoIndex::_set_InterruptedState");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "StateInfoIndex", "InterruptedState", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AnimatorCullingMode
#include "UnityEngine/AnimatorCullingMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimatorCullingMode AlwaysAnimate
UnityEngine::AnimatorCullingMode UnityEngine::AnimatorCullingMode::_get_AlwaysAnimate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorCullingMode::_get_AlwaysAnimate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AnimatorCullingMode>("UnityEngine", "AnimatorCullingMode", "AlwaysAnimate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimatorCullingMode AlwaysAnimate
void UnityEngine::AnimatorCullingMode::_set_AlwaysAnimate(UnityEngine::AnimatorCullingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorCullingMode::_set_AlwaysAnimate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimatorCullingMode", "AlwaysAnimate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimatorCullingMode CullUpdateTransforms
UnityEngine::AnimatorCullingMode UnityEngine::AnimatorCullingMode::_get_CullUpdateTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorCullingMode::_get_CullUpdateTransforms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AnimatorCullingMode>("UnityEngine", "AnimatorCullingMode", "CullUpdateTransforms"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimatorCullingMode CullUpdateTransforms
void UnityEngine::AnimatorCullingMode::_set_CullUpdateTransforms(UnityEngine::AnimatorCullingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorCullingMode::_set_CullUpdateTransforms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimatorCullingMode", "CullUpdateTransforms", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimatorCullingMode CullCompletely
UnityEngine::AnimatorCullingMode UnityEngine::AnimatorCullingMode::_get_CullCompletely() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorCullingMode::_get_CullCompletely");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AnimatorCullingMode>("UnityEngine", "AnimatorCullingMode", "CullCompletely"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimatorCullingMode CullCompletely
void UnityEngine::AnimatorCullingMode::_set_CullCompletely(UnityEngine::AnimatorCullingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorCullingMode::_set_CullCompletely");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimatorCullingMode", "CullCompletely", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AnimatorUpdateMode
#include "UnityEngine/AnimatorUpdateMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimatorUpdateMode Normal
UnityEngine::AnimatorUpdateMode UnityEngine::AnimatorUpdateMode::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorUpdateMode::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AnimatorUpdateMode>("UnityEngine", "AnimatorUpdateMode", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimatorUpdateMode Normal
void UnityEngine::AnimatorUpdateMode::_set_Normal(UnityEngine::AnimatorUpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorUpdateMode::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimatorUpdateMode", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimatorUpdateMode AnimatePhysics
UnityEngine::AnimatorUpdateMode UnityEngine::AnimatorUpdateMode::_get_AnimatePhysics() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorUpdateMode::_get_AnimatePhysics");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AnimatorUpdateMode>("UnityEngine", "AnimatorUpdateMode", "AnimatePhysics"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimatorUpdateMode AnimatePhysics
void UnityEngine::AnimatorUpdateMode::_set_AnimatePhysics(UnityEngine::AnimatorUpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorUpdateMode::_set_AnimatePhysics");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimatorUpdateMode", "AnimatePhysics", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.AnimatorUpdateMode UnscaledTime
UnityEngine::AnimatorUpdateMode UnityEngine::AnimatorUpdateMode::_get_UnscaledTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorUpdateMode::_get_UnscaledTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::AnimatorUpdateMode>("UnityEngine", "AnimatorUpdateMode", "UnscaledTime"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.AnimatorUpdateMode UnscaledTime
void UnityEngine::AnimatorUpdateMode::_set_UnscaledTime(UnityEngine::AnimatorUpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorUpdateMode::_set_UnscaledTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "AnimatorUpdateMode", "UnscaledTime", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AnimatorStateInfo
#include "UnityEngine/AnimatorStateInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AnimatorStateInfo.get_normalizedTime
float UnityEngine::AnimatorStateInfo::get_normalizedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorStateInfo::get_normalizedTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_normalizedTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.AnimatorUpdateMode
#include "UnityEngine/AnimatorUpdateMode.hpp"
// Including type: UnityEngine.StateMachineBehaviour
#include "UnityEngine/StateMachineBehaviour.hpp"
// Including type: UnityEngine.ScriptableObject
#include "UnityEngine/ScriptableObject.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.StateInfoIndex
#include "UnityEngine/StateInfoIndex.hpp"
// Including type: UnityEngine.AnimatorStateInfo
#include "UnityEngine/AnimatorStateInfo.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.HumanBodyBones
#include "UnityEngine/HumanBodyBones.hpp"
// Including type: UnityEngine.AnimatorCullingMode
#include "UnityEngine/AnimatorCullingMode.hpp"
// Including type: UnityEngine.RuntimeAnimatorController
#include "UnityEngine/RuntimeAnimatorController.hpp"
// Including type: UnityEngine.Avatar
#include "UnityEngine/Avatar.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animator.get_isHuman
bool UnityEngine::Animator::get_isHuman() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::get_isHuman");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isHuman", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.get_hasRootMotion
bool UnityEngine::Animator::get_hasRootMotion() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::get_hasRootMotion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasRootMotion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.get_humanScale
float UnityEngine::Animator::get_humanScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::get_humanScale");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_humanScale", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.GetBool
bool UnityEngine::Animator::GetBool(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::GetBool");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetBool", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(id)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, id);
}
// Autogenerated method: UnityEngine.Animator.SetBool
void UnityEngine::Animator::SetBool(::Il2CppString* name, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::SetBool");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetBool", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Animator.SetBool
void UnityEngine::Animator::SetBool(int id, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::SetBool");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetBool", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(id, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, id, value);
}
// Autogenerated method: UnityEngine.Animator.SetTrigger
void UnityEngine::Animator::SetTrigger(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::SetTrigger");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetTrigger", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animator.SetTrigger
void UnityEngine::Animator::SetTrigger(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::SetTrigger");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetTrigger", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(id)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: UnityEngine.Animator.ResetTrigger
void UnityEngine::Animator::ResetTrigger(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::ResetTrigger");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResetTrigger", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animator.set_applyRootMotion
void UnityEngine::Animator::set_applyRootMotion(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::set_applyRootMotion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_applyRootMotion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.get_updateMode
UnityEngine::AnimatorUpdateMode UnityEngine::Animator::get_updateMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::get_updateMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_updateMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimatorUpdateMode, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.set_updateMode
void UnityEngine::Animator::set_updateMode(UnityEngine::AnimatorUpdateMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::set_updateMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_updateMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.InternalGetBehaviours
::Array<UnityEngine::ScriptableObject*>* UnityEngine::Animator::InternalGetBehaviours(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::InternalGetBehaviours");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalGetBehaviours", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::ScriptableObject*>*, false>(this, ___internal__method, type);
}
// Autogenerated method: UnityEngine.Animator.GetAnimatorStateInfo
void UnityEngine::Animator::GetAnimatorStateInfo(int layerIndex, UnityEngine::StateInfoIndex stateInfoIndex, UnityEngine::AnimatorStateInfo& info) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::GetAnimatorStateInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAnimatorStateInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(layerIndex, stateInfoIndex, info)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, layerIndex, stateInfoIndex, info);
}
// Autogenerated method: UnityEngine.Animator.GetCurrentAnimatorStateInfo
UnityEngine::AnimatorStateInfo UnityEngine::Animator::GetCurrentAnimatorStateInfo(int layerIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::GetCurrentAnimatorStateInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCurrentAnimatorStateInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(layerIndex)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimatorStateInfo, false>(this, ___internal__method, layerIndex);
}
// Autogenerated method: UnityEngine.Animator.set_speed
void UnityEngine::Animator::set_speed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::set_speed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_speed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.CrossFade
void UnityEngine::Animator::CrossFade(::Il2CppString* stateName, float normalizedTransitionDuration, int layer, float normalizedTimeOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::CrossFade");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CrossFade", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateName, normalizedTransitionDuration, layer, normalizedTimeOffset)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, stateName, normalizedTransitionDuration, layer, normalizedTimeOffset);
}
// Autogenerated method: UnityEngine.Animator.CrossFade
void UnityEngine::Animator::CrossFade(::Il2CppString* stateName, float normalizedTransitionDuration, int layer) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::CrossFade");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CrossFade", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateName, normalizedTransitionDuration, layer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, stateName, normalizedTransitionDuration, layer);
}
// Autogenerated method: UnityEngine.Animator.CrossFade
void UnityEngine::Animator::CrossFade(::Il2CppString* stateName, float normalizedTransitionDuration, int layer, float normalizedTimeOffset, float normalizedTransitionTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::CrossFade");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CrossFade", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateName, normalizedTransitionDuration, layer, normalizedTimeOffset, normalizedTransitionTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, stateName, normalizedTransitionDuration, layer, normalizedTimeOffset, normalizedTransitionTime);
}
// Autogenerated method: UnityEngine.Animator.CrossFade
void UnityEngine::Animator::CrossFade(int stateHashName, float normalizedTransitionDuration, int layer, float normalizedTimeOffset, float normalizedTransitionTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::CrossFade");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CrossFade", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateHashName, normalizedTransitionDuration, layer, normalizedTimeOffset, normalizedTransitionTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, stateHashName, normalizedTransitionDuration, layer, normalizedTimeOffset, normalizedTransitionTime);
}
// Autogenerated method: UnityEngine.Animator.Play
void UnityEngine::Animator::Play(::Il2CppString* stateName, int layer, float normalizedTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::Play");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateName, layer, normalizedTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, stateName, layer, normalizedTime);
}
// Autogenerated method: UnityEngine.Animator.Play
void UnityEngine::Animator::Play(int stateNameHash, int layer, float normalizedTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::Play");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Play", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateNameHash, layer, normalizedTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, stateNameHash, layer, normalizedTime);
}
// Autogenerated method: UnityEngine.Animator.GetBoneTransform
UnityEngine::Transform* UnityEngine::Animator::GetBoneTransform(UnityEngine::HumanBodyBones humanBoneId) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::GetBoneTransform");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetBoneTransform", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(humanBoneId)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method, humanBoneId);
}
// Autogenerated method: UnityEngine.Animator.GetBoneTransformInternal
UnityEngine::Transform* UnityEngine::Animator::GetBoneTransformInternal(int humanBoneId) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::GetBoneTransformInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetBoneTransformInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(humanBoneId)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method, humanBoneId);
}
// Autogenerated method: UnityEngine.Animator.set_cullingMode
void UnityEngine::Animator::set_cullingMode(UnityEngine::AnimatorCullingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::set_cullingMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_cullingMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.get_runtimeAnimatorController
UnityEngine::RuntimeAnimatorController* UnityEngine::Animator::get_runtimeAnimatorController() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::get_runtimeAnimatorController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_runtimeAnimatorController", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RuntimeAnimatorController*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.set_runtimeAnimatorController
void UnityEngine::Animator::set_runtimeAnimatorController(UnityEngine::RuntimeAnimatorController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::set_runtimeAnimatorController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_runtimeAnimatorController", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animator.get_hasBoundPlayables
bool UnityEngine::Animator::get_hasBoundPlayables() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::get_hasBoundPlayables");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_hasBoundPlayables", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.StringToHash
int UnityEngine::Animator::StringToHash(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::StringToHash");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "Animator", "StringToHash", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animator.get_avatar
UnityEngine::Avatar* UnityEngine::Animator::get_avatar() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::get_avatar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_avatar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Avatar*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animator.SetBoolString
void UnityEngine::Animator::SetBoolString(::Il2CppString* name, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::SetBoolString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetBoolString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: UnityEngine.Animator.SetBoolID
void UnityEngine::Animator::SetBoolID(int id, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::SetBoolID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetBoolID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(id, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, id, value);
}
// Autogenerated method: UnityEngine.Animator.GetBoolID
bool UnityEngine::Animator::GetBoolID(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::GetBoolID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetBoolID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(id)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, id);
}
// Autogenerated method: UnityEngine.Animator.SetTriggerString
void UnityEngine::Animator::SetTriggerString(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::SetTriggerString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetTriggerString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animator.SetTriggerID
void UnityEngine::Animator::SetTriggerID(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::SetTriggerID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetTriggerID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(id)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: UnityEngine.Animator.ResetTriggerString
void UnityEngine::Animator::ResetTriggerString(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::ResetTriggerString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResetTriggerString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.Animator.set_keepAnimatorControllerStateOnDisable
void UnityEngine::Animator::set_keepAnimatorControllerStateOnDisable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Animator::set_keepAnimatorControllerStateOnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_keepAnimatorControllerStateOnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.AnimatorOverrideController
#include "UnityEngine/AnimatorOverrideController.hpp"
// Including type: UnityEngine.AnimatorOverrideController/OnOverrideControllerDirtyCallback
#include "UnityEngine/AnimatorOverrideController_OnOverrideControllerDirtyCallback.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AnimatorOverrideController.Internal_Create
void UnityEngine::AnimatorOverrideController::Internal_Create(UnityEngine::AnimatorOverrideController* self, UnityEngine::RuntimeAnimatorController* controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorOverrideController::Internal_Create");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AnimatorOverrideController", "Internal_Create", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(self, controller)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, self, controller);
}
// Autogenerated method: UnityEngine.AnimatorOverrideController.SetClip
void UnityEngine::AnimatorOverrideController::SetClip(UnityEngine::AnimationClip* originalClip, UnityEngine::AnimationClip* overrideClip, bool notify) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorOverrideController::SetClip");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetClip", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(originalClip, overrideClip, notify)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, originalClip, overrideClip, notify);
}
// Autogenerated method: UnityEngine.AnimatorOverrideController.SendNotification
void UnityEngine::AnimatorOverrideController::SendNotification() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorOverrideController::SendNotification");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendNotification", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimatorOverrideController.ApplyOverrides
void UnityEngine::AnimatorOverrideController::ApplyOverrides(System::Collections::Generic::IList_1<System::Collections::Generic::KeyValuePair_2<UnityEngine::AnimationClip*, UnityEngine::AnimationClip*>>* overrides) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorOverrideController::ApplyOverrides");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ApplyOverrides", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(overrides)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, overrides);
}
// Autogenerated method: UnityEngine.AnimatorOverrideController.OnInvalidateOverrideController
void UnityEngine::AnimatorOverrideController::OnInvalidateOverrideController(UnityEngine::AnimatorOverrideController* controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorOverrideController::OnInvalidateOverrideController");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("UnityEngine", "AnimatorOverrideController", "OnInvalidateOverrideController", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(controller)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, controller);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.AnimatorOverrideController/OnOverrideControllerDirtyCallback
#include "UnityEngine/AnimatorOverrideController_OnOverrideControllerDirtyCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.AnimatorOverrideController/OnOverrideControllerDirtyCallback.Invoke
void UnityEngine::AnimatorOverrideController::OnOverrideControllerDirtyCallback::Invoke_NEW() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorOverrideController::OnOverrideControllerDirtyCallback::Invoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.AnimatorOverrideController/OnOverrideControllerDirtyCallback.BeginInvoke
System::IAsyncResult* UnityEngine::AnimatorOverrideController::OnOverrideControllerDirtyCallback::BeginInvoke_NEW(System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorOverrideController::OnOverrideControllerDirtyCallback::BeginInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: UnityEngine.AnimatorOverrideController/OnOverrideControllerDirtyCallback.EndInvoke
void UnityEngine::AnimatorOverrideController::OnOverrideControllerDirtyCallback::EndInvoke_NEW(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::AnimatorOverrideController::OnOverrideControllerDirtyCallback::EndInvoke_NEW");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.HumanBodyBones
#include "UnityEngine/HumanBodyBones.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones Hips
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_Hips() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_Hips");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "Hips"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones Hips
void UnityEngine::HumanBodyBones::_set_Hips(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_Hips");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "Hips", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftUpperLeg
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftUpperLeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftUpperLeg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftUpperLeg"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftUpperLeg
void UnityEngine::HumanBodyBones::_set_LeftUpperLeg(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftUpperLeg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftUpperLeg", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightUpperLeg
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightUpperLeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightUpperLeg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightUpperLeg"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightUpperLeg
void UnityEngine::HumanBodyBones::_set_RightUpperLeg(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightUpperLeg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightUpperLeg", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftLowerLeg
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftLowerLeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftLowerLeg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftLowerLeg"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftLowerLeg
void UnityEngine::HumanBodyBones::_set_LeftLowerLeg(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftLowerLeg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftLowerLeg", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightLowerLeg
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightLowerLeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightLowerLeg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightLowerLeg"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightLowerLeg
void UnityEngine::HumanBodyBones::_set_RightLowerLeg(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightLowerLeg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightLowerLeg", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftFoot
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftFoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftFoot"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftFoot
void UnityEngine::HumanBodyBones::_set_LeftFoot(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftFoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftFoot", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightFoot
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightFoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightFoot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightFoot"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightFoot
void UnityEngine::HumanBodyBones::_set_RightFoot(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightFoot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightFoot", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones Spine
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_Spine() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_Spine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "Spine"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones Spine
void UnityEngine::HumanBodyBones::_set_Spine(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_Spine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "Spine", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones Chest
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_Chest() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_Chest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "Chest"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones Chest
void UnityEngine::HumanBodyBones::_set_Chest(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_Chest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "Chest", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones UpperChest
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_UpperChest() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_UpperChest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "UpperChest"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones UpperChest
void UnityEngine::HumanBodyBones::_set_UpperChest(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_UpperChest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "UpperChest", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones Neck
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_Neck() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_Neck");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "Neck"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones Neck
void UnityEngine::HumanBodyBones::_set_Neck(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_Neck");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "Neck", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones Head
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_Head() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_Head");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "Head"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones Head
void UnityEngine::HumanBodyBones::_set_Head(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_Head");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "Head", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftShoulder
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftShoulder"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftShoulder
void UnityEngine::HumanBodyBones::_set_LeftShoulder(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightShoulder
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightShoulder() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightShoulder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightShoulder"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightShoulder
void UnityEngine::HumanBodyBones::_set_RightShoulder(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightShoulder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightShoulder", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftUpperArm
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftUpperArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftUpperArm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftUpperArm"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftUpperArm
void UnityEngine::HumanBodyBones::_set_LeftUpperArm(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftUpperArm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftUpperArm", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightUpperArm
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightUpperArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightUpperArm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightUpperArm"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightUpperArm
void UnityEngine::HumanBodyBones::_set_RightUpperArm(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightUpperArm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightUpperArm", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftLowerArm
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftLowerArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftLowerArm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftLowerArm"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftLowerArm
void UnityEngine::HumanBodyBones::_set_LeftLowerArm(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftLowerArm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftLowerArm", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightLowerArm
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightLowerArm() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightLowerArm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightLowerArm"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightLowerArm
void UnityEngine::HumanBodyBones::_set_RightLowerArm(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightLowerArm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightLowerArm", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftHand
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftHand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftHand
void UnityEngine::HumanBodyBones::_set_LeftHand(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftHand", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightHand
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightHand"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightHand
void UnityEngine::HumanBodyBones::_set_RightHand(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightHand", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftToes
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftToes() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftToes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftToes"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftToes
void UnityEngine::HumanBodyBones::_set_LeftToes(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftToes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftToes", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightToes
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightToes() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightToes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightToes"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightToes
void UnityEngine::HumanBodyBones::_set_RightToes(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightToes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightToes", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftEye
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftEye");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftEye"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftEye
void UnityEngine::HumanBodyBones::_set_LeftEye(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftEye");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftEye", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightEye
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightEye() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightEye");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightEye"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightEye
void UnityEngine::HumanBodyBones::_set_RightEye(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightEye");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightEye", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones Jaw
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_Jaw() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_Jaw");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "Jaw"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones Jaw
void UnityEngine::HumanBodyBones::_set_Jaw(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_Jaw");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "Jaw", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftThumbProximal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftThumbProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftThumbProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftThumbProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftThumbProximal
void UnityEngine::HumanBodyBones::_set_LeftThumbProximal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftThumbProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftThumbProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftThumbIntermediate
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftThumbIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftThumbIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftThumbIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftThumbIntermediate
void UnityEngine::HumanBodyBones::_set_LeftThumbIntermediate(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftThumbIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftThumbIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftThumbDistal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftThumbDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftThumbDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftThumbDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftThumbDistal
void UnityEngine::HumanBodyBones::_set_LeftThumbDistal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftThumbDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftThumbDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftIndexProximal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftIndexProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftIndexProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftIndexProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftIndexProximal
void UnityEngine::HumanBodyBones::_set_LeftIndexProximal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftIndexProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftIndexProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftIndexIntermediate
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftIndexIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftIndexIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftIndexIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftIndexIntermediate
void UnityEngine::HumanBodyBones::_set_LeftIndexIntermediate(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftIndexIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftIndexIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftIndexDistal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftIndexDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftIndexDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftIndexDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftIndexDistal
void UnityEngine::HumanBodyBones::_set_LeftIndexDistal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftIndexDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftIndexDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftMiddleProximal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftMiddleProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftMiddleProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftMiddleProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftMiddleProximal
void UnityEngine::HumanBodyBones::_set_LeftMiddleProximal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftMiddleProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftMiddleProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftMiddleIntermediate
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftMiddleIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftMiddleIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftMiddleIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftMiddleIntermediate
void UnityEngine::HumanBodyBones::_set_LeftMiddleIntermediate(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftMiddleIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftMiddleIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftMiddleDistal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftMiddleDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftMiddleDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftMiddleDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftMiddleDistal
void UnityEngine::HumanBodyBones::_set_LeftMiddleDistal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftMiddleDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftMiddleDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftRingProximal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftRingProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftRingProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftRingProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftRingProximal
void UnityEngine::HumanBodyBones::_set_LeftRingProximal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftRingProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftRingProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftRingIntermediate
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftRingIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftRingIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftRingIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftRingIntermediate
void UnityEngine::HumanBodyBones::_set_LeftRingIntermediate(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftRingIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftRingIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftRingDistal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftRingDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftRingDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftRingDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftRingDistal
void UnityEngine::HumanBodyBones::_set_LeftRingDistal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftRingDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftRingDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftLittleProximal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftLittleProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftLittleProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftLittleProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftLittleProximal
void UnityEngine::HumanBodyBones::_set_LeftLittleProximal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftLittleProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftLittleProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftLittleIntermediate
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftLittleIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftLittleIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftLittleIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftLittleIntermediate
void UnityEngine::HumanBodyBones::_set_LeftLittleIntermediate(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftLittleIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftLittleIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LeftLittleDistal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LeftLittleDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LeftLittleDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LeftLittleDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LeftLittleDistal
void UnityEngine::HumanBodyBones::_set_LeftLittleDistal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LeftLittleDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LeftLittleDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightThumbProximal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightThumbProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightThumbProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightThumbProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightThumbProximal
void UnityEngine::HumanBodyBones::_set_RightThumbProximal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightThumbProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightThumbProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightThumbIntermediate
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightThumbIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightThumbIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightThumbIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightThumbIntermediate
void UnityEngine::HumanBodyBones::_set_RightThumbIntermediate(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightThumbIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightThumbIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightThumbDistal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightThumbDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightThumbDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightThumbDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightThumbDistal
void UnityEngine::HumanBodyBones::_set_RightThumbDistal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightThumbDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightThumbDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightIndexProximal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightIndexProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightIndexProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightIndexProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightIndexProximal
void UnityEngine::HumanBodyBones::_set_RightIndexProximal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightIndexProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightIndexProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightIndexIntermediate
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightIndexIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightIndexIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightIndexIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightIndexIntermediate
void UnityEngine::HumanBodyBones::_set_RightIndexIntermediate(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightIndexIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightIndexIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightIndexDistal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightIndexDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightIndexDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightIndexDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightIndexDistal
void UnityEngine::HumanBodyBones::_set_RightIndexDistal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightIndexDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightIndexDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightMiddleProximal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightMiddleProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightMiddleProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightMiddleProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightMiddleProximal
void UnityEngine::HumanBodyBones::_set_RightMiddleProximal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightMiddleProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightMiddleProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightMiddleIntermediate
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightMiddleIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightMiddleIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightMiddleIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightMiddleIntermediate
void UnityEngine::HumanBodyBones::_set_RightMiddleIntermediate(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightMiddleIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightMiddleIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightMiddleDistal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightMiddleDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightMiddleDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightMiddleDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightMiddleDistal
void UnityEngine::HumanBodyBones::_set_RightMiddleDistal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightMiddleDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightMiddleDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightRingProximal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightRingProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightRingProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightRingProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightRingProximal
void UnityEngine::HumanBodyBones::_set_RightRingProximal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightRingProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightRingProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightRingIntermediate
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightRingIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightRingIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightRingIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightRingIntermediate
void UnityEngine::HumanBodyBones::_set_RightRingIntermediate(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightRingIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightRingIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightRingDistal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightRingDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightRingDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightRingDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightRingDistal
void UnityEngine::HumanBodyBones::_set_RightRingDistal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightRingDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightRingDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightLittleProximal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightLittleProximal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightLittleProximal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightLittleProximal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightLittleProximal
void UnityEngine::HumanBodyBones::_set_RightLittleProximal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightLittleProximal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightLittleProximal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightLittleIntermediate
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightLittleIntermediate() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightLittleIntermediate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightLittleIntermediate"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightLittleIntermediate
void UnityEngine::HumanBodyBones::_set_RightLittleIntermediate(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightLittleIntermediate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightLittleIntermediate", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones RightLittleDistal
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_RightLittleDistal() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_RightLittleDistal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "RightLittleDistal"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones RightLittleDistal
void UnityEngine::HumanBodyBones::_set_RightLittleDistal(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_RightLittleDistal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "RightLittleDistal", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.HumanBodyBones LastBone
UnityEngine::HumanBodyBones UnityEngine::HumanBodyBones::_get_LastBone() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_get_LastBone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::HumanBodyBones>("UnityEngine", "HumanBodyBones", "LastBone"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.HumanBodyBones LastBone
void UnityEngine::HumanBodyBones::_set_LastBone(UnityEngine::HumanBodyBones value) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::HumanBodyBones::_set_LastBone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine", "HumanBodyBones", "LastBone", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Avatar
#include "UnityEngine/Avatar.hpp"
// Including type: UnityEngine.HumanDescription
#include "UnityEngine/HumanDescription.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Avatar.get_isValid
bool UnityEngine::Avatar::get_isValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Avatar::get_isValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Avatar.get_isHuman
bool UnityEngine::Avatar::get_isHuman() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Avatar::get_isHuman");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isHuman", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Avatar.get_humanDescription
UnityEngine::HumanDescription UnityEngine::Avatar::get_humanDescription() {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Avatar::get_humanDescription");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_humanDescription", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::HumanDescription, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Avatar.GetAxisLength
float UnityEngine::Avatar::GetAxisLength(int humanId) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Avatar::GetAxisLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAxisLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(humanId)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, humanId);
}
// Autogenerated method: UnityEngine.Avatar.GetPostRotation
UnityEngine::Quaternion UnityEngine::Avatar::GetPostRotation(int humanId) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Avatar::GetPostRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPostRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(humanId)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method, humanId);
}
// Autogenerated method: UnityEngine.Avatar.Internal_GetAxisLength
float UnityEngine::Avatar::Internal_GetAxisLength(int humanId) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Avatar::Internal_GetAxisLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Internal_GetAxisLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(humanId)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, humanId);
}
// Autogenerated method: UnityEngine.Avatar.Internal_GetPostRotation
UnityEngine::Quaternion UnityEngine::Avatar::Internal_GetPostRotation(int humanId) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Avatar::Internal_GetPostRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Internal_GetPostRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(humanId)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method, humanId);
}
// Autogenerated method: UnityEngine.Avatar.get_humanDescription_Injected
void UnityEngine::Avatar::get_humanDescription_Injected(UnityEngine::HumanDescription& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Avatar::get_humanDescription_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_humanDescription_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ret)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ret);
}
// Autogenerated method: UnityEngine.Avatar.Internal_GetPostRotation_Injected
void UnityEngine::Avatar::Internal_GetPostRotation_Injected(int humanId, UnityEngine::Quaternion& ret) {
  static auto ___internal__logger = ::Logger::get().WithContext("UnityEngine::Avatar::Internal_GetPostRotation_Injected");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Internal_GetPostRotation_Injected", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(humanId, ret)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, humanId, ret);
}
