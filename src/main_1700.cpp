// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IOpenVRHaptics
#include "GlobalNamespace/IOpenVRHaptics.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IOpenVRHaptics.TriggerHapticPulse
void GlobalNamespace::IOpenVRHaptics::TriggerHapticPulse(UnityEngine::XR::XRNode node, float duration, float strength, float frequency) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IOpenVRHaptics::TriggerHapticPulse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TriggerHapticPulse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(strength), ::il2cpp_utils::ExtractType(frequency)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, node, duration, strength, frequency);
}
// Autogenerated method: IOpenVRHaptics.Destroy
void GlobalNamespace::IOpenVRHaptics::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IOpenVRHaptics::Destroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SimpleOpenVrOpenVrHaptics
#include "GlobalNamespace/SimpleOpenVrOpenVrHaptics.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SimpleOpenVrOpenVrHaptics.TriggerHapticPulse
void GlobalNamespace::SimpleOpenVrOpenVrHaptics::TriggerHapticPulse(UnityEngine::XR::XRNode node, float duration, float strength, float frequency) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleOpenVrOpenVrHaptics::TriggerHapticPulse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TriggerHapticPulse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(strength), ::il2cpp_utils::ExtractType(frequency)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, node, duration, strength, frequency);
}
// Autogenerated method: SimpleOpenVrOpenVrHaptics.Destroy
void GlobalNamespace::SimpleOpenVrOpenVrHaptics::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleOpenVrOpenVrHaptics::Destroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ThreadedOpenVrOpenVrHaptics
#include "GlobalNamespace/ThreadedOpenVrOpenVrHaptics.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
// Including type: System.Threading.Thread
#include "System/Threading/Thread.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _currentTime
float& GlobalNamespace::ThreadedOpenVrOpenVrHaptics::dyn__currentTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ThreadedOpenVrOpenVrHaptics::dyn__currentTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Thread _hapticThread
System::Threading::Thread*& GlobalNamespace::ThreadedOpenVrOpenVrHaptics::dyn__hapticThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ThreadedOpenVrOpenVrHaptics::dyn__hapticThread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hapticThread"))->offset;
  return *reinterpret_cast<System::Threading::Thread**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ThreadedOpenVrOpenVrHaptics/OpenVrHapticData _leftHandHaptics
GlobalNamespace::ThreadedOpenVrOpenVrHaptics::OpenVrHapticData& GlobalNamespace::ThreadedOpenVrOpenVrHaptics::dyn__leftHandHaptics() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ThreadedOpenVrOpenVrHaptics::dyn__leftHandHaptics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHandHaptics"))->offset;
  return *reinterpret_cast<GlobalNamespace::ThreadedOpenVrOpenVrHaptics::OpenVrHapticData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ThreadedOpenVrOpenVrHaptics/OpenVrHapticData _rightHandHaptics
GlobalNamespace::ThreadedOpenVrOpenVrHaptics::OpenVrHapticData& GlobalNamespace::ThreadedOpenVrOpenVrHaptics::dyn__rightHandHaptics() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ThreadedOpenVrOpenVrHaptics::dyn__rightHandHaptics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHandHaptics"))->offset;
  return *reinterpret_cast<GlobalNamespace::ThreadedOpenVrOpenVrHaptics::OpenVrHapticData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ThreadedOpenVrOpenVrHaptics.TriggerHapticPulse
void GlobalNamespace::ThreadedOpenVrOpenVrHaptics::TriggerHapticPulse(UnityEngine::XR::XRNode node, float duration, float strength, float frequency) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ThreadedOpenVrOpenVrHaptics::TriggerHapticPulse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TriggerHapticPulse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(strength), ::il2cpp_utils::ExtractType(frequency)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, node, duration, strength, frequency);
}
// Autogenerated method: ThreadedOpenVrOpenVrHaptics.UpdateHaptics
void GlobalNamespace::ThreadedOpenVrOpenVrHaptics::UpdateHaptics() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ThreadedOpenVrOpenVrHaptics::UpdateHaptics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateHaptics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ThreadedOpenVrOpenVrHaptics.UpdateHandHaptics
void GlobalNamespace::ThreadedOpenVrOpenVrHaptics::UpdateHandHaptics(UnityEngine::XR::XRNode node) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ThreadedOpenVrOpenVrHaptics::UpdateHandHaptics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateHandHaptics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: ThreadedOpenVrOpenVrHaptics.Destroy
void GlobalNamespace::ThreadedOpenVrOpenVrHaptics::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ThreadedOpenVrOpenVrHaptics::Destroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ThreadedOpenVrOpenVrHaptics/OpenVrHapticData
#include "GlobalNamespace/ThreadedOpenVrOpenVrHaptics.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single endTime
float& GlobalNamespace::ThreadedOpenVrOpenVrHaptics::OpenVrHapticData::dyn_endTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ThreadedOpenVrOpenVrHaptics::OpenVrHapticData::dyn_endTime");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single strength
float& GlobalNamespace::ThreadedOpenVrOpenVrHaptics::OpenVrHapticData::dyn_strength() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ThreadedOpenVrOpenVrHaptics::OpenVrHapticData::dyn_strength");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ThreadedOpenVrOpenVrHaptics/OpenVrHapticData..ctor
// ABORTED elsewhere.  GlobalNamespace::ThreadedOpenVrOpenVrHaptics::OpenVrHapticData::OpenVrHapticData(float endTime, float strength)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OpenVRHelper
#include "GlobalNamespace/OpenVRHelper.hpp"
// Including type: VRPlatformSDK
#include "GlobalNamespace/VRPlatformSDK.hpp"
// Including type: IOpenVRHaptics
#include "GlobalNamespace/IOpenVRHaptics.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.EventSystems.EventSystem
#include "UnityEngine/EventSystems/EventSystem.hpp"
// Including type: XRDeviceModel
#include "GlobalNamespace/XRDeviceModel.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kMicroSecondsInSecond
float GlobalNamespace::OpenVRHelper::_get_kMicroSecondsInSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::_get_kMicroSecondsInSecond");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OpenVRHelper", "kMicroSecondsInSecond"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kMicroSecondsInSecond
void GlobalNamespace::OpenVRHelper::_set_kMicroSecondsInSecond(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::_set_kMicroSecondsInSecond");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OpenVRHelper", "kMicroSecondsInSecond", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kUpdateInterval
int GlobalNamespace::OpenVRHelper::_get_kUpdateInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::_get_kUpdateInterval");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OpenVRHelper", "kUpdateInterval"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kUpdateInterval
void GlobalNamespace::OpenVRHelper::_set_kUpdateInterval(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::_set_kUpdateInterval");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OpenVRHelper", "kUpdateInterval", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaxDurationMs
int GlobalNamespace::OpenVRHelper::_get_kMaxDurationMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::_get_kMaxDurationMs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OpenVRHelper", "kMaxDurationMs"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaxDurationMs
void GlobalNamespace::OpenVRHelper::_set_kMaxDurationMs(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::_set_kMaxDurationMs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OpenVRHelper", "kMaxDurationMs", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kUpdateIntervalSeconds
float GlobalNamespace::OpenVRHelper::_get_kUpdateIntervalSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::_get_kUpdateIntervalSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OpenVRHelper", "kUpdateIntervalSeconds"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kUpdateIntervalSeconds
void GlobalNamespace::OpenVRHelper::_set_kUpdateIntervalSeconds(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::_set_kUpdateIntervalSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OpenVRHelper", "kUpdateIntervalSeconds", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IOpenVRHaptics _openVrHaptics
GlobalNamespace::IOpenVRHaptics*& GlobalNamespace::OpenVRHelper::dyn__openVrHaptics() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::dyn__openVrHaptics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_openVrHaptics"))->offset;
  return *reinterpret_cast<GlobalNamespace::IOpenVRHaptics**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action inputFocusWasCapturedEvent
System::Action*& GlobalNamespace::OpenVRHelper::dyn_inputFocusWasCapturedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::dyn_inputFocusWasCapturedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inputFocusWasCapturedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action inputFocusWasReleasedEvent
System::Action*& GlobalNamespace::OpenVRHelper::dyn_inputFocusWasReleasedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::dyn_inputFocusWasReleasedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inputFocusWasReleasedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action vrFocusWasCapturedEvent
System::Action*& GlobalNamespace::OpenVRHelper::dyn_vrFocusWasCapturedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::dyn_vrFocusWasCapturedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vrFocusWasCapturedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action vrFocusWasReleasedEvent
System::Action*& GlobalNamespace::OpenVRHelper::dyn_vrFocusWasReleasedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::dyn_vrFocusWasReleasedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vrFocusWasReleasedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action hmdUnmountedEvent
System::Action*& GlobalNamespace::OpenVRHelper::dyn_hmdUnmountedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::dyn_hmdUnmountedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hmdUnmountedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action hmdMountedEvent
System::Action*& GlobalNamespace::OpenVRHelper::dyn_hmdMountedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::dyn_hmdMountedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hmdMountedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action joystickWasCenteredThisFrameEvent
System::Action*& GlobalNamespace::OpenVRHelper::dyn_joystickWasCenteredThisFrameEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::dyn_joystickWasCenteredThisFrameEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joystickWasCenteredThisFrameEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.Vector2> joystickWasNotCenteredThisFrameEvent
System::Action_1<UnityEngine::Vector2>*& GlobalNamespace::OpenVRHelper::dyn_joystickWasNotCenteredThisFrameEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::dyn_joystickWasNotCenteredThisFrameEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joystickWasNotCenteredThisFrameEvent"))->offset;
  return *reinterpret_cast<System::Action_1<UnityEngine::Vector2>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Valve.VR.TrackedDevicePose_t[] _gamePoses
::ArrayW<Valve::VR::TrackedDevicePose_t>& GlobalNamespace::OpenVRHelper::dyn__gamePoses() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::dyn__gamePoses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gamePoses"))->offset;
  return *reinterpret_cast<::ArrayW<Valve::VR::TrackedDevicePose_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.XR.XRNodeState> _nodeStates
System::Collections::Generic::List_1<UnityEngine::XR::XRNodeState>*& GlobalNamespace::OpenVRHelper::dyn__nodeStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::dyn__nodeStates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nodeStates"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<UnityEngine::XR::XRNodeState>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Valve.VR.TrackedDevicePose_t[] _poses
::ArrayW<Valve::VR::TrackedDevicePose_t>& GlobalNamespace::OpenVRHelper::dyn__poses() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::dyn__poses");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_poses"))->offset;
  return *reinterpret_cast<::ArrayW<Valve::VR::TrackedDevicePose_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasInputFocus
bool& GlobalNamespace::OpenVRHelper::dyn__hasInputFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::dyn__hasInputFocus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasInputFocus"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _didGetNodeStatesThisFrame
bool& GlobalNamespace::OpenVRHelper::dyn__didGetNodeStatesThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::dyn__didGetNodeStatesThisFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didGetNodeStatesThisFrame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.EventSystems.EventSystem _disabledEventSystem
UnityEngine::EventSystems::EventSystem*& GlobalNamespace::OpenVRHelper::dyn__disabledEventSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::dyn__disabledEventSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disabledEventSystem"))->offset;
  return *reinterpret_cast<UnityEngine::EventSystems::EventSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private OpenVRHelper/VRControllerManufacturerName _vrControllerManufacturerName
GlobalNamespace::OpenVRHelper::VRControllerManufacturerName& GlobalNamespace::OpenVRHelper::dyn__vrControllerManufacturerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::dyn__vrControllerManufacturerName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrControllerManufacturerName"))->offset;
  return *reinterpret_cast<GlobalNamespace::OpenVRHelper::VRControllerManufacturerName*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _scrollingLastFrame
bool& GlobalNamespace::OpenVRHelper::dyn__scrollingLastFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::dyn__scrollingLastFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scrollingLastFrame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OpenVRHelper.get_hasInputFocus
bool GlobalNamespace::OpenVRHelper::get_hasInputFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::get_hasInputFocus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasInputFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OpenVRHelper.get_hasVrFocus
bool GlobalNamespace::OpenVRHelper::get_hasVrFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::get_hasVrFocus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasVrFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OpenVRHelper.get_isAlwaysWireless
bool GlobalNamespace::OpenVRHelper::get_isAlwaysWireless() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::get_isAlwaysWireless");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isAlwaysWireless", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OpenVRHelper.get_vrPlatformSDK
GlobalNamespace::VRPlatformSDK GlobalNamespace::OpenVRHelper::get_vrPlatformSDK() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::get_vrPlatformSDK");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vrPlatformSDK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::VRPlatformSDK, false>(this, ___internal__method);
}
// Autogenerated method: OpenVRHelper.get_currentXRDeviceModel
GlobalNamespace::XRDeviceModel GlobalNamespace::OpenVRHelper::get_currentXRDeviceModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::get_currentXRDeviceModel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentXRDeviceModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::XRDeviceModel, false>(this, ___internal__method);
}
// Autogenerated method: OpenVRHelper.get_vrControllerManufacturerName
GlobalNamespace::OpenVRHelper::VRControllerManufacturerName GlobalNamespace::OpenVRHelper::get_vrControllerManufacturerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::get_vrControllerManufacturerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vrControllerManufacturerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OpenVRHelper::VRControllerManufacturerName, false>(this, ___internal__method);
}
// Autogenerated method: OpenVRHelper.add_inputFocusWasCapturedEvent
void GlobalNamespace::OpenVRHelper::add_inputFocusWasCapturedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::add_inputFocusWasCapturedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_inputFocusWasCapturedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OpenVRHelper.remove_inputFocusWasCapturedEvent
void GlobalNamespace::OpenVRHelper::remove_inputFocusWasCapturedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::remove_inputFocusWasCapturedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_inputFocusWasCapturedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OpenVRHelper.add_inputFocusWasReleasedEvent
void GlobalNamespace::OpenVRHelper::add_inputFocusWasReleasedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::add_inputFocusWasReleasedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_inputFocusWasReleasedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OpenVRHelper.remove_inputFocusWasReleasedEvent
void GlobalNamespace::OpenVRHelper::remove_inputFocusWasReleasedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::remove_inputFocusWasReleasedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_inputFocusWasReleasedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OpenVRHelper.add_vrFocusWasCapturedEvent
void GlobalNamespace::OpenVRHelper::add_vrFocusWasCapturedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::add_vrFocusWasCapturedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_vrFocusWasCapturedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OpenVRHelper.remove_vrFocusWasCapturedEvent
void GlobalNamespace::OpenVRHelper::remove_vrFocusWasCapturedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::remove_vrFocusWasCapturedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_vrFocusWasCapturedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OpenVRHelper.add_vrFocusWasReleasedEvent
void GlobalNamespace::OpenVRHelper::add_vrFocusWasReleasedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::add_vrFocusWasReleasedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_vrFocusWasReleasedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OpenVRHelper.remove_vrFocusWasReleasedEvent
void GlobalNamespace::OpenVRHelper::remove_vrFocusWasReleasedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::remove_vrFocusWasReleasedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_vrFocusWasReleasedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OpenVRHelper.add_hmdUnmountedEvent
void GlobalNamespace::OpenVRHelper::add_hmdUnmountedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::add_hmdUnmountedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_hmdUnmountedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OpenVRHelper.remove_hmdUnmountedEvent
void GlobalNamespace::OpenVRHelper::remove_hmdUnmountedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::remove_hmdUnmountedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_hmdUnmountedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OpenVRHelper.add_hmdMountedEvent
void GlobalNamespace::OpenVRHelper::add_hmdMountedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::add_hmdMountedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_hmdMountedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OpenVRHelper.remove_hmdMountedEvent
void GlobalNamespace::OpenVRHelper::remove_hmdMountedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::remove_hmdMountedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_hmdMountedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OpenVRHelper.add_joystickWasCenteredThisFrameEvent
void GlobalNamespace::OpenVRHelper::add_joystickWasCenteredThisFrameEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::add_joystickWasCenteredThisFrameEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_joystickWasCenteredThisFrameEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OpenVRHelper.remove_joystickWasCenteredThisFrameEvent
void GlobalNamespace::OpenVRHelper::remove_joystickWasCenteredThisFrameEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::remove_joystickWasCenteredThisFrameEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_joystickWasCenteredThisFrameEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OpenVRHelper.add_joystickWasNotCenteredThisFrameEvent
void GlobalNamespace::OpenVRHelper::add_joystickWasNotCenteredThisFrameEvent(System::Action_1<UnityEngine::Vector2>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::add_joystickWasNotCenteredThisFrameEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_joystickWasNotCenteredThisFrameEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OpenVRHelper.remove_joystickWasNotCenteredThisFrameEvent
void GlobalNamespace::OpenVRHelper::remove_joystickWasNotCenteredThisFrameEvent(System::Action_1<UnityEngine::Vector2>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::remove_joystickWasNotCenteredThisFrameEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_joystickWasNotCenteredThisFrameEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OpenVRHelper.Awake
void GlobalNamespace::OpenVRHelper::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OpenVRHelper.TriggerHapticPulse
void GlobalNamespace::OpenVRHelper::TriggerHapticPulse(UnityEngine::XR::XRNode node, float duration, float strength, float frequency) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::TriggerHapticPulse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TriggerHapticPulse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(strength), ::il2cpp_utils::ExtractType(frequency)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, node, duration, strength, frequency);
}
// Autogenerated method: OpenVRHelper.StopHaptics
void GlobalNamespace::OpenVRHelper::StopHaptics(UnityEngine::XR::XRNode node) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::StopHaptics");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopHaptics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: OpenVRHelper.AdjustControllerTransform
void GlobalNamespace::OpenVRHelper::AdjustControllerTransform(UnityEngine::XR::XRNode node, UnityEngine::Transform* transform, UnityEngine::Vector3 position, UnityEngine::Vector3 rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::AdjustControllerTransform");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AdjustControllerTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, node, transform, position, rotation);
}
// Autogenerated method: OpenVRHelper.GetNodePose
bool GlobalNamespace::OpenVRHelper::GetNodePose(UnityEngine::XR::XRNode nodeType, int idx, ByRef<UnityEngine::Vector3> pos, ByRef<UnityEngine::Quaternion> rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::GetNodePose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNodePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Quaternion&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, nodeType, idx, byref(pos), byref(rot));
}
// Autogenerated method: OpenVRHelper.Update
void GlobalNamespace::OpenVRHelper::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OpenVRHelper.LateUpdate
void GlobalNamespace::OpenVRHelper::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OpenVRHelper.OnDestroy
void GlobalNamespace::OpenVRHelper::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OpenVRHelper.DisableEventSystem
void GlobalNamespace::OpenVRHelper::DisableEventSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::DisableEventSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableEventSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OpenVRHelper.EnableEventSystem
void GlobalNamespace::OpenVRHelper::EnableEventSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::EnableEventSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableEventSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OpenVRHelper.OnBeforeRender
void GlobalNamespace::OpenVRHelper::OnBeforeRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::OnBeforeRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBeforeRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OpenVRHelper/VRControllerManufacturerName
#include "GlobalNamespace/OpenVRHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OpenVRHelper/VRControllerManufacturerName HTC
GlobalNamespace::OpenVRHelper::VRControllerManufacturerName GlobalNamespace::OpenVRHelper::VRControllerManufacturerName::_get_HTC() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::VRControllerManufacturerName::_get_HTC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OpenVRHelper::VRControllerManufacturerName>("", "OpenVRHelper/VRControllerManufacturerName", "HTC"));
}
// Autogenerated static field setter
// Set static field: static public OpenVRHelper/VRControllerManufacturerName HTC
void GlobalNamespace::OpenVRHelper::VRControllerManufacturerName::_set_HTC(GlobalNamespace::OpenVRHelper::VRControllerManufacturerName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::VRControllerManufacturerName::_set_HTC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OpenVRHelper/VRControllerManufacturerName", "HTC", value));
}
// Autogenerated static field getter
// Get static field: static public OpenVRHelper/VRControllerManufacturerName Oculus
GlobalNamespace::OpenVRHelper::VRControllerManufacturerName GlobalNamespace::OpenVRHelper::VRControllerManufacturerName::_get_Oculus() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::VRControllerManufacturerName::_get_Oculus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OpenVRHelper::VRControllerManufacturerName>("", "OpenVRHelper/VRControllerManufacturerName", "Oculus"));
}
// Autogenerated static field setter
// Set static field: static public OpenVRHelper/VRControllerManufacturerName Oculus
void GlobalNamespace::OpenVRHelper::VRControllerManufacturerName::_set_Oculus(GlobalNamespace::OpenVRHelper::VRControllerManufacturerName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::VRControllerManufacturerName::_set_Oculus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OpenVRHelper/VRControllerManufacturerName", "Oculus", value));
}
// Autogenerated static field getter
// Get static field: static public OpenVRHelper/VRControllerManufacturerName Valve
GlobalNamespace::OpenVRHelper::VRControllerManufacturerName GlobalNamespace::OpenVRHelper::VRControllerManufacturerName::_get_Valve() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::VRControllerManufacturerName::_get_Valve");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OpenVRHelper::VRControllerManufacturerName>("", "OpenVRHelper/VRControllerManufacturerName", "Valve"));
}
// Autogenerated static field setter
// Set static field: static public OpenVRHelper/VRControllerManufacturerName Valve
void GlobalNamespace::OpenVRHelper::VRControllerManufacturerName::_set_Valve(GlobalNamespace::OpenVRHelper::VRControllerManufacturerName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::VRControllerManufacturerName::_set_Valve");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OpenVRHelper/VRControllerManufacturerName", "Valve", value));
}
// Autogenerated static field getter
// Get static field: static public OpenVRHelper/VRControllerManufacturerName Unknown
GlobalNamespace::OpenVRHelper::VRControllerManufacturerName GlobalNamespace::OpenVRHelper::VRControllerManufacturerName::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::VRControllerManufacturerName::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OpenVRHelper::VRControllerManufacturerName>("", "OpenVRHelper/VRControllerManufacturerName", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public OpenVRHelper/VRControllerManufacturerName Unknown
void GlobalNamespace::OpenVRHelper::VRControllerManufacturerName::_set_Unknown(GlobalNamespace::OpenVRHelper::VRControllerManufacturerName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::VRControllerManufacturerName::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OpenVRHelper/VRControllerManufacturerName", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public OpenVRHelper/VRControllerManufacturerName Undefined
GlobalNamespace::OpenVRHelper::VRControllerManufacturerName GlobalNamespace::OpenVRHelper::VRControllerManufacturerName::_get_Undefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::VRControllerManufacturerName::_get_Undefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OpenVRHelper::VRControllerManufacturerName>("", "OpenVRHelper/VRControllerManufacturerName", "Undefined"));
}
// Autogenerated static field setter
// Set static field: static public OpenVRHelper/VRControllerManufacturerName Undefined
void GlobalNamespace::OpenVRHelper::VRControllerManufacturerName::_set_Undefined(GlobalNamespace::OpenVRHelper::VRControllerManufacturerName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::VRControllerManufacturerName::_set_Undefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OpenVRHelper/VRControllerManufacturerName", "Undefined", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::OpenVRHelper::VRControllerManufacturerName::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OpenVRHelper::VRControllerManufacturerName::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PSVRHelper
#include "GlobalNamespace/PSVRHelper.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: VRPlatformSDK
#include "GlobalNamespace/VRPlatformSDK.hpp"
// Including type: XRDeviceModel
#include "GlobalNamespace/XRDeviceModel.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kContinuesRumbleImpulseStrength
float GlobalNamespace::PSVRHelper::_get_kContinuesRumbleImpulseStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::_get_kContinuesRumbleImpulseStrength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "PSVRHelper", "kContinuesRumbleImpulseStrength"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kContinuesRumbleImpulseStrength
void GlobalNamespace::PSVRHelper::_set_kContinuesRumbleImpulseStrength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::_set_kContinuesRumbleImpulseStrength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PSVRHelper", "kContinuesRumbleImpulseStrength", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action inputFocusWasCapturedEvent
System::Action*& GlobalNamespace::PSVRHelper::dyn_inputFocusWasCapturedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::dyn_inputFocusWasCapturedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inputFocusWasCapturedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action inputFocusWasReleasedEvent
System::Action*& GlobalNamespace::PSVRHelper::dyn_inputFocusWasReleasedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::dyn_inputFocusWasReleasedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inputFocusWasReleasedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action vrFocusWasCapturedEvent
System::Action*& GlobalNamespace::PSVRHelper::dyn_vrFocusWasCapturedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::dyn_vrFocusWasCapturedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vrFocusWasCapturedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action vrFocusWasReleasedEvent
System::Action*& GlobalNamespace::PSVRHelper::dyn_vrFocusWasReleasedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::dyn_vrFocusWasReleasedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vrFocusWasReleasedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action hmdUnmountedEvent
System::Action*& GlobalNamespace::PSVRHelper::dyn_hmdUnmountedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::dyn_hmdUnmountedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hmdUnmountedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action hmdMountedEvent
System::Action*& GlobalNamespace::PSVRHelper::dyn_hmdMountedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::dyn_hmdMountedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hmdMountedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action joystickWasCenteredThisFrameEvent
System::Action*& GlobalNamespace::PSVRHelper::dyn_joystickWasCenteredThisFrameEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::dyn_joystickWasCenteredThisFrameEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joystickWasCenteredThisFrameEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.Vector2> joystickWasNotCenteredThisFrameEvent
System::Action_1<UnityEngine::Vector2>*& GlobalNamespace::PSVRHelper::dyn_joystickWasNotCenteredThisFrameEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::dyn_joystickWasNotCenteredThisFrameEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joystickWasNotCenteredThisFrameEvent"))->offset;
  return *reinterpret_cast<System::Action_1<UnityEngine::Vector2>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _didGetNodeStatesThisFrame
bool& GlobalNamespace::PSVRHelper::dyn__didGetNodeStatesThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::dyn__didGetNodeStatesThisFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didGetNodeStatesThisFrame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnityEngine.XR.XRNodeState> _nodeStates
System::Collections::Generic::List_1<UnityEngine::XR::XRNodeState>*& GlobalNamespace::PSVRHelper::dyn__nodeStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::dyn__nodeStates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nodeStates"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<UnityEngine::XR::XRNodeState>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasVrFocus
bool& GlobalNamespace::PSVRHelper::dyn__hasVrFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::dyn__hasVrFocus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasVrFocus"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PSVRHelper.get_hasInputFocus
bool GlobalNamespace::PSVRHelper::get_hasInputFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::get_hasInputFocus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasInputFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PSVRHelper.get_hasVrFocus
bool GlobalNamespace::PSVRHelper::get_hasVrFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::get_hasVrFocus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasVrFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PSVRHelper.get_isAlwaysWireless
bool GlobalNamespace::PSVRHelper::get_isAlwaysWireless() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::get_isAlwaysWireless");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isAlwaysWireless", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PSVRHelper.get_vrPlatformSDK
GlobalNamespace::VRPlatformSDK GlobalNamespace::PSVRHelper::get_vrPlatformSDK() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::get_vrPlatformSDK");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_vrPlatformSDK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::VRPlatformSDK, false>(this, ___internal__method);
}
// Autogenerated method: PSVRHelper.get_currentXRDeviceModel
GlobalNamespace::XRDeviceModel GlobalNamespace::PSVRHelper::get_currentXRDeviceModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::get_currentXRDeviceModel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentXRDeviceModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::XRDeviceModel, false>(this, ___internal__method);
}
// Autogenerated method: PSVRHelper.add_inputFocusWasCapturedEvent
void GlobalNamespace::PSVRHelper::add_inputFocusWasCapturedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::add_inputFocusWasCapturedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_inputFocusWasCapturedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PSVRHelper.remove_inputFocusWasCapturedEvent
void GlobalNamespace::PSVRHelper::remove_inputFocusWasCapturedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::remove_inputFocusWasCapturedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_inputFocusWasCapturedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PSVRHelper.add_inputFocusWasReleasedEvent
void GlobalNamespace::PSVRHelper::add_inputFocusWasReleasedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::add_inputFocusWasReleasedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_inputFocusWasReleasedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PSVRHelper.remove_inputFocusWasReleasedEvent
void GlobalNamespace::PSVRHelper::remove_inputFocusWasReleasedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::remove_inputFocusWasReleasedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_inputFocusWasReleasedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PSVRHelper.add_vrFocusWasCapturedEvent
void GlobalNamespace::PSVRHelper::add_vrFocusWasCapturedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::add_vrFocusWasCapturedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_vrFocusWasCapturedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PSVRHelper.remove_vrFocusWasCapturedEvent
void GlobalNamespace::PSVRHelper::remove_vrFocusWasCapturedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::remove_vrFocusWasCapturedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_vrFocusWasCapturedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PSVRHelper.add_vrFocusWasReleasedEvent
void GlobalNamespace::PSVRHelper::add_vrFocusWasReleasedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::add_vrFocusWasReleasedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_vrFocusWasReleasedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PSVRHelper.remove_vrFocusWasReleasedEvent
void GlobalNamespace::PSVRHelper::remove_vrFocusWasReleasedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::remove_vrFocusWasReleasedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_vrFocusWasReleasedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PSVRHelper.add_hmdUnmountedEvent
void GlobalNamespace::PSVRHelper::add_hmdUnmountedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::add_hmdUnmountedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_hmdUnmountedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PSVRHelper.remove_hmdUnmountedEvent
void GlobalNamespace::PSVRHelper::remove_hmdUnmountedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::remove_hmdUnmountedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_hmdUnmountedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PSVRHelper.add_hmdMountedEvent
void GlobalNamespace::PSVRHelper::add_hmdMountedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::add_hmdMountedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_hmdMountedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PSVRHelper.remove_hmdMountedEvent
void GlobalNamespace::PSVRHelper::remove_hmdMountedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::remove_hmdMountedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_hmdMountedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PSVRHelper.add_joystickWasCenteredThisFrameEvent
void GlobalNamespace::PSVRHelper::add_joystickWasCenteredThisFrameEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::add_joystickWasCenteredThisFrameEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_joystickWasCenteredThisFrameEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PSVRHelper.remove_joystickWasCenteredThisFrameEvent
void GlobalNamespace::PSVRHelper::remove_joystickWasCenteredThisFrameEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::remove_joystickWasCenteredThisFrameEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_joystickWasCenteredThisFrameEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PSVRHelper.add_joystickWasNotCenteredThisFrameEvent
void GlobalNamespace::PSVRHelper::add_joystickWasNotCenteredThisFrameEvent(System::Action_1<UnityEngine::Vector2>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::add_joystickWasNotCenteredThisFrameEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_joystickWasNotCenteredThisFrameEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PSVRHelper.remove_joystickWasNotCenteredThisFrameEvent
void GlobalNamespace::PSVRHelper::remove_joystickWasNotCenteredThisFrameEvent(System::Action_1<UnityEngine::Vector2>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::remove_joystickWasNotCenteredThisFrameEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_joystickWasNotCenteredThisFrameEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PSVRHelper.Update
void GlobalNamespace::PSVRHelper::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PSVRHelper.LateUpdate
void GlobalNamespace::PSVRHelper::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PSVRHelper.TriggerHapticPulse
void GlobalNamespace::PSVRHelper::TriggerHapticPulse(UnityEngine::XR::XRNode node, float duration, float strength, float frequency) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::TriggerHapticPulse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TriggerHapticPulse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(strength), ::il2cpp_utils::ExtractType(frequency)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, node, duration, strength, frequency);
}
// Autogenerated method: PSVRHelper.StopHaptics
void GlobalNamespace::PSVRHelper::StopHaptics(UnityEngine::XR::XRNode node) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::StopHaptics");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopHaptics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, node);
}
// Autogenerated method: PSVRHelper.AdjustControllerTransform
void GlobalNamespace::PSVRHelper::AdjustControllerTransform(UnityEngine::XR::XRNode node, UnityEngine::Transform* transform, UnityEngine::Vector3 position, UnityEngine::Vector3 rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::AdjustControllerTransform");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AdjustControllerTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node), ::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, node, transform, position, rotation);
}
// Autogenerated method: PSVRHelper.GetNodePose
bool GlobalNamespace::PSVRHelper::GetNodePose(UnityEngine::XR::XRNode nodeType, int idx, ByRef<UnityEngine::Vector3> pos, ByRef<UnityEngine::Quaternion> rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PSVRHelper::GetNodePose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNodePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Quaternion&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, nodeType, idx, byref(pos), byref(rot));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRController
#include "GlobalNamespace/VRController.hpp"
// Including type: VRControllerTransformOffset
#include "GlobalNamespace/VRControllerTransformOffset.hpp"
// Including type: IVRPlatformHelper
#include "GlobalNamespace/IVRPlatformHelper.hpp"
// Including type: VRControllersInputManager
#include "GlobalNamespace/VRControllersInputManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.XRNode _node
UnityEngine::XR::XRNode& GlobalNamespace::VRController::dyn__node() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRController::dyn__node");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_node"))->offset;
  return *reinterpret_cast<UnityEngine::XR::XRNode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _nodeIdx
int& GlobalNamespace::VRController::dyn__nodeIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRController::dyn__nodeIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nodeIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRControllerTransformOffset _transformOffset
GlobalNamespace::VRControllerTransformOffset*& GlobalNamespace::VRController::dyn__transformOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRController::dyn__transformOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transformOffset"))->offset;
  return *reinterpret_cast<GlobalNamespace::VRControllerTransformOffset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IVRPlatformHelper _vrPlatformHelper
GlobalNamespace::IVRPlatformHelper*& GlobalNamespace::VRController::dyn__vrPlatformHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRController::dyn__vrPlatformHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrPlatformHelper"))->offset;
  return *reinterpret_cast<GlobalNamespace::IVRPlatformHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly VRControllersInputManager _vrControllersInputManager
GlobalNamespace::VRControllersInputManager*& GlobalNamespace::VRController::dyn__vrControllersInputManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRController::dyn__vrControllersInputManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrControllersInputManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::VRControllersInputManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _lastTrackedPosition
UnityEngine::Vector3& GlobalNamespace::VRController::dyn__lastTrackedPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRController::dyn__lastTrackedPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastTrackedPosition"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRController.get_node
UnityEngine::XR::XRNode GlobalNamespace::VRController::get_node() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRController::get_node");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_node", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::XR::XRNode, false>(this, ___internal__method);
}
// Autogenerated method: VRController.set_node
void GlobalNamespace::VRController::set_node(UnityEngine::XR::XRNode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRController::set_node");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_node", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRController.get_nodeIdx
int GlobalNamespace::VRController::get_nodeIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRController::get_nodeIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_nodeIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VRController.set_nodeIdx
void GlobalNamespace::VRController::set_nodeIdx(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRController::set_nodeIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_nodeIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRController.get_position
UnityEngine::Vector3 GlobalNamespace::VRController::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRController::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: VRController.get_rotation
UnityEngine::Quaternion GlobalNamespace::VRController::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRController::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: VRController.get_forward
UnityEngine::Vector3 GlobalNamespace::VRController::get_forward() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRController::get_forward");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_forward", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: VRController.get_triggerValue
float GlobalNamespace::VRController::get_triggerValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRController::get_triggerValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_triggerValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VRController.get_verticalAxisValue
float GlobalNamespace::VRController::get_verticalAxisValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRController::get_verticalAxisValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_verticalAxisValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VRController.get_horizontalAxisValue
float GlobalNamespace::VRController::get_horizontalAxisValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRController::get_horizontalAxisValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_horizontalAxisValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VRController.get_active
bool GlobalNamespace::VRController::get_active() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRController::get_active");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_active", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VRController.Update
void GlobalNamespace::VRController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllerTransformOffset
#include "GlobalNamespace/VRControllerTransformOffset.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VRControllerTransformOffset.get_positionOffset
UnityEngine::Vector3 GlobalNamespace::VRControllerTransformOffset::get_positionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllerTransformOffset::get_positionOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_positionOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: VRControllerTransformOffset.get_rotationOffset
UnityEngine::Vector3 GlobalNamespace::VRControllerTransformOffset::get_rotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllerTransformOffset::get_rotationOffset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotationOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRControllersInputManager
#include "GlobalNamespace/VRControllersInputManager.hpp"
// Including type: IVRPlatformHelper
#include "GlobalNamespace/IVRPlatformHelper.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kTriggerLeftHand
::Il2CppString* GlobalNamespace::VRControllersInputManager::_get_kTriggerLeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersInputManager::_get_kTriggerLeftHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "VRControllersInputManager", "kTriggerLeftHand"));
}
// Autogenerated static field setter
// Set static field: static private System.String kTriggerLeftHand
void GlobalNamespace::VRControllersInputManager::_set_kTriggerLeftHand(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersInputManager::_set_kTriggerLeftHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRControllersInputManager", "kTriggerLeftHand", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kTriggerRightHand
::Il2CppString* GlobalNamespace::VRControllersInputManager::_get_kTriggerRightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersInputManager::_get_kTriggerRightHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "VRControllersInputManager", "kTriggerRightHand"));
}
// Autogenerated static field setter
// Set static field: static private System.String kTriggerRightHand
void GlobalNamespace::VRControllersInputManager::_set_kTriggerRightHand(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersInputManager::_set_kTriggerRightHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRControllersInputManager", "kTriggerRightHand", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kVerticalLeftHand
::Il2CppString* GlobalNamespace::VRControllersInputManager::_get_kVerticalLeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersInputManager::_get_kVerticalLeftHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "VRControllersInputManager", "kVerticalLeftHand"));
}
// Autogenerated static field setter
// Set static field: static private System.String kVerticalLeftHand
void GlobalNamespace::VRControllersInputManager::_set_kVerticalLeftHand(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersInputManager::_set_kVerticalLeftHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRControllersInputManager", "kVerticalLeftHand", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kVerticalRightHand
::Il2CppString* GlobalNamespace::VRControllersInputManager::_get_kVerticalRightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersInputManager::_get_kVerticalRightHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "VRControllersInputManager", "kVerticalRightHand"));
}
// Autogenerated static field setter
// Set static field: static private System.String kVerticalRightHand
void GlobalNamespace::VRControllersInputManager::_set_kVerticalRightHand(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersInputManager::_set_kVerticalRightHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRControllersInputManager", "kVerticalRightHand", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kHorizontalLeftHand
::Il2CppString* GlobalNamespace::VRControllersInputManager::_get_kHorizontalLeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersInputManager::_get_kHorizontalLeftHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "VRControllersInputManager", "kHorizontalLeftHand"));
}
// Autogenerated static field setter
// Set static field: static private System.String kHorizontalLeftHand
void GlobalNamespace::VRControllersInputManager::_set_kHorizontalLeftHand(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersInputManager::_set_kHorizontalLeftHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRControllersInputManager", "kHorizontalLeftHand", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kHorizontalRightHand
::Il2CppString* GlobalNamespace::VRControllersInputManager::_get_kHorizontalRightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersInputManager::_get_kHorizontalRightHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "VRControllersInputManager", "kHorizontalRightHand"));
}
// Autogenerated static field setter
// Set static field: static private System.String kHorizontalRightHand
void GlobalNamespace::VRControllersInputManager::_set_kHorizontalRightHand(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersInputManager::_set_kHorizontalRightHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRControllersInputManager", "kHorizontalRightHand", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kMenuButtonLeftHandOculusTouch
::Il2CppString* GlobalNamespace::VRControllersInputManager::_get_kMenuButtonLeftHandOculusTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersInputManager::_get_kMenuButtonLeftHandOculusTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "VRControllersInputManager", "kMenuButtonLeftHandOculusTouch"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMenuButtonLeftHandOculusTouch
void GlobalNamespace::VRControllersInputManager::_set_kMenuButtonLeftHandOculusTouch(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersInputManager::_set_kMenuButtonLeftHandOculusTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRControllersInputManager", "kMenuButtonLeftHandOculusTouch", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kMenuButtonLeftHand
::Il2CppString* GlobalNamespace::VRControllersInputManager::_get_kMenuButtonLeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersInputManager::_get_kMenuButtonLeftHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "VRControllersInputManager", "kMenuButtonLeftHand"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMenuButtonLeftHand
void GlobalNamespace::VRControllersInputManager::_set_kMenuButtonLeftHand(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersInputManager::_set_kMenuButtonLeftHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRControllersInputManager", "kMenuButtonLeftHand", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kMenuButtonRightHandOculusTouch
::Il2CppString* GlobalNamespace::VRControllersInputManager::_get_kMenuButtonRightHandOculusTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersInputManager::_get_kMenuButtonRightHandOculusTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "VRControllersInputManager", "kMenuButtonRightHandOculusTouch"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMenuButtonRightHandOculusTouch
void GlobalNamespace::VRControllersInputManager::_set_kMenuButtonRightHandOculusTouch(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersInputManager::_set_kMenuButtonRightHandOculusTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRControllersInputManager", "kMenuButtonRightHandOculusTouch", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kMenuButtonRightHand
::Il2CppString* GlobalNamespace::VRControllersInputManager::_get_kMenuButtonRightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersInputManager::_get_kMenuButtonRightHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "VRControllersInputManager", "kMenuButtonRightHand"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMenuButtonRightHand
void GlobalNamespace::VRControllersInputManager::_set_kMenuButtonRightHand(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersInputManager::_set_kMenuButtonRightHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRControllersInputManager", "kMenuButtonRightHand", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kMenuButtonOculusTouch
::Il2CppString* GlobalNamespace::VRControllersInputManager::_get_kMenuButtonOculusTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersInputManager::_get_kMenuButtonOculusTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "VRControllersInputManager", "kMenuButtonOculusTouch"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMenuButtonOculusTouch
void GlobalNamespace::VRControllersInputManager::_set_kMenuButtonOculusTouch(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersInputManager::_set_kMenuButtonOculusTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRControllersInputManager", "kMenuButtonOculusTouch", value));
}
// Autogenerated instance field getter
// Get instance field: private IVRPlatformHelper _vrPlatformHelper
GlobalNamespace::IVRPlatformHelper*& GlobalNamespace::VRControllersInputManager::dyn__vrPlatformHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersInputManager::dyn__vrPlatformHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrPlatformHelper"))->offset;
  return *reinterpret_cast<GlobalNamespace::IVRPlatformHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRControllersInputManager.TriggerValue
float GlobalNamespace::VRControllersInputManager::TriggerValue(UnityEngine::XR::XRNode node) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersInputManager::TriggerValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TriggerValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, node);
}
// Autogenerated method: VRControllersInputManager.VerticalAxisValue
float GlobalNamespace::VRControllersInputManager::VerticalAxisValue(UnityEngine::XR::XRNode node) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersInputManager::VerticalAxisValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerticalAxisValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, node);
}
// Autogenerated method: VRControllersInputManager.HorizontalAxisValue
float GlobalNamespace::VRControllersInputManager::HorizontalAxisValue(UnityEngine::XR::XRNode node) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersInputManager::HorizontalAxisValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HorizontalAxisValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, node);
}
// Autogenerated method: VRControllersInputManager.MenuButtonDown
bool GlobalNamespace::VRControllersInputManager::MenuButtonDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersInputManager::MenuButtonDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MenuButtonDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersInputManager.MenuButton
bool GlobalNamespace::VRControllersInputManager::MenuButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersInputManager::MenuButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MenuButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: XRNodeExtensions
#include "GlobalNamespace/XRNodeExtensions.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
// Including type: OVRPlugin/Node
#include "GlobalNamespace/OVRPlugin_Node.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: XRNodeExtensions.OculusNode
GlobalNamespace::OVRPlugin::Node GlobalNamespace::XRNodeExtensions::OculusNode(UnityEngine::XR::XRNode node) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::XRNodeExtensions::OculusNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "XRNodeExtensions", "OculusNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OVRPlugin::Node, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: XRNodeExtensions.PSMoveDeviceIndex
int GlobalNamespace::XRNodeExtensions::PSMoveDeviceIndex(UnityEngine::XR::XRNode node) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::XRNodeExtensions::PSMoveDeviceIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "XRNodeExtensions", "PSMoveDeviceIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BoolWithDefaultValueSO
#include "GlobalNamespace/BoolWithDefaultValueSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _defaultValue
bool& GlobalNamespace::BoolWithDefaultValueSO::dyn__defaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BoolWithDefaultValueSO::dyn__defaultValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BoolWithDefaultValueSO.OnEnable
void GlobalNamespace::BoolWithDefaultValueSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BoolWithDefaultValueSO::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DoubleSO
#include "GlobalNamespace/DoubleSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IObservableChange
#include "GlobalNamespace/IObservableChange.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IObservableChange.add_didChangeEvent
void GlobalNamespace::IObservableChange::add_didChangeEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IObservableChange::add_didChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IObservableChange.remove_didChangeEvent
void GlobalNamespace::IObservableChange::remove_didChangeEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IObservableChange::remove_didChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IntSO
#include "GlobalNamespace/IntSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SOVariableAttribute
#include "GlobalNamespace/SOVariableAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: StringListSO
#include "GlobalNamespace/StringListSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String[] _strings
::ArrayW<::Il2CppString*>& GlobalNamespace::StringListSO::dyn__strings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StringListSO::dyn__strings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_strings"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StringListSO.get_strings
::ArrayW<::Il2CppString*> GlobalNamespace::StringListSO::get_strings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StringListSO::get_strings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_strings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: StringSO
#include "GlobalNamespace/StringSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Vector2IntSO
#include "GlobalNamespace/Vector2IntSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Vector3SO
#include "GlobalNamespace/Vector3SO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Libraries.HM.HMLib.VR.HapticPresetSO
#include "Libraries/HM/HMLib/VR/HapticPresetSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single _duration
float& Libraries::HM::HMLib::VR::HapticPresetSO::dyn__duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("Libraries::HM::HMLib::VR::HapticPresetSO::dyn__duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _strength
float& Libraries::HM::HMLib::VR::HapticPresetSO::dyn__strength() {
  static auto ___internal__logger = ::Logger::get().WithContext("Libraries::HM::HMLib::VR::HapticPresetSO::dyn__strength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_strength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _frequency
float& Libraries::HM::HMLib::VR::HapticPresetSO::dyn__frequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("Libraries::HM::HMLib::VR::HapticPresetSO::dyn__frequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_frequency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _continuous
bool& Libraries::HM::HMLib::VR::HapticPresetSO::dyn__continuous() {
  static auto ___internal__logger = ::Logger::get().WithContext("Libraries::HM::HMLib::VR::HapticPresetSO::dyn__continuous");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_continuous"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Libraries.HM.HMLib.VR.HapticPresetSO.CopyFrom
void Libraries::HM::HMLib::VR::HapticPresetSO::CopyFrom(Libraries::HM::HMLib::VR::HapticPresetSO* hapticPreset) {
  static auto ___internal__logger = ::Logger::get().WithContext("Libraries::HM::HMLib::VR::HapticPresetSO::CopyFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hapticPreset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, hapticPreset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NullAllowed
#include "GlobalNamespace/NullAllowed.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly NullAllowed/Context context
GlobalNamespace::NullAllowed::Context& GlobalNamespace::NullAllowed::dyn_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NullAllowed::dyn_context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context"))->offset;
  return *reinterpret_cast<GlobalNamespace::NullAllowed::Context*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String propertyName
::Il2CppString*& GlobalNamespace::NullAllowed::dyn_propertyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NullAllowed::dyn_propertyName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "propertyName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Object ifNotValue
::Il2CppObject*& GlobalNamespace::NullAllowed::dyn_ifNotValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NullAllowed::dyn_ifNotValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ifNotValue"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NullAllowed/Context
#include "GlobalNamespace/NullAllowed.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NullAllowed/Context Everywhere
GlobalNamespace::NullAllowed::Context GlobalNamespace::NullAllowed::Context::_get_Everywhere() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NullAllowed::Context::_get_Everywhere");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::NullAllowed::Context>("", "NullAllowed/Context", "Everywhere"));
}
// Autogenerated static field setter
// Set static field: static public NullAllowed/Context Everywhere
void GlobalNamespace::NullAllowed::Context::_set_Everywhere(GlobalNamespace::NullAllowed::Context value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NullAllowed::Context::_set_Everywhere");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NullAllowed/Context", "Everywhere", value));
}
// Autogenerated static field getter
// Get static field: static public NullAllowed/Context Prefab
GlobalNamespace::NullAllowed::Context GlobalNamespace::NullAllowed::Context::_get_Prefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NullAllowed::Context::_get_Prefab");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::NullAllowed::Context>("", "NullAllowed/Context", "Prefab"));
}
// Autogenerated static field setter
// Set static field: static public NullAllowed/Context Prefab
void GlobalNamespace::NullAllowed::Context::_set_Prefab(GlobalNamespace::NullAllowed::Context value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NullAllowed::Context::_set_Prefab");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NullAllowed/Context", "Prefab", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::NullAllowed::Context::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NullAllowed::Context::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PyramidBloomRendererSO
#include "GlobalNamespace/PyramidBloomRendererSO.hpp"
// Including type: PyramidBloomRendererSO/Pass
#include "GlobalNamespace/PyramidBloomRendererSO_Pass.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxPyramidSize
int GlobalNamespace::PyramidBloomRendererSO::_get_kMaxPyramidSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::_get_kMaxPyramidSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PyramidBloomRendererSO", "kMaxPyramidSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxPyramidSize
void GlobalNamespace::PyramidBloomRendererSO::_set_kMaxPyramidSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::_set_kMaxPyramidSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PyramidBloomRendererSO", "kMaxPyramidSize", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF21D1C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _bloomTexID
int GlobalNamespace::PyramidBloomRendererSO::_get__bloomTexID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::_get__bloomTexID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PyramidBloomRendererSO", "_bloomTexID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _bloomTexID
void GlobalNamespace::PyramidBloomRendererSO::_set__bloomTexID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::_set__bloomTexID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PyramidBloomRendererSO", "_bloomTexID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF21D2C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _sampleScaleID
int GlobalNamespace::PyramidBloomRendererSO::_get__sampleScaleID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::_get__sampleScaleID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PyramidBloomRendererSO", "_sampleScaleID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _sampleScaleID
void GlobalNamespace::PyramidBloomRendererSO::_set__sampleScaleID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::_set__sampleScaleID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PyramidBloomRendererSO", "_sampleScaleID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF21D3C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _combineSrcID
int GlobalNamespace::PyramidBloomRendererSO::_get__combineSrcID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::_get__combineSrcID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PyramidBloomRendererSO", "_combineSrcID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _combineSrcID
void GlobalNamespace::PyramidBloomRendererSO::_set__combineSrcID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::_set__combineSrcID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PyramidBloomRendererSO", "_combineSrcID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF21D4C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _combineDstID
int GlobalNamespace::PyramidBloomRendererSO::_get__combineDstID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::_get__combineDstID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PyramidBloomRendererSO", "_combineDstID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _combineDstID
void GlobalNamespace::PyramidBloomRendererSO::_set__combineDstID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::_set__combineDstID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PyramidBloomRendererSO", "_combineDstID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF21D5C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _alphaWeightsID
int GlobalNamespace::PyramidBloomRendererSO::_get__alphaWeightsID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::_get__alphaWeightsID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PyramidBloomRendererSO", "_alphaWeightsID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _alphaWeightsID
void GlobalNamespace::PyramidBloomRendererSO::_set__alphaWeightsID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::_set__alphaWeightsID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PyramidBloomRendererSO", "_alphaWeightsID", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader _shader
UnityEngine::Shader*& GlobalNamespace::PyramidBloomRendererSO::dyn__shader() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::dyn__shader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shader"))->offset;
  return *reinterpret_cast<UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _material
UnityEngine::Material*& GlobalNamespace::PyramidBloomRendererSO::dyn__material() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::dyn__material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_material"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PyramidBloomRendererSO/Level[] _pyramid
::ArrayW<GlobalNamespace::PyramidBloomRendererSO::Level>& GlobalNamespace::PyramidBloomRendererSO::dyn__pyramid() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::dyn__pyramid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pyramid"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::PyramidBloomRendererSO::Level>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
bool& GlobalNamespace::PyramidBloomRendererSO::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PyramidBloomRendererSO.OnDisable
void GlobalNamespace::PyramidBloomRendererSO::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PyramidBloomRendererSO.RenderBloom
void GlobalNamespace::PyramidBloomRendererSO::RenderBloom(UnityEngine::RenderTexture* src, UnityEngine::RenderTexture* dest, float radius, bool alphaWeights, bool betterQuality, bool gammaCorrection) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::RenderBloom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderBloom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(alphaWeights), ::il2cpp_utils::ExtractType(betterQuality), ::il2cpp_utils::ExtractType(gammaCorrection)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, src, dest, radius, alphaWeights, betterQuality, gammaCorrection);
}
// Autogenerated method: PyramidBloomRendererSO.RenderBloom
void GlobalNamespace::PyramidBloomRendererSO::RenderBloom(UnityEngine::RenderTexture* src, UnityEngine::RenderTexture* dest, float radius, float intensity, float downIntensityOffset, bool uniformPyramidWeights, bool downsampleOnFirstPass, float pyramidWeightsParam, float alphaWeights, float firstUpsampleBrightness, float finalUpsampleBrightness, GlobalNamespace::PyramidBloomRendererSO::Pass preFilterPass, GlobalNamespace::PyramidBloomRendererSO::Pass downsamplePass, GlobalNamespace::PyramidBloomRendererSO::Pass upsamplePass, GlobalNamespace::PyramidBloomRendererSO::Pass finalUpsamplePass) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::RenderBloom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderBloom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(radius), ::il2cpp_utils::ExtractType(intensity), ::il2cpp_utils::ExtractType(downIntensityOffset), ::il2cpp_utils::ExtractType(uniformPyramidWeights), ::il2cpp_utils::ExtractType(downsampleOnFirstPass), ::il2cpp_utils::ExtractType(pyramidWeightsParam), ::il2cpp_utils::ExtractType(alphaWeights), ::il2cpp_utils::ExtractType(firstUpsampleBrightness), ::il2cpp_utils::ExtractType(finalUpsampleBrightness), ::il2cpp_utils::ExtractType(preFilterPass), ::il2cpp_utils::ExtractType(downsamplePass), ::il2cpp_utils::ExtractType(upsamplePass), ::il2cpp_utils::ExtractType(finalUpsamplePass)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, src, dest, radius, intensity, downIntensityOffset, uniformPyramidWeights, downsampleOnFirstPass, pyramidWeightsParam, alphaWeights, firstUpsampleBrightness, finalUpsampleBrightness, preFilterPass, downsamplePass, upsamplePass, finalUpsamplePass);
}
// Autogenerated method: PyramidBloomRendererSO..cctor
void GlobalNamespace::PyramidBloomRendererSO::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PyramidBloomRendererSO", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PyramidBloomRendererSO.OnEnable
void GlobalNamespace::PyramidBloomRendererSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PyramidBloomRendererSO/Pass
#include "GlobalNamespace/PyramidBloomRendererSO_Pass.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PyramidBloomRendererSO/Pass Prefilter13
GlobalNamespace::PyramidBloomRendererSO::Pass GlobalNamespace::PyramidBloomRendererSO::Pass::_get_Prefilter13() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::Pass::_get_Prefilter13");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PyramidBloomRendererSO::Pass>("", "PyramidBloomRendererSO/Pass", "Prefilter13"));
}
// Autogenerated static field setter
// Set static field: static public PyramidBloomRendererSO/Pass Prefilter13
void GlobalNamespace::PyramidBloomRendererSO::Pass::_set_Prefilter13(GlobalNamespace::PyramidBloomRendererSO::Pass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::Pass::_set_Prefilter13");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PyramidBloomRendererSO/Pass", "Prefilter13", value));
}
// Autogenerated static field getter
// Get static field: static public PyramidBloomRendererSO/Pass Prefilter4
GlobalNamespace::PyramidBloomRendererSO::Pass GlobalNamespace::PyramidBloomRendererSO::Pass::_get_Prefilter4() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::Pass::_get_Prefilter4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PyramidBloomRendererSO::Pass>("", "PyramidBloomRendererSO/Pass", "Prefilter4"));
}
// Autogenerated static field setter
// Set static field: static public PyramidBloomRendererSO/Pass Prefilter4
void GlobalNamespace::PyramidBloomRendererSO::Pass::_set_Prefilter4(GlobalNamespace::PyramidBloomRendererSO::Pass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::Pass::_set_Prefilter4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PyramidBloomRendererSO/Pass", "Prefilter4", value));
}
// Autogenerated static field getter
// Get static field: static public PyramidBloomRendererSO/Pass Downsample13
GlobalNamespace::PyramidBloomRendererSO::Pass GlobalNamespace::PyramidBloomRendererSO::Pass::_get_Downsample13() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::Pass::_get_Downsample13");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PyramidBloomRendererSO::Pass>("", "PyramidBloomRendererSO/Pass", "Downsample13"));
}
// Autogenerated static field setter
// Set static field: static public PyramidBloomRendererSO/Pass Downsample13
void GlobalNamespace::PyramidBloomRendererSO::Pass::_set_Downsample13(GlobalNamespace::PyramidBloomRendererSO::Pass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::Pass::_set_Downsample13");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PyramidBloomRendererSO/Pass", "Downsample13", value));
}
// Autogenerated static field getter
// Get static field: static public PyramidBloomRendererSO/Pass Downsample4
GlobalNamespace::PyramidBloomRendererSO::Pass GlobalNamespace::PyramidBloomRendererSO::Pass::_get_Downsample4() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::Pass::_get_Downsample4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PyramidBloomRendererSO::Pass>("", "PyramidBloomRendererSO/Pass", "Downsample4"));
}
// Autogenerated static field setter
// Set static field: static public PyramidBloomRendererSO/Pass Downsample4
void GlobalNamespace::PyramidBloomRendererSO::Pass::_set_Downsample4(GlobalNamespace::PyramidBloomRendererSO::Pass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::Pass::_set_Downsample4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PyramidBloomRendererSO/Pass", "Downsample4", value));
}
// Autogenerated static field getter
// Get static field: static public PyramidBloomRendererSO/Pass DownsampleBilinearGamma
GlobalNamespace::PyramidBloomRendererSO::Pass GlobalNamespace::PyramidBloomRendererSO::Pass::_get_DownsampleBilinearGamma() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::Pass::_get_DownsampleBilinearGamma");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PyramidBloomRendererSO::Pass>("", "PyramidBloomRendererSO/Pass", "DownsampleBilinearGamma"));
}
// Autogenerated static field setter
// Set static field: static public PyramidBloomRendererSO/Pass DownsampleBilinearGamma
void GlobalNamespace::PyramidBloomRendererSO::Pass::_set_DownsampleBilinearGamma(GlobalNamespace::PyramidBloomRendererSO::Pass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::Pass::_set_DownsampleBilinearGamma");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PyramidBloomRendererSO/Pass", "DownsampleBilinearGamma", value));
}
// Autogenerated static field getter
// Get static field: static public PyramidBloomRendererSO/Pass UpsampleTent
GlobalNamespace::PyramidBloomRendererSO::Pass GlobalNamespace::PyramidBloomRendererSO::Pass::_get_UpsampleTent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::Pass::_get_UpsampleTent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PyramidBloomRendererSO::Pass>("", "PyramidBloomRendererSO/Pass", "UpsampleTent"));
}
// Autogenerated static field setter
// Set static field: static public PyramidBloomRendererSO/Pass UpsampleTent
void GlobalNamespace::PyramidBloomRendererSO::Pass::_set_UpsampleTent(GlobalNamespace::PyramidBloomRendererSO::Pass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::Pass::_set_UpsampleTent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PyramidBloomRendererSO/Pass", "UpsampleTent", value));
}
// Autogenerated static field getter
// Get static field: static public PyramidBloomRendererSO/Pass UpsampleBox
GlobalNamespace::PyramidBloomRendererSO::Pass GlobalNamespace::PyramidBloomRendererSO::Pass::_get_UpsampleBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::Pass::_get_UpsampleBox");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PyramidBloomRendererSO::Pass>("", "PyramidBloomRendererSO/Pass", "UpsampleBox"));
}
// Autogenerated static field setter
// Set static field: static public PyramidBloomRendererSO/Pass UpsampleBox
void GlobalNamespace::PyramidBloomRendererSO::Pass::_set_UpsampleBox(GlobalNamespace::PyramidBloomRendererSO::Pass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::Pass::_set_UpsampleBox");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PyramidBloomRendererSO/Pass", "UpsampleBox", value));
}
// Autogenerated static field getter
// Get static field: static public PyramidBloomRendererSO/Pass UpsampleTentGamma
GlobalNamespace::PyramidBloomRendererSO::Pass GlobalNamespace::PyramidBloomRendererSO::Pass::_get_UpsampleTentGamma() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::Pass::_get_UpsampleTentGamma");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PyramidBloomRendererSO::Pass>("", "PyramidBloomRendererSO/Pass", "UpsampleTentGamma"));
}
// Autogenerated static field setter
// Set static field: static public PyramidBloomRendererSO/Pass UpsampleTentGamma
void GlobalNamespace::PyramidBloomRendererSO::Pass::_set_UpsampleTentGamma(GlobalNamespace::PyramidBloomRendererSO::Pass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::Pass::_set_UpsampleTentGamma");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PyramidBloomRendererSO/Pass", "UpsampleTentGamma", value));
}
// Autogenerated static field getter
// Get static field: static public PyramidBloomRendererSO/Pass UpsampleBoxGamma
GlobalNamespace::PyramidBloomRendererSO::Pass GlobalNamespace::PyramidBloomRendererSO::Pass::_get_UpsampleBoxGamma() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::Pass::_get_UpsampleBoxGamma");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PyramidBloomRendererSO::Pass>("", "PyramidBloomRendererSO/Pass", "UpsampleBoxGamma"));
}
// Autogenerated static field setter
// Set static field: static public PyramidBloomRendererSO/Pass UpsampleBoxGamma
void GlobalNamespace::PyramidBloomRendererSO::Pass::_set_UpsampleBoxGamma(GlobalNamespace::PyramidBloomRendererSO::Pass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::Pass::_set_UpsampleBoxGamma");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PyramidBloomRendererSO/Pass", "UpsampleBoxGamma", value));
}
// Autogenerated static field getter
// Get static field: static public PyramidBloomRendererSO/Pass Bilinear
GlobalNamespace::PyramidBloomRendererSO::Pass GlobalNamespace::PyramidBloomRendererSO::Pass::_get_Bilinear() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::Pass::_get_Bilinear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PyramidBloomRendererSO::Pass>("", "PyramidBloomRendererSO/Pass", "Bilinear"));
}
// Autogenerated static field setter
// Set static field: static public PyramidBloomRendererSO/Pass Bilinear
void GlobalNamespace::PyramidBloomRendererSO::Pass::_set_Bilinear(GlobalNamespace::PyramidBloomRendererSO::Pass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::Pass::_set_Bilinear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PyramidBloomRendererSO/Pass", "Bilinear", value));
}
// Autogenerated static field getter
// Get static field: static public PyramidBloomRendererSO/Pass BilinearGamma
GlobalNamespace::PyramidBloomRendererSO::Pass GlobalNamespace::PyramidBloomRendererSO::Pass::_get_BilinearGamma() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::Pass::_get_BilinearGamma");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PyramidBloomRendererSO::Pass>("", "PyramidBloomRendererSO/Pass", "BilinearGamma"));
}
// Autogenerated static field setter
// Set static field: static public PyramidBloomRendererSO/Pass BilinearGamma
void GlobalNamespace::PyramidBloomRendererSO::Pass::_set_BilinearGamma(GlobalNamespace::PyramidBloomRendererSO::Pass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::Pass::_set_BilinearGamma");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PyramidBloomRendererSO/Pass", "BilinearGamma", value));
}
// Autogenerated static field getter
// Get static field: static public PyramidBloomRendererSO/Pass UpsampleTentAndReinhardToneMapping
GlobalNamespace::PyramidBloomRendererSO::Pass GlobalNamespace::PyramidBloomRendererSO::Pass::_get_UpsampleTentAndReinhardToneMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::Pass::_get_UpsampleTentAndReinhardToneMapping");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PyramidBloomRendererSO::Pass>("", "PyramidBloomRendererSO/Pass", "UpsampleTentAndReinhardToneMapping"));
}
// Autogenerated static field setter
// Set static field: static public PyramidBloomRendererSO/Pass UpsampleTentAndReinhardToneMapping
void GlobalNamespace::PyramidBloomRendererSO::Pass::_set_UpsampleTentAndReinhardToneMapping(GlobalNamespace::PyramidBloomRendererSO::Pass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::Pass::_set_UpsampleTentAndReinhardToneMapping");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PyramidBloomRendererSO/Pass", "UpsampleTentAndReinhardToneMapping", value));
}
// Autogenerated static field getter
// Get static field: static public PyramidBloomRendererSO/Pass UpsampleTentAndACESToneMapping
GlobalNamespace::PyramidBloomRendererSO::Pass GlobalNamespace::PyramidBloomRendererSO::Pass::_get_UpsampleTentAndACESToneMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::Pass::_get_UpsampleTentAndACESToneMapping");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PyramidBloomRendererSO::Pass>("", "PyramidBloomRendererSO/Pass", "UpsampleTentAndACESToneMapping"));
}
// Autogenerated static field setter
// Set static field: static public PyramidBloomRendererSO/Pass UpsampleTentAndACESToneMapping
void GlobalNamespace::PyramidBloomRendererSO::Pass::_set_UpsampleTentAndACESToneMapping(GlobalNamespace::PyramidBloomRendererSO::Pass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::Pass::_set_UpsampleTentAndACESToneMapping");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PyramidBloomRendererSO/Pass", "UpsampleTentAndACESToneMapping", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::PyramidBloomRendererSO::Pass::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PyramidBloomRendererSO::Pass::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomFogEnvironment
#include "GlobalNamespace/BloomFogEnvironment.hpp"
// Including type: BloomFogSO
#include "GlobalNamespace/BloomFogSO.hpp"
// Including type: BloomFogEnvironmentParams
#include "GlobalNamespace/BloomFogEnvironmentParams.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BloomFogSO _bloomFog
GlobalNamespace::BloomFogSO*& GlobalNamespace::BloomFogEnvironment::dyn__bloomFog() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogEnvironment::dyn__bloomFog");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomFog"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomFogSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomFogEnvironmentParams _fogParams
GlobalNamespace::BloomFogEnvironmentParams*& GlobalNamespace::BloomFogEnvironment::dyn__fogParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogEnvironment::dyn__fogParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fogParams"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomFogEnvironmentParams**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BloomFogEnvironment.OnEnable
void GlobalNamespace::BloomFogEnvironment::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogEnvironment::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomFogEnvironment.OnValidate
void GlobalNamespace::BloomFogEnvironment::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogEnvironment::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomFogEnvironmentParams
#include "GlobalNamespace/BloomFogEnvironmentParams.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single attenuation
float& GlobalNamespace::BloomFogEnvironmentParams::dyn_attenuation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogEnvironmentParams::dyn_attenuation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attenuation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single offset
float& GlobalNamespace::BloomFogEnvironmentParams::dyn_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogEnvironmentParams::dyn_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single heightFogStartY
float& GlobalNamespace::BloomFogEnvironmentParams::dyn_heightFogStartY() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogEnvironmentParams::dyn_heightFogStartY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heightFogStartY"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single heightFogHeight
float& GlobalNamespace::BloomFogEnvironmentParams::dyn_heightFogHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogEnvironmentParams::dyn_heightFogHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heightFogHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomFogParamsAnimator
#include "GlobalNamespace/BloomFogParamsAnimator.hpp"
// Including type: BloomFogParamsAnimator/<AnimationCoroutine>d__2
#include "GlobalNamespace/BloomFogParamsAnimator_-AnimationCoroutine-d__2.hpp"
// Including type: BloomFogSO
#include "GlobalNamespace/BloomFogSO.hpp"
// Including type: BloomFogEnvironmentParams
#include "GlobalNamespace/BloomFogEnvironmentParams.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly BloomFogSO _bloomFog
GlobalNamespace::BloomFogSO*& GlobalNamespace::BloomFogParamsAnimator::dyn__bloomFog() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsAnimator::dyn__bloomFog");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomFog"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomFogSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BloomFogParamsAnimator.AnimateBloomFogParamsChange
void GlobalNamespace::BloomFogParamsAnimator::AnimateBloomFogParamsChange(GlobalNamespace::BloomFogEnvironmentParams* envFogParams, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsAnimator::AnimateBloomFogParamsChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnimateBloomFogParamsChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(envFogParams), ::il2cpp_utils::ExtractType(duration)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, envFogParams, duration);
}
// Autogenerated method: BloomFogParamsAnimator.AnimationCoroutine
System::Collections::IEnumerator* GlobalNamespace::BloomFogParamsAnimator::AnimationCoroutine(GlobalNamespace::BloomFogEnvironmentParams* envFogParams, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsAnimator::AnimationCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnimationCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(envFogParams), ::il2cpp_utils::ExtractType(duration)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, envFogParams, duration);
}
// Autogenerated method: BloomFogParamsAnimator.SetBloomFogParamsChange
void GlobalNamespace::BloomFogParamsAnimator::SetBloomFogParamsChange(GlobalNamespace::BloomFogEnvironmentParams* envFogParams, float transition) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsAnimator::SetBloomFogParamsChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBloomFogParamsChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(envFogParams), ::il2cpp_utils::ExtractType(transition)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, envFogParams, transition);
}
// Autogenerated method: BloomFogParamsAnimator.GetDefaultBloomFogParams
GlobalNamespace::BloomFogEnvironmentParams* GlobalNamespace::BloomFogParamsAnimator::GetDefaultBloomFogParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsAnimator::GetDefaultBloomFogParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefaultBloomFogParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BloomFogEnvironmentParams*, false>(this, ___internal__method);
}
// Autogenerated method: BloomFogParamsAnimator.SetDefaultBloomFogParams
void GlobalNamespace::BloomFogParamsAnimator::SetDefaultBloomFogParams(GlobalNamespace::BloomFogEnvironmentParams* newDefaultBloomFogParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsAnimator::SetDefaultBloomFogParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDefaultBloomFogParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newDefaultBloomFogParams)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newDefaultBloomFogParams);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BloomFogParamsAnimator/<AnimationCoroutine>d__2
#include "GlobalNamespace/BloomFogParamsAnimator_-AnimationCoroutine-d__2.hpp"
// Including type: BloomFogEnvironmentParams
#include "GlobalNamespace/BloomFogEnvironmentParams.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::BloomFogParamsAnimator::$AnimationCoroutine$d__2::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsAnimator::$AnimationCoroutine$d__2::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::BloomFogParamsAnimator::$AnimationCoroutine$d__2::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsAnimator::$AnimationCoroutine$d__2::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single duration
float& GlobalNamespace::BloomFogParamsAnimator::$AnimationCoroutine$d__2::dyn_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsAnimator::$AnimationCoroutine$d__2::dyn_duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BloomFogParamsAnimator <>4__this
GlobalNamespace::BloomFogParamsAnimator*& GlobalNamespace::BloomFogParamsAnimator::$AnimationCoroutine$d__2::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsAnimator::$AnimationCoroutine$d__2::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomFogParamsAnimator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BloomFogEnvironmentParams envFogParams
GlobalNamespace::BloomFogEnvironmentParams*& GlobalNamespace::BloomFogParamsAnimator::$AnimationCoroutine$d__2::dyn_envFogParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsAnimator::$AnimationCoroutine$d__2::dyn_envFogParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "envFogParams"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomFogEnvironmentParams**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <elapsedTime>5__2
float& GlobalNamespace::BloomFogParamsAnimator::$AnimationCoroutine$d__2::dyn_$elapsedTime$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsAnimator::$AnimationCoroutine$d__2::dyn_$elapsedTime$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<elapsedTime>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BloomFogParamsAnimator/<AnimationCoroutine>d__2.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::BloomFogParamsAnimator::$AnimationCoroutine$d__2::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsAnimator::$AnimationCoroutine$d__2::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: BloomFogParamsAnimator/<AnimationCoroutine>d__2.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::BloomFogParamsAnimator::$AnimationCoroutine$d__2::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsAnimator::$AnimationCoroutine$d__2::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: BloomFogParamsAnimator/<AnimationCoroutine>d__2.System.IDisposable.Dispose
void GlobalNamespace::BloomFogParamsAnimator::$AnimationCoroutine$d__2::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsAnimator::$AnimationCoroutine$d__2::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomFogParamsAnimator/<AnimationCoroutine>d__2.MoveNext
bool GlobalNamespace::BloomFogParamsAnimator::$AnimationCoroutine$d__2::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsAnimator::$AnimationCoroutine$d__2::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BloomFogParamsAnimator/<AnimationCoroutine>d__2.System.Collections.IEnumerator.Reset
void GlobalNamespace::BloomFogParamsAnimator::$AnimationCoroutine$d__2::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsAnimator::$AnimationCoroutine$d__2::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BloomFogSO
#include "GlobalNamespace/BloomFogSO.hpp"
// Including type: BloomFogEnvironmentParams
#include "GlobalNamespace/BloomFogEnvironmentParams.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kBloomFogEnabledKeyword
::Il2CppString* GlobalNamespace::BloomFogSO::_get_kBloomFogEnabledKeyword() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogSO::_get_kBloomFogEnabledKeyword");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "BloomFogSO", "kBloomFogEnabledKeyword"));
}
// Autogenerated static field setter
// Set static field: static private System.String kBloomFogEnabledKeyword
void GlobalNamespace::BloomFogSO::_set_kBloomFogEnabledKeyword(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogSO::_set_kBloomFogEnabledKeyword");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomFogSO", "kBloomFogEnabledKeyword", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF21DE8
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _customFogAttenuationID
int GlobalNamespace::BloomFogSO::_get__customFogAttenuationID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogSO::_get__customFogAttenuationID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BloomFogSO", "_customFogAttenuationID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _customFogAttenuationID
void GlobalNamespace::BloomFogSO::_set__customFogAttenuationID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogSO::_set__customFogAttenuationID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomFogSO", "_customFogAttenuationID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF21DF8
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _customFogOffsetID
int GlobalNamespace::BloomFogSO::_get__customFogOffsetID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogSO::_get__customFogOffsetID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BloomFogSO", "_customFogOffsetID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _customFogOffsetID
void GlobalNamespace::BloomFogSO::_set__customFogOffsetID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogSO::_set__customFogOffsetID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomFogSO", "_customFogOffsetID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF21E08
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _customFogHeightFogStartYID
int GlobalNamespace::BloomFogSO::_get__customFogHeightFogStartYID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogSO::_get__customFogHeightFogStartYID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BloomFogSO", "_customFogHeightFogStartYID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _customFogHeightFogStartYID
void GlobalNamespace::BloomFogSO::_set__customFogHeightFogStartYID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogSO::_set__customFogHeightFogStartYID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomFogSO", "_customFogHeightFogStartYID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF21E18
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _customFogHeightFogHeightID
int GlobalNamespace::BloomFogSO::_get__customFogHeightFogHeightID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogSO::_get__customFogHeightFogHeightID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BloomFogSO", "_customFogHeightFogHeightID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _customFogHeightFogHeightID
void GlobalNamespace::BloomFogSO::_set__customFogHeightFogHeightID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogSO::_set__customFogHeightFogHeightID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomFogSO", "_customFogHeightFogHeightID", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _bloomFogEnabled
bool& GlobalNamespace::BloomFogSO::dyn__bloomFogEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogSO::dyn__bloomFogEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomFogEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _transition
float& GlobalNamespace::BloomFogSO::dyn__transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogSO::dyn__transition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transition"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomFogEnvironmentParams _defaultFogParams
GlobalNamespace::BloomFogEnvironmentParams*& GlobalNamespace::BloomFogSO::dyn__defaultFogParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogSO::dyn__defaultFogParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultFogParams"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomFogEnvironmentParams**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomFogEnvironmentParams _transitionFogParams
GlobalNamespace::BloomFogEnvironmentParams*& GlobalNamespace::BloomFogSO::dyn__transitionFogParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogSO::dyn__transitionFogParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transitionFogParams"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomFogEnvironmentParams**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BloomFogSO.get_transition
float GlobalNamespace::BloomFogSO::get_transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogSO::get_transition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BloomFogSO.set_transition
void GlobalNamespace::BloomFogSO::set_transition(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogSO::set_transition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_transition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BloomFogSO.get_defaultForParams
GlobalNamespace::BloomFogEnvironmentParams* GlobalNamespace::BloomFogSO::get_defaultForParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogSO::get_defaultForParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultForParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BloomFogEnvironmentParams*, false>(this, ___internal__method);
}
// Autogenerated method: BloomFogSO.set_defaultForParams
void GlobalNamespace::BloomFogSO::set_defaultForParams(GlobalNamespace::BloomFogEnvironmentParams* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogSO::set_defaultForParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_defaultForParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BloomFogSO.get_transitionFogParams
GlobalNamespace::BloomFogEnvironmentParams* GlobalNamespace::BloomFogSO::get_transitionFogParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogSO::get_transitionFogParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transitionFogParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BloomFogEnvironmentParams*, false>(this, ___internal__method);
}
// Autogenerated method: BloomFogSO.set_transitionFogParams
void GlobalNamespace::BloomFogSO::set_transitionFogParams(GlobalNamespace::BloomFogEnvironmentParams* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogSO::set_transitionFogParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_transitionFogParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BloomFogSO.get_bloomFogEnabled
bool GlobalNamespace::BloomFogSO::get_bloomFogEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogSO::get_bloomFogEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bloomFogEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BloomFogSO.set_bloomFogEnabled
void GlobalNamespace::BloomFogSO::set_bloomFogEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogSO::set_bloomFogEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bloomFogEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BloomFogSO.Setup
void GlobalNamespace::BloomFogSO::Setup(GlobalNamespace::BloomFogEnvironmentParams* defaultFogParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogSO::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(defaultFogParams)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, defaultFogParams);
}
// Autogenerated method: BloomFogSO.UpdateShaderParams
void GlobalNamespace::BloomFogSO::UpdateShaderParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogSO::UpdateShaderParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateShaderParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomFogSO.SetParams
void GlobalNamespace::BloomFogSO::SetParams(float attenuation, float offset, float heightFogStartY, float heightFogHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogSO::SetParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BloomFogSO", "SetParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attenuation), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(heightFogStartY), ::il2cpp_utils::ExtractType(heightFogHeight)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, attenuation, offset, heightFogStartY, heightFogHeight);
}
// Autogenerated method: BloomFogSO..cctor
void GlobalNamespace::BloomFogSO::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogSO::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BloomFogSO", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BloomFogSO.OnEnable
void GlobalNamespace::BloomFogSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogSO::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePass
#include "GlobalNamespace/BloomPrePass.hpp"
// Including type: BloomPrePassRenderDataSO/Data
#include "GlobalNamespace/BloomPrePassRenderDataSO_Data.hpp"
// Including type: BloomPrePassRendererSO
#include "GlobalNamespace/BloomPrePassRendererSO.hpp"
// Including type: BloomPrePassEffectContainerSO
#include "GlobalNamespace/BloomPrePassEffectContainerSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BloomPrePassRendererSO _bloomPrepassRenderer
GlobalNamespace::BloomPrePassRendererSO*& GlobalNamespace::BloomPrePass::dyn__bloomPrepassRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePass::dyn__bloomPrepassRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomPrepassRenderer"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomPrePassRendererSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomPrePassEffectContainerSO _bloomPrePassEffectContainer
GlobalNamespace::BloomPrePassEffectContainerSO*& GlobalNamespace::BloomPrePass::dyn__bloomPrePassEffectContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePass::dyn__bloomPrePassEffectContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomPrePassEffectContainer"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomPrePassEffectContainerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomPrePassRenderDataSO _bloomPrePassRenderData
GlobalNamespace::BloomPrePassRenderDataSO*& GlobalNamespace::BloomPrePass::dyn__bloomPrePassRenderData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePass::dyn__bloomPrePassRenderData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomPrePassRenderData"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomPrePassRenderDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomPrePass/Mode _mode
GlobalNamespace::BloomPrePass::Mode& GlobalNamespace::BloomPrePass::dyn__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePass::dyn__mode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mode"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomPrePass::Mode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomPrePassRenderDataSO/Data _renderData
GlobalNamespace::BloomPrePassRenderDataSO::Data*& GlobalNamespace::BloomPrePass::dyn__renderData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePass::dyn__renderData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderData"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomPrePassRenderDataSO::Data**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BloomPrePass.Awake
void GlobalNamespace::BloomPrePass::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePass::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePass.LazyInit
void GlobalNamespace::BloomPrePass::LazyInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePass::LazyInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LazyInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePass.OnDestroy
void GlobalNamespace::BloomPrePass::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePass::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePass.OnPreRender
void GlobalNamespace::BloomPrePass::OnPreRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePass::OnPreRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPreRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePass.OnPostRender
void GlobalNamespace::BloomPrePass::OnPostRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePass::OnPostRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPostRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePass.SetMode
void GlobalNamespace::BloomPrePass::SetMode(GlobalNamespace::BloomPrePass::Mode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePass::SetMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mode)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, mode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePass/Mode
#include "GlobalNamespace/BloomPrePass.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BloomPrePass/Mode RenderAndSetData
GlobalNamespace::BloomPrePass::Mode GlobalNamespace::BloomPrePass::Mode::_get_RenderAndSetData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePass::Mode::_get_RenderAndSetData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BloomPrePass::Mode>("", "BloomPrePass/Mode", "RenderAndSetData"));
}
// Autogenerated static field setter
// Set static field: static public BloomPrePass/Mode RenderAndSetData
void GlobalNamespace::BloomPrePass::Mode::_set_RenderAndSetData(GlobalNamespace::BloomPrePass::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePass::Mode::_set_RenderAndSetData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomPrePass/Mode", "RenderAndSetData", value));
}
// Autogenerated static field getter
// Get static field: static public BloomPrePass/Mode SetDataOnly
GlobalNamespace::BloomPrePass::Mode GlobalNamespace::BloomPrePass::Mode::_get_SetDataOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePass::Mode::_get_SetDataOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BloomPrePass::Mode>("", "BloomPrePass/Mode", "SetDataOnly"));
}
// Autogenerated static field setter
// Set static field: static public BloomPrePass/Mode SetDataOnly
void GlobalNamespace::BloomPrePass::Mode::_set_SetDataOnly(GlobalNamespace::BloomPrePass::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePass::Mode::_set_SetDataOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomPrePass/Mode", "SetDataOnly", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::BloomPrePass::Mode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePass::Mode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassBackgroundColor
#include "GlobalNamespace/BloomPrePassBackgroundColor.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF21F1C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _colorID
int GlobalNamespace::BloomPrePassBackgroundColor::_get__colorID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColor::_get__colorID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BloomPrePassBackgroundColor", "_colorID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _colorID
void GlobalNamespace::BloomPrePassBackgroundColor::_set__colorID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColor::_set__colorID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomPrePassBackgroundColor", "_colorID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF21F2C
// Autogenerated static field getter
// Get static field: static private UnityEngine.Material _material
UnityEngine::Material* GlobalNamespace::BloomPrePassBackgroundColor::_get__material() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColor::_get__material");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Material*>("", "BloomPrePassBackgroundColor", "_material"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Material _material
void GlobalNamespace::BloomPrePassBackgroundColor::_set__material(UnityEngine::Material* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColor::_set__material");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomPrePassBackgroundColor", "_material", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF21F3C
// Autogenerated static field getter
// Get static field: static private System.Boolean _initialized
bool GlobalNamespace::BloomPrePassBackgroundColor::_get__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColor::_get__initialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("", "BloomPrePassBackgroundColor", "_initialized"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _initialized
void GlobalNamespace::BloomPrePassBackgroundColor::_set__initialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColor::_set__initialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomPrePassBackgroundColor", "_initialized", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _intensity
float& GlobalNamespace::BloomPrePassBackgroundColor::dyn__intensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColor::dyn__intensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_intensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minAlpha
float& GlobalNamespace::BloomPrePassBackgroundColor::dyn__minAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColor::dyn__minAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minAlpha"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _grayscaleFactor
float& GlobalNamespace::BloomPrePassBackgroundColor::dyn__grayscaleFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColor::dyn__grayscaleFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_grayscaleFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader _shader
UnityEngine::Shader*& GlobalNamespace::BloomPrePassBackgroundColor::dyn__shader() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColor::dyn__shader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shader"))->offset;
  return *reinterpret_cast<UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color
UnityEngine::Color& GlobalNamespace::BloomPrePassBackgroundColor::dyn__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColor::dyn__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BloomPrePassBackgroundColor.get_color
UnityEngine::Color GlobalNamespace::BloomPrePassBackgroundColor::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColor::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassBackgroundColor.set_color
void GlobalNamespace::BloomPrePassBackgroundColor::set_color(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColor::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BloomPrePassBackgroundColor.get_bgColor
UnityEngine::Color GlobalNamespace::BloomPrePassBackgroundColor::get_bgColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColor::get_bgColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bgColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassBackgroundColor.InitIfNeeded
void GlobalNamespace::BloomPrePassBackgroundColor::InitIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColor::InitIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassBackgroundColor..cctor
void GlobalNamespace::BloomPrePassBackgroundColor::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColor::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BloomPrePassBackgroundColor", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BloomPrePassBackgroundColor.Render
void GlobalNamespace::BloomPrePassBackgroundColor::Render(UnityEngine::RenderTexture* dest, UnityEngine::Matrix4x4 viewMatrix, UnityEngine::Matrix4x4 projectionMatrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColor::Render");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Render", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(viewMatrix), ::il2cpp_utils::ExtractType(projectionMatrix)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, dest, viewMatrix, projectionMatrix);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassBackgroundColorsGradient
#include "GlobalNamespace/BloomPrePassBackgroundColorsGradient.hpp"
// Including type: BloomPrePassBackgroundColorsGradient/Element
#include "GlobalNamespace/BloomPrePassBackgroundColorsGradient_Element.hpp"
// Including type: Unity.Collections.NativeArray`1
#include "Unity/Collections/NativeArray_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BloomPrePassBackgroundColorsGradient/Element[] _elements
::ArrayW<GlobalNamespace::BloomPrePassBackgroundColorsGradient::Element*>& GlobalNamespace::BloomPrePassBackgroundColorsGradient::dyn__elements() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColorsGradient::dyn__elements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elements"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::BloomPrePassBackgroundColorsGradient::Element*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BloomPrePassBackgroundColorsGradient.get_elements
::ArrayW<GlobalNamespace::BloomPrePassBackgroundColorsGradient::Element*> GlobalNamespace::BloomPrePassBackgroundColorsGradient::get_elements() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColorsGradient::get_elements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_elements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<GlobalNamespace::BloomPrePassBackgroundColorsGradient::Element*>, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassBackgroundColorsGradient.EvaluateColor
UnityEngine::Color GlobalNamespace::BloomPrePassBackgroundColorsGradient::EvaluateColor(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColorsGradient::EvaluateColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EvaluateColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method, t);
}
// Autogenerated method: BloomPrePassBackgroundColorsGradient.UpdatePixels
void GlobalNamespace::BloomPrePassBackgroundColorsGradient::UpdatePixels(Unity::Collections::NativeArray_1<UnityEngine::Color32> pixels, int numberOfPixels) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColorsGradient::UpdatePixels");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePixels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pixels), ::il2cpp_utils::ExtractType(numberOfPixels)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pixels, numberOfPixels);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassBackgroundColorsGradient/Element
#include "GlobalNamespace/BloomPrePassBackgroundColorsGradient_Element.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color color
UnityEngine::Color& GlobalNamespace::BloomPrePassBackgroundColorsGradient::Element::dyn_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColorsGradient::Element::dyn_color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "color"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single startT
float& GlobalNamespace::BloomPrePassBackgroundColorsGradient::Element::dyn_startT() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColorsGradient::Element::dyn_startT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startT"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single exp
float& GlobalNamespace::BloomPrePassBackgroundColorsGradient::Element::dyn_exp() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColorsGradient::Element::dyn_exp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "exp"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassBackgroundGradient
#include "GlobalNamespace/BloomPrePassBackgroundGradient.hpp"
// Including type: UnityEngine.Gradient
#include "UnityEngine/Gradient.hpp"
// Including type: Unity.Collections.NativeArray`1
#include "Unity/Collections/NativeArray_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Gradient _gradient
UnityEngine::Gradient*& GlobalNamespace::BloomPrePassBackgroundGradient::dyn__gradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundGradient::dyn__gradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gradient"))->offset;
  return *reinterpret_cast<UnityEngine::Gradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BloomPrePassBackgroundGradient.UpdatePixels
void GlobalNamespace::BloomPrePassBackgroundGradient::UpdatePixels(Unity::Collections::NativeArray_1<UnityEngine::Color32> pixels, int numberOfPixels) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundGradient::UpdatePixels");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePixels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pixels), ::il2cpp_utils::ExtractType(numberOfPixels)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pixels, numberOfPixels);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassBackgroundNonLightRenderer
#include "GlobalNamespace/BloomPrePassBackgroundNonLightRenderer.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _renderer
UnityEngine::Renderer*& GlobalNamespace::BloomPrePassBackgroundNonLightRenderer::dyn__renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundNonLightRenderer::dyn__renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderer"))->offset;
  return *reinterpret_cast<UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BloomPrePassBackgroundNonLightRenderer.get_renderer
UnityEngine::Renderer* GlobalNamespace::BloomPrePassBackgroundNonLightRenderer::get_renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundNonLightRenderer::get_renderer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Renderer*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassBackgroundNonLightRendererCore
#include "GlobalNamespace/BloomPrePassBackgroundNonLightRendererCore.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.Rendering.CommandBuffer
#include "UnityEngine/Rendering/CommandBuffer.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF22054
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _worldSpaceCameraPosID
int GlobalNamespace::BloomPrePassBackgroundNonLightRendererCore::_get__worldSpaceCameraPosID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundNonLightRendererCore::_get__worldSpaceCameraPosID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BloomPrePassBackgroundNonLightRendererCore", "_worldSpaceCameraPosID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _worldSpaceCameraPosID
void GlobalNamespace::BloomPrePassBackgroundNonLightRendererCore::_set__worldSpaceCameraPosID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundNonLightRendererCore::_set__worldSpaceCameraPosID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomPrePassBackgroundNonLightRendererCore", "_worldSpaceCameraPosID", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _keepDefaultRendering
bool& GlobalNamespace::BloomPrePassBackgroundNonLightRendererCore::dyn__keepDefaultRendering() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundNonLightRendererCore::dyn__keepDefaultRendering");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keepDefaultRendering"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useCustomMaterial
bool& GlobalNamespace::BloomPrePassBackgroundNonLightRendererCore::dyn__useCustomMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundNonLightRendererCore::dyn__useCustomMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useCustomMaterial"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _customMaterial
UnityEngine::Material*& GlobalNamespace::BloomPrePassBackgroundNonLightRendererCore::dyn__customMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundNonLightRendererCore::dyn__customMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_customMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CommandBuffer _commandBuffer
UnityEngine::Rendering::CommandBuffer*& GlobalNamespace::BloomPrePassBackgroundNonLightRendererCore::dyn__commandBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundNonLightRendererCore::dyn__commandBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_commandBuffer"))->offset;
  return *reinterpret_cast<UnityEngine::Rendering::CommandBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BloomPrePassBackgroundNonLightRendererCore.get_renderer
UnityEngine::Renderer* GlobalNamespace::BloomPrePassBackgroundNonLightRendererCore::get_renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundNonLightRendererCore::get_renderer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Renderer*, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassBackgroundNonLightRendererCore.InitIfNeeded
void GlobalNamespace::BloomPrePassBackgroundNonLightRendererCore::InitIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundNonLightRendererCore::InitIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassBackgroundNonLightRendererCore.Awake
void GlobalNamespace::BloomPrePassBackgroundNonLightRendererCore::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundNonLightRendererCore::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassBackgroundNonLightRendererCore..cctor
void GlobalNamespace::BloomPrePassBackgroundNonLightRendererCore::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundNonLightRendererCore::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BloomPrePassBackgroundNonLightRendererCore", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BloomPrePassBackgroundNonLightRendererCore.Render
void GlobalNamespace::BloomPrePassBackgroundNonLightRendererCore::Render(UnityEngine::RenderTexture* dest, UnityEngine::Matrix4x4 viewMatrix, UnityEngine::Matrix4x4 projectionMatrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundNonLightRendererCore::Render");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Render", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(viewMatrix), ::il2cpp_utils::ExtractType(projectionMatrix)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, dest, viewMatrix, projectionMatrix);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassBackgroundParticleSystemRenderer
#include "GlobalNamespace/BloomPrePassBackgroundParticleSystemRenderer.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _particleSystem
UnityEngine::ParticleSystem*& GlobalNamespace::BloomPrePassBackgroundParticleSystemRenderer::dyn__particleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundParticleSystemRenderer::dyn__particleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particleSystem"))->offset;
  return *reinterpret_cast<UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _renderer
UnityEngine::Renderer*& GlobalNamespace::BloomPrePassBackgroundParticleSystemRenderer::dyn__renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundParticleSystemRenderer::dyn__renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderer"))->offset;
  return *reinterpret_cast<UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BloomPrePassBackgroundParticleSystemRenderer.get_renderer
UnityEngine::Renderer* GlobalNamespace::BloomPrePassBackgroundParticleSystemRenderer::get_renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundParticleSystemRenderer::get_renderer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Renderer*, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassBackgroundParticleSystemRenderer.Awake
void GlobalNamespace::BloomPrePassBackgroundParticleSystemRenderer::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundParticleSystemRenderer::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BloomPrePassBackgroundTextureGradient
#include "GlobalNamespace/BloomPrePassBackgroundTextureGradient.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Unity.Collections.NativeArray`1
#include "Unity/Collections/NativeArray_1.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF22084
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _gradientTexID
int GlobalNamespace::BloomPrePassBackgroundTextureGradient::_get__gradientTexID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundTextureGradient::_get__gradientTexID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BloomPrePassBackgroundTextureGradient", "_gradientTexID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _gradientTexID
void GlobalNamespace::BloomPrePassBackgroundTextureGradient::_set__gradientTexID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundTextureGradient::_set__gradientTexID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomPrePassBackgroundTextureGradient", "_gradientTexID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF22094
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _inverseProjectionMatrixID
int GlobalNamespace::BloomPrePassBackgroundTextureGradient::_get__inverseProjectionMatrixID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundTextureGradient::_get__inverseProjectionMatrixID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BloomPrePassBackgroundTextureGradient", "_inverseProjectionMatrixID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _inverseProjectionMatrixID
void GlobalNamespace::BloomPrePassBackgroundTextureGradient::_set__inverseProjectionMatrixID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundTextureGradient::_set__inverseProjectionMatrixID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomPrePassBackgroundTextureGradient", "_inverseProjectionMatrixID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF220A4
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _cameraToWorldMatrixID
int GlobalNamespace::BloomPrePassBackgroundTextureGradient::_get__cameraToWorldMatrixID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundTextureGradient::_get__cameraToWorldMatrixID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BloomPrePassBackgroundTextureGradient", "_cameraToWorldMatrixID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _cameraToWorldMatrixID
void GlobalNamespace::BloomPrePassBackgroundTextureGradient::_set__cameraToWorldMatrixID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundTextureGradient::_set__cameraToWorldMatrixID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomPrePassBackgroundTextureGradient", "_cameraToWorldMatrixID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF220B4
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _colorID
int GlobalNamespace::BloomPrePassBackgroundTextureGradient::_get__colorID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundTextureGradient::_get__colorID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BloomPrePassBackgroundTextureGradient", "_colorID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _colorID
void GlobalNamespace::BloomPrePassBackgroundTextureGradient::_set__colorID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundTextureGradient::_set__colorID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomPrePassBackgroundTextureGradient", "_colorID", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kUseToneMappingKeyword
::Il2CppString* GlobalNamespace::BloomPrePassBackgroundTextureGradient::_get_kUseToneMappingKeyword() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundTextureGradient::_get_kUseToneMappingKeyword");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "BloomPrePassBackgroundTextureGradient", "kUseToneMappingKeyword"));
}
// Autogenerated static field setter
// Set static field: static private System.String kUseToneMappingKeyword
void GlobalNamespace::BloomPrePassBackgroundTextureGradient::_set_kUseToneMappingKeyword(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundTextureGradient::_set_kUseToneMappingKeyword");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomPrePassBackgroundTextureGradient", "kUseToneMappingKeyword", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kSkyGradientShaderName
::Il2CppString* GlobalNamespace::BloomPrePassBackgroundTextureGradient::_get_kSkyGradientShaderName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundTextureGradient::_get_kSkyGradientShaderName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "BloomPrePassBackgroundTextureGradient", "kSkyGradientShaderName"));
}
// Autogenerated static field setter
// Set static field: static private System.String kSkyGradientShaderName
void GlobalNamespace::BloomPrePassBackgroundTextureGradient::_set_kSkyGradientShaderName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundTextureGradient::_set_kSkyGradientShaderName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomPrePassBackgroundTextureGradient", "kSkyGradientShaderName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kTextureWidth
int GlobalNamespace::BloomPrePassBackgroundTextureGradient::_get_kTextureWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundTextureGradient::_get_kTextureWidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BloomPrePassBackgroundTextureGradient", "kTextureWidth"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kTextureWidth
void GlobalNamespace::BloomPrePassBackgroundTextureGradient::_set_kTextureWidth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundTextureGradient::_set_kTextureWidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomPrePassBackgroundTextureGradient", "kTextureWidth", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _tintColor
UnityEngine::Color& GlobalNamespace::BloomPrePassBackgroundTextureGradient::dyn__tintColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundTextureGradient::dyn__tintColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tintColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D _texture
UnityEngine::Texture2D*& GlobalNamespace::BloomPrePassBackgroundTextureGradient::dyn__texture() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundTextureGradient::dyn__texture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_texture"))->offset;
  return *reinterpret_cast<UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _material
UnityEngine::Material*& GlobalNamespace::BloomPrePassBackgroundTextureGradient::dyn__material() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundTextureGradient::dyn__material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_material"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BloomPrePassBackgroundTextureGradient.get_tintColor
UnityEngine::Color GlobalNamespace::BloomPrePassBackgroundTextureGradient::get_tintColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundTextureGradient::get_tintColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tintColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassBackgroundTextureGradient.set_tintColor
void GlobalNamespace::BloomPrePassBackgroundTextureGradient::set_tintColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundTextureGradient::set_tintColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tintColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BloomPrePassBackgroundTextureGradient.InitIfNeeded
void GlobalNamespace::BloomPrePassBackgroundTextureGradient::InitIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundTextureGradient::InitIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassBackgroundTextureGradient.Start
void GlobalNamespace::BloomPrePassBackgroundTextureGradient::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundTextureGradient::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassBackgroundTextureGradient.OnDestroy
void GlobalNamespace::BloomPrePassBackgroundTextureGradient::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundTextureGradient::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassBackgroundTextureGradient.UpdatePixels
void GlobalNamespace::BloomPrePassBackgroundTextureGradient::UpdatePixels(Unity::Collections::NativeArray_1<UnityEngine::Color32> pixels, int numberOfPixels) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundTextureGradient::UpdatePixels");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePixels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pixels), ::il2cpp_utils::ExtractType(numberOfPixels)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pixels, numberOfPixels);
}
// Autogenerated method: BloomPrePassBackgroundTextureGradient.UpdateGradientTexture
void GlobalNamespace::BloomPrePassBackgroundTextureGradient::UpdateGradientTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundTextureGradient::UpdateGradientTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateGradientTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassBackgroundTextureGradient..cctor
void GlobalNamespace::BloomPrePassBackgroundTextureGradient::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundTextureGradient::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BloomPrePassBackgroundTextureGradient", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BloomPrePassBackgroundTextureGradient.OnValidate
void GlobalNamespace::BloomPrePassBackgroundTextureGradient::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundTextureGradient::OnValidate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassBackgroundTextureGradient.Render
void GlobalNamespace::BloomPrePassBackgroundTextureGradient::Render(UnityEngine::RenderTexture* dest, UnityEngine::Matrix4x4 viewMatrix, UnityEngine::Matrix4x4 projectionMatrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundTextureGradient::Render");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Render", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(viewMatrix), ::il2cpp_utils::ExtractType(projectionMatrix)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, dest, viewMatrix, projectionMatrix);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassEffectContainerSO
#include "GlobalNamespace/BloomPrePassEffectContainerSO.hpp"
// Including type: BloomPrePassEffectSO
#include "GlobalNamespace/BloomPrePassEffectSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BloomPrePassEffectSO _bloomPrePassEffect
GlobalNamespace::BloomPrePassEffectSO*& GlobalNamespace::BloomPrePassEffectContainerSO::dyn__bloomPrePassEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassEffectContainerSO::dyn__bloomPrePassEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomPrePassEffect"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomPrePassEffectSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BloomPrePassEffectContainerSO.get_bloomPrePassEffect
GlobalNamespace::BloomPrePassEffectSO* GlobalNamespace::BloomPrePassEffectContainerSO::get_bloomPrePassEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassEffectContainerSO::get_bloomPrePassEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bloomPrePassEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BloomPrePassEffectSO*, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassEffectContainerSO.Init
void GlobalNamespace::BloomPrePassEffectContainerSO::Init(GlobalNamespace::BloomPrePassEffectSO* bloomPrePassEffect) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassEffectContainerSO::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bloomPrePassEffect)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bloomPrePassEffect);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassEffectSO
#include "GlobalNamespace/BloomPrePassEffectSO.hpp"
// Including type: ToneMapping
#include "GlobalNamespace/ToneMapping.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _textureWidth
int& GlobalNamespace::BloomPrePassEffectSO::dyn__textureWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassEffectSO::dyn__textureWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textureWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _textureHeight
int& GlobalNamespace::BloomPrePassEffectSO::dyn__textureHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassEffectSO::dyn__textureHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textureHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _fov
UnityEngine::Vector2& GlobalNamespace::BloomPrePassEffectSO::dyn__fov() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassEffectSO::dyn__fov");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fov"))->offset;
  return *reinterpret_cast<UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _linesWidth
float& GlobalNamespace::BloomPrePassEffectSO::dyn__linesWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassEffectSO::dyn__linesWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_linesWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BloomPrePassEffectSO.get_textureEffect
GlobalNamespace::TextureEffectSO* GlobalNamespace::BloomPrePassEffectSO::get_textureEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassEffectSO::get_textureEffect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textureEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::TextureEffectSO*, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassEffectSO.get_textureWidth
int GlobalNamespace::BloomPrePassEffectSO::get_textureWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassEffectSO::get_textureWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textureWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassEffectSO.get_textureHeight
int GlobalNamespace::BloomPrePassEffectSO::get_textureHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassEffectSO::get_textureHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textureHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassEffectSO.get_fov
UnityEngine::Vector2 GlobalNamespace::BloomPrePassEffectSO::get_fov() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassEffectSO::get_fov");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fov", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassEffectSO.get_linesWidth
float GlobalNamespace::BloomPrePassEffectSO::get_linesWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassEffectSO::get_linesWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_linesWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassEffectSO.get_toneMapping
GlobalNamespace::ToneMapping GlobalNamespace::BloomPrePassEffectSO::get_toneMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassEffectSO::get_toneMapping");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_toneMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ToneMapping, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassLight
#include "GlobalNamespace/BloomPrePassLight.hpp"
// Including type: BloomPrePassLight/LightsDataItem
#include "GlobalNamespace/BloomPrePassLight_LightsDataItem.hpp"
// Including type: BloomPrePassLightTypeSO
#include "GlobalNamespace/BloomPrePassLightTypeSO.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<BloomPrePassLightTypeSO,System.Collections.Generic.HashSet`1<BloomPrePassLight>> _bloomLightsDict
System::Collections::Generic::Dictionary_2<GlobalNamespace::BloomPrePassLightTypeSO*, System::Collections::Generic::HashSet_1<GlobalNamespace::BloomPrePassLight*>*>* GlobalNamespace::BloomPrePassLight::_get__bloomLightsDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassLight::_get__bloomLightsDict");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<GlobalNamespace::BloomPrePassLightTypeSO*, System::Collections::Generic::HashSet_1<GlobalNamespace::BloomPrePassLight*>*>*>("", "BloomPrePassLight", "_bloomLightsDict")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<BloomPrePassLightTypeSO,System.Collections.Generic.HashSet`1<BloomPrePassLight>> _bloomLightsDict
void GlobalNamespace::BloomPrePassLight::_set__bloomLightsDict(System::Collections::Generic::Dictionary_2<GlobalNamespace::BloomPrePassLightTypeSO*, System::Collections::Generic::HashSet_1<GlobalNamespace::BloomPrePassLight*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassLight::_set__bloomLightsDict");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomPrePassLight", "_bloomLightsDict", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.List`1<BloomPrePassLight/LightsDataItem> _lightsDataItems
System::Collections::Generic::List_1<GlobalNamespace::BloomPrePassLight::LightsDataItem*>* GlobalNamespace::BloomPrePassLight::_get__lightsDataItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassLight::_get__lightsDataItems");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<GlobalNamespace::BloomPrePassLight::LightsDataItem*>*>("", "BloomPrePassLight", "_lightsDataItems"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.List`1<BloomPrePassLight/LightsDataItem> _lightsDataItems
void GlobalNamespace::BloomPrePassLight::_set__lightsDataItems(System::Collections::Generic::List_1<GlobalNamespace::BloomPrePassLight::LightsDataItem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassLight::_set__lightsDataItems");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomPrePassLight", "_lightsDataItems", value));
}
// Autogenerated instance field getter
// Get instance field: private BloomPrePassLightTypeSO _lightType
GlobalNamespace::BloomPrePassLightTypeSO*& GlobalNamespace::BloomPrePassLight::dyn__lightType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassLight::dyn__lightType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightType"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomPrePassLightTypeSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomPrePassLightTypeSO _registeredWithLightType
GlobalNamespace::BloomPrePassLightTypeSO*& GlobalNamespace::BloomPrePassLight::dyn__registeredWithLightType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassLight::dyn__registeredWithLightType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_registeredWithLightType"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomPrePassLightTypeSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isRegistered
bool& GlobalNamespace::BloomPrePassLight::dyn__isRegistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassLight::dyn__isRegistered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isRegistered"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isBeingDestroyed
bool& GlobalNamespace::BloomPrePassLight::dyn__isBeingDestroyed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassLight::dyn__isBeingDestroyed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isBeingDestroyed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BloomPrePassLight.get_bloomLightsDict
System::Collections::Generic::Dictionary_2<GlobalNamespace::BloomPrePassLightTypeSO*, System::Collections::Generic::HashSet_1<GlobalNamespace::BloomPrePassLight*>*>* GlobalNamespace::BloomPrePassLight::get_bloomLightsDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassLight::get_bloomLightsDict");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BloomPrePassLight", "get_bloomLightsDict", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::Dictionary_2<GlobalNamespace::BloomPrePassLightTypeSO*, System::Collections::Generic::HashSet_1<GlobalNamespace::BloomPrePassLight*>*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BloomPrePassLight.get_lightsDataItems
System::Collections::Generic::List_1<GlobalNamespace::BloomPrePassLight::LightsDataItem*>* GlobalNamespace::BloomPrePassLight::get_lightsDataItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassLight::get_lightsDataItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BloomPrePassLight", "get_lightsDataItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<GlobalNamespace::BloomPrePassLight::LightsDataItem*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BloomPrePassLight.get_isDirty
bool GlobalNamespace::BloomPrePassLight::get_isDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassLight::get_isDirty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassLight.OnEnable
void GlobalNamespace::BloomPrePassLight::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassLight::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassLight.OnDisable
void GlobalNamespace::BloomPrePassLight::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassLight::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassLight.OnDestroy
void GlobalNamespace::BloomPrePassLight::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassLight::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassLight.RegisterLight
void GlobalNamespace::BloomPrePassLight::RegisterLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassLight::RegisterLight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterLight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassLight.UnregisterLight
void GlobalNamespace::BloomPrePassLight::UnregisterLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassLight::UnregisterLight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterLight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassLight.DidRegisterLight
void GlobalNamespace::BloomPrePassLight::DidRegisterLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassLight::DidRegisterLight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidRegisterLight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassLight.FillMeshData
void GlobalNamespace::BloomPrePassLight::FillMeshData(int lightNum, ::ArrayW<UnityEngine::Vector3> vertices, ::ArrayW<UnityEngine::Color> colors, ::ArrayW<UnityEngine::Vector4> viewPos, UnityEngine::Matrix4x4 viewMatrix, UnityEngine::Matrix4x4 projectionMatrix, float lineWidth) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassLight::FillMeshData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillMeshData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lightNum), ::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(colors), ::il2cpp_utils::ExtractType(viewPos), ::il2cpp_utils::ExtractType(viewMatrix), ::il2cpp_utils::ExtractType(projectionMatrix), ::il2cpp_utils::ExtractType(lineWidth)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lightNum, vertices, colors, viewPos, viewMatrix, projectionMatrix, lineWidth);
}
// Autogenerated method: BloomPrePassLight.Refresh
void GlobalNamespace::BloomPrePassLight::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassLight::Refresh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassLight..cctor
void GlobalNamespace::BloomPrePassLight::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassLight::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BloomPrePassLight", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassLight/LightsDataItem
#include "GlobalNamespace/BloomPrePassLight_LightsDataItem.hpp"
// Including type: BloomPrePassLightTypeSO
#include "GlobalNamespace/BloomPrePassLightTypeSO.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly BloomPrePassLightTypeSO lightType
GlobalNamespace::BloomPrePassLightTypeSO*& GlobalNamespace::BloomPrePassLight::LightsDataItem::dyn_lightType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassLight::LightsDataItem::dyn_lightType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lightType"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomPrePassLightTypeSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Collections.Generic.HashSet`1<BloomPrePassLight> lights
System::Collections::Generic::HashSet_1<GlobalNamespace::BloomPrePassLight*>*& GlobalNamespace::BloomPrePassLight::LightsDataItem::dyn_lights() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassLight::LightsDataItem::dyn_lights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lights"))->offset;
  return *reinterpret_cast<System::Collections::Generic::HashSet_1<GlobalNamespace::BloomPrePassLight*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassLightTypeSO
#include "GlobalNamespace/BloomPrePassLightTypeSO.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _renderingPriority
int& GlobalNamespace::BloomPrePassLightTypeSO::dyn__renderingPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassLightTypeSO::dyn__renderingPriority");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderingPriority"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _material
UnityEngine::Material*& GlobalNamespace::BloomPrePassLightTypeSO::dyn__material() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassLightTypeSO::dyn__material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_material"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BloomPrePassLightTypeSO.get_renderingPriority
int GlobalNamespace::BloomPrePassLightTypeSO::get_renderingPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassLightTypeSO::get_renderingPriority");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_renderingPriority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassLightTypeSO.get_material
UnityEngine::Material* GlobalNamespace::BloomPrePassLightTypeSO::get_material() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassLightTypeSO::get_material");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_material", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Material*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassLightsUpdateSystem
#include "GlobalNamespace/BloomPrePassLightsUpdateSystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BloomPrePassLightsUpdateSystem.LateUpdate
void GlobalNamespace::BloomPrePassLightsUpdateSystem::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassLightsUpdateSystem::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassNonLightPass
#include "GlobalNamespace/BloomPrePassNonLightPass.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<BloomPrePassNonLightPass> _bloomPrePassAfterBlurList
System::Collections::Generic::List_1<GlobalNamespace::BloomPrePassNonLightPass*>* GlobalNamespace::BloomPrePassNonLightPass::_get__bloomPrePassAfterBlurList() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassNonLightPass::_get__bloomPrePassAfterBlurList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<GlobalNamespace::BloomPrePassNonLightPass*>*>("", "BloomPrePassNonLightPass", "_bloomPrePassAfterBlurList"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<BloomPrePassNonLightPass> _bloomPrePassAfterBlurList
void GlobalNamespace::BloomPrePassNonLightPass::_set__bloomPrePassAfterBlurList(System::Collections::Generic::List_1<GlobalNamespace::BloomPrePassNonLightPass*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassNonLightPass::_set__bloomPrePassAfterBlurList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomPrePassNonLightPass", "_bloomPrePassAfterBlurList", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<BloomPrePassNonLightPass> _bloomPrePassBeforeBlurList
System::Collections::Generic::List_1<GlobalNamespace::BloomPrePassNonLightPass*>* GlobalNamespace::BloomPrePassNonLightPass::_get__bloomPrePassBeforeBlurList() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassNonLightPass::_get__bloomPrePassBeforeBlurList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<GlobalNamespace::BloomPrePassNonLightPass*>*>("", "BloomPrePassNonLightPass", "_bloomPrePassBeforeBlurList"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<BloomPrePassNonLightPass> _bloomPrePassBeforeBlurList
void GlobalNamespace::BloomPrePassNonLightPass::_set__bloomPrePassBeforeBlurList(System::Collections::Generic::List_1<GlobalNamespace::BloomPrePassNonLightPass*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassNonLightPass::_set__bloomPrePassBeforeBlurList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomPrePassNonLightPass", "_bloomPrePassBeforeBlurList", value));
}
// Autogenerated instance field getter
// Get instance field: private BloomPrePassNonLightPass/ExecutionTimeType _executionTimeType
GlobalNamespace::BloomPrePassNonLightPass::ExecutionTimeType& GlobalNamespace::BloomPrePassNonLightPass::dyn__executionTimeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassNonLightPass::dyn__executionTimeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_executionTimeType"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomPrePassNonLightPass::ExecutionTimeType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomPrePassNonLightPass/ExecutionTimeType _registeredExecutionTimeType
GlobalNamespace::BloomPrePassNonLightPass::ExecutionTimeType& GlobalNamespace::BloomPrePassNonLightPass::dyn__registeredExecutionTimeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassNonLightPass::dyn__registeredExecutionTimeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_registeredExecutionTimeType"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomPrePassNonLightPass::ExecutionTimeType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BloomPrePassNonLightPass.get_executionTimeType
GlobalNamespace::BloomPrePassNonLightPass::ExecutionTimeType GlobalNamespace::BloomPrePassNonLightPass::get_executionTimeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassNonLightPass::get_executionTimeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_executionTimeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BloomPrePassNonLightPass::ExecutionTimeType, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassNonLightPass.get_bloomPrePassAfterBlurList
System::Collections::Generic::List_1<GlobalNamespace::BloomPrePassNonLightPass*>* GlobalNamespace::BloomPrePassNonLightPass::get_bloomPrePassAfterBlurList() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassNonLightPass::get_bloomPrePassAfterBlurList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BloomPrePassNonLightPass", "get_bloomPrePassAfterBlurList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<GlobalNamespace::BloomPrePassNonLightPass*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BloomPrePassNonLightPass.get_bloomPrePassBeforeBlurList
System::Collections::Generic::List_1<GlobalNamespace::BloomPrePassNonLightPass*>* GlobalNamespace::BloomPrePassNonLightPass::get_bloomPrePassBeforeBlurList() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassNonLightPass::get_bloomPrePassBeforeBlurList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BloomPrePassNonLightPass", "get_bloomPrePassBeforeBlurList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<GlobalNamespace::BloomPrePassNonLightPass*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BloomPrePassNonLightPass.OnEnable
void GlobalNamespace::BloomPrePassNonLightPass::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassNonLightPass::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassNonLightPass.OnDisable
void GlobalNamespace::BloomPrePassNonLightPass::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassNonLightPass::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassNonLightPass.Register
void GlobalNamespace::BloomPrePassNonLightPass::Register() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassNonLightPass::Register");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Register", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassNonLightPass.Unregister
void GlobalNamespace::BloomPrePassNonLightPass::Unregister() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassNonLightPass::Unregister");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unregister", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassNonLightPass.OnValidate
void GlobalNamespace::BloomPrePassNonLightPass::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassNonLightPass::OnValidate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassNonLightPass.Render
void GlobalNamespace::BloomPrePassNonLightPass::Render(UnityEngine::RenderTexture* dest, UnityEngine::Matrix4x4 viewMatrix, UnityEngine::Matrix4x4 projectionMatrix) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassNonLightPass::Render");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Render", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(viewMatrix), ::il2cpp_utils::ExtractType(projectionMatrix)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, dest, viewMatrix, projectionMatrix);
}
// Autogenerated method: BloomPrePassNonLightPass..cctor
void GlobalNamespace::BloomPrePassNonLightPass::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassNonLightPass::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BloomPrePassNonLightPass", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassNonLightPass/ExecutionTimeType
#include "GlobalNamespace/BloomPrePassNonLightPass.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public BloomPrePassNonLightPass/ExecutionTimeType None
GlobalNamespace::BloomPrePassNonLightPass::ExecutionTimeType GlobalNamespace::BloomPrePassNonLightPass::ExecutionTimeType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassNonLightPass::ExecutionTimeType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BloomPrePassNonLightPass::ExecutionTimeType>("", "BloomPrePassNonLightPass/ExecutionTimeType", "None"));
}
// Autogenerated static field setter
// Set static field: static public BloomPrePassNonLightPass/ExecutionTimeType None
void GlobalNamespace::BloomPrePassNonLightPass::ExecutionTimeType::_set_None(GlobalNamespace::BloomPrePassNonLightPass::ExecutionTimeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassNonLightPass::ExecutionTimeType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomPrePassNonLightPass/ExecutionTimeType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public BloomPrePassNonLightPass/ExecutionTimeType BeforeBlur
GlobalNamespace::BloomPrePassNonLightPass::ExecutionTimeType GlobalNamespace::BloomPrePassNonLightPass::ExecutionTimeType::_get_BeforeBlur() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassNonLightPass::ExecutionTimeType::_get_BeforeBlur");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BloomPrePassNonLightPass::ExecutionTimeType>("", "BloomPrePassNonLightPass/ExecutionTimeType", "BeforeBlur"));
}
// Autogenerated static field setter
// Set static field: static public BloomPrePassNonLightPass/ExecutionTimeType BeforeBlur
void GlobalNamespace::BloomPrePassNonLightPass::ExecutionTimeType::_set_BeforeBlur(GlobalNamespace::BloomPrePassNonLightPass::ExecutionTimeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassNonLightPass::ExecutionTimeType::_set_BeforeBlur");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomPrePassNonLightPass/ExecutionTimeType", "BeforeBlur", value));
}
// Autogenerated static field getter
// Get static field: static public BloomPrePassNonLightPass/ExecutionTimeType AfterBlur
GlobalNamespace::BloomPrePassNonLightPass::ExecutionTimeType GlobalNamespace::BloomPrePassNonLightPass::ExecutionTimeType::_get_AfterBlur() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassNonLightPass::ExecutionTimeType::_get_AfterBlur");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BloomPrePassNonLightPass::ExecutionTimeType>("", "BloomPrePassNonLightPass/ExecutionTimeType", "AfterBlur"));
}
// Autogenerated static field setter
// Set static field: static public BloomPrePassNonLightPass/ExecutionTimeType AfterBlur
void GlobalNamespace::BloomPrePassNonLightPass::ExecutionTimeType::_set_AfterBlur(GlobalNamespace::BloomPrePassNonLightPass::ExecutionTimeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassNonLightPass::ExecutionTimeType::_set_AfterBlur");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomPrePassNonLightPass/ExecutionTimeType", "AfterBlur", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::BloomPrePassNonLightPass::ExecutionTimeType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassNonLightPass::ExecutionTimeType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassRenderDataSO
#include "GlobalNamespace/BloomPrePassRenderDataSO.hpp"
// Including type: BloomPrePassRenderDataSO/Data
#include "GlobalNamespace/BloomPrePassRenderDataSO_Data.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly BloomPrePassRenderDataSO/Data data
GlobalNamespace::BloomPrePassRenderDataSO::Data*& GlobalNamespace::BloomPrePassRenderDataSO::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRenderDataSO::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomPrePassRenderDataSO::Data**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassRenderDataSO/Data
#include "GlobalNamespace/BloomPrePassRenderDataSO_Data.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.RenderTexture bloomPrePassRenderTexture
UnityEngine::RenderTexture*& GlobalNamespace::BloomPrePassRenderDataSO::Data::dyn_bloomPrePassRenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRenderDataSO::Data::dyn_bloomPrePassRenderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bloomPrePassRenderTexture"))->offset;
  return *reinterpret_cast<UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 textureToScreenRatio
UnityEngine::Vector2& GlobalNamespace::BloomPrePassRenderDataSO::Data::dyn_textureToScreenRatio() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRenderDataSO::Data::dyn_textureToScreenRatio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "textureToScreenRatio"))->offset;
  return *reinterpret_cast<UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Matrix4x4 viewMatrix
UnityEngine::Matrix4x4& GlobalNamespace::BloomPrePassRenderDataSO::Data::dyn_viewMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRenderDataSO::Data::dyn_viewMatrix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "viewMatrix"))->offset;
  return *reinterpret_cast<UnityEngine::Matrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Matrix4x4 projectionMatrix
UnityEngine::Matrix4x4& GlobalNamespace::BloomPrePassRenderDataSO::Data::dyn_projectionMatrix() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRenderDataSO::Data::dyn_projectionMatrix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "projectionMatrix"))->offset;
  return *reinterpret_cast<UnityEngine::Matrix4x4*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single stereoCameraEyeOffset
float& GlobalNamespace::BloomPrePassRenderDataSO::Data::dyn_stereoCameraEyeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRenderDataSO::Data::dyn_stereoCameraEyeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stereoCameraEyeOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ToneMapping toneMapping
GlobalNamespace::ToneMapping& GlobalNamespace::BloomPrePassRenderDataSO::Data::dyn_toneMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRenderDataSO::Data::dyn_toneMapping");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toneMapping"))->offset;
  return *reinterpret_cast<GlobalNamespace::ToneMapping*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassRendererSO
#include "GlobalNamespace/BloomPrePassRendererSO.hpp"
// Including type: BloomPrePassRendererSO/PreallocationData
#include "GlobalNamespace/BloomPrePassRendererSO_PreallocationData.hpp"
// Including type: BloomPrePassRendererSO/LightsRenderingData
#include "GlobalNamespace/BloomPrePassRendererSO_LightsRenderingData.hpp"
// Including type: BloomFogSO
#include "GlobalNamespace/BloomFogSO.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: BloomPrePassLightTypeSO
#include "GlobalNamespace/BloomPrePassLightTypeSO.hpp"
// Including type: UnityEngine.Rendering.CommandBuffer
#include "UnityEngine/Rendering/CommandBuffer.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
// Including type: IBloomPrePassParams
#include "GlobalNamespace/IBloomPrePassParams.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: ToneMapping
#include "GlobalNamespace/ToneMapping.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF2219C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _vertexTransformMatrixID
int GlobalNamespace::BloomPrePassRendererSO::_get__vertexTransformMatrixID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::_get__vertexTransformMatrixID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BloomPrePassRendererSO", "_vertexTransformMatrixID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _vertexTransformMatrixID
void GlobalNamespace::BloomPrePassRendererSO::_set__vertexTransformMatrixID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::_set__vertexTransformMatrixID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomPrePassRendererSO", "_vertexTransformMatrixID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF221AC
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _bloomPrePassTextureID
int GlobalNamespace::BloomPrePassRendererSO::_get__bloomPrePassTextureID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::_get__bloomPrePassTextureID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BloomPrePassRendererSO", "_bloomPrePassTextureID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _bloomPrePassTextureID
void GlobalNamespace::BloomPrePassRendererSO::_set__bloomPrePassTextureID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::_set__bloomPrePassTextureID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomPrePassRendererSO", "_bloomPrePassTextureID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF221BC
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _stereoCameraEyeOffsetID
int GlobalNamespace::BloomPrePassRendererSO::_get__stereoCameraEyeOffsetID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::_get__stereoCameraEyeOffsetID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BloomPrePassRendererSO", "_stereoCameraEyeOffsetID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _stereoCameraEyeOffsetID
void GlobalNamespace::BloomPrePassRendererSO::_set__stereoCameraEyeOffsetID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::_set__stereoCameraEyeOffsetID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomPrePassRendererSO", "_stereoCameraEyeOffsetID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF221CC
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _customFogTextureToScreenRatioID
int GlobalNamespace::BloomPrePassRendererSO::_get__customFogTextureToScreenRatioID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::_get__customFogTextureToScreenRatioID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BloomPrePassRendererSO", "_customFogTextureToScreenRatioID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _customFogTextureToScreenRatioID
void GlobalNamespace::BloomPrePassRendererSO::_set__customFogTextureToScreenRatioID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::_set__customFogTextureToScreenRatioID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BloomPrePassRendererSO", "_customFogTextureToScreenRatioID", value));
}
// Autogenerated instance field getter
// Get instance field: private BloomFogSO _bloomFog
GlobalNamespace::BloomFogSO*& GlobalNamespace::BloomPrePassRendererSO::dyn__bloomFog() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::dyn__bloomFog");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomFog"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomFogSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomPrePassRendererSO/PreallocationData[] _preallocationData
::ArrayW<GlobalNamespace::BloomPrePassRendererSO::PreallocationData*>& GlobalNamespace::BloomPrePassRendererSO::dyn__preallocationData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::dyn__preallocationData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_preallocationData"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::BloomPrePassRendererSO::PreallocationData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<BloomPrePassLightTypeSO,BloomPrePassRendererSO/LightsRenderingData> _lightsRenderingData
System::Collections::Generic::Dictionary_2<GlobalNamespace::BloomPrePassLightTypeSO*, GlobalNamespace::BloomPrePassRendererSO::LightsRenderingData*>*& GlobalNamespace::BloomPrePassRendererSO::dyn__lightsRenderingData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::dyn__lightsRenderingData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightsRenderingData"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<GlobalNamespace::BloomPrePassLightTypeSO*, GlobalNamespace::BloomPrePassRendererSO::LightsRenderingData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rendering.CommandBuffer _commandBuffer
UnityEngine::Rendering::CommandBuffer*& GlobalNamespace::BloomPrePassRendererSO::dyn__commandBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::dyn__commandBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_commandBuffer"))->offset;
  return *reinterpret_cast<UnityEngine::Rendering::CommandBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
bool& GlobalNamespace::BloomPrePassRendererSO::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D _blackTexture
UnityEngine::Texture2D*& GlobalNamespace::BloomPrePassRendererSO::dyn__blackTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::dyn__blackTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blackTexture"))->offset;
  return *reinterpret_cast<UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BloomPrePassRendererSO.OnDisable
void GlobalNamespace::BloomPrePassRendererSO::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassRendererSO.Init
void GlobalNamespace::BloomPrePassRendererSO::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassRendererSO.Cleanup
void GlobalNamespace::BloomPrePassRendererSO::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::Cleanup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cleanup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassRendererSO.RenderAndSetData
void GlobalNamespace::BloomPrePassRendererSO::RenderAndSetData(UnityEngine::Vector3 cameraPos, UnityEngine::Matrix4x4 projectionMatrix, UnityEngine::Matrix4x4 viewMatrix, float stereoCameraEyeOffset, GlobalNamespace::IBloomPrePassParams* bloomPrePassParams, UnityEngine::RenderTexture* dest, ByRef<UnityEngine::Vector2> textureToScreenRatio, ByRef<GlobalNamespace::ToneMapping> toneMapping) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::RenderAndSetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderAndSetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraPos), ::il2cpp_utils::ExtractType(projectionMatrix), ::il2cpp_utils::ExtractType(viewMatrix), ::il2cpp_utils::ExtractType(stereoCameraEyeOffset), ::il2cpp_utils::ExtractType(bloomPrePassParams), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2&>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ToneMapping&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cameraPos, projectionMatrix, viewMatrix, stereoCameraEyeOffset, bloomPrePassParams, dest, byref(textureToScreenRatio), byref(toneMapping));
}
// Autogenerated method: BloomPrePassRendererSO.SetDataToShaders
void GlobalNamespace::BloomPrePassRendererSO::SetDataToShaders(float stereoCameraEyeOffset, UnityEngine::Vector2 textureToScreenRatio, UnityEngine::Texture* bloomFogTexture, GlobalNamespace::ToneMapping toneMapping) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::SetDataToShaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BloomPrePassRendererSO", "SetDataToShaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stereoCameraEyeOffset), ::il2cpp_utils::ExtractType(textureToScreenRatio), ::il2cpp_utils::ExtractType(bloomFogTexture), ::il2cpp_utils::ExtractType(toneMapping)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stereoCameraEyeOffset, textureToScreenRatio, bloomFogTexture, toneMapping);
}
// Autogenerated method: BloomPrePassRendererSO.SetCustomStereoCameraEyeOffset
void GlobalNamespace::BloomPrePassRendererSO::SetCustomStereoCameraEyeOffset(float stereoCameraEyeOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::SetCustomStereoCameraEyeOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCustomStereoCameraEyeOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stereoCameraEyeOffset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, stereoCameraEyeOffset);
}
// Autogenerated method: BloomPrePassRendererSO.CreateBloomPrePassRenderTextureIfNeeded
UnityEngine::RenderTexture* GlobalNamespace::BloomPrePassRendererSO::CreateBloomPrePassRenderTextureIfNeeded(UnityEngine::RenderTexture* renderTexture, GlobalNamespace::IBloomPrePassParams* bloomPrePassParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::CreateBloomPrePassRenderTextureIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateBloomPrePassRenderTextureIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderTexture), ::il2cpp_utils::ExtractType(bloomPrePassParams)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RenderTexture*, false>(this, ___internal__method, renderTexture, bloomPrePassParams);
}
// Autogenerated method: BloomPrePassRendererSO.EnableBloomFog
void GlobalNamespace::BloomPrePassRendererSO::EnableBloomFog() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::EnableBloomFog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableBloomFog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassRendererSO.DisableBloomFog
void GlobalNamespace::BloomPrePassRendererSO::DisableBloomFog() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::DisableBloomFog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableBloomFog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassRendererSO.UpdateBloomFogParams
void GlobalNamespace::BloomPrePassRendererSO::UpdateBloomFogParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::UpdateBloomFogParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBloomFogParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassRendererSO.GetCameraParams
void GlobalNamespace::BloomPrePassRendererSO::GetCameraParams(UnityEngine::Camera* camera, ByRef<UnityEngine::Matrix4x4> projectionMatrix, ByRef<UnityEngine::Matrix4x4> viewMatrix, ByRef<float> stereoCameraEyeOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::GetCameraParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCameraParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Matrix4x4&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, camera, byref(projectionMatrix), byref(viewMatrix), byref(stereoCameraEyeOffset));
}
// Autogenerated method: BloomPrePassRendererSO.RenderAllLights
void GlobalNamespace::BloomPrePassRendererSO::RenderAllLights(UnityEngine::Matrix4x4 viewMatrix, UnityEngine::Matrix4x4 projectionMatrix, float linesWidth) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::RenderAllLights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderAllLights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewMatrix), ::il2cpp_utils::ExtractType(projectionMatrix), ::il2cpp_utils::ExtractType(linesWidth)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, viewMatrix, projectionMatrix, linesWidth);
}
// Autogenerated method: BloomPrePassRendererSO.PrepareLightsMeshRendering
void GlobalNamespace::BloomPrePassRendererSO::PrepareLightsMeshRendering(GlobalNamespace::BloomPrePassRendererSO::LightsRenderingData* data, int numberOfLights) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::PrepareLightsMeshRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareLightsMeshRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(numberOfLights)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data, numberOfLights);
}
// Autogenerated method: BloomPrePassRendererSO.MatrixLerp
UnityEngine::Matrix4x4 GlobalNamespace::BloomPrePassRendererSO::MatrixLerp(UnityEngine::Matrix4x4 from, UnityEngine::Matrix4x4 to, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::MatrixLerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MatrixLerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Matrix4x4, false>(this, ___internal__method, from, to, t);
}
// Autogenerated method: BloomPrePassRendererSO..cctor
void GlobalNamespace::BloomPrePassRendererSO::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BloomPrePassRendererSO", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: BloomPrePassRendererSO.OnEnable
void GlobalNamespace::BloomPrePassRendererSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassRendererSO/PreallocationData
#include "GlobalNamespace/BloomPrePassRendererSO_PreallocationData.hpp"
// Including type: BloomPrePassLightTypeSO
#include "GlobalNamespace/BloomPrePassLightTypeSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public BloomPrePassLightTypeSO lightType
GlobalNamespace::BloomPrePassLightTypeSO*& GlobalNamespace::BloomPrePassRendererSO::PreallocationData::dyn_lightType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::PreallocationData::dyn_lightType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lightType"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomPrePassLightTypeSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 preallocateCount
int& GlobalNamespace::BloomPrePassRendererSO::PreallocationData::dyn_preallocateCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::PreallocationData::dyn_preallocateCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "preallocateCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassRendererSO/LightsRenderingData
#include "GlobalNamespace/BloomPrePassRendererSO_LightsRenderingData.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Mesh mesh
UnityEngine::Mesh*& GlobalNamespace::BloomPrePassRendererSO::LightsRenderingData::dyn_mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::LightsRenderingData::dyn_mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mesh"))->offset;
  return *reinterpret_cast<UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3[] vertices
::ArrayW<UnityEngine::Vector3>& GlobalNamespace::BloomPrePassRendererSO::LightsRenderingData::dyn_vertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::LightsRenderingData::dyn_vertices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vertices"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color[] colors
::ArrayW<UnityEngine::Color>& GlobalNamespace::BloomPrePassRendererSO::LightsRenderingData::dyn_colors() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::LightsRenderingData::dyn_colors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colors"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector4[] viewPos
::ArrayW<UnityEngine::Vector4>& GlobalNamespace::BloomPrePassRendererSO::LightsRenderingData::dyn_viewPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassRendererSO::LightsRenderingData::dyn_viewPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "viewPos"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Vector4>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IBloomPrePassParams
#include "GlobalNamespace/IBloomPrePassParams.hpp"
// Including type: TextureEffectSO
#include "GlobalNamespace/TextureEffectSO.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: ToneMapping
#include "GlobalNamespace/ToneMapping.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IBloomPrePassParams.get_textureEffect
GlobalNamespace::TextureEffectSO* GlobalNamespace::IBloomPrePassParams::get_textureEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBloomPrePassParams::get_textureEffect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textureEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::TextureEffectSO*, false>(this, ___internal__method);
}
// Autogenerated method: IBloomPrePassParams.get_textureWidth
int GlobalNamespace::IBloomPrePassParams::get_textureWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBloomPrePassParams::get_textureWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textureWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: IBloomPrePassParams.get_textureHeight
int GlobalNamespace::IBloomPrePassParams::get_textureHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBloomPrePassParams::get_textureHeight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textureHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: IBloomPrePassParams.get_fov
UnityEngine::Vector2 GlobalNamespace::IBloomPrePassParams::get_fov() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBloomPrePassParams::get_fov");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fov", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: IBloomPrePassParams.get_linesWidth
float GlobalNamespace::IBloomPrePassParams::get_linesWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBloomPrePassParams::get_linesWidth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_linesWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IBloomPrePassParams.get_toneMapping
GlobalNamespace::ToneMapping GlobalNamespace::IBloomPrePassParams::get_toneMapping() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IBloomPrePassParams::get_toneMapping");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_toneMapping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ToneMapping, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Parametric3SliceSpriteController
#include "GlobalNamespace/Parametric3SliceSpriteController.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kMaxWidth
float GlobalNamespace::Parametric3SliceSpriteController::_get_kMaxWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::_get_kMaxWidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "Parametric3SliceSpriteController", "kMaxWidth"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kMaxWidth
void GlobalNamespace::Parametric3SliceSpriteController::_set_kMaxWidth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::_set_kMaxWidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Parametric3SliceSpriteController", "kMaxWidth", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kMaxLength
float GlobalNamespace::Parametric3SliceSpriteController::_get_kMaxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::_get_kMaxLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "Parametric3SliceSpriteController", "kMaxLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kMaxLength
void GlobalNamespace::Parametric3SliceSpriteController::_set_kMaxLength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::_set_kMaxLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Parametric3SliceSpriteController", "kMaxLength", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF22244
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _colorID
int GlobalNamespace::Parametric3SliceSpriteController::_get__colorID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::_get__colorID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "Parametric3SliceSpriteController", "_colorID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _colorID
void GlobalNamespace::Parametric3SliceSpriteController::_set__colorID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::_set__colorID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Parametric3SliceSpriteController", "_colorID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF22254
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _sizeParamsID
int GlobalNamespace::Parametric3SliceSpriteController::_get__sizeParamsID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::_get__sizeParamsID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "Parametric3SliceSpriteController", "_sizeParamsID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _sizeParamsID
void GlobalNamespace::Parametric3SliceSpriteController::_set__sizeParamsID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::_set__sizeParamsID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Parametric3SliceSpriteController", "_sizeParamsID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF22264
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _alphaStartID
int GlobalNamespace::Parametric3SliceSpriteController::_get__alphaStartID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::_get__alphaStartID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "Parametric3SliceSpriteController", "_alphaStartID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _alphaStartID
void GlobalNamespace::Parametric3SliceSpriteController::_set__alphaStartID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::_set__alphaStartID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Parametric3SliceSpriteController", "_alphaStartID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF22274
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _alphaEndID
int GlobalNamespace::Parametric3SliceSpriteController::_get__alphaEndID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::_get__alphaEndID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "Parametric3SliceSpriteController", "_alphaEndID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _alphaEndID
void GlobalNamespace::Parametric3SliceSpriteController::_set__alphaEndID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::_set__alphaEndID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Parametric3SliceSpriteController", "_alphaEndID", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.MaterialPropertyBlock _materialPropertyBlock
UnityEngine::MaterialPropertyBlock* GlobalNamespace::Parametric3SliceSpriteController::_get__materialPropertyBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::_get__materialPropertyBlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::MaterialPropertyBlock*>("", "Parametric3SliceSpriteController", "_materialPropertyBlock"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.MaterialPropertyBlock _materialPropertyBlock
void GlobalNamespace::Parametric3SliceSpriteController::_set__materialPropertyBlock(UnityEngine::MaterialPropertyBlock* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::_set__materialPropertyBlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Parametric3SliceSpriteController", "_materialPropertyBlock", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.Mesh _mesh
UnityEngine::Mesh* GlobalNamespace::Parametric3SliceSpriteController::_get__mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::_get__mesh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::Mesh*>("", "Parametric3SliceSpriteController", "_mesh"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.Mesh _mesh
void GlobalNamespace::Parametric3SliceSpriteController::_set__mesh(UnityEngine::Mesh* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::_set__mesh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Parametric3SliceSpriteController", "_mesh", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 _instanceCount
int GlobalNamespace::Parametric3SliceSpriteController::_get__instanceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::_get__instanceCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "Parametric3SliceSpriteController", "_instanceCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _instanceCount
void GlobalNamespace::Parametric3SliceSpriteController::_set__instanceCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::_set__instanceCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Parametric3SliceSpriteController", "_instanceCount", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _widthMultiplier
float& GlobalNamespace::Parametric3SliceSpriteController::dyn__widthMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::dyn__widthMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_widthMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single width
float& GlobalNamespace::Parametric3SliceSpriteController::dyn_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::dyn_width");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "width"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single length
float& GlobalNamespace::Parametric3SliceSpriteController::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::dyn_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single center
float& GlobalNamespace::Parametric3SliceSpriteController::dyn_center() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::dyn_center");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "center"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color color
UnityEngine::Color& GlobalNamespace::Parametric3SliceSpriteController::dyn_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::dyn_color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "color"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single alphaMultiplier
float& GlobalNamespace::Parametric3SliceSpriteController::dyn_alphaMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::dyn_alphaMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "alphaMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minAlpha
float& GlobalNamespace::Parametric3SliceSpriteController::dyn_minAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::dyn_minAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minAlpha"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single alphaStart
float& GlobalNamespace::Parametric3SliceSpriteController::dyn_alphaStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::dyn_alphaStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "alphaStart"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single alphaEnd
float& GlobalNamespace::Parametric3SliceSpriteController::dyn_alphaEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::dyn_alphaEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "alphaEnd"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer _meshRenderer
UnityEngine::MeshRenderer*& GlobalNamespace::Parametric3SliceSpriteController::dyn__meshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::dyn__meshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshRenderer"))->offset;
  return *reinterpret_cast<UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter _meshFilter
UnityEngine::MeshFilter*& GlobalNamespace::Parametric3SliceSpriteController::dyn__meshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::dyn__meshFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshFilter"))->offset;
  return *reinterpret_cast<UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isInitialized
bool& GlobalNamespace::Parametric3SliceSpriteController::dyn__isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::dyn__isInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Parametric3SliceSpriteController.Awake
void GlobalNamespace::Parametric3SliceSpriteController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Parametric3SliceSpriteController.Start
void GlobalNamespace::Parametric3SliceSpriteController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Parametric3SliceSpriteController.OnEnable
void GlobalNamespace::Parametric3SliceSpriteController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Parametric3SliceSpriteController.OnDisable
void GlobalNamespace::Parametric3SliceSpriteController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Parametric3SliceSpriteController.OnDestroy
void GlobalNamespace::Parametric3SliceSpriteController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Parametric3SliceSpriteController.Init
void GlobalNamespace::Parametric3SliceSpriteController::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Parametric3SliceSpriteController.CreateMesh
UnityEngine::Mesh* GlobalNamespace::Parametric3SliceSpriteController::CreateMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::CreateMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Mesh*, false>(this, ___internal__method);
}
// Autogenerated method: Parametric3SliceSpriteController.Refresh
void GlobalNamespace::Parametric3SliceSpriteController::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Parametric3SliceSpriteController..cctor
void GlobalNamespace::Parametric3SliceSpriteController::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Parametric3SliceSpriteController::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Parametric3SliceSpriteController", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ParametricBoxController
#include "GlobalNamespace/ParametricBoxController.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.MaterialPropertyBlock _materialPropertyBlock
UnityEngine::MaterialPropertyBlock* GlobalNamespace::ParametricBoxController::_get__materialPropertyBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxController::_get__materialPropertyBlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::MaterialPropertyBlock*>("", "ParametricBoxController", "_materialPropertyBlock"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.MaterialPropertyBlock _materialPropertyBlock
void GlobalNamespace::ParametricBoxController::_set__materialPropertyBlock(UnityEngine::MaterialPropertyBlock* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxController::_set__materialPropertyBlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ParametricBoxController", "_materialPropertyBlock", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF2232C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _colorID
int GlobalNamespace::ParametricBoxController::_get__colorID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxController::_get__colorID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ParametricBoxController", "_colorID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _colorID
void GlobalNamespace::ParametricBoxController::_set__colorID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxController::_set__colorID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ParametricBoxController", "_colorID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF2233C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _alphaStartID
int GlobalNamespace::ParametricBoxController::_get__alphaStartID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxController::_get__alphaStartID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ParametricBoxController", "_alphaStartID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _alphaStartID
void GlobalNamespace::ParametricBoxController::_set__alphaStartID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxController::_set__alphaStartID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ParametricBoxController", "_alphaStartID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF2234C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _alphaEndID
int GlobalNamespace::ParametricBoxController::_get__alphaEndID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxController::_get__alphaEndID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ParametricBoxController", "_alphaEndID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _alphaEndID
void GlobalNamespace::ParametricBoxController::_set__alphaEndID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxController::_set__alphaEndID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ParametricBoxController", "_alphaEndID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF2235C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _widthStartID
int GlobalNamespace::ParametricBoxController::_get__widthStartID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxController::_get__widthStartID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ParametricBoxController", "_widthStartID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _widthStartID
void GlobalNamespace::ParametricBoxController::_set__widthStartID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxController::_set__widthStartID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ParametricBoxController", "_widthStartID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF2236C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _widthEndID
int GlobalNamespace::ParametricBoxController::_get__widthEndID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxController::_get__widthEndID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ParametricBoxController", "_widthEndID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _widthEndID
void GlobalNamespace::ParametricBoxController::_set__widthEndID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxController::_set__widthEndID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ParametricBoxController", "_widthEndID", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single width
float& GlobalNamespace::ParametricBoxController::dyn_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxController::dyn_width");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "width"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single height
float& GlobalNamespace::ParametricBoxController::dyn_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxController::dyn_height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "height"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single length
float& GlobalNamespace::ParametricBoxController::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxController::dyn_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single heightCenter
float& GlobalNamespace::ParametricBoxController::dyn_heightCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxController::dyn_heightCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heightCenter"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color color
UnityEngine::Color& GlobalNamespace::ParametricBoxController::dyn_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxController::dyn_color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "color"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single alphaMultiplier
float& GlobalNamespace::ParametricBoxController::dyn_alphaMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxController::dyn_alphaMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "alphaMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minAlpha
float& GlobalNamespace::ParametricBoxController::dyn_minAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxController::dyn_minAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minAlpha"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single alphaStart
float& GlobalNamespace::ParametricBoxController::dyn_alphaStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxController::dyn_alphaStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "alphaStart"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single alphaEnd
float& GlobalNamespace::ParametricBoxController::dyn_alphaEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxController::dyn_alphaEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "alphaEnd"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single widthStart
float& GlobalNamespace::ParametricBoxController::dyn_widthStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxController::dyn_widthStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "widthStart"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single widthEnd
float& GlobalNamespace::ParametricBoxController::dyn_widthEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxController::dyn_widthEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "widthEnd"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer _meshRenderer
UnityEngine::MeshRenderer*& GlobalNamespace::ParametricBoxController::dyn__meshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxController::dyn__meshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshRenderer"))->offset;
  return *reinterpret_cast<UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ParametricBoxController.Awake
void GlobalNamespace::ParametricBoxController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ParametricBoxController.OnEnable
void GlobalNamespace::ParametricBoxController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ParametricBoxController.OnDisable
void GlobalNamespace::ParametricBoxController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ParametricBoxController.Refresh
void GlobalNamespace::ParametricBoxController::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxController::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ParametricBoxController..cctor
void GlobalNamespace::ParametricBoxController::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxController::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ParametricBoxController", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ParametricBoxFakeGlowController
#include "GlobalNamespace/ParametricBoxFakeGlowController.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: MaterialPropertyBlockController
#include "GlobalNamespace/MaterialPropertyBlockController.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF2239C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _colorID
int GlobalNamespace::ParametricBoxFakeGlowController::_get__colorID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxFakeGlowController::_get__colorID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ParametricBoxFakeGlowController", "_colorID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _colorID
void GlobalNamespace::ParametricBoxFakeGlowController::_set__colorID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxFakeGlowController::_set__colorID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ParametricBoxFakeGlowController", "_colorID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF223AC
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _sizeParamsID
int GlobalNamespace::ParametricBoxFakeGlowController::_get__sizeParamsID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxFakeGlowController::_get__sizeParamsID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ParametricBoxFakeGlowController", "_sizeParamsID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _sizeParamsID
void GlobalNamespace::ParametricBoxFakeGlowController::_set__sizeParamsID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxFakeGlowController::_set__sizeParamsID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ParametricBoxFakeGlowController", "_sizeParamsID", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single width
float& GlobalNamespace::ParametricBoxFakeGlowController::dyn_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxFakeGlowController::dyn_width");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "width"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single height
float& GlobalNamespace::ParametricBoxFakeGlowController::dyn_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxFakeGlowController::dyn_height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "height"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single length
float& GlobalNamespace::ParametricBoxFakeGlowController::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxFakeGlowController::dyn_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single edgeSize
float& GlobalNamespace::ParametricBoxFakeGlowController::dyn_edgeSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxFakeGlowController::dyn_edgeSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "edgeSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single edgeSizeMultiplier
float& GlobalNamespace::ParametricBoxFakeGlowController::dyn_edgeSizeMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxFakeGlowController::dyn_edgeSizeMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "edgeSizeMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color color
UnityEngine::Color& GlobalNamespace::ParametricBoxFakeGlowController::dyn_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxFakeGlowController::dyn_color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "color"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer _meshRenderer
UnityEngine::MeshRenderer*& GlobalNamespace::ParametricBoxFakeGlowController::dyn__meshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxFakeGlowController::dyn__meshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshRenderer"))->offset;
  return *reinterpret_cast<UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MaterialPropertyBlockController _materialPropertyBlockController
GlobalNamespace::MaterialPropertyBlockController*& GlobalNamespace::ParametricBoxFakeGlowController::dyn__materialPropertyBlockController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxFakeGlowController::dyn__materialPropertyBlockController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_materialPropertyBlockController"))->offset;
  return *reinterpret_cast<GlobalNamespace::MaterialPropertyBlockController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ParametricBoxFakeGlowController.set_localPosition
void GlobalNamespace::ParametricBoxFakeGlowController::set_localPosition(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxFakeGlowController::set_localPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ParametricBoxFakeGlowController.Awake
void GlobalNamespace::ParametricBoxFakeGlowController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxFakeGlowController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ParametricBoxFakeGlowController.OnEnable
void GlobalNamespace::ParametricBoxFakeGlowController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxFakeGlowController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ParametricBoxFakeGlowController.OnDisable
void GlobalNamespace::ParametricBoxFakeGlowController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxFakeGlowController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ParametricBoxFakeGlowController.Refresh
void GlobalNamespace::ParametricBoxFakeGlowController::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxFakeGlowController::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ParametricBoxFakeGlowController..cctor
void GlobalNamespace::ParametricBoxFakeGlowController::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxFakeGlowController::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ParametricBoxFakeGlowController", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ParametricBoxFrameController
#include "GlobalNamespace/ParametricBoxFrameController.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: MaterialPropertyBlockController
#include "GlobalNamespace/MaterialPropertyBlockController.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF223DC
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _colorID
int GlobalNamespace::ParametricBoxFrameController::_get__colorID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxFrameController::_get__colorID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ParametricBoxFrameController", "_colorID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _colorID
void GlobalNamespace::ParametricBoxFrameController::_set__colorID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxFrameController::_set__colorID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ParametricBoxFrameController", "_colorID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF223EC
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _sizeParamsID
int GlobalNamespace::ParametricBoxFrameController::_get__sizeParamsID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxFrameController::_get__sizeParamsID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "ParametricBoxFrameController", "_sizeParamsID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _sizeParamsID
void GlobalNamespace::ParametricBoxFrameController::_set__sizeParamsID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxFrameController::_set__sizeParamsID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ParametricBoxFrameController", "_sizeParamsID", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Single width
float& GlobalNamespace::ParametricBoxFrameController::dyn_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxFrameController::dyn_width");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "width"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single height
float& GlobalNamespace::ParametricBoxFrameController::dyn_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxFrameController::dyn_height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "height"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single length
float& GlobalNamespace::ParametricBoxFrameController::dyn_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxFrameController::dyn_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "length"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single edgeSize
float& GlobalNamespace::ParametricBoxFrameController::dyn_edgeSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxFrameController::dyn_edgeSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "edgeSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color color
UnityEngine::Color& GlobalNamespace::ParametricBoxFrameController::dyn_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxFrameController::dyn_color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "color"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer _meshRenderer
UnityEngine::MeshRenderer*& GlobalNamespace::ParametricBoxFrameController::dyn__meshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxFrameController::dyn__meshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshRenderer"))->offset;
  return *reinterpret_cast<UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MaterialPropertyBlockController _materialPropertyBlockController
GlobalNamespace::MaterialPropertyBlockController*& GlobalNamespace::ParametricBoxFrameController::dyn__materialPropertyBlockController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxFrameController::dyn__materialPropertyBlockController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_materialPropertyBlockController"))->offset;
  return *reinterpret_cast<GlobalNamespace::MaterialPropertyBlockController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ParametricBoxFrameController.set_localPosition
void GlobalNamespace::ParametricBoxFrameController::set_localPosition(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxFrameController::set_localPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_localPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ParametricBoxFrameController.Awake
void GlobalNamespace::ParametricBoxFrameController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxFrameController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ParametricBoxFrameController.OnEnable
void GlobalNamespace::ParametricBoxFrameController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxFrameController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ParametricBoxFrameController.OnDisable
void GlobalNamespace::ParametricBoxFrameController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxFrameController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ParametricBoxFrameController.Refresh
void GlobalNamespace::ParametricBoxFrameController::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxFrameController::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ParametricBoxFrameController..cctor
void GlobalNamespace::ParametricBoxFrameController::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ParametricBoxFrameController::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ParametricBoxFrameController", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SceneCameraBloomPrePass
#include "GlobalNamespace/SceneCameraBloomPrePass.hpp"
// Including type: BloomPrePassRendererSO
#include "GlobalNamespace/BloomPrePassRendererSO.hpp"
// Including type: BloomPrePassEffectContainerSO
#include "GlobalNamespace/BloomPrePassEffectContainerSO.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BloomPrePassRendererSO _bloomPrepassRenderer
GlobalNamespace::BloomPrePassRendererSO*& GlobalNamespace::SceneCameraBloomPrePass::dyn__bloomPrepassRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneCameraBloomPrePass::dyn__bloomPrepassRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomPrepassRenderer"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomPrePassRendererSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomPrePassEffectContainerSO _bloomPrePassEffectContainer
GlobalNamespace::BloomPrePassEffectContainerSO*& GlobalNamespace::SceneCameraBloomPrePass::dyn__bloomPrePassEffectContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneCameraBloomPrePass::dyn__bloomPrePassEffectContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomPrePassEffectContainer"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomPrePassEffectContainerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture _bloomPrepassRenderTexture
UnityEngine::RenderTexture*& GlobalNamespace::SceneCameraBloomPrePass::dyn__bloomPrepassRenderTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneCameraBloomPrePass::dyn__bloomPrepassRenderTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomPrepassRenderTexture"))->offset;
  return *reinterpret_cast<UnityEngine::RenderTexture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SceneCameraBloomPrePass.OnCameraPreRender
void GlobalNamespace::SceneCameraBloomPrePass::OnCameraPreRender(UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneCameraBloomPrePass::OnCameraPreRender");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCameraPreRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, camera);
}
// Autogenerated method: SceneCameraBloomPrePass.OnCameraPostRender
void GlobalNamespace::SceneCameraBloomPrePass::OnCameraPostRender(UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneCameraBloomPrePass::OnCameraPostRender");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCameraPostRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, camera);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ToneMapping
#include "GlobalNamespace/ToneMapping.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ToneMapping None
GlobalNamespace::ToneMapping GlobalNamespace::ToneMapping::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ToneMapping::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::ToneMapping>("", "ToneMapping", "None"));
}
// Autogenerated static field setter
// Set static field: static public ToneMapping None
void GlobalNamespace::ToneMapping::_set_None(GlobalNamespace::ToneMapping value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ToneMapping::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ToneMapping", "None", value));
}
// Autogenerated static field getter
// Get static field: static public ToneMapping Aces
GlobalNamespace::ToneMapping GlobalNamespace::ToneMapping::_get_Aces() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ToneMapping::_get_Aces");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::ToneMapping>("", "ToneMapping", "Aces"));
}
// Autogenerated static field setter
// Set static field: static public ToneMapping Aces
void GlobalNamespace::ToneMapping::_set_Aces(GlobalNamespace::ToneMapping value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ToneMapping::_set_Aces");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ToneMapping", "Aces", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::ToneMapping::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ToneMapping::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ToneMappingExtensions
#include "GlobalNamespace/ToneMappingExtensions.hpp"
// Including type: ToneMapping
#include "GlobalNamespace/ToneMapping.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF2241C
// Autogenerated static field getter
// Get static field: static private readonly System.String[] _shaderKeywordMap
::ArrayW<::Il2CppString*> GlobalNamespace::ToneMappingExtensions::_get__shaderKeywordMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ToneMappingExtensions::_get__shaderKeywordMap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppString*>>("", "ToneMappingExtensions", "_shaderKeywordMap"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String[] _shaderKeywordMap
void GlobalNamespace::ToneMappingExtensions::_set__shaderKeywordMap(::ArrayW<::Il2CppString*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ToneMappingExtensions::_set__shaderKeywordMap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ToneMappingExtensions", "_shaderKeywordMap", value));
}
// Autogenerated method: ToneMappingExtensions..cctor
void GlobalNamespace::ToneMappingExtensions::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ToneMappingExtensions::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ToneMappingExtensions", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ToneMappingExtensions.SetShaderKeyword
void GlobalNamespace::ToneMappingExtensions::SetShaderKeyword(GlobalNamespace::ToneMapping toneMapping) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ToneMappingExtensions::SetShaderKeyword");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ToneMappingExtensions", "SetShaderKeyword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toneMapping)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, toneMapping);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
// Including type: ParametricBoxController
#include "GlobalNamespace/ParametricBoxController.hpp"
// Including type: Parametric3SliceSpriteController
#include "GlobalNamespace/Parametric3SliceSpriteController.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Matrix4x4
#include "UnityEngine/Matrix4x4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BoolSO _mainEffectPostProcessEnabled
GlobalNamespace::BoolSO*& GlobalNamespace::TubeBloomPrePassLight::dyn__mainEffectPostProcessEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::dyn__mainEffectPostProcessEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainEffectPostProcessEnabled"))->offset;
  return *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _width
float& GlobalNamespace::TubeBloomPrePassLight::dyn__width() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::dyn__width");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_width"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _length
float& GlobalNamespace::TubeBloomPrePassLight::dyn__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::dyn__length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _center
float& GlobalNamespace::TubeBloomPrePassLight::dyn__center() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::dyn__center");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_center"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color
UnityEngine::Color& GlobalNamespace::TubeBloomPrePassLight::dyn__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::dyn__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _colorAlphaMultiplier
float& GlobalNamespace::TubeBloomPrePassLight::dyn__colorAlphaMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::dyn__colorAlphaMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorAlphaMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bloomFogIntensityMultiplier
float& GlobalNamespace::TubeBloomPrePassLight::dyn__bloomFogIntensityMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::dyn__bloomFogIntensityMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomFogIntensityMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _fakeBloomIntensityMultiplier
float& GlobalNamespace::TubeBloomPrePassLight::dyn__fakeBloomIntensityMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::dyn__fakeBloomIntensityMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fakeBloomIntensityMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _boostToWhite
float& GlobalNamespace::TubeBloomPrePassLight::dyn__boostToWhite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::dyn__boostToWhite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_boostToWhite"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lightWidthMultiplier
float& GlobalNamespace::TubeBloomPrePassLight::dyn__lightWidthMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::dyn__lightWidthMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightWidthMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _addWidthToLength
bool& GlobalNamespace::TubeBloomPrePassLight::dyn__addWidthToLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::dyn__addWidthToLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_addWidthToLength"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _bakedGlowWidthScale
float& GlobalNamespace::TubeBloomPrePassLight::dyn__bakedGlowWidthScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::dyn__bakedGlowWidthScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bakedGlowWidthScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _forceUseBakedGlow
bool& GlobalNamespace::TubeBloomPrePassLight::dyn__forceUseBakedGlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::dyn__forceUseBakedGlow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_forceUseBakedGlow"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _updateAlways
bool& GlobalNamespace::TubeBloomPrePassLight::dyn__updateAlways() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::dyn__updateAlways");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_updateAlways"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _limitAlpha
bool& GlobalNamespace::TubeBloomPrePassLight::dyn__limitAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::dyn__limitAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_limitAlpha"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minAlpha
float& GlobalNamespace::TubeBloomPrePassLight::dyn__minAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::dyn__minAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minAlpha"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxAlpha
float& GlobalNamespace::TubeBloomPrePassLight::dyn__maxAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::dyn__maxAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxAlpha"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startAlpha
float& GlobalNamespace::TubeBloomPrePassLight::dyn__startAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::dyn__startAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startAlpha"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _endAlpha
float& GlobalNamespace::TubeBloomPrePassLight::dyn__endAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::dyn__endAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endAlpha"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ParametricBoxController _parametricBoxController
GlobalNamespace::ParametricBoxController*& GlobalNamespace::TubeBloomPrePassLight::dyn__parametricBoxController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::dyn__parametricBoxController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parametricBoxController"))->offset;
  return *reinterpret_cast<GlobalNamespace::ParametricBoxController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Parametric3SliceSpriteController _dynamic3SliceSprite
GlobalNamespace::Parametric3SliceSpriteController*& GlobalNamespace::TubeBloomPrePassLight::dyn__dynamic3SliceSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::dyn__dynamic3SliceSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dynamic3SliceSprite"))->offset;
  return *reinterpret_cast<GlobalNamespace::Parametric3SliceSpriteController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action didRefreshEvent
System::Action*& GlobalNamespace::TubeBloomPrePassLight::dyn_didRefreshEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::dyn_didRefreshEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didRefreshEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isDirty
bool& GlobalNamespace::TubeBloomPrePassLight::dyn__isDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::dyn__isDirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _transform
UnityEngine::Transform*& GlobalNamespace::TubeBloomPrePassLight::dyn__transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::dyn__transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TubeBloomPrePassLight.get_colorAlphaMultiplier
float GlobalNamespace::TubeBloomPrePassLight::get_colorAlphaMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::get_colorAlphaMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorAlphaMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TubeBloomPrePassLight.get_center
float GlobalNamespace::TubeBloomPrePassLight::get_center() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::get_center");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_center", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TubeBloomPrePassLight.get_length
float GlobalNamespace::TubeBloomPrePassLight::get_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::get_length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TubeBloomPrePassLight.set_length
void GlobalNamespace::TubeBloomPrePassLight::set_length(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::set_length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TubeBloomPrePassLight.get_width
float GlobalNamespace::TubeBloomPrePassLight::get_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::get_width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TubeBloomPrePassLight.set_width
void GlobalNamespace::TubeBloomPrePassLight::set_width(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::set_width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TubeBloomPrePassLight.get_lightWidthMultiplier
float GlobalNamespace::TubeBloomPrePassLight::get_lightWidthMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::get_lightWidthMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightWidthMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TubeBloomPrePassLight.set_lightWidthMultiplier
void GlobalNamespace::TubeBloomPrePassLight::set_lightWidthMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::set_lightWidthMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lightWidthMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TubeBloomPrePassLight.get_bloomFogIntensityMultiplier
float GlobalNamespace::TubeBloomPrePassLight::get_bloomFogIntensityMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::get_bloomFogIntensityMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bloomFogIntensityMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TubeBloomPrePassLight.set_bloomFogIntensityMultiplier
void GlobalNamespace::TubeBloomPrePassLight::set_bloomFogIntensityMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::set_bloomFogIntensityMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bloomFogIntensityMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TubeBloomPrePassLight.get_color
UnityEngine::Color GlobalNamespace::TubeBloomPrePassLight::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: TubeBloomPrePassLight.set_color
void GlobalNamespace::TubeBloomPrePassLight::set_color(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TubeBloomPrePassLight.add_didRefreshEvent
void GlobalNamespace::TubeBloomPrePassLight::add_didRefreshEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::add_didRefreshEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didRefreshEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TubeBloomPrePassLight.remove_didRefreshEvent
void GlobalNamespace::TubeBloomPrePassLight::remove_didRefreshEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::remove_didRefreshEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didRefreshEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TubeBloomPrePassLight.MarkDirty
void GlobalNamespace::TubeBloomPrePassLight::MarkDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::MarkDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TubeBloomPrePassLight.ClipPoints
void GlobalNamespace::TubeBloomPrePassLight::ClipPoints(ByRef<UnityEngine::Vector4> fromPointClipPos, ByRef<UnityEngine::Vector4> toPointClipPos, ByRef<UnityEngine::Vector3> fromPointViewPos, ByRef<UnityEngine::Vector3> toPointViewPos, bool fromPointInside, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::ClipPoints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClipPoints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromPointClipPos), ::il2cpp_utils::ExtractType(toPointClipPos), ::il2cpp_utils::ExtractType(fromPointViewPos), ::il2cpp_utils::ExtractType(toPointViewPos), ::il2cpp_utils::ExtractType(fromPointInside), ::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, byref(fromPointClipPos), byref(toPointClipPos), byref(fromPointViewPos), byref(toPointViewPos), fromPointInside, t);
}
// Autogenerated method: TubeBloomPrePassLight.OnDrawGizmos
void GlobalNamespace::TubeBloomPrePassLight::OnDrawGizmos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::OnDrawGizmos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TubeBloomPrePassLight.get_isDirty
bool GlobalNamespace::TubeBloomPrePassLight::get_isDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::get_isDirty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TubeBloomPrePassLight.OnEnable
void GlobalNamespace::TubeBloomPrePassLight::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TubeBloomPrePassLight.DidRegisterLight
void GlobalNamespace::TubeBloomPrePassLight::DidRegisterLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::DidRegisterLight");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidRegisterLight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TubeBloomPrePassLight.Refresh
void GlobalNamespace::TubeBloomPrePassLight::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::Refresh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TubeBloomPrePassLight.FillMeshData
void GlobalNamespace::TubeBloomPrePassLight::FillMeshData(int lightNum, ::ArrayW<UnityEngine::Vector3> vertices, ::ArrayW<UnityEngine::Color> colors, ::ArrayW<UnityEngine::Vector4> viewPos, UnityEngine::Matrix4x4 viewMatrix, UnityEngine::Matrix4x4 projectionMatrix, float lineWidth) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeBloomPrePassLight::FillMeshData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillMeshData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lightNum), ::il2cpp_utils::ExtractType(vertices), ::il2cpp_utils::ExtractType(colors), ::il2cpp_utils::ExtractType(viewPos), ::il2cpp_utils::ExtractType(viewMatrix), ::il2cpp_utils::ExtractType(projectionMatrix), ::il2cpp_utils::ExtractType(lineWidth)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lightNum, vertices, colors, viewPos, viewMatrix, projectionMatrix, lineWidth);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BlueNoiseDithering
#include "GlobalNamespace/BlueNoiseDithering.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF2284C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _noiseParamsID
int GlobalNamespace::BlueNoiseDithering::_get__noiseParamsID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlueNoiseDithering::_get__noiseParamsID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BlueNoiseDithering", "_noiseParamsID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _noiseParamsID
void GlobalNamespace::BlueNoiseDithering::_set__noiseParamsID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlueNoiseDithering::_set__noiseParamsID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BlueNoiseDithering", "_noiseParamsID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF2285C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _globalNoiseTextureID
int GlobalNamespace::BlueNoiseDithering::_get__globalNoiseTextureID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlueNoiseDithering::_get__globalNoiseTextureID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BlueNoiseDithering", "_globalNoiseTextureID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _globalNoiseTextureID
void GlobalNamespace::BlueNoiseDithering::_set__globalNoiseTextureID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlueNoiseDithering::_set__globalNoiseTextureID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BlueNoiseDithering", "_globalNoiseTextureID", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Texture2D _noiseTexture
UnityEngine::Texture2D*& GlobalNamespace::BlueNoiseDithering::dyn__noiseTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlueNoiseDithering::dyn__noiseTexture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noiseTexture"))->offset;
  return *reinterpret_cast<UnityEngine::Texture2D**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BlueNoiseDithering.SetBlueNoiseShaderParams
void GlobalNamespace::BlueNoiseDithering::SetBlueNoiseShaderParams(int cameraPixelWidth, int cameraPixelHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlueNoiseDithering::SetBlueNoiseShaderParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBlueNoiseShaderParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cameraPixelWidth), ::il2cpp_utils::ExtractType(cameraPixelHeight)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cameraPixelWidth, cameraPixelHeight);
}
// Autogenerated method: BlueNoiseDithering..cctor
void GlobalNamespace::BlueNoiseDithering::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlueNoiseDithering::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BlueNoiseDithering", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BlueNoiseDitheringUpdater
#include "GlobalNamespace/BlueNoiseDitheringUpdater.hpp"
// Including type: BlueNoiseDithering
#include "GlobalNamespace/BlueNoiseDithering.hpp"
// Including type: RandomValueToShader
#include "GlobalNamespace/RandomValueToShader.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BlueNoiseDithering _blueNoiseDithering
GlobalNamespace::BlueNoiseDithering*& GlobalNamespace::BlueNoiseDitheringUpdater::dyn__blueNoiseDithering() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlueNoiseDitheringUpdater::dyn__blueNoiseDithering");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blueNoiseDithering"))->offset;
  return *reinterpret_cast<GlobalNamespace::BlueNoiseDithering**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RandomValueToShader _randomValueToShader
GlobalNamespace::RandomValueToShader*& GlobalNamespace::BlueNoiseDitheringUpdater::dyn__randomValueToShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlueNoiseDitheringUpdater::dyn__randomValueToShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomValueToShader"))->offset;
  return *reinterpret_cast<GlobalNamespace::RandomValueToShader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BlueNoiseDitheringUpdater.OnEnable
void GlobalNamespace::BlueNoiseDitheringUpdater::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlueNoiseDitheringUpdater::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BlueNoiseDitheringUpdater.OnDisable
void GlobalNamespace::BlueNoiseDitheringUpdater::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlueNoiseDitheringUpdater::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BlueNoiseDitheringUpdater.HandleCameraPreRender
void GlobalNamespace::BlueNoiseDitheringUpdater::HandleCameraPreRender(UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlueNoiseDitheringUpdater::HandleCameraPreRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCameraPreRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, camera);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RandomValueToShader
#include "GlobalNamespace/RandomValueToShader.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF2288C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _randomValueID
int GlobalNamespace::RandomValueToShader::_get__randomValueID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RandomValueToShader::_get__randomValueID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "RandomValueToShader", "_randomValueID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _randomValueID
void GlobalNamespace::RandomValueToShader::_set__randomValueID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RandomValueToShader::_set__randomValueID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RandomValueToShader", "_randomValueID", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lastFrameNum
int& GlobalNamespace::RandomValueToShader::dyn__lastFrameNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RandomValueToShader::dyn__lastFrameNum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastFrameNum"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RandomValueToShader.SetRandomValueToShaders
void GlobalNamespace::RandomValueToShader::SetRandomValueToShaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RandomValueToShader::SetRandomValueToShaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRandomValueToShaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RandomValueToShader..cctor
void GlobalNamespace::RandomValueToShader::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RandomValueToShader::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RandomValueToShader", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CameraRenderCallbacksManager
#include "GlobalNamespace/CameraRenderCallbacksManager.hpp"
// Including type: CameraRenderCallbacksManager/ICameraRenderCallbacks
#include "GlobalNamespace/CameraRenderCallbacksManager_ICameraRenderCallbacks.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.Camera,CameraRenderCallbacksManager> _callbackManagers
System::Collections::Generic::Dictionary_2<UnityEngine::Camera*, GlobalNamespace::CameraRenderCallbacksManager*>* GlobalNamespace::CameraRenderCallbacksManager::_get__callbackManagers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CameraRenderCallbacksManager::_get__callbackManagers");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<UnityEngine::Camera*, GlobalNamespace::CameraRenderCallbacksManager*>*>("", "CameraRenderCallbacksManager", "_callbackManagers")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<UnityEngine.Camera,CameraRenderCallbacksManager> _callbackManagers
void GlobalNamespace::CameraRenderCallbacksManager::_set__callbackManagers(System::Collections::Generic::Dictionary_2<UnityEngine::Camera*, GlobalNamespace::CameraRenderCallbacksManager*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CameraRenderCallbacksManager::_set__callbackManagers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CameraRenderCallbacksManager", "_callbackManagers", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.HashSet`1<CameraRenderCallbacksManager/ICameraRenderCallbacks> _observers
System::Collections::Generic::HashSet_1<GlobalNamespace::CameraRenderCallbacksManager::ICameraRenderCallbacks*>*& GlobalNamespace::CameraRenderCallbacksManager::dyn__observers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CameraRenderCallbacksManager::dyn__observers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_observers"))->offset;
  return *reinterpret_cast<System::Collections::Generic::HashSet_1<GlobalNamespace::CameraRenderCallbacksManager::ICameraRenderCallbacks*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _camera
UnityEngine::Camera*& GlobalNamespace::CameraRenderCallbacksManager::dyn__camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CameraRenderCallbacksManager::dyn__camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_camera"))->offset;
  return *reinterpret_cast<UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CameraRenderCallbacksManager.RegisterForCameraCallbacks
void GlobalNamespace::CameraRenderCallbacksManager::RegisterForCameraCallbacks(UnityEngine::Camera* camera, GlobalNamespace::CameraRenderCallbacksManager::ICameraRenderCallbacks* observer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CameraRenderCallbacksManager::RegisterForCameraCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CameraRenderCallbacksManager", "RegisterForCameraCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera), ::il2cpp_utils::ExtractType(observer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, camera, observer);
}
// Autogenerated method: CameraRenderCallbacksManager.UnregisterFromCameraCallbacks
void GlobalNamespace::CameraRenderCallbacksManager::UnregisterFromCameraCallbacks(GlobalNamespace::CameraRenderCallbacksManager::ICameraRenderCallbacks* observer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CameraRenderCallbacksManager::UnregisterFromCameraCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CameraRenderCallbacksManager", "UnregisterFromCameraCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(observer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, observer);
}
// Autogenerated method: CameraRenderCallbacksManager.RegisterForCameraCallbacks
void GlobalNamespace::CameraRenderCallbacksManager::RegisterForCameraCallbacks(GlobalNamespace::CameraRenderCallbacksManager::ICameraRenderCallbacks* observer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CameraRenderCallbacksManager::RegisterForCameraCallbacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterForCameraCallbacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(observer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, observer);
}
// Autogenerated method: CameraRenderCallbacksManager.UnregisterFromCameraCallbacksInternal
void GlobalNamespace::CameraRenderCallbacksManager::UnregisterFromCameraCallbacksInternal(GlobalNamespace::CameraRenderCallbacksManager::ICameraRenderCallbacks* observer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CameraRenderCallbacksManager::UnregisterFromCameraCallbacksInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterFromCameraCallbacksInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(observer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, observer);
}
// Autogenerated method: CameraRenderCallbacksManager.Awake
void GlobalNamespace::CameraRenderCallbacksManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CameraRenderCallbacksManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CameraRenderCallbacksManager.OnPreRender
void GlobalNamespace::CameraRenderCallbacksManager::OnPreRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CameraRenderCallbacksManager::OnPreRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPreRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CameraRenderCallbacksManager.OnPostRender
void GlobalNamespace::CameraRenderCallbacksManager::OnPostRender() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CameraRenderCallbacksManager::OnPostRender");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPostRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CameraRenderCallbacksManager..cctor
void GlobalNamespace::CameraRenderCallbacksManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CameraRenderCallbacksManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CameraRenderCallbacksManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CameraRenderCallbacksManager/ICameraRenderCallbacks
#include "GlobalNamespace/CameraRenderCallbacksManager_ICameraRenderCallbacks.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CameraRenderCallbacksManager/ICameraRenderCallbacks.OnCameraPostRender
void GlobalNamespace::CameraRenderCallbacksManager::ICameraRenderCallbacks::OnCameraPostRender(UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CameraRenderCallbacksManager::ICameraRenderCallbacks::OnCameraPostRender");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCameraPostRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, camera);
}
// Autogenerated method: CameraRenderCallbacksManager/ICameraRenderCallbacks.OnCameraPreRender
void GlobalNamespace::CameraRenderCallbacksManager::ICameraRenderCallbacks::OnCameraPreRender(UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CameraRenderCallbacksManager::ICameraRenderCallbacks::OnCameraPreRender");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCameraPreRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, camera);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DirectionalLight
#include "GlobalNamespace/DirectionalLight.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaxLights
int GlobalNamespace::DirectionalLight::_get_kMaxLights() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DirectionalLight::_get_kMaxLights");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "DirectionalLight", "kMaxLights"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaxLights
void GlobalNamespace::DirectionalLight::_set_kMaxLights(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DirectionalLight::_set_kMaxLights");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DirectionalLight", "kMaxLights", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<DirectionalLight> _lights
System::Collections::Generic::List_1<GlobalNamespace::DirectionalLight*>* GlobalNamespace::DirectionalLight::_get__lights() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DirectionalLight::_get__lights");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<GlobalNamespace::DirectionalLight*>*>("", "DirectionalLight", "_lights"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<DirectionalLight> _lights
void GlobalNamespace::DirectionalLight::_set__lights(System::Collections::Generic::List_1<GlobalNamespace::DirectionalLight*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DirectionalLight::_set__lights");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DirectionalLight", "_lights", value));
}
// Autogenerated static field getter
// Get static field: static private DirectionalLight _mainLight
GlobalNamespace::DirectionalLight* GlobalNamespace::DirectionalLight::_get__mainLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DirectionalLight::_get__mainLight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::DirectionalLight*>("", "DirectionalLight", "_mainLight"));
}
// Autogenerated static field setter
// Set static field: static private DirectionalLight _mainLight
void GlobalNamespace::DirectionalLight::_set__mainLight(GlobalNamespace::DirectionalLight* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DirectionalLight::_set__mainLight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DirectionalLight", "_mainLight", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color color
UnityEngine::Color& GlobalNamespace::DirectionalLight::dyn_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DirectionalLight::dyn_color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "color"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single intensity
float& GlobalNamespace::DirectionalLight::dyn_intensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DirectionalLight::dyn_intensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "intensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single radius
float& GlobalNamespace::DirectionalLight::dyn_radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DirectionalLight::dyn_radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DirectionalLight.get_lights
System::Collections::Generic::List_1<GlobalNamespace::DirectionalLight*>* GlobalNamespace::DirectionalLight::get_lights() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DirectionalLight::get_lights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DirectionalLight", "get_lights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<GlobalNamespace::DirectionalLight*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: DirectionalLight.OnEnable
void GlobalNamespace::DirectionalLight::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DirectionalLight::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DirectionalLight.OnDisable
void GlobalNamespace::DirectionalLight::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DirectionalLight::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DirectionalLight..cctor
void GlobalNamespace::DirectionalLight::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DirectionalLight::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DirectionalLight", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightManager
#include "GlobalNamespace/LightManager.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF228B0
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _directionalLightDirectionsID
int GlobalNamespace::LightManager::_get__directionalLightDirectionsID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightManager::_get__directionalLightDirectionsID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "LightManager", "_directionalLightDirectionsID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _directionalLightDirectionsID
void GlobalNamespace::LightManager::_set__directionalLightDirectionsID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightManager::_set__directionalLightDirectionsID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightManager", "_directionalLightDirectionsID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF228C0
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _directionalLightPositionID
int GlobalNamespace::LightManager::_get__directionalLightPositionID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightManager::_get__directionalLightPositionID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "LightManager", "_directionalLightPositionID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _directionalLightPositionID
void GlobalNamespace::LightManager::_set__directionalLightPositionID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightManager::_set__directionalLightPositionID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightManager", "_directionalLightPositionID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF228D0
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _directionalLightRadiiID
int GlobalNamespace::LightManager::_get__directionalLightRadiiID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightManager::_get__directionalLightRadiiID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "LightManager", "_directionalLightRadiiID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _directionalLightRadiiID
void GlobalNamespace::LightManager::_set__directionalLightRadiiID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightManager::_set__directionalLightRadiiID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightManager", "_directionalLightRadiiID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF228E0
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _directionalLightColorsID
int GlobalNamespace::LightManager::_get__directionalLightColorsID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightManager::_get__directionalLightColorsID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "LightManager", "_directionalLightColorsID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _directionalLightColorsID
void GlobalNamespace::LightManager::_set__directionalLightColorsID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightManager::_set__directionalLightColorsID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightManager", "_directionalLightColorsID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF228F0
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _pointLightPositionsID
int GlobalNamespace::LightManager::_get__pointLightPositionsID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightManager::_get__pointLightPositionsID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "LightManager", "_pointLightPositionsID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _pointLightPositionsID
void GlobalNamespace::LightManager::_set__pointLightPositionsID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightManager::_set__pointLightPositionsID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightManager", "_pointLightPositionsID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF22900
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _pointLightColorsID
int GlobalNamespace::LightManager::_get__pointLightColorsID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightManager::_get__pointLightColorsID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "LightManager", "_pointLightColorsID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _pointLightColorsID
void GlobalNamespace::LightManager::_set__pointLightColorsID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightManager::_set__pointLightColorsID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightManager", "_pointLightColorsID", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector4[] _directionalLightDirections
::ArrayW<UnityEngine::Vector4>& GlobalNamespace::LightManager::dyn__directionalLightDirections() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightManager::dyn__directionalLightDirections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_directionalLightDirections"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Vector4>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector4[] _directionalLightColors
::ArrayW<UnityEngine::Vector4>& GlobalNamespace::LightManager::dyn__directionalLightColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightManager::dyn__directionalLightColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_directionalLightColors"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Vector4>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector4[] _directionalLightPositions
::ArrayW<UnityEngine::Vector4>& GlobalNamespace::LightManager::dyn__directionalLightPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightManager::dyn__directionalLightPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_directionalLightPositions"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Vector4>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single[] _directionalLightRadii
::ArrayW<float>& GlobalNamespace::LightManager::dyn__directionalLightRadii() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightManager::dyn__directionalLightRadii");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_directionalLightRadii"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector4[] _pointLightPositions
::ArrayW<UnityEngine::Vector4>& GlobalNamespace::LightManager::dyn__pointLightPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightManager::dyn__pointLightPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pointLightPositions"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Vector4>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector4[] _pointLightColors
::ArrayW<UnityEngine::Vector4>& GlobalNamespace::LightManager::dyn__pointLightColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightManager::dyn__pointLightColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pointLightColors"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Vector4>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastRefreshFrameNum
int& GlobalNamespace::LightManager::dyn_lastRefreshFrameNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightManager::dyn_lastRefreshFrameNum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastRefreshFrameNum"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LightManager.OnDisable
void GlobalNamespace::LightManager::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightManager::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightManager.OnWillRenderObject
void GlobalNamespace::LightManager::OnWillRenderObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightManager::OnWillRenderObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnWillRenderObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightManager.OnBecameInvisible
void GlobalNamespace::LightManager::OnBecameInvisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightManager::OnBecameInvisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBecameInvisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightManager.OnCameraPreRender
void GlobalNamespace::LightManager::OnCameraPreRender(UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightManager::OnCameraPreRender");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCameraPreRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, camera);
}
// Autogenerated method: LightManager.OnCameraPostRender
void GlobalNamespace::LightManager::OnCameraPostRender(UnityEngine::Camera* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightManager::OnCameraPostRender");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCameraPostRender", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(camera)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, camera);
}
// Autogenerated method: LightManager.OnDestroy
void GlobalNamespace::LightManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightManager.ResetColors
void GlobalNamespace::LightManager::ResetColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightManager::ResetColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightManager..cctor
void GlobalNamespace::LightManager::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightManager::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LightManager", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PointLight
#include "GlobalNamespace/PointLight.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaxLights
int GlobalNamespace::PointLight::_get_kMaxLights() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PointLight::_get_kMaxLights");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PointLight", "kMaxLights"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaxLights
void GlobalNamespace::PointLight::_set_kMaxLights(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PointLight::_set_kMaxLights");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PointLight", "kMaxLights", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.List`1<PointLight> _lights
System::Collections::Generic::List_1<GlobalNamespace::PointLight*>* GlobalNamespace::PointLight::_get__lights() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PointLight::_get__lights");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<GlobalNamespace::PointLight*>*>("", "PointLight", "_lights"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.List`1<PointLight> _lights
void GlobalNamespace::PointLight::_set__lights(System::Collections::Generic::List_1<GlobalNamespace::PointLight*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PointLight::_set__lights");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PointLight", "_lights", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color color
UnityEngine::Color& GlobalNamespace::PointLight::dyn_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PointLight::dyn_color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "color"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single intensity
float& GlobalNamespace::PointLight::dyn_intensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PointLight::dyn_intensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "intensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PointLight.get_lights
System::Collections::Generic::List_1<GlobalNamespace::PointLight*>* GlobalNamespace::PointLight::get_lights() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PointLight::get_lights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PointLight", "get_lights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<GlobalNamespace::PointLight*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: PointLight.OnEnable
void GlobalNamespace::PointLight::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PointLight::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PointLight.OnDisable
void GlobalNamespace::PointLight::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PointLight::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PointLight..cctor
void GlobalNamespace::PointLight::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PointLight::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PointLight", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GaussianSeparableBlurRendererSO
#include "GlobalNamespace/GaussianSeparableBlurRendererSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ImageEffectController
#include "GlobalNamespace/ImageEffectController.hpp"
// Including type: ImageEffectController/RenderImageCallback
#include "GlobalNamespace/ImageEffectController_RenderImageCallback.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ImageEffectController/RenderImageCallback _renderImageCallback
GlobalNamespace::ImageEffectController::RenderImageCallback*& GlobalNamespace::ImageEffectController::dyn__renderImageCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ImageEffectController::dyn__renderImageCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderImageCallback"))->offset;
  return *reinterpret_cast<GlobalNamespace::ImageEffectController::RenderImageCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ImageEffectController.SetCallback
void GlobalNamespace::ImageEffectController::SetCallback(GlobalNamespace::ImageEffectController::RenderImageCallback* renderImageCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ImageEffectController::SetCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renderImageCallback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, renderImageCallback);
}
// Autogenerated method: ImageEffectController.OnRenderImage
void GlobalNamespace::ImageEffectController::OnRenderImage(UnityEngine::RenderTexture* src, UnityEngine::RenderTexture* dest) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ImageEffectController::OnRenderImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRenderImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dest)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, src, dest);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ImageEffectController/RenderImageCallback
#include "GlobalNamespace/ImageEffectController_RenderImageCallback.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ImageEffectController/RenderImageCallback.Invoke
void GlobalNamespace::ImageEffectController::RenderImageCallback::Invoke(UnityEngine::RenderTexture* src, UnityEngine::RenderTexture* dest) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ImageEffectController::RenderImageCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dest)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, src, dest);
}
// Autogenerated method: ImageEffectController/RenderImageCallback.BeginInvoke
System::IAsyncResult* GlobalNamespace::ImageEffectController::RenderImageCallback::BeginInvoke(UnityEngine::RenderTexture* src, UnityEngine::RenderTexture* dest, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ImageEffectController::RenderImageCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, src, dest, callback, object);
}
// Autogenerated method: ImageEffectController/RenderImageCallback.EndInvoke
void GlobalNamespace::ImageEffectController::RenderImageCallback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ImageEffectController::RenderImageCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ReflectionProbeBakingEffect
#include "GlobalNamespace/ReflectionProbeBakingEffect.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _material
UnityEngine::Material*& GlobalNamespace::ReflectionProbeBakingEffect::dyn__material() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ReflectionProbeBakingEffect::dyn__material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_material"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ReflectionProbeBakingEffect.OnRenderImage
void GlobalNamespace::ReflectionProbeBakingEffect::OnRenderImage(UnityEngine::RenderTexture* src, UnityEngine::RenderTexture* dest) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ReflectionProbeBakingEffect::OnRenderImage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRenderImage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dest)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, src, dest);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: KawaseBlurRendererSO
#include "GlobalNamespace/KawaseBlurRendererSO.hpp"
// Including type: KawaseBlurRendererSO/KernelSize
#include "GlobalNamespace/KawaseBlurRendererSO_KernelSize.hpp"
// Including type: KawaseBlurRendererSO/WeightsType
#include "GlobalNamespace/KawaseBlurRendererSO_WeightsType.hpp"
// Including type: KawaseBlurRendererSO/BloomKernel
#include "GlobalNamespace/KawaseBlurRendererSO_BloomKernel.hpp"
// Including type: KawaseBlurRendererSO/Pass
#include "GlobalNamespace/KawaseBlurRendererSO_Pass.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.Texture
#include "UnityEngine/Texture.hpp"
// Including type: UnityEngine.Rendering.CommandBuffer
#include "UnityEngine/Rendering/CommandBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxBloomIterations
int GlobalNamespace::KawaseBlurRendererSO::_get_kMaxBloomIterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::_get_kMaxBloomIterations");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "KawaseBlurRendererSO", "kMaxBloomIterations"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxBloomIterations
void GlobalNamespace::KawaseBlurRendererSO::_set_kMaxBloomIterations(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::_set_kMaxBloomIterations");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KawaseBlurRendererSO", "kMaxBloomIterations", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF22950
// Autogenerated static field getter
// Get static field: static private readonly System.Single[][] kBloomIterationWeights
::ArrayW<::ArrayW<float>> GlobalNamespace::KawaseBlurRendererSO::_get_kBloomIterationWeights() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::_get_kBloomIterationWeights");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::ArrayW<float>>>("", "KawaseBlurRendererSO", "kBloomIterationWeights"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Single[][] kBloomIterationWeights
void GlobalNamespace::KawaseBlurRendererSO::_set_kBloomIterationWeights(::ArrayW<::ArrayW<float>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::_set_kBloomIterationWeights");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KawaseBlurRendererSO", "kBloomIterationWeights", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF22960
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _offsetID
int GlobalNamespace::KawaseBlurRendererSO::_get__offsetID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::_get__offsetID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "KawaseBlurRendererSO", "_offsetID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _offsetID
void GlobalNamespace::KawaseBlurRendererSO::_set__offsetID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::_set__offsetID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KawaseBlurRendererSO", "_offsetID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF22970
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _boostID
int GlobalNamespace::KawaseBlurRendererSO::_get__boostID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::_get__boostID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "KawaseBlurRendererSO", "_boostID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _boostID
void GlobalNamespace::KawaseBlurRendererSO::_set__boostID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::_set__boostID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KawaseBlurRendererSO", "_boostID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF22980
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _additiveAlphaID
int GlobalNamespace::KawaseBlurRendererSO::_get__additiveAlphaID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::_get__additiveAlphaID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "KawaseBlurRendererSO", "_additiveAlphaID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _additiveAlphaID
void GlobalNamespace::KawaseBlurRendererSO::_set__additiveAlphaID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::_set__additiveAlphaID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KawaseBlurRendererSO", "_additiveAlphaID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF22990
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _alphaID
int GlobalNamespace::KawaseBlurRendererSO::_get__alphaID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::_get__alphaID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "KawaseBlurRendererSO", "_alphaID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _alphaID
void GlobalNamespace::KawaseBlurRendererSO::_set__alphaID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::_set__alphaID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KawaseBlurRendererSO", "_alphaID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF229A0
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _tintColorID
int GlobalNamespace::KawaseBlurRendererSO::_get__tintColorID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::_get__tintColorID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "KawaseBlurRendererSO", "_tintColorID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _tintColorID
void GlobalNamespace::KawaseBlurRendererSO::_set__tintColorID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::_set__tintColorID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KawaseBlurRendererSO", "_tintColorID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF229B0
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _alphaWeightsID
int GlobalNamespace::KawaseBlurRendererSO::_get__alphaWeightsID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::_get__alphaWeightsID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "KawaseBlurRendererSO", "_alphaWeightsID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _alphaWeightsID
void GlobalNamespace::KawaseBlurRendererSO::_set__alphaWeightsID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::_set__alphaWeightsID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KawaseBlurRendererSO", "_alphaWeightsID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF229C0
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _tempTexture0ID
int GlobalNamespace::KawaseBlurRendererSO::_get__tempTexture0ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::_get__tempTexture0ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "KawaseBlurRendererSO", "_tempTexture0ID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _tempTexture0ID
void GlobalNamespace::KawaseBlurRendererSO::_set__tempTexture0ID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::_set__tempTexture0ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KawaseBlurRendererSO", "_tempTexture0ID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF229D0
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _tempTexture1ID
int GlobalNamespace::KawaseBlurRendererSO::_get__tempTexture1ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::_get__tempTexture1ID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "KawaseBlurRendererSO", "_tempTexture1ID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _tempTexture1ID
void GlobalNamespace::KawaseBlurRendererSO::_set__tempTexture1ID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::_set__tempTexture1ID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KawaseBlurRendererSO", "_tempTexture1ID", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader _kawaseBlurShader
UnityEngine::Shader*& GlobalNamespace::KawaseBlurRendererSO::dyn__kawaseBlurShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::dyn__kawaseBlurShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_kawaseBlurShader"))->offset;
  return *reinterpret_cast<UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader _additiveShader
UnityEngine::Shader*& GlobalNamespace::KawaseBlurRendererSO::dyn__additiveShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::dyn__additiveShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_additiveShader"))->offset;
  return *reinterpret_cast<UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader _tintShader
UnityEngine::Shader*& GlobalNamespace::KawaseBlurRendererSO::dyn__tintShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::dyn__tintShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tintShader"))->offset;
  return *reinterpret_cast<UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _kawaseBlurMaterial
UnityEngine::Material*& GlobalNamespace::KawaseBlurRendererSO::dyn__kawaseBlurMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::dyn__kawaseBlurMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_kawaseBlurMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _additiveMaterial
UnityEngine::Material*& GlobalNamespace::KawaseBlurRendererSO::dyn__additiveMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::dyn__additiveMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_additiveMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _tintMaterial
UnityEngine::Material*& GlobalNamespace::KawaseBlurRendererSO::dyn__tintMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::dyn__tintMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tintMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _commandBuffersMaterial
UnityEngine::Material*& GlobalNamespace::KawaseBlurRendererSO::dyn__commandBuffersMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::dyn__commandBuffersMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_commandBuffersMaterial"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[][] _kernels
::ArrayW<::ArrayW<int>>& GlobalNamespace::KawaseBlurRendererSO::dyn__kernels() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::dyn__kernels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_kernels"))->offset;
  return *reinterpret_cast<::ArrayW<::ArrayW<int>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private KawaseBlurRendererSO/BloomKernel[] _bloomKernels
::ArrayW<GlobalNamespace::KawaseBlurRendererSO::BloomKernel*>& GlobalNamespace::KawaseBlurRendererSO::dyn__bloomKernels() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::dyn__bloomKernels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomKernels"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::KawaseBlurRendererSO::BloomKernel*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture[] _blurTextures
::ArrayW<UnityEngine::RenderTexture*>& GlobalNamespace::KawaseBlurRendererSO::dyn__blurTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::dyn__blurTextures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blurTextures"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::RenderTexture*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: KawaseBlurRendererSO.GetBlurKernel
::ArrayW<int> GlobalNamespace::KawaseBlurRendererSO::GetBlurKernel(GlobalNamespace::KawaseBlurRendererSO::KernelSize kernelSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::GetBlurKernel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBlurKernel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kernelSize)})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<int>, false>(this, ___internal__method, kernelSize);
}
// Autogenerated method: KawaseBlurRendererSO.OnDisable
void GlobalNamespace::KawaseBlurRendererSO::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: KawaseBlurRendererSO.Bloom
void GlobalNamespace::KawaseBlurRendererSO::Bloom(UnityEngine::RenderTexture* src, UnityEngine::RenderTexture* dest, int iterationsStart, int iterations, float boost, float alphaWeights, GlobalNamespace::KawaseBlurRendererSO::WeightsType blurStartWeightsType, ::ArrayW<float> bloomIterationWeights) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::Bloom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Bloom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(iterationsStart), ::il2cpp_utils::ExtractType(iterations), ::il2cpp_utils::ExtractType(boost), ::il2cpp_utils::ExtractType(alphaWeights), ::il2cpp_utils::ExtractType(blurStartWeightsType), ::il2cpp_utils::ExtractType(bloomIterationWeights)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, src, dest, iterationsStart, iterations, boost, alphaWeights, blurStartWeightsType, bloomIterationWeights);
}
// Autogenerated method: KawaseBlurRendererSO.DoubleBlur
void GlobalNamespace::KawaseBlurRendererSO::DoubleBlur(UnityEngine::RenderTexture* src, UnityEngine::RenderTexture* dest, GlobalNamespace::KawaseBlurRendererSO::KernelSize kernelSize0, float boost0, GlobalNamespace::KawaseBlurRendererSO::KernelSize kernelSize1, float boost1, float secondBlurAlpha, int downsample, bool gammaCorrection) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::DoubleBlur");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoubleBlur", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(kernelSize0), ::il2cpp_utils::ExtractType(boost0), ::il2cpp_utils::ExtractType(kernelSize1), ::il2cpp_utils::ExtractType(boost1), ::il2cpp_utils::ExtractType(secondBlurAlpha), ::il2cpp_utils::ExtractType(downsample), ::il2cpp_utils::ExtractType(gammaCorrection)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, src, dest, kernelSize0, boost0, kernelSize1, boost1, secondBlurAlpha, downsample, gammaCorrection);
}
// Autogenerated method: KawaseBlurRendererSO.Blur
UnityEngine::Texture2D* GlobalNamespace::KawaseBlurRendererSO::Blur(UnityEngine::Texture* src, GlobalNamespace::KawaseBlurRendererSO::KernelSize kernelSize, int downsample) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::Blur");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Blur", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(kernelSize), ::il2cpp_utils::ExtractType(downsample)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Texture2D*, false>(this, ___internal__method, src, kernelSize, downsample);
}
// Autogenerated method: KawaseBlurRendererSO.Blur
void GlobalNamespace::KawaseBlurRendererSO::Blur(UnityEngine::Texture* src, UnityEngine::RenderTexture* dest, GlobalNamespace::KawaseBlurRendererSO::KernelSize kernelSize, float boost, int downsample) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::Blur");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Blur", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(kernelSize), ::il2cpp_utils::ExtractType(boost), ::il2cpp_utils::ExtractType(downsample)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, src, dest, kernelSize, boost, downsample);
}
// Autogenerated method: KawaseBlurRendererSO.Blur
void GlobalNamespace::KawaseBlurRendererSO::Blur(UnityEngine::Texture* src, UnityEngine::RenderTexture* dest, ::ArrayW<int> kernel, float boost, int downsample, int startIdx, int length, float alphaWeights, float additiveAlpha, bool additivelyBlendToDest, bool gammaCorrection, GlobalNamespace::KawaseBlurRendererSO::WeightsType blurStartWeightsType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::Blur");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Blur", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(kernel), ::il2cpp_utils::ExtractType(boost), ::il2cpp_utils::ExtractType(downsample), ::il2cpp_utils::ExtractType(startIdx), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(alphaWeights), ::il2cpp_utils::ExtractType(additiveAlpha), ::il2cpp_utils::ExtractType(additivelyBlendToDest), ::il2cpp_utils::ExtractType(gammaCorrection), ::il2cpp_utils::ExtractType(blurStartWeightsType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, src, dest, kernel, boost, downsample, startIdx, length, alphaWeights, additiveAlpha, additivelyBlendToDest, gammaCorrection, blurStartWeightsType);
}
// Autogenerated method: KawaseBlurRendererSO.AlphaWeights
void GlobalNamespace::KawaseBlurRendererSO::AlphaWeights(UnityEngine::RenderTexture* src, UnityEngine::RenderTexture* dest) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::AlphaWeights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AlphaWeights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(dest)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, src, dest);
}
// Autogenerated method: KawaseBlurRendererSO.CreateBlurCommandBuffer
UnityEngine::Rendering::CommandBuffer* GlobalNamespace::KawaseBlurRendererSO::CreateBlurCommandBuffer(int width, int height, ::Il2CppString* globalTextureName, GlobalNamespace::KawaseBlurRendererSO::KernelSize kernelSize, float boost) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::CreateBlurCommandBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateBlurCommandBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(width), ::il2cpp_utils::ExtractType(height), ::il2cpp_utils::ExtractType(globalTextureName), ::il2cpp_utils::ExtractType(kernelSize), ::il2cpp_utils::ExtractType(boost)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Rendering::CommandBuffer*, false>(this, ___internal__method, width, height, globalTextureName, kernelSize, boost);
}
// Autogenerated method: KawaseBlurRendererSO..cctor
void GlobalNamespace::KawaseBlurRendererSO::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "KawaseBlurRendererSO", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: KawaseBlurRendererSO.OnEnable
void GlobalNamespace::KawaseBlurRendererSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: KawaseBlurRendererSO/KernelSize
#include "GlobalNamespace/KawaseBlurRendererSO_KernelSize.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public KawaseBlurRendererSO/KernelSize Kernel7
GlobalNamespace::KawaseBlurRendererSO::KernelSize GlobalNamespace::KawaseBlurRendererSO::KernelSize::_get_Kernel7() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::KernelSize::_get_Kernel7");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::KawaseBlurRendererSO::KernelSize>("", "KawaseBlurRendererSO/KernelSize", "Kernel7"));
}
// Autogenerated static field setter
// Set static field: static public KawaseBlurRendererSO/KernelSize Kernel7
void GlobalNamespace::KawaseBlurRendererSO::KernelSize::_set_Kernel7(GlobalNamespace::KawaseBlurRendererSO::KernelSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::KernelSize::_set_Kernel7");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KawaseBlurRendererSO/KernelSize", "Kernel7", value));
}
// Autogenerated static field getter
// Get static field: static public KawaseBlurRendererSO/KernelSize Kernel15
GlobalNamespace::KawaseBlurRendererSO::KernelSize GlobalNamespace::KawaseBlurRendererSO::KernelSize::_get_Kernel15() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::KernelSize::_get_Kernel15");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::KawaseBlurRendererSO::KernelSize>("", "KawaseBlurRendererSO/KernelSize", "Kernel15"));
}
// Autogenerated static field setter
// Set static field: static public KawaseBlurRendererSO/KernelSize Kernel15
void GlobalNamespace::KawaseBlurRendererSO::KernelSize::_set_Kernel15(GlobalNamespace::KawaseBlurRendererSO::KernelSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::KernelSize::_set_Kernel15");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KawaseBlurRendererSO/KernelSize", "Kernel15", value));
}
// Autogenerated static field getter
// Get static field: static public KawaseBlurRendererSO/KernelSize Kernel23
GlobalNamespace::KawaseBlurRendererSO::KernelSize GlobalNamespace::KawaseBlurRendererSO::KernelSize::_get_Kernel23() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::KernelSize::_get_Kernel23");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::KawaseBlurRendererSO::KernelSize>("", "KawaseBlurRendererSO/KernelSize", "Kernel23"));
}
// Autogenerated static field setter
// Set static field: static public KawaseBlurRendererSO/KernelSize Kernel23
void GlobalNamespace::KawaseBlurRendererSO::KernelSize::_set_Kernel23(GlobalNamespace::KawaseBlurRendererSO::KernelSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::KernelSize::_set_Kernel23");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KawaseBlurRendererSO/KernelSize", "Kernel23", value));
}
// Autogenerated static field getter
// Get static field: static public KawaseBlurRendererSO/KernelSize Kernel35
GlobalNamespace::KawaseBlurRendererSO::KernelSize GlobalNamespace::KawaseBlurRendererSO::KernelSize::_get_Kernel35() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::KernelSize::_get_Kernel35");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::KawaseBlurRendererSO::KernelSize>("", "KawaseBlurRendererSO/KernelSize", "Kernel35"));
}
// Autogenerated static field setter
// Set static field: static public KawaseBlurRendererSO/KernelSize Kernel35
void GlobalNamespace::KawaseBlurRendererSO::KernelSize::_set_Kernel35(GlobalNamespace::KawaseBlurRendererSO::KernelSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::KernelSize::_set_Kernel35");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KawaseBlurRendererSO/KernelSize", "Kernel35", value));
}
// Autogenerated static field getter
// Get static field: static public KawaseBlurRendererSO/KernelSize Kernel63
GlobalNamespace::KawaseBlurRendererSO::KernelSize GlobalNamespace::KawaseBlurRendererSO::KernelSize::_get_Kernel63() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::KernelSize::_get_Kernel63");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::KawaseBlurRendererSO::KernelSize>("", "KawaseBlurRendererSO/KernelSize", "Kernel63"));
}
// Autogenerated static field setter
// Set static field: static public KawaseBlurRendererSO/KernelSize Kernel63
void GlobalNamespace::KawaseBlurRendererSO::KernelSize::_set_Kernel63(GlobalNamespace::KawaseBlurRendererSO::KernelSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::KernelSize::_set_Kernel63");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KawaseBlurRendererSO/KernelSize", "Kernel63", value));
}
// Autogenerated static field getter
// Get static field: static public KawaseBlurRendererSO/KernelSize Kernel127
GlobalNamespace::KawaseBlurRendererSO::KernelSize GlobalNamespace::KawaseBlurRendererSO::KernelSize::_get_Kernel127() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::KernelSize::_get_Kernel127");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::KawaseBlurRendererSO::KernelSize>("", "KawaseBlurRendererSO/KernelSize", "Kernel127"));
}
// Autogenerated static field setter
// Set static field: static public KawaseBlurRendererSO/KernelSize Kernel127
void GlobalNamespace::KawaseBlurRendererSO::KernelSize::_set_Kernel127(GlobalNamespace::KawaseBlurRendererSO::KernelSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::KernelSize::_set_Kernel127");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KawaseBlurRendererSO/KernelSize", "Kernel127", value));
}
// Autogenerated static field getter
// Get static field: static public KawaseBlurRendererSO/KernelSize Kernel135
GlobalNamespace::KawaseBlurRendererSO::KernelSize GlobalNamespace::KawaseBlurRendererSO::KernelSize::_get_Kernel135() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::KernelSize::_get_Kernel135");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::KawaseBlurRendererSO::KernelSize>("", "KawaseBlurRendererSO/KernelSize", "Kernel135"));
}
// Autogenerated static field setter
// Set static field: static public KawaseBlurRendererSO/KernelSize Kernel135
void GlobalNamespace::KawaseBlurRendererSO::KernelSize::_set_Kernel135(GlobalNamespace::KawaseBlurRendererSO::KernelSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::KernelSize::_set_Kernel135");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KawaseBlurRendererSO/KernelSize", "Kernel135", value));
}
// Autogenerated static field getter
// Get static field: static public KawaseBlurRendererSO/KernelSize Kernel143
GlobalNamespace::KawaseBlurRendererSO::KernelSize GlobalNamespace::KawaseBlurRendererSO::KernelSize::_get_Kernel143() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::KernelSize::_get_Kernel143");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::KawaseBlurRendererSO::KernelSize>("", "KawaseBlurRendererSO/KernelSize", "Kernel143"));
}
// Autogenerated static field setter
// Set static field: static public KawaseBlurRendererSO/KernelSize Kernel143
void GlobalNamespace::KawaseBlurRendererSO::KernelSize::_set_Kernel143(GlobalNamespace::KawaseBlurRendererSO::KernelSize value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::KernelSize::_set_Kernel143");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KawaseBlurRendererSO/KernelSize", "Kernel143", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::KawaseBlurRendererSO::KernelSize::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::KernelSize::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: KawaseBlurRendererSO/WeightsType
#include "GlobalNamespace/KawaseBlurRendererSO_WeightsType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public KawaseBlurRendererSO/WeightsType None
GlobalNamespace::KawaseBlurRendererSO::WeightsType GlobalNamespace::KawaseBlurRendererSO::WeightsType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::WeightsType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::KawaseBlurRendererSO::WeightsType>("", "KawaseBlurRendererSO/WeightsType", "None"));
}
// Autogenerated static field setter
// Set static field: static public KawaseBlurRendererSO/WeightsType None
void GlobalNamespace::KawaseBlurRendererSO::WeightsType::_set_None(GlobalNamespace::KawaseBlurRendererSO::WeightsType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::WeightsType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KawaseBlurRendererSO/WeightsType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public KawaseBlurRendererSO/WeightsType AlphaWeights
GlobalNamespace::KawaseBlurRendererSO::WeightsType GlobalNamespace::KawaseBlurRendererSO::WeightsType::_get_AlphaWeights() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::WeightsType::_get_AlphaWeights");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::KawaseBlurRendererSO::WeightsType>("", "KawaseBlurRendererSO/WeightsType", "AlphaWeights"));
}
// Autogenerated static field setter
// Set static field: static public KawaseBlurRendererSO/WeightsType AlphaWeights
void GlobalNamespace::KawaseBlurRendererSO::WeightsType::_set_AlphaWeights(GlobalNamespace::KawaseBlurRendererSO::WeightsType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::WeightsType::_set_AlphaWeights");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KawaseBlurRendererSO/WeightsType", "AlphaWeights", value));
}
// Autogenerated static field getter
// Get static field: static public KawaseBlurRendererSO/WeightsType AlphaAndDepthWeights
GlobalNamespace::KawaseBlurRendererSO::WeightsType GlobalNamespace::KawaseBlurRendererSO::WeightsType::_get_AlphaAndDepthWeights() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::WeightsType::_get_AlphaAndDepthWeights");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::KawaseBlurRendererSO::WeightsType>("", "KawaseBlurRendererSO/WeightsType", "AlphaAndDepthWeights"));
}
// Autogenerated static field setter
// Set static field: static public KawaseBlurRendererSO/WeightsType AlphaAndDepthWeights
void GlobalNamespace::KawaseBlurRendererSO::WeightsType::_set_AlphaAndDepthWeights(GlobalNamespace::KawaseBlurRendererSO::WeightsType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::WeightsType::_set_AlphaAndDepthWeights");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KawaseBlurRendererSO/WeightsType", "AlphaAndDepthWeights", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::KawaseBlurRendererSO::WeightsType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::WeightsType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: KawaseBlurRendererSO/BloomKernel
#include "GlobalNamespace/KawaseBlurRendererSO_BloomKernel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public KawaseBlurRendererSO/KernelSize kernelSize
GlobalNamespace::KawaseBlurRendererSO::KernelSize& GlobalNamespace::KawaseBlurRendererSO::BloomKernel::dyn_kernelSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::BloomKernel::dyn_kernelSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "kernelSize"))->offset;
  return *reinterpret_cast<GlobalNamespace::KawaseBlurRendererSO::KernelSize*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 sharedPartWithNext
int& GlobalNamespace::KawaseBlurRendererSO::BloomKernel::dyn_sharedPartWithNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::BloomKernel::dyn_sharedPartWithNext");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sharedPartWithNext"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: KawaseBlurRendererSO/Pass
#include "GlobalNamespace/KawaseBlurRendererSO_Pass.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public KawaseBlurRendererSO/Pass AlphaWeights
GlobalNamespace::KawaseBlurRendererSO::Pass GlobalNamespace::KawaseBlurRendererSO::Pass::_get_AlphaWeights() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::Pass::_get_AlphaWeights");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::KawaseBlurRendererSO::Pass>("", "KawaseBlurRendererSO/Pass", "AlphaWeights"));
}
// Autogenerated static field setter
// Set static field: static public KawaseBlurRendererSO/Pass AlphaWeights
void GlobalNamespace::KawaseBlurRendererSO::Pass::_set_AlphaWeights(GlobalNamespace::KawaseBlurRendererSO::Pass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::Pass::_set_AlphaWeights");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KawaseBlurRendererSO/Pass", "AlphaWeights", value));
}
// Autogenerated static field getter
// Get static field: static public KawaseBlurRendererSO/Pass Blur
GlobalNamespace::KawaseBlurRendererSO::Pass GlobalNamespace::KawaseBlurRendererSO::Pass::_get_Blur() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::Pass::_get_Blur");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::KawaseBlurRendererSO::Pass>("", "KawaseBlurRendererSO/Pass", "Blur"));
}
// Autogenerated static field setter
// Set static field: static public KawaseBlurRendererSO/Pass Blur
void GlobalNamespace::KawaseBlurRendererSO::Pass::_set_Blur(GlobalNamespace::KawaseBlurRendererSO::Pass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::Pass::_set_Blur");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KawaseBlurRendererSO/Pass", "Blur", value));
}
// Autogenerated static field getter
// Get static field: static public KawaseBlurRendererSO/Pass BlurAndAdd
GlobalNamespace::KawaseBlurRendererSO::Pass GlobalNamespace::KawaseBlurRendererSO::Pass::_get_BlurAndAdd() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::Pass::_get_BlurAndAdd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::KawaseBlurRendererSO::Pass>("", "KawaseBlurRendererSO/Pass", "BlurAndAdd"));
}
// Autogenerated static field setter
// Set static field: static public KawaseBlurRendererSO/Pass BlurAndAdd
void GlobalNamespace::KawaseBlurRendererSO::Pass::_set_BlurAndAdd(GlobalNamespace::KawaseBlurRendererSO::Pass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::Pass::_set_BlurAndAdd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KawaseBlurRendererSO/Pass", "BlurAndAdd", value));
}
// Autogenerated static field getter
// Get static field: static public KawaseBlurRendererSO/Pass BlurWithAlphaWeights
GlobalNamespace::KawaseBlurRendererSO::Pass GlobalNamespace::KawaseBlurRendererSO::Pass::_get_BlurWithAlphaWeights() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::Pass::_get_BlurWithAlphaWeights");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::KawaseBlurRendererSO::Pass>("", "KawaseBlurRendererSO/Pass", "BlurWithAlphaWeights"));
}
// Autogenerated static field setter
// Set static field: static public KawaseBlurRendererSO/Pass BlurWithAlphaWeights
void GlobalNamespace::KawaseBlurRendererSO::Pass::_set_BlurWithAlphaWeights(GlobalNamespace::KawaseBlurRendererSO::Pass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::Pass::_set_BlurWithAlphaWeights");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KawaseBlurRendererSO/Pass", "BlurWithAlphaWeights", value));
}
// Autogenerated static field getter
// Get static field: static public KawaseBlurRendererSO/Pass AlphaAndDepthWeights
GlobalNamespace::KawaseBlurRendererSO::Pass GlobalNamespace::KawaseBlurRendererSO::Pass::_get_AlphaAndDepthWeights() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::Pass::_get_AlphaAndDepthWeights");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::KawaseBlurRendererSO::Pass>("", "KawaseBlurRendererSO/Pass", "AlphaAndDepthWeights"));
}
// Autogenerated static field setter
// Set static field: static public KawaseBlurRendererSO/Pass AlphaAndDepthWeights
void GlobalNamespace::KawaseBlurRendererSO::Pass::_set_AlphaAndDepthWeights(GlobalNamespace::KawaseBlurRendererSO::Pass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::Pass::_set_AlphaAndDepthWeights");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KawaseBlurRendererSO/Pass", "AlphaAndDepthWeights", value));
}
// Autogenerated static field getter
// Get static field: static public KawaseBlurRendererSO/Pass BlurGamma
GlobalNamespace::KawaseBlurRendererSO::Pass GlobalNamespace::KawaseBlurRendererSO::Pass::_get_BlurGamma() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::Pass::_get_BlurGamma");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::KawaseBlurRendererSO::Pass>("", "KawaseBlurRendererSO/Pass", "BlurGamma"));
}
// Autogenerated static field setter
// Set static field: static public KawaseBlurRendererSO/Pass BlurGamma
void GlobalNamespace::KawaseBlurRendererSO::Pass::_set_BlurGamma(GlobalNamespace::KawaseBlurRendererSO::Pass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::Pass::_set_BlurGamma");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KawaseBlurRendererSO/Pass", "BlurGamma", value));
}
// Autogenerated static field getter
// Get static field: static public KawaseBlurRendererSO/Pass BlurGammaAndAdd
GlobalNamespace::KawaseBlurRendererSO::Pass GlobalNamespace::KawaseBlurRendererSO::Pass::_get_BlurGammaAndAdd() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::Pass::_get_BlurGammaAndAdd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::KawaseBlurRendererSO::Pass>("", "KawaseBlurRendererSO/Pass", "BlurGammaAndAdd"));
}
// Autogenerated static field setter
// Set static field: static public KawaseBlurRendererSO/Pass BlurGammaAndAdd
void GlobalNamespace::KawaseBlurRendererSO::Pass::_set_BlurGammaAndAdd(GlobalNamespace::KawaseBlurRendererSO::Pass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::Pass::_set_BlurGammaAndAdd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "KawaseBlurRendererSO/Pass", "BlurGammaAndAdd", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::KawaseBlurRendererSO::Pass::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::KawaseBlurRendererSO::Pass::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassBackgroundColorsGradientElementWithLightId
#include "GlobalNamespace/BloomPrePassBackgroundColorsGradientElementWithLightId.hpp"
// Including type: BloomPrePassBackgroundColorsGradientElementWithLightId/Elements
#include "GlobalNamespace/BloomPrePassBackgroundColorsGradientElementWithLightId_Elements.hpp"
// Including type: BloomPrePassBackgroundColorsGradient
#include "GlobalNamespace/BloomPrePassBackgroundColorsGradient.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BloomPrePassBackgroundColorsGradient _bloomPrePassBackgroundColorsGradient
GlobalNamespace::BloomPrePassBackgroundColorsGradient*& GlobalNamespace::BloomPrePassBackgroundColorsGradientElementWithLightId::dyn__bloomPrePassBackgroundColorsGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColorsGradientElementWithLightId::dyn__bloomPrePassBackgroundColorsGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomPrePassBackgroundColorsGradient"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomPrePassBackgroundColorsGradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomPrePassBackgroundColorsGradientElementWithLightId/Elements[] _elements
::ArrayW<GlobalNamespace::BloomPrePassBackgroundColorsGradientElementWithLightId::Elements*>& GlobalNamespace::BloomPrePassBackgroundColorsGradientElementWithLightId::dyn__elements() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColorsGradientElementWithLightId::dyn__elements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elements"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::BloomPrePassBackgroundColorsGradientElementWithLightId::Elements*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BloomPrePassBackgroundColorsGradientElementWithLightId.ColorWasSet
void GlobalNamespace::BloomPrePassBackgroundColorsGradientElementWithLightId::ColorWasSet(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColorsGradientElementWithLightId::ColorWasSet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorWasSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassBackgroundColorsGradientElementWithLightId/Elements
#include "GlobalNamespace/BloomPrePassBackgroundColorsGradientElementWithLightId_Elements.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 elementNumber
int& GlobalNamespace::BloomPrePassBackgroundColorsGradientElementWithLightId::Elements::dyn_elementNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColorsGradientElementWithLightId::Elements::dyn_elementNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single intensity
float& GlobalNamespace::BloomPrePassBackgroundColorsGradientElementWithLightId::Elements::dyn_intensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColorsGradientElementWithLightId::Elements::dyn_intensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "intensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minIntensity
float& GlobalNamespace::BloomPrePassBackgroundColorsGradientElementWithLightId::Elements::dyn_minIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColorsGradientElementWithLightId::Elements::dyn_minIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassBackgroundColorsGradientTintColorWithLightId
#include "GlobalNamespace/BloomPrePassBackgroundColorsGradientTintColorWithLightId.hpp"
// Including type: BloomPrePassBackgroundColorsGradient
#include "GlobalNamespace/BloomPrePassBackgroundColorsGradient.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BloomPrePassBackgroundColorsGradient _bloomPrePassBackgroundColorsGradient
GlobalNamespace::BloomPrePassBackgroundColorsGradient*& GlobalNamespace::BloomPrePassBackgroundColorsGradientTintColorWithLightId::dyn__bloomPrePassBackgroundColorsGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColorsGradientTintColorWithLightId::dyn__bloomPrePassBackgroundColorsGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomPrePassBackgroundColorsGradient"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomPrePassBackgroundColorsGradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BloomPrePassBackgroundColorsGradientTintColorWithLightId.ColorWasSet
void GlobalNamespace::BloomPrePassBackgroundColorsGradientTintColorWithLightId::ColorWasSet(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColorsGradientTintColorWithLightId::ColorWasSet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorWasSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassBackgroundColorsGradientTintColorWithLightIds
#include "GlobalNamespace/BloomPrePassBackgroundColorsGradientTintColorWithLightIds.hpp"
// Including type: BloomPrePassBackgroundColorsGradient
#include "GlobalNamespace/BloomPrePassBackgroundColorsGradient.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BloomPrePassBackgroundColorsGradient _bloomPrePassBackgroundColorsGradient
GlobalNamespace::BloomPrePassBackgroundColorsGradient*& GlobalNamespace::BloomPrePassBackgroundColorsGradientTintColorWithLightIds::dyn__bloomPrePassBackgroundColorsGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColorsGradientTintColorWithLightIds::dyn__bloomPrePassBackgroundColorsGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomPrePassBackgroundColorsGradient"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomPrePassBackgroundColorsGradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BloomPrePassBackgroundColorsGradientTintColorWithLightIds.ColorWasSet
void GlobalNamespace::BloomPrePassBackgroundColorsGradientTintColorWithLightIds::ColorWasSet(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColorsGradientTintColorWithLightIds::ColorWasSet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorWasSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassBackgroundLightWithId
#include "GlobalNamespace/BloomPrePassBackgroundLightWithId.hpp"
// Including type: BloomPrePassBackgroundColor
#include "GlobalNamespace/BloomPrePassBackgroundColor.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BloomPrePassBackgroundColor _bloomPrePassBackgroundColor
GlobalNamespace::BloomPrePassBackgroundColor*& GlobalNamespace::BloomPrePassBackgroundLightWithId::dyn__bloomPrePassBackgroundColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundLightWithId::dyn__bloomPrePassBackgroundColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomPrePassBackgroundColor"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomPrePassBackgroundColor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BloomPrePassBackgroundLightWithId.get_color
UnityEngine::Color GlobalNamespace::BloomPrePassBackgroundLightWithId::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundLightWithId::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: BloomPrePassBackgroundLightWithId.ColorWasSet
void GlobalNamespace::BloomPrePassBackgroundLightWithId::ColorWasSet(UnityEngine::Color newColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundLightWithId::ColorWasSet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorWasSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newColor)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newColor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DirectionalLightWithId
#include "GlobalNamespace/DirectionalLightWithId.hpp"
// Including type: DirectionalLight
#include "GlobalNamespace/DirectionalLight.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private DirectionalLight _light
GlobalNamespace::DirectionalLight*& GlobalNamespace::DirectionalLightWithId::dyn__light() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DirectionalLightWithId::dyn__light");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_light"))->offset;
  return *reinterpret_cast<GlobalNamespace::DirectionalLight**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _intensity
float& GlobalNamespace::DirectionalLightWithId::dyn__intensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DirectionalLightWithId::dyn__intensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_intensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minIntensity
float& GlobalNamespace::DirectionalLightWithId::dyn__minIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DirectionalLightWithId::dyn__minIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DirectionalLightWithId.ColorWasSet
void GlobalNamespace::DirectionalLightWithId::ColorWasSet(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DirectionalLightWithId::ColorWasSet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorWasSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DirectionalLightWithIds
#include "GlobalNamespace/DirectionalLightWithIds.hpp"
// Including type: DirectionalLight
#include "GlobalNamespace/DirectionalLight.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private DirectionalLight _directionalLight
GlobalNamespace::DirectionalLight*& GlobalNamespace::DirectionalLightWithIds::dyn__directionalLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DirectionalLightWithIds::dyn__directionalLight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_directionalLight"))->offset;
  return *reinterpret_cast<GlobalNamespace::DirectionalLight**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DirectionalLightWithIds.ColorWasSet
void GlobalNamespace::DirectionalLightWithIds::ColorWasSet(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DirectionalLightWithIds::ColorWasSet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorWasSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnableRendererWithLightId
#include "GlobalNamespace/EnableRendererWithLightId.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _renderer
UnityEngine::Renderer*& GlobalNamespace::EnableRendererWithLightId::dyn__renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnableRendererWithLightId::dyn__renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderer"))->offset;
  return *reinterpret_cast<UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _hideAlphaRangeMin
float& GlobalNamespace::EnableRendererWithLightId::dyn__hideAlphaRangeMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnableRendererWithLightId::dyn__hideAlphaRangeMin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hideAlphaRangeMin"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _hideAlphaRangeMax
float& GlobalNamespace::EnableRendererWithLightId::dyn__hideAlphaRangeMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnableRendererWithLightId::dyn__hideAlphaRangeMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hideAlphaRangeMax"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnableRendererWithLightId.ColorWasSet
void GlobalNamespace::EnableRendererWithLightId::ColorWasSet(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnableRendererWithLightId::ColorWasSet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorWasSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ILightWithId
#include "GlobalNamespace/ILightWithId.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ILightWithId.get_isRegistered
bool GlobalNamespace::ILightWithId::get_isRegistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILightWithId::get_isRegistered");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isRegistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ILightWithId.get_lightId
int GlobalNamespace::ILightWithId::get_lightId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILightWithId::get_lightId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ILightWithId.__SetIsRegistered
void GlobalNamespace::ILightWithId::__SetIsRegistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILightWithId::__SetIsRegistered");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__SetIsRegistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILightWithId.__SetIsUnRegistered
void GlobalNamespace::ILightWithId::__SetIsUnRegistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILightWithId::__SetIsUnRegistered");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__SetIsUnRegistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILightWithId.ColorWasSet
void GlobalNamespace::ILightWithId::ColorWasSet(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILightWithId::ColorWasSet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorWasSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: InstancedMaterialLightWithId
#include "GlobalNamespace/InstancedMaterialLightWithId.hpp"
// Including type: MaterialPropertyBlockColorSetter
#include "GlobalNamespace/MaterialPropertyBlockColorSetter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MaterialPropertyBlockColorSetter _materialPropertyBlockColorSetter
GlobalNamespace::MaterialPropertyBlockColorSetter*& GlobalNamespace::InstancedMaterialLightWithId::dyn__materialPropertyBlockColorSetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InstancedMaterialLightWithId::dyn__materialPropertyBlockColorSetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_materialPropertyBlockColorSetter"))->offset;
  return *reinterpret_cast<GlobalNamespace::MaterialPropertyBlockColorSetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _setColorOnly
bool& GlobalNamespace::InstancedMaterialLightWithId::dyn__setColorOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InstancedMaterialLightWithId::dyn__setColorOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_setColorOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _intensity
float& GlobalNamespace::InstancedMaterialLightWithId::dyn__intensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InstancedMaterialLightWithId::dyn__intensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_intensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minAlpha
float& GlobalNamespace::InstancedMaterialLightWithId::dyn__minAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InstancedMaterialLightWithId::dyn__minAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minAlpha"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color
UnityEngine::Color& GlobalNamespace::InstancedMaterialLightWithId::dyn__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InstancedMaterialLightWithId::dyn__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _startColorWasSet
bool& GlobalNamespace::InstancedMaterialLightWithId::dyn__startColorWasSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InstancedMaterialLightWithId::dyn__startColorWasSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startColorWasSet"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: InstancedMaterialLightWithId.ColorWasSet
void GlobalNamespace::InstancedMaterialLightWithId::ColorWasSet(UnityEngine::Color newColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::InstancedMaterialLightWithId::ColorWasSet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorWasSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newColor)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newColor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightWithIdManager
#include "GlobalNamespace/LightWithIdManager.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: ILightWithId
#include "GlobalNamespace/ILightWithId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxLightId
int GlobalNamespace::LightWithIdManager::_get_kMaxLightId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIdManager::_get_kMaxLightId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "LightWithIdManager", "kMaxLightId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxLightId
void GlobalNamespace::LightWithIdManager::_set_kMaxLightId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIdManager::_set_kMaxLightId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightWithIdManager", "kMaxLightId", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action didChangeSomeColorsThisFrameEvent
System::Action*& GlobalNamespace::LightWithIdManager::dyn_didChangeSomeColorsThisFrameEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIdManager::dyn_didChangeSomeColorsThisFrameEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didChangeSomeColorsThisFrameEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.Int32,UnityEngine.Color> didSetColorForIdEvent
System::Action_2<int, UnityEngine::Color>*& GlobalNamespace::LightWithIdManager::dyn_didSetColorForIdEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIdManager::dyn_didSetColorForIdEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didSetColorForIdEvent"))->offset;
  return *reinterpret_cast<System::Action_2<int, UnityEngine::Color>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<ILightWithId>[] _lights
::ArrayW<System::Collections::Generic::List_1<GlobalNamespace::ILightWithId*>*>& GlobalNamespace::LightWithIdManager::dyn__lights() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIdManager::dyn__lights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lights"))->offset;
  return *reinterpret_cast<::ArrayW<System::Collections::Generic::List_1<GlobalNamespace::ILightWithId*>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Nullable`1<UnityEngine.Color>[] _colors
::ArrayW<System::Nullable_1<UnityEngine::Color>>& GlobalNamespace::LightWithIdManager::dyn__colors() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIdManager::dyn__colors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colors"))->offset;
  return *reinterpret_cast<::ArrayW<System::Nullable_1<UnityEngine::Color>>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<ILightWithId> _lightsToUnregister
System::Collections::Generic::List_1<GlobalNamespace::ILightWithId*>*& GlobalNamespace::LightWithIdManager::dyn__lightsToUnregister() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIdManager::dyn__lightsToUnregister");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightsToUnregister"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::ILightWithId*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _didChangeSomeColorsThisFrame
bool& GlobalNamespace::LightWithIdManager::dyn__didChangeSomeColorsThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIdManager::dyn__didChangeSomeColorsThisFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didChangeSomeColorsThisFrame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LightWithIdManager.get_colors
::ArrayW<System::Nullable_1<UnityEngine::Color>> GlobalNamespace::LightWithIdManager::get_colors() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIdManager::get_colors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<System::Nullable_1<UnityEngine::Color>>, false>(this, ___internal__method);
}
// Autogenerated method: LightWithIdManager.add_didChangeSomeColorsThisFrameEvent
void GlobalNamespace::LightWithIdManager::add_didChangeSomeColorsThisFrameEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIdManager::add_didChangeSomeColorsThisFrameEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didChangeSomeColorsThisFrameEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LightWithIdManager.remove_didChangeSomeColorsThisFrameEvent
void GlobalNamespace::LightWithIdManager::remove_didChangeSomeColorsThisFrameEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIdManager::remove_didChangeSomeColorsThisFrameEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didChangeSomeColorsThisFrameEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LightWithIdManager.add_didSetColorForIdEvent
void GlobalNamespace::LightWithIdManager::add_didSetColorForIdEvent(System::Action_2<int, UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIdManager::add_didSetColorForIdEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSetColorForIdEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LightWithIdManager.remove_didSetColorForIdEvent
void GlobalNamespace::LightWithIdManager::remove_didSetColorForIdEvent(System::Action_2<int, UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIdManager::remove_didSetColorForIdEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSetColorForIdEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LightWithIdManager.LateUpdate
void GlobalNamespace::LightWithIdManager::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIdManager::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightWithIdManager.RegisterLight
void GlobalNamespace::LightWithIdManager::RegisterLight(GlobalNamespace::ILightWithId* lightWithId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIdManager::RegisterLight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterLight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lightWithId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lightWithId);
}
// Autogenerated method: LightWithIdManager.UnregisterLight
void GlobalNamespace::LightWithIdManager::UnregisterLight(GlobalNamespace::ILightWithId* lightWithId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIdManager::UnregisterLight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterLight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lightWithId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lightWithId);
}
// Autogenerated method: LightWithIdManager.SetColorForId
void GlobalNamespace::LightWithIdManager::SetColorForId(int lightId, UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIdManager::SetColorForId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColorForId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lightId), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lightId, color);
}
// Autogenerated method: LightWithIdManager.GetColorForId
UnityEngine::Color GlobalNamespace::LightWithIdManager::GetColorForId(int lightId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIdManager::GetColorForId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColorForId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lightId)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method, lightId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightWithIdMonoBehaviour
#include "GlobalNamespace/LightWithIdMonoBehaviour.hpp"
// Including type: LightWithIdManager
#include "GlobalNamespace/LightWithIdManager.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _ID
int& GlobalNamespace::LightWithIdMonoBehaviour::dyn__ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIdMonoBehaviour::dyn__ID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LightWithIdManager _lightManager
GlobalNamespace::LightWithIdManager*& GlobalNamespace::LightWithIdMonoBehaviour::dyn__lightManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIdMonoBehaviour::dyn__lightManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::LightWithIdManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isRegistered
bool& GlobalNamespace::LightWithIdMonoBehaviour::dyn__isRegistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIdMonoBehaviour::dyn__isRegistered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isRegistered"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LightWithIdMonoBehaviour.get_lightId
int GlobalNamespace::LightWithIdMonoBehaviour::get_lightId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIdMonoBehaviour::get_lightId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LightWithIdMonoBehaviour.get_isRegistered
bool GlobalNamespace::LightWithIdMonoBehaviour::get_isRegistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIdMonoBehaviour::get_isRegistered");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isRegistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LightWithIdMonoBehaviour.__SetIsRegistered
void GlobalNamespace::LightWithIdMonoBehaviour::__SetIsRegistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIdMonoBehaviour::__SetIsRegistered");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__SetIsRegistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightWithIdMonoBehaviour.__SetIsUnRegistered
void GlobalNamespace::LightWithIdMonoBehaviour::__SetIsUnRegistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIdMonoBehaviour::__SetIsUnRegistered");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__SetIsUnRegistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightWithIdMonoBehaviour.ColorWasSet
void GlobalNamespace::LightWithIdMonoBehaviour::ColorWasSet(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIdMonoBehaviour::ColorWasSet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorWasSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: LightWithIdMonoBehaviour.OnEnable
void GlobalNamespace::LightWithIdMonoBehaviour::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIdMonoBehaviour::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightWithIdMonoBehaviour.Start
void GlobalNamespace::LightWithIdMonoBehaviour::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIdMonoBehaviour::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightWithIdMonoBehaviour.OnDisable
void GlobalNamespace::LightWithIdMonoBehaviour::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIdMonoBehaviour::OnDisable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightWithIdMonoBehaviour.RegisterLight
void GlobalNamespace::LightWithIdMonoBehaviour::RegisterLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIdMonoBehaviour::RegisterLight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterLight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightWithIdMonoBehaviour.SetLightId
void GlobalNamespace::LightWithIdMonoBehaviour::SetLightId(int newLightId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIdMonoBehaviour::SetLightId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLightId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newLightId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newLightId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightWithIds
#include "GlobalNamespace/LightWithIds.hpp"
// Including type: LightWithIds/LightData
#include "GlobalNamespace/LightWithIds_LightData.hpp"
// Including type: LightWithIdManager
#include "GlobalNamespace/LightWithIdManager.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly LightWithIdManager _lightManager
GlobalNamespace::LightWithIdManager*& GlobalNamespace::LightWithIds::dyn__lightManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIds::dyn__lightManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::LightWithIdManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isRegistered
bool& GlobalNamespace::LightWithIds::dyn__isRegistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIds::dyn__isRegistered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isRegistered"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LightWithIds.get_lightIntensityData
System::Collections::Generic::IEnumerable_1<GlobalNamespace::LightWithIds::LightData*>* GlobalNamespace::LightWithIds::get_lightIntensityData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIds::get_lightIntensityData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightIntensityData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<GlobalNamespace::LightWithIds::LightData*>*, false>(this, ___internal__method);
}
// Autogenerated method: LightWithIds.Start
void GlobalNamespace::LightWithIds::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIds::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightWithIds.OnEnable
void GlobalNamespace::LightWithIds::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIds::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightWithIds.RegisterForColorChanges
void GlobalNamespace::LightWithIds::RegisterForColorChanges() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIds::RegisterForColorChanges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterForColorChanges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightWithIds.OnDisable
void GlobalNamespace::LightWithIds::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIds::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightWithIds.HandleLightManagerDidChangeSomeColorsThisFrame
void GlobalNamespace::LightWithIds::HandleLightManagerDidChangeSomeColorsThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIds::HandleLightManagerDidChangeSomeColorsThisFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLightManagerDidChangeSomeColorsThisFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightWithIds/LightData
#include "GlobalNamespace/LightWithIds_LightData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lightId
int& GlobalNamespace::LightWithIds::LightData::dyn__lightId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIds::LightData::dyn__lightId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color
UnityEngine::Color& GlobalNamespace::LightWithIds::LightData::dyn__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIds::LightData::dyn__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isRegistered
bool& GlobalNamespace::LightWithIds::LightData::dyn__isRegistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIds::LightData::dyn__isRegistered");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isRegistered"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LightWithIds/LightData.get_lightId
int GlobalNamespace::LightWithIds::LightData::get_lightId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIds::LightData::get_lightId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LightWithIds/LightData.get_color
UnityEngine::Color GlobalNamespace::LightWithIds::LightData::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIds::LightData::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: LightWithIds/LightData.get_isRegistered
bool GlobalNamespace::LightWithIds::LightData::get_isRegistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIds::LightData::get_isRegistered");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isRegistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LightWithIds/LightData.__SetIsRegistered
void GlobalNamespace::LightWithIds::LightData::__SetIsRegistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIds::LightData::__SetIsRegistered");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__SetIsRegistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightWithIds/LightData.__SetIsUnRegistered
void GlobalNamespace::LightWithIds::LightData::__SetIsUnRegistered() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIds::LightData::__SetIsUnRegistered");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__SetIsUnRegistered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightWithIds/LightData.ColorWasSet
void GlobalNamespace::LightWithIds::LightData::ColorWasSet(UnityEngine::Color newColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightWithIds::LightData::ColorWasSet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorWasSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newColor)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newColor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightmapLightWithIds
#include "GlobalNamespace/LightmapLightWithIds.hpp"
// Including type: LightmapLightWithIds/LightIntensitiesData
#include "GlobalNamespace/LightmapLightWithIds_LightIntensitiesData.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: LightWithIds/LightData
#include "GlobalNamespace/LightWithIds_LightData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lightId
int& GlobalNamespace::LightmapLightWithIds::dyn__lightId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightmapLightWithIds::dyn__lightId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _intensity
float& GlobalNamespace::LightmapLightWithIds::dyn__intensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightmapLightWithIds::dyn__intensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_intensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LightmapLightWithIds/LightIntensitiesData[] _lightIntensityData
::ArrayW<GlobalNamespace::LightmapLightWithIds::LightIntensitiesData*>& GlobalNamespace::LightmapLightWithIds::dyn__lightIntensityData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightmapLightWithIds::dyn__lightIntensityData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightIntensityData"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::LightmapLightWithIds::LightIntensitiesData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lightmapLightIdColorPropertyId
int& GlobalNamespace::LightmapLightWithIds::dyn__lightmapLightIdColorPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightmapLightWithIds::dyn__lightmapLightIdColorPropertyId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightmapLightIdColorPropertyId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lightProbeLightIdColorPropertyId
int& GlobalNamespace::LightmapLightWithIds::dyn__lightProbeLightIdColorPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightmapLightWithIds::dyn__lightProbeLightIdColorPropertyId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightProbeLightIdColorPropertyId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initializedPropertyIds
bool& GlobalNamespace::LightmapLightWithIds::dyn__initializedPropertyIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightmapLightWithIds::dyn__initializedPropertyIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initializedPropertyIds"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LightmapLightWithIds.get_lightId
int GlobalNamespace::LightmapLightWithIds::get_lightId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightmapLightWithIds::get_lightId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LightmapLightWithIds.SetDataToShaders
void GlobalNamespace::LightmapLightWithIds::SetDataToShaders(UnityEngine::Color lightmapColor, UnityEngine::Color probeColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightmapLightWithIds::SetDataToShaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDataToShaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lightmapColor), ::il2cpp_utils::ExtractType(probeColor)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lightmapColor, probeColor);
}
// Autogenerated method: LightmapLightWithIds.get_lightIntensityData
System::Collections::Generic::IEnumerable_1<GlobalNamespace::LightWithIds::LightData*>* GlobalNamespace::LightmapLightWithIds::get_lightIntensityData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightmapLightWithIds::get_lightIntensityData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightIntensityData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<GlobalNamespace::LightWithIds::LightData*>*, false>(this, ___internal__method);
}
// Autogenerated method: LightmapLightWithIds.HandleLightManagerDidChangeSomeColorsThisFrame
void GlobalNamespace::LightmapLightWithIds::HandleLightManagerDidChangeSomeColorsThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightmapLightWithIds::HandleLightManagerDidChangeSomeColorsThisFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLightManagerDidChangeSomeColorsThisFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
