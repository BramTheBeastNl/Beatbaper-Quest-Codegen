// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._SetOverlayTransformTrackedDeviceComponent
#include "Valve/VR/IVROverlay__SetOverlayTransformTrackedDeviceComponent.hpp"
// Including type: Valve.VR.EVROverlayError
#include "Valve/VR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetOverlayTransformTrackedDeviceComponent.Invoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_SetOverlayTransformTrackedDeviceComponent::Invoke(uint64_t ulOverlayHandle, uint unDeviceIndex, ::StringW pchComponentName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetOverlayTransformTrackedDeviceComponent::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(unDeviceIndex), ::il2cpp_utils::ExtractType(pchComponentName)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, unDeviceIndex, pchComponentName);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetOverlayTransformTrackedDeviceComponent.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_SetOverlayTransformTrackedDeviceComponent::BeginInvoke(uint64_t ulOverlayHandle, uint unDeviceIndex, ::StringW pchComponentName, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetOverlayTransformTrackedDeviceComponent::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(unDeviceIndex), ::il2cpp_utils::ExtractType(pchComponentName), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, unDeviceIndex, pchComponentName, callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetOverlayTransformTrackedDeviceComponent.EndInvoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_SetOverlayTransformTrackedDeviceComponent::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetOverlayTransformTrackedDeviceComponent::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._GetOverlayTransformTrackedDeviceComponent
#include "Valve/VR/IVROverlay__GetOverlayTransformTrackedDeviceComponent.hpp"
// Including type: Valve.VR.EVROverlayError
#include "Valve/VR/EVROverlayError.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetOverlayTransformTrackedDeviceComponent.Invoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_GetOverlayTransformTrackedDeviceComponent::Invoke(uint64_t ulOverlayHandle, ByRef<uint> punDeviceIndex, System::Text::StringBuilder* pchComponentName, uint unComponentNameSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetOverlayTransformTrackedDeviceComponent::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(punDeviceIndex), ::il2cpp_utils::ExtractType(pchComponentName), ::il2cpp_utils::ExtractType(unComponentNameSize)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(punDeviceIndex), pchComponentName, unComponentNameSize);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetOverlayTransformTrackedDeviceComponent.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_GetOverlayTransformTrackedDeviceComponent::BeginInvoke(uint64_t ulOverlayHandle, ByRef<uint> punDeviceIndex, System::Text::StringBuilder* pchComponentName, uint unComponentNameSize, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetOverlayTransformTrackedDeviceComponent::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(punDeviceIndex), ::il2cpp_utils::ExtractType(pchComponentName), ::il2cpp_utils::ExtractType(unComponentNameSize), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(punDeviceIndex), pchComponentName, unComponentNameSize, callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetOverlayTransformTrackedDeviceComponent.EndInvoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_GetOverlayTransformTrackedDeviceComponent::EndInvoke(ByRef<uint> punDeviceIndex, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetOverlayTransformTrackedDeviceComponent::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(punDeviceIndex), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, byref(punDeviceIndex), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._GetOverlayTransformOverlayRelative
#include "Valve/VR/IVROverlay__GetOverlayTransformOverlayRelative.hpp"
// Including type: Valve.VR.EVROverlayError
#include "Valve/VR/EVROverlayError.hpp"
// Including type: Valve.VR.HmdMatrix34_t
#include "Valve/VR/HmdMatrix34_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetOverlayTransformOverlayRelative.Invoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_GetOverlayTransformOverlayRelative::Invoke(uint64_t ulOverlayHandle, ByRef<uint64_t> ulOverlayHandleParent, ByRef<Valve::VR::HmdMatrix34_t> pmatParentOverlayToOverlayTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetOverlayTransformOverlayRelative::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(ulOverlayHandleParent), ::il2cpp_utils::ExtractType(pmatParentOverlayToOverlayTransform)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(ulOverlayHandleParent), byref(pmatParentOverlayToOverlayTransform));
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetOverlayTransformOverlayRelative.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_GetOverlayTransformOverlayRelative::BeginInvoke(uint64_t ulOverlayHandle, ByRef<uint64_t> ulOverlayHandleParent, ByRef<Valve::VR::HmdMatrix34_t> pmatParentOverlayToOverlayTransform, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetOverlayTransformOverlayRelative::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(ulOverlayHandleParent), ::il2cpp_utils::ExtractType(pmatParentOverlayToOverlayTransform), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(ulOverlayHandleParent), byref(pmatParentOverlayToOverlayTransform), callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetOverlayTransformOverlayRelative.EndInvoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_GetOverlayTransformOverlayRelative::EndInvoke(ByRef<uint64_t> ulOverlayHandleParent, ByRef<Valve::VR::HmdMatrix34_t> pmatParentOverlayToOverlayTransform, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetOverlayTransformOverlayRelative::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandleParent), ::il2cpp_utils::ExtractType(pmatParentOverlayToOverlayTransform), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, byref(ulOverlayHandleParent), byref(pmatParentOverlayToOverlayTransform), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._SetOverlayTransformOverlayRelative
#include "Valve/VR/IVROverlay__SetOverlayTransformOverlayRelative.hpp"
// Including type: Valve.VR.EVROverlayError
#include "Valve/VR/EVROverlayError.hpp"
// Including type: Valve.VR.HmdMatrix34_t
#include "Valve/VR/HmdMatrix34_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetOverlayTransformOverlayRelative.Invoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_SetOverlayTransformOverlayRelative::Invoke(uint64_t ulOverlayHandle, uint64_t ulOverlayHandleParent, ByRef<Valve::VR::HmdMatrix34_t> pmatParentOverlayToOverlayTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetOverlayTransformOverlayRelative::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(ulOverlayHandleParent), ::il2cpp_utils::ExtractType(pmatParentOverlayToOverlayTransform)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, ulOverlayHandleParent, byref(pmatParentOverlayToOverlayTransform));
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetOverlayTransformOverlayRelative.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_SetOverlayTransformOverlayRelative::BeginInvoke(uint64_t ulOverlayHandle, uint64_t ulOverlayHandleParent, ByRef<Valve::VR::HmdMatrix34_t> pmatParentOverlayToOverlayTransform, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetOverlayTransformOverlayRelative::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(ulOverlayHandleParent), ::il2cpp_utils::ExtractType(pmatParentOverlayToOverlayTransform), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, ulOverlayHandleParent, byref(pmatParentOverlayToOverlayTransform), callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetOverlayTransformOverlayRelative.EndInvoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_SetOverlayTransformOverlayRelative::EndInvoke(ByRef<Valve::VR::HmdMatrix34_t> pmatParentOverlayToOverlayTransform, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetOverlayTransformOverlayRelative::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pmatParentOverlayToOverlayTransform), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, byref(pmatParentOverlayToOverlayTransform), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._ShowOverlay
#include "Valve/VR/IVROverlay__ShowOverlay.hpp"
// Including type: Valve.VR.EVROverlayError
#include "Valve/VR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._ShowOverlay.Invoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_ShowOverlay::Invoke(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_ShowOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._ShowOverlay.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_ShowOverlay::BeginInvoke(uint64_t ulOverlayHandle, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_ShowOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._ShowOverlay.EndInvoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_ShowOverlay::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_ShowOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._HideOverlay
#include "Valve/VR/IVROverlay__HideOverlay.hpp"
// Including type: Valve.VR.EVROverlayError
#include "Valve/VR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._HideOverlay.Invoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_HideOverlay::Invoke(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_HideOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._HideOverlay.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_HideOverlay::BeginInvoke(uint64_t ulOverlayHandle, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_HideOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._HideOverlay.EndInvoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_HideOverlay::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_HideOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._IsOverlayVisible
#include "Valve/VR/IVROverlay__IsOverlayVisible.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._IsOverlayVisible.Invoke
bool Valve::VR::IVROverlay::_IsOverlayVisible::Invoke(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_IsOverlayVisible::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._IsOverlayVisible.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_IsOverlayVisible::BeginInvoke(uint64_t ulOverlayHandle, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_IsOverlayVisible::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._IsOverlayVisible.EndInvoke
bool Valve::VR::IVROverlay::_IsOverlayVisible::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_IsOverlayVisible::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._GetTransformForOverlayCoordinates
#include "Valve/VR/IVROverlay__GetTransformForOverlayCoordinates.hpp"
// Including type: Valve.VR.EVROverlayError
#include "Valve/VR/EVROverlayError.hpp"
// Including type: Valve.VR.ETrackingUniverseOrigin
#include "Valve/VR/ETrackingUniverseOrigin.hpp"
// Including type: Valve.VR.HmdVector2_t
#include "Valve/VR/HmdVector2_t.hpp"
// Including type: Valve.VR.HmdMatrix34_t
#include "Valve/VR/HmdMatrix34_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetTransformForOverlayCoordinates.Invoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_GetTransformForOverlayCoordinates::Invoke(uint64_t ulOverlayHandle, Valve::VR::ETrackingUniverseOrigin eTrackingOrigin, Valve::VR::HmdVector2_t coordinatesInOverlay, ByRef<Valve::VR::HmdMatrix34_t> pmatTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetTransformForOverlayCoordinates::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(eTrackingOrigin), ::il2cpp_utils::ExtractType(coordinatesInOverlay), ::il2cpp_utils::ExtractType(pmatTransform)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, eTrackingOrigin, coordinatesInOverlay, byref(pmatTransform));
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetTransformForOverlayCoordinates.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_GetTransformForOverlayCoordinates::BeginInvoke(uint64_t ulOverlayHandle, Valve::VR::ETrackingUniverseOrigin eTrackingOrigin, Valve::VR::HmdVector2_t coordinatesInOverlay, ByRef<Valve::VR::HmdMatrix34_t> pmatTransform, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetTransformForOverlayCoordinates::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(eTrackingOrigin), ::il2cpp_utils::ExtractType(coordinatesInOverlay), ::il2cpp_utils::ExtractType(pmatTransform), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, eTrackingOrigin, coordinatesInOverlay, byref(pmatTransform), callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetTransformForOverlayCoordinates.EndInvoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_GetTransformForOverlayCoordinates::EndInvoke(ByRef<Valve::VR::HmdMatrix34_t> pmatTransform, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetTransformForOverlayCoordinates::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pmatTransform), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, byref(pmatTransform), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._PollNextOverlayEvent
#include "Valve/VR/IVROverlay__PollNextOverlayEvent.hpp"
// Including type: Valve.VR.VREvent_t
#include "Valve/VR/VREvent_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._PollNextOverlayEvent.Invoke
bool Valve::VR::IVROverlay::_PollNextOverlayEvent::Invoke(uint64_t ulOverlayHandle, ByRef<Valve::VR::VREvent_t> pEvent, uint uncbVREvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_PollNextOverlayEvent::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pEvent), ::il2cpp_utils::ExtractType(uncbVREvent)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ulOverlayHandle, byref(pEvent), uncbVREvent);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._PollNextOverlayEvent.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_PollNextOverlayEvent::BeginInvoke(uint64_t ulOverlayHandle, ByRef<Valve::VR::VREvent_t> pEvent, uint uncbVREvent, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_PollNextOverlayEvent::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pEvent), ::il2cpp_utils::ExtractType(uncbVREvent), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pEvent), uncbVREvent, callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._PollNextOverlayEvent.EndInvoke
bool Valve::VR::IVROverlay::_PollNextOverlayEvent::EndInvoke(ByRef<Valve::VR::VREvent_t> pEvent, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_PollNextOverlayEvent::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pEvent), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pEvent), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._GetOverlayInputMethod
#include "Valve/VR/IVROverlay__GetOverlayInputMethod.hpp"
// Including type: Valve.VR.EVROverlayError
#include "Valve/VR/EVROverlayError.hpp"
// Including type: Valve.VR.VROverlayInputMethod
#include "Valve/VR/VROverlayInputMethod.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetOverlayInputMethod.Invoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_GetOverlayInputMethod::Invoke(uint64_t ulOverlayHandle, ByRef<Valve::VR::VROverlayInputMethod> peInputMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetOverlayInputMethod::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(peInputMethod)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(peInputMethod));
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetOverlayInputMethod.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_GetOverlayInputMethod::BeginInvoke(uint64_t ulOverlayHandle, ByRef<Valve::VR::VROverlayInputMethod> peInputMethod, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetOverlayInputMethod::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(peInputMethod), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(peInputMethod), callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetOverlayInputMethod.EndInvoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_GetOverlayInputMethod::EndInvoke(ByRef<Valve::VR::VROverlayInputMethod> peInputMethod, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetOverlayInputMethod::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peInputMethod), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, byref(peInputMethod), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._SetOverlayInputMethod
#include "Valve/VR/IVROverlay__SetOverlayInputMethod.hpp"
// Including type: Valve.VR.EVROverlayError
#include "Valve/VR/EVROverlayError.hpp"
// Including type: Valve.VR.VROverlayInputMethod
#include "Valve/VR/VROverlayInputMethod.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetOverlayInputMethod.Invoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_SetOverlayInputMethod::Invoke(uint64_t ulOverlayHandle, Valve::VR::VROverlayInputMethod eInputMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetOverlayInputMethod::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(eInputMethod)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, eInputMethod);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetOverlayInputMethod.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_SetOverlayInputMethod::BeginInvoke(uint64_t ulOverlayHandle, Valve::VR::VROverlayInputMethod eInputMethod, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetOverlayInputMethod::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(eInputMethod), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, eInputMethod, callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetOverlayInputMethod.EndInvoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_SetOverlayInputMethod::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetOverlayInputMethod::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._GetOverlayMouseScale
#include "Valve/VR/IVROverlay__GetOverlayMouseScale.hpp"
// Including type: Valve.VR.EVROverlayError
#include "Valve/VR/EVROverlayError.hpp"
// Including type: Valve.VR.HmdVector2_t
#include "Valve/VR/HmdVector2_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetOverlayMouseScale.Invoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_GetOverlayMouseScale::Invoke(uint64_t ulOverlayHandle, ByRef<Valve::VR::HmdVector2_t> pvecMouseScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetOverlayMouseScale::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pvecMouseScale)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pvecMouseScale));
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetOverlayMouseScale.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_GetOverlayMouseScale::BeginInvoke(uint64_t ulOverlayHandle, ByRef<Valve::VR::HmdVector2_t> pvecMouseScale, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetOverlayMouseScale::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pvecMouseScale), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pvecMouseScale), callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetOverlayMouseScale.EndInvoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_GetOverlayMouseScale::EndInvoke(ByRef<Valve::VR::HmdVector2_t> pvecMouseScale, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetOverlayMouseScale::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pvecMouseScale), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, byref(pvecMouseScale), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._SetOverlayMouseScale
#include "Valve/VR/IVROverlay__SetOverlayMouseScale.hpp"
// Including type: Valve.VR.EVROverlayError
#include "Valve/VR/EVROverlayError.hpp"
// Including type: Valve.VR.HmdVector2_t
#include "Valve/VR/HmdVector2_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetOverlayMouseScale.Invoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_SetOverlayMouseScale::Invoke(uint64_t ulOverlayHandle, ByRef<Valve::VR::HmdVector2_t> pvecMouseScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetOverlayMouseScale::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pvecMouseScale)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pvecMouseScale));
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetOverlayMouseScale.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_SetOverlayMouseScale::BeginInvoke(uint64_t ulOverlayHandle, ByRef<Valve::VR::HmdVector2_t> pvecMouseScale, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetOverlayMouseScale::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pvecMouseScale), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pvecMouseScale), callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetOverlayMouseScale.EndInvoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_SetOverlayMouseScale::EndInvoke(ByRef<Valve::VR::HmdVector2_t> pvecMouseScale, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetOverlayMouseScale::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pvecMouseScale), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, byref(pvecMouseScale), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._ComputeOverlayIntersection
#include "Valve/VR/IVROverlay__ComputeOverlayIntersection.hpp"
// Including type: Valve.VR.VROverlayIntersectionParams_t
#include "Valve/VR/VROverlayIntersectionParams_t.hpp"
// Including type: Valve.VR.VROverlayIntersectionResults_t
#include "Valve/VR/VROverlayIntersectionResults_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._ComputeOverlayIntersection.Invoke
bool Valve::VR::IVROverlay::_ComputeOverlayIntersection::Invoke(uint64_t ulOverlayHandle, ByRef<Valve::VR::VROverlayIntersectionParams_t> pParams, ByRef<Valve::VR::VROverlayIntersectionResults_t> pResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_ComputeOverlayIntersection::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pParams), ::il2cpp_utils::ExtractType(pResults)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ulOverlayHandle, byref(pParams), byref(pResults));
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._ComputeOverlayIntersection.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_ComputeOverlayIntersection::BeginInvoke(uint64_t ulOverlayHandle, ByRef<Valve::VR::VROverlayIntersectionParams_t> pParams, ByRef<Valve::VR::VROverlayIntersectionResults_t> pResults, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_ComputeOverlayIntersection::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pParams), ::il2cpp_utils::ExtractType(pResults), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pParams), byref(pResults), callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._ComputeOverlayIntersection.EndInvoke
bool Valve::VR::IVROverlay::_ComputeOverlayIntersection::EndInvoke(ByRef<Valve::VR::VROverlayIntersectionParams_t> pParams, ByRef<Valve::VR::VROverlayIntersectionResults_t> pResults, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_ComputeOverlayIntersection::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pParams), ::il2cpp_utils::ExtractType(pResults), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pParams), byref(pResults), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._IsHoverTargetOverlay
#include "Valve/VR/IVROverlay__IsHoverTargetOverlay.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._IsHoverTargetOverlay.Invoke
bool Valve::VR::IVROverlay::_IsHoverTargetOverlay::Invoke(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_IsHoverTargetOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._IsHoverTargetOverlay.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_IsHoverTargetOverlay::BeginInvoke(uint64_t ulOverlayHandle, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_IsHoverTargetOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._IsHoverTargetOverlay.EndInvoke
bool Valve::VR::IVROverlay::_IsHoverTargetOverlay::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_IsHoverTargetOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._GetGamepadFocusOverlay
#include "Valve/VR/IVROverlay__GetGamepadFocusOverlay.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetGamepadFocusOverlay.Invoke
uint64_t Valve::VR::IVROverlay::_GetGamepadFocusOverlay::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetGamepadFocusOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetGamepadFocusOverlay.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_GetGamepadFocusOverlay::BeginInvoke(System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetGamepadFocusOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetGamepadFocusOverlay.EndInvoke
uint64_t Valve::VR::IVROverlay::_GetGamepadFocusOverlay::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetGamepadFocusOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._SetGamepadFocusOverlay
#include "Valve/VR/IVROverlay__SetGamepadFocusOverlay.hpp"
// Including type: Valve.VR.EVROverlayError
#include "Valve/VR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetGamepadFocusOverlay.Invoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_SetGamepadFocusOverlay::Invoke(uint64_t ulNewFocusOverlay) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetGamepadFocusOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulNewFocusOverlay)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulNewFocusOverlay);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetGamepadFocusOverlay.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_SetGamepadFocusOverlay::BeginInvoke(uint64_t ulNewFocusOverlay, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetGamepadFocusOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulNewFocusOverlay), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ulNewFocusOverlay, callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetGamepadFocusOverlay.EndInvoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_SetGamepadFocusOverlay::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetGamepadFocusOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._SetOverlayNeighbor
#include "Valve/VR/IVROverlay__SetOverlayNeighbor.hpp"
// Including type: Valve.VR.EVROverlayError
#include "Valve/VR/EVROverlayError.hpp"
// Including type: Valve.VR.EOverlayDirection
#include "Valve/VR/EOverlayDirection.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetOverlayNeighbor.Invoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_SetOverlayNeighbor::Invoke(Valve::VR::EOverlayDirection eDirection, uint64_t ulFrom, uint64_t ulTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetOverlayNeighbor::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eDirection), ::il2cpp_utils::ExtractType(ulFrom), ::il2cpp_utils::ExtractType(ulTo)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, eDirection, ulFrom, ulTo);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetOverlayNeighbor.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_SetOverlayNeighbor::BeginInvoke(Valve::VR::EOverlayDirection eDirection, uint64_t ulFrom, uint64_t ulTo, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetOverlayNeighbor::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eDirection), ::il2cpp_utils::ExtractType(ulFrom), ::il2cpp_utils::ExtractType(ulTo), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, eDirection, ulFrom, ulTo, callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetOverlayNeighbor.EndInvoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_SetOverlayNeighbor::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetOverlayNeighbor::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._MoveGamepadFocusToNeighbor
#include "Valve/VR/IVROverlay__MoveGamepadFocusToNeighbor.hpp"
// Including type: Valve.VR.EVROverlayError
#include "Valve/VR/EVROverlayError.hpp"
// Including type: Valve.VR.EOverlayDirection
#include "Valve/VR/EOverlayDirection.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._MoveGamepadFocusToNeighbor.Invoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_MoveGamepadFocusToNeighbor::Invoke(Valve::VR::EOverlayDirection eDirection, uint64_t ulFrom) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_MoveGamepadFocusToNeighbor::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eDirection), ::il2cpp_utils::ExtractType(ulFrom)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, eDirection, ulFrom);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._MoveGamepadFocusToNeighbor.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_MoveGamepadFocusToNeighbor::BeginInvoke(Valve::VR::EOverlayDirection eDirection, uint64_t ulFrom, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_MoveGamepadFocusToNeighbor::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eDirection), ::il2cpp_utils::ExtractType(ulFrom), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, eDirection, ulFrom, callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._MoveGamepadFocusToNeighbor.EndInvoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_MoveGamepadFocusToNeighbor::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_MoveGamepadFocusToNeighbor::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._SetOverlayDualAnalogTransform
#include "Valve/VR/IVROverlay__SetOverlayDualAnalogTransform.hpp"
// Including type: Valve.VR.EVROverlayError
#include "Valve/VR/EVROverlayError.hpp"
// Including type: Valve.VR.EDualAnalogWhich
#include "Valve/VR/EDualAnalogWhich.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetOverlayDualAnalogTransform.Invoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_SetOverlayDualAnalogTransform::Invoke(uint64_t ulOverlay, Valve::VR::EDualAnalogWhich eWhich, System::IntPtr vCenter, float fRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetOverlayDualAnalogTransform::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlay), ::il2cpp_utils::ExtractType(eWhich), ::il2cpp_utils::ExtractType(vCenter), ::il2cpp_utils::ExtractType(fRadius)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlay, eWhich, vCenter, fRadius);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetOverlayDualAnalogTransform.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_SetOverlayDualAnalogTransform::BeginInvoke(uint64_t ulOverlay, Valve::VR::EDualAnalogWhich eWhich, System::IntPtr vCenter, float fRadius, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetOverlayDualAnalogTransform::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlay), ::il2cpp_utils::ExtractType(eWhich), ::il2cpp_utils::ExtractType(vCenter), ::il2cpp_utils::ExtractType(fRadius), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ulOverlay, eWhich, vCenter, fRadius, callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetOverlayDualAnalogTransform.EndInvoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_SetOverlayDualAnalogTransform::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetOverlayDualAnalogTransform::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._GetOverlayDualAnalogTransform
#include "Valve/VR/IVROverlay__GetOverlayDualAnalogTransform.hpp"
// Including type: Valve.VR.EVROverlayError
#include "Valve/VR/EVROverlayError.hpp"
// Including type: Valve.VR.EDualAnalogWhich
#include "Valve/VR/EDualAnalogWhich.hpp"
// Including type: Valve.VR.HmdVector2_t
#include "Valve/VR/HmdVector2_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetOverlayDualAnalogTransform.Invoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_GetOverlayDualAnalogTransform::Invoke(uint64_t ulOverlay, Valve::VR::EDualAnalogWhich eWhich, ByRef<Valve::VR::HmdVector2_t> pvCenter, ByRef<float> pfRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetOverlayDualAnalogTransform::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlay), ::il2cpp_utils::ExtractType(eWhich), ::il2cpp_utils::ExtractType(pvCenter), ::il2cpp_utils::ExtractType(pfRadius)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlay, eWhich, byref(pvCenter), byref(pfRadius));
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetOverlayDualAnalogTransform.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_GetOverlayDualAnalogTransform::BeginInvoke(uint64_t ulOverlay, Valve::VR::EDualAnalogWhich eWhich, ByRef<Valve::VR::HmdVector2_t> pvCenter, ByRef<float> pfRadius, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetOverlayDualAnalogTransform::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlay), ::il2cpp_utils::ExtractType(eWhich), ::il2cpp_utils::ExtractType(pvCenter), ::il2cpp_utils::ExtractType(pfRadius), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ulOverlay, eWhich, byref(pvCenter), byref(pfRadius), callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetOverlayDualAnalogTransform.EndInvoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_GetOverlayDualAnalogTransform::EndInvoke(ByRef<Valve::VR::HmdVector2_t> pvCenter, ByRef<float> pfRadius, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetOverlayDualAnalogTransform::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pvCenter), ::il2cpp_utils::ExtractType(pfRadius), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, byref(pvCenter), byref(pfRadius), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._SetOverlayTexture
#include "Valve/VR/IVROverlay__SetOverlayTexture.hpp"
// Including type: Valve.VR.EVROverlayError
#include "Valve/VR/EVROverlayError.hpp"
// Including type: Valve.VR.Texture_t
#include "Valve/VR/Texture_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetOverlayTexture.Invoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_SetOverlayTexture::Invoke(uint64_t ulOverlayHandle, ByRef<Valve::VR::Texture_t> pTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetOverlayTexture::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pTexture)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pTexture));
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetOverlayTexture.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_SetOverlayTexture::BeginInvoke(uint64_t ulOverlayHandle, ByRef<Valve::VR::Texture_t> pTexture, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetOverlayTexture::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pTexture), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pTexture), callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetOverlayTexture.EndInvoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_SetOverlayTexture::EndInvoke(ByRef<Valve::VR::Texture_t> pTexture, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetOverlayTexture::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pTexture), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, byref(pTexture), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._ClearOverlayTexture
#include "Valve/VR/IVROverlay__ClearOverlayTexture.hpp"
// Including type: Valve.VR.EVROverlayError
#include "Valve/VR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._ClearOverlayTexture.Invoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_ClearOverlayTexture::Invoke(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_ClearOverlayTexture::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._ClearOverlayTexture.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_ClearOverlayTexture::BeginInvoke(uint64_t ulOverlayHandle, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_ClearOverlayTexture::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._ClearOverlayTexture.EndInvoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_ClearOverlayTexture::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_ClearOverlayTexture::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._SetOverlayRaw
#include "Valve/VR/IVROverlay__SetOverlayRaw.hpp"
// Including type: Valve.VR.EVROverlayError
#include "Valve/VR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetOverlayRaw.Invoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_SetOverlayRaw::Invoke(uint64_t ulOverlayHandle, System::IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetOverlayRaw::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pvBuffer), ::il2cpp_utils::ExtractType(unWidth), ::il2cpp_utils::ExtractType(unHeight), ::il2cpp_utils::ExtractType(unDepth)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, pvBuffer, unWidth, unHeight, unDepth);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetOverlayRaw.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_SetOverlayRaw::BeginInvoke(uint64_t ulOverlayHandle, System::IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetOverlayRaw::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pvBuffer), ::il2cpp_utils::ExtractType(unWidth), ::il2cpp_utils::ExtractType(unHeight), ::il2cpp_utils::ExtractType(unDepth), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, pvBuffer, unWidth, unHeight, unDepth, callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetOverlayRaw.EndInvoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_SetOverlayRaw::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetOverlayRaw::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._SetOverlayFromFile
#include "Valve/VR/IVROverlay__SetOverlayFromFile.hpp"
// Including type: Valve.VR.EVROverlayError
#include "Valve/VR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetOverlayFromFile.Invoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_SetOverlayFromFile::Invoke(uint64_t ulOverlayHandle, ::StringW pchFilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetOverlayFromFile::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pchFilePath)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, pchFilePath);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetOverlayFromFile.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_SetOverlayFromFile::BeginInvoke(uint64_t ulOverlayHandle, ::StringW pchFilePath, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetOverlayFromFile::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pchFilePath), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, pchFilePath, callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetOverlayFromFile.EndInvoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_SetOverlayFromFile::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetOverlayFromFile::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._GetOverlayTexture
#include "Valve/VR/IVROverlay__GetOverlayTexture.hpp"
// Including type: Valve.VR.EVROverlayError
#include "Valve/VR/EVROverlayError.hpp"
// Including type: Valve.VR.ETextureType
#include "Valve/VR/ETextureType.hpp"
// Including type: Valve.VR.EColorSpace
#include "Valve/VR/EColorSpace.hpp"
// Including type: Valve.VR.VRTextureBounds_t
#include "Valve/VR/VRTextureBounds_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetOverlayTexture.Invoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_GetOverlayTexture::Invoke(uint64_t ulOverlayHandle, ByRef<System::IntPtr> pNativeTextureHandle, System::IntPtr pNativeTextureRef, ByRef<uint> pWidth, ByRef<uint> pHeight, ByRef<uint> pNativeFormat, ByRef<Valve::VR::ETextureType> pAPIType, ByRef<Valve::VR::EColorSpace> pColorSpace, ByRef<Valve::VR::VRTextureBounds_t> pTextureBounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetOverlayTexture::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pNativeTextureHandle), ::il2cpp_utils::ExtractType(pNativeTextureRef), ::il2cpp_utils::ExtractType(pWidth), ::il2cpp_utils::ExtractType(pHeight), ::il2cpp_utils::ExtractType(pNativeFormat), ::il2cpp_utils::ExtractType(pAPIType), ::il2cpp_utils::ExtractType(pColorSpace), ::il2cpp_utils::ExtractType(pTextureBounds)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pNativeTextureHandle), pNativeTextureRef, byref(pWidth), byref(pHeight), byref(pNativeFormat), byref(pAPIType), byref(pColorSpace), byref(pTextureBounds));
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetOverlayTexture.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_GetOverlayTexture::BeginInvoke(uint64_t ulOverlayHandle, ByRef<System::IntPtr> pNativeTextureHandle, System::IntPtr pNativeTextureRef, ByRef<uint> pWidth, ByRef<uint> pHeight, ByRef<uint> pNativeFormat, ByRef<Valve::VR::ETextureType> pAPIType, ByRef<Valve::VR::EColorSpace> pColorSpace, ByRef<Valve::VR::VRTextureBounds_t> pTextureBounds, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetOverlayTexture::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pNativeTextureHandle), ::il2cpp_utils::ExtractType(pNativeTextureRef), ::il2cpp_utils::ExtractType(pWidth), ::il2cpp_utils::ExtractType(pHeight), ::il2cpp_utils::ExtractType(pNativeFormat), ::il2cpp_utils::ExtractType(pAPIType), ::il2cpp_utils::ExtractType(pColorSpace), ::il2cpp_utils::ExtractType(pTextureBounds), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pNativeTextureHandle), pNativeTextureRef, byref(pWidth), byref(pHeight), byref(pNativeFormat), byref(pAPIType), byref(pColorSpace), byref(pTextureBounds), callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetOverlayTexture.EndInvoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_GetOverlayTexture::EndInvoke(ByRef<System::IntPtr> pNativeTextureHandle, ByRef<uint> pWidth, ByRef<uint> pHeight, ByRef<uint> pNativeFormat, ByRef<Valve::VR::ETextureType> pAPIType, ByRef<Valve::VR::EColorSpace> pColorSpace, ByRef<Valve::VR::VRTextureBounds_t> pTextureBounds, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetOverlayTexture::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pNativeTextureHandle), ::il2cpp_utils::ExtractType(pWidth), ::il2cpp_utils::ExtractType(pHeight), ::il2cpp_utils::ExtractType(pNativeFormat), ::il2cpp_utils::ExtractType(pAPIType), ::il2cpp_utils::ExtractType(pColorSpace), ::il2cpp_utils::ExtractType(pTextureBounds), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, byref(pNativeTextureHandle), byref(pWidth), byref(pHeight), byref(pNativeFormat), byref(pAPIType), byref(pColorSpace), byref(pTextureBounds), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._ReleaseNativeOverlayHandle
#include "Valve/VR/IVROverlay__ReleaseNativeOverlayHandle.hpp"
// Including type: Valve.VR.EVROverlayError
#include "Valve/VR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._ReleaseNativeOverlayHandle.Invoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_ReleaseNativeOverlayHandle::Invoke(uint64_t ulOverlayHandle, System::IntPtr pNativeTextureHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_ReleaseNativeOverlayHandle::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pNativeTextureHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, pNativeTextureHandle);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._ReleaseNativeOverlayHandle.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_ReleaseNativeOverlayHandle::BeginInvoke(uint64_t ulOverlayHandle, System::IntPtr pNativeTextureHandle, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_ReleaseNativeOverlayHandle::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pNativeTextureHandle), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, pNativeTextureHandle, callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._ReleaseNativeOverlayHandle.EndInvoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_ReleaseNativeOverlayHandle::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_ReleaseNativeOverlayHandle::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._GetOverlayTextureSize
#include "Valve/VR/IVROverlay__GetOverlayTextureSize.hpp"
// Including type: Valve.VR.EVROverlayError
#include "Valve/VR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetOverlayTextureSize.Invoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_GetOverlayTextureSize::Invoke(uint64_t ulOverlayHandle, ByRef<uint> pWidth, ByRef<uint> pHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetOverlayTextureSize::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pWidth), ::il2cpp_utils::ExtractType(pHeight)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pWidth), byref(pHeight));
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetOverlayTextureSize.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_GetOverlayTextureSize::BeginInvoke(uint64_t ulOverlayHandle, ByRef<uint> pWidth, ByRef<uint> pHeight, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetOverlayTextureSize::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pWidth), ::il2cpp_utils::ExtractType(pHeight), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pWidth), byref(pHeight), callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetOverlayTextureSize.EndInvoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_GetOverlayTextureSize::EndInvoke(ByRef<uint> pWidth, ByRef<uint> pHeight, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetOverlayTextureSize::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pWidth), ::il2cpp_utils::ExtractType(pHeight), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, byref(pWidth), byref(pHeight), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._CreateDashboardOverlay
#include "Valve/VR/IVROverlay__CreateDashboardOverlay.hpp"
// Including type: Valve.VR.EVROverlayError
#include "Valve/VR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._CreateDashboardOverlay.Invoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_CreateDashboardOverlay::Invoke(::StringW pchOverlayKey, ::StringW pchOverlayFriendlyName, ByRef<uint64_t> pMainHandle, ByRef<uint64_t> pThumbnailHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_CreateDashboardOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchOverlayKey), ::il2cpp_utils::ExtractType(pchOverlayFriendlyName), ::il2cpp_utils::ExtractType(pMainHandle), ::il2cpp_utils::ExtractType(pThumbnailHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, pchOverlayKey, pchOverlayFriendlyName, byref(pMainHandle), byref(pThumbnailHandle));
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._CreateDashboardOverlay.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_CreateDashboardOverlay::BeginInvoke(::StringW pchOverlayKey, ::StringW pchOverlayFriendlyName, ByRef<uint64_t> pMainHandle, ByRef<uint64_t> pThumbnailHandle, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_CreateDashboardOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchOverlayKey), ::il2cpp_utils::ExtractType(pchOverlayFriendlyName), ::il2cpp_utils::ExtractType(pMainHandle), ::il2cpp_utils::ExtractType(pThumbnailHandle), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, pchOverlayKey, pchOverlayFriendlyName, byref(pMainHandle), byref(pThumbnailHandle), callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._CreateDashboardOverlay.EndInvoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_CreateDashboardOverlay::EndInvoke(ByRef<uint64_t> pMainHandle, ByRef<uint64_t> pThumbnailHandle, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_CreateDashboardOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pMainHandle), ::il2cpp_utils::ExtractType(pThumbnailHandle), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, byref(pMainHandle), byref(pThumbnailHandle), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._IsDashboardVisible
#include "Valve/VR/IVROverlay__IsDashboardVisible.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._IsDashboardVisible.Invoke
bool Valve::VR::IVROverlay::_IsDashboardVisible::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_IsDashboardVisible::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._IsDashboardVisible.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_IsDashboardVisible::BeginInvoke(System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_IsDashboardVisible::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._IsDashboardVisible.EndInvoke
bool Valve::VR::IVROverlay::_IsDashboardVisible::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_IsDashboardVisible::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._IsActiveDashboardOverlay
#include "Valve/VR/IVROverlay__IsActiveDashboardOverlay.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._IsActiveDashboardOverlay.Invoke
bool Valve::VR::IVROverlay::_IsActiveDashboardOverlay::Invoke(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_IsActiveDashboardOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._IsActiveDashboardOverlay.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_IsActiveDashboardOverlay::BeginInvoke(uint64_t ulOverlayHandle, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_IsActiveDashboardOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._IsActiveDashboardOverlay.EndInvoke
bool Valve::VR::IVROverlay::_IsActiveDashboardOverlay::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_IsActiveDashboardOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._SetDashboardOverlaySceneProcess
#include "Valve/VR/IVROverlay__SetDashboardOverlaySceneProcess.hpp"
// Including type: Valve.VR.EVROverlayError
#include "Valve/VR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetDashboardOverlaySceneProcess.Invoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_SetDashboardOverlaySceneProcess::Invoke(uint64_t ulOverlayHandle, uint unProcessId) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetDashboardOverlaySceneProcess::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(unProcessId)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, unProcessId);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetDashboardOverlaySceneProcess.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_SetDashboardOverlaySceneProcess::BeginInvoke(uint64_t ulOverlayHandle, uint unProcessId, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetDashboardOverlaySceneProcess::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(unProcessId), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, unProcessId, callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetDashboardOverlaySceneProcess.EndInvoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_SetDashboardOverlaySceneProcess::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetDashboardOverlaySceneProcess::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._GetDashboardOverlaySceneProcess
#include "Valve/VR/IVROverlay__GetDashboardOverlaySceneProcess.hpp"
// Including type: Valve.VR.EVROverlayError
#include "Valve/VR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetDashboardOverlaySceneProcess.Invoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_GetDashboardOverlaySceneProcess::Invoke(uint64_t ulOverlayHandle, ByRef<uint> punProcessId) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetDashboardOverlaySceneProcess::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(punProcessId)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(punProcessId));
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetDashboardOverlaySceneProcess.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_GetDashboardOverlaySceneProcess::BeginInvoke(uint64_t ulOverlayHandle, ByRef<uint> punProcessId, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetDashboardOverlaySceneProcess::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(punProcessId), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(punProcessId), callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetDashboardOverlaySceneProcess.EndInvoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_GetDashboardOverlaySceneProcess::EndInvoke(ByRef<uint> punProcessId, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetDashboardOverlaySceneProcess::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(punProcessId), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, byref(punProcessId), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._ShowDashboard
#include "Valve/VR/IVROverlay__ShowDashboard.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._ShowDashboard.Invoke
void Valve::VR::IVROverlay::_ShowDashboard::Invoke(::StringW pchOverlayToShow) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_ShowDashboard::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchOverlayToShow)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchOverlayToShow);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._ShowDashboard.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_ShowDashboard::BeginInvoke(::StringW pchOverlayToShow, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_ShowDashboard::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchOverlayToShow), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, pchOverlayToShow, callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._ShowDashboard.EndInvoke
void Valve::VR::IVROverlay::_ShowDashboard::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_ShowDashboard::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._GetPrimaryDashboardDevice
#include "Valve/VR/IVROverlay__GetPrimaryDashboardDevice.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetPrimaryDashboardDevice.Invoke
uint Valve::VR::IVROverlay::_GetPrimaryDashboardDevice::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetPrimaryDashboardDevice::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetPrimaryDashboardDevice.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_GetPrimaryDashboardDevice::BeginInvoke(System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetPrimaryDashboardDevice::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetPrimaryDashboardDevice.EndInvoke
uint Valve::VR::IVROverlay::_GetPrimaryDashboardDevice::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetPrimaryDashboardDevice::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._ShowKeyboard
#include "Valve/VR/IVROverlay__ShowKeyboard.hpp"
// Including type: Valve.VR.EVROverlayError
#include "Valve/VR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._ShowKeyboard.Invoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_ShowKeyboard::Invoke(int eInputMode, int eLineInputMode, ::StringW pchDescription, uint unCharMax, ::StringW pchExistingText, bool bUseMinimalMode, uint64_t uUserValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_ShowKeyboard::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eInputMode), ::il2cpp_utils::ExtractType(eLineInputMode), ::il2cpp_utils::ExtractType(pchDescription), ::il2cpp_utils::ExtractType(unCharMax), ::il2cpp_utils::ExtractType(pchExistingText), ::il2cpp_utils::ExtractType(bUseMinimalMode), ::il2cpp_utils::ExtractType(uUserValue)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, eInputMode, eLineInputMode, pchDescription, unCharMax, pchExistingText, bUseMinimalMode, uUserValue);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._ShowKeyboard.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_ShowKeyboard::BeginInvoke(int eInputMode, int eLineInputMode, ::StringW pchDescription, uint unCharMax, ::StringW pchExistingText, bool bUseMinimalMode, uint64_t uUserValue, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_ShowKeyboard::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eInputMode), ::il2cpp_utils::ExtractType(eLineInputMode), ::il2cpp_utils::ExtractType(pchDescription), ::il2cpp_utils::ExtractType(unCharMax), ::il2cpp_utils::ExtractType(pchExistingText), ::il2cpp_utils::ExtractType(bUseMinimalMode), ::il2cpp_utils::ExtractType(uUserValue), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, eInputMode, eLineInputMode, pchDescription, unCharMax, pchExistingText, bUseMinimalMode, uUserValue, callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._ShowKeyboard.EndInvoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_ShowKeyboard::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_ShowKeyboard::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._ShowKeyboardForOverlay
#include "Valve/VR/IVROverlay__ShowKeyboardForOverlay.hpp"
// Including type: Valve.VR.EVROverlayError
#include "Valve/VR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._ShowKeyboardForOverlay.Invoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_ShowKeyboardForOverlay::Invoke(uint64_t ulOverlayHandle, int eInputMode, int eLineInputMode, ::StringW pchDescription, uint unCharMax, ::StringW pchExistingText, bool bUseMinimalMode, uint64_t uUserValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_ShowKeyboardForOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(eInputMode), ::il2cpp_utils::ExtractType(eLineInputMode), ::il2cpp_utils::ExtractType(pchDescription), ::il2cpp_utils::ExtractType(unCharMax), ::il2cpp_utils::ExtractType(pchExistingText), ::il2cpp_utils::ExtractType(bUseMinimalMode), ::il2cpp_utils::ExtractType(uUserValue)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, eInputMode, eLineInputMode, pchDescription, unCharMax, pchExistingText, bUseMinimalMode, uUserValue);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._ShowKeyboardForOverlay.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_ShowKeyboardForOverlay::BeginInvoke(uint64_t ulOverlayHandle, int eInputMode, int eLineInputMode, ::StringW pchDescription, uint unCharMax, ::StringW pchExistingText, bool bUseMinimalMode, uint64_t uUserValue, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_ShowKeyboardForOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(eInputMode), ::il2cpp_utils::ExtractType(eLineInputMode), ::il2cpp_utils::ExtractType(pchDescription), ::il2cpp_utils::ExtractType(unCharMax), ::il2cpp_utils::ExtractType(pchExistingText), ::il2cpp_utils::ExtractType(bUseMinimalMode), ::il2cpp_utils::ExtractType(uUserValue), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, eInputMode, eLineInputMode, pchDescription, unCharMax, pchExistingText, bUseMinimalMode, uUserValue, callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._ShowKeyboardForOverlay.EndInvoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_ShowKeyboardForOverlay::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_ShowKeyboardForOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._GetKeyboardText
#include "Valve/VR/IVROverlay__GetKeyboardText.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetKeyboardText.Invoke
uint Valve::VR::IVROverlay::_GetKeyboardText::Invoke(System::Text::StringBuilder* pchText, uint cchText) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetKeyboardText::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchText), ::il2cpp_utils::ExtractType(cchText)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchText, cchText);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetKeyboardText.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_GetKeyboardText::BeginInvoke(System::Text::StringBuilder* pchText, uint cchText, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetKeyboardText::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchText), ::il2cpp_utils::ExtractType(cchText), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, pchText, cchText, callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetKeyboardText.EndInvoke
uint Valve::VR::IVROverlay::_GetKeyboardText::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetKeyboardText::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._HideKeyboard
#include "Valve/VR/IVROverlay__HideKeyboard.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._HideKeyboard.Invoke
void Valve::VR::IVROverlay::_HideKeyboard::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_HideKeyboard::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._HideKeyboard.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_HideKeyboard::BeginInvoke(System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_HideKeyboard::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._HideKeyboard.EndInvoke
void Valve::VR::IVROverlay::_HideKeyboard::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_HideKeyboard::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._SetKeyboardTransformAbsolute
#include "Valve/VR/IVROverlay__SetKeyboardTransformAbsolute.hpp"
// Including type: Valve.VR.ETrackingUniverseOrigin
#include "Valve/VR/ETrackingUniverseOrigin.hpp"
// Including type: Valve.VR.HmdMatrix34_t
#include "Valve/VR/HmdMatrix34_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetKeyboardTransformAbsolute.Invoke
void Valve::VR::IVROverlay::_SetKeyboardTransformAbsolute::Invoke(Valve::VR::ETrackingUniverseOrigin eTrackingOrigin, ByRef<Valve::VR::HmdMatrix34_t> pmatTrackingOriginToKeyboardTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetKeyboardTransformAbsolute::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eTrackingOrigin), ::il2cpp_utils::ExtractType(pmatTrackingOriginToKeyboardTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eTrackingOrigin, byref(pmatTrackingOriginToKeyboardTransform));
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetKeyboardTransformAbsolute.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_SetKeyboardTransformAbsolute::BeginInvoke(Valve::VR::ETrackingUniverseOrigin eTrackingOrigin, ByRef<Valve::VR::HmdMatrix34_t> pmatTrackingOriginToKeyboardTransform, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetKeyboardTransformAbsolute::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eTrackingOrigin), ::il2cpp_utils::ExtractType(pmatTrackingOriginToKeyboardTransform), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, eTrackingOrigin, byref(pmatTrackingOriginToKeyboardTransform), callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetKeyboardTransformAbsolute.EndInvoke
void Valve::VR::IVROverlay::_SetKeyboardTransformAbsolute::EndInvoke(ByRef<Valve::VR::HmdMatrix34_t> pmatTrackingOriginToKeyboardTransform, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetKeyboardTransformAbsolute::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pmatTrackingOriginToKeyboardTransform), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pmatTrackingOriginToKeyboardTransform), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._SetKeyboardPositionForOverlay
#include "Valve/VR/IVROverlay__SetKeyboardPositionForOverlay.hpp"
// Including type: Valve.VR.HmdRect2_t
#include "Valve/VR/HmdRect2_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetKeyboardPositionForOverlay.Invoke
void Valve::VR::IVROverlay::_SetKeyboardPositionForOverlay::Invoke(uint64_t ulOverlayHandle, Valve::VR::HmdRect2_t avoidRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetKeyboardPositionForOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(avoidRect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ulOverlayHandle, avoidRect);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetKeyboardPositionForOverlay.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_SetKeyboardPositionForOverlay::BeginInvoke(uint64_t ulOverlayHandle, Valve::VR::HmdRect2_t avoidRect, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetKeyboardPositionForOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(avoidRect), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, avoidRect, callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetKeyboardPositionForOverlay.EndInvoke
void Valve::VR::IVROverlay::_SetKeyboardPositionForOverlay::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetKeyboardPositionForOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._SetOverlayIntersectionMask
#include "Valve/VR/IVROverlay__SetOverlayIntersectionMask.hpp"
// Including type: Valve.VR.EVROverlayError
#include "Valve/VR/EVROverlayError.hpp"
// Including type: Valve.VR.VROverlayIntersectionMaskPrimitive_t
#include "Valve/VR/VROverlayIntersectionMaskPrimitive_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetOverlayIntersectionMask.Invoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_SetOverlayIntersectionMask::Invoke(uint64_t ulOverlayHandle, ByRef<Valve::VR::VROverlayIntersectionMaskPrimitive_t> pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetOverlayIntersectionMask::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pMaskPrimitives), ::il2cpp_utils::ExtractType(unNumMaskPrimitives), ::il2cpp_utils::ExtractType(unPrimitiveSize)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pMaskPrimitives), unNumMaskPrimitives, unPrimitiveSize);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetOverlayIntersectionMask.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_SetOverlayIntersectionMask::BeginInvoke(uint64_t ulOverlayHandle, ByRef<Valve::VR::VROverlayIntersectionMaskPrimitive_t> pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetOverlayIntersectionMask::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pMaskPrimitives), ::il2cpp_utils::ExtractType(unNumMaskPrimitives), ::il2cpp_utils::ExtractType(unPrimitiveSize), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pMaskPrimitives), unNumMaskPrimitives, unPrimitiveSize, callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._SetOverlayIntersectionMask.EndInvoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_SetOverlayIntersectionMask::EndInvoke(ByRef<Valve::VR::VROverlayIntersectionMaskPrimitive_t> pMaskPrimitives, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_SetOverlayIntersectionMask::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pMaskPrimitives), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, byref(pMaskPrimitives), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._GetOverlayFlags
#include "Valve/VR/IVROverlay__GetOverlayFlags.hpp"
// Including type: Valve.VR.EVROverlayError
#include "Valve/VR/EVROverlayError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetOverlayFlags.Invoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_GetOverlayFlags::Invoke(uint64_t ulOverlayHandle, ByRef<uint> pFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetOverlayFlags::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pFlags));
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetOverlayFlags.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_GetOverlayFlags::BeginInvoke(uint64_t ulOverlayHandle, ByRef<uint> pFlags, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetOverlayFlags::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pFlags), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pFlags), callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._GetOverlayFlags.EndInvoke
Valve::VR::EVROverlayError Valve::VR::IVROverlay::_GetOverlayFlags::EndInvoke(ByRef<uint> pFlags, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_GetOverlayFlags::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pFlags), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, byref(pFlags), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._ShowMessageOverlay
#include "Valve/VR/IVROverlay__ShowMessageOverlay.hpp"
// Including type: Valve.VR.VRMessageOverlayResponse
#include "Valve/VR/VRMessageOverlayResponse.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._ShowMessageOverlay.Invoke
Valve::VR::VRMessageOverlayResponse Valve::VR::IVROverlay::_ShowMessageOverlay::Invoke(::StringW pchText, ::StringW pchCaption, ::StringW pchButton0Text, ::StringW pchButton1Text, ::StringW pchButton2Text, ::StringW pchButton3Text) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_ShowMessageOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchText), ::il2cpp_utils::ExtractType(pchCaption), ::il2cpp_utils::ExtractType(pchButton0Text), ::il2cpp_utils::ExtractType(pchButton1Text), ::il2cpp_utils::ExtractType(pchButton2Text), ::il2cpp_utils::ExtractType(pchButton3Text)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::VRMessageOverlayResponse, false>(this, ___internal__method, pchText, pchCaption, pchButton0Text, pchButton1Text, pchButton2Text, pchButton3Text);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._ShowMessageOverlay.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_ShowMessageOverlay::BeginInvoke(::StringW pchText, ::StringW pchCaption, ::StringW pchButton0Text, ::StringW pchButton1Text, ::StringW pchButton2Text, ::StringW pchButton3Text, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_ShowMessageOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchText), ::il2cpp_utils::ExtractType(pchCaption), ::il2cpp_utils::ExtractType(pchButton0Text), ::il2cpp_utils::ExtractType(pchButton1Text), ::il2cpp_utils::ExtractType(pchButton2Text), ::il2cpp_utils::ExtractType(pchButton3Text), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, pchText, pchCaption, pchButton0Text, pchButton1Text, pchButton2Text, pchButton3Text, callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._ShowMessageOverlay.EndInvoke
Valve::VR::VRMessageOverlayResponse Valve::VR::IVROverlay::_ShowMessageOverlay::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_ShowMessageOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::VRMessageOverlayResponse, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVROverlay/Valve.VR._CloseMessageOverlay
#include "Valve/VR/IVROverlay__CloseMessageOverlay.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._CloseMessageOverlay.Invoke
void Valve::VR::IVROverlay::_CloseMessageOverlay::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_CloseMessageOverlay::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._CloseMessageOverlay.BeginInvoke
System::IAsyncResult* Valve::VR::IVROverlay::_CloseMessageOverlay::BeginInvoke(System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_CloseMessageOverlay::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: Valve.VR.IVROverlay/Valve.VR._CloseMessageOverlay.EndInvoke
void Valve::VR::IVROverlay::_CloseMessageOverlay::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVROverlay::_CloseMessageOverlay::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRRenderModels/Valve.VR._LoadRenderModel_Async
#include "Valve/VR/IVRRenderModels__LoadRenderModel_Async.hpp"
// Including type: Valve.VR.EVRRenderModelError
#include "Valve/VR/EVRRenderModelError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._LoadRenderModel_Async.Invoke
Valve::VR::EVRRenderModelError Valve::VR::IVRRenderModels::_LoadRenderModel_Async::Invoke(::StringW pchRenderModelName, ByRef<System::IntPtr> ppRenderModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_LoadRenderModel_Async::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(ppRenderModel)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRRenderModelError, false>(this, ___internal__method, pchRenderModelName, byref(ppRenderModel));
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._LoadRenderModel_Async.BeginInvoke
System::IAsyncResult* Valve::VR::IVRRenderModels::_LoadRenderModel_Async::BeginInvoke(::StringW pchRenderModelName, ByRef<System::IntPtr> ppRenderModel, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_LoadRenderModel_Async::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(ppRenderModel), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, pchRenderModelName, byref(ppRenderModel), callback, object);
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._LoadRenderModel_Async.EndInvoke
Valve::VR::EVRRenderModelError Valve::VR::IVRRenderModels::_LoadRenderModel_Async::EndInvoke(ByRef<System::IntPtr> ppRenderModel, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_LoadRenderModel_Async::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ppRenderModel), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRRenderModelError, false>(this, ___internal__method, byref(ppRenderModel), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRRenderModels/Valve.VR._FreeRenderModel
#include "Valve/VR/IVRRenderModels__FreeRenderModel.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._FreeRenderModel.Invoke
void Valve::VR::IVRRenderModels::_FreeRenderModel::Invoke(System::IntPtr pRenderModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_FreeRenderModel::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pRenderModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pRenderModel);
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._FreeRenderModel.BeginInvoke
System::IAsyncResult* Valve::VR::IVRRenderModels::_FreeRenderModel::BeginInvoke(System::IntPtr pRenderModel, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_FreeRenderModel::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pRenderModel), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, pRenderModel, callback, object);
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._FreeRenderModel.EndInvoke
void Valve::VR::IVRRenderModels::_FreeRenderModel::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_FreeRenderModel::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRRenderModels/Valve.VR._LoadTexture_Async
#include "Valve/VR/IVRRenderModels__LoadTexture_Async.hpp"
// Including type: Valve.VR.EVRRenderModelError
#include "Valve/VR/EVRRenderModelError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._LoadTexture_Async.Invoke
Valve::VR::EVRRenderModelError Valve::VR::IVRRenderModels::_LoadTexture_Async::Invoke(int textureId, ByRef<System::IntPtr> ppTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_LoadTexture_Async::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textureId), ::il2cpp_utils::ExtractType(ppTexture)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRRenderModelError, false>(this, ___internal__method, textureId, byref(ppTexture));
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._LoadTexture_Async.BeginInvoke
System::IAsyncResult* Valve::VR::IVRRenderModels::_LoadTexture_Async::BeginInvoke(int textureId, ByRef<System::IntPtr> ppTexture, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_LoadTexture_Async::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textureId), ::il2cpp_utils::ExtractType(ppTexture), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, textureId, byref(ppTexture), callback, object);
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._LoadTexture_Async.EndInvoke
Valve::VR::EVRRenderModelError Valve::VR::IVRRenderModels::_LoadTexture_Async::EndInvoke(ByRef<System::IntPtr> ppTexture, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_LoadTexture_Async::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ppTexture), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRRenderModelError, false>(this, ___internal__method, byref(ppTexture), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRRenderModels/Valve.VR._FreeTexture
#include "Valve/VR/IVRRenderModels__FreeTexture.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._FreeTexture.Invoke
void Valve::VR::IVRRenderModels::_FreeTexture::Invoke(System::IntPtr pTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_FreeTexture::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pTexture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pTexture);
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._FreeTexture.BeginInvoke
System::IAsyncResult* Valve::VR::IVRRenderModels::_FreeTexture::BeginInvoke(System::IntPtr pTexture, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_FreeTexture::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pTexture), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, pTexture, callback, object);
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._FreeTexture.EndInvoke
void Valve::VR::IVRRenderModels::_FreeTexture::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_FreeTexture::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRRenderModels/Valve.VR._LoadTextureD3D11_Async
#include "Valve/VR/IVRRenderModels__LoadTextureD3D11_Async.hpp"
// Including type: Valve.VR.EVRRenderModelError
#include "Valve/VR/EVRRenderModelError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._LoadTextureD3D11_Async.Invoke
Valve::VR::EVRRenderModelError Valve::VR::IVRRenderModels::_LoadTextureD3D11_Async::Invoke(int textureId, System::IntPtr pD3D11Device, ByRef<System::IntPtr> ppD3D11Texture2D) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_LoadTextureD3D11_Async::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textureId), ::il2cpp_utils::ExtractType(pD3D11Device), ::il2cpp_utils::ExtractType(ppD3D11Texture2D)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRRenderModelError, false>(this, ___internal__method, textureId, pD3D11Device, byref(ppD3D11Texture2D));
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._LoadTextureD3D11_Async.BeginInvoke
System::IAsyncResult* Valve::VR::IVRRenderModels::_LoadTextureD3D11_Async::BeginInvoke(int textureId, System::IntPtr pD3D11Device, ByRef<System::IntPtr> ppD3D11Texture2D, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_LoadTextureD3D11_Async::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textureId), ::il2cpp_utils::ExtractType(pD3D11Device), ::il2cpp_utils::ExtractType(ppD3D11Texture2D), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, textureId, pD3D11Device, byref(ppD3D11Texture2D), callback, object);
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._LoadTextureD3D11_Async.EndInvoke
Valve::VR::EVRRenderModelError Valve::VR::IVRRenderModels::_LoadTextureD3D11_Async::EndInvoke(ByRef<System::IntPtr> ppD3D11Texture2D, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_LoadTextureD3D11_Async::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ppD3D11Texture2D), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRRenderModelError, false>(this, ___internal__method, byref(ppD3D11Texture2D), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRRenderModels/Valve.VR._LoadIntoTextureD3D11_Async
#include "Valve/VR/IVRRenderModels__LoadIntoTextureD3D11_Async.hpp"
// Including type: Valve.VR.EVRRenderModelError
#include "Valve/VR/EVRRenderModelError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._LoadIntoTextureD3D11_Async.Invoke
Valve::VR::EVRRenderModelError Valve::VR::IVRRenderModels::_LoadIntoTextureD3D11_Async::Invoke(int textureId, System::IntPtr pDstTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_LoadIntoTextureD3D11_Async::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textureId), ::il2cpp_utils::ExtractType(pDstTexture)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRRenderModelError, false>(this, ___internal__method, textureId, pDstTexture);
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._LoadIntoTextureD3D11_Async.BeginInvoke
System::IAsyncResult* Valve::VR::IVRRenderModels::_LoadIntoTextureD3D11_Async::BeginInvoke(int textureId, System::IntPtr pDstTexture, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_LoadIntoTextureD3D11_Async::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textureId), ::il2cpp_utils::ExtractType(pDstTexture), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, textureId, pDstTexture, callback, object);
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._LoadIntoTextureD3D11_Async.EndInvoke
Valve::VR::EVRRenderModelError Valve::VR::IVRRenderModels::_LoadIntoTextureD3D11_Async::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_LoadIntoTextureD3D11_Async::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRRenderModelError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRRenderModels/Valve.VR._FreeTextureD3D11
#include "Valve/VR/IVRRenderModels__FreeTextureD3D11.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._FreeTextureD3D11.Invoke
void Valve::VR::IVRRenderModels::_FreeTextureD3D11::Invoke(System::IntPtr pD3D11Texture2D) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_FreeTextureD3D11::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pD3D11Texture2D)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pD3D11Texture2D);
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._FreeTextureD3D11.BeginInvoke
System::IAsyncResult* Valve::VR::IVRRenderModels::_FreeTextureD3D11::BeginInvoke(System::IntPtr pD3D11Texture2D, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_FreeTextureD3D11::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pD3D11Texture2D), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, pD3D11Texture2D, callback, object);
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._FreeTextureD3D11.EndInvoke
void Valve::VR::IVRRenderModels::_FreeTextureD3D11::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_FreeTextureD3D11::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRRenderModels/Valve.VR._GetRenderModelName
#include "Valve/VR/IVRRenderModels__GetRenderModelName.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._GetRenderModelName.Invoke
uint Valve::VR::IVRRenderModels::_GetRenderModelName::Invoke(uint unRenderModelIndex, System::Text::StringBuilder* pchRenderModelName, uint unRenderModelNameLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_GetRenderModelName::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unRenderModelIndex), ::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(unRenderModelNameLen)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, unRenderModelIndex, pchRenderModelName, unRenderModelNameLen);
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._GetRenderModelName.BeginInvoke
System::IAsyncResult* Valve::VR::IVRRenderModels::_GetRenderModelName::BeginInvoke(uint unRenderModelIndex, System::Text::StringBuilder* pchRenderModelName, uint unRenderModelNameLen, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_GetRenderModelName::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unRenderModelIndex), ::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(unRenderModelNameLen), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, unRenderModelIndex, pchRenderModelName, unRenderModelNameLen, callback, object);
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._GetRenderModelName.EndInvoke
uint Valve::VR::IVRRenderModels::_GetRenderModelName::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_GetRenderModelName::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRRenderModels/Valve.VR._GetRenderModelCount
#include "Valve/VR/IVRRenderModels__GetRenderModelCount.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._GetRenderModelCount.Invoke
uint Valve::VR::IVRRenderModels::_GetRenderModelCount::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_GetRenderModelCount::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._GetRenderModelCount.BeginInvoke
System::IAsyncResult* Valve::VR::IVRRenderModels::_GetRenderModelCount::BeginInvoke(System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_GetRenderModelCount::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._GetRenderModelCount.EndInvoke
uint Valve::VR::IVRRenderModels::_GetRenderModelCount::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_GetRenderModelCount::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRRenderModels/Valve.VR._GetComponentCount
#include "Valve/VR/IVRRenderModels__GetComponentCount.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._GetComponentCount.Invoke
uint Valve::VR::IVRRenderModels::_GetComponentCount::Invoke(::StringW pchRenderModelName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_GetComponentCount::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchRenderModelName);
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._GetComponentCount.BeginInvoke
System::IAsyncResult* Valve::VR::IVRRenderModels::_GetComponentCount::BeginInvoke(::StringW pchRenderModelName, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_GetComponentCount::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, pchRenderModelName, callback, object);
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._GetComponentCount.EndInvoke
uint Valve::VR::IVRRenderModels::_GetComponentCount::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_GetComponentCount::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRRenderModels/Valve.VR._GetComponentName
#include "Valve/VR/IVRRenderModels__GetComponentName.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._GetComponentName.Invoke
uint Valve::VR::IVRRenderModels::_GetComponentName::Invoke(::StringW pchRenderModelName, uint unComponentIndex, System::Text::StringBuilder* pchComponentName, uint unComponentNameLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_GetComponentName::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(unComponentIndex), ::il2cpp_utils::ExtractType(pchComponentName), ::il2cpp_utils::ExtractType(unComponentNameLen)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchRenderModelName, unComponentIndex, pchComponentName, unComponentNameLen);
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._GetComponentName.BeginInvoke
System::IAsyncResult* Valve::VR::IVRRenderModels::_GetComponentName::BeginInvoke(::StringW pchRenderModelName, uint unComponentIndex, System::Text::StringBuilder* pchComponentName, uint unComponentNameLen, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_GetComponentName::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(unComponentIndex), ::il2cpp_utils::ExtractType(pchComponentName), ::il2cpp_utils::ExtractType(unComponentNameLen), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, pchRenderModelName, unComponentIndex, pchComponentName, unComponentNameLen, callback, object);
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._GetComponentName.EndInvoke
uint Valve::VR::IVRRenderModels::_GetComponentName::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_GetComponentName::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRRenderModels/Valve.VR._GetComponentButtonMask
#include "Valve/VR/IVRRenderModels__GetComponentButtonMask.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._GetComponentButtonMask.Invoke
uint64_t Valve::VR::IVRRenderModels::_GetComponentButtonMask::Invoke(::StringW pchRenderModelName, ::StringW pchComponentName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_GetComponentButtonMask::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(pchComponentName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, pchRenderModelName, pchComponentName);
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._GetComponentButtonMask.BeginInvoke
System::IAsyncResult* Valve::VR::IVRRenderModels::_GetComponentButtonMask::BeginInvoke(::StringW pchRenderModelName, ::StringW pchComponentName, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_GetComponentButtonMask::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(pchComponentName), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, pchRenderModelName, pchComponentName, callback, object);
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._GetComponentButtonMask.EndInvoke
uint64_t Valve::VR::IVRRenderModels::_GetComponentButtonMask::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_GetComponentButtonMask::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRRenderModels/Valve.VR._GetComponentRenderModelName
#include "Valve/VR/IVRRenderModels__GetComponentRenderModelName.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._GetComponentRenderModelName.Invoke
uint Valve::VR::IVRRenderModels::_GetComponentRenderModelName::Invoke(::StringW pchRenderModelName, ::StringW pchComponentName, System::Text::StringBuilder* pchComponentRenderModelName, uint unComponentRenderModelNameLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_GetComponentRenderModelName::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(pchComponentName), ::il2cpp_utils::ExtractType(pchComponentRenderModelName), ::il2cpp_utils::ExtractType(unComponentRenderModelNameLen)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchRenderModelName, pchComponentName, pchComponentRenderModelName, unComponentRenderModelNameLen);
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._GetComponentRenderModelName.BeginInvoke
System::IAsyncResult* Valve::VR::IVRRenderModels::_GetComponentRenderModelName::BeginInvoke(::StringW pchRenderModelName, ::StringW pchComponentName, System::Text::StringBuilder* pchComponentRenderModelName, uint unComponentRenderModelNameLen, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_GetComponentRenderModelName::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(pchComponentName), ::il2cpp_utils::ExtractType(pchComponentRenderModelName), ::il2cpp_utils::ExtractType(unComponentRenderModelNameLen), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, pchRenderModelName, pchComponentName, pchComponentRenderModelName, unComponentRenderModelNameLen, callback, object);
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._GetComponentRenderModelName.EndInvoke
uint Valve::VR::IVRRenderModels::_GetComponentRenderModelName::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_GetComponentRenderModelName::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRRenderModels/Valve.VR._GetComponentState
#include "Valve/VR/IVRRenderModels__GetComponentState.hpp"
// Including type: Valve.VR.VRControllerState_t
#include "Valve/VR/VRControllerState_t.hpp"
// Including type: Valve.VR.RenderModel_ControllerMode_State_t
#include "Valve/VR/RenderModel_ControllerMode_State_t.hpp"
// Including type: Valve.VR.RenderModel_ComponentState_t
#include "Valve/VR/RenderModel_ComponentState_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._GetComponentState.Invoke
bool Valve::VR::IVRRenderModels::_GetComponentState::Invoke(::StringW pchRenderModelName, ::StringW pchComponentName, ByRef<Valve::VR::VRControllerState_t> pControllerState, ByRef<Valve::VR::RenderModel_ControllerMode_State_t> pState, ByRef<Valve::VR::RenderModel_ComponentState_t> pComponentState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_GetComponentState::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(pchComponentName), ::il2cpp_utils::ExtractType(pControllerState), ::il2cpp_utils::ExtractType(pState), ::il2cpp_utils::ExtractType(pComponentState)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchRenderModelName, pchComponentName, byref(pControllerState), byref(pState), byref(pComponentState));
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._GetComponentState.BeginInvoke
System::IAsyncResult* Valve::VR::IVRRenderModels::_GetComponentState::BeginInvoke(::StringW pchRenderModelName, ::StringW pchComponentName, ByRef<Valve::VR::VRControllerState_t> pControllerState, ByRef<Valve::VR::RenderModel_ControllerMode_State_t> pState, ByRef<Valve::VR::RenderModel_ComponentState_t> pComponentState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_GetComponentState::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(pchComponentName), ::il2cpp_utils::ExtractType(pControllerState), ::il2cpp_utils::ExtractType(pState), ::il2cpp_utils::ExtractType(pComponentState), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, pchRenderModelName, pchComponentName, byref(pControllerState), byref(pState), byref(pComponentState), callback, object);
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._GetComponentState.EndInvoke
bool Valve::VR::IVRRenderModels::_GetComponentState::EndInvoke(ByRef<Valve::VR::VRControllerState_t> pControllerState, ByRef<Valve::VR::RenderModel_ControllerMode_State_t> pState, ByRef<Valve::VR::RenderModel_ComponentState_t> pComponentState, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_GetComponentState::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pControllerState), ::il2cpp_utils::ExtractType(pState), ::il2cpp_utils::ExtractType(pComponentState), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pControllerState), byref(pState), byref(pComponentState), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRRenderModels/Valve.VR._RenderModelHasComponent
#include "Valve/VR/IVRRenderModels__RenderModelHasComponent.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._RenderModelHasComponent.Invoke
bool Valve::VR::IVRRenderModels::_RenderModelHasComponent::Invoke(::StringW pchRenderModelName, ::StringW pchComponentName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_RenderModelHasComponent::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(pchComponentName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchRenderModelName, pchComponentName);
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._RenderModelHasComponent.BeginInvoke
System::IAsyncResult* Valve::VR::IVRRenderModels::_RenderModelHasComponent::BeginInvoke(::StringW pchRenderModelName, ::StringW pchComponentName, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_RenderModelHasComponent::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(pchComponentName), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, pchRenderModelName, pchComponentName, callback, object);
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._RenderModelHasComponent.EndInvoke
bool Valve::VR::IVRRenderModels::_RenderModelHasComponent::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_RenderModelHasComponent::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRRenderModels/Valve.VR._GetRenderModelThumbnailURL
#include "Valve/VR/IVRRenderModels__GetRenderModelThumbnailURL.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: Valve.VR.EVRRenderModelError
#include "Valve/VR/EVRRenderModelError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._GetRenderModelThumbnailURL.Invoke
uint Valve::VR::IVRRenderModels::_GetRenderModelThumbnailURL::Invoke(::StringW pchRenderModelName, System::Text::StringBuilder* pchThumbnailURL, uint unThumbnailURLLen, ByRef<Valve::VR::EVRRenderModelError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_GetRenderModelThumbnailURL::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(pchThumbnailURL), ::il2cpp_utils::ExtractType(unThumbnailURLLen), ::il2cpp_utils::ExtractType(peError)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchRenderModelName, pchThumbnailURL, unThumbnailURLLen, byref(peError));
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._GetRenderModelThumbnailURL.BeginInvoke
System::IAsyncResult* Valve::VR::IVRRenderModels::_GetRenderModelThumbnailURL::BeginInvoke(::StringW pchRenderModelName, System::Text::StringBuilder* pchThumbnailURL, uint unThumbnailURLLen, ByRef<Valve::VR::EVRRenderModelError> peError, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_GetRenderModelThumbnailURL::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(pchThumbnailURL), ::il2cpp_utils::ExtractType(unThumbnailURLLen), ::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, pchRenderModelName, pchThumbnailURL, unThumbnailURLLen, byref(peError), callback, object);
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._GetRenderModelThumbnailURL.EndInvoke
uint Valve::VR::IVRRenderModels::_GetRenderModelThumbnailURL::EndInvoke(ByRef<Valve::VR::EVRRenderModelError> peError, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_GetRenderModelThumbnailURL::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, byref(peError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRRenderModels/Valve.VR._GetRenderModelOriginalPath
#include "Valve/VR/IVRRenderModels__GetRenderModelOriginalPath.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: Valve.VR.EVRRenderModelError
#include "Valve/VR/EVRRenderModelError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._GetRenderModelOriginalPath.Invoke
uint Valve::VR::IVRRenderModels::_GetRenderModelOriginalPath::Invoke(::StringW pchRenderModelName, System::Text::StringBuilder* pchOriginalPath, uint unOriginalPathLen, ByRef<Valve::VR::EVRRenderModelError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_GetRenderModelOriginalPath::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(pchOriginalPath), ::il2cpp_utils::ExtractType(unOriginalPathLen), ::il2cpp_utils::ExtractType(peError)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchRenderModelName, pchOriginalPath, unOriginalPathLen, byref(peError));
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._GetRenderModelOriginalPath.BeginInvoke
System::IAsyncResult* Valve::VR::IVRRenderModels::_GetRenderModelOriginalPath::BeginInvoke(::StringW pchRenderModelName, System::Text::StringBuilder* pchOriginalPath, uint unOriginalPathLen, ByRef<Valve::VR::EVRRenderModelError> peError, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_GetRenderModelOriginalPath::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(pchOriginalPath), ::il2cpp_utils::ExtractType(unOriginalPathLen), ::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, pchRenderModelName, pchOriginalPath, unOriginalPathLen, byref(peError), callback, object);
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._GetRenderModelOriginalPath.EndInvoke
uint Valve::VR::IVRRenderModels::_GetRenderModelOriginalPath::EndInvoke(ByRef<Valve::VR::EVRRenderModelError> peError, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_GetRenderModelOriginalPath::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, byref(peError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRRenderModels/Valve.VR._GetRenderModelErrorNameFromEnum
#include "Valve/VR/IVRRenderModels__GetRenderModelErrorNameFromEnum.hpp"
// Including type: Valve.VR.EVRRenderModelError
#include "Valve/VR/EVRRenderModelError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._GetRenderModelErrorNameFromEnum.Invoke
System::IntPtr Valve::VR::IVRRenderModels::_GetRenderModelErrorNameFromEnum::Invoke(Valve::VR::EVRRenderModelError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_GetRenderModelErrorNameFromEnum::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(this, ___internal__method, error);
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._GetRenderModelErrorNameFromEnum.BeginInvoke
System::IAsyncResult* Valve::VR::IVRRenderModels::_GetRenderModelErrorNameFromEnum::BeginInvoke(Valve::VR::EVRRenderModelError error, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_GetRenderModelErrorNameFromEnum::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, error, callback, object);
}
// Autogenerated method: Valve.VR.IVRRenderModels/Valve.VR._GetRenderModelErrorNameFromEnum.EndInvoke
System::IntPtr Valve::VR::IVRRenderModels::_GetRenderModelErrorNameFromEnum::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRRenderModels::_GetRenderModelErrorNameFromEnum::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRNotifications/Valve.VR._CreateNotification
#include "Valve/VR/IVRNotifications__CreateNotification.hpp"
// Including type: Valve.VR.EVRNotificationError
#include "Valve/VR/EVRNotificationError.hpp"
// Including type: Valve.VR.EVRNotificationType
#include "Valve/VR/EVRNotificationType.hpp"
// Including type: Valve.VR.EVRNotificationStyle
#include "Valve/VR/EVRNotificationStyle.hpp"
// Including type: Valve.VR.NotificationBitmap_t
#include "Valve/VR/NotificationBitmap_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRNotifications/Valve.VR._CreateNotification.Invoke
Valve::VR::EVRNotificationError Valve::VR::IVRNotifications::_CreateNotification::Invoke(uint64_t ulOverlayHandle, uint64_t ulUserValue, Valve::VR::EVRNotificationType type, ::StringW pchText, Valve::VR::EVRNotificationStyle style, ByRef<Valve::VR::NotificationBitmap_t> pImage, ByRef<uint> pNotificationId) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRNotifications::_CreateNotification::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(ulUserValue), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(pchText), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(pImage), ::il2cpp_utils::ExtractType(pNotificationId)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRNotificationError, false>(this, ___internal__method, ulOverlayHandle, ulUserValue, type, pchText, style, byref(pImage), byref(pNotificationId));
}
// Autogenerated method: Valve.VR.IVRNotifications/Valve.VR._CreateNotification.BeginInvoke
System::IAsyncResult* Valve::VR::IVRNotifications::_CreateNotification::BeginInvoke(uint64_t ulOverlayHandle, uint64_t ulUserValue, Valve::VR::EVRNotificationType type, ::StringW pchText, Valve::VR::EVRNotificationStyle style, ByRef<Valve::VR::NotificationBitmap_t> pImage, ByRef<uint> pNotificationId, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRNotifications::_CreateNotification::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(ulUserValue), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(pchText), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(pImage), ::il2cpp_utils::ExtractType(pNotificationId), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, ulUserValue, type, pchText, style, byref(pImage), byref(pNotificationId), callback, object);
}
// Autogenerated method: Valve.VR.IVRNotifications/Valve.VR._CreateNotification.EndInvoke
Valve::VR::EVRNotificationError Valve::VR::IVRNotifications::_CreateNotification::EndInvoke(ByRef<Valve::VR::NotificationBitmap_t> pImage, ByRef<uint> pNotificationId, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRNotifications::_CreateNotification::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pImage), ::il2cpp_utils::ExtractType(pNotificationId), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRNotificationError, false>(this, ___internal__method, byref(pImage), byref(pNotificationId), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRNotifications/Valve.VR._RemoveNotification
#include "Valve/VR/IVRNotifications__RemoveNotification.hpp"
// Including type: Valve.VR.EVRNotificationError
#include "Valve/VR/EVRNotificationError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRNotifications/Valve.VR._RemoveNotification.Invoke
Valve::VR::EVRNotificationError Valve::VR::IVRNotifications::_RemoveNotification::Invoke(uint notificationId) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRNotifications::_RemoveNotification::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(notificationId)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRNotificationError, false>(this, ___internal__method, notificationId);
}
// Autogenerated method: Valve.VR.IVRNotifications/Valve.VR._RemoveNotification.BeginInvoke
System::IAsyncResult* Valve::VR::IVRNotifications::_RemoveNotification::BeginInvoke(uint notificationId, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRNotifications::_RemoveNotification::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(notificationId), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, notificationId, callback, object);
}
// Autogenerated method: Valve.VR.IVRNotifications/Valve.VR._RemoveNotification.EndInvoke
Valve::VR::EVRNotificationError Valve::VR::IVRNotifications::_RemoveNotification::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRNotifications::_RemoveNotification::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRNotificationError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSettings/Valve.VR._GetSettingsErrorNameFromEnum
#include "Valve/VR/IVRSettings__GetSettingsErrorNameFromEnum.hpp"
// Including type: Valve.VR.EVRSettingsError
#include "Valve/VR/EVRSettingsError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._GetSettingsErrorNameFromEnum.Invoke
System::IntPtr Valve::VR::IVRSettings::_GetSettingsErrorNameFromEnum::Invoke(Valve::VR::EVRSettingsError eError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_GetSettingsErrorNameFromEnum::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eError)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(this, ___internal__method, eError);
}
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._GetSettingsErrorNameFromEnum.BeginInvoke
System::IAsyncResult* Valve::VR::IVRSettings::_GetSettingsErrorNameFromEnum::BeginInvoke(Valve::VR::EVRSettingsError eError, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_GetSettingsErrorNameFromEnum::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eError), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, eError, callback, object);
}
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._GetSettingsErrorNameFromEnum.EndInvoke
System::IntPtr Valve::VR::IVRSettings::_GetSettingsErrorNameFromEnum::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_GetSettingsErrorNameFromEnum::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSettings/Valve.VR._Sync
#include "Valve/VR/IVRSettings__Sync.hpp"
// Including type: Valve.VR.EVRSettingsError
#include "Valve/VR/EVRSettingsError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._Sync.Invoke
bool Valve::VR::IVRSettings::_Sync::Invoke(bool bForce, ByRef<Valve::VR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_Sync::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bForce), ::il2cpp_utils::ExtractType(peError)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bForce, byref(peError));
}
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._Sync.BeginInvoke
System::IAsyncResult* Valve::VR::IVRSettings::_Sync::BeginInvoke(bool bForce, ByRef<Valve::VR::EVRSettingsError> peError, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_Sync::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bForce), ::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, bForce, byref(peError), callback, object);
}
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._Sync.EndInvoke
bool Valve::VR::IVRSettings::_Sync::EndInvoke(ByRef<Valve::VR::EVRSettingsError> peError, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_Sync::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(peError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSettings/Valve.VR._SetBool
#include "Valve/VR/IVRSettings__SetBool.hpp"
// Including type: Valve.VR.EVRSettingsError
#include "Valve/VR/EVRSettingsError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._SetBool.Invoke
void Valve::VR::IVRSettings::_SetBool::Invoke(::StringW pchSection, ::StringW pchSettingsKey, bool bValue, ByRef<Valve::VR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_SetBool::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(bValue), ::il2cpp_utils::ExtractType(peError)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchSection, pchSettingsKey, bValue, byref(peError));
}
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._SetBool.BeginInvoke
System::IAsyncResult* Valve::VR::IVRSettings::_SetBool::BeginInvoke(::StringW pchSection, ::StringW pchSettingsKey, bool bValue, ByRef<Valve::VR::EVRSettingsError> peError, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_SetBool::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(bValue), ::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, pchSection, pchSettingsKey, bValue, byref(peError), callback, object);
}
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._SetBool.EndInvoke
void Valve::VR::IVRSettings::_SetBool::EndInvoke(ByRef<Valve::VR::EVRSettingsError> peError, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_SetBool::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(peError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSettings/Valve.VR._SetInt32
#include "Valve/VR/IVRSettings__SetInt32.hpp"
// Including type: Valve.VR.EVRSettingsError
#include "Valve/VR/EVRSettingsError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._SetInt32.Invoke
void Valve::VR::IVRSettings::_SetInt32::Invoke(::StringW pchSection, ::StringW pchSettingsKey, int nValue, ByRef<Valve::VR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_SetInt32::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(nValue), ::il2cpp_utils::ExtractType(peError)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchSection, pchSettingsKey, nValue, byref(peError));
}
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._SetInt32.BeginInvoke
System::IAsyncResult* Valve::VR::IVRSettings::_SetInt32::BeginInvoke(::StringW pchSection, ::StringW pchSettingsKey, int nValue, ByRef<Valve::VR::EVRSettingsError> peError, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_SetInt32::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(nValue), ::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, pchSection, pchSettingsKey, nValue, byref(peError), callback, object);
}
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._SetInt32.EndInvoke
void Valve::VR::IVRSettings::_SetInt32::EndInvoke(ByRef<Valve::VR::EVRSettingsError> peError, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_SetInt32::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(peError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSettings/Valve.VR._SetFloat
#include "Valve/VR/IVRSettings__SetFloat.hpp"
// Including type: Valve.VR.EVRSettingsError
#include "Valve/VR/EVRSettingsError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._SetFloat.Invoke
void Valve::VR::IVRSettings::_SetFloat::Invoke(::StringW pchSection, ::StringW pchSettingsKey, float flValue, ByRef<Valve::VR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_SetFloat::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(flValue), ::il2cpp_utils::ExtractType(peError)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchSection, pchSettingsKey, flValue, byref(peError));
}
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._SetFloat.BeginInvoke
System::IAsyncResult* Valve::VR::IVRSettings::_SetFloat::BeginInvoke(::StringW pchSection, ::StringW pchSettingsKey, float flValue, ByRef<Valve::VR::EVRSettingsError> peError, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_SetFloat::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(flValue), ::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, pchSection, pchSettingsKey, flValue, byref(peError), callback, object);
}
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._SetFloat.EndInvoke
void Valve::VR::IVRSettings::_SetFloat::EndInvoke(ByRef<Valve::VR::EVRSettingsError> peError, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_SetFloat::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(peError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSettings/Valve.VR._SetString
#include "Valve/VR/IVRSettings__SetString.hpp"
// Including type: Valve.VR.EVRSettingsError
#include "Valve/VR/EVRSettingsError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._SetString.Invoke
void Valve::VR::IVRSettings::_SetString::Invoke(::StringW pchSection, ::StringW pchSettingsKey, ::StringW pchValue, ByRef<Valve::VR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_SetString::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(pchValue), ::il2cpp_utils::ExtractType(peError)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchSection, pchSettingsKey, pchValue, byref(peError));
}
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._SetString.BeginInvoke
System::IAsyncResult* Valve::VR::IVRSettings::_SetString::BeginInvoke(::StringW pchSection, ::StringW pchSettingsKey, ::StringW pchValue, ByRef<Valve::VR::EVRSettingsError> peError, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_SetString::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(pchValue), ::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, pchSection, pchSettingsKey, pchValue, byref(peError), callback, object);
}
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._SetString.EndInvoke
void Valve::VR::IVRSettings::_SetString::EndInvoke(ByRef<Valve::VR::EVRSettingsError> peError, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_SetString::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(peError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSettings/Valve.VR._GetBool
#include "Valve/VR/IVRSettings__GetBool.hpp"
// Including type: Valve.VR.EVRSettingsError
#include "Valve/VR/EVRSettingsError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._GetBool.Invoke
bool Valve::VR::IVRSettings::_GetBool::Invoke(::StringW pchSection, ::StringW pchSettingsKey, ByRef<Valve::VR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_GetBool::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(peError)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchSection, pchSettingsKey, byref(peError));
}
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._GetBool.BeginInvoke
System::IAsyncResult* Valve::VR::IVRSettings::_GetBool::BeginInvoke(::StringW pchSection, ::StringW pchSettingsKey, ByRef<Valve::VR::EVRSettingsError> peError, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_GetBool::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, pchSection, pchSettingsKey, byref(peError), callback, object);
}
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._GetBool.EndInvoke
bool Valve::VR::IVRSettings::_GetBool::EndInvoke(ByRef<Valve::VR::EVRSettingsError> peError, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_GetBool::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(peError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSettings/Valve.VR._GetInt32
#include "Valve/VR/IVRSettings__GetInt32.hpp"
// Including type: Valve.VR.EVRSettingsError
#include "Valve/VR/EVRSettingsError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._GetInt32.Invoke
int Valve::VR::IVRSettings::_GetInt32::Invoke(::StringW pchSection, ::StringW pchSettingsKey, ByRef<Valve::VR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_GetInt32::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(peError)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, pchSection, pchSettingsKey, byref(peError));
}
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._GetInt32.BeginInvoke
System::IAsyncResult* Valve::VR::IVRSettings::_GetInt32::BeginInvoke(::StringW pchSection, ::StringW pchSettingsKey, ByRef<Valve::VR::EVRSettingsError> peError, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_GetInt32::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, pchSection, pchSettingsKey, byref(peError), callback, object);
}
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._GetInt32.EndInvoke
int Valve::VR::IVRSettings::_GetInt32::EndInvoke(ByRef<Valve::VR::EVRSettingsError> peError, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_GetInt32::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, byref(peError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSettings/Valve.VR._GetFloat
#include "Valve/VR/IVRSettings__GetFloat.hpp"
// Including type: Valve.VR.EVRSettingsError
#include "Valve/VR/EVRSettingsError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._GetFloat.Invoke
float Valve::VR::IVRSettings::_GetFloat::Invoke(::StringW pchSection, ::StringW pchSettingsKey, ByRef<Valve::VR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_GetFloat::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(peError)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, pchSection, pchSettingsKey, byref(peError));
}
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._GetFloat.BeginInvoke
System::IAsyncResult* Valve::VR::IVRSettings::_GetFloat::BeginInvoke(::StringW pchSection, ::StringW pchSettingsKey, ByRef<Valve::VR::EVRSettingsError> peError, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_GetFloat::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, pchSection, pchSettingsKey, byref(peError), callback, object);
}
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._GetFloat.EndInvoke
float Valve::VR::IVRSettings::_GetFloat::EndInvoke(ByRef<Valve::VR::EVRSettingsError> peError, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_GetFloat::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, byref(peError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSettings/Valve.VR._GetString
#include "Valve/VR/IVRSettings__GetString.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: Valve.VR.EVRSettingsError
#include "Valve/VR/EVRSettingsError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._GetString.Invoke
void Valve::VR::IVRSettings::_GetString::Invoke(::StringW pchSection, ::StringW pchSettingsKey, System::Text::StringBuilder* pchValue, uint unValueLen, ByRef<Valve::VR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_GetString::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(pchValue), ::il2cpp_utils::ExtractType(unValueLen), ::il2cpp_utils::ExtractType(peError)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchSection, pchSettingsKey, pchValue, unValueLen, byref(peError));
}
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._GetString.BeginInvoke
System::IAsyncResult* Valve::VR::IVRSettings::_GetString::BeginInvoke(::StringW pchSection, ::StringW pchSettingsKey, System::Text::StringBuilder* pchValue, uint unValueLen, ByRef<Valve::VR::EVRSettingsError> peError, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_GetString::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(pchValue), ::il2cpp_utils::ExtractType(unValueLen), ::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, pchSection, pchSettingsKey, pchValue, unValueLen, byref(peError), callback, object);
}
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._GetString.EndInvoke
void Valve::VR::IVRSettings::_GetString::EndInvoke(ByRef<Valve::VR::EVRSettingsError> peError, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_GetString::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(peError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSettings/Valve.VR._RemoveSection
#include "Valve/VR/IVRSettings__RemoveSection.hpp"
// Including type: Valve.VR.EVRSettingsError
#include "Valve/VR/EVRSettingsError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._RemoveSection.Invoke
void Valve::VR::IVRSettings::_RemoveSection::Invoke(::StringW pchSection, ByRef<Valve::VR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_RemoveSection::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(peError)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchSection, byref(peError));
}
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._RemoveSection.BeginInvoke
System::IAsyncResult* Valve::VR::IVRSettings::_RemoveSection::BeginInvoke(::StringW pchSection, ByRef<Valve::VR::EVRSettingsError> peError, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_RemoveSection::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, pchSection, byref(peError), callback, object);
}
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._RemoveSection.EndInvoke
void Valve::VR::IVRSettings::_RemoveSection::EndInvoke(ByRef<Valve::VR::EVRSettingsError> peError, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_RemoveSection::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(peError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRSettings/Valve.VR._RemoveKeyInSection
#include "Valve/VR/IVRSettings__RemoveKeyInSection.hpp"
// Including type: Valve.VR.EVRSettingsError
#include "Valve/VR/EVRSettingsError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._RemoveKeyInSection.Invoke
void Valve::VR::IVRSettings::_RemoveKeyInSection::Invoke(::StringW pchSection, ::StringW pchSettingsKey, ByRef<Valve::VR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_RemoveKeyInSection::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(peError)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchSection, pchSettingsKey, byref(peError));
}
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._RemoveKeyInSection.BeginInvoke
System::IAsyncResult* Valve::VR::IVRSettings::_RemoveKeyInSection::BeginInvoke(::StringW pchSection, ::StringW pchSettingsKey, ByRef<Valve::VR::EVRSettingsError> peError, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_RemoveKeyInSection::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, pchSection, pchSettingsKey, byref(peError), callback, object);
}
// Autogenerated method: Valve.VR.IVRSettings/Valve.VR._RemoveKeyInSection.EndInvoke
void Valve::VR::IVRSettings::_RemoveKeyInSection::EndInvoke(ByRef<Valve::VR::EVRSettingsError> peError, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRSettings::_RemoveKeyInSection::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(peError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRScreenshots/Valve.VR._RequestScreenshot
#include "Valve/VR/IVRScreenshots__RequestScreenshot.hpp"
// Including type: Valve.VR.EVRScreenshotError
#include "Valve/VR/EVRScreenshotError.hpp"
// Including type: Valve.VR.EVRScreenshotType
#include "Valve/VR/EVRScreenshotType.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRScreenshots/Valve.VR._RequestScreenshot.Invoke
Valve::VR::EVRScreenshotError Valve::VR::IVRScreenshots::_RequestScreenshot::Invoke(ByRef<uint> pOutScreenshotHandle, Valve::VR::EVRScreenshotType type, ::StringW pchPreviewFilename, ::StringW pchVRFilename) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRScreenshots::_RequestScreenshot::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pOutScreenshotHandle), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(pchPreviewFilename), ::il2cpp_utils::ExtractType(pchVRFilename)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRScreenshotError, false>(this, ___internal__method, byref(pOutScreenshotHandle), type, pchPreviewFilename, pchVRFilename);
}
// Autogenerated method: Valve.VR.IVRScreenshots/Valve.VR._RequestScreenshot.BeginInvoke
System::IAsyncResult* Valve::VR::IVRScreenshots::_RequestScreenshot::BeginInvoke(ByRef<uint> pOutScreenshotHandle, Valve::VR::EVRScreenshotType type, ::StringW pchPreviewFilename, ::StringW pchVRFilename, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRScreenshots::_RequestScreenshot::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pOutScreenshotHandle), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(pchPreviewFilename), ::il2cpp_utils::ExtractType(pchVRFilename), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, byref(pOutScreenshotHandle), type, pchPreviewFilename, pchVRFilename, callback, object);
}
// Autogenerated method: Valve.VR.IVRScreenshots/Valve.VR._RequestScreenshot.EndInvoke
Valve::VR::EVRScreenshotError Valve::VR::IVRScreenshots::_RequestScreenshot::EndInvoke(ByRef<uint> pOutScreenshotHandle, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRScreenshots::_RequestScreenshot::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pOutScreenshotHandle), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRScreenshotError, false>(this, ___internal__method, byref(pOutScreenshotHandle), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRScreenshots/Valve.VR._HookScreenshot
#include "Valve/VR/IVRScreenshots__HookScreenshot.hpp"
// Including type: Valve.VR.EVRScreenshotError
#include "Valve/VR/EVRScreenshotError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRScreenshots/Valve.VR._HookScreenshot.Invoke
Valve::VR::EVRScreenshotError Valve::VR::IVRScreenshots::_HookScreenshot::Invoke(ByRef<::ArrayW<Valve::VR::EVRScreenshotType>> pSupportedTypes, int numTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRScreenshots::_HookScreenshot::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSupportedTypes), ::il2cpp_utils::ExtractType(numTypes)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRScreenshotError, false>(this, ___internal__method, byref(pSupportedTypes), numTypes);
}
// Autogenerated method: Valve.VR.IVRScreenshots/Valve.VR._HookScreenshot.BeginInvoke
System::IAsyncResult* Valve::VR::IVRScreenshots::_HookScreenshot::BeginInvoke(ByRef<::ArrayW<Valve::VR::EVRScreenshotType>> pSupportedTypes, int numTypes, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRScreenshots::_HookScreenshot::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSupportedTypes), ::il2cpp_utils::ExtractType(numTypes), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, byref(pSupportedTypes), numTypes, callback, object);
}
// Autogenerated method: Valve.VR.IVRScreenshots/Valve.VR._HookScreenshot.EndInvoke
Valve::VR::EVRScreenshotError Valve::VR::IVRScreenshots::_HookScreenshot::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRScreenshots::_HookScreenshot::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRScreenshotError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRScreenshots/Valve.VR._GetScreenshotPropertyType
#include "Valve/VR/IVRScreenshots__GetScreenshotPropertyType.hpp"
// Including type: Valve.VR.EVRScreenshotType
#include "Valve/VR/EVRScreenshotType.hpp"
// Including type: Valve.VR.EVRScreenshotError
#include "Valve/VR/EVRScreenshotError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRScreenshots/Valve.VR._GetScreenshotPropertyType.Invoke
Valve::VR::EVRScreenshotType Valve::VR::IVRScreenshots::_GetScreenshotPropertyType::Invoke(uint screenshotHandle, ByRef<Valve::VR::EVRScreenshotError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRScreenshots::_GetScreenshotPropertyType::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenshotHandle), ::il2cpp_utils::ExtractType(pError)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRScreenshotType, false>(this, ___internal__method, screenshotHandle, byref(pError));
}
// Autogenerated method: Valve.VR.IVRScreenshots/Valve.VR._GetScreenshotPropertyType.BeginInvoke
System::IAsyncResult* Valve::VR::IVRScreenshots::_GetScreenshotPropertyType::BeginInvoke(uint screenshotHandle, ByRef<Valve::VR::EVRScreenshotError> pError, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRScreenshots::_GetScreenshotPropertyType::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenshotHandle), ::il2cpp_utils::ExtractType(pError), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, screenshotHandle, byref(pError), callback, object);
}
// Autogenerated method: Valve.VR.IVRScreenshots/Valve.VR._GetScreenshotPropertyType.EndInvoke
Valve::VR::EVRScreenshotType Valve::VR::IVRScreenshots::_GetScreenshotPropertyType::EndInvoke(ByRef<Valve::VR::EVRScreenshotError> pError, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRScreenshots::_GetScreenshotPropertyType::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pError), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRScreenshotType, false>(this, ___internal__method, byref(pError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRScreenshots/Valve.VR._GetScreenshotPropertyFilename
#include "Valve/VR/IVRScreenshots__GetScreenshotPropertyFilename.hpp"
// Including type: Valve.VR.EVRScreenshotPropertyFilenames
#include "Valve/VR/EVRScreenshotPropertyFilenames.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: Valve.VR.EVRScreenshotError
#include "Valve/VR/EVRScreenshotError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRScreenshots/Valve.VR._GetScreenshotPropertyFilename.Invoke
uint Valve::VR::IVRScreenshots::_GetScreenshotPropertyFilename::Invoke(uint screenshotHandle, Valve::VR::EVRScreenshotPropertyFilenames filenameType, System::Text::StringBuilder* pchFilename, uint cchFilename, ByRef<Valve::VR::EVRScreenshotError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRScreenshots::_GetScreenshotPropertyFilename::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenshotHandle), ::il2cpp_utils::ExtractType(filenameType), ::il2cpp_utils::ExtractType(pchFilename), ::il2cpp_utils::ExtractType(cchFilename), ::il2cpp_utils::ExtractType(pError)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, screenshotHandle, filenameType, pchFilename, cchFilename, byref(pError));
}
// Autogenerated method: Valve.VR.IVRScreenshots/Valve.VR._GetScreenshotPropertyFilename.BeginInvoke
System::IAsyncResult* Valve::VR::IVRScreenshots::_GetScreenshotPropertyFilename::BeginInvoke(uint screenshotHandle, Valve::VR::EVRScreenshotPropertyFilenames filenameType, System::Text::StringBuilder* pchFilename, uint cchFilename, ByRef<Valve::VR::EVRScreenshotError> pError, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRScreenshots::_GetScreenshotPropertyFilename::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenshotHandle), ::il2cpp_utils::ExtractType(filenameType), ::il2cpp_utils::ExtractType(pchFilename), ::il2cpp_utils::ExtractType(cchFilename), ::il2cpp_utils::ExtractType(pError), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, screenshotHandle, filenameType, pchFilename, cchFilename, byref(pError), callback, object);
}
// Autogenerated method: Valve.VR.IVRScreenshots/Valve.VR._GetScreenshotPropertyFilename.EndInvoke
uint Valve::VR::IVRScreenshots::_GetScreenshotPropertyFilename::EndInvoke(ByRef<Valve::VR::EVRScreenshotError> pError, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRScreenshots::_GetScreenshotPropertyFilename::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pError), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, byref(pError), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRScreenshots/Valve.VR._UpdateScreenshotProgress
#include "Valve/VR/IVRScreenshots__UpdateScreenshotProgress.hpp"
// Including type: Valve.VR.EVRScreenshotError
#include "Valve/VR/EVRScreenshotError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRScreenshots/Valve.VR._UpdateScreenshotProgress.Invoke
Valve::VR::EVRScreenshotError Valve::VR::IVRScreenshots::_UpdateScreenshotProgress::Invoke(uint screenshotHandle, float flProgress) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRScreenshots::_UpdateScreenshotProgress::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenshotHandle), ::il2cpp_utils::ExtractType(flProgress)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRScreenshotError, false>(this, ___internal__method, screenshotHandle, flProgress);
}
// Autogenerated method: Valve.VR.IVRScreenshots/Valve.VR._UpdateScreenshotProgress.BeginInvoke
System::IAsyncResult* Valve::VR::IVRScreenshots::_UpdateScreenshotProgress::BeginInvoke(uint screenshotHandle, float flProgress, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRScreenshots::_UpdateScreenshotProgress::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenshotHandle), ::il2cpp_utils::ExtractType(flProgress), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, screenshotHandle, flProgress, callback, object);
}
// Autogenerated method: Valve.VR.IVRScreenshots/Valve.VR._UpdateScreenshotProgress.EndInvoke
Valve::VR::EVRScreenshotError Valve::VR::IVRScreenshots::_UpdateScreenshotProgress::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRScreenshots::_UpdateScreenshotProgress::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRScreenshotError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRScreenshots/Valve.VR._TakeStereoScreenshot
#include "Valve/VR/IVRScreenshots__TakeStereoScreenshot.hpp"
// Including type: Valve.VR.EVRScreenshotError
#include "Valve/VR/EVRScreenshotError.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRScreenshots/Valve.VR._TakeStereoScreenshot.Invoke
Valve::VR::EVRScreenshotError Valve::VR::IVRScreenshots::_TakeStereoScreenshot::Invoke(ByRef<uint> pOutScreenshotHandle, ::StringW pchPreviewFilename, ::StringW pchVRFilename) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRScreenshots::_TakeStereoScreenshot::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pOutScreenshotHandle), ::il2cpp_utils::ExtractType(pchPreviewFilename), ::il2cpp_utils::ExtractType(pchVRFilename)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRScreenshotError, false>(this, ___internal__method, byref(pOutScreenshotHandle), pchPreviewFilename, pchVRFilename);
}
// Autogenerated method: Valve.VR.IVRScreenshots/Valve.VR._TakeStereoScreenshot.BeginInvoke
System::IAsyncResult* Valve::VR::IVRScreenshots::_TakeStereoScreenshot::BeginInvoke(ByRef<uint> pOutScreenshotHandle, ::StringW pchPreviewFilename, ::StringW pchVRFilename, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRScreenshots::_TakeStereoScreenshot::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pOutScreenshotHandle), ::il2cpp_utils::ExtractType(pchPreviewFilename), ::il2cpp_utils::ExtractType(pchVRFilename), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, byref(pOutScreenshotHandle), pchPreviewFilename, pchVRFilename, callback, object);
}
// Autogenerated method: Valve.VR.IVRScreenshots/Valve.VR._TakeStereoScreenshot.EndInvoke
Valve::VR::EVRScreenshotError Valve::VR::IVRScreenshots::_TakeStereoScreenshot::EndInvoke(ByRef<uint> pOutScreenshotHandle, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRScreenshots::_TakeStereoScreenshot::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pOutScreenshotHandle), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRScreenshotError, false>(this, ___internal__method, byref(pOutScreenshotHandle), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRScreenshots/Valve.VR._SubmitScreenshot
#include "Valve/VR/IVRScreenshots__SubmitScreenshot.hpp"
// Including type: Valve.VR.EVRScreenshotError
#include "Valve/VR/EVRScreenshotError.hpp"
// Including type: Valve.VR.EVRScreenshotType
#include "Valve/VR/EVRScreenshotType.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRScreenshots/Valve.VR._SubmitScreenshot.Invoke
Valve::VR::EVRScreenshotError Valve::VR::IVRScreenshots::_SubmitScreenshot::Invoke(uint screenshotHandle, Valve::VR::EVRScreenshotType type, ::StringW pchSourcePreviewFilename, ::StringW pchSourceVRFilename) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRScreenshots::_SubmitScreenshot::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenshotHandle), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(pchSourcePreviewFilename), ::il2cpp_utils::ExtractType(pchSourceVRFilename)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRScreenshotError, false>(this, ___internal__method, screenshotHandle, type, pchSourcePreviewFilename, pchSourceVRFilename);
}
// Autogenerated method: Valve.VR.IVRScreenshots/Valve.VR._SubmitScreenshot.BeginInvoke
System::IAsyncResult* Valve::VR::IVRScreenshots::_SubmitScreenshot::BeginInvoke(uint screenshotHandle, Valve::VR::EVRScreenshotType type, ::StringW pchSourcePreviewFilename, ::StringW pchSourceVRFilename, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRScreenshots::_SubmitScreenshot::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenshotHandle), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(pchSourcePreviewFilename), ::il2cpp_utils::ExtractType(pchSourceVRFilename), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, screenshotHandle, type, pchSourcePreviewFilename, pchSourceVRFilename, callback, object);
}
// Autogenerated method: Valve.VR.IVRScreenshots/Valve.VR._SubmitScreenshot.EndInvoke
Valve::VR::EVRScreenshotError Valve::VR::IVRScreenshots::_SubmitScreenshot::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRScreenshots::_SubmitScreenshot::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRScreenshotError, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRResources/Valve.VR._LoadSharedResource
#include "Valve/VR/IVRResources__LoadSharedResource.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRResources/Valve.VR._LoadSharedResource.Invoke
uint Valve::VR::IVRResources::_LoadSharedResource::Invoke(::StringW pchResourceName, ::StringW pchBuffer, uint unBufferLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRResources::_LoadSharedResource::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchResourceName), ::il2cpp_utils::ExtractType(pchBuffer), ::il2cpp_utils::ExtractType(unBufferLen)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchResourceName, pchBuffer, unBufferLen);
}
// Autogenerated method: Valve.VR.IVRResources/Valve.VR._LoadSharedResource.BeginInvoke
System::IAsyncResult* Valve::VR::IVRResources::_LoadSharedResource::BeginInvoke(::StringW pchResourceName, ::StringW pchBuffer, uint unBufferLen, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRResources::_LoadSharedResource::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchResourceName), ::il2cpp_utils::ExtractType(pchBuffer), ::il2cpp_utils::ExtractType(unBufferLen), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, pchResourceName, pchBuffer, unBufferLen, callback, object);
}
// Autogenerated method: Valve.VR.IVRResources/Valve.VR._LoadSharedResource.EndInvoke
uint Valve::VR::IVRResources::_LoadSharedResource::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRResources::_LoadSharedResource::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRResources/Valve.VR._GetResourceFullPath
#include "Valve/VR/IVRResources__GetResourceFullPath.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRResources/Valve.VR._GetResourceFullPath.Invoke
uint Valve::VR::IVRResources::_GetResourceFullPath::Invoke(::StringW pchResourceName, ::StringW pchResourceTypeDirectory, System::Text::StringBuilder* pchPathBuffer, uint unBufferLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRResources::_GetResourceFullPath::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchResourceName), ::il2cpp_utils::ExtractType(pchResourceTypeDirectory), ::il2cpp_utils::ExtractType(pchPathBuffer), ::il2cpp_utils::ExtractType(unBufferLen)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchResourceName, pchResourceTypeDirectory, pchPathBuffer, unBufferLen);
}
// Autogenerated method: Valve.VR.IVRResources/Valve.VR._GetResourceFullPath.BeginInvoke
System::IAsyncResult* Valve::VR::IVRResources::_GetResourceFullPath::BeginInvoke(::StringW pchResourceName, ::StringW pchResourceTypeDirectory, System::Text::StringBuilder* pchPathBuffer, uint unBufferLen, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRResources::_GetResourceFullPath::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchResourceName), ::il2cpp_utils::ExtractType(pchResourceTypeDirectory), ::il2cpp_utils::ExtractType(pchPathBuffer), ::il2cpp_utils::ExtractType(unBufferLen), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, pchResourceName, pchResourceTypeDirectory, pchPathBuffer, unBufferLen, callback, object);
}
// Autogenerated method: Valve.VR.IVRResources/Valve.VR._GetResourceFullPath.EndInvoke
uint Valve::VR::IVRResources::_GetResourceFullPath::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRResources::_GetResourceFullPath::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRDriverManager/Valve.VR._GetDriverCount
#include "Valve/VR/IVRDriverManager__GetDriverCount.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRDriverManager/Valve.VR._GetDriverCount.Invoke
uint Valve::VR::IVRDriverManager::_GetDriverCount::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRDriverManager::_GetDriverCount::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.IVRDriverManager/Valve.VR._GetDriverCount.BeginInvoke
System::IAsyncResult* Valve::VR::IVRDriverManager::_GetDriverCount::BeginInvoke(System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRDriverManager::_GetDriverCount::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: Valve.VR.IVRDriverManager/Valve.VR._GetDriverCount.EndInvoke
uint Valve::VR::IVRDriverManager::_GetDriverCount::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRDriverManager::_GetDriverCount::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.IVRDriverManager/Valve.VR._GetDriverName
#include "Valve/VR/IVRDriverManager__GetDriverName.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.IVRDriverManager/Valve.VR._GetDriverName.Invoke
uint Valve::VR::IVRDriverManager::_GetDriverName::Invoke(uint nDriver, System::Text::StringBuilder* pchValue, uint unBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRDriverManager::_GetDriverName::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nDriver), ::il2cpp_utils::ExtractType(pchValue), ::il2cpp_utils::ExtractType(unBufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, nDriver, pchValue, unBufferSize);
}
// Autogenerated method: Valve.VR.IVRDriverManager/Valve.VR._GetDriverName.BeginInvoke
System::IAsyncResult* Valve::VR::IVRDriverManager::_GetDriverName::BeginInvoke(uint nDriver, System::Text::StringBuilder* pchValue, uint unBufferSize, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRDriverManager::_GetDriverName::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nDriver), ::il2cpp_utils::ExtractType(pchValue), ::il2cpp_utils::ExtractType(unBufferSize), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, nDriver, pchValue, unBufferSize, callback, object);
}
// Autogenerated method: Valve.VR.IVRDriverManager/Valve.VR._GetDriverName.EndInvoke
uint Valve::VR::IVRDriverManager::_GetDriverName::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::IVRDriverManager::_GetDriverName::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.CVRSystem
#include "Valve/VR/CVRSystem.hpp"
// Including type: Valve.VR.CVRSystem/Valve.VR._PollNextEventPacked
#include "Valve/VR/CVRSystem__PollNextEventPacked.hpp"
// Including type: Valve.VR.CVRSystem/Valve.VR.PollNextEventUnion
#include "Valve/VR/CVRSystem_PollNextEventUnion.hpp"
// Including type: Valve.VR.CVRSystem/Valve.VR._GetControllerStatePacked
#include "Valve/VR/CVRSystem__GetControllerStatePacked.hpp"
// Including type: Valve.VR.CVRSystem/Valve.VR.GetControllerStateUnion
#include "Valve/VR/CVRSystem_GetControllerStateUnion.hpp"
// Including type: Valve.VR.CVRSystem/Valve.VR._GetControllerStateWithPosePacked
#include "Valve/VR/CVRSystem__GetControllerStateWithPosePacked.hpp"
// Including type: Valve.VR.CVRSystem/Valve.VR.GetControllerStateWithPoseUnion
#include "Valve/VR/CVRSystem_GetControllerStateWithPoseUnion.hpp"
// Including type: Valve.VR.HmdMatrix44_t
#include "Valve/VR/HmdMatrix44_t.hpp"
// Including type: Valve.VR.EVREye
#include "Valve/VR/EVREye.hpp"
// Including type: Valve.VR.DistortionCoordinates_t
#include "Valve/VR/DistortionCoordinates_t.hpp"
// Including type: Valve.VR.HmdMatrix34_t
#include "Valve/VR/HmdMatrix34_t.hpp"
// Including type: Valve.VR.ETextureType
#include "Valve/VR/ETextureType.hpp"
// Including type: Valve.VR.ETrackingUniverseOrigin
#include "Valve/VR/ETrackingUniverseOrigin.hpp"
// Including type: Valve.VR.ETrackedDeviceClass
#include "Valve/VR/ETrackedDeviceClass.hpp"
// Including type: Valve.VR.EDeviceActivityLevel
#include "Valve/VR/EDeviceActivityLevel.hpp"
// Including type: Valve.VR.ETrackedControllerRole
#include "Valve/VR/ETrackedControllerRole.hpp"
// Including type: Valve.VR.ETrackedDeviceProperty
#include "Valve/VR/ETrackedDeviceProperty.hpp"
// Including type: Valve.VR.ETrackedPropertyError
#include "Valve/VR/ETrackedPropertyError.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: Valve.VR.VREvent_t
#include "Valve/VR/VREvent_t.hpp"
// Including type: Valve.VR.EVREventType
#include "Valve/VR/EVREventType.hpp"
// Including type: Valve.VR.HiddenAreaMesh_t
#include "Valve/VR/HiddenAreaMesh_t.hpp"
// Including type: Valve.VR.EHiddenAreaMeshType
#include "Valve/VR/EHiddenAreaMeshType.hpp"
// Including type: Valve.VR.VRControllerState_t
#include "Valve/VR/VRControllerState_t.hpp"
// Including type: Valve.VR.EVRButtonId
#include "Valve/VR/EVRButtonId.hpp"
// Including type: Valve.VR.EVRControllerAxisType
#include "Valve/VR/EVRControllerAxisType.hpp"
// Including type: Valve.VR.EVRFirmwareError
#include "Valve/VR/EVRFirmwareError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Valve.VR.IVRSystem FnTable
Valve::VR::IVRSystem& Valve::VR::CVRSystem::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<Valve::VR::IVRSystem*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Valve.VR.CVRSystem.GetRecommendedRenderTargetSize
void Valve::VR::CVRSystem::GetRecommendedRenderTargetSize(ByRef<uint> pnWidth, ByRef<uint> pnHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::GetRecommendedRenderTargetSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRecommendedRenderTargetSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pnWidth), ::il2cpp_utils::ExtractType(pnHeight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pnWidth), byref(pnHeight));
}
// Autogenerated method: Valve.VR.CVRSystem.GetProjectionMatrix
Valve::VR::HmdMatrix44_t Valve::VR::CVRSystem::GetProjectionMatrix(Valve::VR::EVREye eEye, float fNearZ, float fFarZ) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::GetProjectionMatrix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProjectionMatrix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eEye), ::il2cpp_utils::ExtractType(fNearZ), ::il2cpp_utils::ExtractType(fFarZ)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::HmdMatrix44_t, false>(this, ___internal__method, eEye, fNearZ, fFarZ);
}
// Autogenerated method: Valve.VR.CVRSystem.GetProjectionRaw
void Valve::VR::CVRSystem::GetProjectionRaw(Valve::VR::EVREye eEye, ByRef<float> pfLeft, ByRef<float> pfRight, ByRef<float> pfTop, ByRef<float> pfBottom) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::GetProjectionRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProjectionRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eEye), ::il2cpp_utils::ExtractType(pfLeft), ::il2cpp_utils::ExtractType(pfRight), ::il2cpp_utils::ExtractType(pfTop), ::il2cpp_utils::ExtractType(pfBottom)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eEye, byref(pfLeft), byref(pfRight), byref(pfTop), byref(pfBottom));
}
// Autogenerated method: Valve.VR.CVRSystem.ComputeDistortion
bool Valve::VR::CVRSystem::ComputeDistortion(Valve::VR::EVREye eEye, float fU, float fV, ByRef<Valve::VR::DistortionCoordinates_t> pDistortionCoordinates) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::ComputeDistortion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeDistortion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eEye), ::il2cpp_utils::ExtractType(fU), ::il2cpp_utils::ExtractType(fV), ::il2cpp_utils::ExtractType(pDistortionCoordinates)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, eEye, fU, fV, byref(pDistortionCoordinates));
}
// Autogenerated method: Valve.VR.CVRSystem.GetEyeToHeadTransform
Valve::VR::HmdMatrix34_t Valve::VR::CVRSystem::GetEyeToHeadTransform(Valve::VR::EVREye eEye) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::GetEyeToHeadTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEyeToHeadTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eEye)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::HmdMatrix34_t, false>(this, ___internal__method, eEye);
}
// Autogenerated method: Valve.VR.CVRSystem.GetTimeSinceLastVsync
bool Valve::VR::CVRSystem::GetTimeSinceLastVsync(ByRef<float> pfSecondsSinceLastVsync, ByRef<uint64_t> pulFrameCounter) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::GetTimeSinceLastVsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTimeSinceLastVsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pfSecondsSinceLastVsync), ::il2cpp_utils::ExtractType(pulFrameCounter)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pfSecondsSinceLastVsync), byref(pulFrameCounter));
}
// Autogenerated method: Valve.VR.CVRSystem.GetD3D9AdapterIndex
int Valve::VR::CVRSystem::GetD3D9AdapterIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::GetD3D9AdapterIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetD3D9AdapterIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRSystem.GetDXGIOutputInfo
void Valve::VR::CVRSystem::GetDXGIOutputInfo(ByRef<int> pnAdapterIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::GetDXGIOutputInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDXGIOutputInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pnAdapterIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pnAdapterIndex));
}
// Autogenerated method: Valve.VR.CVRSystem.GetOutputDevice
void Valve::VR::CVRSystem::GetOutputDevice(ByRef<uint64_t> pnDevice, Valve::VR::ETextureType textureType, System::IntPtr pInstance) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::GetOutputDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOutputDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pnDevice), ::il2cpp_utils::ExtractType(textureType), ::il2cpp_utils::ExtractType(pInstance)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pnDevice), textureType, pInstance);
}
// Autogenerated method: Valve.VR.CVRSystem.IsDisplayOnDesktop
bool Valve::VR::CVRSystem::IsDisplayOnDesktop() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::IsDisplayOnDesktop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDisplayOnDesktop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRSystem.SetDisplayVisibility
bool Valve::VR::CVRSystem::SetDisplayVisibility(bool bIsVisibleOnDesktop) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::SetDisplayVisibility");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisplayVisibility", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bIsVisibleOnDesktop)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bIsVisibleOnDesktop);
}
// Autogenerated method: Valve.VR.CVRSystem.GetDeviceToAbsoluteTrackingPose
void Valve::VR::CVRSystem::GetDeviceToAbsoluteTrackingPose(Valve::VR::ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, ::ArrayW<Valve::VR::TrackedDevicePose_t> pTrackedDevicePoseArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::GetDeviceToAbsoluteTrackingPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDeviceToAbsoluteTrackingPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eOrigin), ::il2cpp_utils::ExtractType(fPredictedSecondsToPhotonsFromNow), ::il2cpp_utils::ExtractType(pTrackedDevicePoseArray)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eOrigin, fPredictedSecondsToPhotonsFromNow, pTrackedDevicePoseArray);
}
// Autogenerated method: Valve.VR.CVRSystem.ResetSeatedZeroPose
void Valve::VR::CVRSystem::ResetSeatedZeroPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::ResetSeatedZeroPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetSeatedZeroPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRSystem.GetSeatedZeroPoseToStandingAbsoluteTrackingPose
Valve::VR::HmdMatrix34_t Valve::VR::CVRSystem::GetSeatedZeroPoseToStandingAbsoluteTrackingPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::GetSeatedZeroPoseToStandingAbsoluteTrackingPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSeatedZeroPoseToStandingAbsoluteTrackingPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::HmdMatrix34_t, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRSystem.GetRawZeroPoseToStandingAbsoluteTrackingPose
Valve::VR::HmdMatrix34_t Valve::VR::CVRSystem::GetRawZeroPoseToStandingAbsoluteTrackingPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::GetRawZeroPoseToStandingAbsoluteTrackingPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRawZeroPoseToStandingAbsoluteTrackingPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::HmdMatrix34_t, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRSystem.GetSortedTrackedDeviceIndicesOfClass
uint Valve::VR::CVRSystem::GetSortedTrackedDeviceIndicesOfClass(Valve::VR::ETrackedDeviceClass eTrackedDeviceClass, ::ArrayW<uint> punTrackedDeviceIndexArray, uint unRelativeToTrackedDeviceIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::GetSortedTrackedDeviceIndicesOfClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSortedTrackedDeviceIndicesOfClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eTrackedDeviceClass), ::il2cpp_utils::ExtractType(punTrackedDeviceIndexArray), ::il2cpp_utils::ExtractType(unRelativeToTrackedDeviceIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, eTrackedDeviceClass, punTrackedDeviceIndexArray, unRelativeToTrackedDeviceIndex);
}
// Autogenerated method: Valve.VR.CVRSystem.GetTrackedDeviceActivityLevel
Valve::VR::EDeviceActivityLevel Valve::VR::CVRSystem::GetTrackedDeviceActivityLevel(uint unDeviceId) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::GetTrackedDeviceActivityLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTrackedDeviceActivityLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unDeviceId)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EDeviceActivityLevel, false>(this, ___internal__method, unDeviceId);
}
// Autogenerated method: Valve.VR.CVRSystem.ApplyTransform
void Valve::VR::CVRSystem::ApplyTransform(ByRef<Valve::VR::TrackedDevicePose_t> pOutputPose, ByRef<Valve::VR::TrackedDevicePose_t> pTrackedDevicePose, ByRef<Valve::VR::HmdMatrix34_t> pTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::ApplyTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pOutputPose), ::il2cpp_utils::ExtractType(pTrackedDevicePose), ::il2cpp_utils::ExtractType(pTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pOutputPose), byref(pTrackedDevicePose), byref(pTransform));
}
// Autogenerated method: Valve.VR.CVRSystem.GetTrackedDeviceIndexForControllerRole
uint Valve::VR::CVRSystem::GetTrackedDeviceIndexForControllerRole(Valve::VR::ETrackedControllerRole unDeviceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::GetTrackedDeviceIndexForControllerRole");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTrackedDeviceIndexForControllerRole", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unDeviceType)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, unDeviceType);
}
// Autogenerated method: Valve.VR.CVRSystem.GetControllerRoleForTrackedDeviceIndex
Valve::VR::ETrackedControllerRole Valve::VR::CVRSystem::GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::GetControllerRoleForTrackedDeviceIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetControllerRoleForTrackedDeviceIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unDeviceIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::ETrackedControllerRole, false>(this, ___internal__method, unDeviceIndex);
}
// Autogenerated method: Valve.VR.CVRSystem.GetTrackedDeviceClass
Valve::VR::ETrackedDeviceClass Valve::VR::CVRSystem::GetTrackedDeviceClass(uint unDeviceIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::GetTrackedDeviceClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTrackedDeviceClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unDeviceIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::ETrackedDeviceClass, false>(this, ___internal__method, unDeviceIndex);
}
// Autogenerated method: Valve.VR.CVRSystem.IsTrackedDeviceConnected
bool Valve::VR::CVRSystem::IsTrackedDeviceConnected(uint unDeviceIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::IsTrackedDeviceConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsTrackedDeviceConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unDeviceIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, unDeviceIndex);
}
// Autogenerated method: Valve.VR.CVRSystem.GetBoolTrackedDeviceProperty
bool Valve::VR::CVRSystem::GetBoolTrackedDeviceProperty(uint unDeviceIndex, Valve::VR::ETrackedDeviceProperty prop, ByRef<Valve::VR::ETrackedPropertyError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::GetBoolTrackedDeviceProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBoolTrackedDeviceProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unDeviceIndex), ::il2cpp_utils::ExtractType(prop), ::il2cpp_utils::ExtractType(pError)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, unDeviceIndex, prop, byref(pError));
}
// Autogenerated method: Valve.VR.CVRSystem.GetFloatTrackedDeviceProperty
float Valve::VR::CVRSystem::GetFloatTrackedDeviceProperty(uint unDeviceIndex, Valve::VR::ETrackedDeviceProperty prop, ByRef<Valve::VR::ETrackedPropertyError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::GetFloatTrackedDeviceProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFloatTrackedDeviceProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unDeviceIndex), ::il2cpp_utils::ExtractType(prop), ::il2cpp_utils::ExtractType(pError)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, unDeviceIndex, prop, byref(pError));
}
// Autogenerated method: Valve.VR.CVRSystem.GetInt32TrackedDeviceProperty
int Valve::VR::CVRSystem::GetInt32TrackedDeviceProperty(uint unDeviceIndex, Valve::VR::ETrackedDeviceProperty prop, ByRef<Valve::VR::ETrackedPropertyError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::GetInt32TrackedDeviceProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInt32TrackedDeviceProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unDeviceIndex), ::il2cpp_utils::ExtractType(prop), ::il2cpp_utils::ExtractType(pError)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, unDeviceIndex, prop, byref(pError));
}
// Autogenerated method: Valve.VR.CVRSystem.GetUint64TrackedDeviceProperty
uint64_t Valve::VR::CVRSystem::GetUint64TrackedDeviceProperty(uint unDeviceIndex, Valve::VR::ETrackedDeviceProperty prop, ByRef<Valve::VR::ETrackedPropertyError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::GetUint64TrackedDeviceProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUint64TrackedDeviceProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unDeviceIndex), ::il2cpp_utils::ExtractType(prop), ::il2cpp_utils::ExtractType(pError)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, unDeviceIndex, prop, byref(pError));
}
// Autogenerated method: Valve.VR.CVRSystem.GetMatrix34TrackedDeviceProperty
Valve::VR::HmdMatrix34_t Valve::VR::CVRSystem::GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, Valve::VR::ETrackedDeviceProperty prop, ByRef<Valve::VR::ETrackedPropertyError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::GetMatrix34TrackedDeviceProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMatrix34TrackedDeviceProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unDeviceIndex), ::il2cpp_utils::ExtractType(prop), ::il2cpp_utils::ExtractType(pError)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::HmdMatrix34_t, false>(this, ___internal__method, unDeviceIndex, prop, byref(pError));
}
// Autogenerated method: Valve.VR.CVRSystem.GetArrayTrackedDeviceProperty
uint Valve::VR::CVRSystem::GetArrayTrackedDeviceProperty(uint unDeviceIndex, Valve::VR::ETrackedDeviceProperty prop, uint propType, System::IntPtr pBuffer, uint unBufferSize, ByRef<Valve::VR::ETrackedPropertyError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::GetArrayTrackedDeviceProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArrayTrackedDeviceProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unDeviceIndex), ::il2cpp_utils::ExtractType(prop), ::il2cpp_utils::ExtractType(propType), ::il2cpp_utils::ExtractType(pBuffer), ::il2cpp_utils::ExtractType(unBufferSize), ::il2cpp_utils::ExtractType(pError)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, unDeviceIndex, prop, propType, pBuffer, unBufferSize, byref(pError));
}
// Autogenerated method: Valve.VR.CVRSystem.GetStringTrackedDeviceProperty
uint Valve::VR::CVRSystem::GetStringTrackedDeviceProperty(uint unDeviceIndex, Valve::VR::ETrackedDeviceProperty prop, System::Text::StringBuilder* pchValue, uint unBufferSize, ByRef<Valve::VR::ETrackedPropertyError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::GetStringTrackedDeviceProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStringTrackedDeviceProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unDeviceIndex), ::il2cpp_utils::ExtractType(prop), ::il2cpp_utils::ExtractType(pchValue), ::il2cpp_utils::ExtractType(unBufferSize), ::il2cpp_utils::ExtractType(pError)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, unDeviceIndex, prop, pchValue, unBufferSize, byref(pError));
}
// Autogenerated method: Valve.VR.CVRSystem.GetPropErrorNameFromEnum
::StringW Valve::VR::CVRSystem::GetPropErrorNameFromEnum(Valve::VR::ETrackedPropertyError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::GetPropErrorNameFromEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropErrorNameFromEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, error);
}
// Autogenerated method: Valve.VR.CVRSystem.PollNextEvent
bool Valve::VR::CVRSystem::PollNextEvent(ByRef<Valve::VR::VREvent_t> pEvent, uint uncbVREvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::PollNextEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollNextEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pEvent), ::il2cpp_utils::ExtractType(uncbVREvent)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pEvent), uncbVREvent);
}
// Autogenerated method: Valve.VR.CVRSystem.PollNextEventWithPose
bool Valve::VR::CVRSystem::PollNextEventWithPose(Valve::VR::ETrackingUniverseOrigin eOrigin, ByRef<Valve::VR::VREvent_t> pEvent, uint uncbVREvent, ByRef<Valve::VR::TrackedDevicePose_t> pTrackedDevicePose) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::PollNextEventWithPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollNextEventWithPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eOrigin), ::il2cpp_utils::ExtractType(pEvent), ::il2cpp_utils::ExtractType(uncbVREvent), ::il2cpp_utils::ExtractType(pTrackedDevicePose)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, eOrigin, byref(pEvent), uncbVREvent, byref(pTrackedDevicePose));
}
// Autogenerated method: Valve.VR.CVRSystem.GetEventTypeNameFromEnum
::StringW Valve::VR::CVRSystem::GetEventTypeNameFromEnum(Valve::VR::EVREventType eType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::GetEventTypeNameFromEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEventTypeNameFromEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eType)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, eType);
}
// Autogenerated method: Valve.VR.CVRSystem.GetHiddenAreaMesh
Valve::VR::HiddenAreaMesh_t Valve::VR::CVRSystem::GetHiddenAreaMesh(Valve::VR::EVREye eEye, Valve::VR::EHiddenAreaMeshType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::GetHiddenAreaMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHiddenAreaMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eEye), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::HiddenAreaMesh_t, false>(this, ___internal__method, eEye, type);
}
// Autogenerated method: Valve.VR.CVRSystem.GetControllerState
bool Valve::VR::CVRSystem::GetControllerState(uint unControllerDeviceIndex, ByRef<Valve::VR::VRControllerState_t> pControllerState, uint unControllerStateSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::GetControllerState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetControllerState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unControllerDeviceIndex), ::il2cpp_utils::ExtractType(pControllerState), ::il2cpp_utils::ExtractType(unControllerStateSize)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, unControllerDeviceIndex, byref(pControllerState), unControllerStateSize);
}
// Autogenerated method: Valve.VR.CVRSystem.GetControllerStateWithPose
bool Valve::VR::CVRSystem::GetControllerStateWithPose(Valve::VR::ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ByRef<Valve::VR::VRControllerState_t> pControllerState, uint unControllerStateSize, ByRef<Valve::VR::TrackedDevicePose_t> pTrackedDevicePose) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::GetControllerStateWithPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetControllerStateWithPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eOrigin), ::il2cpp_utils::ExtractType(unControllerDeviceIndex), ::il2cpp_utils::ExtractType(pControllerState), ::il2cpp_utils::ExtractType(unControllerStateSize), ::il2cpp_utils::ExtractType(pTrackedDevicePose)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, eOrigin, unControllerDeviceIndex, byref(pControllerState), unControllerStateSize, byref(pTrackedDevicePose));
}
// Autogenerated method: Valve.VR.CVRSystem.TriggerHapticPulse
void Valve::VR::CVRSystem::TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, ::Il2CppChar usDurationMicroSec) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::TriggerHapticPulse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TriggerHapticPulse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unControllerDeviceIndex), ::il2cpp_utils::ExtractType(unAxisId), ::il2cpp_utils::ExtractType(usDurationMicroSec)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unControllerDeviceIndex, unAxisId, usDurationMicroSec);
}
// Autogenerated method: Valve.VR.CVRSystem.GetButtonIdNameFromEnum
::StringW Valve::VR::CVRSystem::GetButtonIdNameFromEnum(Valve::VR::EVRButtonId eButtonId) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::GetButtonIdNameFromEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetButtonIdNameFromEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eButtonId)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, eButtonId);
}
// Autogenerated method: Valve.VR.CVRSystem.GetControllerAxisTypeNameFromEnum
::StringW Valve::VR::CVRSystem::GetControllerAxisTypeNameFromEnum(Valve::VR::EVRControllerAxisType eAxisType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::GetControllerAxisTypeNameFromEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetControllerAxisTypeNameFromEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eAxisType)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, eAxisType);
}
// Autogenerated method: Valve.VR.CVRSystem.IsInputAvailable
bool Valve::VR::CVRSystem::IsInputAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::IsInputAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsInputAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRSystem.IsSteamVRDrawingControllers
bool Valve::VR::CVRSystem::IsSteamVRDrawingControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::IsSteamVRDrawingControllers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSteamVRDrawingControllers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRSystem.ShouldApplicationPause
bool Valve::VR::CVRSystem::ShouldApplicationPause() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::ShouldApplicationPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRSystem.ShouldApplicationReduceRenderingWork
bool Valve::VR::CVRSystem::ShouldApplicationReduceRenderingWork() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::ShouldApplicationReduceRenderingWork");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldApplicationReduceRenderingWork", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRSystem.DriverDebugRequest
uint Valve::VR::CVRSystem::DriverDebugRequest(uint unDeviceIndex, ::StringW pchRequest, System::Text::StringBuilder* pchResponseBuffer, uint unResponseBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::DriverDebugRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DriverDebugRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unDeviceIndex), ::il2cpp_utils::ExtractType(pchRequest), ::il2cpp_utils::ExtractType(pchResponseBuffer), ::il2cpp_utils::ExtractType(unResponseBufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, unDeviceIndex, pchRequest, pchResponseBuffer, unResponseBufferSize);
}
// Autogenerated method: Valve.VR.CVRSystem.PerformFirmwareUpdate
Valve::VR::EVRFirmwareError Valve::VR::CVRSystem::PerformFirmwareUpdate(uint unDeviceIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::PerformFirmwareUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformFirmwareUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unDeviceIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRFirmwareError, false>(this, ___internal__method, unDeviceIndex);
}
// Autogenerated method: Valve.VR.CVRSystem.AcknowledgeQuit_Exiting
void Valve::VR::CVRSystem::AcknowledgeQuit_Exiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::AcknowledgeQuit_Exiting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AcknowledgeQuit_Exiting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRSystem.AcknowledgeQuit_UserPrompt
void Valve::VR::CVRSystem::AcknowledgeQuit_UserPrompt() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::AcknowledgeQuit_UserPrompt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AcknowledgeQuit_UserPrompt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.CVRSystem/Valve.VR._PollNextEventPacked
#include "Valve/VR/CVRSystem__PollNextEventPacked.hpp"
// Including type: Valve.VR.VREvent_t_Packed
#include "Valve/VR/VREvent_t_Packed.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.CVRSystem/Valve.VR._PollNextEventPacked.Invoke
bool Valve::VR::CVRSystem::_PollNextEventPacked::Invoke(ByRef<Valve::VR::VREvent_t_Packed> pEvent, uint uncbVREvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::_PollNextEventPacked::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pEvent), ::il2cpp_utils::ExtractType(uncbVREvent)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pEvent), uncbVREvent);
}
// Autogenerated method: Valve.VR.CVRSystem/Valve.VR._PollNextEventPacked.BeginInvoke
System::IAsyncResult* Valve::VR::CVRSystem::_PollNextEventPacked::BeginInvoke(ByRef<Valve::VR::VREvent_t_Packed> pEvent, uint uncbVREvent, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::_PollNextEventPacked::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pEvent), ::il2cpp_utils::ExtractType(uncbVREvent), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, byref(pEvent), uncbVREvent, callback, object);
}
// Autogenerated method: Valve.VR.CVRSystem/Valve.VR._PollNextEventPacked.EndInvoke
bool Valve::VR::CVRSystem::_PollNextEventPacked::EndInvoke(ByRef<Valve::VR::VREvent_t_Packed> pEvent, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::_PollNextEventPacked::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pEvent), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pEvent), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.CVRSystem/Valve.VR._GetControllerStatePacked
#include "Valve/VR/CVRSystem__GetControllerStatePacked.hpp"
// Including type: Valve.VR.VRControllerState_t_Packed
#include "Valve/VR/VRControllerState_t_Packed.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.CVRSystem/Valve.VR._GetControllerStatePacked.Invoke
bool Valve::VR::CVRSystem::_GetControllerStatePacked::Invoke(uint unControllerDeviceIndex, ByRef<Valve::VR::VRControllerState_t_Packed> pControllerState, uint unControllerStateSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::_GetControllerStatePacked::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unControllerDeviceIndex), ::il2cpp_utils::ExtractType(pControllerState), ::il2cpp_utils::ExtractType(unControllerStateSize)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, unControllerDeviceIndex, byref(pControllerState), unControllerStateSize);
}
// Autogenerated method: Valve.VR.CVRSystem/Valve.VR._GetControllerStatePacked.BeginInvoke
System::IAsyncResult* Valve::VR::CVRSystem::_GetControllerStatePacked::BeginInvoke(uint unControllerDeviceIndex, ByRef<Valve::VR::VRControllerState_t_Packed> pControllerState, uint unControllerStateSize, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::_GetControllerStatePacked::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unControllerDeviceIndex), ::il2cpp_utils::ExtractType(pControllerState), ::il2cpp_utils::ExtractType(unControllerStateSize), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, unControllerDeviceIndex, byref(pControllerState), unControllerStateSize, callback, object);
}
// Autogenerated method: Valve.VR.CVRSystem/Valve.VR._GetControllerStatePacked.EndInvoke
bool Valve::VR::CVRSystem::_GetControllerStatePacked::EndInvoke(ByRef<Valve::VR::VRControllerState_t_Packed> pControllerState, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::_GetControllerStatePacked::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pControllerState), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pControllerState), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.CVRSystem/Valve.VR._GetControllerStateWithPosePacked
#include "Valve/VR/CVRSystem__GetControllerStateWithPosePacked.hpp"
// Including type: Valve.VR.ETrackingUniverseOrigin
#include "Valve/VR/ETrackingUniverseOrigin.hpp"
// Including type: Valve.VR.VRControllerState_t_Packed
#include "Valve/VR/VRControllerState_t_Packed.hpp"
// Including type: Valve.VR.TrackedDevicePose_t
#include "Valve/VR/TrackedDevicePose_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.CVRSystem/Valve.VR._GetControllerStateWithPosePacked.Invoke
bool Valve::VR::CVRSystem::_GetControllerStateWithPosePacked::Invoke(Valve::VR::ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ByRef<Valve::VR::VRControllerState_t_Packed> pControllerState, uint unControllerStateSize, ByRef<Valve::VR::TrackedDevicePose_t> pTrackedDevicePose) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::_GetControllerStateWithPosePacked::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eOrigin), ::il2cpp_utils::ExtractType(unControllerDeviceIndex), ::il2cpp_utils::ExtractType(pControllerState), ::il2cpp_utils::ExtractType(unControllerStateSize), ::il2cpp_utils::ExtractType(pTrackedDevicePose)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, eOrigin, unControllerDeviceIndex, byref(pControllerState), unControllerStateSize, byref(pTrackedDevicePose));
}
// Autogenerated method: Valve.VR.CVRSystem/Valve.VR._GetControllerStateWithPosePacked.BeginInvoke
System::IAsyncResult* Valve::VR::CVRSystem::_GetControllerStateWithPosePacked::BeginInvoke(Valve::VR::ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ByRef<Valve::VR::VRControllerState_t_Packed> pControllerState, uint unControllerStateSize, ByRef<Valve::VR::TrackedDevicePose_t> pTrackedDevicePose, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::_GetControllerStateWithPosePacked::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eOrigin), ::il2cpp_utils::ExtractType(unControllerDeviceIndex), ::il2cpp_utils::ExtractType(pControllerState), ::il2cpp_utils::ExtractType(unControllerStateSize), ::il2cpp_utils::ExtractType(pTrackedDevicePose), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, eOrigin, unControllerDeviceIndex, byref(pControllerState), unControllerStateSize, byref(pTrackedDevicePose), callback, object);
}
// Autogenerated method: Valve.VR.CVRSystem/Valve.VR._GetControllerStateWithPosePacked.EndInvoke
bool Valve::VR::CVRSystem::_GetControllerStateWithPosePacked::EndInvoke(ByRef<Valve::VR::VRControllerState_t_Packed> pControllerState, ByRef<Valve::VR::TrackedDevicePose_t> pTrackedDevicePose, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSystem::_GetControllerStateWithPosePacked::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pControllerState), ::il2cpp_utils::ExtractType(pTrackedDevicePose), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pControllerState), byref(pTrackedDevicePose), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.CVRExtendedDisplay
#include "Valve/VR/CVRExtendedDisplay.hpp"
// Including type: Valve.VR.EVREye
#include "Valve/VR/EVREye.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Valve.VR.IVRExtendedDisplay FnTable
Valve::VR::IVRExtendedDisplay& Valve::VR::CVRExtendedDisplay::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRExtendedDisplay::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<Valve::VR::IVRExtendedDisplay*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Valve.VR.CVRExtendedDisplay.GetWindowBounds
void Valve::VR::CVRExtendedDisplay::GetWindowBounds(ByRef<int> pnX, ByRef<int> pnY, ByRef<uint> pnWidth, ByRef<uint> pnHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRExtendedDisplay::GetWindowBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWindowBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pnX), ::il2cpp_utils::ExtractType(pnY), ::il2cpp_utils::ExtractType(pnWidth), ::il2cpp_utils::ExtractType(pnHeight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pnX), byref(pnY), byref(pnWidth), byref(pnHeight));
}
// Autogenerated method: Valve.VR.CVRExtendedDisplay.GetEyeOutputViewport
void Valve::VR::CVRExtendedDisplay::GetEyeOutputViewport(Valve::VR::EVREye eEye, ByRef<uint> pnX, ByRef<uint> pnY, ByRef<uint> pnWidth, ByRef<uint> pnHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRExtendedDisplay::GetEyeOutputViewport");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEyeOutputViewport", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eEye), ::il2cpp_utils::ExtractType(pnX), ::il2cpp_utils::ExtractType(pnY), ::il2cpp_utils::ExtractType(pnWidth), ::il2cpp_utils::ExtractType(pnHeight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eEye, byref(pnX), byref(pnY), byref(pnWidth), byref(pnHeight));
}
// Autogenerated method: Valve.VR.CVRExtendedDisplay.GetDXGIOutputInfo
void Valve::VR::CVRExtendedDisplay::GetDXGIOutputInfo(ByRef<int> pnAdapterIndex, ByRef<int> pnAdapterOutputIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRExtendedDisplay::GetDXGIOutputInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDXGIOutputInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pnAdapterIndex), ::il2cpp_utils::ExtractType(pnAdapterOutputIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pnAdapterIndex), byref(pnAdapterOutputIndex));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.CVRTrackedCamera
#include "Valve/VR/CVRTrackedCamera.hpp"
// Including type: Valve.VR.EVRTrackedCameraError
#include "Valve/VR/EVRTrackedCameraError.hpp"
// Including type: Valve.VR.EVRTrackedCameraFrameType
#include "Valve/VR/EVRTrackedCameraFrameType.hpp"
// Including type: Valve.VR.HmdVector2_t
#include "Valve/VR/HmdVector2_t.hpp"
// Including type: Valve.VR.HmdMatrix44_t
#include "Valve/VR/HmdMatrix44_t.hpp"
// Including type: Valve.VR.CameraVideoStreamFrameHeader_t
#include "Valve/VR/CameraVideoStreamFrameHeader_t.hpp"
// Including type: Valve.VR.VRTextureBounds_t
#include "Valve/VR/VRTextureBounds_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Valve.VR.IVRTrackedCamera FnTable
Valve::VR::IVRTrackedCamera& Valve::VR::CVRTrackedCamera::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRTrackedCamera::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<Valve::VR::IVRTrackedCamera*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Valve.VR.CVRTrackedCamera.GetCameraErrorNameFromEnum
::StringW Valve::VR::CVRTrackedCamera::GetCameraErrorNameFromEnum(Valve::VR::EVRTrackedCameraError eCameraError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRTrackedCamera::GetCameraErrorNameFromEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCameraErrorNameFromEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eCameraError)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, eCameraError);
}
// Autogenerated method: Valve.VR.CVRTrackedCamera.HasCamera
Valve::VR::EVRTrackedCameraError Valve::VR::CVRTrackedCamera::HasCamera(uint nDeviceIndex, ByRef<bool> pHasCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRTrackedCamera::HasCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nDeviceIndex), ::il2cpp_utils::ExtractType(pHasCamera)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRTrackedCameraError, false>(this, ___internal__method, nDeviceIndex, byref(pHasCamera));
}
// Autogenerated method: Valve.VR.CVRTrackedCamera.GetCameraFrameSize
Valve::VR::EVRTrackedCameraError Valve::VR::CVRTrackedCamera::GetCameraFrameSize(uint nDeviceIndex, Valve::VR::EVRTrackedCameraFrameType eFrameType, ByRef<uint> pnWidth, ByRef<uint> pnHeight, ByRef<uint> pnFrameBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRTrackedCamera::GetCameraFrameSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCameraFrameSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nDeviceIndex), ::il2cpp_utils::ExtractType(eFrameType), ::il2cpp_utils::ExtractType(pnWidth), ::il2cpp_utils::ExtractType(pnHeight), ::il2cpp_utils::ExtractType(pnFrameBufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRTrackedCameraError, false>(this, ___internal__method, nDeviceIndex, eFrameType, byref(pnWidth), byref(pnHeight), byref(pnFrameBufferSize));
}
// Autogenerated method: Valve.VR.CVRTrackedCamera.GetCameraIntrinsics
Valve::VR::EVRTrackedCameraError Valve::VR::CVRTrackedCamera::GetCameraIntrinsics(uint nDeviceIndex, Valve::VR::EVRTrackedCameraFrameType eFrameType, ByRef<Valve::VR::HmdVector2_t> pFocalLength, ByRef<Valve::VR::HmdVector2_t> pCenter) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRTrackedCamera::GetCameraIntrinsics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCameraIntrinsics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nDeviceIndex), ::il2cpp_utils::ExtractType(eFrameType), ::il2cpp_utils::ExtractType(pFocalLength), ::il2cpp_utils::ExtractType(pCenter)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRTrackedCameraError, false>(this, ___internal__method, nDeviceIndex, eFrameType, byref(pFocalLength), byref(pCenter));
}
// Autogenerated method: Valve.VR.CVRTrackedCamera.GetCameraProjection
Valve::VR::EVRTrackedCameraError Valve::VR::CVRTrackedCamera::GetCameraProjection(uint nDeviceIndex, Valve::VR::EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ByRef<Valve::VR::HmdMatrix44_t> pProjection) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRTrackedCamera::GetCameraProjection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCameraProjection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nDeviceIndex), ::il2cpp_utils::ExtractType(eFrameType), ::il2cpp_utils::ExtractType(flZNear), ::il2cpp_utils::ExtractType(flZFar), ::il2cpp_utils::ExtractType(pProjection)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRTrackedCameraError, false>(this, ___internal__method, nDeviceIndex, eFrameType, flZNear, flZFar, byref(pProjection));
}
// Autogenerated method: Valve.VR.CVRTrackedCamera.AcquireVideoStreamingService
Valve::VR::EVRTrackedCameraError Valve::VR::CVRTrackedCamera::AcquireVideoStreamingService(uint nDeviceIndex, ByRef<uint64_t> pHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRTrackedCamera::AcquireVideoStreamingService");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AcquireVideoStreamingService", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nDeviceIndex), ::il2cpp_utils::ExtractType(pHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRTrackedCameraError, false>(this, ___internal__method, nDeviceIndex, byref(pHandle));
}
// Autogenerated method: Valve.VR.CVRTrackedCamera.ReleaseVideoStreamingService
Valve::VR::EVRTrackedCameraError Valve::VR::CVRTrackedCamera::ReleaseVideoStreamingService(uint64_t hTrackedCamera) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRTrackedCamera::ReleaseVideoStreamingService");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseVideoStreamingService", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hTrackedCamera)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRTrackedCameraError, false>(this, ___internal__method, hTrackedCamera);
}
// Autogenerated method: Valve.VR.CVRTrackedCamera.GetVideoStreamFrameBuffer
Valve::VR::EVRTrackedCameraError Valve::VR::CVRTrackedCamera::GetVideoStreamFrameBuffer(uint64_t hTrackedCamera, Valve::VR::EVRTrackedCameraFrameType eFrameType, System::IntPtr pFrameBuffer, uint nFrameBufferSize, ByRef<Valve::VR::CameraVideoStreamFrameHeader_t> pFrameHeader, uint nFrameHeaderSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRTrackedCamera::GetVideoStreamFrameBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVideoStreamFrameBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hTrackedCamera), ::il2cpp_utils::ExtractType(eFrameType), ::il2cpp_utils::ExtractType(pFrameBuffer), ::il2cpp_utils::ExtractType(nFrameBufferSize), ::il2cpp_utils::ExtractType(pFrameHeader), ::il2cpp_utils::ExtractType(nFrameHeaderSize)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRTrackedCameraError, false>(this, ___internal__method, hTrackedCamera, eFrameType, pFrameBuffer, nFrameBufferSize, byref(pFrameHeader), nFrameHeaderSize);
}
// Autogenerated method: Valve.VR.CVRTrackedCamera.GetVideoStreamTextureSize
Valve::VR::EVRTrackedCameraError Valve::VR::CVRTrackedCamera::GetVideoStreamTextureSize(uint nDeviceIndex, Valve::VR::EVRTrackedCameraFrameType eFrameType, ByRef<Valve::VR::VRTextureBounds_t> pTextureBounds, ByRef<uint> pnWidth, ByRef<uint> pnHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRTrackedCamera::GetVideoStreamTextureSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVideoStreamTextureSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nDeviceIndex), ::il2cpp_utils::ExtractType(eFrameType), ::il2cpp_utils::ExtractType(pTextureBounds), ::il2cpp_utils::ExtractType(pnWidth), ::il2cpp_utils::ExtractType(pnHeight)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRTrackedCameraError, false>(this, ___internal__method, nDeviceIndex, eFrameType, byref(pTextureBounds), byref(pnWidth), byref(pnHeight));
}
// Autogenerated method: Valve.VR.CVRTrackedCamera.GetVideoStreamTextureD3D11
Valve::VR::EVRTrackedCameraError Valve::VR::CVRTrackedCamera::GetVideoStreamTextureD3D11(uint64_t hTrackedCamera, Valve::VR::EVRTrackedCameraFrameType eFrameType, System::IntPtr pD3D11DeviceOrResource, ByRef<System::IntPtr> ppD3D11ShaderResourceView, ByRef<Valve::VR::CameraVideoStreamFrameHeader_t> pFrameHeader, uint nFrameHeaderSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRTrackedCamera::GetVideoStreamTextureD3D11");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVideoStreamTextureD3D11", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hTrackedCamera), ::il2cpp_utils::ExtractType(eFrameType), ::il2cpp_utils::ExtractType(pD3D11DeviceOrResource), ::il2cpp_utils::ExtractType(ppD3D11ShaderResourceView), ::il2cpp_utils::ExtractType(pFrameHeader), ::il2cpp_utils::ExtractType(nFrameHeaderSize)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRTrackedCameraError, false>(this, ___internal__method, hTrackedCamera, eFrameType, pD3D11DeviceOrResource, byref(ppD3D11ShaderResourceView), byref(pFrameHeader), nFrameHeaderSize);
}
// Autogenerated method: Valve.VR.CVRTrackedCamera.GetVideoStreamTextureGL
Valve::VR::EVRTrackedCameraError Valve::VR::CVRTrackedCamera::GetVideoStreamTextureGL(uint64_t hTrackedCamera, Valve::VR::EVRTrackedCameraFrameType eFrameType, ByRef<uint> pglTextureId, ByRef<Valve::VR::CameraVideoStreamFrameHeader_t> pFrameHeader, uint nFrameHeaderSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRTrackedCamera::GetVideoStreamTextureGL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVideoStreamTextureGL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hTrackedCamera), ::il2cpp_utils::ExtractType(eFrameType), ::il2cpp_utils::ExtractType(pglTextureId), ::il2cpp_utils::ExtractType(pFrameHeader), ::il2cpp_utils::ExtractType(nFrameHeaderSize)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRTrackedCameraError, false>(this, ___internal__method, hTrackedCamera, eFrameType, byref(pglTextureId), byref(pFrameHeader), nFrameHeaderSize);
}
// Autogenerated method: Valve.VR.CVRTrackedCamera.ReleaseVideoStreamTextureGL
Valve::VR::EVRTrackedCameraError Valve::VR::CVRTrackedCamera::ReleaseVideoStreamTextureGL(uint64_t hTrackedCamera, uint glTextureId) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRTrackedCamera::ReleaseVideoStreamTextureGL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseVideoStreamTextureGL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hTrackedCamera), ::il2cpp_utils::ExtractType(glTextureId)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRTrackedCameraError, false>(this, ___internal__method, hTrackedCamera, glTextureId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.CVRApplications
#include "Valve/VR/CVRApplications.hpp"
// Including type: Valve.VR.EVRApplicationError
#include "Valve/VR/EVRApplicationError.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: Valve.VR.EVRApplicationProperty
#include "Valve/VR/EVRApplicationProperty.hpp"
// Including type: Valve.VR.EVRApplicationTransitionState
#include "Valve/VR/EVRApplicationTransitionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Valve.VR.IVRApplications FnTable
Valve::VR::IVRApplications& Valve::VR::CVRApplications::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRApplications::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<Valve::VR::IVRApplications*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Valve.VR.CVRApplications.AddApplicationManifest
Valve::VR::EVRApplicationError Valve::VR::CVRApplications::AddApplicationManifest(::StringW pchApplicationManifestFullPath, bool bTemporary) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRApplications::AddApplicationManifest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddApplicationManifest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchApplicationManifestFullPath), ::il2cpp_utils::ExtractType(bTemporary)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRApplicationError, false>(this, ___internal__method, pchApplicationManifestFullPath, bTemporary);
}
// Autogenerated method: Valve.VR.CVRApplications.RemoveApplicationManifest
Valve::VR::EVRApplicationError Valve::VR::CVRApplications::RemoveApplicationManifest(::StringW pchApplicationManifestFullPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRApplications::RemoveApplicationManifest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveApplicationManifest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchApplicationManifestFullPath)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRApplicationError, false>(this, ___internal__method, pchApplicationManifestFullPath);
}
// Autogenerated method: Valve.VR.CVRApplications.IsApplicationInstalled
bool Valve::VR::CVRApplications::IsApplicationInstalled(::StringW pchAppKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRApplications::IsApplicationInstalled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsApplicationInstalled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchAppKey)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchAppKey);
}
// Autogenerated method: Valve.VR.CVRApplications.GetApplicationCount
uint Valve::VR::CVRApplications::GetApplicationCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRApplications::GetApplicationCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicationCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRApplications.GetApplicationKeyByIndex
Valve::VR::EVRApplicationError Valve::VR::CVRApplications::GetApplicationKeyByIndex(uint unApplicationIndex, System::Text::StringBuilder* pchAppKeyBuffer, uint unAppKeyBufferLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRApplications::GetApplicationKeyByIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicationKeyByIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unApplicationIndex), ::il2cpp_utils::ExtractType(pchAppKeyBuffer), ::il2cpp_utils::ExtractType(unAppKeyBufferLen)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRApplicationError, false>(this, ___internal__method, unApplicationIndex, pchAppKeyBuffer, unAppKeyBufferLen);
}
// Autogenerated method: Valve.VR.CVRApplications.GetApplicationKeyByProcessId
Valve::VR::EVRApplicationError Valve::VR::CVRApplications::GetApplicationKeyByProcessId(uint unProcessId, System::Text::StringBuilder* pchAppKeyBuffer, uint unAppKeyBufferLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRApplications::GetApplicationKeyByProcessId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicationKeyByProcessId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unProcessId), ::il2cpp_utils::ExtractType(pchAppKeyBuffer), ::il2cpp_utils::ExtractType(unAppKeyBufferLen)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRApplicationError, false>(this, ___internal__method, unProcessId, pchAppKeyBuffer, unAppKeyBufferLen);
}
// Autogenerated method: Valve.VR.CVRApplications.LaunchApplication
Valve::VR::EVRApplicationError Valve::VR::CVRApplications::LaunchApplication(::StringW pchAppKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRApplications::LaunchApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchAppKey)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRApplicationError, false>(this, ___internal__method, pchAppKey);
}
// Autogenerated method: Valve.VR.CVRApplications.LaunchTemplateApplication
Valve::VR::EVRApplicationError Valve::VR::CVRApplications::LaunchTemplateApplication(::StringW pchTemplateAppKey, ::StringW pchNewAppKey, ::ArrayW<Valve::VR::AppOverrideKeys_t> pKeys) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRApplications::LaunchTemplateApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchTemplateApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchTemplateAppKey), ::il2cpp_utils::ExtractType(pchNewAppKey), ::il2cpp_utils::ExtractType(pKeys)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRApplicationError, false>(this, ___internal__method, pchTemplateAppKey, pchNewAppKey, pKeys);
}
// Autogenerated method: Valve.VR.CVRApplications.LaunchApplicationFromMimeType
Valve::VR::EVRApplicationError Valve::VR::CVRApplications::LaunchApplicationFromMimeType(::StringW pchMimeType, ::StringW pchArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRApplications::LaunchApplicationFromMimeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchApplicationFromMimeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchMimeType), ::il2cpp_utils::ExtractType(pchArgs)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRApplicationError, false>(this, ___internal__method, pchMimeType, pchArgs);
}
// Autogenerated method: Valve.VR.CVRApplications.LaunchDashboardOverlay
Valve::VR::EVRApplicationError Valve::VR::CVRApplications::LaunchDashboardOverlay(::StringW pchAppKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRApplications::LaunchDashboardOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchDashboardOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchAppKey)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRApplicationError, false>(this, ___internal__method, pchAppKey);
}
// Autogenerated method: Valve.VR.CVRApplications.CancelApplicationLaunch
bool Valve::VR::CVRApplications::CancelApplicationLaunch(::StringW pchAppKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRApplications::CancelApplicationLaunch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelApplicationLaunch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchAppKey)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchAppKey);
}
// Autogenerated method: Valve.VR.CVRApplications.IdentifyApplication
Valve::VR::EVRApplicationError Valve::VR::CVRApplications::IdentifyApplication(uint unProcessId, ::StringW pchAppKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRApplications::IdentifyApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IdentifyApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unProcessId), ::il2cpp_utils::ExtractType(pchAppKey)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRApplicationError, false>(this, ___internal__method, unProcessId, pchAppKey);
}
// Autogenerated method: Valve.VR.CVRApplications.GetApplicationProcessId
uint Valve::VR::CVRApplications::GetApplicationProcessId(::StringW pchAppKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRApplications::GetApplicationProcessId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicationProcessId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchAppKey)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchAppKey);
}
// Autogenerated method: Valve.VR.CVRApplications.GetApplicationsErrorNameFromEnum
::StringW Valve::VR::CVRApplications::GetApplicationsErrorNameFromEnum(Valve::VR::EVRApplicationError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRApplications::GetApplicationsErrorNameFromEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicationsErrorNameFromEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, error);
}
// Autogenerated method: Valve.VR.CVRApplications.GetApplicationPropertyString
uint Valve::VR::CVRApplications::GetApplicationPropertyString(::StringW pchAppKey, Valve::VR::EVRApplicationProperty eProperty, System::Text::StringBuilder* pchPropertyValueBuffer, uint unPropertyValueBufferLen, ByRef<Valve::VR::EVRApplicationError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRApplications::GetApplicationPropertyString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicationPropertyString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchAppKey), ::il2cpp_utils::ExtractType(eProperty), ::il2cpp_utils::ExtractType(pchPropertyValueBuffer), ::il2cpp_utils::ExtractType(unPropertyValueBufferLen), ::il2cpp_utils::ExtractType(peError)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchAppKey, eProperty, pchPropertyValueBuffer, unPropertyValueBufferLen, byref(peError));
}
// Autogenerated method: Valve.VR.CVRApplications.GetApplicationPropertyBool
bool Valve::VR::CVRApplications::GetApplicationPropertyBool(::StringW pchAppKey, Valve::VR::EVRApplicationProperty eProperty, ByRef<Valve::VR::EVRApplicationError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRApplications::GetApplicationPropertyBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicationPropertyBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchAppKey), ::il2cpp_utils::ExtractType(eProperty), ::il2cpp_utils::ExtractType(peError)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchAppKey, eProperty, byref(peError));
}
// Autogenerated method: Valve.VR.CVRApplications.GetApplicationPropertyUint64
uint64_t Valve::VR::CVRApplications::GetApplicationPropertyUint64(::StringW pchAppKey, Valve::VR::EVRApplicationProperty eProperty, ByRef<Valve::VR::EVRApplicationError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRApplications::GetApplicationPropertyUint64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicationPropertyUint64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchAppKey), ::il2cpp_utils::ExtractType(eProperty), ::il2cpp_utils::ExtractType(peError)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, pchAppKey, eProperty, byref(peError));
}
// Autogenerated method: Valve.VR.CVRApplications.SetApplicationAutoLaunch
Valve::VR::EVRApplicationError Valve::VR::CVRApplications::SetApplicationAutoLaunch(::StringW pchAppKey, bool bAutoLaunch) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRApplications::SetApplicationAutoLaunch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetApplicationAutoLaunch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchAppKey), ::il2cpp_utils::ExtractType(bAutoLaunch)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRApplicationError, false>(this, ___internal__method, pchAppKey, bAutoLaunch);
}
// Autogenerated method: Valve.VR.CVRApplications.GetApplicationAutoLaunch
bool Valve::VR::CVRApplications::GetApplicationAutoLaunch(::StringW pchAppKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRApplications::GetApplicationAutoLaunch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicationAutoLaunch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchAppKey)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchAppKey);
}
// Autogenerated method: Valve.VR.CVRApplications.SetDefaultApplicationForMimeType
Valve::VR::EVRApplicationError Valve::VR::CVRApplications::SetDefaultApplicationForMimeType(::StringW pchAppKey, ::StringW pchMimeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRApplications::SetDefaultApplicationForMimeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDefaultApplicationForMimeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchAppKey), ::il2cpp_utils::ExtractType(pchMimeType)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRApplicationError, false>(this, ___internal__method, pchAppKey, pchMimeType);
}
// Autogenerated method: Valve.VR.CVRApplications.GetDefaultApplicationForMimeType
bool Valve::VR::CVRApplications::GetDefaultApplicationForMimeType(::StringW pchMimeType, System::Text::StringBuilder* pchAppKeyBuffer, uint unAppKeyBufferLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRApplications::GetDefaultApplicationForMimeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDefaultApplicationForMimeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchMimeType), ::il2cpp_utils::ExtractType(pchAppKeyBuffer), ::il2cpp_utils::ExtractType(unAppKeyBufferLen)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchMimeType, pchAppKeyBuffer, unAppKeyBufferLen);
}
// Autogenerated method: Valve.VR.CVRApplications.GetApplicationSupportedMimeTypes
bool Valve::VR::CVRApplications::GetApplicationSupportedMimeTypes(::StringW pchAppKey, System::Text::StringBuilder* pchMimeTypesBuffer, uint unMimeTypesBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRApplications::GetApplicationSupportedMimeTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicationSupportedMimeTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchAppKey), ::il2cpp_utils::ExtractType(pchMimeTypesBuffer), ::il2cpp_utils::ExtractType(unMimeTypesBuffer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchAppKey, pchMimeTypesBuffer, unMimeTypesBuffer);
}
// Autogenerated method: Valve.VR.CVRApplications.GetApplicationsThatSupportMimeType
uint Valve::VR::CVRApplications::GetApplicationsThatSupportMimeType(::StringW pchMimeType, System::Text::StringBuilder* pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRApplications::GetApplicationsThatSupportMimeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicationsThatSupportMimeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchMimeType), ::il2cpp_utils::ExtractType(pchAppKeysThatSupportBuffer), ::il2cpp_utils::ExtractType(unAppKeysThatSupportBuffer)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchMimeType, pchAppKeysThatSupportBuffer, unAppKeysThatSupportBuffer);
}
// Autogenerated method: Valve.VR.CVRApplications.GetApplicationLaunchArguments
uint Valve::VR::CVRApplications::GetApplicationLaunchArguments(uint unHandle, System::Text::StringBuilder* pchArgs, uint unArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRApplications::GetApplicationLaunchArguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicationLaunchArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unHandle), ::il2cpp_utils::ExtractType(pchArgs), ::il2cpp_utils::ExtractType(unArgs)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, unHandle, pchArgs, unArgs);
}
// Autogenerated method: Valve.VR.CVRApplications.GetStartingApplication
Valve::VR::EVRApplicationError Valve::VR::CVRApplications::GetStartingApplication(System::Text::StringBuilder* pchAppKeyBuffer, uint unAppKeyBufferLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRApplications::GetStartingApplication");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStartingApplication", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchAppKeyBuffer), ::il2cpp_utils::ExtractType(unAppKeyBufferLen)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRApplicationError, false>(this, ___internal__method, pchAppKeyBuffer, unAppKeyBufferLen);
}
// Autogenerated method: Valve.VR.CVRApplications.GetTransitionState
Valve::VR::EVRApplicationTransitionState Valve::VR::CVRApplications::GetTransitionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRApplications::GetTransitionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTransitionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRApplicationTransitionState, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRApplications.PerformApplicationPrelaunchCheck
Valve::VR::EVRApplicationError Valve::VR::CVRApplications::PerformApplicationPrelaunchCheck(::StringW pchAppKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRApplications::PerformApplicationPrelaunchCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PerformApplicationPrelaunchCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchAppKey)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRApplicationError, false>(this, ___internal__method, pchAppKey);
}
// Autogenerated method: Valve.VR.CVRApplications.GetApplicationsTransitionStateNameFromEnum
::StringW Valve::VR::CVRApplications::GetApplicationsTransitionStateNameFromEnum(Valve::VR::EVRApplicationTransitionState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRApplications::GetApplicationsTransitionStateNameFromEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetApplicationsTransitionStateNameFromEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, state);
}
// Autogenerated method: Valve.VR.CVRApplications.IsQuitUserPromptRequested
bool Valve::VR::CVRApplications::IsQuitUserPromptRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRApplications::IsQuitUserPromptRequested");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsQuitUserPromptRequested", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRApplications.LaunchInternalProcess
Valve::VR::EVRApplicationError Valve::VR::CVRApplications::LaunchInternalProcess(::StringW pchBinaryPath, ::StringW pchArguments, ::StringW pchWorkingDirectory) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRApplications::LaunchInternalProcess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchInternalProcess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchBinaryPath), ::il2cpp_utils::ExtractType(pchArguments), ::il2cpp_utils::ExtractType(pchWorkingDirectory)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRApplicationError, false>(this, ___internal__method, pchBinaryPath, pchArguments, pchWorkingDirectory);
}
// Autogenerated method: Valve.VR.CVRApplications.GetCurrentSceneProcessId
uint Valve::VR::CVRApplications::GetCurrentSceneProcessId() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRApplications::GetCurrentSceneProcessId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentSceneProcessId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.CVRChaperone
#include "Valve/VR/CVRChaperone.hpp"
// Including type: Valve.VR.ChaperoneCalibrationState
#include "Valve/VR/ChaperoneCalibrationState.hpp"
// Including type: Valve.VR.HmdQuad_t
#include "Valve/VR/HmdQuad_t.hpp"
// Including type: Valve.VR.HmdColor_t
#include "Valve/VR/HmdColor_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Valve.VR.IVRChaperone FnTable
Valve::VR::IVRChaperone& Valve::VR::CVRChaperone::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRChaperone::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<Valve::VR::IVRChaperone*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Valve.VR.CVRChaperone.GetCalibrationState
Valve::VR::ChaperoneCalibrationState Valve::VR::CVRChaperone::GetCalibrationState() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRChaperone::GetCalibrationState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCalibrationState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::ChaperoneCalibrationState, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRChaperone.GetPlayAreaSize
bool Valve::VR::CVRChaperone::GetPlayAreaSize(ByRef<float> pSizeX, ByRef<float> pSizeZ) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRChaperone::GetPlayAreaSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayAreaSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSizeX), ::il2cpp_utils::ExtractType(pSizeZ)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pSizeX), byref(pSizeZ));
}
// Autogenerated method: Valve.VR.CVRChaperone.GetPlayAreaRect
bool Valve::VR::CVRChaperone::GetPlayAreaRect(ByRef<Valve::VR::HmdQuad_t> rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRChaperone::GetPlayAreaRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayAreaRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(rect));
}
// Autogenerated method: Valve.VR.CVRChaperone.ReloadInfo
void Valve::VR::CVRChaperone::ReloadInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRChaperone::ReloadInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReloadInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRChaperone.SetSceneColor
void Valve::VR::CVRChaperone::SetSceneColor(Valve::VR::HmdColor_t color) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRChaperone::SetSceneColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSceneColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: Valve.VR.CVRChaperone.GetBoundsColor
void Valve::VR::CVRChaperone::GetBoundsColor(ByRef<Valve::VR::HmdColor_t> pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ByRef<Valve::VR::HmdColor_t> pOutputCameraColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRChaperone::GetBoundsColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBoundsColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pOutputColorArray), ::il2cpp_utils::ExtractType(nNumOutputColors), ::il2cpp_utils::ExtractType(flCollisionBoundsFadeDistance), ::il2cpp_utils::ExtractType(pOutputCameraColor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pOutputColorArray), nNumOutputColors, flCollisionBoundsFadeDistance, byref(pOutputCameraColor));
}
// Autogenerated method: Valve.VR.CVRChaperone.AreBoundsVisible
bool Valve::VR::CVRChaperone::AreBoundsVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRChaperone::AreBoundsVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AreBoundsVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRChaperone.ForceBoundsVisible
void Valve::VR::CVRChaperone::ForceBoundsVisible(bool bForce) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRChaperone::ForceBoundsVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceBoundsVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bForce)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bForce);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.CVRChaperoneSetup
#include "Valve/VR/CVRChaperoneSetup.hpp"
// Including type: Valve.VR.EChaperoneConfigFile
#include "Valve/VR/EChaperoneConfigFile.hpp"
// Including type: Valve.VR.HmdMatrix34_t
#include "Valve/VR/HmdMatrix34_t.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Valve.VR.IVRChaperoneSetup FnTable
Valve::VR::IVRChaperoneSetup& Valve::VR::CVRChaperoneSetup::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRChaperoneSetup::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<Valve::VR::IVRChaperoneSetup*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Valve.VR.CVRChaperoneSetup.CommitWorkingCopy
bool Valve::VR::CVRChaperoneSetup::CommitWorkingCopy(Valve::VR::EChaperoneConfigFile configFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRChaperoneSetup::CommitWorkingCopy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CommitWorkingCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(configFile)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, configFile);
}
// Autogenerated method: Valve.VR.CVRChaperoneSetup.RevertWorkingCopy
void Valve::VR::CVRChaperoneSetup::RevertWorkingCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRChaperoneSetup::RevertWorkingCopy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RevertWorkingCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRChaperoneSetup.GetWorkingPlayAreaSize
bool Valve::VR::CVRChaperoneSetup::GetWorkingPlayAreaSize(ByRef<float> pSizeX, ByRef<float> pSizeZ) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRChaperoneSetup::GetWorkingPlayAreaSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWorkingPlayAreaSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSizeX), ::il2cpp_utils::ExtractType(pSizeZ)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pSizeX), byref(pSizeZ));
}
// Autogenerated method: Valve.VR.CVRChaperoneSetup.GetWorkingPlayAreaRect
bool Valve::VR::CVRChaperoneSetup::GetWorkingPlayAreaRect(ByRef<Valve::VR::HmdQuad_t> rect) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRChaperoneSetup::GetWorkingPlayAreaRect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWorkingPlayAreaRect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rect)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(rect));
}
// Autogenerated method: Valve.VR.CVRChaperoneSetup.GetWorkingCollisionBoundsInfo
bool Valve::VR::CVRChaperoneSetup::GetWorkingCollisionBoundsInfo(ByRef<::ArrayW<Valve::VR::HmdQuad_t>> pQuadsBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRChaperoneSetup::GetWorkingCollisionBoundsInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWorkingCollisionBoundsInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<Valve::VR::HmdQuad_t>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pQuadsBuffer));
}
// Autogenerated method: Valve.VR.CVRChaperoneSetup.GetLiveCollisionBoundsInfo
bool Valve::VR::CVRChaperoneSetup::GetLiveCollisionBoundsInfo(ByRef<::ArrayW<Valve::VR::HmdQuad_t>> pQuadsBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRChaperoneSetup::GetLiveCollisionBoundsInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLiveCollisionBoundsInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<Valve::VR::HmdQuad_t>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pQuadsBuffer));
}
// Autogenerated method: Valve.VR.CVRChaperoneSetup.GetWorkingSeatedZeroPoseToRawTrackingPose
bool Valve::VR::CVRChaperoneSetup::GetWorkingSeatedZeroPoseToRawTrackingPose(ByRef<Valve::VR::HmdMatrix34_t> pmatSeatedZeroPoseToRawTrackingPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRChaperoneSetup::GetWorkingSeatedZeroPoseToRawTrackingPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWorkingSeatedZeroPoseToRawTrackingPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pmatSeatedZeroPoseToRawTrackingPose)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pmatSeatedZeroPoseToRawTrackingPose));
}
// Autogenerated method: Valve.VR.CVRChaperoneSetup.GetWorkingStandingZeroPoseToRawTrackingPose
bool Valve::VR::CVRChaperoneSetup::GetWorkingStandingZeroPoseToRawTrackingPose(ByRef<Valve::VR::HmdMatrix34_t> pmatStandingZeroPoseToRawTrackingPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRChaperoneSetup::GetWorkingStandingZeroPoseToRawTrackingPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetWorkingStandingZeroPoseToRawTrackingPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pmatStandingZeroPoseToRawTrackingPose)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pmatStandingZeroPoseToRawTrackingPose));
}
// Autogenerated method: Valve.VR.CVRChaperoneSetup.SetWorkingPlayAreaSize
void Valve::VR::CVRChaperoneSetup::SetWorkingPlayAreaSize(float sizeX, float sizeZ) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRChaperoneSetup::SetWorkingPlayAreaSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetWorkingPlayAreaSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sizeX), ::il2cpp_utils::ExtractType(sizeZ)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sizeX, sizeZ);
}
// Autogenerated method: Valve.VR.CVRChaperoneSetup.SetWorkingCollisionBoundsInfo
void Valve::VR::CVRChaperoneSetup::SetWorkingCollisionBoundsInfo(::ArrayW<Valve::VR::HmdQuad_t> pQuadsBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRChaperoneSetup::SetWorkingCollisionBoundsInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetWorkingCollisionBoundsInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pQuadsBuffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pQuadsBuffer);
}
// Autogenerated method: Valve.VR.CVRChaperoneSetup.SetWorkingSeatedZeroPoseToRawTrackingPose
void Valve::VR::CVRChaperoneSetup::SetWorkingSeatedZeroPoseToRawTrackingPose(ByRef<Valve::VR::HmdMatrix34_t> pMatSeatedZeroPoseToRawTrackingPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRChaperoneSetup::SetWorkingSeatedZeroPoseToRawTrackingPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetWorkingSeatedZeroPoseToRawTrackingPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pMatSeatedZeroPoseToRawTrackingPose)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pMatSeatedZeroPoseToRawTrackingPose));
}
// Autogenerated method: Valve.VR.CVRChaperoneSetup.SetWorkingStandingZeroPoseToRawTrackingPose
void Valve::VR::CVRChaperoneSetup::SetWorkingStandingZeroPoseToRawTrackingPose(ByRef<Valve::VR::HmdMatrix34_t> pMatStandingZeroPoseToRawTrackingPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRChaperoneSetup::SetWorkingStandingZeroPoseToRawTrackingPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetWorkingStandingZeroPoseToRawTrackingPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pMatStandingZeroPoseToRawTrackingPose)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pMatStandingZeroPoseToRawTrackingPose));
}
// Autogenerated method: Valve.VR.CVRChaperoneSetup.ReloadFromDisk
void Valve::VR::CVRChaperoneSetup::ReloadFromDisk(Valve::VR::EChaperoneConfigFile configFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRChaperoneSetup::ReloadFromDisk");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReloadFromDisk", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(configFile)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, configFile);
}
// Autogenerated method: Valve.VR.CVRChaperoneSetup.GetLiveSeatedZeroPoseToRawTrackingPose
bool Valve::VR::CVRChaperoneSetup::GetLiveSeatedZeroPoseToRawTrackingPose(ByRef<Valve::VR::HmdMatrix34_t> pmatSeatedZeroPoseToRawTrackingPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRChaperoneSetup::GetLiveSeatedZeroPoseToRawTrackingPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLiveSeatedZeroPoseToRawTrackingPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pmatSeatedZeroPoseToRawTrackingPose)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pmatSeatedZeroPoseToRawTrackingPose));
}
// Autogenerated method: Valve.VR.CVRChaperoneSetup.SetWorkingCollisionBoundsTagsInfo
void Valve::VR::CVRChaperoneSetup::SetWorkingCollisionBoundsTagsInfo(::ArrayW<uint8_t> pTagsBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRChaperoneSetup::SetWorkingCollisionBoundsTagsInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetWorkingCollisionBoundsTagsInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pTagsBuffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pTagsBuffer);
}
// Autogenerated method: Valve.VR.CVRChaperoneSetup.GetLiveCollisionBoundsTagsInfo
bool Valve::VR::CVRChaperoneSetup::GetLiveCollisionBoundsTagsInfo(ByRef<::ArrayW<uint8_t>> pTagsBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRChaperoneSetup::GetLiveCollisionBoundsTagsInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLiveCollisionBoundsTagsInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<uint8_t>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pTagsBuffer));
}
// Autogenerated method: Valve.VR.CVRChaperoneSetup.SetWorkingPhysicalBoundsInfo
bool Valve::VR::CVRChaperoneSetup::SetWorkingPhysicalBoundsInfo(::ArrayW<Valve::VR::HmdQuad_t> pQuadsBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRChaperoneSetup::SetWorkingPhysicalBoundsInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetWorkingPhysicalBoundsInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pQuadsBuffer)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pQuadsBuffer);
}
// Autogenerated method: Valve.VR.CVRChaperoneSetup.GetLivePhysicalBoundsInfo
bool Valve::VR::CVRChaperoneSetup::GetLivePhysicalBoundsInfo(ByRef<::ArrayW<Valve::VR::HmdQuad_t>> pQuadsBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRChaperoneSetup::GetLivePhysicalBoundsInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLivePhysicalBoundsInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::ArrayW<Valve::VR::HmdQuad_t>&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pQuadsBuffer));
}
// Autogenerated method: Valve.VR.CVRChaperoneSetup.ExportLiveToBuffer
bool Valve::VR::CVRChaperoneSetup::ExportLiveToBuffer(System::Text::StringBuilder* pBuffer, ByRef<uint> pnBufferLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRChaperoneSetup::ExportLiveToBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExportLiveToBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pBuffer), ::il2cpp_utils::ExtractType(pnBufferLength)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pBuffer, byref(pnBufferLength));
}
// Autogenerated method: Valve.VR.CVRChaperoneSetup.ImportFromBufferToWorking
bool Valve::VR::CVRChaperoneSetup::ImportFromBufferToWorking(::StringW pBuffer, uint nImportFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRChaperoneSetup::ImportFromBufferToWorking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImportFromBufferToWorking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pBuffer), ::il2cpp_utils::ExtractType(nImportFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pBuffer, nImportFlags);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.CVRCompositor
#include "Valve/VR/CVRCompositor.hpp"
// Including type: Valve.VR.ETrackingUniverseOrigin
#include "Valve/VR/ETrackingUniverseOrigin.hpp"
// Including type: Valve.VR.EVRCompositorError
#include "Valve/VR/EVRCompositorError.hpp"
// Including type: Valve.VR.EVREye
#include "Valve/VR/EVREye.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: Valve.VR.VRTextureBounds_t
#include "Valve/VR/VRTextureBounds_t.hpp"
// Including type: Valve.VR.EVRSubmitFlags
#include "Valve/VR/EVRSubmitFlags.hpp"
// Including type: Valve.VR.Compositor_FrameTiming
#include "Valve/VR/Compositor_FrameTiming.hpp"
// Including type: Valve.VR.Compositor_CumulativeStats
#include "Valve/VR/Compositor_CumulativeStats.hpp"
// Including type: Valve.VR.HmdColor_t
#include "Valve/VR/HmdColor_t.hpp"
// Including type: Valve.VR.EVRCompositorTimingMode
#include "Valve/VR/EVRCompositorTimingMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Valve.VR.IVRCompositor FnTable
Valve::VR::IVRCompositor& Valve::VR::CVRCompositor::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<Valve::VR::IVRCompositor*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Valve.VR.CVRCompositor.SetTrackingSpace
void Valve::VR::CVRCompositor::SetTrackingSpace(Valve::VR::ETrackingUniverseOrigin eOrigin) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::SetTrackingSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTrackingSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eOrigin)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eOrigin);
}
// Autogenerated method: Valve.VR.CVRCompositor.GetTrackingSpace
Valve::VR::ETrackingUniverseOrigin Valve::VR::CVRCompositor::GetTrackingSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::GetTrackingSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTrackingSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::ETrackingUniverseOrigin, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRCompositor.WaitGetPoses
Valve::VR::EVRCompositorError Valve::VR::CVRCompositor::WaitGetPoses(::ArrayW<Valve::VR::TrackedDevicePose_t> pRenderPoseArray, ::ArrayW<Valve::VR::TrackedDevicePose_t> pGamePoseArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::WaitGetPoses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitGetPoses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pRenderPoseArray), ::il2cpp_utils::ExtractType(pGamePoseArray)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRCompositorError, false>(this, ___internal__method, pRenderPoseArray, pGamePoseArray);
}
// Autogenerated method: Valve.VR.CVRCompositor.GetLastPoses
Valve::VR::EVRCompositorError Valve::VR::CVRCompositor::GetLastPoses(::ArrayW<Valve::VR::TrackedDevicePose_t> pRenderPoseArray, ::ArrayW<Valve::VR::TrackedDevicePose_t> pGamePoseArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::GetLastPoses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLastPoses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pRenderPoseArray), ::il2cpp_utils::ExtractType(pGamePoseArray)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRCompositorError, false>(this, ___internal__method, pRenderPoseArray, pGamePoseArray);
}
// Autogenerated method: Valve.VR.CVRCompositor.GetLastPoseForTrackedDeviceIndex
Valve::VR::EVRCompositorError Valve::VR::CVRCompositor::GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ByRef<Valve::VR::TrackedDevicePose_t> pOutputPose, ByRef<Valve::VR::TrackedDevicePose_t> pOutputGamePose) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::GetLastPoseForTrackedDeviceIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLastPoseForTrackedDeviceIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unDeviceIndex), ::il2cpp_utils::ExtractType(pOutputPose), ::il2cpp_utils::ExtractType(pOutputGamePose)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRCompositorError, false>(this, ___internal__method, unDeviceIndex, byref(pOutputPose), byref(pOutputGamePose));
}
// Autogenerated method: Valve.VR.CVRCompositor.Submit
Valve::VR::EVRCompositorError Valve::VR::CVRCompositor::Submit(Valve::VR::EVREye eEye, ByRef<Valve::VR::Texture_t> pTexture, ByRef<Valve::VR::VRTextureBounds_t> pBounds, Valve::VR::EVRSubmitFlags nSubmitFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::Submit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Submit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eEye), ::il2cpp_utils::ExtractType(pTexture), ::il2cpp_utils::ExtractType(pBounds), ::il2cpp_utils::ExtractType(nSubmitFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRCompositorError, false>(this, ___internal__method, eEye, byref(pTexture), byref(pBounds), nSubmitFlags);
}
// Autogenerated method: Valve.VR.CVRCompositor.ClearLastSubmittedFrame
void Valve::VR::CVRCompositor::ClearLastSubmittedFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::ClearLastSubmittedFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearLastSubmittedFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRCompositor.PostPresentHandoff
void Valve::VR::CVRCompositor::PostPresentHandoff() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::PostPresentHandoff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PostPresentHandoff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRCompositor.GetFrameTiming
bool Valve::VR::CVRCompositor::GetFrameTiming(ByRef<Valve::VR::Compositor_FrameTiming> pTiming, uint unFramesAgo) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::GetFrameTiming");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFrameTiming", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pTiming), ::il2cpp_utils::ExtractType(unFramesAgo)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pTiming), unFramesAgo);
}
// Autogenerated method: Valve.VR.CVRCompositor.GetFrameTimings
uint Valve::VR::CVRCompositor::GetFrameTimings(ByRef<Valve::VR::Compositor_FrameTiming> pTiming, uint nFrames) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::GetFrameTimings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFrameTimings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pTiming), ::il2cpp_utils::ExtractType(nFrames)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, byref(pTiming), nFrames);
}
// Autogenerated method: Valve.VR.CVRCompositor.GetFrameTimeRemaining
float Valve::VR::CVRCompositor::GetFrameTimeRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::GetFrameTimeRemaining");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFrameTimeRemaining", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRCompositor.GetCumulativeStats
void Valve::VR::CVRCompositor::GetCumulativeStats(ByRef<Valve::VR::Compositor_CumulativeStats> pStats, uint nStatsSizeInBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::GetCumulativeStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCumulativeStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pStats), ::il2cpp_utils::ExtractType(nStatsSizeInBytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(pStats), nStatsSizeInBytes);
}
// Autogenerated method: Valve.VR.CVRCompositor.FadeToColor
void Valve::VR::CVRCompositor::FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::FadeToColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeToColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fSeconds), ::il2cpp_utils::ExtractType(fRed), ::il2cpp_utils::ExtractType(fGreen), ::il2cpp_utils::ExtractType(fBlue), ::il2cpp_utils::ExtractType(fAlpha), ::il2cpp_utils::ExtractType(bBackground)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fSeconds, fRed, fGreen, fBlue, fAlpha, bBackground);
}
// Autogenerated method: Valve.VR.CVRCompositor.GetCurrentFadeColor
Valve::VR::HmdColor_t Valve::VR::CVRCompositor::GetCurrentFadeColor(bool bBackground) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::GetCurrentFadeColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentFadeColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bBackground)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::HmdColor_t, false>(this, ___internal__method, bBackground);
}
// Autogenerated method: Valve.VR.CVRCompositor.FadeGrid
void Valve::VR::CVRCompositor::FadeGrid(float fSeconds, bool bFadeIn) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::FadeGrid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeGrid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fSeconds), ::il2cpp_utils::ExtractType(bFadeIn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fSeconds, bFadeIn);
}
// Autogenerated method: Valve.VR.CVRCompositor.GetCurrentGridAlpha
float Valve::VR::CVRCompositor::GetCurrentGridAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::GetCurrentGridAlpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentGridAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRCompositor.SetSkyboxOverride
Valve::VR::EVRCompositorError Valve::VR::CVRCompositor::SetSkyboxOverride(::ArrayW<Valve::VR::Texture_t> pTextures) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::SetSkyboxOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSkyboxOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pTextures)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRCompositorError, false>(this, ___internal__method, pTextures);
}
// Autogenerated method: Valve.VR.CVRCompositor.ClearSkyboxOverride
void Valve::VR::CVRCompositor::ClearSkyboxOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::ClearSkyboxOverride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSkyboxOverride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRCompositor.CompositorBringToFront
void Valve::VR::CVRCompositor::CompositorBringToFront() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::CompositorBringToFront");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompositorBringToFront", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRCompositor.CompositorGoToBack
void Valve::VR::CVRCompositor::CompositorGoToBack() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::CompositorGoToBack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompositorGoToBack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRCompositor.CompositorQuit
void Valve::VR::CVRCompositor::CompositorQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::CompositorQuit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompositorQuit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRCompositor.IsFullscreen
bool Valve::VR::CVRCompositor::IsFullscreen() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::IsFullscreen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsFullscreen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRCompositor.GetCurrentSceneFocusProcess
uint Valve::VR::CVRCompositor::GetCurrentSceneFocusProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::GetCurrentSceneFocusProcess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentSceneFocusProcess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRCompositor.GetLastFrameRenderer
uint Valve::VR::CVRCompositor::GetLastFrameRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::GetLastFrameRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLastFrameRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRCompositor.CanRenderScene
bool Valve::VR::CVRCompositor::CanRenderScene() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::CanRenderScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanRenderScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRCompositor.ShowMirrorWindow
void Valve::VR::CVRCompositor::ShowMirrorWindow() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::ShowMirrorWindow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowMirrorWindow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRCompositor.HideMirrorWindow
void Valve::VR::CVRCompositor::HideMirrorWindow() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::HideMirrorWindow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HideMirrorWindow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRCompositor.IsMirrorWindowVisible
bool Valve::VR::CVRCompositor::IsMirrorWindowVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::IsMirrorWindowVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMirrorWindowVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRCompositor.CompositorDumpImages
void Valve::VR::CVRCompositor::CompositorDumpImages() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::CompositorDumpImages");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompositorDumpImages", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRCompositor.ShouldAppRenderWithLowResources
bool Valve::VR::CVRCompositor::ShouldAppRenderWithLowResources() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::ShouldAppRenderWithLowResources");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldAppRenderWithLowResources", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRCompositor.ForceInterleavedReprojectionOn
void Valve::VR::CVRCompositor::ForceInterleavedReprojectionOn(bool bOverride) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::ForceInterleavedReprojectionOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceInterleavedReprojectionOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bOverride)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bOverride);
}
// Autogenerated method: Valve.VR.CVRCompositor.ForceReconnectProcess
void Valve::VR::CVRCompositor::ForceReconnectProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::ForceReconnectProcess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ForceReconnectProcess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRCompositor.SuspendRendering
void Valve::VR::CVRCompositor::SuspendRendering(bool bSuspend) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::SuspendRendering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SuspendRendering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bSuspend)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bSuspend);
}
// Autogenerated method: Valve.VR.CVRCompositor.GetMirrorTextureD3D11
Valve::VR::EVRCompositorError Valve::VR::CVRCompositor::GetMirrorTextureD3D11(Valve::VR::EVREye eEye, System::IntPtr pD3D11DeviceOrResource, ByRef<System::IntPtr> ppD3D11ShaderResourceView) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::GetMirrorTextureD3D11");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMirrorTextureD3D11", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eEye), ::il2cpp_utils::ExtractType(pD3D11DeviceOrResource), ::il2cpp_utils::ExtractType(ppD3D11ShaderResourceView)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRCompositorError, false>(this, ___internal__method, eEye, pD3D11DeviceOrResource, byref(ppD3D11ShaderResourceView));
}
// Autogenerated method: Valve.VR.CVRCompositor.ReleaseMirrorTextureD3D11
void Valve::VR::CVRCompositor::ReleaseMirrorTextureD3D11(System::IntPtr pD3D11ShaderResourceView) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::ReleaseMirrorTextureD3D11");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseMirrorTextureD3D11", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pD3D11ShaderResourceView)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pD3D11ShaderResourceView);
}
// Autogenerated method: Valve.VR.CVRCompositor.GetMirrorTextureGL
Valve::VR::EVRCompositorError Valve::VR::CVRCompositor::GetMirrorTextureGL(Valve::VR::EVREye eEye, ByRef<uint> pglTextureId, System::IntPtr pglSharedTextureHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::GetMirrorTextureGL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMirrorTextureGL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eEye), ::il2cpp_utils::ExtractType(pglTextureId), ::il2cpp_utils::ExtractType(pglSharedTextureHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRCompositorError, false>(this, ___internal__method, eEye, byref(pglTextureId), pglSharedTextureHandle);
}
// Autogenerated method: Valve.VR.CVRCompositor.ReleaseSharedGLTexture
bool Valve::VR::CVRCompositor::ReleaseSharedGLTexture(uint glTextureId, System::IntPtr glSharedTextureHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::ReleaseSharedGLTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseSharedGLTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glTextureId), ::il2cpp_utils::ExtractType(glSharedTextureHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, glTextureId, glSharedTextureHandle);
}
// Autogenerated method: Valve.VR.CVRCompositor.LockGLSharedTextureForAccess
void Valve::VR::CVRCompositor::LockGLSharedTextureForAccess(System::IntPtr glSharedTextureHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::LockGLSharedTextureForAccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LockGLSharedTextureForAccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glSharedTextureHandle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, glSharedTextureHandle);
}
// Autogenerated method: Valve.VR.CVRCompositor.UnlockGLSharedTextureForAccess
void Valve::VR::CVRCompositor::UnlockGLSharedTextureForAccess(System::IntPtr glSharedTextureHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::UnlockGLSharedTextureForAccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnlockGLSharedTextureForAccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(glSharedTextureHandle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, glSharedTextureHandle);
}
// Autogenerated method: Valve.VR.CVRCompositor.GetVulkanInstanceExtensionsRequired
uint Valve::VR::CVRCompositor::GetVulkanInstanceExtensionsRequired(System::Text::StringBuilder* pchValue, uint unBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::GetVulkanInstanceExtensionsRequired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVulkanInstanceExtensionsRequired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchValue), ::il2cpp_utils::ExtractType(unBufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchValue, unBufferSize);
}
// Autogenerated method: Valve.VR.CVRCompositor.GetVulkanDeviceExtensionsRequired
uint Valve::VR::CVRCompositor::GetVulkanDeviceExtensionsRequired(System::IntPtr pPhysicalDevice, System::Text::StringBuilder* pchValue, uint unBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::GetVulkanDeviceExtensionsRequired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetVulkanDeviceExtensionsRequired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pPhysicalDevice), ::il2cpp_utils::ExtractType(pchValue), ::il2cpp_utils::ExtractType(unBufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pPhysicalDevice, pchValue, unBufferSize);
}
// Autogenerated method: Valve.VR.CVRCompositor.SetExplicitTimingMode
void Valve::VR::CVRCompositor::SetExplicitTimingMode(Valve::VR::EVRCompositorTimingMode eTimingMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::SetExplicitTimingMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetExplicitTimingMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eTimingMode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eTimingMode);
}
// Autogenerated method: Valve.VR.CVRCompositor.SubmitExplicitTimingData
Valve::VR::EVRCompositorError Valve::VR::CVRCompositor::SubmitExplicitTimingData() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRCompositor::SubmitExplicitTimingData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubmitExplicitTimingData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRCompositorError, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.CVROverlay
#include "Valve/VR/CVROverlay.hpp"
// Including type: Valve.VR.CVROverlay/Valve.VR._PollNextOverlayEventPacked
#include "Valve/VR/CVROverlay__PollNextOverlayEventPacked.hpp"
// Including type: Valve.VR.CVROverlay/Valve.VR.PollNextOverlayEventUnion
#include "Valve/VR/CVROverlay_PollNextOverlayEventUnion.hpp"
// Including type: Valve.VR.EVROverlayError
#include "Valve/VR/EVROverlayError.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: Valve.VR.VROverlayFlags
#include "Valve/VR/VROverlayFlags.hpp"
// Including type: Valve.VR.EColorSpace
#include "Valve/VR/EColorSpace.hpp"
// Including type: Valve.VR.VRTextureBounds_t
#include "Valve/VR/VRTextureBounds_t.hpp"
// Including type: Valve.VR.HmdColor_t
#include "Valve/VR/HmdColor_t.hpp"
// Including type: Valve.VR.VROverlayTransformType
#include "Valve/VR/VROverlayTransformType.hpp"
// Including type: Valve.VR.ETrackingUniverseOrigin
#include "Valve/VR/ETrackingUniverseOrigin.hpp"
// Including type: Valve.VR.HmdMatrix34_t
#include "Valve/VR/HmdMatrix34_t.hpp"
// Including type: Valve.VR.HmdVector2_t
#include "Valve/VR/HmdVector2_t.hpp"
// Including type: Valve.VR.VREvent_t
#include "Valve/VR/VREvent_t.hpp"
// Including type: Valve.VR.VROverlayInputMethod
#include "Valve/VR/VROverlayInputMethod.hpp"
// Including type: Valve.VR.VROverlayIntersectionParams_t
#include "Valve/VR/VROverlayIntersectionParams_t.hpp"
// Including type: Valve.VR.VROverlayIntersectionResults_t
#include "Valve/VR/VROverlayIntersectionResults_t.hpp"
// Including type: Valve.VR.EOverlayDirection
#include "Valve/VR/EOverlayDirection.hpp"
// Including type: Valve.VR.EDualAnalogWhich
#include "Valve/VR/EDualAnalogWhich.hpp"
// Including type: Valve.VR.Texture_t
#include "Valve/VR/Texture_t.hpp"
// Including type: Valve.VR.ETextureType
#include "Valve/VR/ETextureType.hpp"
// Including type: Valve.VR.HmdRect2_t
#include "Valve/VR/HmdRect2_t.hpp"
// Including type: Valve.VR.VROverlayIntersectionMaskPrimitive_t
#include "Valve/VR/VROverlayIntersectionMaskPrimitive_t.hpp"
// Including type: Valve.VR.VRMessageOverlayResponse
#include "Valve/VR/VRMessageOverlayResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Valve.VR.IVROverlay FnTable
Valve::VR::IVROverlay& Valve::VR::CVROverlay::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<Valve::VR::IVROverlay*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Valve.VR.CVROverlay.FindOverlay
Valve::VR::EVROverlayError Valve::VR::CVROverlay::FindOverlay(::StringW pchOverlayKey, ByRef<uint64_t> pOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::FindOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchOverlayKey), ::il2cpp_utils::ExtractType(pOverlayHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, pchOverlayKey, byref(pOverlayHandle));
}
// Autogenerated method: Valve.VR.CVROverlay.CreateOverlay
Valve::VR::EVROverlayError Valve::VR::CVROverlay::CreateOverlay(::StringW pchOverlayKey, ::StringW pchOverlayName, ByRef<uint64_t> pOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::CreateOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchOverlayKey), ::il2cpp_utils::ExtractType(pchOverlayName), ::il2cpp_utils::ExtractType(pOverlayHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, pchOverlayKey, pchOverlayName, byref(pOverlayHandle));
}
// Autogenerated method: Valve.VR.CVROverlay.DestroyOverlay
Valve::VR::EVROverlayError Valve::VR::CVROverlay::DestroyOverlay(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::DestroyOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: Valve.VR.CVROverlay.SetHighQualityOverlay
Valve::VR::EVROverlayError Valve::VR::CVROverlay::SetHighQualityOverlay(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::SetHighQualityOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHighQualityOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: Valve.VR.CVROverlay.GetHighQualityOverlay
uint64_t Valve::VR::CVROverlay::GetHighQualityOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::GetHighQualityOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHighQualityOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVROverlay.GetOverlayKey
uint Valve::VR::CVROverlay::GetOverlayKey(uint64_t ulOverlayHandle, System::Text::StringBuilder* pchValue, uint unBufferSize, ByRef<Valve::VR::EVROverlayError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::GetOverlayKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pchValue), ::il2cpp_utils::ExtractType(unBufferSize), ::il2cpp_utils::ExtractType(pError)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, ulOverlayHandle, pchValue, unBufferSize, byref(pError));
}
// Autogenerated method: Valve.VR.CVROverlay.GetOverlayName
uint Valve::VR::CVROverlay::GetOverlayName(uint64_t ulOverlayHandle, System::Text::StringBuilder* pchValue, uint unBufferSize, ByRef<Valve::VR::EVROverlayError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::GetOverlayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pchValue), ::il2cpp_utils::ExtractType(unBufferSize), ::il2cpp_utils::ExtractType(pError)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, ulOverlayHandle, pchValue, unBufferSize, byref(pError));
}
// Autogenerated method: Valve.VR.CVROverlay.SetOverlayName
Valve::VR::EVROverlayError Valve::VR::CVROverlay::SetOverlayName(uint64_t ulOverlayHandle, ::StringW pchName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::SetOverlayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pchName)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, pchName);
}
// Autogenerated method: Valve.VR.CVROverlay.GetOverlayImageData
Valve::VR::EVROverlayError Valve::VR::CVROverlay::GetOverlayImageData(uint64_t ulOverlayHandle, System::IntPtr pvBuffer, uint unBufferSize, ByRef<uint> punWidth, ByRef<uint> punHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::GetOverlayImageData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayImageData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pvBuffer), ::il2cpp_utils::ExtractType(unBufferSize), ::il2cpp_utils::ExtractType(punWidth), ::il2cpp_utils::ExtractType(punHeight)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, pvBuffer, unBufferSize, byref(punWidth), byref(punHeight));
}
// Autogenerated method: Valve.VR.CVROverlay.GetOverlayErrorNameFromEnum
::StringW Valve::VR::CVROverlay::GetOverlayErrorNameFromEnum(Valve::VR::EVROverlayError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::GetOverlayErrorNameFromEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayErrorNameFromEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, error);
}
// Autogenerated method: Valve.VR.CVROverlay.SetOverlayRenderingPid
Valve::VR::EVROverlayError Valve::VR::CVROverlay::SetOverlayRenderingPid(uint64_t ulOverlayHandle, uint unPID) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::SetOverlayRenderingPid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayRenderingPid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(unPID)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, unPID);
}
// Autogenerated method: Valve.VR.CVROverlay.GetOverlayRenderingPid
uint Valve::VR::CVROverlay::GetOverlayRenderingPid(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::GetOverlayRenderingPid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayRenderingPid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: Valve.VR.CVROverlay.SetOverlayFlag
Valve::VR::EVROverlayError Valve::VR::CVROverlay::SetOverlayFlag(uint64_t ulOverlayHandle, Valve::VR::VROverlayFlags eOverlayFlag, bool bEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::SetOverlayFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(eOverlayFlag), ::il2cpp_utils::ExtractType(bEnabled)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, eOverlayFlag, bEnabled);
}
// Autogenerated method: Valve.VR.CVROverlay.GetOverlayFlag
Valve::VR::EVROverlayError Valve::VR::CVROverlay::GetOverlayFlag(uint64_t ulOverlayHandle, Valve::VR::VROverlayFlags eOverlayFlag, ByRef<bool> pbEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::GetOverlayFlag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayFlag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(eOverlayFlag), ::il2cpp_utils::ExtractType(pbEnabled)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, eOverlayFlag, byref(pbEnabled));
}
// Autogenerated method: Valve.VR.CVROverlay.SetOverlayColor
Valve::VR::EVROverlayError Valve::VR::CVROverlay::SetOverlayColor(uint64_t ulOverlayHandle, float fRed, float fGreen, float fBlue) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::SetOverlayColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(fRed), ::il2cpp_utils::ExtractType(fGreen), ::il2cpp_utils::ExtractType(fBlue)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, fRed, fGreen, fBlue);
}
// Autogenerated method: Valve.VR.CVROverlay.GetOverlayColor
Valve::VR::EVROverlayError Valve::VR::CVROverlay::GetOverlayColor(uint64_t ulOverlayHandle, ByRef<float> pfRed, ByRef<float> pfGreen, ByRef<float> pfBlue) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::GetOverlayColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pfRed), ::il2cpp_utils::ExtractType(pfGreen), ::il2cpp_utils::ExtractType(pfBlue)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pfRed), byref(pfGreen), byref(pfBlue));
}
// Autogenerated method: Valve.VR.CVROverlay.SetOverlayAlpha
Valve::VR::EVROverlayError Valve::VR::CVROverlay::SetOverlayAlpha(uint64_t ulOverlayHandle, float fAlpha) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::SetOverlayAlpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(fAlpha)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, fAlpha);
}
// Autogenerated method: Valve.VR.CVROverlay.GetOverlayAlpha
Valve::VR::EVROverlayError Valve::VR::CVROverlay::GetOverlayAlpha(uint64_t ulOverlayHandle, ByRef<float> pfAlpha) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::GetOverlayAlpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pfAlpha)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pfAlpha));
}
// Autogenerated method: Valve.VR.CVROverlay.SetOverlayTexelAspect
Valve::VR::EVROverlayError Valve::VR::CVROverlay::SetOverlayTexelAspect(uint64_t ulOverlayHandle, float fTexelAspect) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::SetOverlayTexelAspect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayTexelAspect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(fTexelAspect)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, fTexelAspect);
}
// Autogenerated method: Valve.VR.CVROverlay.GetOverlayTexelAspect
Valve::VR::EVROverlayError Valve::VR::CVROverlay::GetOverlayTexelAspect(uint64_t ulOverlayHandle, ByRef<float> pfTexelAspect) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::GetOverlayTexelAspect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayTexelAspect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pfTexelAspect)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pfTexelAspect));
}
// Autogenerated method: Valve.VR.CVROverlay.SetOverlaySortOrder
Valve::VR::EVROverlayError Valve::VR::CVROverlay::SetOverlaySortOrder(uint64_t ulOverlayHandle, uint unSortOrder) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::SetOverlaySortOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlaySortOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(unSortOrder)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, unSortOrder);
}
// Autogenerated method: Valve.VR.CVROverlay.GetOverlaySortOrder
Valve::VR::EVROverlayError Valve::VR::CVROverlay::GetOverlaySortOrder(uint64_t ulOverlayHandle, ByRef<uint> punSortOrder) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::GetOverlaySortOrder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlaySortOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(punSortOrder)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(punSortOrder));
}
// Autogenerated method: Valve.VR.CVROverlay.SetOverlayWidthInMeters
Valve::VR::EVROverlayError Valve::VR::CVROverlay::SetOverlayWidthInMeters(uint64_t ulOverlayHandle, float fWidthInMeters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::SetOverlayWidthInMeters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayWidthInMeters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(fWidthInMeters)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, fWidthInMeters);
}
// Autogenerated method: Valve.VR.CVROverlay.GetOverlayWidthInMeters
Valve::VR::EVROverlayError Valve::VR::CVROverlay::GetOverlayWidthInMeters(uint64_t ulOverlayHandle, ByRef<float> pfWidthInMeters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::GetOverlayWidthInMeters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayWidthInMeters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pfWidthInMeters)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pfWidthInMeters));
}
// Autogenerated method: Valve.VR.CVROverlay.SetOverlayAutoCurveDistanceRangeInMeters
Valve::VR::EVROverlayError Valve::VR::CVROverlay::SetOverlayAutoCurveDistanceRangeInMeters(uint64_t ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::SetOverlayAutoCurveDistanceRangeInMeters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayAutoCurveDistanceRangeInMeters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(fMinDistanceInMeters), ::il2cpp_utils::ExtractType(fMaxDistanceInMeters)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, fMinDistanceInMeters, fMaxDistanceInMeters);
}
// Autogenerated method: Valve.VR.CVROverlay.GetOverlayAutoCurveDistanceRangeInMeters
Valve::VR::EVROverlayError Valve::VR::CVROverlay::GetOverlayAutoCurveDistanceRangeInMeters(uint64_t ulOverlayHandle, ByRef<float> pfMinDistanceInMeters, ByRef<float> pfMaxDistanceInMeters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::GetOverlayAutoCurveDistanceRangeInMeters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayAutoCurveDistanceRangeInMeters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pfMinDistanceInMeters), ::il2cpp_utils::ExtractType(pfMaxDistanceInMeters)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pfMinDistanceInMeters), byref(pfMaxDistanceInMeters));
}
// Autogenerated method: Valve.VR.CVROverlay.SetOverlayTextureColorSpace
Valve::VR::EVROverlayError Valve::VR::CVROverlay::SetOverlayTextureColorSpace(uint64_t ulOverlayHandle, Valve::VR::EColorSpace eTextureColorSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::SetOverlayTextureColorSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayTextureColorSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(eTextureColorSpace)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, eTextureColorSpace);
}
// Autogenerated method: Valve.VR.CVROverlay.GetOverlayTextureColorSpace
Valve::VR::EVROverlayError Valve::VR::CVROverlay::GetOverlayTextureColorSpace(uint64_t ulOverlayHandle, ByRef<Valve::VR::EColorSpace> peTextureColorSpace) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::GetOverlayTextureColorSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayTextureColorSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(peTextureColorSpace)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(peTextureColorSpace));
}
// Autogenerated method: Valve.VR.CVROverlay.SetOverlayTextureBounds
Valve::VR::EVROverlayError Valve::VR::CVROverlay::SetOverlayTextureBounds(uint64_t ulOverlayHandle, ByRef<Valve::VR::VRTextureBounds_t> pOverlayTextureBounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::SetOverlayTextureBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayTextureBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pOverlayTextureBounds)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pOverlayTextureBounds));
}
// Autogenerated method: Valve.VR.CVROverlay.GetOverlayTextureBounds
Valve::VR::EVROverlayError Valve::VR::CVROverlay::GetOverlayTextureBounds(uint64_t ulOverlayHandle, ByRef<Valve::VR::VRTextureBounds_t> pOverlayTextureBounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::GetOverlayTextureBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayTextureBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pOverlayTextureBounds)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pOverlayTextureBounds));
}
// Autogenerated method: Valve.VR.CVROverlay.GetOverlayRenderModel
uint Valve::VR::CVROverlay::GetOverlayRenderModel(uint64_t ulOverlayHandle, System::Text::StringBuilder* pchValue, uint unBufferSize, ByRef<Valve::VR::HmdColor_t> pColor, ByRef<Valve::VR::EVROverlayError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::GetOverlayRenderModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayRenderModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pchValue), ::il2cpp_utils::ExtractType(unBufferSize), ::il2cpp_utils::ExtractType(pColor), ::il2cpp_utils::ExtractType(pError)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, ulOverlayHandle, pchValue, unBufferSize, byref(pColor), byref(pError));
}
// Autogenerated method: Valve.VR.CVROverlay.SetOverlayRenderModel
Valve::VR::EVROverlayError Valve::VR::CVROverlay::SetOverlayRenderModel(uint64_t ulOverlayHandle, ::StringW pchRenderModel, ByRef<Valve::VR::HmdColor_t> pColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::SetOverlayRenderModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayRenderModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pchRenderModel), ::il2cpp_utils::ExtractType(pColor)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, pchRenderModel, byref(pColor));
}
// Autogenerated method: Valve.VR.CVROverlay.GetOverlayTransformType
Valve::VR::EVROverlayError Valve::VR::CVROverlay::GetOverlayTransformType(uint64_t ulOverlayHandle, ByRef<Valve::VR::VROverlayTransformType> peTransformType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::GetOverlayTransformType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayTransformType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(peTransformType)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(peTransformType));
}
// Autogenerated method: Valve.VR.CVROverlay.SetOverlayTransformAbsolute
Valve::VR::EVROverlayError Valve::VR::CVROverlay::SetOverlayTransformAbsolute(uint64_t ulOverlayHandle, Valve::VR::ETrackingUniverseOrigin eTrackingOrigin, ByRef<Valve::VR::HmdMatrix34_t> pmatTrackingOriginToOverlayTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::SetOverlayTransformAbsolute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayTransformAbsolute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(eTrackingOrigin), ::il2cpp_utils::ExtractType(pmatTrackingOriginToOverlayTransform)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, eTrackingOrigin, byref(pmatTrackingOriginToOverlayTransform));
}
// Autogenerated method: Valve.VR.CVROverlay.GetOverlayTransformAbsolute
Valve::VR::EVROverlayError Valve::VR::CVROverlay::GetOverlayTransformAbsolute(uint64_t ulOverlayHandle, ByRef<Valve::VR::ETrackingUniverseOrigin> peTrackingOrigin, ByRef<Valve::VR::HmdMatrix34_t> pmatTrackingOriginToOverlayTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::GetOverlayTransformAbsolute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayTransformAbsolute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(peTrackingOrigin), ::il2cpp_utils::ExtractType(pmatTrackingOriginToOverlayTransform)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(peTrackingOrigin), byref(pmatTrackingOriginToOverlayTransform));
}
// Autogenerated method: Valve.VR.CVROverlay.SetOverlayTransformTrackedDeviceRelative
Valve::VR::EVROverlayError Valve::VR::CVROverlay::SetOverlayTransformTrackedDeviceRelative(uint64_t ulOverlayHandle, uint unTrackedDevice, ByRef<Valve::VR::HmdMatrix34_t> pmatTrackedDeviceToOverlayTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::SetOverlayTransformTrackedDeviceRelative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayTransformTrackedDeviceRelative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(unTrackedDevice), ::il2cpp_utils::ExtractType(pmatTrackedDeviceToOverlayTransform)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, unTrackedDevice, byref(pmatTrackedDeviceToOverlayTransform));
}
// Autogenerated method: Valve.VR.CVROverlay.GetOverlayTransformTrackedDeviceRelative
Valve::VR::EVROverlayError Valve::VR::CVROverlay::GetOverlayTransformTrackedDeviceRelative(uint64_t ulOverlayHandle, ByRef<uint> punTrackedDevice, ByRef<Valve::VR::HmdMatrix34_t> pmatTrackedDeviceToOverlayTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::GetOverlayTransformTrackedDeviceRelative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayTransformTrackedDeviceRelative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(punTrackedDevice), ::il2cpp_utils::ExtractType(pmatTrackedDeviceToOverlayTransform)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(punTrackedDevice), byref(pmatTrackedDeviceToOverlayTransform));
}
// Autogenerated method: Valve.VR.CVROverlay.SetOverlayTransformTrackedDeviceComponent
Valve::VR::EVROverlayError Valve::VR::CVROverlay::SetOverlayTransformTrackedDeviceComponent(uint64_t ulOverlayHandle, uint unDeviceIndex, ::StringW pchComponentName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::SetOverlayTransformTrackedDeviceComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayTransformTrackedDeviceComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(unDeviceIndex), ::il2cpp_utils::ExtractType(pchComponentName)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, unDeviceIndex, pchComponentName);
}
// Autogenerated method: Valve.VR.CVROverlay.GetOverlayTransformTrackedDeviceComponent
Valve::VR::EVROverlayError Valve::VR::CVROverlay::GetOverlayTransformTrackedDeviceComponent(uint64_t ulOverlayHandle, ByRef<uint> punDeviceIndex, System::Text::StringBuilder* pchComponentName, uint unComponentNameSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::GetOverlayTransformTrackedDeviceComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayTransformTrackedDeviceComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(punDeviceIndex), ::il2cpp_utils::ExtractType(pchComponentName), ::il2cpp_utils::ExtractType(unComponentNameSize)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(punDeviceIndex), pchComponentName, unComponentNameSize);
}
// Autogenerated method: Valve.VR.CVROverlay.GetOverlayTransformOverlayRelative
Valve::VR::EVROverlayError Valve::VR::CVROverlay::GetOverlayTransformOverlayRelative(uint64_t ulOverlayHandle, ByRef<uint64_t> ulOverlayHandleParent, ByRef<Valve::VR::HmdMatrix34_t> pmatParentOverlayToOverlayTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::GetOverlayTransformOverlayRelative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayTransformOverlayRelative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(ulOverlayHandleParent), ::il2cpp_utils::ExtractType(pmatParentOverlayToOverlayTransform)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(ulOverlayHandleParent), byref(pmatParentOverlayToOverlayTransform));
}
// Autogenerated method: Valve.VR.CVROverlay.SetOverlayTransformOverlayRelative
Valve::VR::EVROverlayError Valve::VR::CVROverlay::SetOverlayTransformOverlayRelative(uint64_t ulOverlayHandle, uint64_t ulOverlayHandleParent, ByRef<Valve::VR::HmdMatrix34_t> pmatParentOverlayToOverlayTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::SetOverlayTransformOverlayRelative");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayTransformOverlayRelative", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(ulOverlayHandleParent), ::il2cpp_utils::ExtractType(pmatParentOverlayToOverlayTransform)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, ulOverlayHandleParent, byref(pmatParentOverlayToOverlayTransform));
}
// Autogenerated method: Valve.VR.CVROverlay.ShowOverlay
Valve::VR::EVROverlayError Valve::VR::CVROverlay::ShowOverlay(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::ShowOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: Valve.VR.CVROverlay.HideOverlay
Valve::VR::EVROverlayError Valve::VR::CVROverlay::HideOverlay(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::HideOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HideOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: Valve.VR.CVROverlay.IsOverlayVisible
bool Valve::VR::CVROverlay::IsOverlayVisible(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::IsOverlayVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsOverlayVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: Valve.VR.CVROverlay.GetTransformForOverlayCoordinates
Valve::VR::EVROverlayError Valve::VR::CVROverlay::GetTransformForOverlayCoordinates(uint64_t ulOverlayHandle, Valve::VR::ETrackingUniverseOrigin eTrackingOrigin, Valve::VR::HmdVector2_t coordinatesInOverlay, ByRef<Valve::VR::HmdMatrix34_t> pmatTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::GetTransformForOverlayCoordinates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTransformForOverlayCoordinates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(eTrackingOrigin), ::il2cpp_utils::ExtractType(coordinatesInOverlay), ::il2cpp_utils::ExtractType(pmatTransform)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, eTrackingOrigin, coordinatesInOverlay, byref(pmatTransform));
}
// Autogenerated method: Valve.VR.CVROverlay.PollNextOverlayEvent
bool Valve::VR::CVROverlay::PollNextOverlayEvent(uint64_t ulOverlayHandle, ByRef<Valve::VR::VREvent_t> pEvent, uint uncbVREvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::PollNextOverlayEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollNextOverlayEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pEvent), ::il2cpp_utils::ExtractType(uncbVREvent)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ulOverlayHandle, byref(pEvent), uncbVREvent);
}
// Autogenerated method: Valve.VR.CVROverlay.GetOverlayInputMethod
Valve::VR::EVROverlayError Valve::VR::CVROverlay::GetOverlayInputMethod(uint64_t ulOverlayHandle, ByRef<Valve::VR::VROverlayInputMethod> peInputMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::GetOverlayInputMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayInputMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(peInputMethod)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(peInputMethod));
}
// Autogenerated method: Valve.VR.CVROverlay.SetOverlayInputMethod
Valve::VR::EVROverlayError Valve::VR::CVROverlay::SetOverlayInputMethod(uint64_t ulOverlayHandle, Valve::VR::VROverlayInputMethod eInputMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::SetOverlayInputMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayInputMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(eInputMethod)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, eInputMethod);
}
// Autogenerated method: Valve.VR.CVROverlay.GetOverlayMouseScale
Valve::VR::EVROverlayError Valve::VR::CVROverlay::GetOverlayMouseScale(uint64_t ulOverlayHandle, ByRef<Valve::VR::HmdVector2_t> pvecMouseScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::GetOverlayMouseScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayMouseScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pvecMouseScale)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pvecMouseScale));
}
// Autogenerated method: Valve.VR.CVROverlay.SetOverlayMouseScale
Valve::VR::EVROverlayError Valve::VR::CVROverlay::SetOverlayMouseScale(uint64_t ulOverlayHandle, ByRef<Valve::VR::HmdVector2_t> pvecMouseScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::SetOverlayMouseScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayMouseScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pvecMouseScale)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pvecMouseScale));
}
// Autogenerated method: Valve.VR.CVROverlay.ComputeOverlayIntersection
bool Valve::VR::CVROverlay::ComputeOverlayIntersection(uint64_t ulOverlayHandle, ByRef<Valve::VR::VROverlayIntersectionParams_t> pParams, ByRef<Valve::VR::VROverlayIntersectionResults_t> pResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::ComputeOverlayIntersection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeOverlayIntersection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pParams), ::il2cpp_utils::ExtractType(pResults)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ulOverlayHandle, byref(pParams), byref(pResults));
}
// Autogenerated method: Valve.VR.CVROverlay.IsHoverTargetOverlay
bool Valve::VR::CVROverlay::IsHoverTargetOverlay(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::IsHoverTargetOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsHoverTargetOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: Valve.VR.CVROverlay.GetGamepadFocusOverlay
uint64_t Valve::VR::CVROverlay::GetGamepadFocusOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::GetGamepadFocusOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGamepadFocusOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVROverlay.SetGamepadFocusOverlay
Valve::VR::EVROverlayError Valve::VR::CVROverlay::SetGamepadFocusOverlay(uint64_t ulNewFocusOverlay) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::SetGamepadFocusOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGamepadFocusOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulNewFocusOverlay)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulNewFocusOverlay);
}
// Autogenerated method: Valve.VR.CVROverlay.SetOverlayNeighbor
Valve::VR::EVROverlayError Valve::VR::CVROverlay::SetOverlayNeighbor(Valve::VR::EOverlayDirection eDirection, uint64_t ulFrom, uint64_t ulTo) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::SetOverlayNeighbor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayNeighbor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eDirection), ::il2cpp_utils::ExtractType(ulFrom), ::il2cpp_utils::ExtractType(ulTo)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, eDirection, ulFrom, ulTo);
}
// Autogenerated method: Valve.VR.CVROverlay.MoveGamepadFocusToNeighbor
Valve::VR::EVROverlayError Valve::VR::CVROverlay::MoveGamepadFocusToNeighbor(Valve::VR::EOverlayDirection eDirection, uint64_t ulFrom) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::MoveGamepadFocusToNeighbor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveGamepadFocusToNeighbor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eDirection), ::il2cpp_utils::ExtractType(ulFrom)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, eDirection, ulFrom);
}
// Autogenerated method: Valve.VR.CVROverlay.SetOverlayDualAnalogTransform
Valve::VR::EVROverlayError Valve::VR::CVROverlay::SetOverlayDualAnalogTransform(uint64_t ulOverlay, Valve::VR::EDualAnalogWhich eWhich, System::IntPtr vCenter, float fRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::SetOverlayDualAnalogTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayDualAnalogTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlay), ::il2cpp_utils::ExtractType(eWhich), ::il2cpp_utils::ExtractType(vCenter), ::il2cpp_utils::ExtractType(fRadius)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlay, eWhich, vCenter, fRadius);
}
// Autogenerated method: Valve.VR.CVROverlay.GetOverlayDualAnalogTransform
Valve::VR::EVROverlayError Valve::VR::CVROverlay::GetOverlayDualAnalogTransform(uint64_t ulOverlay, Valve::VR::EDualAnalogWhich eWhich, ByRef<Valve::VR::HmdVector2_t> pvCenter, ByRef<float> pfRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::GetOverlayDualAnalogTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayDualAnalogTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlay), ::il2cpp_utils::ExtractType(eWhich), ::il2cpp_utils::ExtractType(pvCenter), ::il2cpp_utils::ExtractType(pfRadius)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlay, eWhich, byref(pvCenter), byref(pfRadius));
}
// Autogenerated method: Valve.VR.CVROverlay.SetOverlayTexture
Valve::VR::EVROverlayError Valve::VR::CVROverlay::SetOverlayTexture(uint64_t ulOverlayHandle, ByRef<Valve::VR::Texture_t> pTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::SetOverlayTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pTexture)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pTexture));
}
// Autogenerated method: Valve.VR.CVROverlay.ClearOverlayTexture
Valve::VR::EVROverlayError Valve::VR::CVROverlay::ClearOverlayTexture(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::ClearOverlayTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearOverlayTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: Valve.VR.CVROverlay.SetOverlayRaw
Valve::VR::EVROverlayError Valve::VR::CVROverlay::SetOverlayRaw(uint64_t ulOverlayHandle, System::IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::SetOverlayRaw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayRaw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pvBuffer), ::il2cpp_utils::ExtractType(unWidth), ::il2cpp_utils::ExtractType(unHeight), ::il2cpp_utils::ExtractType(unDepth)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, pvBuffer, unWidth, unHeight, unDepth);
}
// Autogenerated method: Valve.VR.CVROverlay.SetOverlayFromFile
Valve::VR::EVROverlayError Valve::VR::CVROverlay::SetOverlayFromFile(uint64_t ulOverlayHandle, ::StringW pchFilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::SetOverlayFromFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayFromFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pchFilePath)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, pchFilePath);
}
// Autogenerated method: Valve.VR.CVROverlay.GetOverlayTexture
Valve::VR::EVROverlayError Valve::VR::CVROverlay::GetOverlayTexture(uint64_t ulOverlayHandle, ByRef<System::IntPtr> pNativeTextureHandle, System::IntPtr pNativeTextureRef, ByRef<uint> pWidth, ByRef<uint> pHeight, ByRef<uint> pNativeFormat, ByRef<Valve::VR::ETextureType> pAPIType, ByRef<Valve::VR::EColorSpace> pColorSpace, ByRef<Valve::VR::VRTextureBounds_t> pTextureBounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::GetOverlayTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pNativeTextureHandle), ::il2cpp_utils::ExtractType(pNativeTextureRef), ::il2cpp_utils::ExtractType(pWidth), ::il2cpp_utils::ExtractType(pHeight), ::il2cpp_utils::ExtractType(pNativeFormat), ::il2cpp_utils::ExtractType(pAPIType), ::il2cpp_utils::ExtractType(pColorSpace), ::il2cpp_utils::ExtractType(pTextureBounds)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pNativeTextureHandle), pNativeTextureRef, byref(pWidth), byref(pHeight), byref(pNativeFormat), byref(pAPIType), byref(pColorSpace), byref(pTextureBounds));
}
// Autogenerated method: Valve.VR.CVROverlay.ReleaseNativeOverlayHandle
Valve::VR::EVROverlayError Valve::VR::CVROverlay::ReleaseNativeOverlayHandle(uint64_t ulOverlayHandle, System::IntPtr pNativeTextureHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::ReleaseNativeOverlayHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseNativeOverlayHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pNativeTextureHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, pNativeTextureHandle);
}
// Autogenerated method: Valve.VR.CVROverlay.GetOverlayTextureSize
Valve::VR::EVROverlayError Valve::VR::CVROverlay::GetOverlayTextureSize(uint64_t ulOverlayHandle, ByRef<uint> pWidth, ByRef<uint> pHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::GetOverlayTextureSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayTextureSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pWidth), ::il2cpp_utils::ExtractType(pHeight)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pWidth), byref(pHeight));
}
// Autogenerated method: Valve.VR.CVROverlay.CreateDashboardOverlay
Valve::VR::EVROverlayError Valve::VR::CVROverlay::CreateDashboardOverlay(::StringW pchOverlayKey, ::StringW pchOverlayFriendlyName, ByRef<uint64_t> pMainHandle, ByRef<uint64_t> pThumbnailHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::CreateDashboardOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDashboardOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchOverlayKey), ::il2cpp_utils::ExtractType(pchOverlayFriendlyName), ::il2cpp_utils::ExtractType(pMainHandle), ::il2cpp_utils::ExtractType(pThumbnailHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, pchOverlayKey, pchOverlayFriendlyName, byref(pMainHandle), byref(pThumbnailHandle));
}
// Autogenerated method: Valve.VR.CVROverlay.IsDashboardVisible
bool Valve::VR::CVROverlay::IsDashboardVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::IsDashboardVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDashboardVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVROverlay.IsActiveDashboardOverlay
bool Valve::VR::CVROverlay::IsActiveDashboardOverlay(uint64_t ulOverlayHandle) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::IsActiveDashboardOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsActiveDashboardOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ulOverlayHandle);
}
// Autogenerated method: Valve.VR.CVROverlay.SetDashboardOverlaySceneProcess
Valve::VR::EVROverlayError Valve::VR::CVROverlay::SetDashboardOverlaySceneProcess(uint64_t ulOverlayHandle, uint unProcessId) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::SetDashboardOverlaySceneProcess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDashboardOverlaySceneProcess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(unProcessId)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, unProcessId);
}
// Autogenerated method: Valve.VR.CVROverlay.GetDashboardOverlaySceneProcess
Valve::VR::EVROverlayError Valve::VR::CVROverlay::GetDashboardOverlaySceneProcess(uint64_t ulOverlayHandle, ByRef<uint> punProcessId) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::GetDashboardOverlaySceneProcess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDashboardOverlaySceneProcess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(punProcessId)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(punProcessId));
}
// Autogenerated method: Valve.VR.CVROverlay.ShowDashboard
void Valve::VR::CVROverlay::ShowDashboard(::StringW pchOverlayToShow) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::ShowDashboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowDashboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchOverlayToShow)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchOverlayToShow);
}
// Autogenerated method: Valve.VR.CVROverlay.GetPrimaryDashboardDevice
uint Valve::VR::CVROverlay::GetPrimaryDashboardDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::GetPrimaryDashboardDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPrimaryDashboardDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVROverlay.ShowKeyboard
Valve::VR::EVROverlayError Valve::VR::CVROverlay::ShowKeyboard(int eInputMode, int eLineInputMode, ::StringW pchDescription, uint unCharMax, ::StringW pchExistingText, bool bUseMinimalMode, uint64_t uUserValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::ShowKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eInputMode), ::il2cpp_utils::ExtractType(eLineInputMode), ::il2cpp_utils::ExtractType(pchDescription), ::il2cpp_utils::ExtractType(unCharMax), ::il2cpp_utils::ExtractType(pchExistingText), ::il2cpp_utils::ExtractType(bUseMinimalMode), ::il2cpp_utils::ExtractType(uUserValue)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, eInputMode, eLineInputMode, pchDescription, unCharMax, pchExistingText, bUseMinimalMode, uUserValue);
}
// Autogenerated method: Valve.VR.CVROverlay.ShowKeyboardForOverlay
Valve::VR::EVROverlayError Valve::VR::CVROverlay::ShowKeyboardForOverlay(uint64_t ulOverlayHandle, int eInputMode, int eLineInputMode, ::StringW pchDescription, uint unCharMax, ::StringW pchExistingText, bool bUseMinimalMode, uint64_t uUserValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::ShowKeyboardForOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowKeyboardForOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(eInputMode), ::il2cpp_utils::ExtractType(eLineInputMode), ::il2cpp_utils::ExtractType(pchDescription), ::il2cpp_utils::ExtractType(unCharMax), ::il2cpp_utils::ExtractType(pchExistingText), ::il2cpp_utils::ExtractType(bUseMinimalMode), ::il2cpp_utils::ExtractType(uUserValue)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, eInputMode, eLineInputMode, pchDescription, unCharMax, pchExistingText, bUseMinimalMode, uUserValue);
}
// Autogenerated method: Valve.VR.CVROverlay.GetKeyboardText
uint Valve::VR::CVROverlay::GetKeyboardText(System::Text::StringBuilder* pchText, uint cchText) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::GetKeyboardText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetKeyboardText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchText), ::il2cpp_utils::ExtractType(cchText)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchText, cchText);
}
// Autogenerated method: Valve.VR.CVROverlay.HideKeyboard
void Valve::VR::CVROverlay::HideKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::HideKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HideKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVROverlay.SetKeyboardTransformAbsolute
void Valve::VR::CVROverlay::SetKeyboardTransformAbsolute(Valve::VR::ETrackingUniverseOrigin eTrackingOrigin, ByRef<Valve::VR::HmdMatrix34_t> pmatTrackingOriginToKeyboardTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::SetKeyboardTransformAbsolute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKeyboardTransformAbsolute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eTrackingOrigin), ::il2cpp_utils::ExtractType(pmatTrackingOriginToKeyboardTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eTrackingOrigin, byref(pmatTrackingOriginToKeyboardTransform));
}
// Autogenerated method: Valve.VR.CVROverlay.SetKeyboardPositionForOverlay
void Valve::VR::CVROverlay::SetKeyboardPositionForOverlay(uint64_t ulOverlayHandle, Valve::VR::HmdRect2_t avoidRect) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::SetKeyboardPositionForOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKeyboardPositionForOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(avoidRect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ulOverlayHandle, avoidRect);
}
// Autogenerated method: Valve.VR.CVROverlay.SetOverlayIntersectionMask
Valve::VR::EVROverlayError Valve::VR::CVROverlay::SetOverlayIntersectionMask(uint64_t ulOverlayHandle, ByRef<Valve::VR::VROverlayIntersectionMaskPrimitive_t> pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::SetOverlayIntersectionMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOverlayIntersectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pMaskPrimitives), ::il2cpp_utils::ExtractType(unNumMaskPrimitives), ::il2cpp_utils::ExtractType(unPrimitiveSize)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pMaskPrimitives), unNumMaskPrimitives, unPrimitiveSize);
}
// Autogenerated method: Valve.VR.CVROverlay.GetOverlayFlags
Valve::VR::EVROverlayError Valve::VR::CVROverlay::GetOverlayFlags(uint64_t ulOverlayHandle, ByRef<uint> pFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::GetOverlayFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOverlayFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pFlags)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVROverlayError, false>(this, ___internal__method, ulOverlayHandle, byref(pFlags));
}
// Autogenerated method: Valve.VR.CVROverlay.ShowMessageOverlay
Valve::VR::VRMessageOverlayResponse Valve::VR::CVROverlay::ShowMessageOverlay(::StringW pchText, ::StringW pchCaption, ::StringW pchButton0Text, ::StringW pchButton1Text, ::StringW pchButton2Text, ::StringW pchButton3Text) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::ShowMessageOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowMessageOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchText), ::il2cpp_utils::ExtractType(pchCaption), ::il2cpp_utils::ExtractType(pchButton0Text), ::il2cpp_utils::ExtractType(pchButton1Text), ::il2cpp_utils::ExtractType(pchButton2Text), ::il2cpp_utils::ExtractType(pchButton3Text)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::VRMessageOverlayResponse, false>(this, ___internal__method, pchText, pchCaption, pchButton0Text, pchButton1Text, pchButton2Text, pchButton3Text);
}
// Autogenerated method: Valve.VR.CVROverlay.CloseMessageOverlay
void Valve::VR::CVROverlay::CloseMessageOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::CloseMessageOverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseMessageOverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.CVROverlay/Valve.VR._PollNextOverlayEventPacked
#include "Valve/VR/CVROverlay__PollNextOverlayEventPacked.hpp"
// Including type: Valve.VR.VREvent_t_Packed
#include "Valve/VR/VREvent_t_Packed.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.CVROverlay/Valve.VR._PollNextOverlayEventPacked.Invoke
bool Valve::VR::CVROverlay::_PollNextOverlayEventPacked::Invoke(uint64_t ulOverlayHandle, ByRef<Valve::VR::VREvent_t_Packed> pEvent, uint uncbVREvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::_PollNextOverlayEventPacked::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pEvent), ::il2cpp_utils::ExtractType(uncbVREvent)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ulOverlayHandle, byref(pEvent), uncbVREvent);
}
// Autogenerated method: Valve.VR.CVROverlay/Valve.VR._PollNextOverlayEventPacked.BeginInvoke
System::IAsyncResult* Valve::VR::CVROverlay::_PollNextOverlayEventPacked::BeginInvoke(uint64_t ulOverlayHandle, ByRef<Valve::VR::VREvent_t_Packed> pEvent, uint uncbVREvent, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::_PollNextOverlayEventPacked::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(pEvent), ::il2cpp_utils::ExtractType(uncbVREvent), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, ulOverlayHandle, byref(pEvent), uncbVREvent, callback, object);
}
// Autogenerated method: Valve.VR.CVROverlay/Valve.VR._PollNextOverlayEventPacked.EndInvoke
bool Valve::VR::CVROverlay::_PollNextOverlayEventPacked::EndInvoke(ByRef<Valve::VR::VREvent_t_Packed> pEvent, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVROverlay::_PollNextOverlayEventPacked::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pEvent), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pEvent), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.CVRRenderModels
#include "Valve/VR/CVRRenderModels.hpp"
// Including type: Valve.VR.CVRRenderModels/Valve.VR._GetComponentStatePacked
#include "Valve/VR/CVRRenderModels__GetComponentStatePacked.hpp"
// Including type: Valve.VR.CVRRenderModels/Valve.VR.GetComponentStateUnion
#include "Valve/VR/CVRRenderModels_GetComponentStateUnion.hpp"
// Including type: Valve.VR.EVRRenderModelError
#include "Valve/VR/EVRRenderModelError.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: Valve.VR.VRControllerState_t
#include "Valve/VR/VRControllerState_t.hpp"
// Including type: Valve.VR.RenderModel_ControllerMode_State_t
#include "Valve/VR/RenderModel_ControllerMode_State_t.hpp"
// Including type: Valve.VR.RenderModel_ComponentState_t
#include "Valve/VR/RenderModel_ComponentState_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Valve.VR.IVRRenderModels FnTable
Valve::VR::IVRRenderModels& Valve::VR::CVRRenderModels::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRRenderModels::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<Valve::VR::IVRRenderModels*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Valve.VR.CVRRenderModels.LoadRenderModel_Async
Valve::VR::EVRRenderModelError Valve::VR::CVRRenderModels::LoadRenderModel_Async(::StringW pchRenderModelName, ByRef<System::IntPtr> ppRenderModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRRenderModels::LoadRenderModel_Async");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadRenderModel_Async", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(ppRenderModel)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRRenderModelError, false>(this, ___internal__method, pchRenderModelName, byref(ppRenderModel));
}
// Autogenerated method: Valve.VR.CVRRenderModels.FreeRenderModel
void Valve::VR::CVRRenderModels::FreeRenderModel(System::IntPtr pRenderModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRRenderModels::FreeRenderModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FreeRenderModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pRenderModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pRenderModel);
}
// Autogenerated method: Valve.VR.CVRRenderModels.LoadTexture_Async
Valve::VR::EVRRenderModelError Valve::VR::CVRRenderModels::LoadTexture_Async(int textureId, ByRef<System::IntPtr> ppTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRRenderModels::LoadTexture_Async");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadTexture_Async", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textureId), ::il2cpp_utils::ExtractType(ppTexture)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRRenderModelError, false>(this, ___internal__method, textureId, byref(ppTexture));
}
// Autogenerated method: Valve.VR.CVRRenderModels.FreeTexture
void Valve::VR::CVRRenderModels::FreeTexture(System::IntPtr pTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRRenderModels::FreeTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FreeTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pTexture)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pTexture);
}
// Autogenerated method: Valve.VR.CVRRenderModels.LoadTextureD3D11_Async
Valve::VR::EVRRenderModelError Valve::VR::CVRRenderModels::LoadTextureD3D11_Async(int textureId, System::IntPtr pD3D11Device, ByRef<System::IntPtr> ppD3D11Texture2D) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRRenderModels::LoadTextureD3D11_Async");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadTextureD3D11_Async", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textureId), ::il2cpp_utils::ExtractType(pD3D11Device), ::il2cpp_utils::ExtractType(ppD3D11Texture2D)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRRenderModelError, false>(this, ___internal__method, textureId, pD3D11Device, byref(ppD3D11Texture2D));
}
// Autogenerated method: Valve.VR.CVRRenderModels.LoadIntoTextureD3D11_Async
Valve::VR::EVRRenderModelError Valve::VR::CVRRenderModels::LoadIntoTextureD3D11_Async(int textureId, System::IntPtr pDstTexture) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRRenderModels::LoadIntoTextureD3D11_Async");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadIntoTextureD3D11_Async", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textureId), ::il2cpp_utils::ExtractType(pDstTexture)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRRenderModelError, false>(this, ___internal__method, textureId, pDstTexture);
}
// Autogenerated method: Valve.VR.CVRRenderModels.FreeTextureD3D11
void Valve::VR::CVRRenderModels::FreeTextureD3D11(System::IntPtr pD3D11Texture2D) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRRenderModels::FreeTextureD3D11");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FreeTextureD3D11", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pD3D11Texture2D)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pD3D11Texture2D);
}
// Autogenerated method: Valve.VR.CVRRenderModels.GetRenderModelName
uint Valve::VR::CVRRenderModels::GetRenderModelName(uint unRenderModelIndex, System::Text::StringBuilder* pchRenderModelName, uint unRenderModelNameLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRRenderModels::GetRenderModelName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRenderModelName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unRenderModelIndex), ::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(unRenderModelNameLen)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, unRenderModelIndex, pchRenderModelName, unRenderModelNameLen);
}
// Autogenerated method: Valve.VR.CVRRenderModels.GetRenderModelCount
uint Valve::VR::CVRRenderModels::GetRenderModelCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRRenderModels::GetRenderModelCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRenderModelCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRRenderModels.GetComponentCount
uint Valve::VR::CVRRenderModels::GetComponentCount(::StringW pchRenderModelName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRRenderModels::GetComponentCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchRenderModelName);
}
// Autogenerated method: Valve.VR.CVRRenderModels.GetComponentName
uint Valve::VR::CVRRenderModels::GetComponentName(::StringW pchRenderModelName, uint unComponentIndex, System::Text::StringBuilder* pchComponentName, uint unComponentNameLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRRenderModels::GetComponentName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(unComponentIndex), ::il2cpp_utils::ExtractType(pchComponentName), ::il2cpp_utils::ExtractType(unComponentNameLen)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchRenderModelName, unComponentIndex, pchComponentName, unComponentNameLen);
}
// Autogenerated method: Valve.VR.CVRRenderModels.GetComponentButtonMask
uint64_t Valve::VR::CVRRenderModels::GetComponentButtonMask(::StringW pchRenderModelName, ::StringW pchComponentName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRRenderModels::GetComponentButtonMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentButtonMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(pchComponentName)})));
  return ::il2cpp_utils::RunMethodRethrow<uint64_t, false>(this, ___internal__method, pchRenderModelName, pchComponentName);
}
// Autogenerated method: Valve.VR.CVRRenderModels.GetComponentRenderModelName
uint Valve::VR::CVRRenderModels::GetComponentRenderModelName(::StringW pchRenderModelName, ::StringW pchComponentName, System::Text::StringBuilder* pchComponentRenderModelName, uint unComponentRenderModelNameLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRRenderModels::GetComponentRenderModelName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentRenderModelName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(pchComponentName), ::il2cpp_utils::ExtractType(pchComponentRenderModelName), ::il2cpp_utils::ExtractType(unComponentRenderModelNameLen)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchRenderModelName, pchComponentName, pchComponentRenderModelName, unComponentRenderModelNameLen);
}
// Autogenerated method: Valve.VR.CVRRenderModels.GetComponentState
bool Valve::VR::CVRRenderModels::GetComponentState(::StringW pchRenderModelName, ::StringW pchComponentName, ByRef<Valve::VR::VRControllerState_t> pControllerState, ByRef<Valve::VR::RenderModel_ControllerMode_State_t> pState, ByRef<Valve::VR::RenderModel_ComponentState_t> pComponentState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRRenderModels::GetComponentState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetComponentState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(pchComponentName), ::il2cpp_utils::ExtractType(pControllerState), ::il2cpp_utils::ExtractType(pState), ::il2cpp_utils::ExtractType(pComponentState)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchRenderModelName, pchComponentName, byref(pControllerState), byref(pState), byref(pComponentState));
}
// Autogenerated method: Valve.VR.CVRRenderModels.RenderModelHasComponent
bool Valve::VR::CVRRenderModels::RenderModelHasComponent(::StringW pchRenderModelName, ::StringW pchComponentName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRRenderModels::RenderModelHasComponent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenderModelHasComponent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(pchComponentName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchRenderModelName, pchComponentName);
}
// Autogenerated method: Valve.VR.CVRRenderModels.GetRenderModelThumbnailURL
uint Valve::VR::CVRRenderModels::GetRenderModelThumbnailURL(::StringW pchRenderModelName, System::Text::StringBuilder* pchThumbnailURL, uint unThumbnailURLLen, ByRef<Valve::VR::EVRRenderModelError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRRenderModels::GetRenderModelThumbnailURL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRenderModelThumbnailURL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(pchThumbnailURL), ::il2cpp_utils::ExtractType(unThumbnailURLLen), ::il2cpp_utils::ExtractType(peError)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchRenderModelName, pchThumbnailURL, unThumbnailURLLen, byref(peError));
}
// Autogenerated method: Valve.VR.CVRRenderModels.GetRenderModelOriginalPath
uint Valve::VR::CVRRenderModels::GetRenderModelOriginalPath(::StringW pchRenderModelName, System::Text::StringBuilder* pchOriginalPath, uint unOriginalPathLen, ByRef<Valve::VR::EVRRenderModelError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRRenderModels::GetRenderModelOriginalPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRenderModelOriginalPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(pchOriginalPath), ::il2cpp_utils::ExtractType(unOriginalPathLen), ::il2cpp_utils::ExtractType(peError)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchRenderModelName, pchOriginalPath, unOriginalPathLen, byref(peError));
}
// Autogenerated method: Valve.VR.CVRRenderModels.GetRenderModelErrorNameFromEnum
::StringW Valve::VR::CVRRenderModels::GetRenderModelErrorNameFromEnum(Valve::VR::EVRRenderModelError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRRenderModels::GetRenderModelErrorNameFromEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRenderModelErrorNameFromEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, error);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Valve.VR.CVRRenderModels/Valve.VR._GetComponentStatePacked
#include "Valve/VR/CVRRenderModels__GetComponentStatePacked.hpp"
// Including type: Valve.VR.VRControllerState_t_Packed
#include "Valve/VR/VRControllerState_t_Packed.hpp"
// Including type: Valve.VR.RenderModel_ControllerMode_State_t
#include "Valve/VR/RenderModel_ControllerMode_State_t.hpp"
// Including type: Valve.VR.RenderModel_ComponentState_t
#include "Valve/VR/RenderModel_ComponentState_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.CVRRenderModels/Valve.VR._GetComponentStatePacked.Invoke
bool Valve::VR::CVRRenderModels::_GetComponentStatePacked::Invoke(::StringW pchRenderModelName, ::StringW pchComponentName, ByRef<Valve::VR::VRControllerState_t_Packed> pControllerState, ByRef<Valve::VR::RenderModel_ControllerMode_State_t> pState, ByRef<Valve::VR::RenderModel_ComponentState_t> pComponentState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRRenderModels::_GetComponentStatePacked::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(pchComponentName), ::il2cpp_utils::ExtractType(pControllerState), ::il2cpp_utils::ExtractType(pState), ::il2cpp_utils::ExtractType(pComponentState)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchRenderModelName, pchComponentName, byref(pControllerState), byref(pState), byref(pComponentState));
}
// Autogenerated method: Valve.VR.CVRRenderModels/Valve.VR._GetComponentStatePacked.BeginInvoke
System::IAsyncResult* Valve::VR::CVRRenderModels::_GetComponentStatePacked::BeginInvoke(::StringW pchRenderModelName, ::StringW pchComponentName, ByRef<Valve::VR::VRControllerState_t_Packed> pControllerState, ByRef<Valve::VR::RenderModel_ControllerMode_State_t> pState, ByRef<Valve::VR::RenderModel_ComponentState_t> pComponentState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRRenderModels::_GetComponentStatePacked::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchRenderModelName), ::il2cpp_utils::ExtractType(pchComponentName), ::il2cpp_utils::ExtractType(pControllerState), ::il2cpp_utils::ExtractType(pState), ::il2cpp_utils::ExtractType(pComponentState), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IAsyncResult*, false>(this, ___internal__method, pchRenderModelName, pchComponentName, byref(pControllerState), byref(pState), byref(pComponentState), callback, object);
}
// Autogenerated method: Valve.VR.CVRRenderModels/Valve.VR._GetComponentStatePacked.EndInvoke
bool Valve::VR::CVRRenderModels::_GetComponentStatePacked::EndInvoke(ByRef<Valve::VR::VRControllerState_t_Packed> pControllerState, ByRef<Valve::VR::RenderModel_ControllerMode_State_t> pState, ByRef<Valve::VR::RenderModel_ComponentState_t> pComponentState, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRRenderModels::_GetComponentStatePacked::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pControllerState), ::il2cpp_utils::ExtractType(pState), ::il2cpp_utils::ExtractType(pComponentState), ::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, byref(pControllerState), byref(pState), byref(pComponentState), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.CVRNotifications
#include "Valve/VR/CVRNotifications.hpp"
// Including type: Valve.VR.EVRNotificationError
#include "Valve/VR/EVRNotificationError.hpp"
// Including type: Valve.VR.EVRNotificationType
#include "Valve/VR/EVRNotificationType.hpp"
// Including type: Valve.VR.EVRNotificationStyle
#include "Valve/VR/EVRNotificationStyle.hpp"
// Including type: Valve.VR.NotificationBitmap_t
#include "Valve/VR/NotificationBitmap_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Valve.VR.IVRNotifications FnTable
Valve::VR::IVRNotifications& Valve::VR::CVRNotifications::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRNotifications::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<Valve::VR::IVRNotifications*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Valve.VR.CVRNotifications.CreateNotification
Valve::VR::EVRNotificationError Valve::VR::CVRNotifications::CreateNotification(uint64_t ulOverlayHandle, uint64_t ulUserValue, Valve::VR::EVRNotificationType type, ::StringW pchText, Valve::VR::EVRNotificationStyle style, ByRef<Valve::VR::NotificationBitmap_t> pImage, ByRef<uint> pNotificationId) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRNotifications::CreateNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ulOverlayHandle), ::il2cpp_utils::ExtractType(ulUserValue), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(pchText), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(pImage), ::il2cpp_utils::ExtractType(pNotificationId)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRNotificationError, false>(this, ___internal__method, ulOverlayHandle, ulUserValue, type, pchText, style, byref(pImage), byref(pNotificationId));
}
// Autogenerated method: Valve.VR.CVRNotifications.RemoveNotification
Valve::VR::EVRNotificationError Valve::VR::CVRNotifications::RemoveNotification(uint notificationId) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRNotifications::RemoveNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(notificationId)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRNotificationError, false>(this, ___internal__method, notificationId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.CVRSettings
#include "Valve/VR/CVRSettings.hpp"
// Including type: Valve.VR.EVRSettingsError
#include "Valve/VR/EVRSettingsError.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Valve.VR.IVRSettings FnTable
Valve::VR::IVRSettings& Valve::VR::CVRSettings::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSettings::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<Valve::VR::IVRSettings*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Valve.VR.CVRSettings.GetSettingsErrorNameFromEnum
::StringW Valve::VR::CVRSettings::GetSettingsErrorNameFromEnum(Valve::VR::EVRSettingsError eError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSettings::GetSettingsErrorNameFromEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSettingsErrorNameFromEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eError)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, eError);
}
// Autogenerated method: Valve.VR.CVRSettings.Sync
bool Valve::VR::CVRSettings::Sync(bool bForce, ByRef<Valve::VR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSettings::Sync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Sync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bForce), ::il2cpp_utils::ExtractType(peError)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bForce, byref(peError));
}
// Autogenerated method: Valve.VR.CVRSettings.SetBool
void Valve::VR::CVRSettings::SetBool(::StringW pchSection, ::StringW pchSettingsKey, bool bValue, ByRef<Valve::VR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSettings::SetBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(bValue), ::il2cpp_utils::ExtractType(peError)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchSection, pchSettingsKey, bValue, byref(peError));
}
// Autogenerated method: Valve.VR.CVRSettings.SetInt32
void Valve::VR::CVRSettings::SetInt32(::StringW pchSection, ::StringW pchSettingsKey, int nValue, ByRef<Valve::VR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSettings::SetInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(nValue), ::il2cpp_utils::ExtractType(peError)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchSection, pchSettingsKey, nValue, byref(peError));
}
// Autogenerated method: Valve.VR.CVRSettings.SetFloat
void Valve::VR::CVRSettings::SetFloat(::StringW pchSection, ::StringW pchSettingsKey, float flValue, ByRef<Valve::VR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSettings::SetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(flValue), ::il2cpp_utils::ExtractType(peError)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchSection, pchSettingsKey, flValue, byref(peError));
}
// Autogenerated method: Valve.VR.CVRSettings.SetString
void Valve::VR::CVRSettings::SetString(::StringW pchSection, ::StringW pchSettingsKey, ::StringW pchValue, ByRef<Valve::VR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSettings::SetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(pchValue), ::il2cpp_utils::ExtractType(peError)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchSection, pchSettingsKey, pchValue, byref(peError));
}
// Autogenerated method: Valve.VR.CVRSettings.GetBool
bool Valve::VR::CVRSettings::GetBool(::StringW pchSection, ::StringW pchSettingsKey, ByRef<Valve::VR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSettings::GetBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(peError)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pchSection, pchSettingsKey, byref(peError));
}
// Autogenerated method: Valve.VR.CVRSettings.GetInt32
int Valve::VR::CVRSettings::GetInt32(::StringW pchSection, ::StringW pchSettingsKey, ByRef<Valve::VR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSettings::GetInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(peError)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, pchSection, pchSettingsKey, byref(peError));
}
// Autogenerated method: Valve.VR.CVRSettings.GetFloat
float Valve::VR::CVRSettings::GetFloat(::StringW pchSection, ::StringW pchSettingsKey, ByRef<Valve::VR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSettings::GetFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(peError)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, pchSection, pchSettingsKey, byref(peError));
}
// Autogenerated method: Valve.VR.CVRSettings.GetString
void Valve::VR::CVRSettings::GetString(::StringW pchSection, ::StringW pchSettingsKey, System::Text::StringBuilder* pchValue, uint unValueLen, ByRef<Valve::VR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSettings::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(pchValue), ::il2cpp_utils::ExtractType(unValueLen), ::il2cpp_utils::ExtractType(peError)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchSection, pchSettingsKey, pchValue, unValueLen, byref(peError));
}
// Autogenerated method: Valve.VR.CVRSettings.RemoveSection
void Valve::VR::CVRSettings::RemoveSection(::StringW pchSection, ByRef<Valve::VR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSettings::RemoveSection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(peError)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchSection, byref(peError));
}
// Autogenerated method: Valve.VR.CVRSettings.RemoveKeyInSection
void Valve::VR::CVRSettings::RemoveKeyInSection(::StringW pchSection, ::StringW pchSettingsKey, ByRef<Valve::VR::EVRSettingsError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRSettings::RemoveKeyInSection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveKeyInSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchSection), ::il2cpp_utils::ExtractType(pchSettingsKey), ::il2cpp_utils::ExtractType(peError)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchSection, pchSettingsKey, byref(peError));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.CVRScreenshots
#include "Valve/VR/CVRScreenshots.hpp"
// Including type: Valve.VR.EVRScreenshotError
#include "Valve/VR/EVRScreenshotError.hpp"
// Including type: Valve.VR.EVRScreenshotPropertyFilenames
#include "Valve/VR/EVRScreenshotPropertyFilenames.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Valve.VR.IVRScreenshots FnTable
Valve::VR::IVRScreenshots& Valve::VR::CVRScreenshots::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRScreenshots::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<Valve::VR::IVRScreenshots*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Valve.VR.CVRScreenshots.RequestScreenshot
Valve::VR::EVRScreenshotError Valve::VR::CVRScreenshots::RequestScreenshot(ByRef<uint> pOutScreenshotHandle, Valve::VR::EVRScreenshotType type, ::StringW pchPreviewFilename, ::StringW pchVRFilename) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRScreenshots::RequestScreenshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestScreenshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pOutScreenshotHandle), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(pchPreviewFilename), ::il2cpp_utils::ExtractType(pchVRFilename)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRScreenshotError, false>(this, ___internal__method, byref(pOutScreenshotHandle), type, pchPreviewFilename, pchVRFilename);
}
// Autogenerated method: Valve.VR.CVRScreenshots.HookScreenshot
Valve::VR::EVRScreenshotError Valve::VR::CVRScreenshots::HookScreenshot(::ArrayW<Valve::VR::EVRScreenshotType> pSupportedTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRScreenshots::HookScreenshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HookScreenshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pSupportedTypes)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRScreenshotError, false>(this, ___internal__method, pSupportedTypes);
}
// Autogenerated method: Valve.VR.CVRScreenshots.GetScreenshotPropertyType
Valve::VR::EVRScreenshotType Valve::VR::CVRScreenshots::GetScreenshotPropertyType(uint screenshotHandle, ByRef<Valve::VR::EVRScreenshotError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRScreenshots::GetScreenshotPropertyType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScreenshotPropertyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenshotHandle), ::il2cpp_utils::ExtractType(pError)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRScreenshotType, false>(this, ___internal__method, screenshotHandle, byref(pError));
}
// Autogenerated method: Valve.VR.CVRScreenshots.GetScreenshotPropertyFilename
uint Valve::VR::CVRScreenshots::GetScreenshotPropertyFilename(uint screenshotHandle, Valve::VR::EVRScreenshotPropertyFilenames filenameType, System::Text::StringBuilder* pchFilename, uint cchFilename, ByRef<Valve::VR::EVRScreenshotError> pError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRScreenshots::GetScreenshotPropertyFilename");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScreenshotPropertyFilename", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenshotHandle), ::il2cpp_utils::ExtractType(filenameType), ::il2cpp_utils::ExtractType(pchFilename), ::il2cpp_utils::ExtractType(cchFilename), ::il2cpp_utils::ExtractType(pError)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, screenshotHandle, filenameType, pchFilename, cchFilename, byref(pError));
}
// Autogenerated method: Valve.VR.CVRScreenshots.UpdateScreenshotProgress
Valve::VR::EVRScreenshotError Valve::VR::CVRScreenshots::UpdateScreenshotProgress(uint screenshotHandle, float flProgress) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRScreenshots::UpdateScreenshotProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScreenshotProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenshotHandle), ::il2cpp_utils::ExtractType(flProgress)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRScreenshotError, false>(this, ___internal__method, screenshotHandle, flProgress);
}
// Autogenerated method: Valve.VR.CVRScreenshots.TakeStereoScreenshot
Valve::VR::EVRScreenshotError Valve::VR::CVRScreenshots::TakeStereoScreenshot(ByRef<uint> pOutScreenshotHandle, ::StringW pchPreviewFilename, ::StringW pchVRFilename) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRScreenshots::TakeStereoScreenshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TakeStereoScreenshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pOutScreenshotHandle), ::il2cpp_utils::ExtractType(pchPreviewFilename), ::il2cpp_utils::ExtractType(pchVRFilename)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRScreenshotError, false>(this, ___internal__method, byref(pOutScreenshotHandle), pchPreviewFilename, pchVRFilename);
}
// Autogenerated method: Valve.VR.CVRScreenshots.SubmitScreenshot
Valve::VR::EVRScreenshotError Valve::VR::CVRScreenshots::SubmitScreenshot(uint screenshotHandle, Valve::VR::EVRScreenshotType type, ::StringW pchSourcePreviewFilename, ::StringW pchSourceVRFilename) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRScreenshots::SubmitScreenshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubmitScreenshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(screenshotHandle), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(pchSourcePreviewFilename), ::il2cpp_utils::ExtractType(pchSourceVRFilename)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::EVRScreenshotError, false>(this, ___internal__method, screenshotHandle, type, pchSourcePreviewFilename, pchSourceVRFilename);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.CVRResources
#include "Valve/VR/CVRResources.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Valve.VR.IVRResources FnTable
Valve::VR::IVRResources& Valve::VR::CVRResources::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRResources::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<Valve::VR::IVRResources*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Valve.VR.CVRResources.LoadSharedResource
uint Valve::VR::CVRResources::LoadSharedResource(::StringW pchResourceName, ::StringW pchBuffer, uint unBufferLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRResources::LoadSharedResource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadSharedResource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchResourceName), ::il2cpp_utils::ExtractType(pchBuffer), ::il2cpp_utils::ExtractType(unBufferLen)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchResourceName, pchBuffer, unBufferLen);
}
// Autogenerated method: Valve.VR.CVRResources.GetResourceFullPath
uint Valve::VR::CVRResources::GetResourceFullPath(::StringW pchResourceName, ::StringW pchResourceTypeDirectory, System::Text::StringBuilder* pchPathBuffer, uint unBufferLen) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRResources::GetResourceFullPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResourceFullPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchResourceName), ::il2cpp_utils::ExtractType(pchResourceTypeDirectory), ::il2cpp_utils::ExtractType(pchPathBuffer), ::il2cpp_utils::ExtractType(unBufferLen)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, pchResourceName, pchResourceTypeDirectory, pchPathBuffer, unBufferLen);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.CVRDriverManager
#include "Valve/VR/CVRDriverManager.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Valve.VR.IVRDriverManager FnTable
Valve::VR::IVRDriverManager& Valve::VR::CVRDriverManager::dyn_FnTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRDriverManager::dyn_FnTable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FnTable"))->offset;
  return *reinterpret_cast<Valve::VR::IVRDriverManager*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Valve.VR.CVRDriverManager.GetDriverCount
uint Valve::VR::CVRDriverManager::GetDriverCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRDriverManager::GetDriverCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDriverCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.CVRDriverManager.GetDriverName
uint Valve::VR::CVRDriverManager::GetDriverName(uint nDriver, System::Text::StringBuilder* pchValue, uint unBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::CVRDriverManager::GetDriverName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDriverName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nDriver), ::il2cpp_utils::ExtractType(pchValue), ::il2cpp_utils::ExtractType(unBufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, nDriver, pchValue, unBufferSize);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.OpenVRInterop
#include "Valve/VR/OpenVRInterop.hpp"
// Including type: Valve.VR.EVRInitError
#include "Valve/VR/EVRInitError.hpp"
// Including type: Valve.VR.EVRApplicationType
#include "Valve/VR/EVRApplicationType.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Valve.VR.OpenVRInterop.InitInternal
uint Valve::VR::OpenVRInterop::InitInternal(ByRef<Valve::VR::EVRInitError> peError, Valve::VR::EVRApplicationType eApplicationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVRInterop::InitInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVRInterop", "InitInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(eApplicationType)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(peError), eApplicationType);
}
// Autogenerated method: Valve.VR.OpenVRInterop.ShutdownInternal
void Valve::VR::OpenVRInterop::ShutdownInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVRInterop::ShutdownInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVRInterop", "ShutdownInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVRInterop.IsHmdPresent
bool Valve::VR::OpenVRInterop::IsHmdPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVRInterop::IsHmdPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVRInterop", "IsHmdPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVRInterop.IsRuntimeInstalled
bool Valve::VR::OpenVRInterop::IsRuntimeInstalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVRInterop::IsRuntimeInstalled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVRInterop", "IsRuntimeInstalled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVRInterop.GetStringForHmdError
System::IntPtr Valve::VR::OpenVRInterop::GetStringForHmdError(Valve::VR::EVRInitError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVRInterop::GetStringForHmdError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVRInterop", "GetStringForHmdError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: Valve.VR.OpenVRInterop.GetGenericInterface
System::IntPtr Valve::VR::OpenVRInterop::GetGenericInterface(ByRef<::StringW> pchInterfaceVersion, ByRef<Valve::VR::EVRInitError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVRInterop::GetGenericInterface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVRInterop", "GetGenericInterface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchInterfaceVersion), ::il2cpp_utils::ExtractType(peError)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(pchInterfaceVersion), byref(peError));
}
// Autogenerated method: Valve.VR.OpenVRInterop.IsInterfaceVersionValid
bool Valve::VR::OpenVRInterop::IsInterfaceVersionValid(ByRef<::StringW> pchInterfaceVersion) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVRInterop::IsInterfaceVersionValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVRInterop", "IsInterfaceVersionValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchInterfaceVersion)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(pchInterfaceVersion));
}
// Autogenerated method: Valve.VR.OpenVRInterop.GetInitToken
uint Valve::VR::OpenVRInterop::GetInitToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVRInterop::GetInitToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVRInterop", "GetInitToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EVREye
#include "Valve/VR/EVREye.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREye Eye_Left
Valve::VR::EVREye Valve::VR::EVREye::_get_Eye_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREye::_get_Eye_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREye>("Valve.VR", "EVREye", "Eye_Left"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREye Eye_Left
void Valve::VR::EVREye::_set_Eye_Left(Valve::VR::EVREye value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREye::_set_Eye_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREye", "Eye_Left", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREye Eye_Right
Valve::VR::EVREye Valve::VR::EVREye::_get_Eye_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREye::_get_Eye_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREye>("Valve.VR", "EVREye", "Eye_Right"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREye Eye_Right
void Valve::VR::EVREye::_set_Eye_Right(Valve::VR::EVREye value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREye::_set_Eye_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREye", "Eye_Right", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EVREye::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREye::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.ETextureType
#include "Valve/VR/ETextureType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETextureType DirectX
Valve::VR::ETextureType Valve::VR::ETextureType::_get_DirectX() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETextureType::_get_DirectX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETextureType>("Valve.VR", "ETextureType", "DirectX"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETextureType DirectX
void Valve::VR::ETextureType::_set_DirectX(Valve::VR::ETextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETextureType::_set_DirectX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETextureType", "DirectX", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETextureType OpenGL
Valve::VR::ETextureType Valve::VR::ETextureType::_get_OpenGL() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETextureType::_get_OpenGL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETextureType>("Valve.VR", "ETextureType", "OpenGL"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETextureType OpenGL
void Valve::VR::ETextureType::_set_OpenGL(Valve::VR::ETextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETextureType::_set_OpenGL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETextureType", "OpenGL", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETextureType Vulkan
Valve::VR::ETextureType Valve::VR::ETextureType::_get_Vulkan() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETextureType::_get_Vulkan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETextureType>("Valve.VR", "ETextureType", "Vulkan"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETextureType Vulkan
void Valve::VR::ETextureType::_set_Vulkan(Valve::VR::ETextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETextureType::_set_Vulkan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETextureType", "Vulkan", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETextureType IOSurface
Valve::VR::ETextureType Valve::VR::ETextureType::_get_IOSurface() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETextureType::_get_IOSurface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETextureType>("Valve.VR", "ETextureType", "IOSurface"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETextureType IOSurface
void Valve::VR::ETextureType::_set_IOSurface(Valve::VR::ETextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETextureType::_set_IOSurface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETextureType", "IOSurface", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETextureType DirectX12
Valve::VR::ETextureType Valve::VR::ETextureType::_get_DirectX12() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETextureType::_get_DirectX12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETextureType>("Valve.VR", "ETextureType", "DirectX12"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETextureType DirectX12
void Valve::VR::ETextureType::_set_DirectX12(Valve::VR::ETextureType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETextureType::_set_DirectX12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETextureType", "DirectX12", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::ETextureType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETextureType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EColorSpace
#include "Valve/VR/EColorSpace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EColorSpace Auto
Valve::VR::EColorSpace Valve::VR::EColorSpace::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EColorSpace::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EColorSpace>("Valve.VR", "EColorSpace", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EColorSpace Auto
void Valve::VR::EColorSpace::_set_Auto(Valve::VR::EColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EColorSpace::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EColorSpace", "Auto", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EColorSpace Gamma
Valve::VR::EColorSpace Valve::VR::EColorSpace::_get_Gamma() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EColorSpace::_get_Gamma");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EColorSpace>("Valve.VR", "EColorSpace", "Gamma"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EColorSpace Gamma
void Valve::VR::EColorSpace::_set_Gamma(Valve::VR::EColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EColorSpace::_set_Gamma");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EColorSpace", "Gamma", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EColorSpace Linear
Valve::VR::EColorSpace Valve::VR::EColorSpace::_get_Linear() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EColorSpace::_get_Linear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EColorSpace>("Valve.VR", "EColorSpace", "Linear"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EColorSpace Linear
void Valve::VR::EColorSpace::_set_Linear(Valve::VR::EColorSpace value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EColorSpace::_set_Linear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EColorSpace", "Linear", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EColorSpace::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EColorSpace::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.ETrackingResult
#include "Valve/VR/ETrackingResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackingResult Uninitialized
Valve::VR::ETrackingResult Valve::VR::ETrackingResult::_get_Uninitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackingResult::_get_Uninitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackingResult>("Valve.VR", "ETrackingResult", "Uninitialized"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackingResult Uninitialized
void Valve::VR::ETrackingResult::_set_Uninitialized(Valve::VR::ETrackingResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackingResult::_set_Uninitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackingResult", "Uninitialized", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackingResult Calibrating_InProgress
Valve::VR::ETrackingResult Valve::VR::ETrackingResult::_get_Calibrating_InProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackingResult::_get_Calibrating_InProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackingResult>("Valve.VR", "ETrackingResult", "Calibrating_InProgress"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackingResult Calibrating_InProgress
void Valve::VR::ETrackingResult::_set_Calibrating_InProgress(Valve::VR::ETrackingResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackingResult::_set_Calibrating_InProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackingResult", "Calibrating_InProgress", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackingResult Calibrating_OutOfRange
Valve::VR::ETrackingResult Valve::VR::ETrackingResult::_get_Calibrating_OutOfRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackingResult::_get_Calibrating_OutOfRange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackingResult>("Valve.VR", "ETrackingResult", "Calibrating_OutOfRange"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackingResult Calibrating_OutOfRange
void Valve::VR::ETrackingResult::_set_Calibrating_OutOfRange(Valve::VR::ETrackingResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackingResult::_set_Calibrating_OutOfRange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackingResult", "Calibrating_OutOfRange", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackingResult Running_OK
Valve::VR::ETrackingResult Valve::VR::ETrackingResult::_get_Running_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackingResult::_get_Running_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackingResult>("Valve.VR", "ETrackingResult", "Running_OK"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackingResult Running_OK
void Valve::VR::ETrackingResult::_set_Running_OK(Valve::VR::ETrackingResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackingResult::_set_Running_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackingResult", "Running_OK", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackingResult Running_OutOfRange
Valve::VR::ETrackingResult Valve::VR::ETrackingResult::_get_Running_OutOfRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackingResult::_get_Running_OutOfRange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackingResult>("Valve.VR", "ETrackingResult", "Running_OutOfRange"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackingResult Running_OutOfRange
void Valve::VR::ETrackingResult::_set_Running_OutOfRange(Valve::VR::ETrackingResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackingResult::_set_Running_OutOfRange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackingResult", "Running_OutOfRange", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::ETrackingResult::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackingResult::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.ETrackedDeviceClass
#include "Valve/VR/ETrackedDeviceClass.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceClass Invalid
Valve::VR::ETrackedDeviceClass Valve::VR::ETrackedDeviceClass::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceClass::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceClass>("Valve.VR", "ETrackedDeviceClass", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceClass Invalid
void Valve::VR::ETrackedDeviceClass::_set_Invalid(Valve::VR::ETrackedDeviceClass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceClass::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceClass", "Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceClass HMD
Valve::VR::ETrackedDeviceClass Valve::VR::ETrackedDeviceClass::_get_HMD() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceClass::_get_HMD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceClass>("Valve.VR", "ETrackedDeviceClass", "HMD"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceClass HMD
void Valve::VR::ETrackedDeviceClass::_set_HMD(Valve::VR::ETrackedDeviceClass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceClass::_set_HMD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceClass", "HMD", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceClass Controller
Valve::VR::ETrackedDeviceClass Valve::VR::ETrackedDeviceClass::_get_Controller() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceClass::_get_Controller");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceClass>("Valve.VR", "ETrackedDeviceClass", "Controller"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceClass Controller
void Valve::VR::ETrackedDeviceClass::_set_Controller(Valve::VR::ETrackedDeviceClass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceClass::_set_Controller");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceClass", "Controller", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceClass GenericTracker
Valve::VR::ETrackedDeviceClass Valve::VR::ETrackedDeviceClass::_get_GenericTracker() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceClass::_get_GenericTracker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceClass>("Valve.VR", "ETrackedDeviceClass", "GenericTracker"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceClass GenericTracker
void Valve::VR::ETrackedDeviceClass::_set_GenericTracker(Valve::VR::ETrackedDeviceClass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceClass::_set_GenericTracker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceClass", "GenericTracker", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceClass TrackingReference
Valve::VR::ETrackedDeviceClass Valve::VR::ETrackedDeviceClass::_get_TrackingReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceClass::_get_TrackingReference");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceClass>("Valve.VR", "ETrackedDeviceClass", "TrackingReference"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceClass TrackingReference
void Valve::VR::ETrackedDeviceClass::_set_TrackingReference(Valve::VR::ETrackedDeviceClass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceClass::_set_TrackingReference");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceClass", "TrackingReference", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceClass DisplayRedirect
Valve::VR::ETrackedDeviceClass Valve::VR::ETrackedDeviceClass::_get_DisplayRedirect() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceClass::_get_DisplayRedirect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceClass>("Valve.VR", "ETrackedDeviceClass", "DisplayRedirect"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceClass DisplayRedirect
void Valve::VR::ETrackedDeviceClass::_set_DisplayRedirect(Valve::VR::ETrackedDeviceClass value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceClass::_set_DisplayRedirect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceClass", "DisplayRedirect", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::ETrackedDeviceClass::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceClass::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.ETrackedControllerRole
#include "Valve/VR/ETrackedControllerRole.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedControllerRole Invalid
Valve::VR::ETrackedControllerRole Valve::VR::ETrackedControllerRole::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedControllerRole::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedControllerRole>("Valve.VR", "ETrackedControllerRole", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedControllerRole Invalid
void Valve::VR::ETrackedControllerRole::_set_Invalid(Valve::VR::ETrackedControllerRole value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedControllerRole::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedControllerRole", "Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedControllerRole LeftHand
Valve::VR::ETrackedControllerRole Valve::VR::ETrackedControllerRole::_get_LeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedControllerRole::_get_LeftHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedControllerRole>("Valve.VR", "ETrackedControllerRole", "LeftHand"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedControllerRole LeftHand
void Valve::VR::ETrackedControllerRole::_set_LeftHand(Valve::VR::ETrackedControllerRole value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedControllerRole::_set_LeftHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedControllerRole", "LeftHand", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedControllerRole RightHand
Valve::VR::ETrackedControllerRole Valve::VR::ETrackedControllerRole::_get_RightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedControllerRole::_get_RightHand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedControllerRole>("Valve.VR", "ETrackedControllerRole", "RightHand"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedControllerRole RightHand
void Valve::VR::ETrackedControllerRole::_set_RightHand(Valve::VR::ETrackedControllerRole value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedControllerRole::_set_RightHand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedControllerRole", "RightHand", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::ETrackedControllerRole::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedControllerRole::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.ETrackingUniverseOrigin
#include "Valve/VR/ETrackingUniverseOrigin.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackingUniverseOrigin TrackingUniverseSeated
Valve::VR::ETrackingUniverseOrigin Valve::VR::ETrackingUniverseOrigin::_get_TrackingUniverseSeated() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackingUniverseOrigin::_get_TrackingUniverseSeated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackingUniverseOrigin>("Valve.VR", "ETrackingUniverseOrigin", "TrackingUniverseSeated"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackingUniverseOrigin TrackingUniverseSeated
void Valve::VR::ETrackingUniverseOrigin::_set_TrackingUniverseSeated(Valve::VR::ETrackingUniverseOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackingUniverseOrigin::_set_TrackingUniverseSeated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackingUniverseOrigin", "TrackingUniverseSeated", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackingUniverseOrigin TrackingUniverseStanding
Valve::VR::ETrackingUniverseOrigin Valve::VR::ETrackingUniverseOrigin::_get_TrackingUniverseStanding() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackingUniverseOrigin::_get_TrackingUniverseStanding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackingUniverseOrigin>("Valve.VR", "ETrackingUniverseOrigin", "TrackingUniverseStanding"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackingUniverseOrigin TrackingUniverseStanding
void Valve::VR::ETrackingUniverseOrigin::_set_TrackingUniverseStanding(Valve::VR::ETrackingUniverseOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackingUniverseOrigin::_set_TrackingUniverseStanding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackingUniverseOrigin", "TrackingUniverseStanding", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackingUniverseOrigin TrackingUniverseRawAndUncalibrated
Valve::VR::ETrackingUniverseOrigin Valve::VR::ETrackingUniverseOrigin::_get_TrackingUniverseRawAndUncalibrated() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackingUniverseOrigin::_get_TrackingUniverseRawAndUncalibrated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackingUniverseOrigin>("Valve.VR", "ETrackingUniverseOrigin", "TrackingUniverseRawAndUncalibrated"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackingUniverseOrigin TrackingUniverseRawAndUncalibrated
void Valve::VR::ETrackingUniverseOrigin::_set_TrackingUniverseRawAndUncalibrated(Valve::VR::ETrackingUniverseOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackingUniverseOrigin::_set_TrackingUniverseRawAndUncalibrated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackingUniverseOrigin", "TrackingUniverseRawAndUncalibrated", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::ETrackingUniverseOrigin::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackingUniverseOrigin::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.ETrackedDeviceProperty
#include "Valve/VR/ETrackedDeviceProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_Invalid
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_Invalid"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_Invalid
void Valve::VR::ETrackedDeviceProperty::_set_Prop_Invalid(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_TrackingSystemName_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_TrackingSystemName_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_TrackingSystemName_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_TrackingSystemName_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_TrackingSystemName_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_TrackingSystemName_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_TrackingSystemName_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_TrackingSystemName_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_ModelNumber_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_ModelNumber_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_ModelNumber_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_ModelNumber_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_ModelNumber_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_ModelNumber_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_ModelNumber_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_ModelNumber_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_SerialNumber_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_SerialNumber_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_SerialNumber_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_SerialNumber_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_SerialNumber_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_SerialNumber_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_SerialNumber_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_SerialNumber_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_RenderModelName_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_RenderModelName_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_RenderModelName_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_RenderModelName_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_RenderModelName_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_RenderModelName_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_RenderModelName_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_RenderModelName_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_WillDriftInYaw_Bool
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_WillDriftInYaw_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_WillDriftInYaw_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_WillDriftInYaw_Bool"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_WillDriftInYaw_Bool
void Valve::VR::ETrackedDeviceProperty::_set_Prop_WillDriftInYaw_Bool(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_WillDriftInYaw_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_WillDriftInYaw_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_ManufacturerName_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_ManufacturerName_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_ManufacturerName_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_ManufacturerName_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_ManufacturerName_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_ManufacturerName_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_ManufacturerName_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_ManufacturerName_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_TrackingFirmwareVersion_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_TrackingFirmwareVersion_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_TrackingFirmwareVersion_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_TrackingFirmwareVersion_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_TrackingFirmwareVersion_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_TrackingFirmwareVersion_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_TrackingFirmwareVersion_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_TrackingFirmwareVersion_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_HardwareRevision_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_HardwareRevision_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_HardwareRevision_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_HardwareRevision_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_HardwareRevision_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_HardwareRevision_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_HardwareRevision_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_HardwareRevision_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_AllWirelessDongleDescriptions_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_AllWirelessDongleDescriptions_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_AllWirelessDongleDescriptions_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_AllWirelessDongleDescriptions_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_AllWirelessDongleDescriptions_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_AllWirelessDongleDescriptions_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_AllWirelessDongleDescriptions_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_AllWirelessDongleDescriptions_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_ConnectedWirelessDongle_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_ConnectedWirelessDongle_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_ConnectedWirelessDongle_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_ConnectedWirelessDongle_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_ConnectedWirelessDongle_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_ConnectedWirelessDongle_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_ConnectedWirelessDongle_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_ConnectedWirelessDongle_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DeviceIsWireless_Bool
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DeviceIsWireless_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DeviceIsWireless_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DeviceIsWireless_Bool"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DeviceIsWireless_Bool
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DeviceIsWireless_Bool(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DeviceIsWireless_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DeviceIsWireless_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DeviceIsCharging_Bool
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DeviceIsCharging_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DeviceIsCharging_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DeviceIsCharging_Bool"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DeviceIsCharging_Bool
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DeviceIsCharging_Bool(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DeviceIsCharging_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DeviceIsCharging_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DeviceBatteryPercentage_Float
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DeviceBatteryPercentage_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DeviceBatteryPercentage_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DeviceBatteryPercentage_Float"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DeviceBatteryPercentage_Float
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DeviceBatteryPercentage_Float(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DeviceBatteryPercentage_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DeviceBatteryPercentage_Float", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_StatusDisplayTransform_Matrix34
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_StatusDisplayTransform_Matrix34() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_StatusDisplayTransform_Matrix34");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_StatusDisplayTransform_Matrix34"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_StatusDisplayTransform_Matrix34
void Valve::VR::ETrackedDeviceProperty::_set_Prop_StatusDisplayTransform_Matrix34(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_StatusDisplayTransform_Matrix34");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_StatusDisplayTransform_Matrix34", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_Firmware_UpdateAvailable_Bool
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_Firmware_UpdateAvailable_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_Firmware_UpdateAvailable_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_Firmware_UpdateAvailable_Bool"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_Firmware_UpdateAvailable_Bool
void Valve::VR::ETrackedDeviceProperty::_set_Prop_Firmware_UpdateAvailable_Bool(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_Firmware_UpdateAvailable_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_Firmware_UpdateAvailable_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_Firmware_ManualUpdate_Bool
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_Firmware_ManualUpdate_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_Firmware_ManualUpdate_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_Firmware_ManualUpdate_Bool"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_Firmware_ManualUpdate_Bool
void Valve::VR::ETrackedDeviceProperty::_set_Prop_Firmware_ManualUpdate_Bool(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_Firmware_ManualUpdate_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_Firmware_ManualUpdate_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_Firmware_ManualUpdateURL_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_Firmware_ManualUpdateURL_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_Firmware_ManualUpdateURL_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_Firmware_ManualUpdateURL_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_Firmware_ManualUpdateURL_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_Firmware_ManualUpdateURL_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_Firmware_ManualUpdateURL_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_Firmware_ManualUpdateURL_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_HardwareRevision_Uint64
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_HardwareRevision_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_HardwareRevision_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_HardwareRevision_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_HardwareRevision_Uint64
void Valve::VR::ETrackedDeviceProperty::_set_Prop_HardwareRevision_Uint64(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_HardwareRevision_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_HardwareRevision_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_FirmwareVersion_Uint64
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_FirmwareVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_FirmwareVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_FirmwareVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_FirmwareVersion_Uint64
void Valve::VR::ETrackedDeviceProperty::_set_Prop_FirmwareVersion_Uint64(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_FirmwareVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_FirmwareVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_FPGAVersion_Uint64
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_FPGAVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_FPGAVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_FPGAVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_FPGAVersion_Uint64
void Valve::VR::ETrackedDeviceProperty::_set_Prop_FPGAVersion_Uint64(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_FPGAVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_FPGAVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_VRCVersion_Uint64
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_VRCVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_VRCVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_VRCVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_VRCVersion_Uint64
void Valve::VR::ETrackedDeviceProperty::_set_Prop_VRCVersion_Uint64(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_VRCVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_VRCVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_RadioVersion_Uint64
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_RadioVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_RadioVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_RadioVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_RadioVersion_Uint64
void Valve::VR::ETrackedDeviceProperty::_set_Prop_RadioVersion_Uint64(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_RadioVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_RadioVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DongleVersion_Uint64
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DongleVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DongleVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DongleVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DongleVersion_Uint64
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DongleVersion_Uint64(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DongleVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DongleVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_BlockServerShutdown_Bool
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_BlockServerShutdown_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_BlockServerShutdown_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_BlockServerShutdown_Bool"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_BlockServerShutdown_Bool
void Valve::VR::ETrackedDeviceProperty::_set_Prop_BlockServerShutdown_Bool(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_BlockServerShutdown_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_BlockServerShutdown_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_CanUnifyCoordinateSystemWithHmd_Bool
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_CanUnifyCoordinateSystemWithHmd_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_CanUnifyCoordinateSystemWithHmd_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_CanUnifyCoordinateSystemWithHmd_Bool"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_CanUnifyCoordinateSystemWithHmd_Bool
void Valve::VR::ETrackedDeviceProperty::_set_Prop_CanUnifyCoordinateSystemWithHmd_Bool(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_CanUnifyCoordinateSystemWithHmd_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_CanUnifyCoordinateSystemWithHmd_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_ContainsProximitySensor_Bool
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_ContainsProximitySensor_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_ContainsProximitySensor_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_ContainsProximitySensor_Bool"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_ContainsProximitySensor_Bool
void Valve::VR::ETrackedDeviceProperty::_set_Prop_ContainsProximitySensor_Bool(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_ContainsProximitySensor_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_ContainsProximitySensor_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DeviceProvidesBatteryStatus_Bool
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DeviceProvidesBatteryStatus_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DeviceProvidesBatteryStatus_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DeviceProvidesBatteryStatus_Bool"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DeviceProvidesBatteryStatus_Bool
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DeviceProvidesBatteryStatus_Bool(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DeviceProvidesBatteryStatus_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DeviceProvidesBatteryStatus_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DeviceCanPowerOff_Bool
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DeviceCanPowerOff_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DeviceCanPowerOff_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DeviceCanPowerOff_Bool"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DeviceCanPowerOff_Bool
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DeviceCanPowerOff_Bool(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DeviceCanPowerOff_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DeviceCanPowerOff_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_Firmware_ProgrammingTarget_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_Firmware_ProgrammingTarget_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_Firmware_ProgrammingTarget_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_Firmware_ProgrammingTarget_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_Firmware_ProgrammingTarget_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_Firmware_ProgrammingTarget_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_Firmware_ProgrammingTarget_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_Firmware_ProgrammingTarget_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DeviceClass_Int32
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DeviceClass_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DeviceClass_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DeviceClass_Int32"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DeviceClass_Int32
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DeviceClass_Int32(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DeviceClass_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DeviceClass_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_HasCamera_Bool
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_HasCamera_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_HasCamera_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_HasCamera_Bool"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_HasCamera_Bool
void Valve::VR::ETrackedDeviceProperty::_set_Prop_HasCamera_Bool(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_HasCamera_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_HasCamera_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DriverVersion_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DriverVersion_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DriverVersion_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DriverVersion_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DriverVersion_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DriverVersion_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DriverVersion_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DriverVersion_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_Firmware_ForceUpdateRequired_Bool
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_Firmware_ForceUpdateRequired_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_Firmware_ForceUpdateRequired_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_Firmware_ForceUpdateRequired_Bool"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_Firmware_ForceUpdateRequired_Bool
void Valve::VR::ETrackedDeviceProperty::_set_Prop_Firmware_ForceUpdateRequired_Bool(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_Firmware_ForceUpdateRequired_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_Firmware_ForceUpdateRequired_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_ViveSystemButtonFixRequired_Bool
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_ViveSystemButtonFixRequired_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_ViveSystemButtonFixRequired_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_ViveSystemButtonFixRequired_Bool"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_ViveSystemButtonFixRequired_Bool
void Valve::VR::ETrackedDeviceProperty::_set_Prop_ViveSystemButtonFixRequired_Bool(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_ViveSystemButtonFixRequired_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_ViveSystemButtonFixRequired_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_ParentDriver_Uint64
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_ParentDriver_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_ParentDriver_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_ParentDriver_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_ParentDriver_Uint64
void Valve::VR::ETrackedDeviceProperty::_set_Prop_ParentDriver_Uint64(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_ParentDriver_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_ParentDriver_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_ResourceRoot_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_ResourceRoot_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_ResourceRoot_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_ResourceRoot_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_ResourceRoot_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_ResourceRoot_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_ResourceRoot_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_ResourceRoot_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_RegisteredDeviceType_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_RegisteredDeviceType_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_RegisteredDeviceType_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_RegisteredDeviceType_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_RegisteredDeviceType_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_RegisteredDeviceType_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_RegisteredDeviceType_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_RegisteredDeviceType_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_InputProfilePath_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_InputProfilePath_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_InputProfilePath_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_InputProfilePath_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_InputProfilePath_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_InputProfilePath_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_InputProfilePath_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_InputProfilePath_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_ReportsTimeSinceVSync_Bool
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_ReportsTimeSinceVSync_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_ReportsTimeSinceVSync_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_ReportsTimeSinceVSync_Bool"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_ReportsTimeSinceVSync_Bool
void Valve::VR::ETrackedDeviceProperty::_set_Prop_ReportsTimeSinceVSync_Bool(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_ReportsTimeSinceVSync_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_ReportsTimeSinceVSync_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_SecondsFromVsyncToPhotons_Float
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_SecondsFromVsyncToPhotons_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_SecondsFromVsyncToPhotons_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_SecondsFromVsyncToPhotons_Float"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_SecondsFromVsyncToPhotons_Float
void Valve::VR::ETrackedDeviceProperty::_set_Prop_SecondsFromVsyncToPhotons_Float(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_SecondsFromVsyncToPhotons_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_SecondsFromVsyncToPhotons_Float", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayFrequency_Float
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayFrequency_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayFrequency_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayFrequency_Float"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayFrequency_Float
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayFrequency_Float(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayFrequency_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayFrequency_Float", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_UserIpdMeters_Float
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_UserIpdMeters_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_UserIpdMeters_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_UserIpdMeters_Float"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_UserIpdMeters_Float
void Valve::VR::ETrackedDeviceProperty::_set_Prop_UserIpdMeters_Float(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_UserIpdMeters_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_UserIpdMeters_Float", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_CurrentUniverseId_Uint64
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_CurrentUniverseId_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_CurrentUniverseId_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_CurrentUniverseId_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_CurrentUniverseId_Uint64
void Valve::VR::ETrackedDeviceProperty::_set_Prop_CurrentUniverseId_Uint64(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_CurrentUniverseId_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_CurrentUniverseId_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_PreviousUniverseId_Uint64
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_PreviousUniverseId_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_PreviousUniverseId_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_PreviousUniverseId_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_PreviousUniverseId_Uint64
void Valve::VR::ETrackedDeviceProperty::_set_Prop_PreviousUniverseId_Uint64(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_PreviousUniverseId_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_PreviousUniverseId_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayFirmwareVersion_Uint64
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayFirmwareVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayFirmwareVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayFirmwareVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayFirmwareVersion_Uint64
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayFirmwareVersion_Uint64(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayFirmwareVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayFirmwareVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_IsOnDesktop_Bool
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_IsOnDesktop_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_IsOnDesktop_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_IsOnDesktop_Bool"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_IsOnDesktop_Bool
void Valve::VR::ETrackedDeviceProperty::_set_Prop_IsOnDesktop_Bool(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_IsOnDesktop_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_IsOnDesktop_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayMCType_Int32
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayMCType_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayMCType_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayMCType_Int32"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayMCType_Int32
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayMCType_Int32(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayMCType_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayMCType_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayMCOffset_Float
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayMCOffset_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayMCOffset_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayMCOffset_Float"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayMCOffset_Float
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayMCOffset_Float(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayMCOffset_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayMCOffset_Float", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayMCScale_Float
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayMCScale_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayMCScale_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayMCScale_Float"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayMCScale_Float
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayMCScale_Float(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayMCScale_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayMCScale_Float", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_EdidVendorID_Int32
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_EdidVendorID_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_EdidVendorID_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_EdidVendorID_Int32"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_EdidVendorID_Int32
void Valve::VR::ETrackedDeviceProperty::_set_Prop_EdidVendorID_Int32(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_EdidVendorID_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_EdidVendorID_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayMCImageLeft_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageLeft_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageLeft_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayMCImageLeft_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayMCImageLeft_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageLeft_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageLeft_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayMCImageLeft_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayMCImageRight_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageRight_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageRight_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayMCImageRight_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayMCImageRight_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageRight_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageRight_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayMCImageRight_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayGCBlackClamp_Float
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayGCBlackClamp_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayGCBlackClamp_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayGCBlackClamp_Float"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayGCBlackClamp_Float
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayGCBlackClamp_Float(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayGCBlackClamp_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayGCBlackClamp_Float", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_EdidProductID_Int32
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_EdidProductID_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_EdidProductID_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_EdidProductID_Int32"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_EdidProductID_Int32
void Valve::VR::ETrackedDeviceProperty::_set_Prop_EdidProductID_Int32(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_EdidProductID_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_EdidProductID_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_CameraToHeadTransform_Matrix34
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_CameraToHeadTransform_Matrix34() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_CameraToHeadTransform_Matrix34");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_CameraToHeadTransform_Matrix34"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_CameraToHeadTransform_Matrix34
void Valve::VR::ETrackedDeviceProperty::_set_Prop_CameraToHeadTransform_Matrix34(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_CameraToHeadTransform_Matrix34");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_CameraToHeadTransform_Matrix34", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayGCType_Int32
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayGCType_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayGCType_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayGCType_Int32"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayGCType_Int32
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayGCType_Int32(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayGCType_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayGCType_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayGCOffset_Float
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayGCOffset_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayGCOffset_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayGCOffset_Float"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayGCOffset_Float
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayGCOffset_Float(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayGCOffset_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayGCOffset_Float", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayGCScale_Float
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayGCScale_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayGCScale_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayGCScale_Float"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayGCScale_Float
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayGCScale_Float(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayGCScale_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayGCScale_Float", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayGCPrescale_Float
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayGCPrescale_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayGCPrescale_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayGCPrescale_Float"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayGCPrescale_Float
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayGCPrescale_Float(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayGCPrescale_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayGCPrescale_Float", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayGCImage_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayGCImage_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayGCImage_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayGCImage_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayGCImage_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayGCImage_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayGCImage_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayGCImage_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_LensCenterLeftU_Float
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_LensCenterLeftU_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_LensCenterLeftU_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_LensCenterLeftU_Float"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_LensCenterLeftU_Float
void Valve::VR::ETrackedDeviceProperty::_set_Prop_LensCenterLeftU_Float(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_LensCenterLeftU_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_LensCenterLeftU_Float", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_LensCenterLeftV_Float
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_LensCenterLeftV_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_LensCenterLeftV_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_LensCenterLeftV_Float"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_LensCenterLeftV_Float
void Valve::VR::ETrackedDeviceProperty::_set_Prop_LensCenterLeftV_Float(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_LensCenterLeftV_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_LensCenterLeftV_Float", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_LensCenterRightU_Float
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_LensCenterRightU_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_LensCenterRightU_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_LensCenterRightU_Float"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_LensCenterRightU_Float
void Valve::VR::ETrackedDeviceProperty::_set_Prop_LensCenterRightU_Float(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_LensCenterRightU_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_LensCenterRightU_Float", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_LensCenterRightV_Float
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_LensCenterRightV_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_LensCenterRightV_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_LensCenterRightV_Float"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_LensCenterRightV_Float
void Valve::VR::ETrackedDeviceProperty::_set_Prop_LensCenterRightV_Float(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_LensCenterRightV_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_LensCenterRightV_Float", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_UserHeadToEyeDepthMeters_Float
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_UserHeadToEyeDepthMeters_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_UserHeadToEyeDepthMeters_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_UserHeadToEyeDepthMeters_Float"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_UserHeadToEyeDepthMeters_Float
void Valve::VR::ETrackedDeviceProperty::_set_Prop_UserHeadToEyeDepthMeters_Float(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_UserHeadToEyeDepthMeters_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_UserHeadToEyeDepthMeters_Float", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_CameraFirmwareVersion_Uint64
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_CameraFirmwareVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_CameraFirmwareVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_CameraFirmwareVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_CameraFirmwareVersion_Uint64
void Valve::VR::ETrackedDeviceProperty::_set_Prop_CameraFirmwareVersion_Uint64(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_CameraFirmwareVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_CameraFirmwareVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_CameraFirmwareDescription_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_CameraFirmwareDescription_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_CameraFirmwareDescription_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_CameraFirmwareDescription_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_CameraFirmwareDescription_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_CameraFirmwareDescription_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_CameraFirmwareDescription_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_CameraFirmwareDescription_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayFPGAVersion_Uint64
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayFPGAVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayFPGAVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayFPGAVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayFPGAVersion_Uint64
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayFPGAVersion_Uint64(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayFPGAVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayFPGAVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayBootloaderVersion_Uint64
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayBootloaderVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayBootloaderVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayBootloaderVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayBootloaderVersion_Uint64
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayBootloaderVersion_Uint64(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayBootloaderVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayBootloaderVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayHardwareVersion_Uint64
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayHardwareVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayHardwareVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayHardwareVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayHardwareVersion_Uint64
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayHardwareVersion_Uint64(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayHardwareVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayHardwareVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_AudioFirmwareVersion_Uint64
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_AudioFirmwareVersion_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_AudioFirmwareVersion_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_AudioFirmwareVersion_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_AudioFirmwareVersion_Uint64
void Valve::VR::ETrackedDeviceProperty::_set_Prop_AudioFirmwareVersion_Uint64(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_AudioFirmwareVersion_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_AudioFirmwareVersion_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_CameraCompatibilityMode_Int32
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_CameraCompatibilityMode_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_CameraCompatibilityMode_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_CameraCompatibilityMode_Int32"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_CameraCompatibilityMode_Int32
void Valve::VR::ETrackedDeviceProperty::_set_Prop_CameraCompatibilityMode_Int32(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_CameraCompatibilityMode_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_CameraCompatibilityMode_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_ScreenshotHorizontalFieldOfViewDegrees_Float
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_ScreenshotHorizontalFieldOfViewDegrees_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_ScreenshotHorizontalFieldOfViewDegrees_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_ScreenshotHorizontalFieldOfViewDegrees_Float"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_ScreenshotHorizontalFieldOfViewDegrees_Float
void Valve::VR::ETrackedDeviceProperty::_set_Prop_ScreenshotHorizontalFieldOfViewDegrees_Float(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_ScreenshotHorizontalFieldOfViewDegrees_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_ScreenshotHorizontalFieldOfViewDegrees_Float", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_ScreenshotVerticalFieldOfViewDegrees_Float
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_ScreenshotVerticalFieldOfViewDegrees_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_ScreenshotVerticalFieldOfViewDegrees_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_ScreenshotVerticalFieldOfViewDegrees_Float"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_ScreenshotVerticalFieldOfViewDegrees_Float
void Valve::VR::ETrackedDeviceProperty::_set_Prop_ScreenshotVerticalFieldOfViewDegrees_Float(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_ScreenshotVerticalFieldOfViewDegrees_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_ScreenshotVerticalFieldOfViewDegrees_Float", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplaySuppressed_Bool
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplaySuppressed_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplaySuppressed_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplaySuppressed_Bool"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplaySuppressed_Bool
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplaySuppressed_Bool(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplaySuppressed_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplaySuppressed_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayAllowNightMode_Bool
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayAllowNightMode_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayAllowNightMode_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayAllowNightMode_Bool"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayAllowNightMode_Bool
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayAllowNightMode_Bool(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayAllowNightMode_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayAllowNightMode_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayMCImageWidth_Int32
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageWidth_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageWidth_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayMCImageWidth_Int32"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayMCImageWidth_Int32
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageWidth_Int32(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageWidth_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayMCImageWidth_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayMCImageHeight_Int32
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageHeight_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageHeight_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayMCImageHeight_Int32"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayMCImageHeight_Int32
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageHeight_Int32(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageHeight_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayMCImageHeight_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayMCImageNumChannels_Int32
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageNumChannels_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageNumChannels_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayMCImageNumChannels_Int32"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayMCImageNumChannels_Int32
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageNumChannels_Int32(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageNumChannels_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayMCImageNumChannels_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayMCImageData_Binary
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageData_Binary() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayMCImageData_Binary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayMCImageData_Binary"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayMCImageData_Binary
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageData_Binary(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayMCImageData_Binary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayMCImageData_Binary", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_SecondsFromPhotonsToVblank_Float
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_SecondsFromPhotonsToVblank_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_SecondsFromPhotonsToVblank_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_SecondsFromPhotonsToVblank_Float"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_SecondsFromPhotonsToVblank_Float
void Valve::VR::ETrackedDeviceProperty::_set_Prop_SecondsFromPhotonsToVblank_Float(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_SecondsFromPhotonsToVblank_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_SecondsFromPhotonsToVblank_Float", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DriverDirectModeSendsVsyncEvents_Bool
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DriverDirectModeSendsVsyncEvents_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DriverDirectModeSendsVsyncEvents_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DriverDirectModeSendsVsyncEvents_Bool"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DriverDirectModeSendsVsyncEvents_Bool
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DriverDirectModeSendsVsyncEvents_Bool(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DriverDirectModeSendsVsyncEvents_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DriverDirectModeSendsVsyncEvents_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayDebugMode_Bool
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayDebugMode_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayDebugMode_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayDebugMode_Bool"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayDebugMode_Bool
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayDebugMode_Bool(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayDebugMode_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayDebugMode_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_GraphicsAdapterLuid_Uint64
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_GraphicsAdapterLuid_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_GraphicsAdapterLuid_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_GraphicsAdapterLuid_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_GraphicsAdapterLuid_Uint64
void Valve::VR::ETrackedDeviceProperty::_set_Prop_GraphicsAdapterLuid_Uint64(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_GraphicsAdapterLuid_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_GraphicsAdapterLuid_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DriverProvidedChaperonePath_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DriverProvidedChaperonePath_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DriverProvidedChaperonePath_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DriverProvidedChaperonePath_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DriverProvidedChaperonePath_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DriverProvidedChaperonePath_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DriverProvidedChaperonePath_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DriverProvidedChaperonePath_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_ExpectedTrackingReferenceCount_Int32
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_ExpectedTrackingReferenceCount_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_ExpectedTrackingReferenceCount_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_ExpectedTrackingReferenceCount_Int32"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_ExpectedTrackingReferenceCount_Int32
void Valve::VR::ETrackedDeviceProperty::_set_Prop_ExpectedTrackingReferenceCount_Int32(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_ExpectedTrackingReferenceCount_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_ExpectedTrackingReferenceCount_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_ExpectedControllerCount_Int32
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_ExpectedControllerCount_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_ExpectedControllerCount_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_ExpectedControllerCount_Int32"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_ExpectedControllerCount_Int32
void Valve::VR::ETrackedDeviceProperty::_set_Prop_ExpectedControllerCount_Int32(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_ExpectedControllerCount_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_ExpectedControllerCount_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_NamedIconPathControllerLeftDeviceOff_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_NamedIconPathControllerLeftDeviceOff_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_NamedIconPathControllerLeftDeviceOff_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_NamedIconPathControllerLeftDeviceOff_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_NamedIconPathControllerLeftDeviceOff_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_NamedIconPathControllerLeftDeviceOff_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_NamedIconPathControllerLeftDeviceOff_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_NamedIconPathControllerLeftDeviceOff_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_NamedIconPathControllerRightDeviceOff_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_NamedIconPathControllerRightDeviceOff_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_NamedIconPathControllerRightDeviceOff_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_NamedIconPathControllerRightDeviceOff_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_NamedIconPathControllerRightDeviceOff_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_NamedIconPathControllerRightDeviceOff_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_NamedIconPathControllerRightDeviceOff_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_NamedIconPathControllerRightDeviceOff_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_NamedIconPathTrackingReferenceDeviceOff_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_NamedIconPathTrackingReferenceDeviceOff_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_NamedIconPathTrackingReferenceDeviceOff_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_NamedIconPathTrackingReferenceDeviceOff_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_NamedIconPathTrackingReferenceDeviceOff_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_NamedIconPathTrackingReferenceDeviceOff_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_NamedIconPathTrackingReferenceDeviceOff_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_NamedIconPathTrackingReferenceDeviceOff_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DoNotApplyPrediction_Bool
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DoNotApplyPrediction_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DoNotApplyPrediction_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DoNotApplyPrediction_Bool"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DoNotApplyPrediction_Bool
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DoNotApplyPrediction_Bool(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DoNotApplyPrediction_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DoNotApplyPrediction_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_CameraToHeadTransforms_Matrix34_Array
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_CameraToHeadTransforms_Matrix34_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_CameraToHeadTransforms_Matrix34_Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_CameraToHeadTransforms_Matrix34_Array"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_CameraToHeadTransforms_Matrix34_Array
void Valve::VR::ETrackedDeviceProperty::_set_Prop_CameraToHeadTransforms_Matrix34_Array(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_CameraToHeadTransforms_Matrix34_Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_CameraToHeadTransforms_Matrix34_Array", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DriverIsDrawingControllers_Bool
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DriverIsDrawingControllers_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DriverIsDrawingControllers_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DriverIsDrawingControllers_Bool"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DriverIsDrawingControllers_Bool
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DriverIsDrawingControllers_Bool(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DriverIsDrawingControllers_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DriverIsDrawingControllers_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DriverRequestsApplicationPause_Bool
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DriverRequestsApplicationPause_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DriverRequestsApplicationPause_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DriverRequestsApplicationPause_Bool"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DriverRequestsApplicationPause_Bool
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DriverRequestsApplicationPause_Bool(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DriverRequestsApplicationPause_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DriverRequestsApplicationPause_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DriverRequestsReducedRendering_Bool
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DriverRequestsReducedRendering_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DriverRequestsReducedRendering_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DriverRequestsReducedRendering_Bool"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DriverRequestsReducedRendering_Bool
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DriverRequestsReducedRendering_Bool(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DriverRequestsReducedRendering_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DriverRequestsReducedRendering_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_AttachedDeviceId_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_AttachedDeviceId_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_AttachedDeviceId_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_AttachedDeviceId_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_AttachedDeviceId_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_AttachedDeviceId_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_AttachedDeviceId_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_AttachedDeviceId_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_SupportedButtons_Uint64
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_SupportedButtons_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_SupportedButtons_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_SupportedButtons_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_SupportedButtons_Uint64
void Valve::VR::ETrackedDeviceProperty::_set_Prop_SupportedButtons_Uint64(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_SupportedButtons_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_SupportedButtons_Uint64", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_Axis0Type_Int32
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_Axis0Type_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_Axis0Type_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_Axis0Type_Int32"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_Axis0Type_Int32
void Valve::VR::ETrackedDeviceProperty::_set_Prop_Axis0Type_Int32(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_Axis0Type_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_Axis0Type_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_Axis1Type_Int32
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_Axis1Type_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_Axis1Type_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_Axis1Type_Int32"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_Axis1Type_Int32
void Valve::VR::ETrackedDeviceProperty::_set_Prop_Axis1Type_Int32(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_Axis1Type_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_Axis1Type_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_Axis2Type_Int32
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_Axis2Type_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_Axis2Type_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_Axis2Type_Int32"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_Axis2Type_Int32
void Valve::VR::ETrackedDeviceProperty::_set_Prop_Axis2Type_Int32(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_Axis2Type_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_Axis2Type_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_Axis3Type_Int32
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_Axis3Type_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_Axis3Type_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_Axis3Type_Int32"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_Axis3Type_Int32
void Valve::VR::ETrackedDeviceProperty::_set_Prop_Axis3Type_Int32(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_Axis3Type_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_Axis3Type_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_Axis4Type_Int32
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_Axis4Type_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_Axis4Type_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_Axis4Type_Int32"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_Axis4Type_Int32
void Valve::VR::ETrackedDeviceProperty::_set_Prop_Axis4Type_Int32(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_Axis4Type_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_Axis4Type_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_ControllerRoleHint_Int32
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_ControllerRoleHint_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_ControllerRoleHint_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_ControllerRoleHint_Int32"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_ControllerRoleHint_Int32
void Valve::VR::ETrackedDeviceProperty::_set_Prop_ControllerRoleHint_Int32(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_ControllerRoleHint_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_ControllerRoleHint_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_FieldOfViewLeftDegrees_Float
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_FieldOfViewLeftDegrees_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_FieldOfViewLeftDegrees_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_FieldOfViewLeftDegrees_Float"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_FieldOfViewLeftDegrees_Float
void Valve::VR::ETrackedDeviceProperty::_set_Prop_FieldOfViewLeftDegrees_Float(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_FieldOfViewLeftDegrees_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_FieldOfViewLeftDegrees_Float", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_FieldOfViewRightDegrees_Float
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_FieldOfViewRightDegrees_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_FieldOfViewRightDegrees_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_FieldOfViewRightDegrees_Float"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_FieldOfViewRightDegrees_Float
void Valve::VR::ETrackedDeviceProperty::_set_Prop_FieldOfViewRightDegrees_Float(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_FieldOfViewRightDegrees_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_FieldOfViewRightDegrees_Float", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_FieldOfViewTopDegrees_Float
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_FieldOfViewTopDegrees_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_FieldOfViewTopDegrees_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_FieldOfViewTopDegrees_Float"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_FieldOfViewTopDegrees_Float
void Valve::VR::ETrackedDeviceProperty::_set_Prop_FieldOfViewTopDegrees_Float(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_FieldOfViewTopDegrees_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_FieldOfViewTopDegrees_Float", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_FieldOfViewBottomDegrees_Float
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_FieldOfViewBottomDegrees_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_FieldOfViewBottomDegrees_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_FieldOfViewBottomDegrees_Float"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_FieldOfViewBottomDegrees_Float
void Valve::VR::ETrackedDeviceProperty::_set_Prop_FieldOfViewBottomDegrees_Float(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_FieldOfViewBottomDegrees_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_FieldOfViewBottomDegrees_Float", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_TrackingRangeMinimumMeters_Float
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_TrackingRangeMinimumMeters_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_TrackingRangeMinimumMeters_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_TrackingRangeMinimumMeters_Float"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_TrackingRangeMinimumMeters_Float
void Valve::VR::ETrackedDeviceProperty::_set_Prop_TrackingRangeMinimumMeters_Float(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_TrackingRangeMinimumMeters_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_TrackingRangeMinimumMeters_Float", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_TrackingRangeMaximumMeters_Float
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_TrackingRangeMaximumMeters_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_TrackingRangeMaximumMeters_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_TrackingRangeMaximumMeters_Float"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_TrackingRangeMaximumMeters_Float
void Valve::VR::ETrackedDeviceProperty::_set_Prop_TrackingRangeMaximumMeters_Float(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_TrackingRangeMaximumMeters_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_TrackingRangeMaximumMeters_Float", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_ModeLabel_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_ModeLabel_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_ModeLabel_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_ModeLabel_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_ModeLabel_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_ModeLabel_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_ModeLabel_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_ModeLabel_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_IconPathName_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_IconPathName_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_IconPathName_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_IconPathName_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_IconPathName_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_IconPathName_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_IconPathName_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_IconPathName_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_NamedIconPathDeviceOff_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceOff_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceOff_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceOff_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_NamedIconPathDeviceOff_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceOff_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceOff_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceOff_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_NamedIconPathDeviceSearching_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceSearching_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceSearching_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceSearching_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_NamedIconPathDeviceSearching_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceSearching_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceSearching_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceSearching_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_NamedIconPathDeviceSearchingAlert_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceSearchingAlert_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceSearchingAlert_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceSearchingAlert_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_NamedIconPathDeviceSearchingAlert_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceSearchingAlert_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceSearchingAlert_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceSearchingAlert_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_NamedIconPathDeviceReady_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceReady_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceReady_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceReady_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_NamedIconPathDeviceReady_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceReady_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceReady_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceReady_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_NamedIconPathDeviceReadyAlert_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceReadyAlert_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceReadyAlert_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceReadyAlert_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_NamedIconPathDeviceReadyAlert_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceReadyAlert_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceReadyAlert_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceReadyAlert_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_NamedIconPathDeviceNotReady_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceNotReady_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceNotReady_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceNotReady_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_NamedIconPathDeviceNotReady_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceNotReady_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceNotReady_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceNotReady_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_NamedIconPathDeviceStandby_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceStandby_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceStandby_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceStandby_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_NamedIconPathDeviceStandby_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceStandby_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceStandby_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceStandby_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_NamedIconPathDeviceAlertLow_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceAlertLow_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_NamedIconPathDeviceAlertLow_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceAlertLow_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_NamedIconPathDeviceAlertLow_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceAlertLow_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_NamedIconPathDeviceAlertLow_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_NamedIconPathDeviceAlertLow_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayHiddenArea_Binary_Start
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayHiddenArea_Binary_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayHiddenArea_Binary_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayHiddenArea_Binary_Start"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayHiddenArea_Binary_Start
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayHiddenArea_Binary_Start(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayHiddenArea_Binary_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayHiddenArea_Binary_Start", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayHiddenArea_Binary_End
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayHiddenArea_Binary_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_DisplayHiddenArea_Binary_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayHiddenArea_Binary_End"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_DisplayHiddenArea_Binary_End
void Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayHiddenArea_Binary_End(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_DisplayHiddenArea_Binary_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_DisplayHiddenArea_Binary_End", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_ParentContainer
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_ParentContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_ParentContainer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_ParentContainer"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_ParentContainer
void Valve::VR::ETrackedDeviceProperty::_set_Prop_ParentContainer(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_ParentContainer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_ParentContainer", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_UserConfigPath_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_UserConfigPath_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_UserConfigPath_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_UserConfigPath_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_UserConfigPath_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_UserConfigPath_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_UserConfigPath_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_UserConfigPath_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_InstallPath_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_InstallPath_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_InstallPath_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_InstallPath_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_InstallPath_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_InstallPath_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_InstallPath_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_InstallPath_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_HasDisplayComponent_Bool
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_HasDisplayComponent_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_HasDisplayComponent_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_HasDisplayComponent_Bool"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_HasDisplayComponent_Bool
void Valve::VR::ETrackedDeviceProperty::_set_Prop_HasDisplayComponent_Bool(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_HasDisplayComponent_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_HasDisplayComponent_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_HasControllerComponent_Bool
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_HasControllerComponent_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_HasControllerComponent_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_HasControllerComponent_Bool"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_HasControllerComponent_Bool
void Valve::VR::ETrackedDeviceProperty::_set_Prop_HasControllerComponent_Bool(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_HasControllerComponent_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_HasControllerComponent_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_HasCameraComponent_Bool
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_HasCameraComponent_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_HasCameraComponent_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_HasCameraComponent_Bool"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_HasCameraComponent_Bool
void Valve::VR::ETrackedDeviceProperty::_set_Prop_HasCameraComponent_Bool(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_HasCameraComponent_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_HasCameraComponent_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_HasDriverDirectModeComponent_Bool
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_HasDriverDirectModeComponent_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_HasDriverDirectModeComponent_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_HasDriverDirectModeComponent_Bool"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_HasDriverDirectModeComponent_Bool
void Valve::VR::ETrackedDeviceProperty::_set_Prop_HasDriverDirectModeComponent_Bool(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_HasDriverDirectModeComponent_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_HasDriverDirectModeComponent_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_HasVirtualDisplayComponent_Bool
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_HasVirtualDisplayComponent_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_HasVirtualDisplayComponent_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_HasVirtualDisplayComponent_Bool"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_HasVirtualDisplayComponent_Bool
void Valve::VR::ETrackedDeviceProperty::_set_Prop_HasVirtualDisplayComponent_Bool(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_HasVirtualDisplayComponent_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_HasVirtualDisplayComponent_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_ControllerType_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_ControllerType_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_ControllerType_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_ControllerType_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_ControllerType_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_ControllerType_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_ControllerType_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_ControllerType_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_LegacyInputProfile_String
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_LegacyInputProfile_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_LegacyInputProfile_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_LegacyInputProfile_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_LegacyInputProfile_String
void Valve::VR::ETrackedDeviceProperty::_set_Prop_LegacyInputProfile_String(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_LegacyInputProfile_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_LegacyInputProfile_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_VendorSpecific_Reserved_Start
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_VendorSpecific_Reserved_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_VendorSpecific_Reserved_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_VendorSpecific_Reserved_Start"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_VendorSpecific_Reserved_Start
void Valve::VR::ETrackedDeviceProperty::_set_Prop_VendorSpecific_Reserved_Start(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_VendorSpecific_Reserved_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_VendorSpecific_Reserved_Start", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_VendorSpecific_Reserved_End
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_VendorSpecific_Reserved_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_VendorSpecific_Reserved_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_VendorSpecific_Reserved_End"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_VendorSpecific_Reserved_End
void Valve::VR::ETrackedDeviceProperty::_set_Prop_VendorSpecific_Reserved_End(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_VendorSpecific_Reserved_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_VendorSpecific_Reserved_End", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedDeviceProperty Prop_TrackedDeviceProperty_Max
Valve::VR::ETrackedDeviceProperty Valve::VR::ETrackedDeviceProperty::_get_Prop_TrackedDeviceProperty_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_get_Prop_TrackedDeviceProperty_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedDeviceProperty>("Valve.VR", "ETrackedDeviceProperty", "Prop_TrackedDeviceProperty_Max"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedDeviceProperty Prop_TrackedDeviceProperty_Max
void Valve::VR::ETrackedDeviceProperty::_set_Prop_TrackedDeviceProperty_Max(Valve::VR::ETrackedDeviceProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::_set_Prop_TrackedDeviceProperty_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedDeviceProperty", "Prop_TrackedDeviceProperty_Max", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::ETrackedDeviceProperty::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedDeviceProperty::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.ETrackedPropertyError
#include "Valve/VR/ETrackedPropertyError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedPropertyError TrackedProp_Success
Valve::VR::ETrackedPropertyError Valve::VR::ETrackedPropertyError::_get_TrackedProp_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedPropertyError::_get_TrackedProp_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedPropertyError>("Valve.VR", "ETrackedPropertyError", "TrackedProp_Success"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedPropertyError TrackedProp_Success
void Valve::VR::ETrackedPropertyError::_set_TrackedProp_Success(Valve::VR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedPropertyError::_set_TrackedProp_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedPropertyError", "TrackedProp_Success", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedPropertyError TrackedProp_WrongDataType
Valve::VR::ETrackedPropertyError Valve::VR::ETrackedPropertyError::_get_TrackedProp_WrongDataType() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedPropertyError::_get_TrackedProp_WrongDataType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedPropertyError>("Valve.VR", "ETrackedPropertyError", "TrackedProp_WrongDataType"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedPropertyError TrackedProp_WrongDataType
void Valve::VR::ETrackedPropertyError::_set_TrackedProp_WrongDataType(Valve::VR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedPropertyError::_set_TrackedProp_WrongDataType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedPropertyError", "TrackedProp_WrongDataType", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedPropertyError TrackedProp_WrongDeviceClass
Valve::VR::ETrackedPropertyError Valve::VR::ETrackedPropertyError::_get_TrackedProp_WrongDeviceClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedPropertyError::_get_TrackedProp_WrongDeviceClass");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedPropertyError>("Valve.VR", "ETrackedPropertyError", "TrackedProp_WrongDeviceClass"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedPropertyError TrackedProp_WrongDeviceClass
void Valve::VR::ETrackedPropertyError::_set_TrackedProp_WrongDeviceClass(Valve::VR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedPropertyError::_set_TrackedProp_WrongDeviceClass");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedPropertyError", "TrackedProp_WrongDeviceClass", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedPropertyError TrackedProp_BufferTooSmall
Valve::VR::ETrackedPropertyError Valve::VR::ETrackedPropertyError::_get_TrackedProp_BufferTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedPropertyError::_get_TrackedProp_BufferTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedPropertyError>("Valve.VR", "ETrackedPropertyError", "TrackedProp_BufferTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedPropertyError TrackedProp_BufferTooSmall
void Valve::VR::ETrackedPropertyError::_set_TrackedProp_BufferTooSmall(Valve::VR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedPropertyError::_set_TrackedProp_BufferTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedPropertyError", "TrackedProp_BufferTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedPropertyError TrackedProp_UnknownProperty
Valve::VR::ETrackedPropertyError Valve::VR::ETrackedPropertyError::_get_TrackedProp_UnknownProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedPropertyError::_get_TrackedProp_UnknownProperty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedPropertyError>("Valve.VR", "ETrackedPropertyError", "TrackedProp_UnknownProperty"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedPropertyError TrackedProp_UnknownProperty
void Valve::VR::ETrackedPropertyError::_set_TrackedProp_UnknownProperty(Valve::VR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedPropertyError::_set_TrackedProp_UnknownProperty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedPropertyError", "TrackedProp_UnknownProperty", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedPropertyError TrackedProp_InvalidDevice
Valve::VR::ETrackedPropertyError Valve::VR::ETrackedPropertyError::_get_TrackedProp_InvalidDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedPropertyError::_get_TrackedProp_InvalidDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedPropertyError>("Valve.VR", "ETrackedPropertyError", "TrackedProp_InvalidDevice"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedPropertyError TrackedProp_InvalidDevice
void Valve::VR::ETrackedPropertyError::_set_TrackedProp_InvalidDevice(Valve::VR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedPropertyError::_set_TrackedProp_InvalidDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedPropertyError", "TrackedProp_InvalidDevice", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedPropertyError TrackedProp_CouldNotContactServer
Valve::VR::ETrackedPropertyError Valve::VR::ETrackedPropertyError::_get_TrackedProp_CouldNotContactServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedPropertyError::_get_TrackedProp_CouldNotContactServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedPropertyError>("Valve.VR", "ETrackedPropertyError", "TrackedProp_CouldNotContactServer"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedPropertyError TrackedProp_CouldNotContactServer
void Valve::VR::ETrackedPropertyError::_set_TrackedProp_CouldNotContactServer(Valve::VR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedPropertyError::_set_TrackedProp_CouldNotContactServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedPropertyError", "TrackedProp_CouldNotContactServer", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedPropertyError TrackedProp_ValueNotProvidedByDevice
Valve::VR::ETrackedPropertyError Valve::VR::ETrackedPropertyError::_get_TrackedProp_ValueNotProvidedByDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedPropertyError::_get_TrackedProp_ValueNotProvidedByDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedPropertyError>("Valve.VR", "ETrackedPropertyError", "TrackedProp_ValueNotProvidedByDevice"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedPropertyError TrackedProp_ValueNotProvidedByDevice
void Valve::VR::ETrackedPropertyError::_set_TrackedProp_ValueNotProvidedByDevice(Valve::VR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedPropertyError::_set_TrackedProp_ValueNotProvidedByDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedPropertyError", "TrackedProp_ValueNotProvidedByDevice", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedPropertyError TrackedProp_StringExceedsMaximumLength
Valve::VR::ETrackedPropertyError Valve::VR::ETrackedPropertyError::_get_TrackedProp_StringExceedsMaximumLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedPropertyError::_get_TrackedProp_StringExceedsMaximumLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedPropertyError>("Valve.VR", "ETrackedPropertyError", "TrackedProp_StringExceedsMaximumLength"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedPropertyError TrackedProp_StringExceedsMaximumLength
void Valve::VR::ETrackedPropertyError::_set_TrackedProp_StringExceedsMaximumLength(Valve::VR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedPropertyError::_set_TrackedProp_StringExceedsMaximumLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedPropertyError", "TrackedProp_StringExceedsMaximumLength", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedPropertyError TrackedProp_NotYetAvailable
Valve::VR::ETrackedPropertyError Valve::VR::ETrackedPropertyError::_get_TrackedProp_NotYetAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedPropertyError::_get_TrackedProp_NotYetAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedPropertyError>("Valve.VR", "ETrackedPropertyError", "TrackedProp_NotYetAvailable"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedPropertyError TrackedProp_NotYetAvailable
void Valve::VR::ETrackedPropertyError::_set_TrackedProp_NotYetAvailable(Valve::VR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedPropertyError::_set_TrackedProp_NotYetAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedPropertyError", "TrackedProp_NotYetAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedPropertyError TrackedProp_PermissionDenied
Valve::VR::ETrackedPropertyError Valve::VR::ETrackedPropertyError::_get_TrackedProp_PermissionDenied() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedPropertyError::_get_TrackedProp_PermissionDenied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedPropertyError>("Valve.VR", "ETrackedPropertyError", "TrackedProp_PermissionDenied"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedPropertyError TrackedProp_PermissionDenied
void Valve::VR::ETrackedPropertyError::_set_TrackedProp_PermissionDenied(Valve::VR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedPropertyError::_set_TrackedProp_PermissionDenied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedPropertyError", "TrackedProp_PermissionDenied", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedPropertyError TrackedProp_InvalidOperation
Valve::VR::ETrackedPropertyError Valve::VR::ETrackedPropertyError::_get_TrackedProp_InvalidOperation() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedPropertyError::_get_TrackedProp_InvalidOperation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedPropertyError>("Valve.VR", "ETrackedPropertyError", "TrackedProp_InvalidOperation"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedPropertyError TrackedProp_InvalidOperation
void Valve::VR::ETrackedPropertyError::_set_TrackedProp_InvalidOperation(Valve::VR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedPropertyError::_set_TrackedProp_InvalidOperation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedPropertyError", "TrackedProp_InvalidOperation", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ETrackedPropertyError TrackedProp_CannotWriteToWildcards
Valve::VR::ETrackedPropertyError Valve::VR::ETrackedPropertyError::_get_TrackedProp_CannotWriteToWildcards() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedPropertyError::_get_TrackedProp_CannotWriteToWildcards");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ETrackedPropertyError>("Valve.VR", "ETrackedPropertyError", "TrackedProp_CannotWriteToWildcards"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ETrackedPropertyError TrackedProp_CannotWriteToWildcards
void Valve::VR::ETrackedPropertyError::_set_TrackedProp_CannotWriteToWildcards(Valve::VR::ETrackedPropertyError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedPropertyError::_set_TrackedProp_CannotWriteToWildcards");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ETrackedPropertyError", "TrackedProp_CannotWriteToWildcards", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::ETrackedPropertyError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ETrackedPropertyError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EVRSubmitFlags
#include "Valve/VR/EVRSubmitFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRSubmitFlags Submit_Default
Valve::VR::EVRSubmitFlags Valve::VR::EVRSubmitFlags::_get_Submit_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRSubmitFlags::_get_Submit_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRSubmitFlags>("Valve.VR", "EVRSubmitFlags", "Submit_Default"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRSubmitFlags Submit_Default
void Valve::VR::EVRSubmitFlags::_set_Submit_Default(Valve::VR::EVRSubmitFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRSubmitFlags::_set_Submit_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRSubmitFlags", "Submit_Default", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRSubmitFlags Submit_LensDistortionAlreadyApplied
Valve::VR::EVRSubmitFlags Valve::VR::EVRSubmitFlags::_get_Submit_LensDistortionAlreadyApplied() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRSubmitFlags::_get_Submit_LensDistortionAlreadyApplied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRSubmitFlags>("Valve.VR", "EVRSubmitFlags", "Submit_LensDistortionAlreadyApplied"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRSubmitFlags Submit_LensDistortionAlreadyApplied
void Valve::VR::EVRSubmitFlags::_set_Submit_LensDistortionAlreadyApplied(Valve::VR::EVRSubmitFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRSubmitFlags::_set_Submit_LensDistortionAlreadyApplied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRSubmitFlags", "Submit_LensDistortionAlreadyApplied", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRSubmitFlags Submit_GlRenderBuffer
Valve::VR::EVRSubmitFlags Valve::VR::EVRSubmitFlags::_get_Submit_GlRenderBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRSubmitFlags::_get_Submit_GlRenderBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRSubmitFlags>("Valve.VR", "EVRSubmitFlags", "Submit_GlRenderBuffer"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRSubmitFlags Submit_GlRenderBuffer
void Valve::VR::EVRSubmitFlags::_set_Submit_GlRenderBuffer(Valve::VR::EVRSubmitFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRSubmitFlags::_set_Submit_GlRenderBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRSubmitFlags", "Submit_GlRenderBuffer", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRSubmitFlags Submit_Reserved
Valve::VR::EVRSubmitFlags Valve::VR::EVRSubmitFlags::_get_Submit_Reserved() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRSubmitFlags::_get_Submit_Reserved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRSubmitFlags>("Valve.VR", "EVRSubmitFlags", "Submit_Reserved"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRSubmitFlags Submit_Reserved
void Valve::VR::EVRSubmitFlags::_set_Submit_Reserved(Valve::VR::EVRSubmitFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRSubmitFlags::_set_Submit_Reserved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRSubmitFlags", "Submit_Reserved", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRSubmitFlags Submit_TextureWithPose
Valve::VR::EVRSubmitFlags Valve::VR::EVRSubmitFlags::_get_Submit_TextureWithPose() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRSubmitFlags::_get_Submit_TextureWithPose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRSubmitFlags>("Valve.VR", "EVRSubmitFlags", "Submit_TextureWithPose"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRSubmitFlags Submit_TextureWithPose
void Valve::VR::EVRSubmitFlags::_set_Submit_TextureWithPose(Valve::VR::EVRSubmitFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRSubmitFlags::_set_Submit_TextureWithPose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRSubmitFlags", "Submit_TextureWithPose", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRSubmitFlags Submit_TextureWithDepth
Valve::VR::EVRSubmitFlags Valve::VR::EVRSubmitFlags::_get_Submit_TextureWithDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRSubmitFlags::_get_Submit_TextureWithDepth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRSubmitFlags>("Valve.VR", "EVRSubmitFlags", "Submit_TextureWithDepth"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRSubmitFlags Submit_TextureWithDepth
void Valve::VR::EVRSubmitFlags::_set_Submit_TextureWithDepth(Valve::VR::EVRSubmitFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRSubmitFlags::_set_Submit_TextureWithDepth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRSubmitFlags", "Submit_TextureWithDepth", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EVRSubmitFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRSubmitFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EVRState
#include "Valve/VR/EVRState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRState Undefined
Valve::VR::EVRState Valve::VR::EVRState::_get_Undefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRState::_get_Undefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRState>("Valve.VR", "EVRState", "Undefined"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRState Undefined
void Valve::VR::EVRState::_set_Undefined(Valve::VR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRState::_set_Undefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRState", "Undefined", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRState Off
Valve::VR::EVRState Valve::VR::EVRState::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRState::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRState>("Valve.VR", "EVRState", "Off"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRState Off
void Valve::VR::EVRState::_set_Off(Valve::VR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRState::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRState", "Off", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRState Searching
Valve::VR::EVRState Valve::VR::EVRState::_get_Searching() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRState::_get_Searching");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRState>("Valve.VR", "EVRState", "Searching"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRState Searching
void Valve::VR::EVRState::_set_Searching(Valve::VR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRState::_set_Searching");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRState", "Searching", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRState Searching_Alert
Valve::VR::EVRState Valve::VR::EVRState::_get_Searching_Alert() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRState::_get_Searching_Alert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRState>("Valve.VR", "EVRState", "Searching_Alert"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRState Searching_Alert
void Valve::VR::EVRState::_set_Searching_Alert(Valve::VR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRState::_set_Searching_Alert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRState", "Searching_Alert", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRState Ready
Valve::VR::EVRState Valve::VR::EVRState::_get_Ready() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRState::_get_Ready");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRState>("Valve.VR", "EVRState", "Ready"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRState Ready
void Valve::VR::EVRState::_set_Ready(Valve::VR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRState::_set_Ready");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRState", "Ready", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRState Ready_Alert
Valve::VR::EVRState Valve::VR::EVRState::_get_Ready_Alert() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRState::_get_Ready_Alert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRState>("Valve.VR", "EVRState", "Ready_Alert"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRState Ready_Alert
void Valve::VR::EVRState::_set_Ready_Alert(Valve::VR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRState::_set_Ready_Alert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRState", "Ready_Alert", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRState NotReady
Valve::VR::EVRState Valve::VR::EVRState::_get_NotReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRState::_get_NotReady");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRState>("Valve.VR", "EVRState", "NotReady"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRState NotReady
void Valve::VR::EVRState::_set_NotReady(Valve::VR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRState::_set_NotReady");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRState", "NotReady", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRState Standby
Valve::VR::EVRState Valve::VR::EVRState::_get_Standby() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRState::_get_Standby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRState>("Valve.VR", "EVRState", "Standby"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRState Standby
void Valve::VR::EVRState::_set_Standby(Valve::VR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRState::_set_Standby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRState", "Standby", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRState Ready_Alert_Low
Valve::VR::EVRState Valve::VR::EVRState::_get_Ready_Alert_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRState::_get_Ready_Alert_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRState>("Valve.VR", "EVRState", "Ready_Alert_Low"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRState Ready_Alert_Low
void Valve::VR::EVRState::_set_Ready_Alert_Low(Valve::VR::EVRState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRState::_set_Ready_Alert_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRState", "Ready_Alert_Low", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EVRState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EVREventType
#include "Valve/VR/EVREventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_None
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_None"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_None
void Valve::VR::EVREventType::_set_VREvent_None(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_None", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_TrackedDeviceActivated
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_TrackedDeviceActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_TrackedDeviceActivated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_TrackedDeviceActivated"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_TrackedDeviceActivated
void Valve::VR::EVREventType::_set_VREvent_TrackedDeviceActivated(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_TrackedDeviceActivated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_TrackedDeviceActivated", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_TrackedDeviceDeactivated
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_TrackedDeviceDeactivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_TrackedDeviceDeactivated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_TrackedDeviceDeactivated"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_TrackedDeviceDeactivated
void Valve::VR::EVREventType::_set_VREvent_TrackedDeviceDeactivated(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_TrackedDeviceDeactivated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_TrackedDeviceDeactivated", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_TrackedDeviceUpdated
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_TrackedDeviceUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_TrackedDeviceUpdated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_TrackedDeviceUpdated"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_TrackedDeviceUpdated
void Valve::VR::EVREventType::_set_VREvent_TrackedDeviceUpdated(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_TrackedDeviceUpdated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_TrackedDeviceUpdated", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_TrackedDeviceUserInteractionStarted
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_TrackedDeviceUserInteractionStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_TrackedDeviceUserInteractionStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_TrackedDeviceUserInteractionStarted"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_TrackedDeviceUserInteractionStarted
void Valve::VR::EVREventType::_set_VREvent_TrackedDeviceUserInteractionStarted(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_TrackedDeviceUserInteractionStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_TrackedDeviceUserInteractionStarted", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_TrackedDeviceUserInteractionEnded
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_TrackedDeviceUserInteractionEnded() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_TrackedDeviceUserInteractionEnded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_TrackedDeviceUserInteractionEnded"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_TrackedDeviceUserInteractionEnded
void Valve::VR::EVREventType::_set_VREvent_TrackedDeviceUserInteractionEnded(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_TrackedDeviceUserInteractionEnded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_TrackedDeviceUserInteractionEnded", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_IpdChanged
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_IpdChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_IpdChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_IpdChanged"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_IpdChanged
void Valve::VR::EVREventType::_set_VREvent_IpdChanged(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_IpdChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_IpdChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_EnterStandbyMode
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_EnterStandbyMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_EnterStandbyMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_EnterStandbyMode"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_EnterStandbyMode
void Valve::VR::EVREventType::_set_VREvent_EnterStandbyMode(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_EnterStandbyMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_EnterStandbyMode", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_LeaveStandbyMode
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_LeaveStandbyMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_LeaveStandbyMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_LeaveStandbyMode"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_LeaveStandbyMode
void Valve::VR::EVREventType::_set_VREvent_LeaveStandbyMode(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_LeaveStandbyMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_LeaveStandbyMode", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_TrackedDeviceRoleChanged
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_TrackedDeviceRoleChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_TrackedDeviceRoleChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_TrackedDeviceRoleChanged"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_TrackedDeviceRoleChanged
void Valve::VR::EVREventType::_set_VREvent_TrackedDeviceRoleChanged(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_TrackedDeviceRoleChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_TrackedDeviceRoleChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_WatchdogWakeUpRequested
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_WatchdogWakeUpRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_WatchdogWakeUpRequested");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_WatchdogWakeUpRequested"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_WatchdogWakeUpRequested
void Valve::VR::EVREventType::_set_VREvent_WatchdogWakeUpRequested(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_WatchdogWakeUpRequested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_WatchdogWakeUpRequested", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_LensDistortionChanged
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_LensDistortionChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_LensDistortionChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_LensDistortionChanged"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_LensDistortionChanged
void Valve::VR::EVREventType::_set_VREvent_LensDistortionChanged(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_LensDistortionChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_LensDistortionChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_PropertyChanged
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_PropertyChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_PropertyChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_PropertyChanged"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_PropertyChanged
void Valve::VR::EVREventType::_set_VREvent_PropertyChanged(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_PropertyChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_PropertyChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_WirelessDisconnect
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_WirelessDisconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_WirelessDisconnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_WirelessDisconnect"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_WirelessDisconnect
void Valve::VR::EVREventType::_set_VREvent_WirelessDisconnect(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_WirelessDisconnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_WirelessDisconnect", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_WirelessReconnect
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_WirelessReconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_WirelessReconnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_WirelessReconnect"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_WirelessReconnect
void Valve::VR::EVREventType::_set_VREvent_WirelessReconnect(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_WirelessReconnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_WirelessReconnect", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_ButtonPress
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_ButtonPress() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_ButtonPress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_ButtonPress"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_ButtonPress
void Valve::VR::EVREventType::_set_VREvent_ButtonPress(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_ButtonPress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_ButtonPress", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_ButtonUnpress
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_ButtonUnpress() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_ButtonUnpress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_ButtonUnpress"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_ButtonUnpress
void Valve::VR::EVREventType::_set_VREvent_ButtonUnpress(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_ButtonUnpress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_ButtonUnpress", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_ButtonTouch
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_ButtonTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_ButtonTouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_ButtonTouch"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_ButtonTouch
void Valve::VR::EVREventType::_set_VREvent_ButtonTouch(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_ButtonTouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_ButtonTouch", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_ButtonUntouch
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_ButtonUntouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_ButtonUntouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_ButtonUntouch"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_ButtonUntouch
void Valve::VR::EVREventType::_set_VREvent_ButtonUntouch(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_ButtonUntouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_ButtonUntouch", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_DualAnalog_Press
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_DualAnalog_Press() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_DualAnalog_Press");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_DualAnalog_Press"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_DualAnalog_Press
void Valve::VR::EVREventType::_set_VREvent_DualAnalog_Press(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_DualAnalog_Press");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_DualAnalog_Press", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_DualAnalog_Unpress
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_DualAnalog_Unpress() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_DualAnalog_Unpress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_DualAnalog_Unpress"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_DualAnalog_Unpress
void Valve::VR::EVREventType::_set_VREvent_DualAnalog_Unpress(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_DualAnalog_Unpress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_DualAnalog_Unpress", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_DualAnalog_Touch
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_DualAnalog_Touch() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_DualAnalog_Touch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_DualAnalog_Touch"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_DualAnalog_Touch
void Valve::VR::EVREventType::_set_VREvent_DualAnalog_Touch(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_DualAnalog_Touch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_DualAnalog_Touch", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_DualAnalog_Untouch
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_DualAnalog_Untouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_DualAnalog_Untouch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_DualAnalog_Untouch"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_DualAnalog_Untouch
void Valve::VR::EVREventType::_set_VREvent_DualAnalog_Untouch(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_DualAnalog_Untouch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_DualAnalog_Untouch", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_DualAnalog_Move
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_DualAnalog_Move() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_DualAnalog_Move");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_DualAnalog_Move"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_DualAnalog_Move
void Valve::VR::EVREventType::_set_VREvent_DualAnalog_Move(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_DualAnalog_Move");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_DualAnalog_Move", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_DualAnalog_ModeSwitch1
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_DualAnalog_ModeSwitch1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_DualAnalog_ModeSwitch1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_DualAnalog_ModeSwitch1"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_DualAnalog_ModeSwitch1
void Valve::VR::EVREventType::_set_VREvent_DualAnalog_ModeSwitch1(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_DualAnalog_ModeSwitch1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_DualAnalog_ModeSwitch1", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_DualAnalog_ModeSwitch2
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_DualAnalog_ModeSwitch2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_DualAnalog_ModeSwitch2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_DualAnalog_ModeSwitch2"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_DualAnalog_ModeSwitch2
void Valve::VR::EVREventType::_set_VREvent_DualAnalog_ModeSwitch2(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_DualAnalog_ModeSwitch2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_DualAnalog_ModeSwitch2", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_DualAnalog_Cancel
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_DualAnalog_Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_DualAnalog_Cancel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_DualAnalog_Cancel"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_DualAnalog_Cancel
void Valve::VR::EVREventType::_set_VREvent_DualAnalog_Cancel(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_DualAnalog_Cancel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_DualAnalog_Cancel", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_MouseMove
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_MouseMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_MouseMove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_MouseMove"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_MouseMove
void Valve::VR::EVREventType::_set_VREvent_MouseMove(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_MouseMove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_MouseMove", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_MouseButtonDown
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_MouseButtonDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_MouseButtonDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_MouseButtonDown"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_MouseButtonDown
void Valve::VR::EVREventType::_set_VREvent_MouseButtonDown(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_MouseButtonDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_MouseButtonDown", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_MouseButtonUp
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_MouseButtonUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_MouseButtonUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_MouseButtonUp"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_MouseButtonUp
void Valve::VR::EVREventType::_set_VREvent_MouseButtonUp(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_MouseButtonUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_MouseButtonUp", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_FocusEnter
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_FocusEnter() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_FocusEnter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_FocusEnter"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_FocusEnter
void Valve::VR::EVREventType::_set_VREvent_FocusEnter(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_FocusEnter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_FocusEnter", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_FocusLeave
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_FocusLeave() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_FocusLeave");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_FocusLeave"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_FocusLeave
void Valve::VR::EVREventType::_set_VREvent_FocusLeave(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_FocusLeave");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_FocusLeave", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_Scroll
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_Scroll() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_Scroll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_Scroll"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_Scroll
void Valve::VR::EVREventType::_set_VREvent_Scroll(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_Scroll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_Scroll", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_TouchPadMove
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_TouchPadMove() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_TouchPadMove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_TouchPadMove"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_TouchPadMove
void Valve::VR::EVREventType::_set_VREvent_TouchPadMove(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_TouchPadMove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_TouchPadMove", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_OverlayFocusChanged
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_OverlayFocusChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_OverlayFocusChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_OverlayFocusChanged"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_OverlayFocusChanged
void Valve::VR::EVREventType::_set_VREvent_OverlayFocusChanged(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_OverlayFocusChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_OverlayFocusChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_InputFocusCaptured
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_InputFocusCaptured() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_InputFocusCaptured");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_InputFocusCaptured"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_InputFocusCaptured
void Valve::VR::EVREventType::_set_VREvent_InputFocusCaptured(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_InputFocusCaptured");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_InputFocusCaptured", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_InputFocusReleased
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_InputFocusReleased() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_InputFocusReleased");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_InputFocusReleased"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_InputFocusReleased
void Valve::VR::EVREventType::_set_VREvent_InputFocusReleased(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_InputFocusReleased");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_InputFocusReleased", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_SceneFocusLost
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_SceneFocusLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_SceneFocusLost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_SceneFocusLost"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_SceneFocusLost
void Valve::VR::EVREventType::_set_VREvent_SceneFocusLost(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_SceneFocusLost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_SceneFocusLost", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_SceneFocusGained
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_SceneFocusGained() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_SceneFocusGained");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_SceneFocusGained"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_SceneFocusGained
void Valve::VR::EVREventType::_set_VREvent_SceneFocusGained(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_SceneFocusGained");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_SceneFocusGained", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_SceneApplicationChanged
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_SceneApplicationChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_SceneApplicationChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_SceneApplicationChanged"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_SceneApplicationChanged
void Valve::VR::EVREventType::_set_VREvent_SceneApplicationChanged(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_SceneApplicationChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_SceneApplicationChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_SceneFocusChanged
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_SceneFocusChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_SceneFocusChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_SceneFocusChanged"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_SceneFocusChanged
void Valve::VR::EVREventType::_set_VREvent_SceneFocusChanged(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_SceneFocusChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_SceneFocusChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_InputFocusChanged
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_InputFocusChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_InputFocusChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_InputFocusChanged"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_InputFocusChanged
void Valve::VR::EVREventType::_set_VREvent_InputFocusChanged(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_InputFocusChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_InputFocusChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_SceneApplicationSecondaryRenderingStarted
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_SceneApplicationSecondaryRenderingStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_SceneApplicationSecondaryRenderingStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_SceneApplicationSecondaryRenderingStarted"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_SceneApplicationSecondaryRenderingStarted
void Valve::VR::EVREventType::_set_VREvent_SceneApplicationSecondaryRenderingStarted(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_SceneApplicationSecondaryRenderingStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_SceneApplicationSecondaryRenderingStarted", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_HideRenderModels
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_HideRenderModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_HideRenderModels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_HideRenderModels"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_HideRenderModels
void Valve::VR::EVREventType::_set_VREvent_HideRenderModels(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_HideRenderModels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_HideRenderModels", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_ShowRenderModels
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_ShowRenderModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_ShowRenderModels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_ShowRenderModels"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_ShowRenderModels
void Valve::VR::EVREventType::_set_VREvent_ShowRenderModels(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_ShowRenderModels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_ShowRenderModels", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_ConsoleOpened
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_ConsoleOpened() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_ConsoleOpened");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_ConsoleOpened"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_ConsoleOpened
void Valve::VR::EVREventType::_set_VREvent_ConsoleOpened(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_ConsoleOpened");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_ConsoleOpened", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_ConsoleClosed
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_ConsoleClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_ConsoleClosed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_ConsoleClosed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_ConsoleClosed
void Valve::VR::EVREventType::_set_VREvent_ConsoleClosed(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_ConsoleClosed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_ConsoleClosed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_OverlayShown
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_OverlayShown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_OverlayShown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_OverlayShown"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_OverlayShown
void Valve::VR::EVREventType::_set_VREvent_OverlayShown(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_OverlayShown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_OverlayShown", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_OverlayHidden
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_OverlayHidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_OverlayHidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_OverlayHidden"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_OverlayHidden
void Valve::VR::EVREventType::_set_VREvent_OverlayHidden(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_OverlayHidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_OverlayHidden", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_DashboardActivated
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_DashboardActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_DashboardActivated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_DashboardActivated"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_DashboardActivated
void Valve::VR::EVREventType::_set_VREvent_DashboardActivated(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_DashboardActivated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_DashboardActivated", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_DashboardDeactivated
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_DashboardDeactivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_DashboardDeactivated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_DashboardDeactivated"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_DashboardDeactivated
void Valve::VR::EVREventType::_set_VREvent_DashboardDeactivated(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_DashboardDeactivated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_DashboardDeactivated", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_DashboardThumbSelected
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_DashboardThumbSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_DashboardThumbSelected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_DashboardThumbSelected"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_DashboardThumbSelected
void Valve::VR::EVREventType::_set_VREvent_DashboardThumbSelected(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_DashboardThumbSelected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_DashboardThumbSelected", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_DashboardRequested
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_DashboardRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_DashboardRequested");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_DashboardRequested"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_DashboardRequested
void Valve::VR::EVREventType::_set_VREvent_DashboardRequested(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_DashboardRequested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_DashboardRequested", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_ResetDashboard
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_ResetDashboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_ResetDashboard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_ResetDashboard"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_ResetDashboard
void Valve::VR::EVREventType::_set_VREvent_ResetDashboard(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_ResetDashboard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_ResetDashboard", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_RenderToast
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_RenderToast() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_RenderToast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_RenderToast"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_RenderToast
void Valve::VR::EVREventType::_set_VREvent_RenderToast(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_RenderToast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_RenderToast", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_ImageLoaded
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_ImageLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_ImageLoaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_ImageLoaded"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_ImageLoaded
void Valve::VR::EVREventType::_set_VREvent_ImageLoaded(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_ImageLoaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_ImageLoaded", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_ShowKeyboard
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_ShowKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_ShowKeyboard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_ShowKeyboard"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_ShowKeyboard
void Valve::VR::EVREventType::_set_VREvent_ShowKeyboard(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_ShowKeyboard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_ShowKeyboard", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_HideKeyboard
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_HideKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_HideKeyboard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_HideKeyboard"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_HideKeyboard
void Valve::VR::EVREventType::_set_VREvent_HideKeyboard(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_HideKeyboard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_HideKeyboard", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_OverlayGamepadFocusGained
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_OverlayGamepadFocusGained() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_OverlayGamepadFocusGained");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_OverlayGamepadFocusGained"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_OverlayGamepadFocusGained
void Valve::VR::EVREventType::_set_VREvent_OverlayGamepadFocusGained(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_OverlayGamepadFocusGained");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_OverlayGamepadFocusGained", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_OverlayGamepadFocusLost
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_OverlayGamepadFocusLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_OverlayGamepadFocusLost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_OverlayGamepadFocusLost"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_OverlayGamepadFocusLost
void Valve::VR::EVREventType::_set_VREvent_OverlayGamepadFocusLost(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_OverlayGamepadFocusLost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_OverlayGamepadFocusLost", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_OverlaySharedTextureChanged
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_OverlaySharedTextureChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_OverlaySharedTextureChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_OverlaySharedTextureChanged"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_OverlaySharedTextureChanged
void Valve::VR::EVREventType::_set_VREvent_OverlaySharedTextureChanged(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_OverlaySharedTextureChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_OverlaySharedTextureChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_DashboardGuideButtonDown
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_DashboardGuideButtonDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_DashboardGuideButtonDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_DashboardGuideButtonDown"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_DashboardGuideButtonDown
void Valve::VR::EVREventType::_set_VREvent_DashboardGuideButtonDown(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_DashboardGuideButtonDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_DashboardGuideButtonDown", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_DashboardGuideButtonUp
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_DashboardGuideButtonUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_DashboardGuideButtonUp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_DashboardGuideButtonUp"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_DashboardGuideButtonUp
void Valve::VR::EVREventType::_set_VREvent_DashboardGuideButtonUp(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_DashboardGuideButtonUp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_DashboardGuideButtonUp", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_ScreenshotTriggered
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_ScreenshotTriggered() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_ScreenshotTriggered");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_ScreenshotTriggered"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_ScreenshotTriggered
void Valve::VR::EVREventType::_set_VREvent_ScreenshotTriggered(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_ScreenshotTriggered");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_ScreenshotTriggered", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_ImageFailed
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_ImageFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_ImageFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_ImageFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_ImageFailed
void Valve::VR::EVREventType::_set_VREvent_ImageFailed(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_ImageFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_ImageFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_DashboardOverlayCreated
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_DashboardOverlayCreated() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_DashboardOverlayCreated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_DashboardOverlayCreated"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_DashboardOverlayCreated
void Valve::VR::EVREventType::_set_VREvent_DashboardOverlayCreated(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_DashboardOverlayCreated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_DashboardOverlayCreated", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_RequestScreenshot
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_RequestScreenshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_RequestScreenshot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_RequestScreenshot"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_RequestScreenshot
void Valve::VR::EVREventType::_set_VREvent_RequestScreenshot(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_RequestScreenshot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_RequestScreenshot", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_ScreenshotTaken
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_ScreenshotTaken() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_ScreenshotTaken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_ScreenshotTaken"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_ScreenshotTaken
void Valve::VR::EVREventType::_set_VREvent_ScreenshotTaken(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_ScreenshotTaken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_ScreenshotTaken", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_ScreenshotFailed
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_ScreenshotFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_ScreenshotFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_ScreenshotFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_ScreenshotFailed
void Valve::VR::EVREventType::_set_VREvent_ScreenshotFailed(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_ScreenshotFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_ScreenshotFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_SubmitScreenshotToDashboard
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_SubmitScreenshotToDashboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_SubmitScreenshotToDashboard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_SubmitScreenshotToDashboard"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_SubmitScreenshotToDashboard
void Valve::VR::EVREventType::_set_VREvent_SubmitScreenshotToDashboard(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_SubmitScreenshotToDashboard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_SubmitScreenshotToDashboard", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_ScreenshotProgressToDashboard
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_ScreenshotProgressToDashboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_ScreenshotProgressToDashboard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_ScreenshotProgressToDashboard"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_ScreenshotProgressToDashboard
void Valve::VR::EVREventType::_set_VREvent_ScreenshotProgressToDashboard(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_ScreenshotProgressToDashboard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_ScreenshotProgressToDashboard", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_PrimaryDashboardDeviceChanged
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_PrimaryDashboardDeviceChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_PrimaryDashboardDeviceChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_PrimaryDashboardDeviceChanged"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_PrimaryDashboardDeviceChanged
void Valve::VR::EVREventType::_set_VREvent_PrimaryDashboardDeviceChanged(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_PrimaryDashboardDeviceChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_PrimaryDashboardDeviceChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_Notification_Shown
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_Notification_Shown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_Notification_Shown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_Notification_Shown"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_Notification_Shown
void Valve::VR::EVREventType::_set_VREvent_Notification_Shown(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_Notification_Shown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_Notification_Shown", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_Notification_Hidden
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_Notification_Hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_Notification_Hidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_Notification_Hidden"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_Notification_Hidden
void Valve::VR::EVREventType::_set_VREvent_Notification_Hidden(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_Notification_Hidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_Notification_Hidden", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_Notification_BeginInteraction
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_Notification_BeginInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_Notification_BeginInteraction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_Notification_BeginInteraction"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_Notification_BeginInteraction
void Valve::VR::EVREventType::_set_VREvent_Notification_BeginInteraction(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_Notification_BeginInteraction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_Notification_BeginInteraction", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_Notification_Destroyed
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_Notification_Destroyed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_Notification_Destroyed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_Notification_Destroyed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_Notification_Destroyed
void Valve::VR::EVREventType::_set_VREvent_Notification_Destroyed(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_Notification_Destroyed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_Notification_Destroyed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_Quit
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_Quit() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_Quit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_Quit"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_Quit
void Valve::VR::EVREventType::_set_VREvent_Quit(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_Quit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_Quit", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_ProcessQuit
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_ProcessQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_ProcessQuit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_ProcessQuit"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_ProcessQuit
void Valve::VR::EVREventType::_set_VREvent_ProcessQuit(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_ProcessQuit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_ProcessQuit", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_QuitAborted_UserPrompt
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_QuitAborted_UserPrompt() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_QuitAborted_UserPrompt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_QuitAborted_UserPrompt"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_QuitAborted_UserPrompt
void Valve::VR::EVREventType::_set_VREvent_QuitAborted_UserPrompt(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_QuitAborted_UserPrompt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_QuitAborted_UserPrompt", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_QuitAcknowledged
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_QuitAcknowledged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_QuitAcknowledged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_QuitAcknowledged"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_QuitAcknowledged
void Valve::VR::EVREventType::_set_VREvent_QuitAcknowledged(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_QuitAcknowledged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_QuitAcknowledged", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_DriverRequestedQuit
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_DriverRequestedQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_DriverRequestedQuit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_DriverRequestedQuit"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_DriverRequestedQuit
void Valve::VR::EVREventType::_set_VREvent_DriverRequestedQuit(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_DriverRequestedQuit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_DriverRequestedQuit", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_ChaperoneDataHasChanged
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_ChaperoneDataHasChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_ChaperoneDataHasChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_ChaperoneDataHasChanged"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_ChaperoneDataHasChanged
void Valve::VR::EVREventType::_set_VREvent_ChaperoneDataHasChanged(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_ChaperoneDataHasChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_ChaperoneDataHasChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_ChaperoneUniverseHasChanged
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_ChaperoneUniverseHasChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_ChaperoneUniverseHasChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_ChaperoneUniverseHasChanged"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_ChaperoneUniverseHasChanged
void Valve::VR::EVREventType::_set_VREvent_ChaperoneUniverseHasChanged(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_ChaperoneUniverseHasChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_ChaperoneUniverseHasChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_ChaperoneTempDataHasChanged
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_ChaperoneTempDataHasChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_ChaperoneTempDataHasChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_ChaperoneTempDataHasChanged"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_ChaperoneTempDataHasChanged
void Valve::VR::EVREventType::_set_VREvent_ChaperoneTempDataHasChanged(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_ChaperoneTempDataHasChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_ChaperoneTempDataHasChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_ChaperoneSettingsHaveChanged
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_ChaperoneSettingsHaveChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_ChaperoneSettingsHaveChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_ChaperoneSettingsHaveChanged"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_ChaperoneSettingsHaveChanged
void Valve::VR::EVREventType::_set_VREvent_ChaperoneSettingsHaveChanged(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_ChaperoneSettingsHaveChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_ChaperoneSettingsHaveChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_SeatedZeroPoseReset
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_SeatedZeroPoseReset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_SeatedZeroPoseReset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_SeatedZeroPoseReset"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_SeatedZeroPoseReset
void Valve::VR::EVREventType::_set_VREvent_SeatedZeroPoseReset(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_SeatedZeroPoseReset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_SeatedZeroPoseReset", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_AudioSettingsHaveChanged
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_AudioSettingsHaveChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_AudioSettingsHaveChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_AudioSettingsHaveChanged"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_AudioSettingsHaveChanged
void Valve::VR::EVREventType::_set_VREvent_AudioSettingsHaveChanged(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_AudioSettingsHaveChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_AudioSettingsHaveChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_BackgroundSettingHasChanged
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_BackgroundSettingHasChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_BackgroundSettingHasChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_BackgroundSettingHasChanged"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_BackgroundSettingHasChanged
void Valve::VR::EVREventType::_set_VREvent_BackgroundSettingHasChanged(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_BackgroundSettingHasChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_BackgroundSettingHasChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_CameraSettingsHaveChanged
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_CameraSettingsHaveChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_CameraSettingsHaveChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_CameraSettingsHaveChanged"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_CameraSettingsHaveChanged
void Valve::VR::EVREventType::_set_VREvent_CameraSettingsHaveChanged(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_CameraSettingsHaveChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_CameraSettingsHaveChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_ReprojectionSettingHasChanged
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_ReprojectionSettingHasChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_ReprojectionSettingHasChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_ReprojectionSettingHasChanged"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_ReprojectionSettingHasChanged
void Valve::VR::EVREventType::_set_VREvent_ReprojectionSettingHasChanged(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_ReprojectionSettingHasChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_ReprojectionSettingHasChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_ModelSkinSettingsHaveChanged
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_ModelSkinSettingsHaveChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_ModelSkinSettingsHaveChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_ModelSkinSettingsHaveChanged"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_ModelSkinSettingsHaveChanged
void Valve::VR::EVREventType::_set_VREvent_ModelSkinSettingsHaveChanged(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_ModelSkinSettingsHaveChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_ModelSkinSettingsHaveChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_EnvironmentSettingsHaveChanged
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_EnvironmentSettingsHaveChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_EnvironmentSettingsHaveChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_EnvironmentSettingsHaveChanged"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_EnvironmentSettingsHaveChanged
void Valve::VR::EVREventType::_set_VREvent_EnvironmentSettingsHaveChanged(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_EnvironmentSettingsHaveChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_EnvironmentSettingsHaveChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_PowerSettingsHaveChanged
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_PowerSettingsHaveChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_PowerSettingsHaveChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_PowerSettingsHaveChanged"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_PowerSettingsHaveChanged
void Valve::VR::EVREventType::_set_VREvent_PowerSettingsHaveChanged(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_PowerSettingsHaveChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_PowerSettingsHaveChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_EnableHomeAppSettingsHaveChanged
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_EnableHomeAppSettingsHaveChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_EnableHomeAppSettingsHaveChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_EnableHomeAppSettingsHaveChanged"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_EnableHomeAppSettingsHaveChanged
void Valve::VR::EVREventType::_set_VREvent_EnableHomeAppSettingsHaveChanged(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_EnableHomeAppSettingsHaveChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_EnableHomeAppSettingsHaveChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_SteamVRSectionSettingChanged
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_SteamVRSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_SteamVRSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_SteamVRSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_SteamVRSectionSettingChanged
void Valve::VR::EVREventType::_set_VREvent_SteamVRSectionSettingChanged(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_SteamVRSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_SteamVRSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_LighthouseSectionSettingChanged
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_LighthouseSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_LighthouseSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_LighthouseSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_LighthouseSectionSettingChanged
void Valve::VR::EVREventType::_set_VREvent_LighthouseSectionSettingChanged(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_LighthouseSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_LighthouseSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_NullSectionSettingChanged
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_NullSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_NullSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_NullSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_NullSectionSettingChanged
void Valve::VR::EVREventType::_set_VREvent_NullSectionSettingChanged(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_NullSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_NullSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_UserInterfaceSectionSettingChanged
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_UserInterfaceSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_UserInterfaceSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_UserInterfaceSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_UserInterfaceSectionSettingChanged
void Valve::VR::EVREventType::_set_VREvent_UserInterfaceSectionSettingChanged(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_UserInterfaceSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_UserInterfaceSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_NotificationsSectionSettingChanged
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_NotificationsSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_NotificationsSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_NotificationsSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_NotificationsSectionSettingChanged
void Valve::VR::EVREventType::_set_VREvent_NotificationsSectionSettingChanged(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_NotificationsSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_NotificationsSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_KeyboardSectionSettingChanged
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_KeyboardSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_KeyboardSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_KeyboardSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_KeyboardSectionSettingChanged
void Valve::VR::EVREventType::_set_VREvent_KeyboardSectionSettingChanged(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_KeyboardSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_KeyboardSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_PerfSectionSettingChanged
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_PerfSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_PerfSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_PerfSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_PerfSectionSettingChanged
void Valve::VR::EVREventType::_set_VREvent_PerfSectionSettingChanged(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_PerfSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_PerfSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_DashboardSectionSettingChanged
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_DashboardSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_DashboardSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_DashboardSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_DashboardSectionSettingChanged
void Valve::VR::EVREventType::_set_VREvent_DashboardSectionSettingChanged(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_DashboardSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_DashboardSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_WebInterfaceSectionSettingChanged
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_WebInterfaceSectionSettingChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_WebInterfaceSectionSettingChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_WebInterfaceSectionSettingChanged"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_WebInterfaceSectionSettingChanged
void Valve::VR::EVREventType::_set_VREvent_WebInterfaceSectionSettingChanged(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_WebInterfaceSectionSettingChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_WebInterfaceSectionSettingChanged", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_StatusUpdate
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_StatusUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_StatusUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_StatusUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_StatusUpdate
void Valve::VR::EVREventType::_set_VREvent_StatusUpdate(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_StatusUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_StatusUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_WebInterface_InstallDriverCompleted
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_WebInterface_InstallDriverCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_WebInterface_InstallDriverCompleted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_WebInterface_InstallDriverCompleted"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_WebInterface_InstallDriverCompleted
void Valve::VR::EVREventType::_set_VREvent_WebInterface_InstallDriverCompleted(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_WebInterface_InstallDriverCompleted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_WebInterface_InstallDriverCompleted", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_MCImageUpdated
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_MCImageUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_MCImageUpdated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_MCImageUpdated"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_MCImageUpdated
void Valve::VR::EVREventType::_set_VREvent_MCImageUpdated(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_MCImageUpdated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_MCImageUpdated", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_FirmwareUpdateStarted
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_FirmwareUpdateStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_FirmwareUpdateStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_FirmwareUpdateStarted"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_FirmwareUpdateStarted
void Valve::VR::EVREventType::_set_VREvent_FirmwareUpdateStarted(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_FirmwareUpdateStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_FirmwareUpdateStarted", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_FirmwareUpdateFinished
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_FirmwareUpdateFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_FirmwareUpdateFinished");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_FirmwareUpdateFinished"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_FirmwareUpdateFinished
void Valve::VR::EVREventType::_set_VREvent_FirmwareUpdateFinished(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_FirmwareUpdateFinished");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_FirmwareUpdateFinished", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_KeyboardClosed
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_KeyboardClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_KeyboardClosed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_KeyboardClosed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_KeyboardClosed
void Valve::VR::EVREventType::_set_VREvent_KeyboardClosed(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_KeyboardClosed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_KeyboardClosed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_KeyboardCharInput
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_KeyboardCharInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_KeyboardCharInput");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_KeyboardCharInput"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_KeyboardCharInput
void Valve::VR::EVREventType::_set_VREvent_KeyboardCharInput(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_KeyboardCharInput");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_KeyboardCharInput", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_KeyboardDone
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_KeyboardDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_KeyboardDone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_KeyboardDone"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_KeyboardDone
void Valve::VR::EVREventType::_set_VREvent_KeyboardDone(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_KeyboardDone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_KeyboardDone", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_ApplicationTransitionStarted
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_ApplicationTransitionStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_ApplicationTransitionStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_ApplicationTransitionStarted"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_ApplicationTransitionStarted
void Valve::VR::EVREventType::_set_VREvent_ApplicationTransitionStarted(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_ApplicationTransitionStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_ApplicationTransitionStarted", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_ApplicationTransitionAborted
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_ApplicationTransitionAborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_ApplicationTransitionAborted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_ApplicationTransitionAborted"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_ApplicationTransitionAborted
void Valve::VR::EVREventType::_set_VREvent_ApplicationTransitionAborted(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_ApplicationTransitionAborted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_ApplicationTransitionAborted", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_ApplicationTransitionNewAppStarted
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_ApplicationTransitionNewAppStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_ApplicationTransitionNewAppStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_ApplicationTransitionNewAppStarted"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_ApplicationTransitionNewAppStarted
void Valve::VR::EVREventType::_set_VREvent_ApplicationTransitionNewAppStarted(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_ApplicationTransitionNewAppStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_ApplicationTransitionNewAppStarted", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_ApplicationListUpdated
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_ApplicationListUpdated() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_ApplicationListUpdated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_ApplicationListUpdated"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_ApplicationListUpdated
void Valve::VR::EVREventType::_set_VREvent_ApplicationListUpdated(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_ApplicationListUpdated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_ApplicationListUpdated", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_ApplicationMimeTypeLoad
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_ApplicationMimeTypeLoad() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_ApplicationMimeTypeLoad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_ApplicationMimeTypeLoad"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_ApplicationMimeTypeLoad
void Valve::VR::EVREventType::_set_VREvent_ApplicationMimeTypeLoad(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_ApplicationMimeTypeLoad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_ApplicationMimeTypeLoad", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_ApplicationTransitionNewAppLaunchComplete
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_ApplicationTransitionNewAppLaunchComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_ApplicationTransitionNewAppLaunchComplete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_ApplicationTransitionNewAppLaunchComplete"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_ApplicationTransitionNewAppLaunchComplete
void Valve::VR::EVREventType::_set_VREvent_ApplicationTransitionNewAppLaunchComplete(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_ApplicationTransitionNewAppLaunchComplete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_ApplicationTransitionNewAppLaunchComplete", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_ProcessConnected
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_ProcessConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_ProcessConnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_ProcessConnected"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_ProcessConnected
void Valve::VR::EVREventType::_set_VREvent_ProcessConnected(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_ProcessConnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_ProcessConnected", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_ProcessDisconnected
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_ProcessDisconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_ProcessDisconnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_ProcessDisconnected"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_ProcessDisconnected
void Valve::VR::EVREventType::_set_VREvent_ProcessDisconnected(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_ProcessDisconnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_ProcessDisconnected", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_Compositor_MirrorWindowShown
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_Compositor_MirrorWindowShown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_Compositor_MirrorWindowShown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_Compositor_MirrorWindowShown"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_Compositor_MirrorWindowShown
void Valve::VR::EVREventType::_set_VREvent_Compositor_MirrorWindowShown(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_Compositor_MirrorWindowShown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_Compositor_MirrorWindowShown", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_Compositor_MirrorWindowHidden
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_Compositor_MirrorWindowHidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_Compositor_MirrorWindowHidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_Compositor_MirrorWindowHidden"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_Compositor_MirrorWindowHidden
void Valve::VR::EVREventType::_set_VREvent_Compositor_MirrorWindowHidden(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_Compositor_MirrorWindowHidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_Compositor_MirrorWindowHidden", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_Compositor_ChaperoneBoundsShown
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_Compositor_ChaperoneBoundsShown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_Compositor_ChaperoneBoundsShown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_Compositor_ChaperoneBoundsShown"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_Compositor_ChaperoneBoundsShown
void Valve::VR::EVREventType::_set_VREvent_Compositor_ChaperoneBoundsShown(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_Compositor_ChaperoneBoundsShown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_Compositor_ChaperoneBoundsShown", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_Compositor_ChaperoneBoundsHidden
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_Compositor_ChaperoneBoundsHidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_Compositor_ChaperoneBoundsHidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_Compositor_ChaperoneBoundsHidden"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_Compositor_ChaperoneBoundsHidden
void Valve::VR::EVREventType::_set_VREvent_Compositor_ChaperoneBoundsHidden(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_Compositor_ChaperoneBoundsHidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_Compositor_ChaperoneBoundsHidden", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_TrackedCamera_StartVideoStream
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_TrackedCamera_StartVideoStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_TrackedCamera_StartVideoStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_TrackedCamera_StartVideoStream"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_TrackedCamera_StartVideoStream
void Valve::VR::EVREventType::_set_VREvent_TrackedCamera_StartVideoStream(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_TrackedCamera_StartVideoStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_TrackedCamera_StartVideoStream", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_TrackedCamera_StopVideoStream
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_TrackedCamera_StopVideoStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_TrackedCamera_StopVideoStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_TrackedCamera_StopVideoStream"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_TrackedCamera_StopVideoStream
void Valve::VR::EVREventType::_set_VREvent_TrackedCamera_StopVideoStream(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_TrackedCamera_StopVideoStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_TrackedCamera_StopVideoStream", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_TrackedCamera_PauseVideoStream
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_TrackedCamera_PauseVideoStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_TrackedCamera_PauseVideoStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_TrackedCamera_PauseVideoStream"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_TrackedCamera_PauseVideoStream
void Valve::VR::EVREventType::_set_VREvent_TrackedCamera_PauseVideoStream(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_TrackedCamera_PauseVideoStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_TrackedCamera_PauseVideoStream", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_TrackedCamera_ResumeVideoStream
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_TrackedCamera_ResumeVideoStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_TrackedCamera_ResumeVideoStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_TrackedCamera_ResumeVideoStream"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_TrackedCamera_ResumeVideoStream
void Valve::VR::EVREventType::_set_VREvent_TrackedCamera_ResumeVideoStream(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_TrackedCamera_ResumeVideoStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_TrackedCamera_ResumeVideoStream", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_TrackedCamera_EditingSurface
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_TrackedCamera_EditingSurface() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_TrackedCamera_EditingSurface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_TrackedCamera_EditingSurface"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_TrackedCamera_EditingSurface
void Valve::VR::EVREventType::_set_VREvent_TrackedCamera_EditingSurface(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_TrackedCamera_EditingSurface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_TrackedCamera_EditingSurface", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_PerformanceTest_EnableCapture
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_PerformanceTest_EnableCapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_PerformanceTest_EnableCapture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_PerformanceTest_EnableCapture"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_PerformanceTest_EnableCapture
void Valve::VR::EVREventType::_set_VREvent_PerformanceTest_EnableCapture(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_PerformanceTest_EnableCapture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_PerformanceTest_EnableCapture", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_PerformanceTest_DisableCapture
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_PerformanceTest_DisableCapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_PerformanceTest_DisableCapture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_PerformanceTest_DisableCapture"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_PerformanceTest_DisableCapture
void Valve::VR::EVREventType::_set_VREvent_PerformanceTest_DisableCapture(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_PerformanceTest_DisableCapture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_PerformanceTest_DisableCapture", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_PerformanceTest_FidelityLevel
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_PerformanceTest_FidelityLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_PerformanceTest_FidelityLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_PerformanceTest_FidelityLevel"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_PerformanceTest_FidelityLevel
void Valve::VR::EVREventType::_set_VREvent_PerformanceTest_FidelityLevel(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_PerformanceTest_FidelityLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_PerformanceTest_FidelityLevel", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_MessageOverlay_Closed
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_MessageOverlay_Closed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_MessageOverlay_Closed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_MessageOverlay_Closed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_MessageOverlay_Closed
void Valve::VR::EVREventType::_set_VREvent_MessageOverlay_Closed(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_MessageOverlay_Closed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_MessageOverlay_Closed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_MessageOverlayCloseRequested
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_MessageOverlayCloseRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_MessageOverlayCloseRequested");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_MessageOverlayCloseRequested"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_MessageOverlayCloseRequested
void Valve::VR::EVREventType::_set_VREvent_MessageOverlayCloseRequested(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_MessageOverlayCloseRequested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_MessageOverlayCloseRequested", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_Input_HapticVibration
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_Input_HapticVibration() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_Input_HapticVibration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_Input_HapticVibration"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_Input_HapticVibration
void Valve::VR::EVREventType::_set_VREvent_Input_HapticVibration(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_Input_HapticVibration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_Input_HapticVibration", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_VendorSpecific_Reserved_Start
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_VendorSpecific_Reserved_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_VendorSpecific_Reserved_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_VendorSpecific_Reserved_Start"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_VendorSpecific_Reserved_Start
void Valve::VR::EVREventType::_set_VREvent_VendorSpecific_Reserved_Start(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_VendorSpecific_Reserved_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_VendorSpecific_Reserved_Start", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVREventType VREvent_VendorSpecific_Reserved_End
Valve::VR::EVREventType Valve::VR::EVREventType::_get_VREvent_VendorSpecific_Reserved_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_get_VREvent_VendorSpecific_Reserved_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVREventType>("Valve.VR", "EVREventType", "VREvent_VendorSpecific_Reserved_End"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVREventType VREvent_VendorSpecific_Reserved_End
void Valve::VR::EVREventType::_set_VREvent_VendorSpecific_Reserved_End(Valve::VR::EVREventType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::_set_VREvent_VendorSpecific_Reserved_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVREventType", "VREvent_VendorSpecific_Reserved_End", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EVREventType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVREventType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EDeviceActivityLevel
#include "Valve/VR/EDeviceActivityLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EDeviceActivityLevel k_EDeviceActivityLevel_Unknown
Valve::VR::EDeviceActivityLevel Valve::VR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EDeviceActivityLevel>("Valve.VR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EDeviceActivityLevel k_EDeviceActivityLevel_Unknown
void Valve::VR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_Unknown(Valve::VR::EDeviceActivityLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EDeviceActivityLevel k_EDeviceActivityLevel_Idle
Valve::VR::EDeviceActivityLevel Valve::VR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_Idle() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_Idle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EDeviceActivityLevel>("Valve.VR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_Idle"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EDeviceActivityLevel k_EDeviceActivityLevel_Idle
void Valve::VR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_Idle(Valve::VR::EDeviceActivityLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_Idle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_Idle", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EDeviceActivityLevel k_EDeviceActivityLevel_UserInteraction
Valve::VR::EDeviceActivityLevel Valve::VR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_UserInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_UserInteraction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EDeviceActivityLevel>("Valve.VR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_UserInteraction"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EDeviceActivityLevel k_EDeviceActivityLevel_UserInteraction
void Valve::VR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_UserInteraction(Valve::VR::EDeviceActivityLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_UserInteraction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_UserInteraction", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EDeviceActivityLevel k_EDeviceActivityLevel_UserInteraction_Timeout
Valve::VR::EDeviceActivityLevel Valve::VR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_UserInteraction_Timeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_UserInteraction_Timeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EDeviceActivityLevel>("Valve.VR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_UserInteraction_Timeout"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EDeviceActivityLevel k_EDeviceActivityLevel_UserInteraction_Timeout
void Valve::VR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_UserInteraction_Timeout(Valve::VR::EDeviceActivityLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_UserInteraction_Timeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_UserInteraction_Timeout", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EDeviceActivityLevel k_EDeviceActivityLevel_Standby
Valve::VR::EDeviceActivityLevel Valve::VR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_Standby() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EDeviceActivityLevel::_get_k_EDeviceActivityLevel_Standby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EDeviceActivityLevel>("Valve.VR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_Standby"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EDeviceActivityLevel k_EDeviceActivityLevel_Standby
void Valve::VR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_Standby(Valve::VR::EDeviceActivityLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EDeviceActivityLevel::_set_k_EDeviceActivityLevel_Standby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EDeviceActivityLevel", "k_EDeviceActivityLevel_Standby", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EDeviceActivityLevel::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EDeviceActivityLevel::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EVRButtonId
#include "Valve/VR/EVRButtonId.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRButtonId k_EButton_System
Valve::VR::EVRButtonId Valve::VR::EVRButtonId::_get_k_EButton_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_get_k_EButton_System");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRButtonId>("Valve.VR", "EVRButtonId", "k_EButton_System"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRButtonId k_EButton_System
void Valve::VR::EVRButtonId::_set_k_EButton_System(Valve::VR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_set_k_EButton_System");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRButtonId", "k_EButton_System", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRButtonId k_EButton_ApplicationMenu
Valve::VR::EVRButtonId Valve::VR::EVRButtonId::_get_k_EButton_ApplicationMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_get_k_EButton_ApplicationMenu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRButtonId>("Valve.VR", "EVRButtonId", "k_EButton_ApplicationMenu"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRButtonId k_EButton_ApplicationMenu
void Valve::VR::EVRButtonId::_set_k_EButton_ApplicationMenu(Valve::VR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_set_k_EButton_ApplicationMenu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRButtonId", "k_EButton_ApplicationMenu", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRButtonId k_EButton_Grip
Valve::VR::EVRButtonId Valve::VR::EVRButtonId::_get_k_EButton_Grip() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_get_k_EButton_Grip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRButtonId>("Valve.VR", "EVRButtonId", "k_EButton_Grip"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRButtonId k_EButton_Grip
void Valve::VR::EVRButtonId::_set_k_EButton_Grip(Valve::VR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_set_k_EButton_Grip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRButtonId", "k_EButton_Grip", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRButtonId k_EButton_DPad_Left
Valve::VR::EVRButtonId Valve::VR::EVRButtonId::_get_k_EButton_DPad_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_get_k_EButton_DPad_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRButtonId>("Valve.VR", "EVRButtonId", "k_EButton_DPad_Left"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRButtonId k_EButton_DPad_Left
void Valve::VR::EVRButtonId::_set_k_EButton_DPad_Left(Valve::VR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_set_k_EButton_DPad_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRButtonId", "k_EButton_DPad_Left", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRButtonId k_EButton_DPad_Up
Valve::VR::EVRButtonId Valve::VR::EVRButtonId::_get_k_EButton_DPad_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_get_k_EButton_DPad_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRButtonId>("Valve.VR", "EVRButtonId", "k_EButton_DPad_Up"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRButtonId k_EButton_DPad_Up
void Valve::VR::EVRButtonId::_set_k_EButton_DPad_Up(Valve::VR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_set_k_EButton_DPad_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRButtonId", "k_EButton_DPad_Up", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRButtonId k_EButton_DPad_Right
Valve::VR::EVRButtonId Valve::VR::EVRButtonId::_get_k_EButton_DPad_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_get_k_EButton_DPad_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRButtonId>("Valve.VR", "EVRButtonId", "k_EButton_DPad_Right"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRButtonId k_EButton_DPad_Right
void Valve::VR::EVRButtonId::_set_k_EButton_DPad_Right(Valve::VR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_set_k_EButton_DPad_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRButtonId", "k_EButton_DPad_Right", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRButtonId k_EButton_DPad_Down
Valve::VR::EVRButtonId Valve::VR::EVRButtonId::_get_k_EButton_DPad_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_get_k_EButton_DPad_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRButtonId>("Valve.VR", "EVRButtonId", "k_EButton_DPad_Down"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRButtonId k_EButton_DPad_Down
void Valve::VR::EVRButtonId::_set_k_EButton_DPad_Down(Valve::VR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_set_k_EButton_DPad_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRButtonId", "k_EButton_DPad_Down", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRButtonId k_EButton_A
Valve::VR::EVRButtonId Valve::VR::EVRButtonId::_get_k_EButton_A() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_get_k_EButton_A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRButtonId>("Valve.VR", "EVRButtonId", "k_EButton_A"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRButtonId k_EButton_A
void Valve::VR::EVRButtonId::_set_k_EButton_A(Valve::VR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_set_k_EButton_A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRButtonId", "k_EButton_A", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRButtonId k_EButton_ProximitySensor
Valve::VR::EVRButtonId Valve::VR::EVRButtonId::_get_k_EButton_ProximitySensor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_get_k_EButton_ProximitySensor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRButtonId>("Valve.VR", "EVRButtonId", "k_EButton_ProximitySensor"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRButtonId k_EButton_ProximitySensor
void Valve::VR::EVRButtonId::_set_k_EButton_ProximitySensor(Valve::VR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_set_k_EButton_ProximitySensor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRButtonId", "k_EButton_ProximitySensor", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRButtonId k_EButton_Axis0
Valve::VR::EVRButtonId Valve::VR::EVRButtonId::_get_k_EButton_Axis0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_get_k_EButton_Axis0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRButtonId>("Valve.VR", "EVRButtonId", "k_EButton_Axis0"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRButtonId k_EButton_Axis0
void Valve::VR::EVRButtonId::_set_k_EButton_Axis0(Valve::VR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_set_k_EButton_Axis0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRButtonId", "k_EButton_Axis0", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRButtonId k_EButton_Axis1
Valve::VR::EVRButtonId Valve::VR::EVRButtonId::_get_k_EButton_Axis1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_get_k_EButton_Axis1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRButtonId>("Valve.VR", "EVRButtonId", "k_EButton_Axis1"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRButtonId k_EButton_Axis1
void Valve::VR::EVRButtonId::_set_k_EButton_Axis1(Valve::VR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_set_k_EButton_Axis1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRButtonId", "k_EButton_Axis1", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRButtonId k_EButton_Axis2
Valve::VR::EVRButtonId Valve::VR::EVRButtonId::_get_k_EButton_Axis2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_get_k_EButton_Axis2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRButtonId>("Valve.VR", "EVRButtonId", "k_EButton_Axis2"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRButtonId k_EButton_Axis2
void Valve::VR::EVRButtonId::_set_k_EButton_Axis2(Valve::VR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_set_k_EButton_Axis2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRButtonId", "k_EButton_Axis2", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRButtonId k_EButton_Axis3
Valve::VR::EVRButtonId Valve::VR::EVRButtonId::_get_k_EButton_Axis3() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_get_k_EButton_Axis3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRButtonId>("Valve.VR", "EVRButtonId", "k_EButton_Axis3"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRButtonId k_EButton_Axis3
void Valve::VR::EVRButtonId::_set_k_EButton_Axis3(Valve::VR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_set_k_EButton_Axis3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRButtonId", "k_EButton_Axis3", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRButtonId k_EButton_Axis4
Valve::VR::EVRButtonId Valve::VR::EVRButtonId::_get_k_EButton_Axis4() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_get_k_EButton_Axis4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRButtonId>("Valve.VR", "EVRButtonId", "k_EButton_Axis4"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRButtonId k_EButton_Axis4
void Valve::VR::EVRButtonId::_set_k_EButton_Axis4(Valve::VR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_set_k_EButton_Axis4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRButtonId", "k_EButton_Axis4", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRButtonId k_EButton_SteamVR_Touchpad
Valve::VR::EVRButtonId Valve::VR::EVRButtonId::_get_k_EButton_SteamVR_Touchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_get_k_EButton_SteamVR_Touchpad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRButtonId>("Valve.VR", "EVRButtonId", "k_EButton_SteamVR_Touchpad"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRButtonId k_EButton_SteamVR_Touchpad
void Valve::VR::EVRButtonId::_set_k_EButton_SteamVR_Touchpad(Valve::VR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_set_k_EButton_SteamVR_Touchpad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRButtonId", "k_EButton_SteamVR_Touchpad", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRButtonId k_EButton_SteamVR_Trigger
Valve::VR::EVRButtonId Valve::VR::EVRButtonId::_get_k_EButton_SteamVR_Trigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_get_k_EButton_SteamVR_Trigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRButtonId>("Valve.VR", "EVRButtonId", "k_EButton_SteamVR_Trigger"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRButtonId k_EButton_SteamVR_Trigger
void Valve::VR::EVRButtonId::_set_k_EButton_SteamVR_Trigger(Valve::VR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_set_k_EButton_SteamVR_Trigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRButtonId", "k_EButton_SteamVR_Trigger", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRButtonId k_EButton_Dashboard_Back
Valve::VR::EVRButtonId Valve::VR::EVRButtonId::_get_k_EButton_Dashboard_Back() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_get_k_EButton_Dashboard_Back");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRButtonId>("Valve.VR", "EVRButtonId", "k_EButton_Dashboard_Back"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRButtonId k_EButton_Dashboard_Back
void Valve::VR::EVRButtonId::_set_k_EButton_Dashboard_Back(Valve::VR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_set_k_EButton_Dashboard_Back");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRButtonId", "k_EButton_Dashboard_Back", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRButtonId k_EButton_Max
Valve::VR::EVRButtonId Valve::VR::EVRButtonId::_get_k_EButton_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_get_k_EButton_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRButtonId>("Valve.VR", "EVRButtonId", "k_EButton_Max"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRButtonId k_EButton_Max
void Valve::VR::EVRButtonId::_set_k_EButton_Max(Valve::VR::EVRButtonId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::_set_k_EButton_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRButtonId", "k_EButton_Max", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EVRButtonId::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRButtonId::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EVRMouseButton
#include "Valve/VR/EVRMouseButton.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRMouseButton Left
Valve::VR::EVRMouseButton Valve::VR::EVRMouseButton::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRMouseButton::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRMouseButton>("Valve.VR", "EVRMouseButton", "Left"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRMouseButton Left
void Valve::VR::EVRMouseButton::_set_Left(Valve::VR::EVRMouseButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRMouseButton::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRMouseButton", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRMouseButton Right
Valve::VR::EVRMouseButton Valve::VR::EVRMouseButton::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRMouseButton::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRMouseButton>("Valve.VR", "EVRMouseButton", "Right"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRMouseButton Right
void Valve::VR::EVRMouseButton::_set_Right(Valve::VR::EVRMouseButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRMouseButton::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRMouseButton", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRMouseButton Middle
Valve::VR::EVRMouseButton Valve::VR::EVRMouseButton::_get_Middle() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRMouseButton::_get_Middle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRMouseButton>("Valve.VR", "EVRMouseButton", "Middle"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRMouseButton Middle
void Valve::VR::EVRMouseButton::_set_Middle(Valve::VR::EVRMouseButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRMouseButton::_set_Middle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRMouseButton", "Middle", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EVRMouseButton::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRMouseButton::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EDualAnalogWhich
#include "Valve/VR/EDualAnalogWhich.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EDualAnalogWhich k_EDualAnalog_Left
Valve::VR::EDualAnalogWhich Valve::VR::EDualAnalogWhich::_get_k_EDualAnalog_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EDualAnalogWhich::_get_k_EDualAnalog_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EDualAnalogWhich>("Valve.VR", "EDualAnalogWhich", "k_EDualAnalog_Left"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EDualAnalogWhich k_EDualAnalog_Left
void Valve::VR::EDualAnalogWhich::_set_k_EDualAnalog_Left(Valve::VR::EDualAnalogWhich value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EDualAnalogWhich::_set_k_EDualAnalog_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EDualAnalogWhich", "k_EDualAnalog_Left", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EDualAnalogWhich k_EDualAnalog_Right
Valve::VR::EDualAnalogWhich Valve::VR::EDualAnalogWhich::_get_k_EDualAnalog_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EDualAnalogWhich::_get_k_EDualAnalog_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EDualAnalogWhich>("Valve.VR", "EDualAnalogWhich", "k_EDualAnalog_Right"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EDualAnalogWhich k_EDualAnalog_Right
void Valve::VR::EDualAnalogWhich::_set_k_EDualAnalog_Right(Valve::VR::EDualAnalogWhich value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EDualAnalogWhich::_set_k_EDualAnalog_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EDualAnalogWhich", "k_EDualAnalog_Right", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EDualAnalogWhich::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EDualAnalogWhich::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EVRInputError
#include "Valve/VR/EVRInputError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInputError None
Valve::VR::EVRInputError Valve::VR::EVRInputError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInputError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInputError>("Valve.VR", "EVRInputError", "None"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInputError None
void Valve::VR::EVRInputError::_set_None(Valve::VR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInputError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInputError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInputError NameNotFound
Valve::VR::EVRInputError Valve::VR::EVRInputError::_get_NameNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInputError::_get_NameNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInputError>("Valve.VR", "EVRInputError", "NameNotFound"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInputError NameNotFound
void Valve::VR::EVRInputError::_set_NameNotFound(Valve::VR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInputError::_set_NameNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInputError", "NameNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInputError WrongType
Valve::VR::EVRInputError Valve::VR::EVRInputError::_get_WrongType() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInputError::_get_WrongType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInputError>("Valve.VR", "EVRInputError", "WrongType"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInputError WrongType
void Valve::VR::EVRInputError::_set_WrongType(Valve::VR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInputError::_set_WrongType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInputError", "WrongType", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInputError InvalidHandle
Valve::VR::EVRInputError Valve::VR::EVRInputError::_get_InvalidHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInputError::_get_InvalidHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInputError>("Valve.VR", "EVRInputError", "InvalidHandle"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInputError InvalidHandle
void Valve::VR::EVRInputError::_set_InvalidHandle(Valve::VR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInputError::_set_InvalidHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInputError", "InvalidHandle", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInputError InvalidParam
Valve::VR::EVRInputError Valve::VR::EVRInputError::_get_InvalidParam() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInputError::_get_InvalidParam");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInputError>("Valve.VR", "EVRInputError", "InvalidParam"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInputError InvalidParam
void Valve::VR::EVRInputError::_set_InvalidParam(Valve::VR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInputError::_set_InvalidParam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInputError", "InvalidParam", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInputError NoSteam
Valve::VR::EVRInputError Valve::VR::EVRInputError::_get_NoSteam() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInputError::_get_NoSteam");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInputError>("Valve.VR", "EVRInputError", "NoSteam"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInputError NoSteam
void Valve::VR::EVRInputError::_set_NoSteam(Valve::VR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInputError::_set_NoSteam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInputError", "NoSteam", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInputError MaxCapacityReached
Valve::VR::EVRInputError Valve::VR::EVRInputError::_get_MaxCapacityReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInputError::_get_MaxCapacityReached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInputError>("Valve.VR", "EVRInputError", "MaxCapacityReached"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInputError MaxCapacityReached
void Valve::VR::EVRInputError::_set_MaxCapacityReached(Valve::VR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInputError::_set_MaxCapacityReached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInputError", "MaxCapacityReached", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInputError IPCError
Valve::VR::EVRInputError Valve::VR::EVRInputError::_get_IPCError() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInputError::_get_IPCError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInputError>("Valve.VR", "EVRInputError", "IPCError"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInputError IPCError
void Valve::VR::EVRInputError::_set_IPCError(Valve::VR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInputError::_set_IPCError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInputError", "IPCError", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInputError NoActiveActionSet
Valve::VR::EVRInputError Valve::VR::EVRInputError::_get_NoActiveActionSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInputError::_get_NoActiveActionSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInputError>("Valve.VR", "EVRInputError", "NoActiveActionSet"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInputError NoActiveActionSet
void Valve::VR::EVRInputError::_set_NoActiveActionSet(Valve::VR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInputError::_set_NoActiveActionSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInputError", "NoActiveActionSet", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInputError InvalidDevice
Valve::VR::EVRInputError Valve::VR::EVRInputError::_get_InvalidDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInputError::_get_InvalidDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInputError>("Valve.VR", "EVRInputError", "InvalidDevice"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInputError InvalidDevice
void Valve::VR::EVRInputError::_set_InvalidDevice(Valve::VR::EVRInputError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInputError::_set_InvalidDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInputError", "InvalidDevice", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EVRInputError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInputError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EHiddenAreaMeshType
#include "Valve/VR/EHiddenAreaMeshType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EHiddenAreaMeshType k_eHiddenAreaMesh_Standard
Valve::VR::EHiddenAreaMeshType Valve::VR::EHiddenAreaMeshType::_get_k_eHiddenAreaMesh_Standard() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EHiddenAreaMeshType::_get_k_eHiddenAreaMesh_Standard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EHiddenAreaMeshType>("Valve.VR", "EHiddenAreaMeshType", "k_eHiddenAreaMesh_Standard"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EHiddenAreaMeshType k_eHiddenAreaMesh_Standard
void Valve::VR::EHiddenAreaMeshType::_set_k_eHiddenAreaMesh_Standard(Valve::VR::EHiddenAreaMeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EHiddenAreaMeshType::_set_k_eHiddenAreaMesh_Standard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EHiddenAreaMeshType", "k_eHiddenAreaMesh_Standard", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EHiddenAreaMeshType k_eHiddenAreaMesh_Inverse
Valve::VR::EHiddenAreaMeshType Valve::VR::EHiddenAreaMeshType::_get_k_eHiddenAreaMesh_Inverse() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EHiddenAreaMeshType::_get_k_eHiddenAreaMesh_Inverse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EHiddenAreaMeshType>("Valve.VR", "EHiddenAreaMeshType", "k_eHiddenAreaMesh_Inverse"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EHiddenAreaMeshType k_eHiddenAreaMesh_Inverse
void Valve::VR::EHiddenAreaMeshType::_set_k_eHiddenAreaMesh_Inverse(Valve::VR::EHiddenAreaMeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EHiddenAreaMeshType::_set_k_eHiddenAreaMesh_Inverse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EHiddenAreaMeshType", "k_eHiddenAreaMesh_Inverse", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EHiddenAreaMeshType k_eHiddenAreaMesh_LineLoop
Valve::VR::EHiddenAreaMeshType Valve::VR::EHiddenAreaMeshType::_get_k_eHiddenAreaMesh_LineLoop() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EHiddenAreaMeshType::_get_k_eHiddenAreaMesh_LineLoop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EHiddenAreaMeshType>("Valve.VR", "EHiddenAreaMeshType", "k_eHiddenAreaMesh_LineLoop"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EHiddenAreaMeshType k_eHiddenAreaMesh_LineLoop
void Valve::VR::EHiddenAreaMeshType::_set_k_eHiddenAreaMesh_LineLoop(Valve::VR::EHiddenAreaMeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EHiddenAreaMeshType::_set_k_eHiddenAreaMesh_LineLoop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EHiddenAreaMeshType", "k_eHiddenAreaMesh_LineLoop", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EHiddenAreaMeshType k_eHiddenAreaMesh_Max
Valve::VR::EHiddenAreaMeshType Valve::VR::EHiddenAreaMeshType::_get_k_eHiddenAreaMesh_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EHiddenAreaMeshType::_get_k_eHiddenAreaMesh_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EHiddenAreaMeshType>("Valve.VR", "EHiddenAreaMeshType", "k_eHiddenAreaMesh_Max"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EHiddenAreaMeshType k_eHiddenAreaMesh_Max
void Valve::VR::EHiddenAreaMeshType::_set_k_eHiddenAreaMesh_Max(Valve::VR::EHiddenAreaMeshType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EHiddenAreaMeshType::_set_k_eHiddenAreaMesh_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EHiddenAreaMeshType", "k_eHiddenAreaMesh_Max", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EHiddenAreaMeshType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EHiddenAreaMeshType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EVRControllerAxisType
#include "Valve/VR/EVRControllerAxisType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRControllerAxisType k_eControllerAxis_None
Valve::VR::EVRControllerAxisType Valve::VR::EVRControllerAxisType::_get_k_eControllerAxis_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRControllerAxisType::_get_k_eControllerAxis_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRControllerAxisType>("Valve.VR", "EVRControllerAxisType", "k_eControllerAxis_None"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRControllerAxisType k_eControllerAxis_None
void Valve::VR::EVRControllerAxisType::_set_k_eControllerAxis_None(Valve::VR::EVRControllerAxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRControllerAxisType::_set_k_eControllerAxis_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRControllerAxisType", "k_eControllerAxis_None", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRControllerAxisType k_eControllerAxis_TrackPad
Valve::VR::EVRControllerAxisType Valve::VR::EVRControllerAxisType::_get_k_eControllerAxis_TrackPad() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRControllerAxisType::_get_k_eControllerAxis_TrackPad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRControllerAxisType>("Valve.VR", "EVRControllerAxisType", "k_eControllerAxis_TrackPad"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRControllerAxisType k_eControllerAxis_TrackPad
void Valve::VR::EVRControllerAxisType::_set_k_eControllerAxis_TrackPad(Valve::VR::EVRControllerAxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRControllerAxisType::_set_k_eControllerAxis_TrackPad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRControllerAxisType", "k_eControllerAxis_TrackPad", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRControllerAxisType k_eControllerAxis_Joystick
Valve::VR::EVRControllerAxisType Valve::VR::EVRControllerAxisType::_get_k_eControllerAxis_Joystick() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRControllerAxisType::_get_k_eControllerAxis_Joystick");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRControllerAxisType>("Valve.VR", "EVRControllerAxisType", "k_eControllerAxis_Joystick"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRControllerAxisType k_eControllerAxis_Joystick
void Valve::VR::EVRControllerAxisType::_set_k_eControllerAxis_Joystick(Valve::VR::EVRControllerAxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRControllerAxisType::_set_k_eControllerAxis_Joystick");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRControllerAxisType", "k_eControllerAxis_Joystick", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRControllerAxisType k_eControllerAxis_Trigger
Valve::VR::EVRControllerAxisType Valve::VR::EVRControllerAxisType::_get_k_eControllerAxis_Trigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRControllerAxisType::_get_k_eControllerAxis_Trigger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRControllerAxisType>("Valve.VR", "EVRControllerAxisType", "k_eControllerAxis_Trigger"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRControllerAxisType k_eControllerAxis_Trigger
void Valve::VR::EVRControllerAxisType::_set_k_eControllerAxis_Trigger(Valve::VR::EVRControllerAxisType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRControllerAxisType::_set_k_eControllerAxis_Trigger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRControllerAxisType", "k_eControllerAxis_Trigger", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EVRControllerAxisType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRControllerAxisType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EVRControllerEventOutputType
#include "Valve/VR/EVRControllerEventOutputType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRControllerEventOutputType ControllerEventOutput_OSEvents
Valve::VR::EVRControllerEventOutputType Valve::VR::EVRControllerEventOutputType::_get_ControllerEventOutput_OSEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRControllerEventOutputType::_get_ControllerEventOutput_OSEvents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRControllerEventOutputType>("Valve.VR", "EVRControllerEventOutputType", "ControllerEventOutput_OSEvents"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRControllerEventOutputType ControllerEventOutput_OSEvents
void Valve::VR::EVRControllerEventOutputType::_set_ControllerEventOutput_OSEvents(Valve::VR::EVRControllerEventOutputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRControllerEventOutputType::_set_ControllerEventOutput_OSEvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRControllerEventOutputType", "ControllerEventOutput_OSEvents", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRControllerEventOutputType ControllerEventOutput_VREvents
Valve::VR::EVRControllerEventOutputType Valve::VR::EVRControllerEventOutputType::_get_ControllerEventOutput_VREvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRControllerEventOutputType::_get_ControllerEventOutput_VREvents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRControllerEventOutputType>("Valve.VR", "EVRControllerEventOutputType", "ControllerEventOutput_VREvents"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRControllerEventOutputType ControllerEventOutput_VREvents
void Valve::VR::EVRControllerEventOutputType::_set_ControllerEventOutput_VREvents(Valve::VR::EVRControllerEventOutputType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRControllerEventOutputType::_set_ControllerEventOutput_VREvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRControllerEventOutputType", "ControllerEventOutput_VREvents", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EVRControllerEventOutputType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRControllerEventOutputType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.ECollisionBoundsStyle
#include "Valve/VR/ECollisionBoundsStyle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_BEGINNER
Valve::VR::ECollisionBoundsStyle Valve::VR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_BEGINNER() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_BEGINNER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ECollisionBoundsStyle>("Valve.VR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_BEGINNER"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_BEGINNER
void Valve::VR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_BEGINNER(Valve::VR::ECollisionBoundsStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_BEGINNER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_BEGINNER", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_INTERMEDIATE
Valve::VR::ECollisionBoundsStyle Valve::VR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_INTERMEDIATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_INTERMEDIATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ECollisionBoundsStyle>("Valve.VR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_INTERMEDIATE"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_INTERMEDIATE
void Valve::VR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_INTERMEDIATE(Valve::VR::ECollisionBoundsStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_INTERMEDIATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_INTERMEDIATE", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_SQUARES
Valve::VR::ECollisionBoundsStyle Valve::VR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_SQUARES() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_SQUARES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ECollisionBoundsStyle>("Valve.VR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_SQUARES"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_SQUARES
void Valve::VR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_SQUARES(Valve::VR::ECollisionBoundsStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_SQUARES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_SQUARES", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_ADVANCED
Valve::VR::ECollisionBoundsStyle Valve::VR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_ADVANCED() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_ADVANCED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ECollisionBoundsStyle>("Valve.VR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_ADVANCED"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_ADVANCED
void Valve::VR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_ADVANCED(Valve::VR::ECollisionBoundsStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_ADVANCED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_ADVANCED", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_NONE
Valve::VR::ECollisionBoundsStyle Valve::VR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_NONE() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_NONE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ECollisionBoundsStyle>("Valve.VR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_NONE"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_NONE
void Valve::VR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_NONE(Valve::VR::ECollisionBoundsStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_NONE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_NONE", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_COUNT
Valve::VR::ECollisionBoundsStyle Valve::VR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_COUNT() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ECollisionBoundsStyle::_get_COLLISION_BOUNDS_STYLE_COUNT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ECollisionBoundsStyle>("Valve.VR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_COUNT"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ECollisionBoundsStyle COLLISION_BOUNDS_STYLE_COUNT
void Valve::VR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_COUNT(Valve::VR::ECollisionBoundsStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ECollisionBoundsStyle::_set_COLLISION_BOUNDS_STYLE_COUNT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ECollisionBoundsStyle", "COLLISION_BOUNDS_STYLE_COUNT", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::ECollisionBoundsStyle::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ECollisionBoundsStyle::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EVROverlayError
#include "Valve/VR/EVROverlayError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVROverlayError None
Valve::VR::EVROverlayError Valve::VR::EVROverlayError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVROverlayError>("Valve.VR", "EVROverlayError", "None"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVROverlayError None
void Valve::VR::EVROverlayError::_set_None(Valve::VR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVROverlayError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVROverlayError UnknownOverlay
Valve::VR::EVROverlayError Valve::VR::EVROverlayError::_get_UnknownOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_get_UnknownOverlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVROverlayError>("Valve.VR", "EVROverlayError", "UnknownOverlay"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVROverlayError UnknownOverlay
void Valve::VR::EVROverlayError::_set_UnknownOverlay(Valve::VR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_set_UnknownOverlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVROverlayError", "UnknownOverlay", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVROverlayError InvalidHandle
Valve::VR::EVROverlayError Valve::VR::EVROverlayError::_get_InvalidHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_get_InvalidHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVROverlayError>("Valve.VR", "EVROverlayError", "InvalidHandle"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVROverlayError InvalidHandle
void Valve::VR::EVROverlayError::_set_InvalidHandle(Valve::VR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_set_InvalidHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVROverlayError", "InvalidHandle", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVROverlayError PermissionDenied
Valve::VR::EVROverlayError Valve::VR::EVROverlayError::_get_PermissionDenied() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_get_PermissionDenied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVROverlayError>("Valve.VR", "EVROverlayError", "PermissionDenied"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVROverlayError PermissionDenied
void Valve::VR::EVROverlayError::_set_PermissionDenied(Valve::VR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_set_PermissionDenied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVROverlayError", "PermissionDenied", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVROverlayError OverlayLimitExceeded
Valve::VR::EVROverlayError Valve::VR::EVROverlayError::_get_OverlayLimitExceeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_get_OverlayLimitExceeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVROverlayError>("Valve.VR", "EVROverlayError", "OverlayLimitExceeded"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVROverlayError OverlayLimitExceeded
void Valve::VR::EVROverlayError::_set_OverlayLimitExceeded(Valve::VR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_set_OverlayLimitExceeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVROverlayError", "OverlayLimitExceeded", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVROverlayError WrongVisibilityType
Valve::VR::EVROverlayError Valve::VR::EVROverlayError::_get_WrongVisibilityType() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_get_WrongVisibilityType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVROverlayError>("Valve.VR", "EVROverlayError", "WrongVisibilityType"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVROverlayError WrongVisibilityType
void Valve::VR::EVROverlayError::_set_WrongVisibilityType(Valve::VR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_set_WrongVisibilityType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVROverlayError", "WrongVisibilityType", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVROverlayError KeyTooLong
Valve::VR::EVROverlayError Valve::VR::EVROverlayError::_get_KeyTooLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_get_KeyTooLong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVROverlayError>("Valve.VR", "EVROverlayError", "KeyTooLong"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVROverlayError KeyTooLong
void Valve::VR::EVROverlayError::_set_KeyTooLong(Valve::VR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_set_KeyTooLong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVROverlayError", "KeyTooLong", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVROverlayError NameTooLong
Valve::VR::EVROverlayError Valve::VR::EVROverlayError::_get_NameTooLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_get_NameTooLong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVROverlayError>("Valve.VR", "EVROverlayError", "NameTooLong"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVROverlayError NameTooLong
void Valve::VR::EVROverlayError::_set_NameTooLong(Valve::VR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_set_NameTooLong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVROverlayError", "NameTooLong", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVROverlayError KeyInUse
Valve::VR::EVROverlayError Valve::VR::EVROverlayError::_get_KeyInUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_get_KeyInUse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVROverlayError>("Valve.VR", "EVROverlayError", "KeyInUse"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVROverlayError KeyInUse
void Valve::VR::EVROverlayError::_set_KeyInUse(Valve::VR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_set_KeyInUse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVROverlayError", "KeyInUse", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVROverlayError WrongTransformType
Valve::VR::EVROverlayError Valve::VR::EVROverlayError::_get_WrongTransformType() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_get_WrongTransformType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVROverlayError>("Valve.VR", "EVROverlayError", "WrongTransformType"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVROverlayError WrongTransformType
void Valve::VR::EVROverlayError::_set_WrongTransformType(Valve::VR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_set_WrongTransformType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVROverlayError", "WrongTransformType", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVROverlayError InvalidTrackedDevice
Valve::VR::EVROverlayError Valve::VR::EVROverlayError::_get_InvalidTrackedDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_get_InvalidTrackedDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVROverlayError>("Valve.VR", "EVROverlayError", "InvalidTrackedDevice"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVROverlayError InvalidTrackedDevice
void Valve::VR::EVROverlayError::_set_InvalidTrackedDevice(Valve::VR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_set_InvalidTrackedDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVROverlayError", "InvalidTrackedDevice", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVROverlayError InvalidParameter
Valve::VR::EVROverlayError Valve::VR::EVROverlayError::_get_InvalidParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_get_InvalidParameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVROverlayError>("Valve.VR", "EVROverlayError", "InvalidParameter"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVROverlayError InvalidParameter
void Valve::VR::EVROverlayError::_set_InvalidParameter(Valve::VR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_set_InvalidParameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVROverlayError", "InvalidParameter", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVROverlayError ThumbnailCantBeDestroyed
Valve::VR::EVROverlayError Valve::VR::EVROverlayError::_get_ThumbnailCantBeDestroyed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_get_ThumbnailCantBeDestroyed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVROverlayError>("Valve.VR", "EVROverlayError", "ThumbnailCantBeDestroyed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVROverlayError ThumbnailCantBeDestroyed
void Valve::VR::EVROverlayError::_set_ThumbnailCantBeDestroyed(Valve::VR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_set_ThumbnailCantBeDestroyed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVROverlayError", "ThumbnailCantBeDestroyed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVROverlayError ArrayTooSmall
Valve::VR::EVROverlayError Valve::VR::EVROverlayError::_get_ArrayTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_get_ArrayTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVROverlayError>("Valve.VR", "EVROverlayError", "ArrayTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVROverlayError ArrayTooSmall
void Valve::VR::EVROverlayError::_set_ArrayTooSmall(Valve::VR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_set_ArrayTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVROverlayError", "ArrayTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVROverlayError RequestFailed
Valve::VR::EVROverlayError Valve::VR::EVROverlayError::_get_RequestFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_get_RequestFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVROverlayError>("Valve.VR", "EVROverlayError", "RequestFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVROverlayError RequestFailed
void Valve::VR::EVROverlayError::_set_RequestFailed(Valve::VR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_set_RequestFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVROverlayError", "RequestFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVROverlayError InvalidTexture
Valve::VR::EVROverlayError Valve::VR::EVROverlayError::_get_InvalidTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_get_InvalidTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVROverlayError>("Valve.VR", "EVROverlayError", "InvalidTexture"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVROverlayError InvalidTexture
void Valve::VR::EVROverlayError::_set_InvalidTexture(Valve::VR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_set_InvalidTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVROverlayError", "InvalidTexture", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVROverlayError UnableToLoadFile
Valve::VR::EVROverlayError Valve::VR::EVROverlayError::_get_UnableToLoadFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_get_UnableToLoadFile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVROverlayError>("Valve.VR", "EVROverlayError", "UnableToLoadFile"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVROverlayError UnableToLoadFile
void Valve::VR::EVROverlayError::_set_UnableToLoadFile(Valve::VR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_set_UnableToLoadFile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVROverlayError", "UnableToLoadFile", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVROverlayError KeyboardAlreadyInUse
Valve::VR::EVROverlayError Valve::VR::EVROverlayError::_get_KeyboardAlreadyInUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_get_KeyboardAlreadyInUse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVROverlayError>("Valve.VR", "EVROverlayError", "KeyboardAlreadyInUse"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVROverlayError KeyboardAlreadyInUse
void Valve::VR::EVROverlayError::_set_KeyboardAlreadyInUse(Valve::VR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_set_KeyboardAlreadyInUse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVROverlayError", "KeyboardAlreadyInUse", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVROverlayError NoNeighbor
Valve::VR::EVROverlayError Valve::VR::EVROverlayError::_get_NoNeighbor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_get_NoNeighbor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVROverlayError>("Valve.VR", "EVROverlayError", "NoNeighbor"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVROverlayError NoNeighbor
void Valve::VR::EVROverlayError::_set_NoNeighbor(Valve::VR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_set_NoNeighbor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVROverlayError", "NoNeighbor", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVROverlayError TooManyMaskPrimitives
Valve::VR::EVROverlayError Valve::VR::EVROverlayError::_get_TooManyMaskPrimitives() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_get_TooManyMaskPrimitives");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVROverlayError>("Valve.VR", "EVROverlayError", "TooManyMaskPrimitives"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVROverlayError TooManyMaskPrimitives
void Valve::VR::EVROverlayError::_set_TooManyMaskPrimitives(Valve::VR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_set_TooManyMaskPrimitives");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVROverlayError", "TooManyMaskPrimitives", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVROverlayError BadMaskPrimitive
Valve::VR::EVROverlayError Valve::VR::EVROverlayError::_get_BadMaskPrimitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_get_BadMaskPrimitive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVROverlayError>("Valve.VR", "EVROverlayError", "BadMaskPrimitive"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVROverlayError BadMaskPrimitive
void Valve::VR::EVROverlayError::_set_BadMaskPrimitive(Valve::VR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_set_BadMaskPrimitive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVROverlayError", "BadMaskPrimitive", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVROverlayError TextureAlreadyLocked
Valve::VR::EVROverlayError Valve::VR::EVROverlayError::_get_TextureAlreadyLocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_get_TextureAlreadyLocked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVROverlayError>("Valve.VR", "EVROverlayError", "TextureAlreadyLocked"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVROverlayError TextureAlreadyLocked
void Valve::VR::EVROverlayError::_set_TextureAlreadyLocked(Valve::VR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_set_TextureAlreadyLocked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVROverlayError", "TextureAlreadyLocked", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVROverlayError TextureLockCapacityReached
Valve::VR::EVROverlayError Valve::VR::EVROverlayError::_get_TextureLockCapacityReached() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_get_TextureLockCapacityReached");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVROverlayError>("Valve.VR", "EVROverlayError", "TextureLockCapacityReached"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVROverlayError TextureLockCapacityReached
void Valve::VR::EVROverlayError::_set_TextureLockCapacityReached(Valve::VR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_set_TextureLockCapacityReached");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVROverlayError", "TextureLockCapacityReached", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVROverlayError TextureNotLocked
Valve::VR::EVROverlayError Valve::VR::EVROverlayError::_get_TextureNotLocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_get_TextureNotLocked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVROverlayError>("Valve.VR", "EVROverlayError", "TextureNotLocked"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVROverlayError TextureNotLocked
void Valve::VR::EVROverlayError::_set_TextureNotLocked(Valve::VR::EVROverlayError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::_set_TextureNotLocked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVROverlayError", "TextureNotLocked", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EVROverlayError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EVRApplicationType
#include "Valve/VR/EVRApplicationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationType VRApplication_Other
Valve::VR::EVRApplicationType Valve::VR::EVRApplicationType::_get_VRApplication_Other() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationType::_get_VRApplication_Other");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationType>("Valve.VR", "EVRApplicationType", "VRApplication_Other"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationType VRApplication_Other
void Valve::VR::EVRApplicationType::_set_VRApplication_Other(Valve::VR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationType::_set_VRApplication_Other");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationType", "VRApplication_Other", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationType VRApplication_Scene
Valve::VR::EVRApplicationType Valve::VR::EVRApplicationType::_get_VRApplication_Scene() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationType::_get_VRApplication_Scene");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationType>("Valve.VR", "EVRApplicationType", "VRApplication_Scene"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationType VRApplication_Scene
void Valve::VR::EVRApplicationType::_set_VRApplication_Scene(Valve::VR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationType::_set_VRApplication_Scene");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationType", "VRApplication_Scene", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationType VRApplication_Overlay
Valve::VR::EVRApplicationType Valve::VR::EVRApplicationType::_get_VRApplication_Overlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationType::_get_VRApplication_Overlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationType>("Valve.VR", "EVRApplicationType", "VRApplication_Overlay"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationType VRApplication_Overlay
void Valve::VR::EVRApplicationType::_set_VRApplication_Overlay(Valve::VR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationType::_set_VRApplication_Overlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationType", "VRApplication_Overlay", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationType VRApplication_Background
Valve::VR::EVRApplicationType Valve::VR::EVRApplicationType::_get_VRApplication_Background() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationType::_get_VRApplication_Background");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationType>("Valve.VR", "EVRApplicationType", "VRApplication_Background"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationType VRApplication_Background
void Valve::VR::EVRApplicationType::_set_VRApplication_Background(Valve::VR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationType::_set_VRApplication_Background");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationType", "VRApplication_Background", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationType VRApplication_Utility
Valve::VR::EVRApplicationType Valve::VR::EVRApplicationType::_get_VRApplication_Utility() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationType::_get_VRApplication_Utility");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationType>("Valve.VR", "EVRApplicationType", "VRApplication_Utility"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationType VRApplication_Utility
void Valve::VR::EVRApplicationType::_set_VRApplication_Utility(Valve::VR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationType::_set_VRApplication_Utility");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationType", "VRApplication_Utility", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationType VRApplication_VRMonitor
Valve::VR::EVRApplicationType Valve::VR::EVRApplicationType::_get_VRApplication_VRMonitor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationType::_get_VRApplication_VRMonitor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationType>("Valve.VR", "EVRApplicationType", "VRApplication_VRMonitor"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationType VRApplication_VRMonitor
void Valve::VR::EVRApplicationType::_set_VRApplication_VRMonitor(Valve::VR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationType::_set_VRApplication_VRMonitor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationType", "VRApplication_VRMonitor", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationType VRApplication_SteamWatchdog
Valve::VR::EVRApplicationType Valve::VR::EVRApplicationType::_get_VRApplication_SteamWatchdog() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationType::_get_VRApplication_SteamWatchdog");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationType>("Valve.VR", "EVRApplicationType", "VRApplication_SteamWatchdog"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationType VRApplication_SteamWatchdog
void Valve::VR::EVRApplicationType::_set_VRApplication_SteamWatchdog(Valve::VR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationType::_set_VRApplication_SteamWatchdog");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationType", "VRApplication_SteamWatchdog", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationType VRApplication_Bootstrapper
Valve::VR::EVRApplicationType Valve::VR::EVRApplicationType::_get_VRApplication_Bootstrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationType::_get_VRApplication_Bootstrapper");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationType>("Valve.VR", "EVRApplicationType", "VRApplication_Bootstrapper"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationType VRApplication_Bootstrapper
void Valve::VR::EVRApplicationType::_set_VRApplication_Bootstrapper(Valve::VR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationType::_set_VRApplication_Bootstrapper");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationType", "VRApplication_Bootstrapper", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationType VRApplication_Max
Valve::VR::EVRApplicationType Valve::VR::EVRApplicationType::_get_VRApplication_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationType::_get_VRApplication_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationType>("Valve.VR", "EVRApplicationType", "VRApplication_Max"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationType VRApplication_Max
void Valve::VR::EVRApplicationType::_set_VRApplication_Max(Valve::VR::EVRApplicationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationType::_set_VRApplication_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationType", "VRApplication_Max", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EVRApplicationType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EVRFirmwareError
#include "Valve/VR/EVRFirmwareError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRFirmwareError None
Valve::VR::EVRFirmwareError Valve::VR::EVRFirmwareError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRFirmwareError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRFirmwareError>("Valve.VR", "EVRFirmwareError", "None"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRFirmwareError None
void Valve::VR::EVRFirmwareError::_set_None(Valve::VR::EVRFirmwareError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRFirmwareError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRFirmwareError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRFirmwareError Success
Valve::VR::EVRFirmwareError Valve::VR::EVRFirmwareError::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRFirmwareError::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRFirmwareError>("Valve.VR", "EVRFirmwareError", "Success"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRFirmwareError Success
void Valve::VR::EVRFirmwareError::_set_Success(Valve::VR::EVRFirmwareError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRFirmwareError::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRFirmwareError", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRFirmwareError Fail
Valve::VR::EVRFirmwareError Valve::VR::EVRFirmwareError::_get_Fail() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRFirmwareError::_get_Fail");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRFirmwareError>("Valve.VR", "EVRFirmwareError", "Fail"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRFirmwareError Fail
void Valve::VR::EVRFirmwareError::_set_Fail(Valve::VR::EVRFirmwareError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRFirmwareError::_set_Fail");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRFirmwareError", "Fail", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EVRFirmwareError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRFirmwareError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EVRNotificationError
#include "Valve/VR/EVRNotificationError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRNotificationError OK
Valve::VR::EVRNotificationError Valve::VR::EVRNotificationError::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRNotificationError::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRNotificationError>("Valve.VR", "EVRNotificationError", "OK"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRNotificationError OK
void Valve::VR::EVRNotificationError::_set_OK(Valve::VR::EVRNotificationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRNotificationError::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRNotificationError", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRNotificationError InvalidNotificationId
Valve::VR::EVRNotificationError Valve::VR::EVRNotificationError::_get_InvalidNotificationId() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRNotificationError::_get_InvalidNotificationId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRNotificationError>("Valve.VR", "EVRNotificationError", "InvalidNotificationId"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRNotificationError InvalidNotificationId
void Valve::VR::EVRNotificationError::_set_InvalidNotificationId(Valve::VR::EVRNotificationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRNotificationError::_set_InvalidNotificationId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRNotificationError", "InvalidNotificationId", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRNotificationError NotificationQueueFull
Valve::VR::EVRNotificationError Valve::VR::EVRNotificationError::_get_NotificationQueueFull() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRNotificationError::_get_NotificationQueueFull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRNotificationError>("Valve.VR", "EVRNotificationError", "NotificationQueueFull"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRNotificationError NotificationQueueFull
void Valve::VR::EVRNotificationError::_set_NotificationQueueFull(Valve::VR::EVRNotificationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRNotificationError::_set_NotificationQueueFull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRNotificationError", "NotificationQueueFull", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRNotificationError InvalidOverlayHandle
Valve::VR::EVRNotificationError Valve::VR::EVRNotificationError::_get_InvalidOverlayHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRNotificationError::_get_InvalidOverlayHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRNotificationError>("Valve.VR", "EVRNotificationError", "InvalidOverlayHandle"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRNotificationError InvalidOverlayHandle
void Valve::VR::EVRNotificationError::_set_InvalidOverlayHandle(Valve::VR::EVRNotificationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRNotificationError::_set_InvalidOverlayHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRNotificationError", "InvalidOverlayHandle", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRNotificationError SystemWithUserValueAlreadyExists
Valve::VR::EVRNotificationError Valve::VR::EVRNotificationError::_get_SystemWithUserValueAlreadyExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRNotificationError::_get_SystemWithUserValueAlreadyExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRNotificationError>("Valve.VR", "EVRNotificationError", "SystemWithUserValueAlreadyExists"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRNotificationError SystemWithUserValueAlreadyExists
void Valve::VR::EVRNotificationError::_set_SystemWithUserValueAlreadyExists(Valve::VR::EVRNotificationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRNotificationError::_set_SystemWithUserValueAlreadyExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRNotificationError", "SystemWithUserValueAlreadyExists", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EVRNotificationError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRNotificationError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EVRInitError
#include "Valve/VR/EVRInitError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError None
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "None"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError None
void Valve::VR::EVRInitError::_set_None(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Unknown
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Unknown
void Valve::VR::EVRInitError::_set_Unknown(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_InstallationNotFound
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_InstallationNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_InstallationNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_InstallationNotFound"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_InstallationNotFound
void Valve::VR::EVRInitError::_set_Init_InstallationNotFound(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_InstallationNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_InstallationNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_InstallationCorrupt
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_InstallationCorrupt() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_InstallationCorrupt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_InstallationCorrupt"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_InstallationCorrupt
void Valve::VR::EVRInitError::_set_Init_InstallationCorrupt(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_InstallationCorrupt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_InstallationCorrupt", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_VRClientDLLNotFound
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_VRClientDLLNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_VRClientDLLNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_VRClientDLLNotFound"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_VRClientDLLNotFound
void Valve::VR::EVRInitError::_set_Init_VRClientDLLNotFound(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_VRClientDLLNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_VRClientDLLNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_FileNotFound
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_FileNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_FileNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_FileNotFound"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_FileNotFound
void Valve::VR::EVRInitError::_set_Init_FileNotFound(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_FileNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_FileNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_FactoryNotFound
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_FactoryNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_FactoryNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_FactoryNotFound"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_FactoryNotFound
void Valve::VR::EVRInitError::_set_Init_FactoryNotFound(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_FactoryNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_FactoryNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_InterfaceNotFound
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_InterfaceNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_InterfaceNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_InterfaceNotFound"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_InterfaceNotFound
void Valve::VR::EVRInitError::_set_Init_InterfaceNotFound(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_InterfaceNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_InterfaceNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_InvalidInterface
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_InvalidInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_InvalidInterface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_InvalidInterface"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_InvalidInterface
void Valve::VR::EVRInitError::_set_Init_InvalidInterface(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_InvalidInterface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_InvalidInterface", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_UserConfigDirectoryInvalid
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_UserConfigDirectoryInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_UserConfigDirectoryInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_UserConfigDirectoryInvalid"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_UserConfigDirectoryInvalid
void Valve::VR::EVRInitError::_set_Init_UserConfigDirectoryInvalid(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_UserConfigDirectoryInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_UserConfigDirectoryInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_HmdNotFound
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_HmdNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_HmdNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_HmdNotFound"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_HmdNotFound
void Valve::VR::EVRInitError::_set_Init_HmdNotFound(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_HmdNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_HmdNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_NotInitialized
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_NotInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_NotInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_NotInitialized"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_NotInitialized
void Valve::VR::EVRInitError::_set_Init_NotInitialized(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_NotInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_NotInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_PathRegistryNotFound
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_PathRegistryNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_PathRegistryNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_PathRegistryNotFound"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_PathRegistryNotFound
void Valve::VR::EVRInitError::_set_Init_PathRegistryNotFound(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_PathRegistryNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_PathRegistryNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_NoConfigPath
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_NoConfigPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_NoConfigPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_NoConfigPath"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_NoConfigPath
void Valve::VR::EVRInitError::_set_Init_NoConfigPath(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_NoConfigPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_NoConfigPath", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_NoLogPath
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_NoLogPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_NoLogPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_NoLogPath"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_NoLogPath
void Valve::VR::EVRInitError::_set_Init_NoLogPath(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_NoLogPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_NoLogPath", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_PathRegistryNotWritable
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_PathRegistryNotWritable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_PathRegistryNotWritable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_PathRegistryNotWritable"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_PathRegistryNotWritable
void Valve::VR::EVRInitError::_set_Init_PathRegistryNotWritable(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_PathRegistryNotWritable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_PathRegistryNotWritable", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_AppInfoInitFailed
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_AppInfoInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_AppInfoInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_AppInfoInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_AppInfoInitFailed
void Valve::VR::EVRInitError::_set_Init_AppInfoInitFailed(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_AppInfoInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_AppInfoInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_Retry
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_Retry() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_Retry");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_Retry"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_Retry
void Valve::VR::EVRInitError::_set_Init_Retry(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_Retry");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_Retry", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_InitCanceledByUser
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_InitCanceledByUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_InitCanceledByUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_InitCanceledByUser"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_InitCanceledByUser
void Valve::VR::EVRInitError::_set_Init_InitCanceledByUser(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_InitCanceledByUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_InitCanceledByUser", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_AnotherAppLaunching
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_AnotherAppLaunching() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_AnotherAppLaunching");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_AnotherAppLaunching"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_AnotherAppLaunching
void Valve::VR::EVRInitError::_set_Init_AnotherAppLaunching(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_AnotherAppLaunching");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_AnotherAppLaunching", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_SettingsInitFailed
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_SettingsInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_SettingsInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_SettingsInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_SettingsInitFailed
void Valve::VR::EVRInitError::_set_Init_SettingsInitFailed(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_SettingsInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_SettingsInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_ShuttingDown
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_ShuttingDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_ShuttingDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_ShuttingDown"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_ShuttingDown
void Valve::VR::EVRInitError::_set_Init_ShuttingDown(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_ShuttingDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_ShuttingDown", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_TooManyObjects
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_TooManyObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_TooManyObjects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_TooManyObjects"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_TooManyObjects
void Valve::VR::EVRInitError::_set_Init_TooManyObjects(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_TooManyObjects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_TooManyObjects", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_NoServerForBackgroundApp
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_NoServerForBackgroundApp() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_NoServerForBackgroundApp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_NoServerForBackgroundApp"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_NoServerForBackgroundApp
void Valve::VR::EVRInitError::_set_Init_NoServerForBackgroundApp(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_NoServerForBackgroundApp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_NoServerForBackgroundApp", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_NotSupportedWithCompositor
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_NotSupportedWithCompositor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_NotSupportedWithCompositor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_NotSupportedWithCompositor"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_NotSupportedWithCompositor
void Valve::VR::EVRInitError::_set_Init_NotSupportedWithCompositor(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_NotSupportedWithCompositor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_NotSupportedWithCompositor", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_NotAvailableToUtilityApps
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_NotAvailableToUtilityApps() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_NotAvailableToUtilityApps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_NotAvailableToUtilityApps"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_NotAvailableToUtilityApps
void Valve::VR::EVRInitError::_set_Init_NotAvailableToUtilityApps(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_NotAvailableToUtilityApps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_NotAvailableToUtilityApps", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_Internal
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_Internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_Internal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_Internal"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_Internal
void Valve::VR::EVRInitError::_set_Init_Internal(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_Internal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_Internal", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_HmdDriverIdIsNone
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_HmdDriverIdIsNone() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_HmdDriverIdIsNone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_HmdDriverIdIsNone"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_HmdDriverIdIsNone
void Valve::VR::EVRInitError::_set_Init_HmdDriverIdIsNone(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_HmdDriverIdIsNone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_HmdDriverIdIsNone", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_HmdNotFoundPresenceFailed
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_HmdNotFoundPresenceFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_HmdNotFoundPresenceFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_HmdNotFoundPresenceFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_HmdNotFoundPresenceFailed
void Valve::VR::EVRInitError::_set_Init_HmdNotFoundPresenceFailed(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_HmdNotFoundPresenceFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_HmdNotFoundPresenceFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_VRMonitorNotFound
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_VRMonitorNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_VRMonitorNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_VRMonitorNotFound"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_VRMonitorNotFound
void Valve::VR::EVRInitError::_set_Init_VRMonitorNotFound(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_VRMonitorNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_VRMonitorNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_VRMonitorStartupFailed
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_VRMonitorStartupFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_VRMonitorStartupFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_VRMonitorStartupFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_VRMonitorStartupFailed
void Valve::VR::EVRInitError::_set_Init_VRMonitorStartupFailed(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_VRMonitorStartupFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_VRMonitorStartupFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_LowPowerWatchdogNotSupported
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_LowPowerWatchdogNotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_LowPowerWatchdogNotSupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_LowPowerWatchdogNotSupported"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_LowPowerWatchdogNotSupported
void Valve::VR::EVRInitError::_set_Init_LowPowerWatchdogNotSupported(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_LowPowerWatchdogNotSupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_LowPowerWatchdogNotSupported", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_InvalidApplicationType
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_InvalidApplicationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_InvalidApplicationType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_InvalidApplicationType"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_InvalidApplicationType
void Valve::VR::EVRInitError::_set_Init_InvalidApplicationType(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_InvalidApplicationType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_InvalidApplicationType", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_NotAvailableToWatchdogApps
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_NotAvailableToWatchdogApps() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_NotAvailableToWatchdogApps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_NotAvailableToWatchdogApps"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_NotAvailableToWatchdogApps
void Valve::VR::EVRInitError::_set_Init_NotAvailableToWatchdogApps(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_NotAvailableToWatchdogApps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_NotAvailableToWatchdogApps", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_WatchdogDisabledInSettings
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_WatchdogDisabledInSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_WatchdogDisabledInSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_WatchdogDisabledInSettings"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_WatchdogDisabledInSettings
void Valve::VR::EVRInitError::_set_Init_WatchdogDisabledInSettings(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_WatchdogDisabledInSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_WatchdogDisabledInSettings", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_VRDashboardNotFound
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_VRDashboardNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_VRDashboardNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_VRDashboardNotFound"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_VRDashboardNotFound
void Valve::VR::EVRInitError::_set_Init_VRDashboardNotFound(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_VRDashboardNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_VRDashboardNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_VRDashboardStartupFailed
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_VRDashboardStartupFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_VRDashboardStartupFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_VRDashboardStartupFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_VRDashboardStartupFailed
void Valve::VR::EVRInitError::_set_Init_VRDashboardStartupFailed(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_VRDashboardStartupFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_VRDashboardStartupFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_VRHomeNotFound
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_VRHomeNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_VRHomeNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_VRHomeNotFound"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_VRHomeNotFound
void Valve::VR::EVRInitError::_set_Init_VRHomeNotFound(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_VRHomeNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_VRHomeNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_VRHomeStartupFailed
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_VRHomeStartupFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_VRHomeStartupFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_VRHomeStartupFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_VRHomeStartupFailed
void Valve::VR::EVRInitError::_set_Init_VRHomeStartupFailed(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_VRHomeStartupFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_VRHomeStartupFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_RebootingBusy
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_RebootingBusy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_RebootingBusy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_RebootingBusy"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_RebootingBusy
void Valve::VR::EVRInitError::_set_Init_RebootingBusy(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_RebootingBusy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_RebootingBusy", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_FirmwareUpdateBusy
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_FirmwareUpdateBusy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_FirmwareUpdateBusy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_FirmwareUpdateBusy"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_FirmwareUpdateBusy
void Valve::VR::EVRInitError::_set_Init_FirmwareUpdateBusy(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_FirmwareUpdateBusy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_FirmwareUpdateBusy", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_FirmwareRecoveryBusy
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_FirmwareRecoveryBusy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_FirmwareRecoveryBusy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_FirmwareRecoveryBusy"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_FirmwareRecoveryBusy
void Valve::VR::EVRInitError::_set_Init_FirmwareRecoveryBusy(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_FirmwareRecoveryBusy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_FirmwareRecoveryBusy", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Init_USBServiceBusy
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Init_USBServiceBusy() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Init_USBServiceBusy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Init_USBServiceBusy"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Init_USBServiceBusy
void Valve::VR::EVRInitError::_set_Init_USBServiceBusy(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Init_USBServiceBusy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Init_USBServiceBusy", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Driver_Failed
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Driver_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Driver_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Driver_Failed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Driver_Failed
void Valve::VR::EVRInitError::_set_Driver_Failed(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Driver_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Driver_Failed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Driver_Unknown
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Driver_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Driver_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Driver_Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Driver_Unknown
void Valve::VR::EVRInitError::_set_Driver_Unknown(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Driver_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Driver_Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Driver_HmdUnknown
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Driver_HmdUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Driver_HmdUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Driver_HmdUnknown"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Driver_HmdUnknown
void Valve::VR::EVRInitError::_set_Driver_HmdUnknown(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Driver_HmdUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Driver_HmdUnknown", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Driver_NotLoaded
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Driver_NotLoaded() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Driver_NotLoaded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Driver_NotLoaded"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Driver_NotLoaded
void Valve::VR::EVRInitError::_set_Driver_NotLoaded(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Driver_NotLoaded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Driver_NotLoaded", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Driver_RuntimeOutOfDate
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Driver_RuntimeOutOfDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Driver_RuntimeOutOfDate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Driver_RuntimeOutOfDate"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Driver_RuntimeOutOfDate
void Valve::VR::EVRInitError::_set_Driver_RuntimeOutOfDate(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Driver_RuntimeOutOfDate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Driver_RuntimeOutOfDate", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Driver_HmdInUse
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Driver_HmdInUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Driver_HmdInUse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Driver_HmdInUse"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Driver_HmdInUse
void Valve::VR::EVRInitError::_set_Driver_HmdInUse(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Driver_HmdInUse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Driver_HmdInUse", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Driver_NotCalibrated
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Driver_NotCalibrated() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Driver_NotCalibrated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Driver_NotCalibrated"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Driver_NotCalibrated
void Valve::VR::EVRInitError::_set_Driver_NotCalibrated(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Driver_NotCalibrated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Driver_NotCalibrated", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Driver_CalibrationInvalid
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Driver_CalibrationInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Driver_CalibrationInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Driver_CalibrationInvalid"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Driver_CalibrationInvalid
void Valve::VR::EVRInitError::_set_Driver_CalibrationInvalid(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Driver_CalibrationInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Driver_CalibrationInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Driver_HmdDisplayNotFound
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Driver_HmdDisplayNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Driver_HmdDisplayNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Driver_HmdDisplayNotFound"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Driver_HmdDisplayNotFound
void Valve::VR::EVRInitError::_set_Driver_HmdDisplayNotFound(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Driver_HmdDisplayNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Driver_HmdDisplayNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Driver_TrackedDeviceInterfaceUnknown
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Driver_TrackedDeviceInterfaceUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Driver_TrackedDeviceInterfaceUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Driver_TrackedDeviceInterfaceUnknown"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Driver_TrackedDeviceInterfaceUnknown
void Valve::VR::EVRInitError::_set_Driver_TrackedDeviceInterfaceUnknown(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Driver_TrackedDeviceInterfaceUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Driver_TrackedDeviceInterfaceUnknown", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Driver_HmdDriverIdOutOfBounds
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Driver_HmdDriverIdOutOfBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Driver_HmdDriverIdOutOfBounds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Driver_HmdDriverIdOutOfBounds"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Driver_HmdDriverIdOutOfBounds
void Valve::VR::EVRInitError::_set_Driver_HmdDriverIdOutOfBounds(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Driver_HmdDriverIdOutOfBounds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Driver_HmdDriverIdOutOfBounds", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Driver_HmdDisplayMirrored
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Driver_HmdDisplayMirrored() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Driver_HmdDisplayMirrored");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Driver_HmdDisplayMirrored"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Driver_HmdDisplayMirrored
void Valve::VR::EVRInitError::_set_Driver_HmdDisplayMirrored(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Driver_HmdDisplayMirrored");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Driver_HmdDisplayMirrored", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError IPC_ServerInitFailed
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_IPC_ServerInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_IPC_ServerInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "IPC_ServerInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError IPC_ServerInitFailed
void Valve::VR::EVRInitError::_set_IPC_ServerInitFailed(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_IPC_ServerInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "IPC_ServerInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError IPC_ConnectFailed
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_IPC_ConnectFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_IPC_ConnectFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "IPC_ConnectFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError IPC_ConnectFailed
void Valve::VR::EVRInitError::_set_IPC_ConnectFailed(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_IPC_ConnectFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "IPC_ConnectFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError IPC_SharedStateInitFailed
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_IPC_SharedStateInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_IPC_SharedStateInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "IPC_SharedStateInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError IPC_SharedStateInitFailed
void Valve::VR::EVRInitError::_set_IPC_SharedStateInitFailed(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_IPC_SharedStateInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "IPC_SharedStateInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError IPC_CompositorInitFailed
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_IPC_CompositorInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_IPC_CompositorInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "IPC_CompositorInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError IPC_CompositorInitFailed
void Valve::VR::EVRInitError::_set_IPC_CompositorInitFailed(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_IPC_CompositorInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "IPC_CompositorInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError IPC_MutexInitFailed
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_IPC_MutexInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_IPC_MutexInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "IPC_MutexInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError IPC_MutexInitFailed
void Valve::VR::EVRInitError::_set_IPC_MutexInitFailed(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_IPC_MutexInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "IPC_MutexInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError IPC_Failed
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_IPC_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_IPC_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "IPC_Failed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError IPC_Failed
void Valve::VR::EVRInitError::_set_IPC_Failed(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_IPC_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "IPC_Failed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError IPC_CompositorConnectFailed
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_IPC_CompositorConnectFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_IPC_CompositorConnectFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "IPC_CompositorConnectFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError IPC_CompositorConnectFailed
void Valve::VR::EVRInitError::_set_IPC_CompositorConnectFailed(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_IPC_CompositorConnectFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "IPC_CompositorConnectFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError IPC_CompositorInvalidConnectResponse
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_IPC_CompositorInvalidConnectResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_IPC_CompositorInvalidConnectResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "IPC_CompositorInvalidConnectResponse"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError IPC_CompositorInvalidConnectResponse
void Valve::VR::EVRInitError::_set_IPC_CompositorInvalidConnectResponse(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_IPC_CompositorInvalidConnectResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "IPC_CompositorInvalidConnectResponse", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError IPC_ConnectFailedAfterMultipleAttempts
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_IPC_ConnectFailedAfterMultipleAttempts() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_IPC_ConnectFailedAfterMultipleAttempts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "IPC_ConnectFailedAfterMultipleAttempts"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError IPC_ConnectFailedAfterMultipleAttempts
void Valve::VR::EVRInitError::_set_IPC_ConnectFailedAfterMultipleAttempts(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_IPC_ConnectFailedAfterMultipleAttempts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "IPC_ConnectFailedAfterMultipleAttempts", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Compositor_Failed
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Compositor_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Compositor_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Compositor_Failed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Compositor_Failed
void Valve::VR::EVRInitError::_set_Compositor_Failed(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Compositor_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Compositor_Failed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Compositor_D3D11HardwareRequired
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Compositor_D3D11HardwareRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Compositor_D3D11HardwareRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Compositor_D3D11HardwareRequired"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Compositor_D3D11HardwareRequired
void Valve::VR::EVRInitError::_set_Compositor_D3D11HardwareRequired(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Compositor_D3D11HardwareRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Compositor_D3D11HardwareRequired", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Compositor_FirmwareRequiresUpdate
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Compositor_FirmwareRequiresUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Compositor_FirmwareRequiresUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Compositor_FirmwareRequiresUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Compositor_FirmwareRequiresUpdate
void Valve::VR::EVRInitError::_set_Compositor_FirmwareRequiresUpdate(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Compositor_FirmwareRequiresUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Compositor_FirmwareRequiresUpdate", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Compositor_OverlayInitFailed
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Compositor_OverlayInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Compositor_OverlayInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Compositor_OverlayInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Compositor_OverlayInitFailed
void Valve::VR::EVRInitError::_set_Compositor_OverlayInitFailed(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Compositor_OverlayInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Compositor_OverlayInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Compositor_ScreenshotsInitFailed
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Compositor_ScreenshotsInitFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Compositor_ScreenshotsInitFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Compositor_ScreenshotsInitFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Compositor_ScreenshotsInitFailed
void Valve::VR::EVRInitError::_set_Compositor_ScreenshotsInitFailed(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Compositor_ScreenshotsInitFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Compositor_ScreenshotsInitFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Compositor_UnableToCreateDevice
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Compositor_UnableToCreateDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Compositor_UnableToCreateDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Compositor_UnableToCreateDevice"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Compositor_UnableToCreateDevice
void Valve::VR::EVRInitError::_set_Compositor_UnableToCreateDevice(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Compositor_UnableToCreateDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Compositor_UnableToCreateDevice", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError VendorSpecific_UnableToConnectToOculusRuntime
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_VendorSpecific_UnableToConnectToOculusRuntime() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_VendorSpecific_UnableToConnectToOculusRuntime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "VendorSpecific_UnableToConnectToOculusRuntime"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError VendorSpecific_UnableToConnectToOculusRuntime
void Valve::VR::EVRInitError::_set_VendorSpecific_UnableToConnectToOculusRuntime(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_VendorSpecific_UnableToConnectToOculusRuntime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "VendorSpecific_UnableToConnectToOculusRuntime", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError VendorSpecific_WindowsNotInDevMode
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_VendorSpecific_WindowsNotInDevMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_VendorSpecific_WindowsNotInDevMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "VendorSpecific_WindowsNotInDevMode"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError VendorSpecific_WindowsNotInDevMode
void Valve::VR::EVRInitError::_set_VendorSpecific_WindowsNotInDevMode(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_VendorSpecific_WindowsNotInDevMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "VendorSpecific_WindowsNotInDevMode", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_CantOpenDevice
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_CantOpenDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_CantOpenDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_CantOpenDevice"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_CantOpenDevice
void Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_CantOpenDevice(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_CantOpenDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_CantOpenDevice", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UnableToRequestConfigStart
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToRequestConfigStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToRequestConfigStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_UnableToRequestConfigStart"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UnableToRequestConfigStart
void Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToRequestConfigStart(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToRequestConfigStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_UnableToRequestConfigStart", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_NoStoredConfig
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_NoStoredConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_NoStoredConfig");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_NoStoredConfig"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_NoStoredConfig
void Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_NoStoredConfig(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_NoStoredConfig");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_NoStoredConfig", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_ConfigTooBig
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_ConfigTooBig() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_ConfigTooBig");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_ConfigTooBig"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_ConfigTooBig
void Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_ConfigTooBig(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_ConfigTooBig");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_ConfigTooBig", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_ConfigTooSmall
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_ConfigTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_ConfigTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_ConfigTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_ConfigTooSmall
void Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_ConfigTooSmall(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_ConfigTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_ConfigTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UnableToInitZLib
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToInitZLib() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToInitZLib");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_UnableToInitZLib"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UnableToInitZLib
void Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToInitZLib(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToInitZLib");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_UnableToInitZLib", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_CantReadFirmwareVersion
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_CantReadFirmwareVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_CantReadFirmwareVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_CantReadFirmwareVersion"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_CantReadFirmwareVersion
void Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_CantReadFirmwareVersion(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_CantReadFirmwareVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_CantReadFirmwareVersion", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UnableToSendUserDataStart
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToSendUserDataStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToSendUserDataStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_UnableToSendUserDataStart"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UnableToSendUserDataStart
void Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToSendUserDataStart(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToSendUserDataStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_UnableToSendUserDataStart", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UnableToGetUserDataStart
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToGetUserDataStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToGetUserDataStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_UnableToGetUserDataStart"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UnableToGetUserDataStart
void Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToGetUserDataStart(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToGetUserDataStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_UnableToGetUserDataStart", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UnableToGetUserDataNext
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToGetUserDataNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_UnableToGetUserDataNext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_UnableToGetUserDataNext"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UnableToGetUserDataNext
void Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToGetUserDataNext(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_UnableToGetUserDataNext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_UnableToGetUserDataNext", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UserDataAddressRange
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_UserDataAddressRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_UserDataAddressRange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_UserDataAddressRange"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UserDataAddressRange
void Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_UserDataAddressRange(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_UserDataAddressRange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_UserDataAddressRange", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UserDataError
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_UserDataError() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_UserDataError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_UserDataError"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_UserDataError
void Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_UserDataError(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_UserDataError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_UserDataError", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_ConfigFailedSanityCheck
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_ConfigFailedSanityCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_VendorSpecific_HmdFound_ConfigFailedSanityCheck");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_ConfigFailedSanityCheck"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError VendorSpecific_HmdFound_ConfigFailedSanityCheck
void Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_ConfigFailedSanityCheck(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_VendorSpecific_HmdFound_ConfigFailedSanityCheck");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "VendorSpecific_HmdFound_ConfigFailedSanityCheck", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRInitError Steam_SteamInstallationNotFound
Valve::VR::EVRInitError Valve::VR::EVRInitError::_get_Steam_SteamInstallationNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_get_Steam_SteamInstallationNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRInitError>("Valve.VR", "EVRInitError", "Steam_SteamInstallationNotFound"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRInitError Steam_SteamInstallationNotFound
void Valve::VR::EVRInitError::_set_Steam_SteamInstallationNotFound(Valve::VR::EVRInitError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::_set_Steam_SteamInstallationNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRInitError", "Steam_SteamInstallationNotFound", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EVRInitError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRInitError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EVRScreenshotType
#include "Valve/VR/EVRScreenshotType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRScreenshotType None
Valve::VR::EVRScreenshotType Valve::VR::EVRScreenshotType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRScreenshotType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRScreenshotType>("Valve.VR", "EVRScreenshotType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRScreenshotType None
void Valve::VR::EVRScreenshotType::_set_None(Valve::VR::EVRScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRScreenshotType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRScreenshotType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRScreenshotType Mono
Valve::VR::EVRScreenshotType Valve::VR::EVRScreenshotType::_get_Mono() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRScreenshotType::_get_Mono");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRScreenshotType>("Valve.VR", "EVRScreenshotType", "Mono"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRScreenshotType Mono
void Valve::VR::EVRScreenshotType::_set_Mono(Valve::VR::EVRScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRScreenshotType::_set_Mono");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRScreenshotType", "Mono", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRScreenshotType Stereo
Valve::VR::EVRScreenshotType Valve::VR::EVRScreenshotType::_get_Stereo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRScreenshotType::_get_Stereo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRScreenshotType>("Valve.VR", "EVRScreenshotType", "Stereo"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRScreenshotType Stereo
void Valve::VR::EVRScreenshotType::_set_Stereo(Valve::VR::EVRScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRScreenshotType::_set_Stereo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRScreenshotType", "Stereo", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRScreenshotType Cubemap
Valve::VR::EVRScreenshotType Valve::VR::EVRScreenshotType::_get_Cubemap() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRScreenshotType::_get_Cubemap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRScreenshotType>("Valve.VR", "EVRScreenshotType", "Cubemap"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRScreenshotType Cubemap
void Valve::VR::EVRScreenshotType::_set_Cubemap(Valve::VR::EVRScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRScreenshotType::_set_Cubemap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRScreenshotType", "Cubemap", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRScreenshotType MonoPanorama
Valve::VR::EVRScreenshotType Valve::VR::EVRScreenshotType::_get_MonoPanorama() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRScreenshotType::_get_MonoPanorama");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRScreenshotType>("Valve.VR", "EVRScreenshotType", "MonoPanorama"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRScreenshotType MonoPanorama
void Valve::VR::EVRScreenshotType::_set_MonoPanorama(Valve::VR::EVRScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRScreenshotType::_set_MonoPanorama");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRScreenshotType", "MonoPanorama", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRScreenshotType StereoPanorama
Valve::VR::EVRScreenshotType Valve::VR::EVRScreenshotType::_get_StereoPanorama() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRScreenshotType::_get_StereoPanorama");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRScreenshotType>("Valve.VR", "EVRScreenshotType", "StereoPanorama"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRScreenshotType StereoPanorama
void Valve::VR::EVRScreenshotType::_set_StereoPanorama(Valve::VR::EVRScreenshotType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRScreenshotType::_set_StereoPanorama");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRScreenshotType", "StereoPanorama", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EVRScreenshotType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRScreenshotType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EVRScreenshotPropertyFilenames
#include "Valve/VR/EVRScreenshotPropertyFilenames.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRScreenshotPropertyFilenames Preview
Valve::VR::EVRScreenshotPropertyFilenames Valve::VR::EVRScreenshotPropertyFilenames::_get_Preview() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRScreenshotPropertyFilenames::_get_Preview");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRScreenshotPropertyFilenames>("Valve.VR", "EVRScreenshotPropertyFilenames", "Preview"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRScreenshotPropertyFilenames Preview
void Valve::VR::EVRScreenshotPropertyFilenames::_set_Preview(Valve::VR::EVRScreenshotPropertyFilenames value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRScreenshotPropertyFilenames::_set_Preview");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRScreenshotPropertyFilenames", "Preview", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRScreenshotPropertyFilenames VR
Valve::VR::EVRScreenshotPropertyFilenames Valve::VR::EVRScreenshotPropertyFilenames::_get_VR() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRScreenshotPropertyFilenames::_get_VR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRScreenshotPropertyFilenames>("Valve.VR", "EVRScreenshotPropertyFilenames", "VR"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRScreenshotPropertyFilenames VR
void Valve::VR::EVRScreenshotPropertyFilenames::_set_VR(Valve::VR::EVRScreenshotPropertyFilenames value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRScreenshotPropertyFilenames::_set_VR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRScreenshotPropertyFilenames", "VR", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EVRScreenshotPropertyFilenames::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRScreenshotPropertyFilenames::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EVRTrackedCameraError
#include "Valve/VR/EVRTrackedCameraError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRTrackedCameraError None
Valve::VR::EVRTrackedCameraError Valve::VR::EVRTrackedCameraError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRTrackedCameraError>("Valve.VR", "EVRTrackedCameraError", "None"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRTrackedCameraError None
void Valve::VR::EVRTrackedCameraError::_set_None(Valve::VR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRTrackedCameraError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRTrackedCameraError OperationFailed
Valve::VR::EVRTrackedCameraError Valve::VR::EVRTrackedCameraError::_get_OperationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraError::_get_OperationFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRTrackedCameraError>("Valve.VR", "EVRTrackedCameraError", "OperationFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRTrackedCameraError OperationFailed
void Valve::VR::EVRTrackedCameraError::_set_OperationFailed(Valve::VR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraError::_set_OperationFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRTrackedCameraError", "OperationFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRTrackedCameraError InvalidHandle
Valve::VR::EVRTrackedCameraError Valve::VR::EVRTrackedCameraError::_get_InvalidHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraError::_get_InvalidHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRTrackedCameraError>("Valve.VR", "EVRTrackedCameraError", "InvalidHandle"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRTrackedCameraError InvalidHandle
void Valve::VR::EVRTrackedCameraError::_set_InvalidHandle(Valve::VR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraError::_set_InvalidHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRTrackedCameraError", "InvalidHandle", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRTrackedCameraError InvalidFrameHeaderVersion
Valve::VR::EVRTrackedCameraError Valve::VR::EVRTrackedCameraError::_get_InvalidFrameHeaderVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraError::_get_InvalidFrameHeaderVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRTrackedCameraError>("Valve.VR", "EVRTrackedCameraError", "InvalidFrameHeaderVersion"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRTrackedCameraError InvalidFrameHeaderVersion
void Valve::VR::EVRTrackedCameraError::_set_InvalidFrameHeaderVersion(Valve::VR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraError::_set_InvalidFrameHeaderVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRTrackedCameraError", "InvalidFrameHeaderVersion", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRTrackedCameraError OutOfHandles
Valve::VR::EVRTrackedCameraError Valve::VR::EVRTrackedCameraError::_get_OutOfHandles() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraError::_get_OutOfHandles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRTrackedCameraError>("Valve.VR", "EVRTrackedCameraError", "OutOfHandles"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRTrackedCameraError OutOfHandles
void Valve::VR::EVRTrackedCameraError::_set_OutOfHandles(Valve::VR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraError::_set_OutOfHandles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRTrackedCameraError", "OutOfHandles", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRTrackedCameraError IPCFailure
Valve::VR::EVRTrackedCameraError Valve::VR::EVRTrackedCameraError::_get_IPCFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraError::_get_IPCFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRTrackedCameraError>("Valve.VR", "EVRTrackedCameraError", "IPCFailure"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRTrackedCameraError IPCFailure
void Valve::VR::EVRTrackedCameraError::_set_IPCFailure(Valve::VR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraError::_set_IPCFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRTrackedCameraError", "IPCFailure", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRTrackedCameraError NotSupportedForThisDevice
Valve::VR::EVRTrackedCameraError Valve::VR::EVRTrackedCameraError::_get_NotSupportedForThisDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraError::_get_NotSupportedForThisDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRTrackedCameraError>("Valve.VR", "EVRTrackedCameraError", "NotSupportedForThisDevice"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRTrackedCameraError NotSupportedForThisDevice
void Valve::VR::EVRTrackedCameraError::_set_NotSupportedForThisDevice(Valve::VR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraError::_set_NotSupportedForThisDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRTrackedCameraError", "NotSupportedForThisDevice", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRTrackedCameraError SharedMemoryFailure
Valve::VR::EVRTrackedCameraError Valve::VR::EVRTrackedCameraError::_get_SharedMemoryFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraError::_get_SharedMemoryFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRTrackedCameraError>("Valve.VR", "EVRTrackedCameraError", "SharedMemoryFailure"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRTrackedCameraError SharedMemoryFailure
void Valve::VR::EVRTrackedCameraError::_set_SharedMemoryFailure(Valve::VR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraError::_set_SharedMemoryFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRTrackedCameraError", "SharedMemoryFailure", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRTrackedCameraError FrameBufferingFailure
Valve::VR::EVRTrackedCameraError Valve::VR::EVRTrackedCameraError::_get_FrameBufferingFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraError::_get_FrameBufferingFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRTrackedCameraError>("Valve.VR", "EVRTrackedCameraError", "FrameBufferingFailure"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRTrackedCameraError FrameBufferingFailure
void Valve::VR::EVRTrackedCameraError::_set_FrameBufferingFailure(Valve::VR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraError::_set_FrameBufferingFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRTrackedCameraError", "FrameBufferingFailure", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRTrackedCameraError StreamSetupFailure
Valve::VR::EVRTrackedCameraError Valve::VR::EVRTrackedCameraError::_get_StreamSetupFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraError::_get_StreamSetupFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRTrackedCameraError>("Valve.VR", "EVRTrackedCameraError", "StreamSetupFailure"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRTrackedCameraError StreamSetupFailure
void Valve::VR::EVRTrackedCameraError::_set_StreamSetupFailure(Valve::VR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraError::_set_StreamSetupFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRTrackedCameraError", "StreamSetupFailure", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRTrackedCameraError InvalidGLTextureId
Valve::VR::EVRTrackedCameraError Valve::VR::EVRTrackedCameraError::_get_InvalidGLTextureId() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraError::_get_InvalidGLTextureId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRTrackedCameraError>("Valve.VR", "EVRTrackedCameraError", "InvalidGLTextureId"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRTrackedCameraError InvalidGLTextureId
void Valve::VR::EVRTrackedCameraError::_set_InvalidGLTextureId(Valve::VR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraError::_set_InvalidGLTextureId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRTrackedCameraError", "InvalidGLTextureId", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRTrackedCameraError InvalidSharedTextureHandle
Valve::VR::EVRTrackedCameraError Valve::VR::EVRTrackedCameraError::_get_InvalidSharedTextureHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraError::_get_InvalidSharedTextureHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRTrackedCameraError>("Valve.VR", "EVRTrackedCameraError", "InvalidSharedTextureHandle"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRTrackedCameraError InvalidSharedTextureHandle
void Valve::VR::EVRTrackedCameraError::_set_InvalidSharedTextureHandle(Valve::VR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraError::_set_InvalidSharedTextureHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRTrackedCameraError", "InvalidSharedTextureHandle", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRTrackedCameraError FailedToGetGLTextureId
Valve::VR::EVRTrackedCameraError Valve::VR::EVRTrackedCameraError::_get_FailedToGetGLTextureId() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraError::_get_FailedToGetGLTextureId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRTrackedCameraError>("Valve.VR", "EVRTrackedCameraError", "FailedToGetGLTextureId"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRTrackedCameraError FailedToGetGLTextureId
void Valve::VR::EVRTrackedCameraError::_set_FailedToGetGLTextureId(Valve::VR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraError::_set_FailedToGetGLTextureId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRTrackedCameraError", "FailedToGetGLTextureId", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRTrackedCameraError SharedTextureFailure
Valve::VR::EVRTrackedCameraError Valve::VR::EVRTrackedCameraError::_get_SharedTextureFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraError::_get_SharedTextureFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRTrackedCameraError>("Valve.VR", "EVRTrackedCameraError", "SharedTextureFailure"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRTrackedCameraError SharedTextureFailure
void Valve::VR::EVRTrackedCameraError::_set_SharedTextureFailure(Valve::VR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraError::_set_SharedTextureFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRTrackedCameraError", "SharedTextureFailure", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRTrackedCameraError NoFrameAvailable
Valve::VR::EVRTrackedCameraError Valve::VR::EVRTrackedCameraError::_get_NoFrameAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraError::_get_NoFrameAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRTrackedCameraError>("Valve.VR", "EVRTrackedCameraError", "NoFrameAvailable"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRTrackedCameraError NoFrameAvailable
void Valve::VR::EVRTrackedCameraError::_set_NoFrameAvailable(Valve::VR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraError::_set_NoFrameAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRTrackedCameraError", "NoFrameAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRTrackedCameraError InvalidArgument
Valve::VR::EVRTrackedCameraError Valve::VR::EVRTrackedCameraError::_get_InvalidArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraError::_get_InvalidArgument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRTrackedCameraError>("Valve.VR", "EVRTrackedCameraError", "InvalidArgument"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRTrackedCameraError InvalidArgument
void Valve::VR::EVRTrackedCameraError::_set_InvalidArgument(Valve::VR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraError::_set_InvalidArgument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRTrackedCameraError", "InvalidArgument", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRTrackedCameraError InvalidFrameBufferSize
Valve::VR::EVRTrackedCameraError Valve::VR::EVRTrackedCameraError::_get_InvalidFrameBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraError::_get_InvalidFrameBufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRTrackedCameraError>("Valve.VR", "EVRTrackedCameraError", "InvalidFrameBufferSize"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRTrackedCameraError InvalidFrameBufferSize
void Valve::VR::EVRTrackedCameraError::_set_InvalidFrameBufferSize(Valve::VR::EVRTrackedCameraError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraError::_set_InvalidFrameBufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRTrackedCameraError", "InvalidFrameBufferSize", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EVRTrackedCameraError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EVRTrackedCameraFrameType
#include "Valve/VR/EVRTrackedCameraFrameType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRTrackedCameraFrameType Distorted
Valve::VR::EVRTrackedCameraFrameType Valve::VR::EVRTrackedCameraFrameType::_get_Distorted() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraFrameType::_get_Distorted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRTrackedCameraFrameType>("Valve.VR", "EVRTrackedCameraFrameType", "Distorted"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRTrackedCameraFrameType Distorted
void Valve::VR::EVRTrackedCameraFrameType::_set_Distorted(Valve::VR::EVRTrackedCameraFrameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraFrameType::_set_Distorted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRTrackedCameraFrameType", "Distorted", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRTrackedCameraFrameType Undistorted
Valve::VR::EVRTrackedCameraFrameType Valve::VR::EVRTrackedCameraFrameType::_get_Undistorted() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraFrameType::_get_Undistorted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRTrackedCameraFrameType>("Valve.VR", "EVRTrackedCameraFrameType", "Undistorted"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRTrackedCameraFrameType Undistorted
void Valve::VR::EVRTrackedCameraFrameType::_set_Undistorted(Valve::VR::EVRTrackedCameraFrameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraFrameType::_set_Undistorted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRTrackedCameraFrameType", "Undistorted", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRTrackedCameraFrameType MaximumUndistorted
Valve::VR::EVRTrackedCameraFrameType Valve::VR::EVRTrackedCameraFrameType::_get_MaximumUndistorted() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraFrameType::_get_MaximumUndistorted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRTrackedCameraFrameType>("Valve.VR", "EVRTrackedCameraFrameType", "MaximumUndistorted"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRTrackedCameraFrameType MaximumUndistorted
void Valve::VR::EVRTrackedCameraFrameType::_set_MaximumUndistorted(Valve::VR::EVRTrackedCameraFrameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraFrameType::_set_MaximumUndistorted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRTrackedCameraFrameType", "MaximumUndistorted", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRTrackedCameraFrameType MAX_CAMERA_FRAME_TYPES
Valve::VR::EVRTrackedCameraFrameType Valve::VR::EVRTrackedCameraFrameType::_get_MAX_CAMERA_FRAME_TYPES() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraFrameType::_get_MAX_CAMERA_FRAME_TYPES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRTrackedCameraFrameType>("Valve.VR", "EVRTrackedCameraFrameType", "MAX_CAMERA_FRAME_TYPES"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRTrackedCameraFrameType MAX_CAMERA_FRAME_TYPES
void Valve::VR::EVRTrackedCameraFrameType::_set_MAX_CAMERA_FRAME_TYPES(Valve::VR::EVRTrackedCameraFrameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraFrameType::_set_MAX_CAMERA_FRAME_TYPES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRTrackedCameraFrameType", "MAX_CAMERA_FRAME_TYPES", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EVRTrackedCameraFrameType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRTrackedCameraFrameType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EVRApplicationError
#include "Valve/VR/EVRApplicationError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError None
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "None"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError None
void Valve::VR::EVRApplicationError::_set_None(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError AppKeyAlreadyExists
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_AppKeyAlreadyExists() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_get_AppKeyAlreadyExists");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "AppKeyAlreadyExists"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError AppKeyAlreadyExists
void Valve::VR::EVRApplicationError::_set_AppKeyAlreadyExists(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_set_AppKeyAlreadyExists");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "AppKeyAlreadyExists", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError NoManifest
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_NoManifest() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_get_NoManifest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "NoManifest"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError NoManifest
void Valve::VR::EVRApplicationError::_set_NoManifest(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_set_NoManifest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "NoManifest", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError NoApplication
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_NoApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_get_NoApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "NoApplication"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError NoApplication
void Valve::VR::EVRApplicationError::_set_NoApplication(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_set_NoApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "NoApplication", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError InvalidIndex
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_InvalidIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_get_InvalidIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "InvalidIndex"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError InvalidIndex
void Valve::VR::EVRApplicationError::_set_InvalidIndex(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_set_InvalidIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "InvalidIndex", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError UnknownApplication
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_UnknownApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_get_UnknownApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "UnknownApplication"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError UnknownApplication
void Valve::VR::EVRApplicationError::_set_UnknownApplication(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_set_UnknownApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "UnknownApplication", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError IPCFailed
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_IPCFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_get_IPCFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "IPCFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError IPCFailed
void Valve::VR::EVRApplicationError::_set_IPCFailed(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_set_IPCFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "IPCFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError ApplicationAlreadyRunning
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_ApplicationAlreadyRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_get_ApplicationAlreadyRunning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "ApplicationAlreadyRunning"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError ApplicationAlreadyRunning
void Valve::VR::EVRApplicationError::_set_ApplicationAlreadyRunning(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_set_ApplicationAlreadyRunning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "ApplicationAlreadyRunning", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError InvalidManifest
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_InvalidManifest() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_get_InvalidManifest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "InvalidManifest"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError InvalidManifest
void Valve::VR::EVRApplicationError::_set_InvalidManifest(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_set_InvalidManifest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "InvalidManifest", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError InvalidApplication
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_InvalidApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_get_InvalidApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "InvalidApplication"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError InvalidApplication
void Valve::VR::EVRApplicationError::_set_InvalidApplication(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_set_InvalidApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "InvalidApplication", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError LaunchFailed
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_LaunchFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_get_LaunchFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "LaunchFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError LaunchFailed
void Valve::VR::EVRApplicationError::_set_LaunchFailed(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_set_LaunchFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "LaunchFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError ApplicationAlreadyStarting
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_ApplicationAlreadyStarting() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_get_ApplicationAlreadyStarting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "ApplicationAlreadyStarting"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError ApplicationAlreadyStarting
void Valve::VR::EVRApplicationError::_set_ApplicationAlreadyStarting(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_set_ApplicationAlreadyStarting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "ApplicationAlreadyStarting", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError LaunchInProgress
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_LaunchInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_get_LaunchInProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "LaunchInProgress"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError LaunchInProgress
void Valve::VR::EVRApplicationError::_set_LaunchInProgress(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_set_LaunchInProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "LaunchInProgress", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError OldApplicationQuitting
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_OldApplicationQuitting() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_get_OldApplicationQuitting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "OldApplicationQuitting"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError OldApplicationQuitting
void Valve::VR::EVRApplicationError::_set_OldApplicationQuitting(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_set_OldApplicationQuitting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "OldApplicationQuitting", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError TransitionAborted
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_TransitionAborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_get_TransitionAborted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "TransitionAborted"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError TransitionAborted
void Valve::VR::EVRApplicationError::_set_TransitionAborted(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_set_TransitionAborted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "TransitionAborted", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError IsTemplate
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_IsTemplate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_get_IsTemplate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "IsTemplate"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError IsTemplate
void Valve::VR::EVRApplicationError::_set_IsTemplate(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_set_IsTemplate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "IsTemplate", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError SteamVRIsExiting
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_SteamVRIsExiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_get_SteamVRIsExiting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "SteamVRIsExiting"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError SteamVRIsExiting
void Valve::VR::EVRApplicationError::_set_SteamVRIsExiting(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_set_SteamVRIsExiting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "SteamVRIsExiting", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError BufferTooSmall
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_BufferTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_get_BufferTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "BufferTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError BufferTooSmall
void Valve::VR::EVRApplicationError::_set_BufferTooSmall(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_set_BufferTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "BufferTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError PropertyNotSet
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_PropertyNotSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_get_PropertyNotSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "PropertyNotSet"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError PropertyNotSet
void Valve::VR::EVRApplicationError::_set_PropertyNotSet(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_set_PropertyNotSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "PropertyNotSet", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError UnknownProperty
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_UnknownProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_get_UnknownProperty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "UnknownProperty"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError UnknownProperty
void Valve::VR::EVRApplicationError::_set_UnknownProperty(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_set_UnknownProperty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "UnknownProperty", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationError InvalidParameter
Valve::VR::EVRApplicationError Valve::VR::EVRApplicationError::_get_InvalidParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_get_InvalidParameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationError>("Valve.VR", "EVRApplicationError", "InvalidParameter"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationError InvalidParameter
void Valve::VR::EVRApplicationError::_set_InvalidParameter(Valve::VR::EVRApplicationError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::_set_InvalidParameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationError", "InvalidParameter", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EVRApplicationError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EVRApplicationProperty
#include "Valve/VR/EVRApplicationProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationProperty Name_String
Valve::VR::EVRApplicationProperty Valve::VR::EVRApplicationProperty::_get_Name_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationProperty::_get_Name_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationProperty>("Valve.VR", "EVRApplicationProperty", "Name_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationProperty Name_String
void Valve::VR::EVRApplicationProperty::_set_Name_String(Valve::VR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationProperty::_set_Name_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationProperty", "Name_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationProperty LaunchType_String
Valve::VR::EVRApplicationProperty Valve::VR::EVRApplicationProperty::_get_LaunchType_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationProperty::_get_LaunchType_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationProperty>("Valve.VR", "EVRApplicationProperty", "LaunchType_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationProperty LaunchType_String
void Valve::VR::EVRApplicationProperty::_set_LaunchType_String(Valve::VR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationProperty::_set_LaunchType_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationProperty", "LaunchType_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationProperty WorkingDirectory_String
Valve::VR::EVRApplicationProperty Valve::VR::EVRApplicationProperty::_get_WorkingDirectory_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationProperty::_get_WorkingDirectory_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationProperty>("Valve.VR", "EVRApplicationProperty", "WorkingDirectory_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationProperty WorkingDirectory_String
void Valve::VR::EVRApplicationProperty::_set_WorkingDirectory_String(Valve::VR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationProperty::_set_WorkingDirectory_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationProperty", "WorkingDirectory_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationProperty BinaryPath_String
Valve::VR::EVRApplicationProperty Valve::VR::EVRApplicationProperty::_get_BinaryPath_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationProperty::_get_BinaryPath_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationProperty>("Valve.VR", "EVRApplicationProperty", "BinaryPath_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationProperty BinaryPath_String
void Valve::VR::EVRApplicationProperty::_set_BinaryPath_String(Valve::VR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationProperty::_set_BinaryPath_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationProperty", "BinaryPath_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationProperty Arguments_String
Valve::VR::EVRApplicationProperty Valve::VR::EVRApplicationProperty::_get_Arguments_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationProperty::_get_Arguments_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationProperty>("Valve.VR", "EVRApplicationProperty", "Arguments_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationProperty Arguments_String
void Valve::VR::EVRApplicationProperty::_set_Arguments_String(Valve::VR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationProperty::_set_Arguments_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationProperty", "Arguments_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationProperty URL_String
Valve::VR::EVRApplicationProperty Valve::VR::EVRApplicationProperty::_get_URL_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationProperty::_get_URL_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationProperty>("Valve.VR", "EVRApplicationProperty", "URL_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationProperty URL_String
void Valve::VR::EVRApplicationProperty::_set_URL_String(Valve::VR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationProperty::_set_URL_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationProperty", "URL_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationProperty Description_String
Valve::VR::EVRApplicationProperty Valve::VR::EVRApplicationProperty::_get_Description_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationProperty::_get_Description_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationProperty>("Valve.VR", "EVRApplicationProperty", "Description_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationProperty Description_String
void Valve::VR::EVRApplicationProperty::_set_Description_String(Valve::VR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationProperty::_set_Description_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationProperty", "Description_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationProperty NewsURL_String
Valve::VR::EVRApplicationProperty Valve::VR::EVRApplicationProperty::_get_NewsURL_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationProperty::_get_NewsURL_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationProperty>("Valve.VR", "EVRApplicationProperty", "NewsURL_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationProperty NewsURL_String
void Valve::VR::EVRApplicationProperty::_set_NewsURL_String(Valve::VR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationProperty::_set_NewsURL_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationProperty", "NewsURL_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationProperty ImagePath_String
Valve::VR::EVRApplicationProperty Valve::VR::EVRApplicationProperty::_get_ImagePath_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationProperty::_get_ImagePath_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationProperty>("Valve.VR", "EVRApplicationProperty", "ImagePath_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationProperty ImagePath_String
void Valve::VR::EVRApplicationProperty::_set_ImagePath_String(Valve::VR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationProperty::_set_ImagePath_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationProperty", "ImagePath_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationProperty Source_String
Valve::VR::EVRApplicationProperty Valve::VR::EVRApplicationProperty::_get_Source_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationProperty::_get_Source_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationProperty>("Valve.VR", "EVRApplicationProperty", "Source_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationProperty Source_String
void Valve::VR::EVRApplicationProperty::_set_Source_String(Valve::VR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationProperty::_set_Source_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationProperty", "Source_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationProperty ActionManifestURL_String
Valve::VR::EVRApplicationProperty Valve::VR::EVRApplicationProperty::_get_ActionManifestURL_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationProperty::_get_ActionManifestURL_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationProperty>("Valve.VR", "EVRApplicationProperty", "ActionManifestURL_String"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationProperty ActionManifestURL_String
void Valve::VR::EVRApplicationProperty::_set_ActionManifestURL_String(Valve::VR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationProperty::_set_ActionManifestURL_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationProperty", "ActionManifestURL_String", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationProperty IsDashboardOverlay_Bool
Valve::VR::EVRApplicationProperty Valve::VR::EVRApplicationProperty::_get_IsDashboardOverlay_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationProperty::_get_IsDashboardOverlay_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationProperty>("Valve.VR", "EVRApplicationProperty", "IsDashboardOverlay_Bool"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationProperty IsDashboardOverlay_Bool
void Valve::VR::EVRApplicationProperty::_set_IsDashboardOverlay_Bool(Valve::VR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationProperty::_set_IsDashboardOverlay_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationProperty", "IsDashboardOverlay_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationProperty IsTemplate_Bool
Valve::VR::EVRApplicationProperty Valve::VR::EVRApplicationProperty::_get_IsTemplate_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationProperty::_get_IsTemplate_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationProperty>("Valve.VR", "EVRApplicationProperty", "IsTemplate_Bool"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationProperty IsTemplate_Bool
void Valve::VR::EVRApplicationProperty::_set_IsTemplate_Bool(Valve::VR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationProperty::_set_IsTemplate_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationProperty", "IsTemplate_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationProperty IsInstanced_Bool
Valve::VR::EVRApplicationProperty Valve::VR::EVRApplicationProperty::_get_IsInstanced_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationProperty::_get_IsInstanced_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationProperty>("Valve.VR", "EVRApplicationProperty", "IsInstanced_Bool"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationProperty IsInstanced_Bool
void Valve::VR::EVRApplicationProperty::_set_IsInstanced_Bool(Valve::VR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationProperty::_set_IsInstanced_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationProperty", "IsInstanced_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationProperty IsInternal_Bool
Valve::VR::EVRApplicationProperty Valve::VR::EVRApplicationProperty::_get_IsInternal_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationProperty::_get_IsInternal_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationProperty>("Valve.VR", "EVRApplicationProperty", "IsInternal_Bool"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationProperty IsInternal_Bool
void Valve::VR::EVRApplicationProperty::_set_IsInternal_Bool(Valve::VR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationProperty::_set_IsInternal_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationProperty", "IsInternal_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationProperty WantsCompositorPauseInStandby_Bool
Valve::VR::EVRApplicationProperty Valve::VR::EVRApplicationProperty::_get_WantsCompositorPauseInStandby_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationProperty::_get_WantsCompositorPauseInStandby_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationProperty>("Valve.VR", "EVRApplicationProperty", "WantsCompositorPauseInStandby_Bool"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationProperty WantsCompositorPauseInStandby_Bool
void Valve::VR::EVRApplicationProperty::_set_WantsCompositorPauseInStandby_Bool(Valve::VR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationProperty::_set_WantsCompositorPauseInStandby_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationProperty", "WantsCompositorPauseInStandby_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationProperty LastLaunchTime_Uint64
Valve::VR::EVRApplicationProperty Valve::VR::EVRApplicationProperty::_get_LastLaunchTime_Uint64() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationProperty::_get_LastLaunchTime_Uint64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationProperty>("Valve.VR", "EVRApplicationProperty", "LastLaunchTime_Uint64"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationProperty LastLaunchTime_Uint64
void Valve::VR::EVRApplicationProperty::_set_LastLaunchTime_Uint64(Valve::VR::EVRApplicationProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationProperty::_set_LastLaunchTime_Uint64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationProperty", "LastLaunchTime_Uint64", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EVRApplicationProperty::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationProperty::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EVRApplicationTransitionState
#include "Valve/VR/EVRApplicationTransitionState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationTransitionState VRApplicationTransition_None
Valve::VR::EVRApplicationTransitionState Valve::VR::EVRApplicationTransitionState::_get_VRApplicationTransition_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationTransitionState::_get_VRApplicationTransition_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationTransitionState>("Valve.VR", "EVRApplicationTransitionState", "VRApplicationTransition_None"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationTransitionState VRApplicationTransition_None
void Valve::VR::EVRApplicationTransitionState::_set_VRApplicationTransition_None(Valve::VR::EVRApplicationTransitionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationTransitionState::_set_VRApplicationTransition_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationTransitionState", "VRApplicationTransition_None", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationTransitionState VRApplicationTransition_OldAppQuitSent
Valve::VR::EVRApplicationTransitionState Valve::VR::EVRApplicationTransitionState::_get_VRApplicationTransition_OldAppQuitSent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationTransitionState::_get_VRApplicationTransition_OldAppQuitSent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationTransitionState>("Valve.VR", "EVRApplicationTransitionState", "VRApplicationTransition_OldAppQuitSent"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationTransitionState VRApplicationTransition_OldAppQuitSent
void Valve::VR::EVRApplicationTransitionState::_set_VRApplicationTransition_OldAppQuitSent(Valve::VR::EVRApplicationTransitionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationTransitionState::_set_VRApplicationTransition_OldAppQuitSent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationTransitionState", "VRApplicationTransition_OldAppQuitSent", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationTransitionState VRApplicationTransition_WaitingForExternalLaunch
Valve::VR::EVRApplicationTransitionState Valve::VR::EVRApplicationTransitionState::_get_VRApplicationTransition_WaitingForExternalLaunch() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationTransitionState::_get_VRApplicationTransition_WaitingForExternalLaunch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationTransitionState>("Valve.VR", "EVRApplicationTransitionState", "VRApplicationTransition_WaitingForExternalLaunch"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationTransitionState VRApplicationTransition_WaitingForExternalLaunch
void Valve::VR::EVRApplicationTransitionState::_set_VRApplicationTransition_WaitingForExternalLaunch(Valve::VR::EVRApplicationTransitionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationTransitionState::_set_VRApplicationTransition_WaitingForExternalLaunch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationTransitionState", "VRApplicationTransition_WaitingForExternalLaunch", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRApplicationTransitionState VRApplicationTransition_NewAppLaunched
Valve::VR::EVRApplicationTransitionState Valve::VR::EVRApplicationTransitionState::_get_VRApplicationTransition_NewAppLaunched() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationTransitionState::_get_VRApplicationTransition_NewAppLaunched");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRApplicationTransitionState>("Valve.VR", "EVRApplicationTransitionState", "VRApplicationTransition_NewAppLaunched"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRApplicationTransitionState VRApplicationTransition_NewAppLaunched
void Valve::VR::EVRApplicationTransitionState::_set_VRApplicationTransition_NewAppLaunched(Valve::VR::EVRApplicationTransitionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationTransitionState::_set_VRApplicationTransition_NewAppLaunched");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRApplicationTransitionState", "VRApplicationTransition_NewAppLaunched", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EVRApplicationTransitionState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRApplicationTransitionState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.ChaperoneCalibrationState
#include "Valve/VR/ChaperoneCalibrationState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.ChaperoneCalibrationState OK
Valve::VR::ChaperoneCalibrationState Valve::VR::ChaperoneCalibrationState::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ChaperoneCalibrationState::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ChaperoneCalibrationState>("Valve.VR", "ChaperoneCalibrationState", "OK"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ChaperoneCalibrationState OK
void Valve::VR::ChaperoneCalibrationState::_set_OK(Valve::VR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ChaperoneCalibrationState::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ChaperoneCalibrationState", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ChaperoneCalibrationState Warning
Valve::VR::ChaperoneCalibrationState Valve::VR::ChaperoneCalibrationState::_get_Warning() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ChaperoneCalibrationState::_get_Warning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ChaperoneCalibrationState>("Valve.VR", "ChaperoneCalibrationState", "Warning"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ChaperoneCalibrationState Warning
void Valve::VR::ChaperoneCalibrationState::_set_Warning(Valve::VR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ChaperoneCalibrationState::_set_Warning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ChaperoneCalibrationState", "Warning", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ChaperoneCalibrationState Warning_BaseStationMayHaveMoved
Valve::VR::ChaperoneCalibrationState Valve::VR::ChaperoneCalibrationState::_get_Warning_BaseStationMayHaveMoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ChaperoneCalibrationState::_get_Warning_BaseStationMayHaveMoved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ChaperoneCalibrationState>("Valve.VR", "ChaperoneCalibrationState", "Warning_BaseStationMayHaveMoved"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ChaperoneCalibrationState Warning_BaseStationMayHaveMoved
void Valve::VR::ChaperoneCalibrationState::_set_Warning_BaseStationMayHaveMoved(Valve::VR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ChaperoneCalibrationState::_set_Warning_BaseStationMayHaveMoved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ChaperoneCalibrationState", "Warning_BaseStationMayHaveMoved", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ChaperoneCalibrationState Warning_BaseStationRemoved
Valve::VR::ChaperoneCalibrationState Valve::VR::ChaperoneCalibrationState::_get_Warning_BaseStationRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ChaperoneCalibrationState::_get_Warning_BaseStationRemoved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ChaperoneCalibrationState>("Valve.VR", "ChaperoneCalibrationState", "Warning_BaseStationRemoved"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ChaperoneCalibrationState Warning_BaseStationRemoved
void Valve::VR::ChaperoneCalibrationState::_set_Warning_BaseStationRemoved(Valve::VR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ChaperoneCalibrationState::_set_Warning_BaseStationRemoved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ChaperoneCalibrationState", "Warning_BaseStationRemoved", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ChaperoneCalibrationState Warning_SeatedBoundsInvalid
Valve::VR::ChaperoneCalibrationState Valve::VR::ChaperoneCalibrationState::_get_Warning_SeatedBoundsInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ChaperoneCalibrationState::_get_Warning_SeatedBoundsInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ChaperoneCalibrationState>("Valve.VR", "ChaperoneCalibrationState", "Warning_SeatedBoundsInvalid"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ChaperoneCalibrationState Warning_SeatedBoundsInvalid
void Valve::VR::ChaperoneCalibrationState::_set_Warning_SeatedBoundsInvalid(Valve::VR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ChaperoneCalibrationState::_set_Warning_SeatedBoundsInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ChaperoneCalibrationState", "Warning_SeatedBoundsInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ChaperoneCalibrationState Error
Valve::VR::ChaperoneCalibrationState Valve::VR::ChaperoneCalibrationState::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ChaperoneCalibrationState::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ChaperoneCalibrationState>("Valve.VR", "ChaperoneCalibrationState", "Error"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ChaperoneCalibrationState Error
void Valve::VR::ChaperoneCalibrationState::_set_Error(Valve::VR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ChaperoneCalibrationState::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ChaperoneCalibrationState", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ChaperoneCalibrationState Error_BaseStationUninitialized
Valve::VR::ChaperoneCalibrationState Valve::VR::ChaperoneCalibrationState::_get_Error_BaseStationUninitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ChaperoneCalibrationState::_get_Error_BaseStationUninitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ChaperoneCalibrationState>("Valve.VR", "ChaperoneCalibrationState", "Error_BaseStationUninitialized"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ChaperoneCalibrationState Error_BaseStationUninitialized
void Valve::VR::ChaperoneCalibrationState::_set_Error_BaseStationUninitialized(Valve::VR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ChaperoneCalibrationState::_set_Error_BaseStationUninitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ChaperoneCalibrationState", "Error_BaseStationUninitialized", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ChaperoneCalibrationState Error_BaseStationConflict
Valve::VR::ChaperoneCalibrationState Valve::VR::ChaperoneCalibrationState::_get_Error_BaseStationConflict() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ChaperoneCalibrationState::_get_Error_BaseStationConflict");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ChaperoneCalibrationState>("Valve.VR", "ChaperoneCalibrationState", "Error_BaseStationConflict"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ChaperoneCalibrationState Error_BaseStationConflict
void Valve::VR::ChaperoneCalibrationState::_set_Error_BaseStationConflict(Valve::VR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ChaperoneCalibrationState::_set_Error_BaseStationConflict");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ChaperoneCalibrationState", "Error_BaseStationConflict", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ChaperoneCalibrationState Error_PlayAreaInvalid
Valve::VR::ChaperoneCalibrationState Valve::VR::ChaperoneCalibrationState::_get_Error_PlayAreaInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ChaperoneCalibrationState::_get_Error_PlayAreaInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ChaperoneCalibrationState>("Valve.VR", "ChaperoneCalibrationState", "Error_PlayAreaInvalid"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ChaperoneCalibrationState Error_PlayAreaInvalid
void Valve::VR::ChaperoneCalibrationState::_set_Error_PlayAreaInvalid(Valve::VR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ChaperoneCalibrationState::_set_Error_PlayAreaInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ChaperoneCalibrationState", "Error_PlayAreaInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.ChaperoneCalibrationState Error_CollisionBoundsInvalid
Valve::VR::ChaperoneCalibrationState Valve::VR::ChaperoneCalibrationState::_get_Error_CollisionBoundsInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ChaperoneCalibrationState::_get_Error_CollisionBoundsInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::ChaperoneCalibrationState>("Valve.VR", "ChaperoneCalibrationState", "Error_CollisionBoundsInvalid"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.ChaperoneCalibrationState Error_CollisionBoundsInvalid
void Valve::VR::ChaperoneCalibrationState::_set_Error_CollisionBoundsInvalid(Valve::VR::ChaperoneCalibrationState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ChaperoneCalibrationState::_set_Error_CollisionBoundsInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "ChaperoneCalibrationState", "Error_CollisionBoundsInvalid", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::ChaperoneCalibrationState::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::ChaperoneCalibrationState::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EChaperoneConfigFile
#include "Valve/VR/EChaperoneConfigFile.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EChaperoneConfigFile Live
Valve::VR::EChaperoneConfigFile Valve::VR::EChaperoneConfigFile::_get_Live() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EChaperoneConfigFile::_get_Live");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EChaperoneConfigFile>("Valve.VR", "EChaperoneConfigFile", "Live"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EChaperoneConfigFile Live
void Valve::VR::EChaperoneConfigFile::_set_Live(Valve::VR::EChaperoneConfigFile value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EChaperoneConfigFile::_set_Live");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EChaperoneConfigFile", "Live", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EChaperoneConfigFile Temp
Valve::VR::EChaperoneConfigFile Valve::VR::EChaperoneConfigFile::_get_Temp() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EChaperoneConfigFile::_get_Temp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EChaperoneConfigFile>("Valve.VR", "EChaperoneConfigFile", "Temp"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EChaperoneConfigFile Temp
void Valve::VR::EChaperoneConfigFile::_set_Temp(Valve::VR::EChaperoneConfigFile value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EChaperoneConfigFile::_set_Temp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EChaperoneConfigFile", "Temp", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EChaperoneConfigFile::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EChaperoneConfigFile::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EChaperoneImportFlags
#include "Valve/VR/EChaperoneImportFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EChaperoneImportFlags EChaperoneImport_BoundsOnly
Valve::VR::EChaperoneImportFlags Valve::VR::EChaperoneImportFlags::_get_EChaperoneImport_BoundsOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EChaperoneImportFlags::_get_EChaperoneImport_BoundsOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EChaperoneImportFlags>("Valve.VR", "EChaperoneImportFlags", "EChaperoneImport_BoundsOnly"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EChaperoneImportFlags EChaperoneImport_BoundsOnly
void Valve::VR::EChaperoneImportFlags::_set_EChaperoneImport_BoundsOnly(Valve::VR::EChaperoneImportFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EChaperoneImportFlags::_set_EChaperoneImport_BoundsOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EChaperoneImportFlags", "EChaperoneImport_BoundsOnly", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EChaperoneImportFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EChaperoneImportFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EVRCompositorError
#include "Valve/VR/EVRCompositorError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRCompositorError None
Valve::VR::EVRCompositorError Valve::VR::EVRCompositorError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRCompositorError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRCompositorError>("Valve.VR", "EVRCompositorError", "None"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRCompositorError None
void Valve::VR::EVRCompositorError::_set_None(Valve::VR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRCompositorError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRCompositorError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRCompositorError RequestFailed
Valve::VR::EVRCompositorError Valve::VR::EVRCompositorError::_get_RequestFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRCompositorError::_get_RequestFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRCompositorError>("Valve.VR", "EVRCompositorError", "RequestFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRCompositorError RequestFailed
void Valve::VR::EVRCompositorError::_set_RequestFailed(Valve::VR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRCompositorError::_set_RequestFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRCompositorError", "RequestFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRCompositorError IncompatibleVersion
Valve::VR::EVRCompositorError Valve::VR::EVRCompositorError::_get_IncompatibleVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRCompositorError::_get_IncompatibleVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRCompositorError>("Valve.VR", "EVRCompositorError", "IncompatibleVersion"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRCompositorError IncompatibleVersion
void Valve::VR::EVRCompositorError::_set_IncompatibleVersion(Valve::VR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRCompositorError::_set_IncompatibleVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRCompositorError", "IncompatibleVersion", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRCompositorError DoNotHaveFocus
Valve::VR::EVRCompositorError Valve::VR::EVRCompositorError::_get_DoNotHaveFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRCompositorError::_get_DoNotHaveFocus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRCompositorError>("Valve.VR", "EVRCompositorError", "DoNotHaveFocus"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRCompositorError DoNotHaveFocus
void Valve::VR::EVRCompositorError::_set_DoNotHaveFocus(Valve::VR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRCompositorError::_set_DoNotHaveFocus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRCompositorError", "DoNotHaveFocus", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRCompositorError InvalidTexture
Valve::VR::EVRCompositorError Valve::VR::EVRCompositorError::_get_InvalidTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRCompositorError::_get_InvalidTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRCompositorError>("Valve.VR", "EVRCompositorError", "InvalidTexture"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRCompositorError InvalidTexture
void Valve::VR::EVRCompositorError::_set_InvalidTexture(Valve::VR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRCompositorError::_set_InvalidTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRCompositorError", "InvalidTexture", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRCompositorError IsNotSceneApplication
Valve::VR::EVRCompositorError Valve::VR::EVRCompositorError::_get_IsNotSceneApplication() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRCompositorError::_get_IsNotSceneApplication");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRCompositorError>("Valve.VR", "EVRCompositorError", "IsNotSceneApplication"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRCompositorError IsNotSceneApplication
void Valve::VR::EVRCompositorError::_set_IsNotSceneApplication(Valve::VR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRCompositorError::_set_IsNotSceneApplication");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRCompositorError", "IsNotSceneApplication", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRCompositorError TextureIsOnWrongDevice
Valve::VR::EVRCompositorError Valve::VR::EVRCompositorError::_get_TextureIsOnWrongDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRCompositorError::_get_TextureIsOnWrongDevice");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRCompositorError>("Valve.VR", "EVRCompositorError", "TextureIsOnWrongDevice"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRCompositorError TextureIsOnWrongDevice
void Valve::VR::EVRCompositorError::_set_TextureIsOnWrongDevice(Valve::VR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRCompositorError::_set_TextureIsOnWrongDevice");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRCompositorError", "TextureIsOnWrongDevice", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRCompositorError TextureUsesUnsupportedFormat
Valve::VR::EVRCompositorError Valve::VR::EVRCompositorError::_get_TextureUsesUnsupportedFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRCompositorError::_get_TextureUsesUnsupportedFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRCompositorError>("Valve.VR", "EVRCompositorError", "TextureUsesUnsupportedFormat"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRCompositorError TextureUsesUnsupportedFormat
void Valve::VR::EVRCompositorError::_set_TextureUsesUnsupportedFormat(Valve::VR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRCompositorError::_set_TextureUsesUnsupportedFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRCompositorError", "TextureUsesUnsupportedFormat", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRCompositorError SharedTexturesNotSupported
Valve::VR::EVRCompositorError Valve::VR::EVRCompositorError::_get_SharedTexturesNotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRCompositorError::_get_SharedTexturesNotSupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRCompositorError>("Valve.VR", "EVRCompositorError", "SharedTexturesNotSupported"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRCompositorError SharedTexturesNotSupported
void Valve::VR::EVRCompositorError::_set_SharedTexturesNotSupported(Valve::VR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRCompositorError::_set_SharedTexturesNotSupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRCompositorError", "SharedTexturesNotSupported", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRCompositorError IndexOutOfRange
Valve::VR::EVRCompositorError Valve::VR::EVRCompositorError::_get_IndexOutOfRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRCompositorError::_get_IndexOutOfRange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRCompositorError>("Valve.VR", "EVRCompositorError", "IndexOutOfRange"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRCompositorError IndexOutOfRange
void Valve::VR::EVRCompositorError::_set_IndexOutOfRange(Valve::VR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRCompositorError::_set_IndexOutOfRange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRCompositorError", "IndexOutOfRange", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRCompositorError AlreadySubmitted
Valve::VR::EVRCompositorError Valve::VR::EVRCompositorError::_get_AlreadySubmitted() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRCompositorError::_get_AlreadySubmitted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRCompositorError>("Valve.VR", "EVRCompositorError", "AlreadySubmitted"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRCompositorError AlreadySubmitted
void Valve::VR::EVRCompositorError::_set_AlreadySubmitted(Valve::VR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRCompositorError::_set_AlreadySubmitted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRCompositorError", "AlreadySubmitted", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRCompositorError InvalidBounds
Valve::VR::EVRCompositorError Valve::VR::EVRCompositorError::_get_InvalidBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRCompositorError::_get_InvalidBounds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRCompositorError>("Valve.VR", "EVRCompositorError", "InvalidBounds"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRCompositorError InvalidBounds
void Valve::VR::EVRCompositorError::_set_InvalidBounds(Valve::VR::EVRCompositorError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRCompositorError::_set_InvalidBounds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRCompositorError", "InvalidBounds", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EVRCompositorError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRCompositorError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EVRCompositorTimingMode
#include "Valve/VR/EVRCompositorTimingMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRCompositorTimingMode Implicit
Valve::VR::EVRCompositorTimingMode Valve::VR::EVRCompositorTimingMode::_get_Implicit() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRCompositorTimingMode::_get_Implicit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRCompositorTimingMode>("Valve.VR", "EVRCompositorTimingMode", "Implicit"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRCompositorTimingMode Implicit
void Valve::VR::EVRCompositorTimingMode::_set_Implicit(Valve::VR::EVRCompositorTimingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRCompositorTimingMode::_set_Implicit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRCompositorTimingMode", "Implicit", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRCompositorTimingMode Explicit_RuntimePerformsPostPresentHandoff
Valve::VR::EVRCompositorTimingMode Valve::VR::EVRCompositorTimingMode::_get_Explicit_RuntimePerformsPostPresentHandoff() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRCompositorTimingMode::_get_Explicit_RuntimePerformsPostPresentHandoff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRCompositorTimingMode>("Valve.VR", "EVRCompositorTimingMode", "Explicit_RuntimePerformsPostPresentHandoff"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRCompositorTimingMode Explicit_RuntimePerformsPostPresentHandoff
void Valve::VR::EVRCompositorTimingMode::_set_Explicit_RuntimePerformsPostPresentHandoff(Valve::VR::EVRCompositorTimingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRCompositorTimingMode::_set_Explicit_RuntimePerformsPostPresentHandoff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRCompositorTimingMode", "Explicit_RuntimePerformsPostPresentHandoff", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRCompositorTimingMode Explicit_ApplicationPerformsPostPresentHandoff
Valve::VR::EVRCompositorTimingMode Valve::VR::EVRCompositorTimingMode::_get_Explicit_ApplicationPerformsPostPresentHandoff() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRCompositorTimingMode::_get_Explicit_ApplicationPerformsPostPresentHandoff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRCompositorTimingMode>("Valve.VR", "EVRCompositorTimingMode", "Explicit_ApplicationPerformsPostPresentHandoff"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRCompositorTimingMode Explicit_ApplicationPerformsPostPresentHandoff
void Valve::VR::EVRCompositorTimingMode::_set_Explicit_ApplicationPerformsPostPresentHandoff(Valve::VR::EVRCompositorTimingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRCompositorTimingMode::_set_Explicit_ApplicationPerformsPostPresentHandoff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRCompositorTimingMode", "Explicit_ApplicationPerformsPostPresentHandoff", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EVRCompositorTimingMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRCompositorTimingMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.VROverlayInputMethod
#include "Valve/VR/VROverlayInputMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.VROverlayInputMethod None
Valve::VR::VROverlayInputMethod Valve::VR::VROverlayInputMethod::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayInputMethod::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::VROverlayInputMethod>("Valve.VR", "VROverlayInputMethod", "None"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.VROverlayInputMethod None
void Valve::VR::VROverlayInputMethod::_set_None(Valve::VR::VROverlayInputMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayInputMethod::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "VROverlayInputMethod", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.VROverlayInputMethod Mouse
Valve::VR::VROverlayInputMethod Valve::VR::VROverlayInputMethod::_get_Mouse() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayInputMethod::_get_Mouse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::VROverlayInputMethod>("Valve.VR", "VROverlayInputMethod", "Mouse"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.VROverlayInputMethod Mouse
void Valve::VR::VROverlayInputMethod::_set_Mouse(Valve::VR::VROverlayInputMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayInputMethod::_set_Mouse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "VROverlayInputMethod", "Mouse", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.VROverlayInputMethod DualAnalog
Valve::VR::VROverlayInputMethod Valve::VR::VROverlayInputMethod::_get_DualAnalog() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayInputMethod::_get_DualAnalog");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::VROverlayInputMethod>("Valve.VR", "VROverlayInputMethod", "DualAnalog"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.VROverlayInputMethod DualAnalog
void Valve::VR::VROverlayInputMethod::_set_DualAnalog(Valve::VR::VROverlayInputMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayInputMethod::_set_DualAnalog");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "VROverlayInputMethod", "DualAnalog", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::VROverlayInputMethod::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayInputMethod::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.VROverlayTransformType
#include "Valve/VR/VROverlayTransformType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.VROverlayTransformType VROverlayTransform_Absolute
Valve::VR::VROverlayTransformType Valve::VR::VROverlayTransformType::_get_VROverlayTransform_Absolute() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayTransformType::_get_VROverlayTransform_Absolute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::VROverlayTransformType>("Valve.VR", "VROverlayTransformType", "VROverlayTransform_Absolute"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.VROverlayTransformType VROverlayTransform_Absolute
void Valve::VR::VROverlayTransformType::_set_VROverlayTransform_Absolute(Valve::VR::VROverlayTransformType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayTransformType::_set_VROverlayTransform_Absolute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "VROverlayTransformType", "VROverlayTransform_Absolute", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.VROverlayTransformType VROverlayTransform_TrackedDeviceRelative
Valve::VR::VROverlayTransformType Valve::VR::VROverlayTransformType::_get_VROverlayTransform_TrackedDeviceRelative() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayTransformType::_get_VROverlayTransform_TrackedDeviceRelative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::VROverlayTransformType>("Valve.VR", "VROverlayTransformType", "VROverlayTransform_TrackedDeviceRelative"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.VROverlayTransformType VROverlayTransform_TrackedDeviceRelative
void Valve::VR::VROverlayTransformType::_set_VROverlayTransform_TrackedDeviceRelative(Valve::VR::VROverlayTransformType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayTransformType::_set_VROverlayTransform_TrackedDeviceRelative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "VROverlayTransformType", "VROverlayTransform_TrackedDeviceRelative", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.VROverlayTransformType VROverlayTransform_SystemOverlay
Valve::VR::VROverlayTransformType Valve::VR::VROverlayTransformType::_get_VROverlayTransform_SystemOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayTransformType::_get_VROverlayTransform_SystemOverlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::VROverlayTransformType>("Valve.VR", "VROverlayTransformType", "VROverlayTransform_SystemOverlay"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.VROverlayTransformType VROverlayTransform_SystemOverlay
void Valve::VR::VROverlayTransformType::_set_VROverlayTransform_SystemOverlay(Valve::VR::VROverlayTransformType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayTransformType::_set_VROverlayTransform_SystemOverlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "VROverlayTransformType", "VROverlayTransform_SystemOverlay", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.VROverlayTransformType VROverlayTransform_TrackedComponent
Valve::VR::VROverlayTransformType Valve::VR::VROverlayTransformType::_get_VROverlayTransform_TrackedComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayTransformType::_get_VROverlayTransform_TrackedComponent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::VROverlayTransformType>("Valve.VR", "VROverlayTransformType", "VROverlayTransform_TrackedComponent"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.VROverlayTransformType VROverlayTransform_TrackedComponent
void Valve::VR::VROverlayTransformType::_set_VROverlayTransform_TrackedComponent(Valve::VR::VROverlayTransformType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayTransformType::_set_VROverlayTransform_TrackedComponent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "VROverlayTransformType", "VROverlayTransform_TrackedComponent", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::VROverlayTransformType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayTransformType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.VROverlayFlags
#include "Valve/VR/VROverlayFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.VROverlayFlags None
Valve::VR::VROverlayFlags Valve::VR::VROverlayFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::VROverlayFlags>("Valve.VR", "VROverlayFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.VROverlayFlags None
void Valve::VR::VROverlayFlags::_set_None(Valve::VR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "VROverlayFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.VROverlayFlags Curved
Valve::VR::VROverlayFlags Valve::VR::VROverlayFlags::_get_Curved() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayFlags::_get_Curved");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::VROverlayFlags>("Valve.VR", "VROverlayFlags", "Curved"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.VROverlayFlags Curved
void Valve::VR::VROverlayFlags::_set_Curved(Valve::VR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayFlags::_set_Curved");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "VROverlayFlags", "Curved", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.VROverlayFlags RGSS4X
Valve::VR::VROverlayFlags Valve::VR::VROverlayFlags::_get_RGSS4X() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayFlags::_get_RGSS4X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::VROverlayFlags>("Valve.VR", "VROverlayFlags", "RGSS4X"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.VROverlayFlags RGSS4X
void Valve::VR::VROverlayFlags::_set_RGSS4X(Valve::VR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayFlags::_set_RGSS4X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "VROverlayFlags", "RGSS4X", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.VROverlayFlags NoDashboardTab
Valve::VR::VROverlayFlags Valve::VR::VROverlayFlags::_get_NoDashboardTab() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayFlags::_get_NoDashboardTab");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::VROverlayFlags>("Valve.VR", "VROverlayFlags", "NoDashboardTab"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.VROverlayFlags NoDashboardTab
void Valve::VR::VROverlayFlags::_set_NoDashboardTab(Valve::VR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayFlags::_set_NoDashboardTab");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "VROverlayFlags", "NoDashboardTab", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.VROverlayFlags AcceptsGamepadEvents
Valve::VR::VROverlayFlags Valve::VR::VROverlayFlags::_get_AcceptsGamepadEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayFlags::_get_AcceptsGamepadEvents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::VROverlayFlags>("Valve.VR", "VROverlayFlags", "AcceptsGamepadEvents"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.VROverlayFlags AcceptsGamepadEvents
void Valve::VR::VROverlayFlags::_set_AcceptsGamepadEvents(Valve::VR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayFlags::_set_AcceptsGamepadEvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "VROverlayFlags", "AcceptsGamepadEvents", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.VROverlayFlags ShowGamepadFocus
Valve::VR::VROverlayFlags Valve::VR::VROverlayFlags::_get_ShowGamepadFocus() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayFlags::_get_ShowGamepadFocus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::VROverlayFlags>("Valve.VR", "VROverlayFlags", "ShowGamepadFocus"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.VROverlayFlags ShowGamepadFocus
void Valve::VR::VROverlayFlags::_set_ShowGamepadFocus(Valve::VR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayFlags::_set_ShowGamepadFocus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "VROverlayFlags", "ShowGamepadFocus", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.VROverlayFlags SendVRScrollEvents
Valve::VR::VROverlayFlags Valve::VR::VROverlayFlags::_get_SendVRScrollEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayFlags::_get_SendVRScrollEvents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::VROverlayFlags>("Valve.VR", "VROverlayFlags", "SendVRScrollEvents"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.VROverlayFlags SendVRScrollEvents
void Valve::VR::VROverlayFlags::_set_SendVRScrollEvents(Valve::VR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayFlags::_set_SendVRScrollEvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "VROverlayFlags", "SendVRScrollEvents", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.VROverlayFlags SendVRTouchpadEvents
Valve::VR::VROverlayFlags Valve::VR::VROverlayFlags::_get_SendVRTouchpadEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayFlags::_get_SendVRTouchpadEvents");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::VROverlayFlags>("Valve.VR", "VROverlayFlags", "SendVRTouchpadEvents"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.VROverlayFlags SendVRTouchpadEvents
void Valve::VR::VROverlayFlags::_set_SendVRTouchpadEvents(Valve::VR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayFlags::_set_SendVRTouchpadEvents");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "VROverlayFlags", "SendVRTouchpadEvents", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.VROverlayFlags ShowTouchPadScrollWheel
Valve::VR::VROverlayFlags Valve::VR::VROverlayFlags::_get_ShowTouchPadScrollWheel() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayFlags::_get_ShowTouchPadScrollWheel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::VROverlayFlags>("Valve.VR", "VROverlayFlags", "ShowTouchPadScrollWheel"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.VROverlayFlags ShowTouchPadScrollWheel
void Valve::VR::VROverlayFlags::_set_ShowTouchPadScrollWheel(Valve::VR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayFlags::_set_ShowTouchPadScrollWheel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "VROverlayFlags", "ShowTouchPadScrollWheel", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.VROverlayFlags TransferOwnershipToInternalProcess
Valve::VR::VROverlayFlags Valve::VR::VROverlayFlags::_get_TransferOwnershipToInternalProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayFlags::_get_TransferOwnershipToInternalProcess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::VROverlayFlags>("Valve.VR", "VROverlayFlags", "TransferOwnershipToInternalProcess"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.VROverlayFlags TransferOwnershipToInternalProcess
void Valve::VR::VROverlayFlags::_set_TransferOwnershipToInternalProcess(Valve::VR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayFlags::_set_TransferOwnershipToInternalProcess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "VROverlayFlags", "TransferOwnershipToInternalProcess", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.VROverlayFlags SideBySide_Parallel
Valve::VR::VROverlayFlags Valve::VR::VROverlayFlags::_get_SideBySide_Parallel() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayFlags::_get_SideBySide_Parallel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::VROverlayFlags>("Valve.VR", "VROverlayFlags", "SideBySide_Parallel"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.VROverlayFlags SideBySide_Parallel
void Valve::VR::VROverlayFlags::_set_SideBySide_Parallel(Valve::VR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayFlags::_set_SideBySide_Parallel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "VROverlayFlags", "SideBySide_Parallel", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.VROverlayFlags SideBySide_Crossed
Valve::VR::VROverlayFlags Valve::VR::VROverlayFlags::_get_SideBySide_Crossed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayFlags::_get_SideBySide_Crossed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::VROverlayFlags>("Valve.VR", "VROverlayFlags", "SideBySide_Crossed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.VROverlayFlags SideBySide_Crossed
void Valve::VR::VROverlayFlags::_set_SideBySide_Crossed(Valve::VR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayFlags::_set_SideBySide_Crossed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "VROverlayFlags", "SideBySide_Crossed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.VROverlayFlags Panorama
Valve::VR::VROverlayFlags Valve::VR::VROverlayFlags::_get_Panorama() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayFlags::_get_Panorama");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::VROverlayFlags>("Valve.VR", "VROverlayFlags", "Panorama"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.VROverlayFlags Panorama
void Valve::VR::VROverlayFlags::_set_Panorama(Valve::VR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayFlags::_set_Panorama");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "VROverlayFlags", "Panorama", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.VROverlayFlags StereoPanorama
Valve::VR::VROverlayFlags Valve::VR::VROverlayFlags::_get_StereoPanorama() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayFlags::_get_StereoPanorama");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::VROverlayFlags>("Valve.VR", "VROverlayFlags", "StereoPanorama"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.VROverlayFlags StereoPanorama
void Valve::VR::VROverlayFlags::_set_StereoPanorama(Valve::VR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayFlags::_set_StereoPanorama");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "VROverlayFlags", "StereoPanorama", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.VROverlayFlags SortWithNonSceneOverlays
Valve::VR::VROverlayFlags Valve::VR::VROverlayFlags::_get_SortWithNonSceneOverlays() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayFlags::_get_SortWithNonSceneOverlays");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::VROverlayFlags>("Valve.VR", "VROverlayFlags", "SortWithNonSceneOverlays"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.VROverlayFlags SortWithNonSceneOverlays
void Valve::VR::VROverlayFlags::_set_SortWithNonSceneOverlays(Valve::VR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayFlags::_set_SortWithNonSceneOverlays");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "VROverlayFlags", "SortWithNonSceneOverlays", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.VROverlayFlags VisibleInDashboard
Valve::VR::VROverlayFlags Valve::VR::VROverlayFlags::_get_VisibleInDashboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayFlags::_get_VisibleInDashboard");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::VROverlayFlags>("Valve.VR", "VROverlayFlags", "VisibleInDashboard"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.VROverlayFlags VisibleInDashboard
void Valve::VR::VROverlayFlags::_set_VisibleInDashboard(Valve::VR::VROverlayFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayFlags::_set_VisibleInDashboard");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "VROverlayFlags", "VisibleInDashboard", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::VROverlayFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VROverlayFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.VRMessageOverlayResponse
#include "Valve/VR/VRMessageOverlayResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.VRMessageOverlayResponse ButtonPress_0
Valve::VR::VRMessageOverlayResponse Valve::VR::VRMessageOverlayResponse::_get_ButtonPress_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VRMessageOverlayResponse::_get_ButtonPress_0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::VRMessageOverlayResponse>("Valve.VR", "VRMessageOverlayResponse", "ButtonPress_0"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.VRMessageOverlayResponse ButtonPress_0
void Valve::VR::VRMessageOverlayResponse::_set_ButtonPress_0(Valve::VR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VRMessageOverlayResponse::_set_ButtonPress_0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "VRMessageOverlayResponse", "ButtonPress_0", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.VRMessageOverlayResponse ButtonPress_1
Valve::VR::VRMessageOverlayResponse Valve::VR::VRMessageOverlayResponse::_get_ButtonPress_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VRMessageOverlayResponse::_get_ButtonPress_1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::VRMessageOverlayResponse>("Valve.VR", "VRMessageOverlayResponse", "ButtonPress_1"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.VRMessageOverlayResponse ButtonPress_1
void Valve::VR::VRMessageOverlayResponse::_set_ButtonPress_1(Valve::VR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VRMessageOverlayResponse::_set_ButtonPress_1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "VRMessageOverlayResponse", "ButtonPress_1", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.VRMessageOverlayResponse ButtonPress_2
Valve::VR::VRMessageOverlayResponse Valve::VR::VRMessageOverlayResponse::_get_ButtonPress_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VRMessageOverlayResponse::_get_ButtonPress_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::VRMessageOverlayResponse>("Valve.VR", "VRMessageOverlayResponse", "ButtonPress_2"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.VRMessageOverlayResponse ButtonPress_2
void Valve::VR::VRMessageOverlayResponse::_set_ButtonPress_2(Valve::VR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VRMessageOverlayResponse::_set_ButtonPress_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "VRMessageOverlayResponse", "ButtonPress_2", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.VRMessageOverlayResponse ButtonPress_3
Valve::VR::VRMessageOverlayResponse Valve::VR::VRMessageOverlayResponse::_get_ButtonPress_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VRMessageOverlayResponse::_get_ButtonPress_3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::VRMessageOverlayResponse>("Valve.VR", "VRMessageOverlayResponse", "ButtonPress_3"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.VRMessageOverlayResponse ButtonPress_3
void Valve::VR::VRMessageOverlayResponse::_set_ButtonPress_3(Valve::VR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VRMessageOverlayResponse::_set_ButtonPress_3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "VRMessageOverlayResponse", "ButtonPress_3", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.VRMessageOverlayResponse CouldntFindSystemOverlay
Valve::VR::VRMessageOverlayResponse Valve::VR::VRMessageOverlayResponse::_get_CouldntFindSystemOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VRMessageOverlayResponse::_get_CouldntFindSystemOverlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::VRMessageOverlayResponse>("Valve.VR", "VRMessageOverlayResponse", "CouldntFindSystemOverlay"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.VRMessageOverlayResponse CouldntFindSystemOverlay
void Valve::VR::VRMessageOverlayResponse::_set_CouldntFindSystemOverlay(Valve::VR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VRMessageOverlayResponse::_set_CouldntFindSystemOverlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "VRMessageOverlayResponse", "CouldntFindSystemOverlay", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.VRMessageOverlayResponse CouldntFindOrCreateClientOverlay
Valve::VR::VRMessageOverlayResponse Valve::VR::VRMessageOverlayResponse::_get_CouldntFindOrCreateClientOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VRMessageOverlayResponse::_get_CouldntFindOrCreateClientOverlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::VRMessageOverlayResponse>("Valve.VR", "VRMessageOverlayResponse", "CouldntFindOrCreateClientOverlay"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.VRMessageOverlayResponse CouldntFindOrCreateClientOverlay
void Valve::VR::VRMessageOverlayResponse::_set_CouldntFindOrCreateClientOverlay(Valve::VR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VRMessageOverlayResponse::_set_CouldntFindOrCreateClientOverlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "VRMessageOverlayResponse", "CouldntFindOrCreateClientOverlay", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.VRMessageOverlayResponse ApplicationQuit
Valve::VR::VRMessageOverlayResponse Valve::VR::VRMessageOverlayResponse::_get_ApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VRMessageOverlayResponse::_get_ApplicationQuit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::VRMessageOverlayResponse>("Valve.VR", "VRMessageOverlayResponse", "ApplicationQuit"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.VRMessageOverlayResponse ApplicationQuit
void Valve::VR::VRMessageOverlayResponse::_set_ApplicationQuit(Valve::VR::VRMessageOverlayResponse value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VRMessageOverlayResponse::_set_ApplicationQuit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "VRMessageOverlayResponse", "ApplicationQuit", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::VRMessageOverlayResponse::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VRMessageOverlayResponse::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EGamepadTextInputMode
#include "Valve/VR/EGamepadTextInputMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EGamepadTextInputMode k_EGamepadTextInputModeNormal
Valve::VR::EGamepadTextInputMode Valve::VR::EGamepadTextInputMode::_get_k_EGamepadTextInputModeNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EGamepadTextInputMode::_get_k_EGamepadTextInputModeNormal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EGamepadTextInputMode>("Valve.VR", "EGamepadTextInputMode", "k_EGamepadTextInputModeNormal"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EGamepadTextInputMode k_EGamepadTextInputModeNormal
void Valve::VR::EGamepadTextInputMode::_set_k_EGamepadTextInputModeNormal(Valve::VR::EGamepadTextInputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EGamepadTextInputMode::_set_k_EGamepadTextInputModeNormal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EGamepadTextInputMode", "k_EGamepadTextInputModeNormal", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EGamepadTextInputMode k_EGamepadTextInputModePassword
Valve::VR::EGamepadTextInputMode Valve::VR::EGamepadTextInputMode::_get_k_EGamepadTextInputModePassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EGamepadTextInputMode::_get_k_EGamepadTextInputModePassword");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EGamepadTextInputMode>("Valve.VR", "EGamepadTextInputMode", "k_EGamepadTextInputModePassword"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EGamepadTextInputMode k_EGamepadTextInputModePassword
void Valve::VR::EGamepadTextInputMode::_set_k_EGamepadTextInputModePassword(Valve::VR::EGamepadTextInputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EGamepadTextInputMode::_set_k_EGamepadTextInputModePassword");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EGamepadTextInputMode", "k_EGamepadTextInputModePassword", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EGamepadTextInputMode k_EGamepadTextInputModeSubmit
Valve::VR::EGamepadTextInputMode Valve::VR::EGamepadTextInputMode::_get_k_EGamepadTextInputModeSubmit() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EGamepadTextInputMode::_get_k_EGamepadTextInputModeSubmit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EGamepadTextInputMode>("Valve.VR", "EGamepadTextInputMode", "k_EGamepadTextInputModeSubmit"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EGamepadTextInputMode k_EGamepadTextInputModeSubmit
void Valve::VR::EGamepadTextInputMode::_set_k_EGamepadTextInputModeSubmit(Valve::VR::EGamepadTextInputMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EGamepadTextInputMode::_set_k_EGamepadTextInputModeSubmit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EGamepadTextInputMode", "k_EGamepadTextInputModeSubmit", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EGamepadTextInputMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EGamepadTextInputMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EGamepadTextInputLineMode
#include "Valve/VR/EGamepadTextInputLineMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EGamepadTextInputLineMode k_EGamepadTextInputLineModeSingleLine
Valve::VR::EGamepadTextInputLineMode Valve::VR::EGamepadTextInputLineMode::_get_k_EGamepadTextInputLineModeSingleLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EGamepadTextInputLineMode::_get_k_EGamepadTextInputLineModeSingleLine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EGamepadTextInputLineMode>("Valve.VR", "EGamepadTextInputLineMode", "k_EGamepadTextInputLineModeSingleLine"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EGamepadTextInputLineMode k_EGamepadTextInputLineModeSingleLine
void Valve::VR::EGamepadTextInputLineMode::_set_k_EGamepadTextInputLineModeSingleLine(Valve::VR::EGamepadTextInputLineMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EGamepadTextInputLineMode::_set_k_EGamepadTextInputLineModeSingleLine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EGamepadTextInputLineMode", "k_EGamepadTextInputLineModeSingleLine", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EGamepadTextInputLineMode k_EGamepadTextInputLineModeMultipleLines
Valve::VR::EGamepadTextInputLineMode Valve::VR::EGamepadTextInputLineMode::_get_k_EGamepadTextInputLineModeMultipleLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EGamepadTextInputLineMode::_get_k_EGamepadTextInputLineModeMultipleLines");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EGamepadTextInputLineMode>("Valve.VR", "EGamepadTextInputLineMode", "k_EGamepadTextInputLineModeMultipleLines"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EGamepadTextInputLineMode k_EGamepadTextInputLineModeMultipleLines
void Valve::VR::EGamepadTextInputLineMode::_set_k_EGamepadTextInputLineModeMultipleLines(Valve::VR::EGamepadTextInputLineMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EGamepadTextInputLineMode::_set_k_EGamepadTextInputLineModeMultipleLines");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EGamepadTextInputLineMode", "k_EGamepadTextInputLineModeMultipleLines", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EGamepadTextInputLineMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EGamepadTextInputLineMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EOverlayDirection
#include "Valve/VR/EOverlayDirection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EOverlayDirection Up
Valve::VR::EOverlayDirection Valve::VR::EOverlayDirection::_get_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EOverlayDirection::_get_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EOverlayDirection>("Valve.VR", "EOverlayDirection", "Up"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EOverlayDirection Up
void Valve::VR::EOverlayDirection::_set_Up(Valve::VR::EOverlayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EOverlayDirection::_set_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EOverlayDirection", "Up", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EOverlayDirection Down
Valve::VR::EOverlayDirection Valve::VR::EOverlayDirection::_get_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EOverlayDirection::_get_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EOverlayDirection>("Valve.VR", "EOverlayDirection", "Down"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EOverlayDirection Down
void Valve::VR::EOverlayDirection::_set_Down(Valve::VR::EOverlayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EOverlayDirection::_set_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EOverlayDirection", "Down", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EOverlayDirection Left
Valve::VR::EOverlayDirection Valve::VR::EOverlayDirection::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EOverlayDirection::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EOverlayDirection>("Valve.VR", "EOverlayDirection", "Left"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EOverlayDirection Left
void Valve::VR::EOverlayDirection::_set_Left(Valve::VR::EOverlayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EOverlayDirection::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EOverlayDirection", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EOverlayDirection Right
Valve::VR::EOverlayDirection Valve::VR::EOverlayDirection::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EOverlayDirection::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EOverlayDirection>("Valve.VR", "EOverlayDirection", "Right"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EOverlayDirection Right
void Valve::VR::EOverlayDirection::_set_Right(Valve::VR::EOverlayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EOverlayDirection::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EOverlayDirection", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EOverlayDirection Count
Valve::VR::EOverlayDirection Valve::VR::EOverlayDirection::_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EOverlayDirection::_get_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EOverlayDirection>("Valve.VR", "EOverlayDirection", "Count"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EOverlayDirection Count
void Valve::VR::EOverlayDirection::_set_Count(Valve::VR::EOverlayDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EOverlayDirection::_set_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EOverlayDirection", "Count", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EOverlayDirection::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EOverlayDirection::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EVROverlayIntersectionMaskPrimitiveType
#include "Valve/VR/EVROverlayIntersectionMaskPrimitiveType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVROverlayIntersectionMaskPrimitiveType OverlayIntersectionPrimitiveType_Rectangle
Valve::VR::EVROverlayIntersectionMaskPrimitiveType Valve::VR::EVROverlayIntersectionMaskPrimitiveType::_get_OverlayIntersectionPrimitiveType_Rectangle() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayIntersectionMaskPrimitiveType::_get_OverlayIntersectionPrimitiveType_Rectangle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVROverlayIntersectionMaskPrimitiveType>("Valve.VR", "EVROverlayIntersectionMaskPrimitiveType", "OverlayIntersectionPrimitiveType_Rectangle"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVROverlayIntersectionMaskPrimitiveType OverlayIntersectionPrimitiveType_Rectangle
void Valve::VR::EVROverlayIntersectionMaskPrimitiveType::_set_OverlayIntersectionPrimitiveType_Rectangle(Valve::VR::EVROverlayIntersectionMaskPrimitiveType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayIntersectionMaskPrimitiveType::_set_OverlayIntersectionPrimitiveType_Rectangle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVROverlayIntersectionMaskPrimitiveType", "OverlayIntersectionPrimitiveType_Rectangle", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVROverlayIntersectionMaskPrimitiveType OverlayIntersectionPrimitiveType_Circle
Valve::VR::EVROverlayIntersectionMaskPrimitiveType Valve::VR::EVROverlayIntersectionMaskPrimitiveType::_get_OverlayIntersectionPrimitiveType_Circle() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayIntersectionMaskPrimitiveType::_get_OverlayIntersectionPrimitiveType_Circle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVROverlayIntersectionMaskPrimitiveType>("Valve.VR", "EVROverlayIntersectionMaskPrimitiveType", "OverlayIntersectionPrimitiveType_Circle"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVROverlayIntersectionMaskPrimitiveType OverlayIntersectionPrimitiveType_Circle
void Valve::VR::EVROverlayIntersectionMaskPrimitiveType::_set_OverlayIntersectionPrimitiveType_Circle(Valve::VR::EVROverlayIntersectionMaskPrimitiveType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayIntersectionMaskPrimitiveType::_set_OverlayIntersectionPrimitiveType_Circle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVROverlayIntersectionMaskPrimitiveType", "OverlayIntersectionPrimitiveType_Circle", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EVROverlayIntersectionMaskPrimitiveType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVROverlayIntersectionMaskPrimitiveType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EVRRenderModelError
#include "Valve/VR/EVRRenderModelError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRRenderModelError None
Valve::VR::EVRRenderModelError Valve::VR::EVRRenderModelError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRRenderModelError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRRenderModelError>("Valve.VR", "EVRRenderModelError", "None"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRRenderModelError None
void Valve::VR::EVRRenderModelError::_set_None(Valve::VR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRRenderModelError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRRenderModelError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRRenderModelError Loading
Valve::VR::EVRRenderModelError Valve::VR::EVRRenderModelError::_get_Loading() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRRenderModelError::_get_Loading");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRRenderModelError>("Valve.VR", "EVRRenderModelError", "Loading"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRRenderModelError Loading
void Valve::VR::EVRRenderModelError::_set_Loading(Valve::VR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRRenderModelError::_set_Loading");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRRenderModelError", "Loading", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRRenderModelError NotSupported
Valve::VR::EVRRenderModelError Valve::VR::EVRRenderModelError::_get_NotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRRenderModelError::_get_NotSupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRRenderModelError>("Valve.VR", "EVRRenderModelError", "NotSupported"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRRenderModelError NotSupported
void Valve::VR::EVRRenderModelError::_set_NotSupported(Valve::VR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRRenderModelError::_set_NotSupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRRenderModelError", "NotSupported", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRRenderModelError InvalidArg
Valve::VR::EVRRenderModelError Valve::VR::EVRRenderModelError::_get_InvalidArg() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRRenderModelError::_get_InvalidArg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRRenderModelError>("Valve.VR", "EVRRenderModelError", "InvalidArg"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRRenderModelError InvalidArg
void Valve::VR::EVRRenderModelError::_set_InvalidArg(Valve::VR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRRenderModelError::_set_InvalidArg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRRenderModelError", "InvalidArg", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRRenderModelError InvalidModel
Valve::VR::EVRRenderModelError Valve::VR::EVRRenderModelError::_get_InvalidModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRRenderModelError::_get_InvalidModel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRRenderModelError>("Valve.VR", "EVRRenderModelError", "InvalidModel"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRRenderModelError InvalidModel
void Valve::VR::EVRRenderModelError::_set_InvalidModel(Valve::VR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRRenderModelError::_set_InvalidModel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRRenderModelError", "InvalidModel", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRRenderModelError NoShapes
Valve::VR::EVRRenderModelError Valve::VR::EVRRenderModelError::_get_NoShapes() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRRenderModelError::_get_NoShapes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRRenderModelError>("Valve.VR", "EVRRenderModelError", "NoShapes"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRRenderModelError NoShapes
void Valve::VR::EVRRenderModelError::_set_NoShapes(Valve::VR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRRenderModelError::_set_NoShapes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRRenderModelError", "NoShapes", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRRenderModelError MultipleShapes
Valve::VR::EVRRenderModelError Valve::VR::EVRRenderModelError::_get_MultipleShapes() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRRenderModelError::_get_MultipleShapes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRRenderModelError>("Valve.VR", "EVRRenderModelError", "MultipleShapes"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRRenderModelError MultipleShapes
void Valve::VR::EVRRenderModelError::_set_MultipleShapes(Valve::VR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRRenderModelError::_set_MultipleShapes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRRenderModelError", "MultipleShapes", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRRenderModelError TooManyVertices
Valve::VR::EVRRenderModelError Valve::VR::EVRRenderModelError::_get_TooManyVertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRRenderModelError::_get_TooManyVertices");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRRenderModelError>("Valve.VR", "EVRRenderModelError", "TooManyVertices"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRRenderModelError TooManyVertices
void Valve::VR::EVRRenderModelError::_set_TooManyVertices(Valve::VR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRRenderModelError::_set_TooManyVertices");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRRenderModelError", "TooManyVertices", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRRenderModelError MultipleTextures
Valve::VR::EVRRenderModelError Valve::VR::EVRRenderModelError::_get_MultipleTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRRenderModelError::_get_MultipleTextures");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRRenderModelError>("Valve.VR", "EVRRenderModelError", "MultipleTextures"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRRenderModelError MultipleTextures
void Valve::VR::EVRRenderModelError::_set_MultipleTextures(Valve::VR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRRenderModelError::_set_MultipleTextures");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRRenderModelError", "MultipleTextures", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRRenderModelError BufferTooSmall
Valve::VR::EVRRenderModelError Valve::VR::EVRRenderModelError::_get_BufferTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRRenderModelError::_get_BufferTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRRenderModelError>("Valve.VR", "EVRRenderModelError", "BufferTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRRenderModelError BufferTooSmall
void Valve::VR::EVRRenderModelError::_set_BufferTooSmall(Valve::VR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRRenderModelError::_set_BufferTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRRenderModelError", "BufferTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRRenderModelError NotEnoughNormals
Valve::VR::EVRRenderModelError Valve::VR::EVRRenderModelError::_get_NotEnoughNormals() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRRenderModelError::_get_NotEnoughNormals");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRRenderModelError>("Valve.VR", "EVRRenderModelError", "NotEnoughNormals"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRRenderModelError NotEnoughNormals
void Valve::VR::EVRRenderModelError::_set_NotEnoughNormals(Valve::VR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRRenderModelError::_set_NotEnoughNormals");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRRenderModelError", "NotEnoughNormals", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRRenderModelError NotEnoughTexCoords
Valve::VR::EVRRenderModelError Valve::VR::EVRRenderModelError::_get_NotEnoughTexCoords() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRRenderModelError::_get_NotEnoughTexCoords");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRRenderModelError>("Valve.VR", "EVRRenderModelError", "NotEnoughTexCoords"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRRenderModelError NotEnoughTexCoords
void Valve::VR::EVRRenderModelError::_set_NotEnoughTexCoords(Valve::VR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRRenderModelError::_set_NotEnoughTexCoords");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRRenderModelError", "NotEnoughTexCoords", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRRenderModelError InvalidTexture
Valve::VR::EVRRenderModelError Valve::VR::EVRRenderModelError::_get_InvalidTexture() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRRenderModelError::_get_InvalidTexture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRRenderModelError>("Valve.VR", "EVRRenderModelError", "InvalidTexture"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRRenderModelError InvalidTexture
void Valve::VR::EVRRenderModelError::_set_InvalidTexture(Valve::VR::EVRRenderModelError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRRenderModelError::_set_InvalidTexture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRRenderModelError", "InvalidTexture", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EVRRenderModelError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRRenderModelError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EVRComponentProperty
#include "Valve/VR/EVRComponentProperty.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRComponentProperty IsStatic
Valve::VR::EVRComponentProperty Valve::VR::EVRComponentProperty::_get_IsStatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRComponentProperty::_get_IsStatic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRComponentProperty>("Valve.VR", "EVRComponentProperty", "IsStatic"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRComponentProperty IsStatic
void Valve::VR::EVRComponentProperty::_set_IsStatic(Valve::VR::EVRComponentProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRComponentProperty::_set_IsStatic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRComponentProperty", "IsStatic", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRComponentProperty IsVisible
Valve::VR::EVRComponentProperty Valve::VR::EVRComponentProperty::_get_IsVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRComponentProperty::_get_IsVisible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRComponentProperty>("Valve.VR", "EVRComponentProperty", "IsVisible"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRComponentProperty IsVisible
void Valve::VR::EVRComponentProperty::_set_IsVisible(Valve::VR::EVRComponentProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRComponentProperty::_set_IsVisible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRComponentProperty", "IsVisible", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRComponentProperty IsTouched
Valve::VR::EVRComponentProperty Valve::VR::EVRComponentProperty::_get_IsTouched() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRComponentProperty::_get_IsTouched");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRComponentProperty>("Valve.VR", "EVRComponentProperty", "IsTouched"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRComponentProperty IsTouched
void Valve::VR::EVRComponentProperty::_set_IsTouched(Valve::VR::EVRComponentProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRComponentProperty::_set_IsTouched");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRComponentProperty", "IsTouched", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRComponentProperty IsPressed
Valve::VR::EVRComponentProperty Valve::VR::EVRComponentProperty::_get_IsPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRComponentProperty::_get_IsPressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRComponentProperty>("Valve.VR", "EVRComponentProperty", "IsPressed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRComponentProperty IsPressed
void Valve::VR::EVRComponentProperty::_set_IsPressed(Valve::VR::EVRComponentProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRComponentProperty::_set_IsPressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRComponentProperty", "IsPressed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRComponentProperty IsScrolled
Valve::VR::EVRComponentProperty Valve::VR::EVRComponentProperty::_get_IsScrolled() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRComponentProperty::_get_IsScrolled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRComponentProperty>("Valve.VR", "EVRComponentProperty", "IsScrolled"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRComponentProperty IsScrolled
void Valve::VR::EVRComponentProperty::_set_IsScrolled(Valve::VR::EVRComponentProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRComponentProperty::_set_IsScrolled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRComponentProperty", "IsScrolled", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EVRComponentProperty::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRComponentProperty::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EVRNotificationType
#include "Valve/VR/EVRNotificationType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRNotificationType Transient
Valve::VR::EVRNotificationType Valve::VR::EVRNotificationType::_get_Transient() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRNotificationType::_get_Transient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRNotificationType>("Valve.VR", "EVRNotificationType", "Transient"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRNotificationType Transient
void Valve::VR::EVRNotificationType::_set_Transient(Valve::VR::EVRNotificationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRNotificationType::_set_Transient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRNotificationType", "Transient", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRNotificationType Persistent
Valve::VR::EVRNotificationType Valve::VR::EVRNotificationType::_get_Persistent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRNotificationType::_get_Persistent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRNotificationType>("Valve.VR", "EVRNotificationType", "Persistent"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRNotificationType Persistent
void Valve::VR::EVRNotificationType::_set_Persistent(Valve::VR::EVRNotificationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRNotificationType::_set_Persistent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRNotificationType", "Persistent", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRNotificationType Transient_SystemWithUserValue
Valve::VR::EVRNotificationType Valve::VR::EVRNotificationType::_get_Transient_SystemWithUserValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRNotificationType::_get_Transient_SystemWithUserValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRNotificationType>("Valve.VR", "EVRNotificationType", "Transient_SystemWithUserValue"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRNotificationType Transient_SystemWithUserValue
void Valve::VR::EVRNotificationType::_set_Transient_SystemWithUserValue(Valve::VR::EVRNotificationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRNotificationType::_set_Transient_SystemWithUserValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRNotificationType", "Transient_SystemWithUserValue", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EVRNotificationType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRNotificationType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EVRNotificationStyle
#include "Valve/VR/EVRNotificationStyle.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRNotificationStyle None
Valve::VR::EVRNotificationStyle Valve::VR::EVRNotificationStyle::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRNotificationStyle::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRNotificationStyle>("Valve.VR", "EVRNotificationStyle", "None"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRNotificationStyle None
void Valve::VR::EVRNotificationStyle::_set_None(Valve::VR::EVRNotificationStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRNotificationStyle::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRNotificationStyle", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRNotificationStyle Application
Valve::VR::EVRNotificationStyle Valve::VR::EVRNotificationStyle::_get_Application() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRNotificationStyle::_get_Application");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRNotificationStyle>("Valve.VR", "EVRNotificationStyle", "Application"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRNotificationStyle Application
void Valve::VR::EVRNotificationStyle::_set_Application(Valve::VR::EVRNotificationStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRNotificationStyle::_set_Application");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRNotificationStyle", "Application", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRNotificationStyle Contact_Disabled
Valve::VR::EVRNotificationStyle Valve::VR::EVRNotificationStyle::_get_Contact_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRNotificationStyle::_get_Contact_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRNotificationStyle>("Valve.VR", "EVRNotificationStyle", "Contact_Disabled"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRNotificationStyle Contact_Disabled
void Valve::VR::EVRNotificationStyle::_set_Contact_Disabled(Valve::VR::EVRNotificationStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRNotificationStyle::_set_Contact_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRNotificationStyle", "Contact_Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRNotificationStyle Contact_Enabled
Valve::VR::EVRNotificationStyle Valve::VR::EVRNotificationStyle::_get_Contact_Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRNotificationStyle::_get_Contact_Enabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRNotificationStyle>("Valve.VR", "EVRNotificationStyle", "Contact_Enabled"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRNotificationStyle Contact_Enabled
void Valve::VR::EVRNotificationStyle::_set_Contact_Enabled(Valve::VR::EVRNotificationStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRNotificationStyle::_set_Contact_Enabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRNotificationStyle", "Contact_Enabled", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRNotificationStyle Contact_Active
Valve::VR::EVRNotificationStyle Valve::VR::EVRNotificationStyle::_get_Contact_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRNotificationStyle::_get_Contact_Active");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRNotificationStyle>("Valve.VR", "EVRNotificationStyle", "Contact_Active"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRNotificationStyle Contact_Active
void Valve::VR::EVRNotificationStyle::_set_Contact_Active(Valve::VR::EVRNotificationStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRNotificationStyle::_set_Contact_Active");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRNotificationStyle", "Contact_Active", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EVRNotificationStyle::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRNotificationStyle::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EVRSettingsError
#include "Valve/VR/EVRSettingsError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRSettingsError None
Valve::VR::EVRSettingsError Valve::VR::EVRSettingsError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRSettingsError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRSettingsError>("Valve.VR", "EVRSettingsError", "None"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRSettingsError None
void Valve::VR::EVRSettingsError::_set_None(Valve::VR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRSettingsError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRSettingsError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRSettingsError IPCFailed
Valve::VR::EVRSettingsError Valve::VR::EVRSettingsError::_get_IPCFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRSettingsError::_get_IPCFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRSettingsError>("Valve.VR", "EVRSettingsError", "IPCFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRSettingsError IPCFailed
void Valve::VR::EVRSettingsError::_set_IPCFailed(Valve::VR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRSettingsError::_set_IPCFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRSettingsError", "IPCFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRSettingsError WriteFailed
Valve::VR::EVRSettingsError Valve::VR::EVRSettingsError::_get_WriteFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRSettingsError::_get_WriteFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRSettingsError>("Valve.VR", "EVRSettingsError", "WriteFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRSettingsError WriteFailed
void Valve::VR::EVRSettingsError::_set_WriteFailed(Valve::VR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRSettingsError::_set_WriteFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRSettingsError", "WriteFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRSettingsError ReadFailed
Valve::VR::EVRSettingsError Valve::VR::EVRSettingsError::_get_ReadFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRSettingsError::_get_ReadFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRSettingsError>("Valve.VR", "EVRSettingsError", "ReadFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRSettingsError ReadFailed
void Valve::VR::EVRSettingsError::_set_ReadFailed(Valve::VR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRSettingsError::_set_ReadFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRSettingsError", "ReadFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRSettingsError JsonParseFailed
Valve::VR::EVRSettingsError Valve::VR::EVRSettingsError::_get_JsonParseFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRSettingsError::_get_JsonParseFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRSettingsError>("Valve.VR", "EVRSettingsError", "JsonParseFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRSettingsError JsonParseFailed
void Valve::VR::EVRSettingsError::_set_JsonParseFailed(Valve::VR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRSettingsError::_set_JsonParseFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRSettingsError", "JsonParseFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRSettingsError UnsetSettingHasNoDefault
Valve::VR::EVRSettingsError Valve::VR::EVRSettingsError::_get_UnsetSettingHasNoDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRSettingsError::_get_UnsetSettingHasNoDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRSettingsError>("Valve.VR", "EVRSettingsError", "UnsetSettingHasNoDefault"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRSettingsError UnsetSettingHasNoDefault
void Valve::VR::EVRSettingsError::_set_UnsetSettingHasNoDefault(Valve::VR::EVRSettingsError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRSettingsError::_set_UnsetSettingHasNoDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRSettingsError", "UnsetSettingHasNoDefault", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EVRSettingsError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRSettingsError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.EVRScreenshotError
#include "Valve/VR/EVRScreenshotError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRScreenshotError None
Valve::VR::EVRScreenshotError Valve::VR::EVRScreenshotError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRScreenshotError::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRScreenshotError>("Valve.VR", "EVRScreenshotError", "None"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRScreenshotError None
void Valve::VR::EVRScreenshotError::_set_None(Valve::VR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRScreenshotError::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRScreenshotError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRScreenshotError RequestFailed
Valve::VR::EVRScreenshotError Valve::VR::EVRScreenshotError::_get_RequestFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRScreenshotError::_get_RequestFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRScreenshotError>("Valve.VR", "EVRScreenshotError", "RequestFailed"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRScreenshotError RequestFailed
void Valve::VR::EVRScreenshotError::_set_RequestFailed(Valve::VR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRScreenshotError::_set_RequestFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRScreenshotError", "RequestFailed", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRScreenshotError IncompatibleVersion
Valve::VR::EVRScreenshotError Valve::VR::EVRScreenshotError::_get_IncompatibleVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRScreenshotError::_get_IncompatibleVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRScreenshotError>("Valve.VR", "EVRScreenshotError", "IncompatibleVersion"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRScreenshotError IncompatibleVersion
void Valve::VR::EVRScreenshotError::_set_IncompatibleVersion(Valve::VR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRScreenshotError::_set_IncompatibleVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRScreenshotError", "IncompatibleVersion", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRScreenshotError NotFound
Valve::VR::EVRScreenshotError Valve::VR::EVRScreenshotError::_get_NotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRScreenshotError::_get_NotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRScreenshotError>("Valve.VR", "EVRScreenshotError", "NotFound"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRScreenshotError NotFound
void Valve::VR::EVRScreenshotError::_set_NotFound(Valve::VR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRScreenshotError::_set_NotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRScreenshotError", "NotFound", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRScreenshotError BufferTooSmall
Valve::VR::EVRScreenshotError Valve::VR::EVRScreenshotError::_get_BufferTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRScreenshotError::_get_BufferTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRScreenshotError>("Valve.VR", "EVRScreenshotError", "BufferTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRScreenshotError BufferTooSmall
void Valve::VR::EVRScreenshotError::_set_BufferTooSmall(Valve::VR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRScreenshotError::_set_BufferTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRScreenshotError", "BufferTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public Valve.VR.EVRScreenshotError ScreenshotAlreadyInProgress
Valve::VR::EVRScreenshotError Valve::VR::EVRScreenshotError::_get_ScreenshotAlreadyInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRScreenshotError::_get_ScreenshotAlreadyInProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::EVRScreenshotError>("Valve.VR", "EVRScreenshotError", "ScreenshotAlreadyInProgress"));
}
// Autogenerated static field setter
// Set static field: static public Valve.VR.EVRScreenshotError ScreenshotAlreadyInProgress
void Valve::VR::EVRScreenshotError::_set_ScreenshotAlreadyInProgress(Valve::VR::EVRScreenshotError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRScreenshotError::_set_ScreenshotAlreadyInProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "EVRScreenshotError", "ScreenshotAlreadyInProgress", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& Valve::VR::EVRScreenshotError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::EVRScreenshotError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.VREvent_t_Packed
#include "Valve/VR/VREvent_t_Packed.hpp"
// Including type: Valve.VR.VREvent_t
#include "Valve/VR/VREvent_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 eventType
uint& Valve::VR::VREvent_t_Packed::dyn_eventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VREvent_t_Packed::dyn_eventType");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventType"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 trackedDeviceIndex
uint& Valve::VR::VREvent_t_Packed::dyn_trackedDeviceIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VREvent_t_Packed::dyn_trackedDeviceIndex");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackedDeviceIndex"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single eventAgeSeconds
float& Valve::VR::VREvent_t_Packed::dyn_eventAgeSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VREvent_t_Packed::dyn_eventAgeSeconds");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eventAgeSeconds"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Valve.VR.VREvent_Data_t data
Valve::VR::VREvent_Data_t& Valve::VR::VREvent_t_Packed::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VREvent_t_Packed::dyn_data");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<Valve::VR::VREvent_Data_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Valve.VR.VREvent_t_Packed..ctor
Valve::VR::VREvent_t_Packed::VREvent_t_Packed(Valve::VR::VREvent_t unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VREvent_t_Packed::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unpacked);
}
// Autogenerated method: Valve.VR.VREvent_t_Packed.Unpack
void Valve::VR::VREvent_t_Packed::Unpack(ByRef<Valve::VR::VREvent_t> unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VREvent_t_Packed::Unpack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Unpack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(unpacked));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.VRControllerState_t_Packed
#include "Valve/VR/VRControllerState_t_Packed.hpp"
// Including type: Valve.VR.VRControllerState_t
#include "Valve/VR/VRControllerState_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 unPacketNum
uint& Valve::VR::VRControllerState_t_Packed::dyn_unPacketNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VRControllerState_t_Packed::dyn_unPacketNum");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unPacketNum"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 ulButtonPressed
uint64_t& Valve::VR::VRControllerState_t_Packed::dyn_ulButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VRControllerState_t_Packed::dyn_ulButtonPressed");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ulButtonPressed"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 ulButtonTouched
uint64_t& Valve::VR::VRControllerState_t_Packed::dyn_ulButtonTouched() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VRControllerState_t_Packed::dyn_ulButtonTouched");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ulButtonTouched"))->offset;
  return *reinterpret_cast<uint64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Valve.VR.VRControllerAxis_t rAxis0
Valve::VR::VRControllerAxis_t& Valve::VR::VRControllerState_t_Packed::dyn_rAxis0() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VRControllerState_t_Packed::dyn_rAxis0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rAxis0"))->offset;
  return *reinterpret_cast<Valve::VR::VRControllerAxis_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Valve.VR.VRControllerAxis_t rAxis1
Valve::VR::VRControllerAxis_t& Valve::VR::VRControllerState_t_Packed::dyn_rAxis1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VRControllerState_t_Packed::dyn_rAxis1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rAxis1"))->offset;
  return *reinterpret_cast<Valve::VR::VRControllerAxis_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Valve.VR.VRControllerAxis_t rAxis2
Valve::VR::VRControllerAxis_t& Valve::VR::VRControllerState_t_Packed::dyn_rAxis2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VRControllerState_t_Packed::dyn_rAxis2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rAxis2"))->offset;
  return *reinterpret_cast<Valve::VR::VRControllerAxis_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Valve.VR.VRControllerAxis_t rAxis3
Valve::VR::VRControllerAxis_t& Valve::VR::VRControllerState_t_Packed::dyn_rAxis3() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VRControllerState_t_Packed::dyn_rAxis3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rAxis3"))->offset;
  return *reinterpret_cast<Valve::VR::VRControllerAxis_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Valve.VR.VRControllerAxis_t rAxis4
Valve::VR::VRControllerAxis_t& Valve::VR::VRControllerState_t_Packed::dyn_rAxis4() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VRControllerState_t_Packed::dyn_rAxis4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rAxis4"))->offset;
  return *reinterpret_cast<Valve::VR::VRControllerAxis_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Valve.VR.VRControllerState_t_Packed..ctor
Valve::VR::VRControllerState_t_Packed::VRControllerState_t_Packed(Valve::VR::VRControllerState_t unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VRControllerState_t_Packed::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unpacked);
}
// Autogenerated method: Valve.VR.VRControllerState_t_Packed.Unpack
void Valve::VR::VRControllerState_t_Packed::Unpack(ByRef<Valve::VR::VRControllerState_t> unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::VRControllerState_t_Packed::Unpack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Unpack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(unpacked));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.RenderModel_TextureMap_t_Packed
#include "Valve/VR/RenderModel_TextureMap_t_Packed.hpp"
// Including type: Valve.VR.RenderModel_TextureMap_t
#include "Valve/VR/RenderModel_TextureMap_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Char unWidth
::Il2CppChar& Valve::VR::RenderModel_TextureMap_t_Packed::dyn_unWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::RenderModel_TextureMap_t_Packed::dyn_unWidth");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unWidth"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Char unHeight
::Il2CppChar& Valve::VR::RenderModel_TextureMap_t_Packed::dyn_unHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::RenderModel_TextureMap_t_Packed::dyn_unHeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unHeight"))->offset;
  return *reinterpret_cast<::Il2CppChar*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr rubTextureMapData
System::IntPtr& Valve::VR::RenderModel_TextureMap_t_Packed::dyn_rubTextureMapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::RenderModel_TextureMap_t_Packed::dyn_rubTextureMapData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rubTextureMapData"))->offset;
  return *reinterpret_cast<System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Valve.VR.RenderModel_TextureMap_t_Packed..ctor
Valve::VR::RenderModel_TextureMap_t_Packed::RenderModel_TextureMap_t_Packed(Valve::VR::RenderModel_TextureMap_t unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::RenderModel_TextureMap_t_Packed::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unpacked);
}
// Autogenerated method: Valve.VR.RenderModel_TextureMap_t_Packed.Unpack
void Valve::VR::RenderModel_TextureMap_t_Packed::Unpack(ByRef<Valve::VR::RenderModel_TextureMap_t> unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::RenderModel_TextureMap_t_Packed::Unpack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Unpack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(unpacked));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.RenderModel_t_Packed
#include "Valve/VR/RenderModel_t_Packed.hpp"
// Including type: Valve.VR.RenderModel_t
#include "Valve/VR/RenderModel_t.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.IntPtr rVertexData
System::IntPtr& Valve::VR::RenderModel_t_Packed::dyn_rVertexData() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::RenderModel_t_Packed::dyn_rVertexData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rVertexData"))->offset;
  return *reinterpret_cast<System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 unVertexCount
uint& Valve::VR::RenderModel_t_Packed::dyn_unVertexCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::RenderModel_t_Packed::dyn_unVertexCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unVertexCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IntPtr rIndexData
System::IntPtr& Valve::VR::RenderModel_t_Packed::dyn_rIndexData() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::RenderModel_t_Packed::dyn_rIndexData");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rIndexData"))->offset;
  return *reinterpret_cast<System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.UInt32 unTriangleCount
uint& Valve::VR::RenderModel_t_Packed::dyn_unTriangleCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::RenderModel_t_Packed::dyn_unTriangleCount");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unTriangleCount"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 diffuseTextureId
int& Valve::VR::RenderModel_t_Packed::dyn_diffuseTextureId() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::RenderModel_t_Packed::dyn_diffuseTextureId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "diffuseTextureId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Valve.VR.RenderModel_t_Packed..ctor
Valve::VR::RenderModel_t_Packed::RenderModel_t_Packed(Valve::VR::RenderModel_t unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::RenderModel_t_Packed::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, unpacked);
}
// Autogenerated method: Valve.VR.RenderModel_t_Packed.Unpack
void Valve::VR::RenderModel_t_Packed::Unpack(ByRef<Valve::VR::RenderModel_t> unpacked) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::RenderModel_t_Packed::Unpack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Unpack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unpacked)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(unpacked));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.OpenVR
#include "Valve/VR/OpenVR.hpp"
// Including type: Valve.VR.OpenVR/Valve.VR.COpenVRContext
#include "Valve/VR/OpenVR_COpenVRContext.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Valve.VR.CVRSystem
#include "Valve/VR/CVRSystem.hpp"
// Including type: Valve.VR.CVRChaperone
#include "Valve/VR/CVRChaperone.hpp"
// Including type: Valve.VR.CVRChaperoneSetup
#include "Valve/VR/CVRChaperoneSetup.hpp"
// Including type: Valve.VR.CVRCompositor
#include "Valve/VR/CVRCompositor.hpp"
// Including type: Valve.VR.CVROverlay
#include "Valve/VR/CVROverlay.hpp"
// Including type: Valve.VR.CVRRenderModels
#include "Valve/VR/CVRRenderModels.hpp"
// Including type: Valve.VR.CVRExtendedDisplay
#include "Valve/VR/CVRExtendedDisplay.hpp"
// Including type: Valve.VR.CVRSettings
#include "Valve/VR/CVRSettings.hpp"
// Including type: Valve.VR.CVRApplications
#include "Valve/VR/CVRApplications.hpp"
// Including type: Valve.VR.CVRScreenshots
#include "Valve/VR/CVRScreenshots.hpp"
// Including type: Valve.VR.CVRTrackedCamera
#include "Valve/VR/CVRTrackedCamera.hpp"
// Including type: Valve.VR.EVRInitError
#include "Valve/VR/EVRInitError.hpp"
// Including type: Valve.VR.EVRApplicationType
#include "Valve/VR/EVRApplicationType.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_nDriverNone
uint Valve::VR::OpenVR::_get_k_nDriverNone() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_nDriverNone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_nDriverNone"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_nDriverNone
void Valve::VR::OpenVR::_set_k_nDriverNone(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_nDriverNone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_nDriverNone", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxDriverDebugResponseSize
uint Valve::VR::OpenVR::_get_k_unMaxDriverDebugResponseSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unMaxDriverDebugResponseSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unMaxDriverDebugResponseSize"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxDriverDebugResponseSize
void Valve::VR::OpenVR::_set_k_unMaxDriverDebugResponseSize(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unMaxDriverDebugResponseSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unMaxDriverDebugResponseSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unTrackedDeviceIndex_Hmd
uint Valve::VR::OpenVR::_get_k_unTrackedDeviceIndex_Hmd() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unTrackedDeviceIndex_Hmd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unTrackedDeviceIndex_Hmd"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unTrackedDeviceIndex_Hmd
void Valve::VR::OpenVR::_set_k_unTrackedDeviceIndex_Hmd(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unTrackedDeviceIndex_Hmd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unTrackedDeviceIndex_Hmd", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxTrackedDeviceCount
uint Valve::VR::OpenVR::_get_k_unMaxTrackedDeviceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unMaxTrackedDeviceCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unMaxTrackedDeviceCount"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxTrackedDeviceCount
void Valve::VR::OpenVR::_set_k_unMaxTrackedDeviceCount(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unMaxTrackedDeviceCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unMaxTrackedDeviceCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unTrackedDeviceIndexOther
uint Valve::VR::OpenVR::_get_k_unTrackedDeviceIndexOther() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unTrackedDeviceIndexOther");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unTrackedDeviceIndexOther"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unTrackedDeviceIndexOther
void Valve::VR::OpenVR::_set_k_unTrackedDeviceIndexOther(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unTrackedDeviceIndexOther");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unTrackedDeviceIndexOther", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unTrackedDeviceIndexInvalid
uint Valve::VR::OpenVR::_get_k_unTrackedDeviceIndexInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unTrackedDeviceIndexInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unTrackedDeviceIndexInvalid"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unTrackedDeviceIndexInvalid
void Valve::VR::OpenVR::_set_k_unTrackedDeviceIndexInvalid(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unTrackedDeviceIndexInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unTrackedDeviceIndexInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt64 k_ulInvalidPropertyContainer
uint64_t Valve::VR::OpenVR::_get_k_ulInvalidPropertyContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_ulInvalidPropertyContainer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("Valve.VR", "OpenVR", "k_ulInvalidPropertyContainer"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 k_ulInvalidPropertyContainer
void Valve::VR::OpenVR::_set_k_ulInvalidPropertyContainer(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_ulInvalidPropertyContainer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_ulInvalidPropertyContainer", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unInvalidPropertyTag
uint Valve::VR::OpenVR::_get_k_unInvalidPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unInvalidPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unInvalidPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unInvalidPropertyTag
void Valve::VR::OpenVR::_set_k_unInvalidPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unInvalidPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unInvalidPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unFloatPropertyTag
uint Valve::VR::OpenVR::_get_k_unFloatPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unFloatPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unFloatPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unFloatPropertyTag
void Valve::VR::OpenVR::_set_k_unFloatPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unFloatPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unFloatPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unInt32PropertyTag
uint Valve::VR::OpenVR::_get_k_unInt32PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unInt32PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unInt32PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unInt32PropertyTag
void Valve::VR::OpenVR::_set_k_unInt32PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unInt32PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unInt32PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unUint64PropertyTag
uint Valve::VR::OpenVR::_get_k_unUint64PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unUint64PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unUint64PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unUint64PropertyTag
void Valve::VR::OpenVR::_set_k_unUint64PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unUint64PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unUint64PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unBoolPropertyTag
uint Valve::VR::OpenVR::_get_k_unBoolPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unBoolPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unBoolPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unBoolPropertyTag
void Valve::VR::OpenVR::_set_k_unBoolPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unBoolPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unBoolPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unStringPropertyTag
uint Valve::VR::OpenVR::_get_k_unStringPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unStringPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unStringPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unStringPropertyTag
void Valve::VR::OpenVR::_set_k_unStringPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unStringPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unStringPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHmdMatrix34PropertyTag
uint Valve::VR::OpenVR::_get_k_unHmdMatrix34PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unHmdMatrix34PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unHmdMatrix34PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHmdMatrix34PropertyTag
void Valve::VR::OpenVR::_set_k_unHmdMatrix34PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unHmdMatrix34PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unHmdMatrix34PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHmdMatrix44PropertyTag
uint Valve::VR::OpenVR::_get_k_unHmdMatrix44PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unHmdMatrix44PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unHmdMatrix44PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHmdMatrix44PropertyTag
void Valve::VR::OpenVR::_set_k_unHmdMatrix44PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unHmdMatrix44PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unHmdMatrix44PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHmdVector3PropertyTag
uint Valve::VR::OpenVR::_get_k_unHmdVector3PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unHmdVector3PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unHmdVector3PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHmdVector3PropertyTag
void Valve::VR::OpenVR::_set_k_unHmdVector3PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unHmdVector3PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unHmdVector3PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHmdVector4PropertyTag
uint Valve::VR::OpenVR::_get_k_unHmdVector4PropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unHmdVector4PropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unHmdVector4PropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHmdVector4PropertyTag
void Valve::VR::OpenVR::_set_k_unHmdVector4PropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unHmdVector4PropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unHmdVector4PropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHiddenAreaPropertyTag
uint Valve::VR::OpenVR::_get_k_unHiddenAreaPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unHiddenAreaPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unHiddenAreaPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHiddenAreaPropertyTag
void Valve::VR::OpenVR::_set_k_unHiddenAreaPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unHiddenAreaPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unHiddenAreaPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unPathHandleInfoTag
uint Valve::VR::OpenVR::_get_k_unPathHandleInfoTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unPathHandleInfoTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unPathHandleInfoTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unPathHandleInfoTag
void Valve::VR::OpenVR::_set_k_unPathHandleInfoTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unPathHandleInfoTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unPathHandleInfoTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unActionPropertyTag
uint Valve::VR::OpenVR::_get_k_unActionPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unActionPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unActionPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unActionPropertyTag
void Valve::VR::OpenVR::_set_k_unActionPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unActionPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unActionPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unInputValuePropertyTag
uint Valve::VR::OpenVR::_get_k_unInputValuePropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unInputValuePropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unInputValuePropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unInputValuePropertyTag
void Valve::VR::OpenVR::_set_k_unInputValuePropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unInputValuePropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unInputValuePropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unWildcardPropertyTag
uint Valve::VR::OpenVR::_get_k_unWildcardPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unWildcardPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unWildcardPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unWildcardPropertyTag
void Valve::VR::OpenVR::_set_k_unWildcardPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unWildcardPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unWildcardPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unHapticVibrationPropertyTag
uint Valve::VR::OpenVR::_get_k_unHapticVibrationPropertyTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unHapticVibrationPropertyTag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unHapticVibrationPropertyTag"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unHapticVibrationPropertyTag
void Valve::VR::OpenVR::_set_k_unHapticVibrationPropertyTag(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unHapticVibrationPropertyTag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unHapticVibrationPropertyTag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unOpenVRInternalReserved_Start
uint Valve::VR::OpenVR::_get_k_unOpenVRInternalReserved_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unOpenVRInternalReserved_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unOpenVRInternalReserved_Start"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unOpenVRInternalReserved_Start
void Valve::VR::OpenVR::_set_k_unOpenVRInternalReserved_Start(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unOpenVRInternalReserved_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unOpenVRInternalReserved_Start", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unOpenVRInternalReserved_End
uint Valve::VR::OpenVR::_get_k_unOpenVRInternalReserved_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unOpenVRInternalReserved_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unOpenVRInternalReserved_End"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unOpenVRInternalReserved_End
void Valve::VR::OpenVR::_set_k_unOpenVRInternalReserved_End(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unOpenVRInternalReserved_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unOpenVRInternalReserved_End", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxPropertyStringSize
uint Valve::VR::OpenVR::_get_k_unMaxPropertyStringSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unMaxPropertyStringSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unMaxPropertyStringSize"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxPropertyStringSize
void Valve::VR::OpenVR::_set_k_unMaxPropertyStringSize(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unMaxPropertyStringSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unMaxPropertyStringSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unControllerStateAxisCount
uint Valve::VR::OpenVR::_get_k_unControllerStateAxisCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unControllerStateAxisCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unControllerStateAxisCount"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unControllerStateAxisCount
void Valve::VR::OpenVR::_set_k_unControllerStateAxisCount(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unControllerStateAxisCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unControllerStateAxisCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt64 k_ulOverlayHandleInvalid
uint64_t Valve::VR::OpenVR::_get_k_ulOverlayHandleInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_ulOverlayHandleInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("Valve.VR", "OpenVR", "k_ulOverlayHandleInvalid"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 k_ulOverlayHandleInvalid
void Valve::VR::OpenVR::_set_k_ulOverlayHandleInvalid(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_ulOverlayHandleInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_ulOverlayHandleInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unScreenshotHandleInvalid
uint Valve::VR::OpenVR::_get_k_unScreenshotHandleInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unScreenshotHandleInvalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unScreenshotHandleInvalid"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unScreenshotHandleInvalid
void Valve::VR::OpenVR::_set_k_unScreenshotHandleInvalid(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unScreenshotHandleInvalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unScreenshotHandleInvalid", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRSystem_Version
::StringW Valve::VR::OpenVR::_get_IVRSystem_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_IVRSystem_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "IVRSystem_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRSystem_Version
void Valve::VR::OpenVR::_set_IVRSystem_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_IVRSystem_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "IVRSystem_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRExtendedDisplay_Version
::StringW Valve::VR::OpenVR::_get_IVRExtendedDisplay_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_IVRExtendedDisplay_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "IVRExtendedDisplay_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRExtendedDisplay_Version
void Valve::VR::OpenVR::_set_IVRExtendedDisplay_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_IVRExtendedDisplay_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "IVRExtendedDisplay_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRTrackedCamera_Version
::StringW Valve::VR::OpenVR::_get_IVRTrackedCamera_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_IVRTrackedCamera_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "IVRTrackedCamera_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRTrackedCamera_Version
void Valve::VR::OpenVR::_set_IVRTrackedCamera_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_IVRTrackedCamera_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "IVRTrackedCamera_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxApplicationKeyLength
uint Valve::VR::OpenVR::_get_k_unMaxApplicationKeyLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unMaxApplicationKeyLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unMaxApplicationKeyLength"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxApplicationKeyLength
void Valve::VR::OpenVR::_set_k_unMaxApplicationKeyLength(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unMaxApplicationKeyLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unMaxApplicationKeyLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_MimeType_HomeApp
::StringW Valve::VR::OpenVR::_get_k_pch_MimeType_HomeApp() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_MimeType_HomeApp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_MimeType_HomeApp"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_MimeType_HomeApp
void Valve::VR::OpenVR::_set_k_pch_MimeType_HomeApp(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_MimeType_HomeApp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_MimeType_HomeApp", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_MimeType_GameTheater
::StringW Valve::VR::OpenVR::_get_k_pch_MimeType_GameTheater() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_MimeType_GameTheater");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_MimeType_GameTheater"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_MimeType_GameTheater
void Valve::VR::OpenVR::_set_k_pch_MimeType_GameTheater(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_MimeType_GameTheater");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_MimeType_GameTheater", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRApplications_Version
::StringW Valve::VR::OpenVR::_get_IVRApplications_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_IVRApplications_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "IVRApplications_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRApplications_Version
void Valve::VR::OpenVR::_set_IVRApplications_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_IVRApplications_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "IVRApplications_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRChaperone_Version
::StringW Valve::VR::OpenVR::_get_IVRChaperone_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_IVRChaperone_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "IVRChaperone_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRChaperone_Version
void Valve::VR::OpenVR::_set_IVRChaperone_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_IVRChaperone_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "IVRChaperone_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRChaperoneSetup_Version
::StringW Valve::VR::OpenVR::_get_IVRChaperoneSetup_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_IVRChaperoneSetup_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "IVRChaperoneSetup_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRChaperoneSetup_Version
void Valve::VR::OpenVR::_set_IVRChaperoneSetup_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_IVRChaperoneSetup_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "IVRChaperoneSetup_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRCompositor_Version
::StringW Valve::VR::OpenVR::_get_IVRCompositor_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_IVRCompositor_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "IVRCompositor_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRCompositor_Version
void Valve::VR::OpenVR::_set_IVRCompositor_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_IVRCompositor_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "IVRCompositor_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unVROverlayMaxKeyLength
uint Valve::VR::OpenVR::_get_k_unVROverlayMaxKeyLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unVROverlayMaxKeyLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unVROverlayMaxKeyLength"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unVROverlayMaxKeyLength
void Valve::VR::OpenVR::_set_k_unVROverlayMaxKeyLength(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unVROverlayMaxKeyLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unVROverlayMaxKeyLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unVROverlayMaxNameLength
uint Valve::VR::OpenVR::_get_k_unVROverlayMaxNameLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unVROverlayMaxNameLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unVROverlayMaxNameLength"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unVROverlayMaxNameLength
void Valve::VR::OpenVR::_set_k_unVROverlayMaxNameLength(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unVROverlayMaxNameLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unVROverlayMaxNameLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxOverlayCount
uint Valve::VR::OpenVR::_get_k_unMaxOverlayCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unMaxOverlayCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unMaxOverlayCount"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxOverlayCount
void Valve::VR::OpenVR::_set_k_unMaxOverlayCount(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unMaxOverlayCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unMaxOverlayCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxOverlayIntersectionMaskPrimitivesCount
uint Valve::VR::OpenVR::_get_k_unMaxOverlayIntersectionMaskPrimitivesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unMaxOverlayIntersectionMaskPrimitivesCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unMaxOverlayIntersectionMaskPrimitivesCount"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxOverlayIntersectionMaskPrimitivesCount
void Valve::VR::OpenVR::_set_k_unMaxOverlayIntersectionMaskPrimitivesCount(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unMaxOverlayIntersectionMaskPrimitivesCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unMaxOverlayIntersectionMaskPrimitivesCount", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVROverlay_Version
::StringW Valve::VR::OpenVR::_get_IVROverlay_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_IVROverlay_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "IVROverlay_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVROverlay_Version
void Valve::VR::OpenVR::_set_IVROverlay_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_IVROverlay_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "IVROverlay_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Controller_Component_GDC2015
::StringW Valve::VR::OpenVR::_get_k_pch_Controller_Component_GDC2015() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Controller_Component_GDC2015");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Controller_Component_GDC2015"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Controller_Component_GDC2015
void Valve::VR::OpenVR::_set_k_pch_Controller_Component_GDC2015(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Controller_Component_GDC2015");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Controller_Component_GDC2015", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Controller_Component_Base
::StringW Valve::VR::OpenVR::_get_k_pch_Controller_Component_Base() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Controller_Component_Base");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Controller_Component_Base"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Controller_Component_Base
void Valve::VR::OpenVR::_set_k_pch_Controller_Component_Base(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Controller_Component_Base");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Controller_Component_Base", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Controller_Component_Tip
::StringW Valve::VR::OpenVR::_get_k_pch_Controller_Component_Tip() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Controller_Component_Tip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Controller_Component_Tip"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Controller_Component_Tip
void Valve::VR::OpenVR::_set_k_pch_Controller_Component_Tip(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Controller_Component_Tip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Controller_Component_Tip", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Controller_Component_HandGrip
::StringW Valve::VR::OpenVR::_get_k_pch_Controller_Component_HandGrip() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Controller_Component_HandGrip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Controller_Component_HandGrip"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Controller_Component_HandGrip
void Valve::VR::OpenVR::_set_k_pch_Controller_Component_HandGrip(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Controller_Component_HandGrip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Controller_Component_HandGrip", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Controller_Component_Status
::StringW Valve::VR::OpenVR::_get_k_pch_Controller_Component_Status() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Controller_Component_Status");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Controller_Component_Status"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Controller_Component_Status
void Valve::VR::OpenVR::_set_k_pch_Controller_Component_Status(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Controller_Component_Status");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Controller_Component_Status", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRRenderModels_Version
::StringW Valve::VR::OpenVR::_get_IVRRenderModels_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_IVRRenderModels_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "IVRRenderModels_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRRenderModels_Version
void Valve::VR::OpenVR::_set_IVRRenderModels_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_IVRRenderModels_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "IVRRenderModels_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unNotificationTextMaxSize
uint Valve::VR::OpenVR::_get_k_unNotificationTextMaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unNotificationTextMaxSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unNotificationTextMaxSize"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unNotificationTextMaxSize
void Valve::VR::OpenVR::_set_k_unNotificationTextMaxSize(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unNotificationTextMaxSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unNotificationTextMaxSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRNotifications_Version
::StringW Valve::VR::OpenVR::_get_IVRNotifications_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_IVRNotifications_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "IVRNotifications_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRNotifications_Version
void Valve::VR::OpenVR::_set_IVRNotifications_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_IVRNotifications_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "IVRNotifications_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 k_unMaxSettingsKeyLength
uint Valve::VR::OpenVR::_get_k_unMaxSettingsKeyLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_unMaxSettingsKeyLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "k_unMaxSettingsKeyLength"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 k_unMaxSettingsKeyLength
void Valve::VR::OpenVR::_set_k_unMaxSettingsKeyLength(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_unMaxSettingsKeyLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_unMaxSettingsKeyLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRSettings_Version
::StringW Valve::VR::OpenVR::_get_IVRSettings_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_IVRSettings_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "IVRSettings_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRSettings_Version
void Valve::VR::OpenVR::_set_IVRSettings_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_IVRSettings_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "IVRSettings_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_Section
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_Section
void Valve::VR::OpenVR::_set_k_pch_SteamVR_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_RequireHmd_String
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_RequireHmd_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_RequireHmd_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_RequireHmd_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_RequireHmd_String
void Valve::VR::OpenVR::_set_k_pch_SteamVR_RequireHmd_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_RequireHmd_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_RequireHmd_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ForcedDriverKey_String
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_ForcedDriverKey_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_ForcedDriverKey_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_ForcedDriverKey_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ForcedDriverKey_String
void Valve::VR::OpenVR::_set_k_pch_SteamVR_ForcedDriverKey_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_ForcedDriverKey_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_ForcedDriverKey_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ForcedHmdKey_String
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_ForcedHmdKey_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_ForcedHmdKey_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_ForcedHmdKey_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ForcedHmdKey_String
void Valve::VR::OpenVR::_set_k_pch_SteamVR_ForcedHmdKey_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_ForcedHmdKey_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_ForcedHmdKey_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DisplayDebug_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_DisplayDebug_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_DisplayDebug_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_DisplayDebug_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DisplayDebug_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_DisplayDebug_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_DisplayDebug_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_DisplayDebug_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DebugProcessPipe_String
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_DebugProcessPipe_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_DebugProcessPipe_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_DebugProcessPipe_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DebugProcessPipe_String
void Valve::VR::OpenVR::_set_k_pch_SteamVR_DebugProcessPipe_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_DebugProcessPipe_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_DebugProcessPipe_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DisplayDebugX_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_DisplayDebugX_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_DisplayDebugX_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_DisplayDebugX_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DisplayDebugX_Int32
void Valve::VR::OpenVR::_set_k_pch_SteamVR_DisplayDebugX_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_DisplayDebugX_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_DisplayDebugX_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DisplayDebugY_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_DisplayDebugY_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_DisplayDebugY_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_DisplayDebugY_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DisplayDebugY_Int32
void Valve::VR::OpenVR::_set_k_pch_SteamVR_DisplayDebugY_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_DisplayDebugY_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_DisplayDebugY_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_SendSystemButtonToAllApps_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_SendSystemButtonToAllApps_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_SendSystemButtonToAllApps_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_SendSystemButtonToAllApps_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_SendSystemButtonToAllApps_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_SendSystemButtonToAllApps_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_SendSystemButtonToAllApps_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_SendSystemButtonToAllApps_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_LogLevel_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_LogLevel_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_LogLevel_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_LogLevel_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_LogLevel_Int32
void Valve::VR::OpenVR::_set_k_pch_SteamVR_LogLevel_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_LogLevel_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_LogLevel_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_IPD_Float
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_IPD_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_IPD_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_IPD_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_IPD_Float
void Valve::VR::OpenVR::_set_k_pch_SteamVR_IPD_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_IPD_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_IPD_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_Background_String
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_Background_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_Background_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_Background_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_Background_String
void Valve::VR::OpenVR::_set_k_pch_SteamVR_Background_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_Background_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_Background_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_BackgroundUseDomeProjection_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_BackgroundUseDomeProjection_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_BackgroundUseDomeProjection_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_BackgroundUseDomeProjection_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_BackgroundUseDomeProjection_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_BackgroundUseDomeProjection_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_BackgroundUseDomeProjection_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_BackgroundUseDomeProjection_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_BackgroundCameraHeight_Float
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_BackgroundCameraHeight_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_BackgroundCameraHeight_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_BackgroundCameraHeight_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_BackgroundCameraHeight_Float
void Valve::VR::OpenVR::_set_k_pch_SteamVR_BackgroundCameraHeight_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_BackgroundCameraHeight_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_BackgroundCameraHeight_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_BackgroundDomeRadius_Float
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_BackgroundDomeRadius_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_BackgroundDomeRadius_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_BackgroundDomeRadius_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_BackgroundDomeRadius_Float
void Valve::VR::OpenVR::_set_k_pch_SteamVR_BackgroundDomeRadius_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_BackgroundDomeRadius_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_BackgroundDomeRadius_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_GridColor_String
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_GridColor_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_GridColor_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_GridColor_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_GridColor_String
void Valve::VR::OpenVR::_set_k_pch_SteamVR_GridColor_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_GridColor_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_GridColor_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_PlayAreaColor_String
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_PlayAreaColor_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_PlayAreaColor_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_PlayAreaColor_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_PlayAreaColor_String
void Valve::VR::OpenVR::_set_k_pch_SteamVR_PlayAreaColor_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_PlayAreaColor_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_PlayAreaColor_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ShowStage_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_ShowStage_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_ShowStage_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_ShowStage_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ShowStage_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_ShowStage_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_ShowStage_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_ShowStage_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ActivateMultipleDrivers_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_ActivateMultipleDrivers_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_ActivateMultipleDrivers_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_ActivateMultipleDrivers_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ActivateMultipleDrivers_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_ActivateMultipleDrivers_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_ActivateMultipleDrivers_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_ActivateMultipleDrivers_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DirectMode_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_DirectMode_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_DirectMode_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_DirectMode_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DirectMode_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_DirectMode_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_DirectMode_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_DirectMode_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DirectModeEdidVid_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_DirectModeEdidVid_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_DirectModeEdidVid_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_DirectModeEdidVid_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DirectModeEdidVid_Int32
void Valve::VR::OpenVR::_set_k_pch_SteamVR_DirectModeEdidVid_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_DirectModeEdidVid_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_DirectModeEdidVid_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DirectModeEdidPid_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_DirectModeEdidPid_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_DirectModeEdidPid_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_DirectModeEdidPid_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DirectModeEdidPid_Int32
void Valve::VR::OpenVR::_set_k_pch_SteamVR_DirectModeEdidPid_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_DirectModeEdidPid_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_DirectModeEdidPid_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_UsingSpeakers_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_UsingSpeakers_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_UsingSpeakers_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_UsingSpeakers_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_UsingSpeakers_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_UsingSpeakers_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_UsingSpeakers_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_UsingSpeakers_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float
void Valve::VR::OpenVR::_set_k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_BaseStationPowerManagement_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_BaseStationPowerManagement_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_BaseStationPowerManagement_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_BaseStationPowerManagement_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_BaseStationPowerManagement_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_BaseStationPowerManagement_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_BaseStationPowerManagement_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_BaseStationPowerManagement_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_NeverKillProcesses_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_NeverKillProcesses_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_NeverKillProcesses_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_NeverKillProcesses_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_NeverKillProcesses_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_NeverKillProcesses_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_NeverKillProcesses_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_NeverKillProcesses_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_SupersampleScale_Float
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_SupersampleScale_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_SupersampleScale_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_SupersampleScale_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_SupersampleScale_Float
void Valve::VR::OpenVR::_set_k_pch_SteamVR_SupersampleScale_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_SupersampleScale_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_SupersampleScale_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_AllowAsyncReprojection_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_AllowAsyncReprojection_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_AllowAsyncReprojection_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_AllowAsyncReprojection_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_AllowAsyncReprojection_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_AllowAsyncReprojection_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_AllowAsyncReprojection_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_AllowAsyncReprojection_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_AllowReprojection_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_AllowReprojection_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_AllowReprojection_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_AllowReprojection_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_AllowReprojection_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_AllowReprojection_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_AllowReprojection_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_AllowReprojection_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ForceReprojection_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_ForceReprojection_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_ForceReprojection_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_ForceReprojection_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ForceReprojection_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_ForceReprojection_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_ForceReprojection_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_ForceReprojection_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ForceFadeOnBadTracking_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_ForceFadeOnBadTracking_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_ForceFadeOnBadTracking_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_ForceFadeOnBadTracking_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ForceFadeOnBadTracking_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_ForceFadeOnBadTracking_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_ForceFadeOnBadTracking_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_ForceFadeOnBadTracking_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_DefaultMirrorView_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_DefaultMirrorView_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_DefaultMirrorView_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_DefaultMirrorView_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_DefaultMirrorView_Int32
void Valve::VR::OpenVR::_set_k_pch_SteamVR_DefaultMirrorView_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_DefaultMirrorView_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_DefaultMirrorView_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ShowMirrorView_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_ShowMirrorView_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_ShowMirrorView_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_ShowMirrorView_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ShowMirrorView_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_ShowMirrorView_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_ShowMirrorView_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_ShowMirrorView_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_MirrorViewGeometry_String
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_MirrorViewGeometry_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_MirrorViewGeometry_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_MirrorViewGeometry_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_MirrorViewGeometry_String
void Valve::VR::OpenVR::_set_k_pch_SteamVR_MirrorViewGeometry_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_MirrorViewGeometry_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_MirrorViewGeometry_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_StartMonitorFromAppLaunch
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_StartMonitorFromAppLaunch() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_StartMonitorFromAppLaunch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_StartMonitorFromAppLaunch"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_StartMonitorFromAppLaunch
void Valve::VR::OpenVR::_set_k_pch_SteamVR_StartMonitorFromAppLaunch(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_StartMonitorFromAppLaunch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_StartMonitorFromAppLaunch", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_StartCompositorFromAppLaunch_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_StartCompositorFromAppLaunch_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_StartCompositorFromAppLaunch_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_StartCompositorFromAppLaunch_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_StartCompositorFromAppLaunch_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_StartCompositorFromAppLaunch_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_StartCompositorFromAppLaunch_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_StartCompositorFromAppLaunch_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_StartDashboardFromAppLaunch_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_StartDashboardFromAppLaunch_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_StartDashboardFromAppLaunch_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_StartDashboardFromAppLaunch_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_StartDashboardFromAppLaunch_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_StartDashboardFromAppLaunch_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_StartDashboardFromAppLaunch_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_StartDashboardFromAppLaunch_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_EnableHomeApp
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_EnableHomeApp() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_EnableHomeApp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_EnableHomeApp"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_EnableHomeApp
void Valve::VR::OpenVR::_set_k_pch_SteamVR_EnableHomeApp(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_EnableHomeApp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_EnableHomeApp", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32
void Valve::VR::OpenVR::_set_k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_RetailDemo_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_RetailDemo_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_RetailDemo_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_RetailDemo_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_RetailDemo_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_RetailDemo_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_RetailDemo_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_RetailDemo_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_IpdOffset_Float
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_IpdOffset_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_IpdOffset_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_IpdOffset_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_IpdOffset_Float
void Valve::VR::OpenVR::_set_k_pch_SteamVR_IpdOffset_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_IpdOffset_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_IpdOffset_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_AllowSupersampleFiltering_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_AllowSupersampleFiltering_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_AllowSupersampleFiltering_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_AllowSupersampleFiltering_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_AllowSupersampleFiltering_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_AllowSupersampleFiltering_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_AllowSupersampleFiltering_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_AllowSupersampleFiltering_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_EnableLinuxVulkanAsync_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_EnableLinuxVulkanAsync_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_EnableLinuxVulkanAsync_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_EnableLinuxVulkanAsync_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_EnableLinuxVulkanAsync_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_EnableLinuxVulkanAsync_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_EnableLinuxVulkanAsync_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_EnableLinuxVulkanAsync_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_AllowDisplayLockedMode_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_AllowDisplayLockedMode_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_AllowDisplayLockedMode_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_AllowDisplayLockedMode_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_AllowDisplayLockedMode_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_AllowDisplayLockedMode_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_AllowDisplayLockedMode_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_AllowDisplayLockedMode_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool
void Valve::VR::OpenVR::_set_k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_SteamVR_ForceWindows32bitVRMonitor
::StringW Valve::VR::OpenVR::_get_k_pch_SteamVR_ForceWindows32bitVRMonitor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_SteamVR_ForceWindows32bitVRMonitor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_SteamVR_ForceWindows32bitVRMonitor"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_SteamVR_ForceWindows32bitVRMonitor
void Valve::VR::OpenVR::_set_k_pch_SteamVR_ForceWindows32bitVRMonitor(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_SteamVR_ForceWindows32bitVRMonitor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_SteamVR_ForceWindows32bitVRMonitor", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_Section
::StringW Valve::VR::OpenVR::_get_k_pch_Lighthouse_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Lighthouse_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Lighthouse_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_Section
void Valve::VR::OpenVR::_set_k_pch_Lighthouse_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Lighthouse_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Lighthouse_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_DisableIMU_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Lighthouse_DisableIMU_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Lighthouse_DisableIMU_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Lighthouse_DisableIMU_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_DisableIMU_Bool
void Valve::VR::OpenVR::_set_k_pch_Lighthouse_DisableIMU_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Lighthouse_DisableIMU_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Lighthouse_DisableIMU_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_DisableIMUExceptHMD_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Lighthouse_DisableIMUExceptHMD_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Lighthouse_DisableIMUExceptHMD_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Lighthouse_DisableIMUExceptHMD_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_DisableIMUExceptHMD_Bool
void Valve::VR::OpenVR::_set_k_pch_Lighthouse_DisableIMUExceptHMD_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Lighthouse_DisableIMUExceptHMD_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Lighthouse_DisableIMUExceptHMD_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_UseDisambiguation_String
::StringW Valve::VR::OpenVR::_get_k_pch_Lighthouse_UseDisambiguation_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Lighthouse_UseDisambiguation_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Lighthouse_UseDisambiguation_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_UseDisambiguation_String
void Valve::VR::OpenVR::_set_k_pch_Lighthouse_UseDisambiguation_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Lighthouse_UseDisambiguation_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Lighthouse_UseDisambiguation_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_DisambiguationDebug_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_Lighthouse_DisambiguationDebug_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Lighthouse_DisambiguationDebug_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Lighthouse_DisambiguationDebug_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_DisambiguationDebug_Int32
void Valve::VR::OpenVR::_set_k_pch_Lighthouse_DisambiguationDebug_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Lighthouse_DisambiguationDebug_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Lighthouse_DisambiguationDebug_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_PrimaryBasestation_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_Lighthouse_PrimaryBasestation_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Lighthouse_PrimaryBasestation_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Lighthouse_PrimaryBasestation_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_PrimaryBasestation_Int32
void Valve::VR::OpenVR::_set_k_pch_Lighthouse_PrimaryBasestation_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Lighthouse_PrimaryBasestation_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Lighthouse_PrimaryBasestation_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_DBHistory_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Lighthouse_DBHistory_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Lighthouse_DBHistory_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Lighthouse_DBHistory_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_DBHistory_Bool
void Valve::VR::OpenVR::_set_k_pch_Lighthouse_DBHistory_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Lighthouse_DBHistory_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Lighthouse_DBHistory_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Lighthouse_EnableBluetooth_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Lighthouse_EnableBluetooth_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Lighthouse_EnableBluetooth_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Lighthouse_EnableBluetooth_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Lighthouse_EnableBluetooth_Bool
void Valve::VR::OpenVR::_set_k_pch_Lighthouse_EnableBluetooth_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Lighthouse_EnableBluetooth_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Lighthouse_EnableBluetooth_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_Section
::StringW Valve::VR::OpenVR::_get_k_pch_Null_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Null_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Null_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_Section
void Valve::VR::OpenVR::_set_k_pch_Null_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Null_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Null_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_SerialNumber_String
::StringW Valve::VR::OpenVR::_get_k_pch_Null_SerialNumber_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Null_SerialNumber_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Null_SerialNumber_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_SerialNumber_String
void Valve::VR::OpenVR::_set_k_pch_Null_SerialNumber_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Null_SerialNumber_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Null_SerialNumber_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_ModelNumber_String
::StringW Valve::VR::OpenVR::_get_k_pch_Null_ModelNumber_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Null_ModelNumber_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Null_ModelNumber_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_ModelNumber_String
void Valve::VR::OpenVR::_set_k_pch_Null_ModelNumber_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Null_ModelNumber_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Null_ModelNumber_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_WindowX_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_Null_WindowX_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Null_WindowX_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Null_WindowX_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_WindowX_Int32
void Valve::VR::OpenVR::_set_k_pch_Null_WindowX_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Null_WindowX_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Null_WindowX_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_WindowY_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_Null_WindowY_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Null_WindowY_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Null_WindowY_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_WindowY_Int32
void Valve::VR::OpenVR::_set_k_pch_Null_WindowY_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Null_WindowY_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Null_WindowY_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_WindowWidth_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_Null_WindowWidth_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Null_WindowWidth_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Null_WindowWidth_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_WindowWidth_Int32
void Valve::VR::OpenVR::_set_k_pch_Null_WindowWidth_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Null_WindowWidth_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Null_WindowWidth_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_WindowHeight_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_Null_WindowHeight_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Null_WindowHeight_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Null_WindowHeight_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_WindowHeight_Int32
void Valve::VR::OpenVR::_set_k_pch_Null_WindowHeight_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Null_WindowHeight_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Null_WindowHeight_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_RenderWidth_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_Null_RenderWidth_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Null_RenderWidth_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Null_RenderWidth_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_RenderWidth_Int32
void Valve::VR::OpenVR::_set_k_pch_Null_RenderWidth_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Null_RenderWidth_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Null_RenderWidth_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_RenderHeight_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_Null_RenderHeight_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Null_RenderHeight_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Null_RenderHeight_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_RenderHeight_Int32
void Valve::VR::OpenVR::_set_k_pch_Null_RenderHeight_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Null_RenderHeight_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Null_RenderHeight_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_SecondsFromVsyncToPhotons_Float
::StringW Valve::VR::OpenVR::_get_k_pch_Null_SecondsFromVsyncToPhotons_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Null_SecondsFromVsyncToPhotons_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Null_SecondsFromVsyncToPhotons_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_SecondsFromVsyncToPhotons_Float
void Valve::VR::OpenVR::_set_k_pch_Null_SecondsFromVsyncToPhotons_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Null_SecondsFromVsyncToPhotons_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Null_SecondsFromVsyncToPhotons_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Null_DisplayFrequency_Float
::StringW Valve::VR::OpenVR::_get_k_pch_Null_DisplayFrequency_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Null_DisplayFrequency_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Null_DisplayFrequency_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Null_DisplayFrequency_Float
void Valve::VR::OpenVR::_set_k_pch_Null_DisplayFrequency_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Null_DisplayFrequency_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Null_DisplayFrequency_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_UserInterface_Section
::StringW Valve::VR::OpenVR::_get_k_pch_UserInterface_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_UserInterface_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_UserInterface_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_UserInterface_Section
void Valve::VR::OpenVR::_set_k_pch_UserInterface_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_UserInterface_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_UserInterface_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_UserInterface_StatusAlwaysOnTop_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_UserInterface_StatusAlwaysOnTop_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_UserInterface_StatusAlwaysOnTop_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_UserInterface_StatusAlwaysOnTop_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_UserInterface_StatusAlwaysOnTop_Bool
void Valve::VR::OpenVR::_set_k_pch_UserInterface_StatusAlwaysOnTop_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_UserInterface_StatusAlwaysOnTop_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_UserInterface_StatusAlwaysOnTop_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_UserInterface_MinimizeToTray_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_UserInterface_MinimizeToTray_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_UserInterface_MinimizeToTray_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_UserInterface_MinimizeToTray_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_UserInterface_MinimizeToTray_Bool
void Valve::VR::OpenVR::_set_k_pch_UserInterface_MinimizeToTray_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_UserInterface_MinimizeToTray_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_UserInterface_MinimizeToTray_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_UserInterface_Screenshots_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_UserInterface_Screenshots_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_UserInterface_Screenshots_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_UserInterface_Screenshots_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_UserInterface_Screenshots_Bool
void Valve::VR::OpenVR::_set_k_pch_UserInterface_Screenshots_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_UserInterface_Screenshots_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_UserInterface_Screenshots_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_UserInterface_ScreenshotType_Int
::StringW Valve::VR::OpenVR::_get_k_pch_UserInterface_ScreenshotType_Int() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_UserInterface_ScreenshotType_Int");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_UserInterface_ScreenshotType_Int"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_UserInterface_ScreenshotType_Int
void Valve::VR::OpenVR::_set_k_pch_UserInterface_ScreenshotType_Int(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_UserInterface_ScreenshotType_Int");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_UserInterface_ScreenshotType_Int", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Notifications_Section
::StringW Valve::VR::OpenVR::_get_k_pch_Notifications_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Notifications_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Notifications_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Notifications_Section
void Valve::VR::OpenVR::_set_k_pch_Notifications_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Notifications_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Notifications_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Notifications_DoNotDisturb_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Notifications_DoNotDisturb_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Notifications_DoNotDisturb_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Notifications_DoNotDisturb_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Notifications_DoNotDisturb_Bool
void Valve::VR::OpenVR::_set_k_pch_Notifications_DoNotDisturb_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Notifications_DoNotDisturb_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Notifications_DoNotDisturb_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_Section
::StringW Valve::VR::OpenVR::_get_k_pch_Keyboard_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Keyboard_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Keyboard_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_Section
void Valve::VR::OpenVR::_set_k_pch_Keyboard_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Keyboard_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Keyboard_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_TutorialCompletions
::StringW Valve::VR::OpenVR::_get_k_pch_Keyboard_TutorialCompletions() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Keyboard_TutorialCompletions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Keyboard_TutorialCompletions"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_TutorialCompletions
void Valve::VR::OpenVR::_set_k_pch_Keyboard_TutorialCompletions(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Keyboard_TutorialCompletions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Keyboard_TutorialCompletions", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_ScaleX
::StringW Valve::VR::OpenVR::_get_k_pch_Keyboard_ScaleX() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Keyboard_ScaleX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Keyboard_ScaleX"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_ScaleX
void Valve::VR::OpenVR::_set_k_pch_Keyboard_ScaleX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Keyboard_ScaleX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Keyboard_ScaleX", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_ScaleY
::StringW Valve::VR::OpenVR::_get_k_pch_Keyboard_ScaleY() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Keyboard_ScaleY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Keyboard_ScaleY"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_ScaleY
void Valve::VR::OpenVR::_set_k_pch_Keyboard_ScaleY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Keyboard_ScaleY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Keyboard_ScaleY", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_OffsetLeftX
::StringW Valve::VR::OpenVR::_get_k_pch_Keyboard_OffsetLeftX() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Keyboard_OffsetLeftX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Keyboard_OffsetLeftX"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_OffsetLeftX
void Valve::VR::OpenVR::_set_k_pch_Keyboard_OffsetLeftX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Keyboard_OffsetLeftX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Keyboard_OffsetLeftX", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_OffsetRightX
::StringW Valve::VR::OpenVR::_get_k_pch_Keyboard_OffsetRightX() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Keyboard_OffsetRightX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Keyboard_OffsetRightX"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_OffsetRightX
void Valve::VR::OpenVR::_set_k_pch_Keyboard_OffsetRightX(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Keyboard_OffsetRightX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Keyboard_OffsetRightX", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_OffsetY
::StringW Valve::VR::OpenVR::_get_k_pch_Keyboard_OffsetY() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Keyboard_OffsetY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Keyboard_OffsetY"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_OffsetY
void Valve::VR::OpenVR::_set_k_pch_Keyboard_OffsetY(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Keyboard_OffsetY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Keyboard_OffsetY", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Keyboard_Smoothing
::StringW Valve::VR::OpenVR::_get_k_pch_Keyboard_Smoothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Keyboard_Smoothing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Keyboard_Smoothing"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Keyboard_Smoothing
void Valve::VR::OpenVR::_set_k_pch_Keyboard_Smoothing(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Keyboard_Smoothing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Keyboard_Smoothing", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_Section
::StringW Valve::VR::OpenVR::_get_k_pch_Perf_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Perf_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Perf_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_Section
void Valve::VR::OpenVR::_set_k_pch_Perf_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Perf_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Perf_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_HeuristicActive_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Perf_HeuristicActive_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Perf_HeuristicActive_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Perf_HeuristicActive_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_HeuristicActive_Bool
void Valve::VR::OpenVR::_set_k_pch_Perf_HeuristicActive_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Perf_HeuristicActive_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Perf_HeuristicActive_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_NotifyInHMD_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Perf_NotifyInHMD_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Perf_NotifyInHMD_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Perf_NotifyInHMD_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_NotifyInHMD_Bool
void Valve::VR::OpenVR::_set_k_pch_Perf_NotifyInHMD_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Perf_NotifyInHMD_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Perf_NotifyInHMD_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_NotifyOnlyOnce_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Perf_NotifyOnlyOnce_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Perf_NotifyOnlyOnce_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Perf_NotifyOnlyOnce_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_NotifyOnlyOnce_Bool
void Valve::VR::OpenVR::_set_k_pch_Perf_NotifyOnlyOnce_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Perf_NotifyOnlyOnce_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Perf_NotifyOnlyOnce_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_AllowTimingStore_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Perf_AllowTimingStore_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Perf_AllowTimingStore_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Perf_AllowTimingStore_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_AllowTimingStore_Bool
void Valve::VR::OpenVR::_set_k_pch_Perf_AllowTimingStore_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Perf_AllowTimingStore_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Perf_AllowTimingStore_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_SaveTimingsOnExit_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Perf_SaveTimingsOnExit_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Perf_SaveTimingsOnExit_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Perf_SaveTimingsOnExit_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_SaveTimingsOnExit_Bool
void Valve::VR::OpenVR::_set_k_pch_Perf_SaveTimingsOnExit_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Perf_SaveTimingsOnExit_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Perf_SaveTimingsOnExit_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_TestData_Float
::StringW Valve::VR::OpenVR::_get_k_pch_Perf_TestData_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Perf_TestData_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Perf_TestData_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_TestData_Float
void Valve::VR::OpenVR::_set_k_pch_Perf_TestData_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Perf_TestData_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Perf_TestData_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Perf_LinuxGPUProfiling_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Perf_LinuxGPUProfiling_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Perf_LinuxGPUProfiling_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Perf_LinuxGPUProfiling_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Perf_LinuxGPUProfiling_Bool
void Valve::VR::OpenVR::_set_k_pch_Perf_LinuxGPUProfiling_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Perf_LinuxGPUProfiling_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Perf_LinuxGPUProfiling_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_Section
::StringW Valve::VR::OpenVR::_get_k_pch_CollisionBounds_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_CollisionBounds_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_CollisionBounds_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_Section
void Valve::VR::OpenVR::_set_k_pch_CollisionBounds_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_CollisionBounds_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_CollisionBounds_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_Style_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_CollisionBounds_Style_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_CollisionBounds_Style_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_CollisionBounds_Style_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_Style_Int32
void Valve::VR::OpenVR::_set_k_pch_CollisionBounds_Style_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_CollisionBounds_Style_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_CollisionBounds_Style_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_GroundPerimeterOn_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_CollisionBounds_GroundPerimeterOn_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_CollisionBounds_GroundPerimeterOn_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_CollisionBounds_GroundPerimeterOn_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_GroundPerimeterOn_Bool
void Valve::VR::OpenVR::_set_k_pch_CollisionBounds_GroundPerimeterOn_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_CollisionBounds_GroundPerimeterOn_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_CollisionBounds_GroundPerimeterOn_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_CenterMarkerOn_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_CollisionBounds_CenterMarkerOn_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_CollisionBounds_CenterMarkerOn_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_CollisionBounds_CenterMarkerOn_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_CenterMarkerOn_Bool
void Valve::VR::OpenVR::_set_k_pch_CollisionBounds_CenterMarkerOn_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_CollisionBounds_CenterMarkerOn_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_CollisionBounds_CenterMarkerOn_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_PlaySpaceOn_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_CollisionBounds_PlaySpaceOn_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_CollisionBounds_PlaySpaceOn_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_CollisionBounds_PlaySpaceOn_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_PlaySpaceOn_Bool
void Valve::VR::OpenVR::_set_k_pch_CollisionBounds_PlaySpaceOn_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_CollisionBounds_PlaySpaceOn_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_CollisionBounds_PlaySpaceOn_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_FadeDistance_Float
::StringW Valve::VR::OpenVR::_get_k_pch_CollisionBounds_FadeDistance_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_CollisionBounds_FadeDistance_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_CollisionBounds_FadeDistance_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_FadeDistance_Float
void Valve::VR::OpenVR::_set_k_pch_CollisionBounds_FadeDistance_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_CollisionBounds_FadeDistance_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_CollisionBounds_FadeDistance_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_ColorGammaR_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaR_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaR_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_CollisionBounds_ColorGammaR_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_ColorGammaR_Int32
void Valve::VR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaR_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaR_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_CollisionBounds_ColorGammaR_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_ColorGammaG_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaG_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaG_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_CollisionBounds_ColorGammaG_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_ColorGammaG_Int32
void Valve::VR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaG_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaG_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_CollisionBounds_ColorGammaG_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_ColorGammaB_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaB_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaB_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_CollisionBounds_ColorGammaB_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_ColorGammaB_Int32
void Valve::VR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaB_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaB_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_CollisionBounds_ColorGammaB_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_CollisionBounds_ColorGammaA_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaA_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_CollisionBounds_ColorGammaA_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_CollisionBounds_ColorGammaA_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_CollisionBounds_ColorGammaA_Int32
void Valve::VR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaA_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_CollisionBounds_ColorGammaA_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_CollisionBounds_ColorGammaA_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_Section
::StringW Valve::VR::OpenVR::_get_k_pch_Camera_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Camera_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Camera_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_Section
void Valve::VR::OpenVR::_set_k_pch_Camera_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Camera_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Camera_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_EnableCamera_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Camera_EnableCamera_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Camera_EnableCamera_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Camera_EnableCamera_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_EnableCamera_Bool
void Valve::VR::OpenVR::_set_k_pch_Camera_EnableCamera_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Camera_EnableCamera_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Camera_EnableCamera_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_EnableCameraInDashboard_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Camera_EnableCameraInDashboard_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Camera_EnableCameraInDashboard_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Camera_EnableCameraInDashboard_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_EnableCameraInDashboard_Bool
void Valve::VR::OpenVR::_set_k_pch_Camera_EnableCameraInDashboard_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Camera_EnableCameraInDashboard_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Camera_EnableCameraInDashboard_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_EnableCameraForCollisionBounds_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Camera_EnableCameraForCollisionBounds_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Camera_EnableCameraForCollisionBounds_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Camera_EnableCameraForCollisionBounds_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_EnableCameraForCollisionBounds_Bool
void Valve::VR::OpenVR::_set_k_pch_Camera_EnableCameraForCollisionBounds_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Camera_EnableCameraForCollisionBounds_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Camera_EnableCameraForCollisionBounds_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_EnableCameraForRoomView_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Camera_EnableCameraForRoomView_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Camera_EnableCameraForRoomView_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Camera_EnableCameraForRoomView_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_EnableCameraForRoomView_Bool
void Valve::VR::OpenVR::_set_k_pch_Camera_EnableCameraForRoomView_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Camera_EnableCameraForRoomView_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Camera_EnableCameraForRoomView_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_BoundsColorGammaR_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_Camera_BoundsColorGammaR_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Camera_BoundsColorGammaR_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Camera_BoundsColorGammaR_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_BoundsColorGammaR_Int32
void Valve::VR::OpenVR::_set_k_pch_Camera_BoundsColorGammaR_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Camera_BoundsColorGammaR_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Camera_BoundsColorGammaR_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_BoundsColorGammaG_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_Camera_BoundsColorGammaG_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Camera_BoundsColorGammaG_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Camera_BoundsColorGammaG_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_BoundsColorGammaG_Int32
void Valve::VR::OpenVR::_set_k_pch_Camera_BoundsColorGammaG_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Camera_BoundsColorGammaG_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Camera_BoundsColorGammaG_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_BoundsColorGammaB_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_Camera_BoundsColorGammaB_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Camera_BoundsColorGammaB_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Camera_BoundsColorGammaB_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_BoundsColorGammaB_Int32
void Valve::VR::OpenVR::_set_k_pch_Camera_BoundsColorGammaB_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Camera_BoundsColorGammaB_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Camera_BoundsColorGammaB_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_BoundsColorGammaA_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_Camera_BoundsColorGammaA_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Camera_BoundsColorGammaA_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Camera_BoundsColorGammaA_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_BoundsColorGammaA_Int32
void Valve::VR::OpenVR::_set_k_pch_Camera_BoundsColorGammaA_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Camera_BoundsColorGammaA_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Camera_BoundsColorGammaA_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Camera_BoundsStrength_Int32
::StringW Valve::VR::OpenVR::_get_k_pch_Camera_BoundsStrength_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Camera_BoundsStrength_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Camera_BoundsStrength_Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Camera_BoundsStrength_Int32
void Valve::VR::OpenVR::_set_k_pch_Camera_BoundsStrength_Int32(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Camera_BoundsStrength_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Camera_BoundsStrength_Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_Section
::StringW Valve::VR::OpenVR::_get_k_pch_audio_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_audio_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_audio_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_Section
void Valve::VR::OpenVR::_set_k_pch_audio_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_audio_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_audio_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_OnPlaybackDevice_String
::StringW Valve::VR::OpenVR::_get_k_pch_audio_OnPlaybackDevice_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_audio_OnPlaybackDevice_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_audio_OnPlaybackDevice_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_OnPlaybackDevice_String
void Valve::VR::OpenVR::_set_k_pch_audio_OnPlaybackDevice_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_audio_OnPlaybackDevice_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_audio_OnPlaybackDevice_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_OnRecordDevice_String
::StringW Valve::VR::OpenVR::_get_k_pch_audio_OnRecordDevice_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_audio_OnRecordDevice_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_audio_OnRecordDevice_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_OnRecordDevice_String
void Valve::VR::OpenVR::_set_k_pch_audio_OnRecordDevice_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_audio_OnRecordDevice_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_audio_OnRecordDevice_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_OnPlaybackMirrorDevice_String
::StringW Valve::VR::OpenVR::_get_k_pch_audio_OnPlaybackMirrorDevice_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_audio_OnPlaybackMirrorDevice_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_audio_OnPlaybackMirrorDevice_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_OnPlaybackMirrorDevice_String
void Valve::VR::OpenVR::_set_k_pch_audio_OnPlaybackMirrorDevice_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_audio_OnPlaybackMirrorDevice_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_audio_OnPlaybackMirrorDevice_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_OffPlaybackDevice_String
::StringW Valve::VR::OpenVR::_get_k_pch_audio_OffPlaybackDevice_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_audio_OffPlaybackDevice_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_audio_OffPlaybackDevice_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_OffPlaybackDevice_String
void Valve::VR::OpenVR::_set_k_pch_audio_OffPlaybackDevice_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_audio_OffPlaybackDevice_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_audio_OffPlaybackDevice_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_OffRecordDevice_String
::StringW Valve::VR::OpenVR::_get_k_pch_audio_OffRecordDevice_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_audio_OffRecordDevice_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_audio_OffRecordDevice_String"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_OffRecordDevice_String
void Valve::VR::OpenVR::_set_k_pch_audio_OffRecordDevice_String(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_audio_OffRecordDevice_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_audio_OffRecordDevice_String", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_audio_VIVEHDMIGain
::StringW Valve::VR::OpenVR::_get_k_pch_audio_VIVEHDMIGain() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_audio_VIVEHDMIGain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_audio_VIVEHDMIGain"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_audio_VIVEHDMIGain
void Valve::VR::OpenVR::_set_k_pch_audio_VIVEHDMIGain(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_audio_VIVEHDMIGain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_audio_VIVEHDMIGain", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_Section
::StringW Valve::VR::OpenVR::_get_k_pch_Power_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Power_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Power_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_Section
void Valve::VR::OpenVR::_set_k_pch_Power_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Power_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Power_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_PowerOffOnExit_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Power_PowerOffOnExit_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Power_PowerOffOnExit_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Power_PowerOffOnExit_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_PowerOffOnExit_Bool
void Valve::VR::OpenVR::_set_k_pch_Power_PowerOffOnExit_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Power_PowerOffOnExit_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Power_PowerOffOnExit_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_TurnOffScreensTimeout_Float
::StringW Valve::VR::OpenVR::_get_k_pch_Power_TurnOffScreensTimeout_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Power_TurnOffScreensTimeout_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Power_TurnOffScreensTimeout_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_TurnOffScreensTimeout_Float
void Valve::VR::OpenVR::_set_k_pch_Power_TurnOffScreensTimeout_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Power_TurnOffScreensTimeout_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Power_TurnOffScreensTimeout_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_TurnOffControllersTimeout_Float
::StringW Valve::VR::OpenVR::_get_k_pch_Power_TurnOffControllersTimeout_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Power_TurnOffControllersTimeout_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Power_TurnOffControllersTimeout_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_TurnOffControllersTimeout_Float
void Valve::VR::OpenVR::_set_k_pch_Power_TurnOffControllersTimeout_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Power_TurnOffControllersTimeout_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Power_TurnOffControllersTimeout_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_ReturnToWatchdogTimeout_Float
::StringW Valve::VR::OpenVR::_get_k_pch_Power_ReturnToWatchdogTimeout_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Power_ReturnToWatchdogTimeout_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Power_ReturnToWatchdogTimeout_Float"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_ReturnToWatchdogTimeout_Float
void Valve::VR::OpenVR::_set_k_pch_Power_ReturnToWatchdogTimeout_Float(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Power_ReturnToWatchdogTimeout_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Power_ReturnToWatchdogTimeout_Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_AutoLaunchSteamVROnButtonPress
::StringW Valve::VR::OpenVR::_get_k_pch_Power_AutoLaunchSteamVROnButtonPress() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Power_AutoLaunchSteamVROnButtonPress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Power_AutoLaunchSteamVROnButtonPress"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_AutoLaunchSteamVROnButtonPress
void Valve::VR::OpenVR::_set_k_pch_Power_AutoLaunchSteamVROnButtonPress(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Power_AutoLaunchSteamVROnButtonPress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Power_AutoLaunchSteamVROnButtonPress", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Power_PauseCompositorOnStandby_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Power_PauseCompositorOnStandby_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Power_PauseCompositorOnStandby_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Power_PauseCompositorOnStandby_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Power_PauseCompositorOnStandby_Bool
void Valve::VR::OpenVR::_set_k_pch_Power_PauseCompositorOnStandby_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Power_PauseCompositorOnStandby_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Power_PauseCompositorOnStandby_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Dashboard_Section
::StringW Valve::VR::OpenVR::_get_k_pch_Dashboard_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Dashboard_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Dashboard_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Dashboard_Section
void Valve::VR::OpenVR::_set_k_pch_Dashboard_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Dashboard_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Dashboard_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Dashboard_EnableDashboard_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Dashboard_EnableDashboard_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Dashboard_EnableDashboard_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Dashboard_EnableDashboard_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Dashboard_EnableDashboard_Bool
void Valve::VR::OpenVR::_set_k_pch_Dashboard_EnableDashboard_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Dashboard_EnableDashboard_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Dashboard_EnableDashboard_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Dashboard_ArcadeMode_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Dashboard_ArcadeMode_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Dashboard_ArcadeMode_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Dashboard_ArcadeMode_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Dashboard_ArcadeMode_Bool
void Valve::VR::OpenVR::_set_k_pch_Dashboard_ArcadeMode_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Dashboard_ArcadeMode_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Dashboard_ArcadeMode_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_modelskin_Section
::StringW Valve::VR::OpenVR::_get_k_pch_modelskin_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_modelskin_Section");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_modelskin_Section"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_modelskin_Section
void Valve::VR::OpenVR::_set_k_pch_modelskin_Section(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_modelskin_Section");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_modelskin_Section", value));
}
// Autogenerated static field getter
// Get static field: static public System.String k_pch_Driver_Enable_Bool
::StringW Valve::VR::OpenVR::_get_k_pch_Driver_Enable_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_k_pch_Driver_Enable_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "k_pch_Driver_Enable_Bool"));
}
// Autogenerated static field setter
// Set static field: static public System.String k_pch_Driver_Enable_Bool
void Valve::VR::OpenVR::_set_k_pch_Driver_Enable_Bool(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_k_pch_Driver_Enable_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "k_pch_Driver_Enable_Bool", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRScreenshots_Version
::StringW Valve::VR::OpenVR::_get_IVRScreenshots_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_IVRScreenshots_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "IVRScreenshots_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRScreenshots_Version
void Valve::VR::OpenVR::_set_IVRScreenshots_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_IVRScreenshots_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "IVRScreenshots_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRResources_Version
::StringW Valve::VR::OpenVR::_get_IVRResources_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_IVRResources_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "IVRResources_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRResources_Version
void Valve::VR::OpenVR::_set_IVRResources_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_IVRResources_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "IVRResources_Version", value));
}
// Autogenerated static field getter
// Get static field: static public System.String IVRDriverManager_Version
::StringW Valve::VR::OpenVR::_get_IVRDriverManager_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_IVRDriverManager_Version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "IVRDriverManager_Version"));
}
// Autogenerated static field setter
// Set static field: static public System.String IVRDriverManager_Version
void Valve::VR::OpenVR::_set_IVRDriverManager_Version(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_IVRDriverManager_Version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "IVRDriverManager_Version", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 <VRToken>k__BackingField
uint Valve::VR::OpenVR::_get_$VRToken$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_$VRToken$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<uint>("Valve.VR", "OpenVR", "<VRToken>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 <VRToken>k__BackingField
void Valve::VR::OpenVR::_set_$VRToken$k__BackingField(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_$VRToken$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "<VRToken>k__BackingField", value));
}
// Autogenerated static field getter
// Get static field: static private System.String FnTable_Prefix
::StringW Valve::VR::OpenVR::_get_FnTable_Prefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get_FnTable_Prefix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Valve.VR", "OpenVR", "FnTable_Prefix"));
}
// Autogenerated static field setter
// Set static field: static private System.String FnTable_Prefix
void Valve::VR::OpenVR::_set_FnTable_Prefix(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set_FnTable_Prefix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "FnTable_Prefix", value));
}
// Autogenerated static field getter
// Get static field: static private Valve.VR.OpenVR/Valve.VR.COpenVRContext _OpenVRInternal_ModuleContext
Valve::VR::OpenVR::COpenVRContext* Valve::VR::OpenVR::_get__OpenVRInternal_ModuleContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_get__OpenVRInternal_ModuleContext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Valve::VR::OpenVR::COpenVRContext*>("Valve.VR", "OpenVR", "_OpenVRInternal_ModuleContext"));
}
// Autogenerated static field setter
// Set static field: static private Valve.VR.OpenVR/Valve.VR.COpenVRContext _OpenVRInternal_ModuleContext
void Valve::VR::OpenVR::_set__OpenVRInternal_ModuleContext(Valve::VR::OpenVR::COpenVRContext* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::_set__OpenVRInternal_ModuleContext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Valve.VR", "OpenVR", "_OpenVRInternal_ModuleContext", value));
}
// Autogenerated method: Valve.VR.OpenVR.get_VRToken
uint Valve::VR::OpenVR::get_VRToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::get_VRToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "get_VRToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR.set_VRToken
void Valve::VR::OpenVR::set_VRToken(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::set_VRToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "set_VRToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Valve.VR.OpenVR.get_OpenVRInternal_ModuleContext
Valve::VR::OpenVR::COpenVRContext* Valve::VR::OpenVR::get_OpenVRInternal_ModuleContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::get_OpenVRInternal_ModuleContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "get_OpenVRInternal_ModuleContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::OpenVR::COpenVRContext*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR.get_System
Valve::VR::CVRSystem* Valve::VR::OpenVR::get_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::get_System");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "get_System", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRSystem*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR.get_Chaperone
Valve::VR::CVRChaperone* Valve::VR::OpenVR::get_Chaperone() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::get_Chaperone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "get_Chaperone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRChaperone*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR.get_ChaperoneSetup
Valve::VR::CVRChaperoneSetup* Valve::VR::OpenVR::get_ChaperoneSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::get_ChaperoneSetup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "get_ChaperoneSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRChaperoneSetup*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR.get_Compositor
Valve::VR::CVRCompositor* Valve::VR::OpenVR::get_Compositor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::get_Compositor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "get_Compositor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRCompositor*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR.get_Overlay
Valve::VR::CVROverlay* Valve::VR::OpenVR::get_Overlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::get_Overlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "get_Overlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVROverlay*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR.get_RenderModels
Valve::VR::CVRRenderModels* Valve::VR::OpenVR::get_RenderModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::get_RenderModels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "get_RenderModels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRRenderModels*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR.get_ExtendedDisplay
Valve::VR::CVRExtendedDisplay* Valve::VR::OpenVR::get_ExtendedDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::get_ExtendedDisplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "get_ExtendedDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRExtendedDisplay*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR.get_Settings
Valve::VR::CVRSettings* Valve::VR::OpenVR::get_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::get_Settings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "get_Settings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR.get_Applications
Valve::VR::CVRApplications* Valve::VR::OpenVR::get_Applications() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::get_Applications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "get_Applications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRApplications*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR.get_Screenshots
Valve::VR::CVRScreenshots* Valve::VR::OpenVR::get_Screenshots() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::get_Screenshots");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "get_Screenshots", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRScreenshots*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR.get_TrackedCamera
Valve::VR::CVRTrackedCamera* Valve::VR::OpenVR::get_TrackedCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::get_TrackedCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "get_TrackedCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRTrackedCamera*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR..cctor
void Valve::VR::OpenVR::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR.InitInternal
uint Valve::VR::OpenVR::InitInternal(ByRef<Valve::VR::EVRInitError> peError, Valve::VR::EVRApplicationType eApplicationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::InitInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "InitInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(eApplicationType)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(peError), eApplicationType);
}
// Autogenerated method: Valve.VR.OpenVR.ShutdownInternal
void Valve::VR::OpenVR::ShutdownInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::ShutdownInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "ShutdownInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR.IsHmdPresent
bool Valve::VR::OpenVR::IsHmdPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::IsHmdPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "IsHmdPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR.IsRuntimeInstalled
bool Valve::VR::OpenVR::IsRuntimeInstalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::IsRuntimeInstalled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "IsRuntimeInstalled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR.GetStringForHmdError
::StringW Valve::VR::OpenVR::GetStringForHmdError(Valve::VR::EVRInitError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::GetStringForHmdError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "GetStringForHmdError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, error);
}
// Autogenerated method: Valve.VR.OpenVR.GetGenericInterface
System::IntPtr Valve::VR::OpenVR::GetGenericInterface(::StringW pchInterfaceVersion, ByRef<Valve::VR::EVRInitError> peError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::GetGenericInterface");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "GetGenericInterface", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchInterfaceVersion), ::il2cpp_utils::ExtractType(peError)})));
  return ::il2cpp_utils::RunMethodRethrow<System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pchInterfaceVersion, byref(peError));
}
// Autogenerated method: Valve.VR.OpenVR.IsInterfaceVersionValid
bool Valve::VR::OpenVR::IsInterfaceVersionValid(::StringW pchInterfaceVersion) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::IsInterfaceVersionValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "IsInterfaceVersionValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchInterfaceVersion)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pchInterfaceVersion);
}
// Autogenerated method: Valve.VR.OpenVR.GetInitToken
uint Valve::VR::OpenVR::GetInitToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::GetInitToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "GetInitToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR.Init
Valve::VR::CVRSystem* Valve::VR::OpenVR::Init(ByRef<Valve::VR::EVRInitError> peError, Valve::VR::EVRApplicationType eApplicationType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peError), ::il2cpp_utils::ExtractType(eApplicationType)})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRSystem*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(peError), eApplicationType);
}
// Autogenerated method: Valve.VR.OpenVR.Shutdown
void Valve::VR::OpenVR::Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::Shutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Valve.VR", "OpenVR", "Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Valve.VR.OpenVR/Valve.VR.COpenVRContext
#include "Valve/VR/OpenVR_COpenVRContext.hpp"
// Including type: Valve.VR.CVRSystem
#include "Valve/VR/CVRSystem.hpp"
// Including type: Valve.VR.CVRChaperone
#include "Valve/VR/CVRChaperone.hpp"
// Including type: Valve.VR.CVRChaperoneSetup
#include "Valve/VR/CVRChaperoneSetup.hpp"
// Including type: Valve.VR.CVRCompositor
#include "Valve/VR/CVRCompositor.hpp"
// Including type: Valve.VR.CVROverlay
#include "Valve/VR/CVROverlay.hpp"
// Including type: Valve.VR.CVRRenderModels
#include "Valve/VR/CVRRenderModels.hpp"
// Including type: Valve.VR.CVRExtendedDisplay
#include "Valve/VR/CVRExtendedDisplay.hpp"
// Including type: Valve.VR.CVRSettings
#include "Valve/VR/CVRSettings.hpp"
// Including type: Valve.VR.CVRApplications
#include "Valve/VR/CVRApplications.hpp"
// Including type: Valve.VR.CVRScreenshots
#include "Valve/VR/CVRScreenshots.hpp"
// Including type: Valve.VR.CVRTrackedCamera
#include "Valve/VR/CVRTrackedCamera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Valve.VR.CVRSystem m_pVRSystem
Valve::VR::CVRSystem*& Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRSystem"))->offset;
  return *reinterpret_cast<Valve::VR::CVRSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Valve.VR.CVRChaperone m_pVRChaperone
Valve::VR::CVRChaperone*& Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRChaperone() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRChaperone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRChaperone"))->offset;
  return *reinterpret_cast<Valve::VR::CVRChaperone**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Valve.VR.CVRChaperoneSetup m_pVRChaperoneSetup
Valve::VR::CVRChaperoneSetup*& Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRChaperoneSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRChaperoneSetup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRChaperoneSetup"))->offset;
  return *reinterpret_cast<Valve::VR::CVRChaperoneSetup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Valve.VR.CVRCompositor m_pVRCompositor
Valve::VR::CVRCompositor*& Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRCompositor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRCompositor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRCompositor"))->offset;
  return *reinterpret_cast<Valve::VR::CVRCompositor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Valve.VR.CVROverlay m_pVROverlay
Valve::VR::CVROverlay*& Valve::VR::OpenVR::COpenVRContext::dyn_m_pVROverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::dyn_m_pVROverlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVROverlay"))->offset;
  return *reinterpret_cast<Valve::VR::CVROverlay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Valve.VR.CVRRenderModels m_pVRRenderModels
Valve::VR::CVRRenderModels*& Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRRenderModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRRenderModels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRRenderModels"))->offset;
  return *reinterpret_cast<Valve::VR::CVRRenderModels**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Valve.VR.CVRExtendedDisplay m_pVRExtendedDisplay
Valve::VR::CVRExtendedDisplay*& Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRExtendedDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRExtendedDisplay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRExtendedDisplay"))->offset;
  return *reinterpret_cast<Valve::VR::CVRExtendedDisplay**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Valve.VR.CVRSettings m_pVRSettings
Valve::VR::CVRSettings*& Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRSettings"))->offset;
  return *reinterpret_cast<Valve::VR::CVRSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Valve.VR.CVRApplications m_pVRApplications
Valve::VR::CVRApplications*& Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRApplications() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRApplications");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRApplications"))->offset;
  return *reinterpret_cast<Valve::VR::CVRApplications**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Valve.VR.CVRScreenshots m_pVRScreenshots
Valve::VR::CVRScreenshots*& Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRScreenshots() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRScreenshots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRScreenshots"))->offset;
  return *reinterpret_cast<Valve::VR::CVRScreenshots**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Valve.VR.CVRTrackedCamera m_pVRTrackedCamera
Valve::VR::CVRTrackedCamera*& Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRTrackedCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::dyn_m_pVRTrackedCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_pVRTrackedCamera"))->offset;
  return *reinterpret_cast<Valve::VR::CVRTrackedCamera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Valve.VR.OpenVR/Valve.VR.COpenVRContext.Clear
void Valve::VR::OpenVR::COpenVRContext::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR/Valve.VR.COpenVRContext.CheckClear
void Valve::VR::OpenVR::COpenVRContext::CheckClear() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::CheckClear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckClear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR/Valve.VR.COpenVRContext.VRSystem
Valve::VR::CVRSystem* Valve::VR::OpenVR::COpenVRContext::VRSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::VRSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRSystem*, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR/Valve.VR.COpenVRContext.VRChaperone
Valve::VR::CVRChaperone* Valve::VR::OpenVR::COpenVRContext::VRChaperone() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::VRChaperone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRChaperone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRChaperone*, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR/Valve.VR.COpenVRContext.VRChaperoneSetup
Valve::VR::CVRChaperoneSetup* Valve::VR::OpenVR::COpenVRContext::VRChaperoneSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::VRChaperoneSetup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRChaperoneSetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRChaperoneSetup*, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR/Valve.VR.COpenVRContext.VRCompositor
Valve::VR::CVRCompositor* Valve::VR::OpenVR::COpenVRContext::VRCompositor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::VRCompositor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRCompositor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRCompositor*, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR/Valve.VR.COpenVRContext.VROverlay
Valve::VR::CVROverlay* Valve::VR::OpenVR::COpenVRContext::VROverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::VROverlay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VROverlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVROverlay*, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR/Valve.VR.COpenVRContext.VRRenderModels
Valve::VR::CVRRenderModels* Valve::VR::OpenVR::COpenVRContext::VRRenderModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::VRRenderModels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRRenderModels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRRenderModels*, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR/Valve.VR.COpenVRContext.VRExtendedDisplay
Valve::VR::CVRExtendedDisplay* Valve::VR::OpenVR::COpenVRContext::VRExtendedDisplay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::VRExtendedDisplay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRExtendedDisplay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRExtendedDisplay*, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR/Valve.VR.COpenVRContext.VRSettings
Valve::VR::CVRSettings* Valve::VR::OpenVR::COpenVRContext::VRSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::VRSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRSettings*, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR/Valve.VR.COpenVRContext.VRApplications
Valve::VR::CVRApplications* Valve::VR::OpenVR::COpenVRContext::VRApplications() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::VRApplications");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRApplications", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRApplications*, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR/Valve.VR.COpenVRContext.VRScreenshots
Valve::VR::CVRScreenshots* Valve::VR::OpenVR::COpenVRContext::VRScreenshots() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::VRScreenshots");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRScreenshots", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRScreenshots*, false>(this, ___internal__method);
}
// Autogenerated method: Valve.VR.OpenVR/Valve.VR.COpenVRContext.VRTrackedCamera
Valve::VR::CVRTrackedCamera* Valve::VR::OpenVR::COpenVRContext::VRTrackedCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("Valve::VR::OpenVR::COpenVRContext::VRTrackedCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRTrackedCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<Valve::VR::CVRTrackedCamera*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Configuration.ConfigurationSection
#include "System/Configuration/ConfigurationSection.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Configuration.ConfigurationSaveMode
#include "System/Configuration/ConfigurationSaveMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Configuration.ConfigurationSection.DeserializeSection
void System::Configuration::ConfigurationSection::DeserializeSection(System::Xml::XmlReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::ConfigurationSection::DeserializeSection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated method: System.Configuration.ConfigurationSection.SerializeSection
::StringW System::Configuration::ConfigurationSection::SerializeSection(System::Configuration::ConfigurationElement* parentElement, ::StringW name, System::Configuration::ConfigurationSaveMode saveMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::ConfigurationSection::SerializeSection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentElement), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(saveMode)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, parentElement, name, saveMode);
}
// Autogenerated method: System.Configuration.ConfigurationSection.IsModified
bool System::Configuration::ConfigurationSection::IsModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::ConfigurationSection::IsModified");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsModified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.ConfigurationSection.ResetModified
void System::Configuration::ConfigurationSection::ResetModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::ConfigurationSection::ResetModified");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetModified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Configuration.ConfigurationElement
#include "System/Configuration/ConfigurationElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Configuration.ConfigurationElement.get_Properties
System::Configuration::ConfigurationPropertyCollection* System::Configuration::ConfigurationElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::ConfigurationElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.ConfigurationElement.IsModified
bool System::Configuration::ConfigurationElement::IsModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::ConfigurationElement::IsModified");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsModified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.ConfigurationElement.Reset
void System::Configuration::ConfigurationElement::Reset(System::Configuration::ConfigurationElement* parentElement) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::ConfigurationElement::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentElement)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentElement);
}
// Autogenerated method: System.Configuration.ConfigurationElement.ResetModified
void System::Configuration::ConfigurationElement::ResetModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::ConfigurationElement::ResetModified");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetModified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Configuration.ConfigurationSaveMode
#include "System/Configuration/ConfigurationSaveMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Configuration.ConfigurationSaveMode Full
System::Configuration::ConfigurationSaveMode System::Configuration::ConfigurationSaveMode::_get_Full() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::ConfigurationSaveMode::_get_Full");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Configuration::ConfigurationSaveMode>("System.Configuration", "ConfigurationSaveMode", "Full"));
}
// Autogenerated static field setter
// Set static field: static public System.Configuration.ConfigurationSaveMode Full
void System::Configuration::ConfigurationSaveMode::_set_Full(System::Configuration::ConfigurationSaveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::ConfigurationSaveMode::_set_Full");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Configuration", "ConfigurationSaveMode", "Full", value));
}
// Autogenerated static field getter
// Get static field: static public System.Configuration.ConfigurationSaveMode Minimal
System::Configuration::ConfigurationSaveMode System::Configuration::ConfigurationSaveMode::_get_Minimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::ConfigurationSaveMode::_get_Minimal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Configuration::ConfigurationSaveMode>("System.Configuration", "ConfigurationSaveMode", "Minimal"));
}
// Autogenerated static field setter
// Set static field: static public System.Configuration.ConfigurationSaveMode Minimal
void System::Configuration::ConfigurationSaveMode::_set_Minimal(System::Configuration::ConfigurationSaveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::ConfigurationSaveMode::_set_Minimal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Configuration", "ConfigurationSaveMode", "Minimal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Configuration.ConfigurationSaveMode Modified
System::Configuration::ConfigurationSaveMode System::Configuration::ConfigurationSaveMode::_get_Modified() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::ConfigurationSaveMode::_get_Modified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Configuration::ConfigurationSaveMode>("System.Configuration", "ConfigurationSaveMode", "Modified"));
}
// Autogenerated static field setter
// Set static field: static public System.Configuration.ConfigurationSaveMode Modified
void System::Configuration::ConfigurationSaveMode::_set_Modified(System::Configuration::ConfigurationSaveMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::ConfigurationSaveMode::_set_Modified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Configuration", "ConfigurationSaveMode", "Modified", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Configuration::ConfigurationSaveMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::ConfigurationSaveMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Configuration.ConfigurationCollectionAttribute
#include "System/Configuration/ConfigurationCollectionAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Configuration.IgnoreSection
#include "System/Configuration/IgnoreSection.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
// Including type: System.Xml.XmlReader
#include "System/Xml/XmlReader.hpp"
// Including type: System.Configuration.ConfigurationSaveMode
#include "System/Configuration/ConfigurationSaveMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Configuration.IgnoreSection.get_Properties
System::Configuration::ConfigurationPropertyCollection* System::Configuration::IgnoreSection::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::IgnoreSection::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.IgnoreSection.DeserializeSection
void System::Configuration::IgnoreSection::DeserializeSection(System::Xml::XmlReader* xmlReader) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::IgnoreSection::DeserializeSection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeserializeSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmlReader)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, xmlReader);
}
// Autogenerated method: System.Configuration.IgnoreSection.IsModified
bool System::Configuration::IgnoreSection::IsModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::IgnoreSection::IsModified");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsModified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.IgnoreSection.Reset
void System::Configuration::IgnoreSection::Reset(System::Configuration::ConfigurationElement* parentSection) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::IgnoreSection::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentSection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, parentSection);
}
// Autogenerated method: System.Configuration.IgnoreSection.ResetModified
void System::Configuration::IgnoreSection::ResetModified() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::IgnoreSection::ResetModified");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetModified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Configuration.IgnoreSection.SerializeSection
::StringW System::Configuration::IgnoreSection::SerializeSection(System::Configuration::ConfigurationElement* parentSection, ::StringW name, System::Configuration::ConfigurationSaveMode saveMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Configuration::IgnoreSection::SerializeSection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentSection), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(saveMode)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, parentSection, name, saveMode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.LockRecursionPolicy
#include "System/Threading/LockRecursionPolicy.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Threading.LockRecursionPolicy NoRecursion
System::Threading::LockRecursionPolicy System::Threading::LockRecursionPolicy::_get_NoRecursion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::LockRecursionPolicy::_get_NoRecursion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::LockRecursionPolicy>("System.Threading", "LockRecursionPolicy", "NoRecursion"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.LockRecursionPolicy NoRecursion
void System::Threading::LockRecursionPolicy::_set_NoRecursion(System::Threading::LockRecursionPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::LockRecursionPolicy::_set_NoRecursion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "LockRecursionPolicy", "NoRecursion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.LockRecursionPolicy SupportsRecursion
System::Threading::LockRecursionPolicy System::Threading::LockRecursionPolicy::_get_SupportsRecursion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::LockRecursionPolicy::_get_SupportsRecursion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::LockRecursionPolicy>("System.Threading", "LockRecursionPolicy", "SupportsRecursion"));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.LockRecursionPolicy SupportsRecursion
void System::Threading::LockRecursionPolicy::_set_SupportsRecursion(System::Threading::LockRecursionPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::LockRecursionPolicy::_set_SupportsRecursion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "LockRecursionPolicy", "SupportsRecursion", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Threading::LockRecursionPolicy::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::LockRecursionPolicy::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ReaderWriterCount
#include "System/Threading/ReaderWriterCount.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int64 lockID
int64_t& System::Threading::ReaderWriterCount::dyn_lockID() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterCount::dyn_lockID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lockID"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 readercount
int& System::Threading::ReaderWriterCount::dyn_readercount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterCount::dyn_readercount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readercount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 writercount
int& System::Threading::ReaderWriterCount::dyn_writercount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterCount::dyn_writercount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writercount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 upgradecount
int& System::Threading::ReaderWriterCount::dyn_upgradecount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterCount::dyn_upgradecount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "upgradecount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.ReaderWriterCount next
System::Threading::ReaderWriterCount*& System::Threading::ReaderWriterCount::dyn_next() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterCount::dyn_next");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "next"))->offset;
  return *reinterpret_cast<System::Threading::ReaderWriterCount**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ReaderWriterLockSlim
#include "System/Threading/ReaderWriterLockSlim.hpp"
// Including type: System.Threading.ReaderWriterLockSlim/System.Threading.TimeoutTracker
#include "System/Threading/ReaderWriterLockSlim_TimeoutTracker.hpp"
// Including type: System.Threading.EventWaitHandle
#include "System/Threading/EventWaitHandle.hpp"
// Including type: System.Threading.ReaderWriterCount
#include "System/Threading/ReaderWriterCount.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 LockSpinCycles
int System::Threading::ReaderWriterLockSlim::_get_LockSpinCycles() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_get_LockSpinCycles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ReaderWriterLockSlim", "LockSpinCycles"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 LockSpinCycles
void System::Threading::ReaderWriterLockSlim::_set_LockSpinCycles(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_set_LockSpinCycles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ReaderWriterLockSlim", "LockSpinCycles", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 LockSpinCount
int System::Threading::ReaderWriterLockSlim::_get_LockSpinCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_get_LockSpinCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ReaderWriterLockSlim", "LockSpinCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 LockSpinCount
void System::Threading::ReaderWriterLockSlim::_set_LockSpinCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_set_LockSpinCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ReaderWriterLockSlim", "LockSpinCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 LockSleep0Count
int System::Threading::ReaderWriterLockSlim::_get_LockSleep0Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_get_LockSleep0Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ReaderWriterLockSlim", "LockSleep0Count"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 LockSleep0Count
void System::Threading::ReaderWriterLockSlim::_set_LockSleep0Count(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_set_LockSleep0Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ReaderWriterLockSlim", "LockSleep0Count", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 s_nextLockID
int64_t System::Threading::ReaderWriterLockSlim::_get_s_nextLockID() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_get_s_nextLockID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Threading", "ReaderWriterLockSlim", "s_nextLockID"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 s_nextLockID
void System::Threading::ReaderWriterLockSlim::_set_s_nextLockID(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_set_s_nextLockID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ReaderWriterLockSlim", "s_nextLockID", value));
}
// Autogenerated static field getter
// Get static field: static private System.Threading.ReaderWriterCount t_rwc
System::Threading::ReaderWriterCount* System::Threading::ReaderWriterLockSlim::_get_t_rwc() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_get_t_rwc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ReaderWriterCount*>("System.Threading", "ReaderWriterLockSlim", "t_rwc"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.ReaderWriterCount t_rwc
void System::Threading::ReaderWriterLockSlim::_set_t_rwc(System::Threading::ReaderWriterCount* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_set_t_rwc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ReaderWriterLockSlim", "t_rwc", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MaxSpinCount
int System::Threading::ReaderWriterLockSlim::_get_MaxSpinCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_get_MaxSpinCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Threading", "ReaderWriterLockSlim", "MaxSpinCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MaxSpinCount
void System::Threading::ReaderWriterLockSlim::_set_MaxSpinCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_set_MaxSpinCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ReaderWriterLockSlim", "MaxSpinCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 WRITER_HELD
uint System::Threading::ReaderWriterLockSlim::_get_WRITER_HELD() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_get_WRITER_HELD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Threading", "ReaderWriterLockSlim", "WRITER_HELD"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 WRITER_HELD
void System::Threading::ReaderWriterLockSlim::_set_WRITER_HELD(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_set_WRITER_HELD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ReaderWriterLockSlim", "WRITER_HELD", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 WAITING_WRITERS
uint System::Threading::ReaderWriterLockSlim::_get_WAITING_WRITERS() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_get_WAITING_WRITERS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Threading", "ReaderWriterLockSlim", "WAITING_WRITERS"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 WAITING_WRITERS
void System::Threading::ReaderWriterLockSlim::_set_WAITING_WRITERS(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_set_WAITING_WRITERS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ReaderWriterLockSlim", "WAITING_WRITERS", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 WAITING_UPGRADER
uint System::Threading::ReaderWriterLockSlim::_get_WAITING_UPGRADER() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_get_WAITING_UPGRADER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Threading", "ReaderWriterLockSlim", "WAITING_UPGRADER"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 WAITING_UPGRADER
void System::Threading::ReaderWriterLockSlim::_set_WAITING_UPGRADER(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_set_WAITING_UPGRADER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ReaderWriterLockSlim", "WAITING_UPGRADER", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 MAX_READER
uint System::Threading::ReaderWriterLockSlim::_get_MAX_READER() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_get_MAX_READER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Threading", "ReaderWriterLockSlim", "MAX_READER"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 MAX_READER
void System::Threading::ReaderWriterLockSlim::_set_MAX_READER(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_set_MAX_READER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ReaderWriterLockSlim", "MAX_READER", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 READER_MASK
uint System::Threading::ReaderWriterLockSlim::_get_READER_MASK() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_get_READER_MASK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Threading", "ReaderWriterLockSlim", "READER_MASK"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 READER_MASK
void System::Threading::ReaderWriterLockSlim::_set_READER_MASK(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::_set_READER_MASK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Threading", "ReaderWriterLockSlim", "READER_MASK", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean fIsReentrant
bool& System::Threading::ReaderWriterLockSlim::dyn_fIsReentrant() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::dyn_fIsReentrant");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fIsReentrant"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 myLock
int& System::Threading::ReaderWriterLockSlim::dyn_myLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::dyn_myLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myLock"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 numWriteWaiters
uint& System::Threading::ReaderWriterLockSlim::dyn_numWriteWaiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::dyn_numWriteWaiters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numWriteWaiters"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 numReadWaiters
uint& System::Threading::ReaderWriterLockSlim::dyn_numReadWaiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::dyn_numReadWaiters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numReadWaiters"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 numWriteUpgradeWaiters
uint& System::Threading::ReaderWriterLockSlim::dyn_numWriteUpgradeWaiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::dyn_numWriteUpgradeWaiters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numWriteUpgradeWaiters"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 numUpgradeWaiters
uint& System::Threading::ReaderWriterLockSlim::dyn_numUpgradeWaiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::dyn_numUpgradeWaiters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numUpgradeWaiters"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean fNoWaiters
bool& System::Threading::ReaderWriterLockSlim::dyn_fNoWaiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::dyn_fNoWaiters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fNoWaiters"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 upgradeLockOwnerId
int& System::Threading::ReaderWriterLockSlim::dyn_upgradeLockOwnerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::dyn_upgradeLockOwnerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "upgradeLockOwnerId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 writeLockOwnerId
int& System::Threading::ReaderWriterLockSlim::dyn_writeLockOwnerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::dyn_writeLockOwnerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writeLockOwnerId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.EventWaitHandle writeEvent
System::Threading::EventWaitHandle*& System::Threading::ReaderWriterLockSlim::dyn_writeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::dyn_writeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writeEvent"))->offset;
  return *reinterpret_cast<System::Threading::EventWaitHandle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.EventWaitHandle readEvent
System::Threading::EventWaitHandle*& System::Threading::ReaderWriterLockSlim::dyn_readEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::dyn_readEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readEvent"))->offset;
  return *reinterpret_cast<System::Threading::EventWaitHandle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.EventWaitHandle upgradeEvent
System::Threading::EventWaitHandle*& System::Threading::ReaderWriterLockSlim::dyn_upgradeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::dyn_upgradeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "upgradeEvent"))->offset;
  return *reinterpret_cast<System::Threading::EventWaitHandle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.EventWaitHandle waitUpgradeEvent
System::Threading::EventWaitHandle*& System::Threading::ReaderWriterLockSlim::dyn_waitUpgradeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::dyn_waitUpgradeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "waitUpgradeEvent"))->offset;
  return *reinterpret_cast<System::Threading::EventWaitHandle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 lockID
int64_t& System::Threading::ReaderWriterLockSlim::dyn_lockID() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::dyn_lockID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lockID"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean fUpgradeThreadHoldingRead
bool& System::Threading::ReaderWriterLockSlim::dyn_fUpgradeThreadHoldingRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::dyn_fUpgradeThreadHoldingRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fUpgradeThreadHoldingRead"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32 owners
uint& System::Threading::ReaderWriterLockSlim::dyn_owners() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::dyn_owners");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "owners"))->offset;
  return *reinterpret_cast<uint*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean fDisposed
bool& System::Threading::ReaderWriterLockSlim::dyn_fDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::dyn_fDisposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fDisposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_IsReadLockHeld
bool System::Threading::ReaderWriterLockSlim::get_IsReadLockHeld() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::get_IsReadLockHeld");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadLockHeld", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_IsUpgradeableReadLockHeld
bool System::Threading::ReaderWriterLockSlim::get_IsUpgradeableReadLockHeld() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::get_IsUpgradeableReadLockHeld");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsUpgradeableReadLockHeld", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_IsWriteLockHeld
bool System::Threading::ReaderWriterLockSlim::get_IsWriteLockHeld() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::get_IsWriteLockHeld");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsWriteLockHeld", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_RecursiveReadCount
int System::Threading::ReaderWriterLockSlim::get_RecursiveReadCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::get_RecursiveReadCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RecursiveReadCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_RecursiveUpgradeCount
int System::Threading::ReaderWriterLockSlim::get_RecursiveUpgradeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::get_RecursiveUpgradeCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RecursiveUpgradeCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_RecursiveWriteCount
int System::Threading::ReaderWriterLockSlim::get_RecursiveWriteCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::get_RecursiveWriteCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RecursiveWriteCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_WaitingReadCount
int System::Threading::ReaderWriterLockSlim::get_WaitingReadCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::get_WaitingReadCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WaitingReadCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_WaitingUpgradeCount
int System::Threading::ReaderWriterLockSlim::get_WaitingUpgradeCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::get_WaitingUpgradeCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WaitingUpgradeCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.get_WaitingWriteCount
int System::Threading::ReaderWriterLockSlim::get_WaitingWriteCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::get_WaitingWriteCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WaitingWriteCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.InitializeThreadCounts
void System::Threading::ReaderWriterLockSlim::InitializeThreadCounts() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::InitializeThreadCounts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeThreadCounts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.IsRWEntryEmpty
bool System::Threading::ReaderWriterLockSlim::IsRWEntryEmpty(System::Threading::ReaderWriterCount* rwc) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::IsRWEntryEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ReaderWriterLockSlim", "IsRWEntryEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rwc)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rwc);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.IsRwHashEntryChanged
bool System::Threading::ReaderWriterLockSlim::IsRwHashEntryChanged(System::Threading::ReaderWriterCount* lrwc) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::IsRwHashEntryChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsRwHashEntryChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lrwc)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, lrwc);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.GetThreadRWCount
System::Threading::ReaderWriterCount* System::Threading::ReaderWriterLockSlim::GetThreadRWCount(bool dontAllocate) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::GetThreadRWCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetThreadRWCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dontAllocate)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Threading::ReaderWriterCount*, false>(this, ___internal__method, dontAllocate);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.EnterReadLock
void System::Threading::ReaderWriterLockSlim::EnterReadLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::EnterReadLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnterReadLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.TryEnterReadLock
bool System::Threading::ReaderWriterLockSlim::TryEnterReadLock(int millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::TryEnterReadLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryEnterReadLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsTimeout)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, millisecondsTimeout);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.TryEnterReadLock
bool System::Threading::ReaderWriterLockSlim::TryEnterReadLock(System::Threading::ReaderWriterLockSlim::TimeoutTracker timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::TryEnterReadLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryEnterReadLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, timeout);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.TryEnterReadLockCore
bool System::Threading::ReaderWriterLockSlim::TryEnterReadLockCore(System::Threading::ReaderWriterLockSlim::TimeoutTracker timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::TryEnterReadLockCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryEnterReadLockCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, timeout);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.EnterWriteLock
void System::Threading::ReaderWriterLockSlim::EnterWriteLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::EnterWriteLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnterWriteLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.TryEnterWriteLock
bool System::Threading::ReaderWriterLockSlim::TryEnterWriteLock(int millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::TryEnterWriteLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryEnterWriteLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsTimeout)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, millisecondsTimeout);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.TryEnterWriteLock
bool System::Threading::ReaderWriterLockSlim::TryEnterWriteLock(System::Threading::ReaderWriterLockSlim::TimeoutTracker timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::TryEnterWriteLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryEnterWriteLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, timeout);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.TryEnterWriteLockCore
bool System::Threading::ReaderWriterLockSlim::TryEnterWriteLockCore(System::Threading::ReaderWriterLockSlim::TimeoutTracker timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::TryEnterWriteLockCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryEnterWriteLockCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, timeout);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.EnterUpgradeableReadLock
void System::Threading::ReaderWriterLockSlim::EnterUpgradeableReadLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::EnterUpgradeableReadLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnterUpgradeableReadLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock
bool System::Threading::ReaderWriterLockSlim::TryEnterUpgradeableReadLock(int millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::TryEnterUpgradeableReadLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryEnterUpgradeableReadLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsTimeout)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, millisecondsTimeout);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLock
bool System::Threading::ReaderWriterLockSlim::TryEnterUpgradeableReadLock(System::Threading::ReaderWriterLockSlim::TimeoutTracker timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::TryEnterUpgradeableReadLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryEnterUpgradeableReadLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, timeout);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.TryEnterUpgradeableReadLockCore
bool System::Threading::ReaderWriterLockSlim::TryEnterUpgradeableReadLockCore(System::Threading::ReaderWriterLockSlim::TimeoutTracker timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::TryEnterUpgradeableReadLockCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryEnterUpgradeableReadLockCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeout)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, timeout);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ExitReadLock
void System::Threading::ReaderWriterLockSlim::ExitReadLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::ExitReadLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExitReadLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ExitWriteLock
void System::Threading::ReaderWriterLockSlim::ExitWriteLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::ExitWriteLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExitWriteLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ExitUpgradeableReadLock
void System::Threading::ReaderWriterLockSlim::ExitUpgradeableReadLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::ExitUpgradeableReadLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExitUpgradeableReadLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.LazyCreateEvent
void System::Threading::ReaderWriterLockSlim::LazyCreateEvent(ByRef<System::Threading::EventWaitHandle*> waitEvent, bool makeAutoResetEvent) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::LazyCreateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LazyCreateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(waitEvent), ::il2cpp_utils::ExtractType(makeAutoResetEvent)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(waitEvent), makeAutoResetEvent);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.WaitOnEvent
bool System::Threading::ReaderWriterLockSlim::WaitOnEvent(System::Threading::EventWaitHandle* waitEvent, ByRef<uint> numWaiters, System::Threading::ReaderWriterLockSlim::TimeoutTracker timeout, bool isWriteWaiter) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::WaitOnEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WaitOnEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(waitEvent), ::il2cpp_utils::ExtractType(numWaiters), ::il2cpp_utils::ExtractType(timeout), ::il2cpp_utils::ExtractType(isWriteWaiter)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, waitEvent, byref(numWaiters), timeout, isWriteWaiter);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ExitAndWakeUpAppropriateWaiters
void System::Threading::ReaderWriterLockSlim::ExitAndWakeUpAppropriateWaiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::ExitAndWakeUpAppropriateWaiters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExitAndWakeUpAppropriateWaiters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ExitAndWakeUpAppropriateWaitersPreferringWriters
void System::Threading::ReaderWriterLockSlim::ExitAndWakeUpAppropriateWaitersPreferringWriters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::ExitAndWakeUpAppropriateWaitersPreferringWriters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExitAndWakeUpAppropriateWaitersPreferringWriters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ExitAndWakeUpAppropriateReadWaiters
void System::Threading::ReaderWriterLockSlim::ExitAndWakeUpAppropriateReadWaiters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::ExitAndWakeUpAppropriateReadWaiters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExitAndWakeUpAppropriateReadWaiters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.IsWriterAcquired
bool System::Threading::ReaderWriterLockSlim::IsWriterAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::IsWriterAcquired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsWriterAcquired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.SetWriterAcquired
void System::Threading::ReaderWriterLockSlim::SetWriterAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::SetWriterAcquired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetWriterAcquired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ClearWriterAcquired
void System::Threading::ReaderWriterLockSlim::ClearWriterAcquired() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::ClearWriterAcquired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearWriterAcquired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.SetWritersWaiting
void System::Threading::ReaderWriterLockSlim::SetWritersWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::SetWritersWaiting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetWritersWaiting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ClearWritersWaiting
void System::Threading::ReaderWriterLockSlim::ClearWritersWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::ClearWritersWaiting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearWritersWaiting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.SetUpgraderWaiting
void System::Threading::ReaderWriterLockSlim::SetUpgraderWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::SetUpgraderWaiting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUpgraderWaiting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ClearUpgraderWaiting
void System::Threading::ReaderWriterLockSlim::ClearUpgraderWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::ClearUpgraderWaiting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearUpgraderWaiting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.GetNumReaders
uint System::Threading::ReaderWriterLockSlim::GetNumReaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::GetNumReaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNumReaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.EnterMyLock
void System::Threading::ReaderWriterLockSlim::EnterMyLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::EnterMyLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnterMyLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.EnterMyLockSpin
void System::Threading::ReaderWriterLockSlim::EnterMyLockSpin() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::EnterMyLockSpin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnterMyLockSpin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.ExitMyLock
void System::Threading::ReaderWriterLockSlim::ExitMyLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::ExitMyLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExitMyLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.SpinWait
void System::Threading::ReaderWriterLockSlim::SpinWait(int SpinCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::SpinWait");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Threading", "ReaderWriterLockSlim", "SpinWait", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(SpinCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, SpinCount);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.Dispose
void System::Threading::ReaderWriterLockSlim::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim.Dispose
void System::Threading::ReaderWriterLockSlim::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.ReaderWriterLockSlim/System.Threading.TimeoutTracker
#include "System/Threading/ReaderWriterLockSlim_TimeoutTracker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_total
int& System::Threading::ReaderWriterLockSlim::TimeoutTracker::dyn_m_total() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::TimeoutTracker::dyn_m_total");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_total"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_start
int& System::Threading::ReaderWriterLockSlim::TimeoutTracker::dyn_m_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::TimeoutTracker::dyn_m_start");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_start"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim/System.Threading.TimeoutTracker.get_RemainingMilliseconds
int System::Threading::ReaderWriterLockSlim::TimeoutTracker::get_RemainingMilliseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::TimeoutTracker::get_RemainingMilliseconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_RemainingMilliseconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim/System.Threading.TimeoutTracker.get_IsExpired
bool System::Threading::ReaderWriterLockSlim::TimeoutTracker::get_IsExpired() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::TimeoutTracker::get_IsExpired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsExpired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Threading.ReaderWriterLockSlim/System.Threading.TimeoutTracker..ctor
System::Threading::ReaderWriterLockSlim::TimeoutTracker::TimeoutTracker(int millisecondsTimeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Threading::ReaderWriterLockSlim::TimeoutTracker::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(millisecondsTimeout)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, millisecondsTimeout);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Threading.Tasks.TaskExtensions
#include "System/Threading/Tasks/TaskExtensions.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.AesManaged
#include "System/Security/Cryptography/AesManaged.hpp"
// Including type: System.Security.Cryptography.RijndaelManaged
#include "System/Security/Cryptography/RijndaelManaged.hpp"
// Including type: System.Security.Cryptography.ICryptoTransform
#include "System/Security/Cryptography/ICryptoTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Security.Cryptography.RijndaelManaged m_rijndael
System::Security::Cryptography::RijndaelManaged*& System::Security::Cryptography::AesManaged::dyn_m_rijndael() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::dyn_m_rijndael");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_rijndael"))->offset;
  return *reinterpret_cast<System::Security::Cryptography::RijndaelManaged**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.get_FeedbackSize
int System::Security::Cryptography::AesManaged::get_FeedbackSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::get_FeedbackSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FeedbackSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.get_IV
::ArrayW<uint8_t> System::Security::Cryptography::AesManaged::get_IV() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::get_IV");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.set_IV
void System::Security::Cryptography::AesManaged::set_IV(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::set_IV");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.get_Key
::ArrayW<uint8_t> System::Security::Cryptography::AesManaged::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::get_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.set_Key
void System::Security::Cryptography::AesManaged::set_Key(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::set_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.get_KeySize
int System::Security::Cryptography::AesManaged::get_KeySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::get_KeySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.set_KeySize
void System::Security::Cryptography::AesManaged::set_KeySize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::set_KeySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_KeySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.get_Mode
System::Security::Cryptography::CipherMode System::Security::Cryptography::AesManaged::get_Mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::get_Mode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::CipherMode, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.set_Mode
void System::Security::Cryptography::AesManaged::set_Mode(System::Security::Cryptography::CipherMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::set_Mode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.get_Padding
System::Security::Cryptography::PaddingMode System::Security::Cryptography::AesManaged::get_Padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::get_Padding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::PaddingMode, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.set_Padding
void System::Security::Cryptography::AesManaged::set_Padding(System::Security::Cryptography::PaddingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::set_Padding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.CreateDecryptor
System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::AesManaged::CreateDecryptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::CreateDecryptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDecryptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.CreateDecryptor
System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::AesManaged::CreateDecryptor(::ArrayW<uint8_t> key, ::ArrayW<uint8_t> iv) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::CreateDecryptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDecryptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(iv)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, key, iv);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.CreateEncryptor
System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::AesManaged::CreateEncryptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::CreateEncryptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateEncryptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.CreateEncryptor
System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::AesManaged::CreateEncryptor(::ArrayW<uint8_t> key, ::ArrayW<uint8_t> iv) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::CreateEncryptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateEncryptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(iv)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, key, iv);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.Dispose
void System::Security::Cryptography::AesManaged::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.GenerateIV
void System::Security::Cryptography::AesManaged::GenerateIV() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::GenerateIV");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateIV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesManaged.GenerateKey
void System::Security::Cryptography::AesManaged::GenerateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesManaged::GenerateKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.AesCryptoServiceProvider
#include "System/Security/Cryptography/AesCryptoServiceProvider.hpp"
// Including type: System.Security.Cryptography.CipherMode
#include "System/Security/Cryptography/CipherMode.hpp"
// Including type: System.Security.Cryptography.PaddingMode
#include "System/Security/Cryptography/PaddingMode.hpp"
// Including type: System.Security.Cryptography.ICryptoTransform
#include "System/Security/Cryptography/ICryptoTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.get_IV
::ArrayW<uint8_t> System::Security::Cryptography::AesCryptoServiceProvider::get_IV() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::get_IV");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.set_IV
void System::Security::Cryptography::AesCryptoServiceProvider::set_IV(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::set_IV");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.get_Key
::ArrayW<uint8_t> System::Security::Cryptography::AesCryptoServiceProvider::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::get_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.set_Key
void System::Security::Cryptography::AesCryptoServiceProvider::set_Key(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::set_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.get_KeySize
int System::Security::Cryptography::AesCryptoServiceProvider::get_KeySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::get_KeySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.set_KeySize
void System::Security::Cryptography::AesCryptoServiceProvider::set_KeySize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::set_KeySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_KeySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.get_FeedbackSize
int System::Security::Cryptography::AesCryptoServiceProvider::get_FeedbackSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::get_FeedbackSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FeedbackSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.get_Mode
System::Security::Cryptography::CipherMode System::Security::Cryptography::AesCryptoServiceProvider::get_Mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::get_Mode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::CipherMode, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.set_Mode
void System::Security::Cryptography::AesCryptoServiceProvider::set_Mode(System::Security::Cryptography::CipherMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::set_Mode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.get_Padding
System::Security::Cryptography::PaddingMode System::Security::Cryptography::AesCryptoServiceProvider::get_Padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::get_Padding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::PaddingMode, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.set_Padding
void System::Security::Cryptography::AesCryptoServiceProvider::set_Padding(System::Security::Cryptography::PaddingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::set_Padding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.GenerateIV
void System::Security::Cryptography::AesCryptoServiceProvider::GenerateIV() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::GenerateIV");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateIV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.GenerateKey
void System::Security::Cryptography::AesCryptoServiceProvider::GenerateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::GenerateKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor
System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::AesCryptoServiceProvider::CreateDecryptor(::ArrayW<uint8_t> key, ::ArrayW<uint8_t> iv) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::CreateDecryptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDecryptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(iv)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, key, iv);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor
System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::AesCryptoServiceProvider::CreateEncryptor(::ArrayW<uint8_t> key, ::ArrayW<uint8_t> iv) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::CreateEncryptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateEncryptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(iv)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, key, iv);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.CreateDecryptor
System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::AesCryptoServiceProvider::CreateDecryptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::CreateDecryptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDecryptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.CreateEncryptor
System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::AesCryptoServiceProvider::CreateEncryptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::CreateEncryptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateEncryptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesCryptoServiceProvider.Dispose
void System::Security::Cryptography::AesCryptoServiceProvider::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesCryptoServiceProvider::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.AesTransform
#include "System/Security/Cryptography/AesTransform.hpp"
// Including type: System.Security.Cryptography.Aes
#include "System/Security/Cryptography/Aes.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] Rcon
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_Rcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_get_Rcon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "Rcon"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] Rcon
void System::Security::Cryptography::AesTransform::_set_Rcon(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_set_Rcon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "Rcon", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] SBox
::ArrayW<uint8_t> System::Security::Cryptography::AesTransform::_get_SBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_get_SBox");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Security.Cryptography", "AesTransform", "SBox"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] SBox
void System::Security::Cryptography::AesTransform::_set_SBox(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_set_SBox");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "SBox", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] iSBox
::ArrayW<uint8_t> System::Security::Cryptography::AesTransform::_get_iSBox() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_get_iSBox");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Security.Cryptography", "AesTransform", "iSBox"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] iSBox
void System::Security::Cryptography::AesTransform::_set_iSBox(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_set_iSBox");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "iSBox", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] T0
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_T0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_get_T0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "T0"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] T0
void System::Security::Cryptography::AesTransform::_set_T0(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_set_T0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "T0", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] T1
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_T1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_get_T1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "T1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] T1
void System::Security::Cryptography::AesTransform::_set_T1(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_set_T1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "T1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] T2
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_T2() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_get_T2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "T2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] T2
void System::Security::Cryptography::AesTransform::_set_T2(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_set_T2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "T2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] T3
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_T3() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_get_T3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "T3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] T3
void System::Security::Cryptography::AesTransform::_set_T3(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_set_T3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "T3", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] iT0
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_iT0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_get_iT0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "iT0"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] iT0
void System::Security::Cryptography::AesTransform::_set_iT0(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_set_iT0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "iT0", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] iT1
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_iT1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_get_iT1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "iT1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] iT1
void System::Security::Cryptography::AesTransform::_set_iT1(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_set_iT1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "iT1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] iT2
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_iT2() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_get_iT2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "iT2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] iT2
void System::Security::Cryptography::AesTransform::_set_iT2(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_set_iT2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "iT2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] iT3
::ArrayW<uint> System::Security::Cryptography::AesTransform::_get_iT3() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_get_iT3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint>>("System.Security.Cryptography", "AesTransform", "iT3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] iT3
void System::Security::Cryptography::AesTransform::_set_iT3(::ArrayW<uint> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::_set_iT3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "AesTransform", "iT3", value));
}
// Autogenerated instance field getter
// Get instance field: private System.UInt32[] expandedKey
::ArrayW<uint>& System::Security::Cryptography::AesTransform::dyn_expandedKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::dyn_expandedKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "expandedKey"))->offset;
  return *reinterpret_cast<::ArrayW<uint>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 Nk
int& System::Security::Cryptography::AesTransform::dyn_Nk() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::dyn_Nk");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Nk"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 Nr
int& System::Security::Cryptography::AesTransform::dyn_Nr() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::dyn_Nr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Nr"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Security.Cryptography.AesTransform..cctor
void System::Security::Cryptography::AesTransform::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "AesTransform", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.AesTransform.SubByte
uint System::Security::Cryptography::AesTransform::SubByte(uint a) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::SubByte");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a)})));
  return ::il2cpp_utils::RunMethodRethrow<uint, false>(this, ___internal__method, a);
}
// Autogenerated method: System.Security.Cryptography.AesTransform.Encrypt128
void System::Security::Cryptography::AesTransform::Encrypt128(::ArrayW<uint8_t> indata, ::ArrayW<uint8_t> outdata, ::ArrayW<uint> ekey) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::Encrypt128");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encrypt128", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indata), ::il2cpp_utils::ExtractType(outdata), ::il2cpp_utils::ExtractType(ekey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, indata, outdata, ekey);
}
// Autogenerated method: System.Security.Cryptography.AesTransform.Decrypt128
void System::Security::Cryptography::AesTransform::Decrypt128(::ArrayW<uint8_t> indata, ::ArrayW<uint8_t> outdata, ::ArrayW<uint> ekey) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::Decrypt128");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decrypt128", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indata), ::il2cpp_utils::ExtractType(outdata), ::il2cpp_utils::ExtractType(ekey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, indata, outdata, ekey);
}
// Autogenerated method: System.Security.Cryptography.AesTransform.ECB
void System::Security::Cryptography::AesTransform::ECB(::ArrayW<uint8_t> input, ::ArrayW<uint8_t> output) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::AesTransform::ECB");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ECB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, input, output);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.RSACertificateExtensions
#include "System/Security/Cryptography/X509Certificates/RSACertificateExtensions.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.X509Certificates.RSACertificateExtensions.GetRSAPublicKey
System::Security::Cryptography::RSA* System::Security::Cryptography::X509Certificates::RSACertificateExtensions::GetRSAPublicKey(System::Security::Cryptography::X509Certificates::X509Certificate2* certificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::RSACertificateExtensions::GetRSAPublicKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "RSACertificateExtensions", "GetRSAPublicKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(certificate)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Security::Cryptography::RSA*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, certificate);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Error
#include "System/Linq/Error.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Error.ArgumentNull
System::Exception* System::Linq::Error::ArgumentNull(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Error::ArgumentNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Error", "ArgumentNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Linq.Error.ArgumentOutOfRange
System::Exception* System::Linq::Error::ArgumentOutOfRange(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Error::ArgumentOutOfRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Error", "ArgumentOutOfRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Linq.Error.MoreThanOneElement
System::Exception* System::Linq::Error::MoreThanOneElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Error::MoreThanOneElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Error", "MoreThanOneElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Error.MoreThanOneMatch
System::Exception* System::Linq::Error::MoreThanOneMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Error::MoreThanOneMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Error", "MoreThanOneMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Error.NoElements
System::Exception* System::Linq::Error::NoElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Error::NoElements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Error", "NoElements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Error.NoMatch
System::Exception* System::Linq::Error::NoMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Error::NoMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Error", "NoMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Error.NotSupported
System::Exception* System::Linq::Error::NotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Error::NotSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Error", "NotSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Enumerable
#include "System/Linq/Enumerable.hpp"
// Including type: System.Linq.Enumerable/System.Linq.Iterator`1
#include "System/Linq/Enumerable_Iterator_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.WhereEnumerableIterator`1
#include "System/Linq/Enumerable_WhereEnumerableIterator_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.WhereArrayIterator`1
#include "System/Linq/Enumerable_WhereArrayIterator_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.WhereListIterator`1
#include "System/Linq/Enumerable_WhereListIterator_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.WhereSelectEnumerableIterator`2
#include "System/Linq/Enumerable_WhereSelectEnumerableIterator_2.hpp"
// Including type: System.Linq.Enumerable/System.Linq.WhereSelectArrayIterator`2
#include "System/Linq/Enumerable_WhereSelectArrayIterator_2.hpp"
// Including type: System.Linq.Enumerable/System.Linq.WhereSelectListIterator`2
#include "System/Linq/Enumerable_WhereSelectListIterator_2.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<>c__DisplayClass6_0`1
#include "System/Linq/Enumerable_--c__DisplayClass6_0_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<>c__DisplayClass7_0`3
#include "System/Linq/Enumerable_--c__DisplayClass7_0_3.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<SelectManyIterator>d__17`2
#include "System/Linq/Enumerable_-SelectManyIterator-d__17_2.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<TakeIterator>d__25`1
#include "System/Linq/Enumerable_-TakeIterator-d__25_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<SkipIterator>d__31`1
#include "System/Linq/Enumerable_-SkipIterator-d__31_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<ConcatIterator>d__59`1
#include "System/Linq/Enumerable_-ConcatIterator-d__59_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<AppendIterator>d__61`1
#include "System/Linq/Enumerable_-AppendIterator-d__61_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<DistinctIterator>d__68`1
#include "System/Linq/Enumerable_-DistinctIterator-d__68_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<UnionIterator>d__71`1
#include "System/Linq/Enumerable_-UnionIterator-d__71_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<ExceptIterator>d__77`1
#include "System/Linq/Enumerable_-ExceptIterator-d__77_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<ReverseIterator>d__79`1
#include "System/Linq/Enumerable_-ReverseIterator-d__79_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<DefaultIfEmptyIterator>d__95`1
#include "System/Linq/Enumerable_-DefaultIfEmptyIterator-d__95_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<OfTypeIterator>d__97`1
#include "System/Linq/Enumerable_-OfTypeIterator-d__97_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<CastIterator>d__99`1
#include "System/Linq/Enumerable_-CastIterator-d__99_1.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115
#include "System/Linq/Enumerable_-RangeIterator-d__115.hpp"
// Including type: System.Linq.Enumerable/System.Linq.<RepeatIterator>d__117`1
#include "System/Linq/Enumerable_-RepeatIterator-d__117_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Linq.IOrderedEnumerable`1
#include "System/Linq/IOrderedEnumerable_1.hpp"
// Including type: System.Linq.IGrouping`2
#include "System/Linq/IGrouping_2.hpp"
// Including type: System.Collections.Generic.IEqualityComparer`1
#include "System/Collections/Generic/IEqualityComparer_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Enumerable.Range
System::Collections::Generic::IEnumerable_1<int>* System::Linq::Enumerable::Range(int start, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::Range");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", "Range", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::IEnumerable_1<int>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, count);
}
// Autogenerated method: System.Linq.Enumerable.RangeIterator
System::Collections::Generic::IEnumerable_1<int>* System::Linq::Enumerable::RangeIterator(int start, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::RangeIterator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", "RangeIterator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::IEnumerable_1<int>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, start, count);
}
// Autogenerated method: System.Linq.Enumerable.Sum
int System::Linq::Enumerable::Sum(System::Collections::Generic::IEnumerable_1<int>* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::Sum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", "Sum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: System.Linq.Enumerable.Min
float System::Linq::Enumerable::Min(System::Collections::Generic::IEnumerable_1<float>* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::Min");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", "Min", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: System.Linq.Enumerable.Max
int System::Linq::Enumerable::Max(System::Collections::Generic::IEnumerable_1<int>* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated method: System.Linq.Enumerable.Max
float System::Linq::Enumerable::Max(System::Collections::Generic::IEnumerable_1<float>* source) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::Max");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq", "Enumerable", "Max", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, source);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115
#include "System/Linq/Enumerable_-RangeIterator-d__115.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>2__current
int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$l__initialThreadId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>l__initialThreadId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 start
int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::$RangeIterator$d__115::dyn_start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "start"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>3__start
int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$3__start() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$3__start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>3__start"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__1
int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_$i$5__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::$RangeIterator$d__115::dyn_$i$5__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 count
int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::$RangeIterator$d__115::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>3__count
int& System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$3__count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::$RangeIterator$d__115::dyn_$$3__count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>3__count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115.System.Collections.Generic.IEnumerator<System.Int32>.get_Current
int System::Linq::Enumerable::$RangeIterator$d__115::System_Collections_Generic_IEnumerator$System_Int32$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::$RangeIterator$d__115::System.Collections.Generic.IEnumerator<System.Int32>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Int32>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Linq::Enumerable::$RangeIterator$d__115::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::$RangeIterator$d__115::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115.System.IDisposable.Dispose
void System::Linq::Enumerable::$RangeIterator$d__115::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::$RangeIterator$d__115::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115.MoveNext
bool System::Linq::Enumerable::$RangeIterator$d__115::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::$RangeIterator$d__115::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115.System.Collections.IEnumerator.Reset
void System::Linq::Enumerable::$RangeIterator$d__115::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::$RangeIterator$d__115::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115.System.Collections.Generic.IEnumerable<System.Int32>.GetEnumerator
System::Collections::Generic::IEnumerator_1<int>* System::Linq::Enumerable::$RangeIterator$d__115::System_Collections_Generic_IEnumerable$System_Int32$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::$RangeIterator$d__115::System.Collections.Generic.IEnumerable<System.Int32>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<System.Int32>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::IEnumerator_1<int>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Enumerable/System.Linq.<RangeIterator>d__115.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* System::Linq::Enumerable::$RangeIterator$d__115::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Enumerable::$RangeIterator$d__115::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.CachedReflectionInfo
#include "System/Linq/Expressions/CachedReflectionInfo.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Reflection.MethodInfo s_CallSiteOps_SetNotMatched
System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_SetNotMatched() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_SetNotMatched");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodInfo*>("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_SetNotMatched"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.MethodInfo s_CallSiteOps_SetNotMatched
void System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_SetNotMatched(System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_SetNotMatched");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_SetNotMatched", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.MethodInfo s_CallSiteOps_CreateMatchmaker
System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_CreateMatchmaker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_CreateMatchmaker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodInfo*>("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_CreateMatchmaker"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.MethodInfo s_CallSiteOps_CreateMatchmaker
void System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_CreateMatchmaker(System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_CreateMatchmaker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_CreateMatchmaker", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.MethodInfo s_CallSiteOps_GetMatch
System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_GetMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_GetMatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodInfo*>("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_GetMatch"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.MethodInfo s_CallSiteOps_GetMatch
void System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_GetMatch(System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_GetMatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_GetMatch", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.MethodInfo s_CallSiteOps_ClearMatch
System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_ClearMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_ClearMatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodInfo*>("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_ClearMatch"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.MethodInfo s_CallSiteOps_ClearMatch
void System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_ClearMatch(System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_ClearMatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_ClearMatch", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.MethodInfo s_CallSiteOps_UpdateRules
System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_UpdateRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_UpdateRules");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodInfo*>("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_UpdateRules"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.MethodInfo s_CallSiteOps_UpdateRules
void System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_UpdateRules(System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_UpdateRules");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_UpdateRules", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.MethodInfo s_CallSiteOps_GetRules
System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_GetRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_GetRules");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodInfo*>("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_GetRules"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.MethodInfo s_CallSiteOps_GetRules
void System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_GetRules(System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_GetRules");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_GetRules", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.MethodInfo s_CallSiteOps_GetRuleCache
System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_GetRuleCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_GetRuleCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodInfo*>("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_GetRuleCache"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.MethodInfo s_CallSiteOps_GetRuleCache
void System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_GetRuleCache(System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_GetRuleCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_GetRuleCache", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.MethodInfo s_CallSiteOps_GetCachedRules
System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_GetCachedRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_GetCachedRules");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodInfo*>("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_GetCachedRules"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.MethodInfo s_CallSiteOps_GetCachedRules
void System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_GetCachedRules(System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_GetCachedRules");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_GetCachedRules", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.MethodInfo s_CallSiteOps_AddRule
System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_AddRule() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_AddRule");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodInfo*>("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_AddRule"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.MethodInfo s_CallSiteOps_AddRule
void System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_AddRule(System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_AddRule");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_AddRule", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.MethodInfo s_CallSiteOps_MoveRule
System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_MoveRule() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_MoveRule");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodInfo*>("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_MoveRule"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.MethodInfo s_CallSiteOps_MoveRule
void System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_MoveRule(System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_MoveRule");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_MoveRule", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.MethodInfo s_CallSiteOps_Bind
System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_Bind() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::_get_s_CallSiteOps_Bind");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodInfo*>("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_Bind"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.MethodInfo s_CallSiteOps_Bind
void System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_Bind(System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::_set_s_CallSiteOps_Bind");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "CachedReflectionInfo", "s_CallSiteOps_Bind", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.MethodInfo s_String_op_Equality_String_String
System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::_get_s_String_op_Equality_String_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::_get_s_String_op_Equality_String_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodInfo*>("System.Linq.Expressions", "CachedReflectionInfo", "s_String_op_Equality_String_String"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.MethodInfo s_String_op_Equality_String_String
void System::Linq::Expressions::CachedReflectionInfo::_set_s_String_op_Equality_String_String(System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::_set_s_String_op_Equality_String_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "CachedReflectionInfo", "s_String_op_Equality_String_String", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.MethodInfo s_Math_Pow_Double_Double
System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::_get_s_Math_Pow_Double_Double() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::_get_s_Math_Pow_Double_Double");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodInfo*>("System.Linq.Expressions", "CachedReflectionInfo", "s_Math_Pow_Double_Double"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.MethodInfo s_Math_Pow_Double_Double
void System::Linq::Expressions::CachedReflectionInfo::_set_s_Math_Pow_Double_Double(System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::_set_s_Math_Pow_Double_Double");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "CachedReflectionInfo", "s_Math_Pow_Double_Double", value));
}
// Autogenerated method: System.Linq.Expressions.CachedReflectionInfo.get_CallSiteOps_SetNotMatched
System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_SetNotMatched() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_SetNotMatched");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "CachedReflectionInfo", "get_CallSiteOps_SetNotMatched", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.CachedReflectionInfo.get_CallSiteOps_CreateMatchmaker
System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_CreateMatchmaker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_CreateMatchmaker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "CachedReflectionInfo", "get_CallSiteOps_CreateMatchmaker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.CachedReflectionInfo.get_CallSiteOps_GetMatch
System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_GetMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_GetMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "CachedReflectionInfo", "get_CallSiteOps_GetMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.CachedReflectionInfo.get_CallSiteOps_ClearMatch
System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_ClearMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_ClearMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "CachedReflectionInfo", "get_CallSiteOps_ClearMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.CachedReflectionInfo.get_CallSiteOps_UpdateRules
System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_UpdateRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_UpdateRules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "CachedReflectionInfo", "get_CallSiteOps_UpdateRules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.CachedReflectionInfo.get_CallSiteOps_GetRules
System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_GetRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_GetRules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "CachedReflectionInfo", "get_CallSiteOps_GetRules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.CachedReflectionInfo.get_CallSiteOps_GetRuleCache
System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_GetRuleCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_GetRuleCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "CachedReflectionInfo", "get_CallSiteOps_GetRuleCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.CachedReflectionInfo.get_CallSiteOps_GetCachedRules
System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_GetCachedRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_GetCachedRules");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "CachedReflectionInfo", "get_CallSiteOps_GetCachedRules", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.CachedReflectionInfo.get_CallSiteOps_AddRule
System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_AddRule() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_AddRule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "CachedReflectionInfo", "get_CallSiteOps_AddRule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.CachedReflectionInfo.get_CallSiteOps_MoveRule
System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_MoveRule() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_MoveRule");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "CachedReflectionInfo", "get_CallSiteOps_MoveRule", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.CachedReflectionInfo.get_CallSiteOps_Bind
System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_Bind() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::get_CallSiteOps_Bind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "CachedReflectionInfo", "get_CallSiteOps_Bind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.CachedReflectionInfo.get_String_op_Equality_String_String
System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::get_String_op_Equality_String_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::get_String_op_Equality_String_String");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "CachedReflectionInfo", "get_String_op_Equality_String_String", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.CachedReflectionInfo.get_Math_Pow_Double_Double
System::Reflection::MethodInfo* System::Linq::Expressions::CachedReflectionInfo::get_Math_Pow_Double_Double() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CachedReflectionInfo::get_Math_Pow_Double_Double");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "CachedReflectionInfo", "get_Math_Pow_Double_Double", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.BinaryExpression
#include "System/Linq/Expressions/BinaryExpression.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Linq.Expressions.LambdaExpression
#include "System/Linq/Expressions/LambdaExpression.hpp"
// Including type: System.Linq.Expressions.ExpressionType
#include "System/Linq/Expressions/ExpressionType.hpp"
// Including type: System.Linq.Expressions.ExpressionVisitor
#include "System/Linq/Expressions/ExpressionVisitor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression <Right>k__BackingField
System::Linq::Expressions::Expression*& System::Linq::Expressions::BinaryExpression::dyn_$Right$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BinaryExpression::dyn_$Right$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Right>k__BackingField"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression <Left>k__BackingField
System::Linq::Expressions::Expression*& System::Linq::Expressions::BinaryExpression::dyn_$Left$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BinaryExpression::dyn_$Left$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Left>k__BackingField"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.get_Right
System::Linq::Expressions::Expression* System::Linq::Expressions::BinaryExpression::get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BinaryExpression::get_Right");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Right", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.get_Left
System::Linq::Expressions::Expression* System::Linq::Expressions::BinaryExpression::get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BinaryExpression::get_Left");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Left", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.get_Method
System::Reflection::MethodInfo* System::Linq::Expressions::BinaryExpression::get_Method() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BinaryExpression::get_Method");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Reflection::MethodInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.get_Conversion
System::Linq::Expressions::LambdaExpression* System::Linq::Expressions::BinaryExpression::get_Conversion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BinaryExpression::get_Conversion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Conversion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::LambdaExpression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.get_IsLifted
bool System::Linq::Expressions::BinaryExpression::get_IsLifted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BinaryExpression::get_IsLifted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsLifted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.get_IsLiftedToNull
bool System::Linq::Expressions::BinaryExpression::get_IsLiftedToNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BinaryExpression::get_IsLiftedToNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsLiftedToNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.get_IsLiftedLogical
bool System::Linq::Expressions::BinaryExpression::get_IsLiftedLogical() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BinaryExpression::get_IsLiftedLogical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsLiftedLogical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.get_IsReferenceComparison
bool System::Linq::Expressions::BinaryExpression::get_IsReferenceComparison() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BinaryExpression::get_IsReferenceComparison");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReferenceComparison", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.IsOpAssignment
bool System::Linq::Expressions::BinaryExpression::IsOpAssignment(System::Linq::Expressions::ExpressionType op) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BinaryExpression::IsOpAssignment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "BinaryExpression", "IsOpAssignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, op);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.GetMethod
System::Reflection::MethodInfo* System::Linq::Expressions::BinaryExpression::GetMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BinaryExpression::GetMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Reflection::MethodInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.Update
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::BinaryExpression::Update(System::Linq::Expressions::Expression* left, System::Linq::Expressions::LambdaExpression* conversion, System::Linq::Expressions::Expression* right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BinaryExpression::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(conversion), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(this, ___internal__method, left, conversion, right);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.GetBinaryOpFromAssignmentOp
System::Linq::Expressions::ExpressionType System::Linq::Expressions::BinaryExpression::GetBinaryOpFromAssignmentOp(System::Linq::Expressions::ExpressionType op) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BinaryExpression::GetBinaryOpFromAssignmentOp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "BinaryExpression", "GetBinaryOpFromAssignmentOp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ExpressionType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, op);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.ReduceVariable
System::Linq::Expressions::Expression* System::Linq::Expressions::BinaryExpression::ReduceVariable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BinaryExpression::ReduceVariable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReduceVariable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.ReduceMember
System::Linq::Expressions::Expression* System::Linq::Expressions::BinaryExpression::ReduceMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BinaryExpression::ReduceMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReduceMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.ReduceIndex
System::Linq::Expressions::Expression* System::Linq::Expressions::BinaryExpression::ReduceIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BinaryExpression::ReduceIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReduceIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.GetConversion
System::Linq::Expressions::LambdaExpression* System::Linq::Expressions::BinaryExpression::GetConversion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BinaryExpression::GetConversion");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConversion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::LambdaExpression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.ReduceUserdefinedLifted
System::Linq::Expressions::Expression* System::Linq::Expressions::BinaryExpression::ReduceUserdefinedLifted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BinaryExpression::ReduceUserdefinedLifted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReduceUserdefinedLifted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.get_CanReduce
bool System::Linq::Expressions::BinaryExpression::get_CanReduce() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BinaryExpression::get_CanReduce");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanReduce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.Reduce
System::Linq::Expressions::Expression* System::Linq::Expressions::BinaryExpression::Reduce() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BinaryExpression::Reduce");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reduce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BinaryExpression.Accept
System::Linq::Expressions::Expression* System::Linq::Expressions::BinaryExpression::Accept(System::Linq::Expressions::ExpressionVisitor* visitor) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BinaryExpression::Accept");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visitor)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, visitor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.LogicalBinaryExpression
#include "System/Linq/Expressions/LogicalBinaryExpression.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.ExpressionType <NodeType>k__BackingField
System::Linq::Expressions::ExpressionType& System::Linq::Expressions::LogicalBinaryExpression::dyn_$NodeType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LogicalBinaryExpression::dyn_$NodeType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NodeType>k__BackingField"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::ExpressionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.LogicalBinaryExpression.get_Type
System::Type* System::Linq::Expressions::LogicalBinaryExpression::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LogicalBinaryExpression::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.LogicalBinaryExpression.get_NodeType
System::Linq::Expressions::ExpressionType System::Linq::Expressions::LogicalBinaryExpression::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LogicalBinaryExpression::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ExpressionType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.AssignBinaryExpression
#include "System/Linq/Expressions/AssignBinaryExpression.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Linq.Expressions.ExpressionType
#include "System/Linq/Expressions/ExpressionType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.AssignBinaryExpression.get_Type
System::Type* System::Linq::Expressions::AssignBinaryExpression::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::AssignBinaryExpression::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.AssignBinaryExpression.get_NodeType
System::Linq::Expressions::ExpressionType System::Linq::Expressions::AssignBinaryExpression::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::AssignBinaryExpression::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ExpressionType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.CoalesceConversionBinaryExpression
#include "System/Linq/Expressions/CoalesceConversionBinaryExpression.hpp"
// Including type: System.Linq.Expressions.LambdaExpression
#include "System/Linq/Expressions/LambdaExpression.hpp"
// Including type: System.Linq.Expressions.ExpressionType
#include "System/Linq/Expressions/ExpressionType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.LambdaExpression _conversion
System::Linq::Expressions::LambdaExpression*& System::Linq::Expressions::CoalesceConversionBinaryExpression::dyn__conversion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CoalesceConversionBinaryExpression::dyn__conversion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_conversion"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::LambdaExpression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.CoalesceConversionBinaryExpression.get_NodeType
System::Linq::Expressions::ExpressionType System::Linq::Expressions::CoalesceConversionBinaryExpression::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CoalesceConversionBinaryExpression::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ExpressionType, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.CoalesceConversionBinaryExpression.get_Type
System::Type* System::Linq::Expressions::CoalesceConversionBinaryExpression::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CoalesceConversionBinaryExpression::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.CoalesceConversionBinaryExpression.GetConversion
System::Linq::Expressions::LambdaExpression* System::Linq::Expressions::CoalesceConversionBinaryExpression::GetConversion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CoalesceConversionBinaryExpression::GetConversion");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConversion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::LambdaExpression*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.OpAssignMethodConversionBinaryExpression
#include "System/Linq/Expressions/OpAssignMethodConversionBinaryExpression.hpp"
// Including type: System.Linq.Expressions.LambdaExpression
#include "System/Linq/Expressions/LambdaExpression.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.LambdaExpression _conversion
System::Linq::Expressions::LambdaExpression*& System::Linq::Expressions::OpAssignMethodConversionBinaryExpression::dyn__conversion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::OpAssignMethodConversionBinaryExpression::dyn__conversion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_conversion"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::LambdaExpression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.OpAssignMethodConversionBinaryExpression.GetConversion
System::Linq::Expressions::LambdaExpression* System::Linq::Expressions::OpAssignMethodConversionBinaryExpression::GetConversion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::OpAssignMethodConversionBinaryExpression::GetConversion");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConversion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::LambdaExpression*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.SimpleBinaryExpression
#include "System/Linq/Expressions/SimpleBinaryExpression.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.ExpressionType <NodeType>k__BackingField
System::Linq::Expressions::ExpressionType& System::Linq::Expressions::SimpleBinaryExpression::dyn_$NodeType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::SimpleBinaryExpression::dyn_$NodeType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NodeType>k__BackingField"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::ExpressionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Type <Type>k__BackingField
System::Type*& System::Linq::Expressions::SimpleBinaryExpression::dyn_$Type$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::SimpleBinaryExpression::dyn_$Type$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Type>k__BackingField"))->offset;
  return *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.SimpleBinaryExpression.get_NodeType
System::Linq::Expressions::ExpressionType System::Linq::Expressions::SimpleBinaryExpression::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::SimpleBinaryExpression::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ExpressionType, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.SimpleBinaryExpression.get_Type
System::Type* System::Linq::Expressions::SimpleBinaryExpression::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::SimpleBinaryExpression::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.MethodBinaryExpression
#include "System/Linq/Expressions/MethodBinaryExpression.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Reflection.MethodInfo _method
System::Reflection::MethodInfo*& System::Linq::Expressions::MethodBinaryExpression::dyn__method() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodBinaryExpression::dyn__method");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_method"))->offset;
  return *reinterpret_cast<System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.MethodBinaryExpression.GetMethod
System::Reflection::MethodInfo* System::Linq::Expressions::MethodBinaryExpression::GetMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodBinaryExpression::GetMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Reflection::MethodInfo*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.Expression
#include "System/Linq/Expressions/Expression.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.BinaryExpressionProxy
#include "System/Linq/Expressions/Expression_BinaryExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.BlockExpressionProxy
#include "System/Linq/Expressions/Expression_BlockExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.CatchBlockProxy
#include "System/Linq/Expressions/Expression_CatchBlockProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.ConditionalExpressionProxy
#include "System/Linq/Expressions/Expression_ConditionalExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.ConstantExpressionProxy
#include "System/Linq/Expressions/Expression_ConstantExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.DebugInfoExpressionProxy
#include "System/Linq/Expressions/Expression_DebugInfoExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.DefaultExpressionProxy
#include "System/Linq/Expressions/Expression_DefaultExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.GotoExpressionProxy
#include "System/Linq/Expressions/Expression_GotoExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.IndexExpressionProxy
#include "System/Linq/Expressions/Expression_IndexExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.InvocationExpressionProxy
#include "System/Linq/Expressions/Expression_InvocationExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.LabelExpressionProxy
#include "System/Linq/Expressions/Expression_LabelExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.LambdaExpressionProxy
#include "System/Linq/Expressions/Expression_LambdaExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.ListInitExpressionProxy
#include "System/Linq/Expressions/Expression_ListInitExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.LoopExpressionProxy
#include "System/Linq/Expressions/Expression_LoopExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.MemberExpressionProxy
#include "System/Linq/Expressions/Expression_MemberExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.MemberInitExpressionProxy
#include "System/Linq/Expressions/Expression_MemberInitExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.MethodCallExpressionProxy
#include "System/Linq/Expressions/Expression_MethodCallExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.NewArrayExpressionProxy
#include "System/Linq/Expressions/Expression_NewArrayExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.NewExpressionProxy
#include "System/Linq/Expressions/Expression_NewExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.ParameterExpressionProxy
#include "System/Linq/Expressions/Expression_ParameterExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.RuntimeVariablesExpressionProxy
#include "System/Linq/Expressions/Expression_RuntimeVariablesExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.SwitchCaseProxy
#include "System/Linq/Expressions/Expression_SwitchCaseProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.SwitchExpressionProxy
#include "System/Linq/Expressions/Expression_SwitchExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.TryExpressionProxy
#include "System/Linq/Expressions/Expression_TryExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.TypeBinaryExpressionProxy
#include "System/Linq/Expressions/Expression_TypeBinaryExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.UnaryExpressionProxy
#include "System/Linq/Expressions/Expression_UnaryExpressionProxy.hpp"
// Including type: System.Linq.Expressions.Expression/System.Linq.Expressions.ExtensionInfo
#include "System/Linq/Expressions/Expression_ExtensionInfo.hpp"
// Including type: System.Dynamic.Utils.CacheDict`2
#include "System/Dynamic/Utils/CacheDict_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Func`5
#include "System/Func_5.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Linq.Expressions.ParameterExpression
#include "System/Linq/Expressions/ParameterExpression.hpp"
// Including type: System.Linq.Expressions.LambdaExpression
#include "System/Linq/Expressions/LambdaExpression.hpp"
// Including type: System.Runtime.CompilerServices.ConditionalWeakTable`2
#include "System/Runtime/CompilerServices/ConditionalWeakTable_2.hpp"
// Including type: System.Linq.Expressions.ExpressionType
#include "System/Linq/Expressions/ExpressionType.hpp"
// Including type: System.Linq.Expressions.BinaryExpression
#include "System/Linq/Expressions/BinaryExpression.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Linq.Expressions.BlockExpression
#include "System/Linq/Expressions/BlockExpression.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Linq.Expressions.CatchBlock
#include "System/Linq/Expressions/CatchBlock.hpp"
// Including type: System.Linq.Expressions.ConditionalExpression
#include "System/Linq/Expressions/ConditionalExpression.hpp"
// Including type: System.Linq.Expressions.ConstantExpression
#include "System/Linq/Expressions/ConstantExpression.hpp"
// Including type: System.Linq.Expressions.DefaultExpression
#include "System/Linq/Expressions/DefaultExpression.hpp"
// Including type: System.Linq.Expressions.ExpressionVisitor
#include "System/Linq/Expressions/ExpressionVisitor.hpp"
// Including type: System.Linq.Expressions.GotoExpression
#include "System/Linq/Expressions/GotoExpression.hpp"
// Including type: System.Linq.Expressions.LabelTarget
#include "System/Linq/Expressions/LabelTarget.hpp"
// Including type: System.Linq.Expressions.GotoExpressionKind
#include "System/Linq/Expressions/GotoExpressionKind.hpp"
// Including type: System.Linq.Expressions.IndexExpression
#include "System/Linq/Expressions/IndexExpression.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Linq.Expressions.InvocationExpression
#include "System/Linq/Expressions/InvocationExpression.hpp"
// Including type: System.Linq.Expressions.LabelExpression
#include "System/Linq/Expressions/LabelExpression.hpp"
// Including type: System.Linq.Expressions.Expression`1
#include "System/Linq/Expressions/Expression_1.hpp"
// Including type: System.Linq.Expressions.LoopExpression
#include "System/Linq/Expressions/LoopExpression.hpp"
// Including type: System.Linq.Expressions.MemberExpression
#include "System/Linq/Expressions/MemberExpression.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.Linq.Expressions.MethodCallExpression
#include "System/Linq/Expressions/MethodCallExpression.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.Linq.Expressions.NewArrayExpression
#include "System/Linq/Expressions/NewArrayExpression.hpp"
// Including type: System.Linq.Expressions.TryExpression
#include "System/Linq/Expressions/TryExpression.hpp"
// Including type: System.Linq.Expressions.TypeBinaryExpression
#include "System/Linq/Expressions/TypeBinaryExpression.hpp"
// Including type: System.Linq.Expressions.UnaryExpression
#include "System/Linq/Expressions/UnaryExpression.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Dynamic.Utils.CacheDict`2<System.Type,System.Reflection.MethodInfo> s_lambdaDelegateCache
System::Dynamic::Utils::CacheDict_2<System::Type*, System::Reflection::MethodInfo*>* System::Linq::Expressions::Expression::_get_s_lambdaDelegateCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::_get_s_lambdaDelegateCache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Dynamic::Utils::CacheDict_2<System::Type*, System::Reflection::MethodInfo*>*>("System.Linq.Expressions", "Expression", "s_lambdaDelegateCache")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Dynamic.Utils.CacheDict`2<System.Type,System.Reflection.MethodInfo> s_lambdaDelegateCache
void System::Linq::Expressions::Expression::_set_s_lambdaDelegateCache(System::Dynamic::Utils::CacheDict_2<System::Type*, System::Reflection::MethodInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::_set_s_lambdaDelegateCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "Expression", "s_lambdaDelegateCache", value));
}
// Autogenerated static field getter
// Get static field: static private System.Dynamic.Utils.CacheDict`2<System.Type,System.Func`5<System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.ObjectModel.ReadOnlyCollection`1<System.Linq.Expressions.ParameterExpression>,System.Linq.Expressions.LambdaExpression>> s_lambdaFactories
System::Dynamic::Utils::CacheDict_2<System::Type*, System::Func_5<System::Linq::Expressions::Expression*, ::StringW, bool, System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::ParameterExpression*>*, System::Linq::Expressions::LambdaExpression*>*>* System::Linq::Expressions::Expression::_get_s_lambdaFactories() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::_get_s_lambdaFactories");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Dynamic::Utils::CacheDict_2<System::Type*, System::Func_5<System::Linq::Expressions::Expression*, ::StringW, bool, System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::ParameterExpression*>*, System::Linq::Expressions::LambdaExpression*>*>*>("System.Linq.Expressions", "Expression", "s_lambdaFactories")));
}
// Autogenerated static field setter
// Set static field: static private System.Dynamic.Utils.CacheDict`2<System.Type,System.Func`5<System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.ObjectModel.ReadOnlyCollection`1<System.Linq.Expressions.ParameterExpression>,System.Linq.Expressions.LambdaExpression>> s_lambdaFactories
void System::Linq::Expressions::Expression::_set_s_lambdaFactories(System::Dynamic::Utils::CacheDict_2<System::Type*, System::Func_5<System::Linq::Expressions::Expression*, ::StringW, bool, System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::ParameterExpression*>*, System::Linq::Expressions::LambdaExpression*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::_set_s_lambdaFactories");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "Expression", "s_lambdaFactories", value));
}
// Autogenerated static field getter
// Get static field: static private System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Linq.Expressions.Expression,System.Linq.Expressions.Expression/System.Linq.Expressions.ExtensionInfo> s_legacyCtorSupportTable
System::Runtime::CompilerServices::ConditionalWeakTable_2<System::Linq::Expressions::Expression*, System::Linq::Expressions::Expression::ExtensionInfo*>* System::Linq::Expressions::Expression::_get_s_legacyCtorSupportTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::_get_s_legacyCtorSupportTable");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Runtime::CompilerServices::ConditionalWeakTable_2<System::Linq::Expressions::Expression*, System::Linq::Expressions::Expression::ExtensionInfo*>*>("System.Linq.Expressions", "Expression", "s_legacyCtorSupportTable")));
}
// Autogenerated static field setter
// Set static field: static private System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Linq.Expressions.Expression,System.Linq.Expressions.Expression/System.Linq.Expressions.ExtensionInfo> s_legacyCtorSupportTable
void System::Linq::Expressions::Expression::_set_s_legacyCtorSupportTable(System::Runtime::CompilerServices::ConditionalWeakTable_2<System::Linq::Expressions::Expression*, System::Linq::Expressions::Expression::ExtensionInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::_set_s_legacyCtorSupportTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "Expression", "s_legacyCtorSupportTable", value));
}
// Autogenerated method: System.Linq.Expressions.Expression.get_NodeType
System::Linq::Expressions::ExpressionType System::Linq::Expressions::Expression::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ExpressionType, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Expression.get_Type
System::Type* System::Linq::Expressions::Expression::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Expression.get_CanReduce
bool System::Linq::Expressions::Expression::get_CanReduce() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::get_CanReduce");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanReduce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Expression..cctor
void System::Linq::Expressions::Expression::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Expression.Assign
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::Assign(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Assign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Assign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetUserDefinedBinaryOperator
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::GetUserDefinedBinaryOperator(System::Linq::Expressions::ExpressionType binaryType, ::StringW name, System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, bool liftToNull) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::GetUserDefinedBinaryOperator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetUserDefinedBinaryOperator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binaryType), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(liftToNull)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, binaryType, name, left, right, liftToNull);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetMethodBasedBinaryOperator
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::GetMethodBasedBinaryOperator(System::Linq::Expressions::ExpressionType binaryType, System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, System::Reflection::MethodInfo* method, bool liftToNull) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::GetMethodBasedBinaryOperator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetMethodBasedBinaryOperator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binaryType), ::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(liftToNull)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, binaryType, left, right, method, liftToNull);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetMethodBasedAssignOperator
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::GetMethodBasedAssignOperator(System::Linq::Expressions::ExpressionType binaryType, System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, System::Reflection::MethodInfo* method, System::Linq::Expressions::LambdaExpression* conversion, bool liftToNull) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::GetMethodBasedAssignOperator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetMethodBasedAssignOperator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binaryType), ::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(conversion), ::il2cpp_utils::ExtractType(liftToNull)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, binaryType, left, right, method, conversion, liftToNull);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetUserDefinedBinaryOperatorOrThrow
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::GetUserDefinedBinaryOperatorOrThrow(System::Linq::Expressions::ExpressionType binaryType, ::StringW name, System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, bool liftToNull) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::GetUserDefinedBinaryOperatorOrThrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetUserDefinedBinaryOperatorOrThrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binaryType), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(liftToNull)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, binaryType, name, left, right, liftToNull);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetUserDefinedAssignOperatorOrThrow
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::GetUserDefinedAssignOperatorOrThrow(System::Linq::Expressions::ExpressionType binaryType, ::StringW name, System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, System::Linq::Expressions::LambdaExpression* conversion, bool liftToNull) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::GetUserDefinedAssignOperatorOrThrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetUserDefinedAssignOperatorOrThrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binaryType), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(conversion), ::il2cpp_utils::ExtractType(liftToNull)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, binaryType, name, left, right, conversion, liftToNull);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetUserDefinedBinaryOperator
System::Reflection::MethodInfo* System::Linq::Expressions::Expression::GetUserDefinedBinaryOperator(System::Linq::Expressions::ExpressionType binaryType, System::Type* leftType, System::Type* rightType, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::GetUserDefinedBinaryOperator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetUserDefinedBinaryOperator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binaryType), ::il2cpp_utils::ExtractType(leftType), ::il2cpp_utils::ExtractType(rightType), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, binaryType, leftType, rightType, name);
}
// Autogenerated method: System.Linq.Expressions.Expression.IsLiftingConditionalLogicalOperator
bool System::Linq::Expressions::Expression::IsLiftingConditionalLogicalOperator(System::Type* left, System::Type* right, System::Reflection::MethodInfo* method, System::Linq::Expressions::ExpressionType binaryType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::IsLiftingConditionalLogicalOperator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "IsLiftingConditionalLogicalOperator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(binaryType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method, binaryType);
}
// Autogenerated method: System.Linq.Expressions.Expression.ParameterIsAssignable
bool System::Linq::Expressions::Expression::ParameterIsAssignable(System::Reflection::ParameterInfo* pi, System::Type* argType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::ParameterIsAssignable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ParameterIsAssignable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pi), ::il2cpp_utils::ExtractType(argType)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pi, argType);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateParamswithOperandsOrThrow
void System::Linq::Expressions::Expression::ValidateParamswithOperandsOrThrow(System::Type* paramType, System::Type* operandType, System::Linq::Expressions::ExpressionType exprType, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::ValidateParamswithOperandsOrThrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateParamswithOperandsOrThrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramType), ::il2cpp_utils::ExtractType(operandType), ::il2cpp_utils::ExtractType(exprType), ::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramType, operandType, exprType, name);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateOperator
void System::Linq::Expressions::Expression::ValidateOperator(System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::ValidateOperator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateOperator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateMethodInfo
void System::Linq::Expressions::Expression::ValidateMethodInfo(System::Reflection::MethodInfo* method, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::ValidateMethodInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateMethodInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(paramName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, paramName);
}
// Autogenerated method: System.Linq.Expressions.Expression.IsNullComparison
bool System::Linq::Expressions::Expression::IsNullComparison(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::IsNullComparison");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "IsNullComparison", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Linq.Expressions.Expression.IsNullConstant
bool System::Linq::Expressions::Expression::IsNullConstant(System::Linq::Expressions::Expression* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::IsNullConstant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "IsNullConstant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, e);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateUserDefinedConditionalLogicOperator
void System::Linq::Expressions::Expression::ValidateUserDefinedConditionalLogicOperator(System::Linq::Expressions::ExpressionType nodeType, System::Type* left, System::Type* right, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::ValidateUserDefinedConditionalLogicOperator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateUserDefinedConditionalLogicOperator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeType, left, right, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.VerifyOpTrueFalse
void System::Linq::Expressions::Expression::VerifyOpTrueFalse(System::Linq::Expressions::ExpressionType nodeType, System::Type* left, System::Reflection::MethodInfo* opTrue, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::VerifyOpTrueFalse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "VerifyOpTrueFalse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(opTrue), ::il2cpp_utils::ExtractType(paramName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeType, left, opTrue, paramName);
}
// Autogenerated method: System.Linq.Expressions.Expression.IsValidLiftedConditionalLogicalOperator
bool System::Linq::Expressions::Expression::IsValidLiftedConditionalLogicalOperator(System::Type* left, System::Type* right, ::ArrayW<System::Reflection::ParameterInfo*> pms) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::IsValidLiftedConditionalLogicalOperator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "IsValidLiftedConditionalLogicalOperator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(pms)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, pms);
}
// Autogenerated method: System.Linq.Expressions.Expression.MakeBinary
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::MakeBinary(System::Linq::Expressions::ExpressionType binaryType, System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, bool liftToNull, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::MakeBinary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "MakeBinary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binaryType), ::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(liftToNull), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, binaryType, left, right, liftToNull, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.MakeBinary
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::MakeBinary(System::Linq::Expressions::ExpressionType binaryType, System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, bool liftToNull, System::Reflection::MethodInfo* method, System::Linq::Expressions::LambdaExpression* conversion) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::MakeBinary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "MakeBinary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binaryType), ::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(liftToNull), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(conversion)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, binaryType, left, right, liftToNull, method, conversion);
}
// Autogenerated method: System.Linq.Expressions.Expression.Equal
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::Equal(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Equal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Equal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Linq.Expressions.Expression.Equal
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::Equal(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, bool liftToNull, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Equal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Equal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(liftToNull), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, liftToNull, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.ReferenceEqual
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::ReferenceEqual(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::ReferenceEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ReferenceEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Linq.Expressions.Expression.NotEqual
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::NotEqual(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::NotEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "NotEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Linq.Expressions.Expression.NotEqual
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::NotEqual(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, bool liftToNull, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::NotEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "NotEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(liftToNull), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, liftToNull, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.ReferenceNotEqual
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::ReferenceNotEqual(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::ReferenceNotEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ReferenceNotEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetEqualityComparisonOperator
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::GetEqualityComparisonOperator(System::Linq::Expressions::ExpressionType binaryType, ::StringW opName, System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, bool liftToNull) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::GetEqualityComparisonOperator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetEqualityComparisonOperator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binaryType), ::il2cpp_utils::ExtractType(opName), ::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(liftToNull)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, binaryType, opName, left, right, liftToNull);
}
// Autogenerated method: System.Linq.Expressions.Expression.GreaterThan
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::GreaterThan(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, bool liftToNull, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(liftToNull), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, liftToNull, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.LessThan
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::LessThan(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, bool liftToNull, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(liftToNull), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, liftToNull, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.GreaterThanOrEqual
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::GreaterThanOrEqual(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, bool liftToNull, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::GreaterThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GreaterThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(liftToNull), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, liftToNull, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.LessThanOrEqual
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::LessThanOrEqual(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, bool liftToNull, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::LessThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "LessThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(liftToNull), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, liftToNull, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetComparisonOperator
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::GetComparisonOperator(System::Linq::Expressions::ExpressionType binaryType, ::StringW opName, System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, bool liftToNull) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::GetComparisonOperator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetComparisonOperator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binaryType), ::il2cpp_utils::ExtractType(opName), ::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(liftToNull)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, binaryType, opName, left, right, liftToNull);
}
// Autogenerated method: System.Linq.Expressions.Expression.AndAlso
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::AndAlso(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::AndAlso");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "AndAlso", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Linq.Expressions.Expression.AndAlso
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::AndAlso(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::AndAlso");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "AndAlso", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.OrElse
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::OrElse(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::OrElse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "OrElse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.Coalesce
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::Coalesce(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, System::Linq::Expressions::LambdaExpression* conversion) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Coalesce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Coalesce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(conversion)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, conversion);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateCoalesceArgTypes
System::Type* System::Linq::Expressions::Expression::ValidateCoalesceArgTypes(System::Type* left, System::Type* right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::ValidateCoalesceArgTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateCoalesceArgTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Linq.Expressions.Expression.Add
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::Add(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.AddAssign
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::AddAssign(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, System::Reflection::MethodInfo* method, System::Linq::Expressions::LambdaExpression* conversion) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::AddAssign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "AddAssign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(conversion)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method, conversion);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateOpAssignConversionLambda
void System::Linq::Expressions::Expression::ValidateOpAssignConversionLambda(System::Linq::Expressions::LambdaExpression* conversion, System::Linq::Expressions::Expression* left, System::Reflection::MethodInfo* method, System::Linq::Expressions::ExpressionType nodeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::ValidateOpAssignConversionLambda");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateOpAssignConversionLambda", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(conversion), ::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(nodeType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, conversion, left, method, nodeType);
}
// Autogenerated method: System.Linq.Expressions.Expression.AddAssignChecked
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::AddAssignChecked(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, System::Reflection::MethodInfo* method, System::Linq::Expressions::LambdaExpression* conversion) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::AddAssignChecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "AddAssignChecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(conversion)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method, conversion);
}
// Autogenerated method: System.Linq.Expressions.Expression.AddChecked
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::AddChecked(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::AddChecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "AddChecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.Subtract
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::Subtract(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Subtract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Subtract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.SubtractAssign
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::SubtractAssign(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, System::Reflection::MethodInfo* method, System::Linq::Expressions::LambdaExpression* conversion) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::SubtractAssign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "SubtractAssign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(conversion)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method, conversion);
}
// Autogenerated method: System.Linq.Expressions.Expression.SubtractAssignChecked
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::SubtractAssignChecked(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, System::Reflection::MethodInfo* method, System::Linq::Expressions::LambdaExpression* conversion) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::SubtractAssignChecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "SubtractAssignChecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(conversion)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method, conversion);
}
// Autogenerated method: System.Linq.Expressions.Expression.SubtractChecked
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::SubtractChecked(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::SubtractChecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "SubtractChecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.Divide
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::Divide(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Divide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Divide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.DivideAssign
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::DivideAssign(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, System::Reflection::MethodInfo* method, System::Linq::Expressions::LambdaExpression* conversion) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::DivideAssign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "DivideAssign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(conversion)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method, conversion);
}
// Autogenerated method: System.Linq.Expressions.Expression.Modulo
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::Modulo(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Modulo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Modulo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.ModuloAssign
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::ModuloAssign(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, System::Reflection::MethodInfo* method, System::Linq::Expressions::LambdaExpression* conversion) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::ModuloAssign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ModuloAssign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(conversion)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method, conversion);
}
// Autogenerated method: System.Linq.Expressions.Expression.Multiply
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::Multiply(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.MultiplyAssign
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::MultiplyAssign(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, System::Reflection::MethodInfo* method, System::Linq::Expressions::LambdaExpression* conversion) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::MultiplyAssign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "MultiplyAssign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(conversion)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method, conversion);
}
// Autogenerated method: System.Linq.Expressions.Expression.MultiplyAssignChecked
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::MultiplyAssignChecked(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, System::Reflection::MethodInfo* method, System::Linq::Expressions::LambdaExpression* conversion) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::MultiplyAssignChecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "MultiplyAssignChecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(conversion)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method, conversion);
}
// Autogenerated method: System.Linq.Expressions.Expression.MultiplyChecked
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::MultiplyChecked(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::MultiplyChecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "MultiplyChecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.IsSimpleShift
bool System::Linq::Expressions::Expression::IsSimpleShift(System::Type* left, System::Type* right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::IsSimpleShift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "IsSimpleShift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetResultTypeOfShift
System::Type* System::Linq::Expressions::Expression::GetResultTypeOfShift(System::Type* left, System::Type* right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::GetResultTypeOfShift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetResultTypeOfShift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right);
}
// Autogenerated method: System.Linq.Expressions.Expression.LeftShift
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::LeftShift(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::LeftShift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "LeftShift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.LeftShiftAssign
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::LeftShiftAssign(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, System::Reflection::MethodInfo* method, System::Linq::Expressions::LambdaExpression* conversion) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::LeftShiftAssign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "LeftShiftAssign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(conversion)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method, conversion);
}
// Autogenerated method: System.Linq.Expressions.Expression.RightShift
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::RightShift(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::RightShift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "RightShift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.RightShiftAssign
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::RightShiftAssign(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, System::Reflection::MethodInfo* method, System::Linq::Expressions::LambdaExpression* conversion) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::RightShiftAssign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "RightShiftAssign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(conversion)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method, conversion);
}
// Autogenerated method: System.Linq.Expressions.Expression.And
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::And(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::And");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "And", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.AndAssign
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::AndAssign(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, System::Reflection::MethodInfo* method, System::Linq::Expressions::LambdaExpression* conversion) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::AndAssign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "AndAssign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(conversion)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method, conversion);
}
// Autogenerated method: System.Linq.Expressions.Expression.Or
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::Or(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Or");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Or", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.OrAssign
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::OrAssign(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, System::Reflection::MethodInfo* method, System::Linq::Expressions::LambdaExpression* conversion) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::OrAssign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "OrAssign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(conversion)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method, conversion);
}
// Autogenerated method: System.Linq.Expressions.Expression.ExclusiveOr
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::ExclusiveOr(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::ExclusiveOr");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ExclusiveOr", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.ExclusiveOrAssign
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::ExclusiveOrAssign(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, System::Reflection::MethodInfo* method, System::Linq::Expressions::LambdaExpression* conversion) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::ExclusiveOrAssign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ExclusiveOrAssign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(conversion)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method, conversion);
}
// Autogenerated method: System.Linq.Expressions.Expression.Power
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::Power(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Power");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Power", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.PowerAssign
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::PowerAssign(System::Linq::Expressions::Expression* left, System::Linq::Expressions::Expression* right, System::Reflection::MethodInfo* method, System::Linq::Expressions::LambdaExpression* conversion) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::PowerAssign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "PowerAssign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(right), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(conversion)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, left, right, method, conversion);
}
// Autogenerated method: System.Linq.Expressions.Expression.ArrayIndex
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::Expression::ArrayIndex(System::Linq::Expressions::Expression* array, System::Linq::Expressions::Expression* index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::ArrayIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ArrayIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, index);
}
// Autogenerated method: System.Linq.Expressions.Expression.Block
System::Linq::Expressions::BlockExpression* System::Linq::Expressions::Expression::Block(System::Linq::Expressions::Expression* arg0, System::Linq::Expressions::Expression* arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BlockExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, arg0, arg1);
}
// Autogenerated method: System.Linq.Expressions.Expression.Block
System::Linq::Expressions::BlockExpression* System::Linq::Expressions::Expression::Block(System::Linq::Expressions::Expression* arg0, System::Linq::Expressions::Expression* arg1, System::Linq::Expressions::Expression* arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BlockExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, arg0, arg1, arg2);
}
// Autogenerated method: System.Linq.Expressions.Expression.Block
System::Linq::Expressions::BlockExpression* System::Linq::Expressions::Expression::Block(System::Linq::Expressions::Expression* arg0, System::Linq::Expressions::Expression* arg1, System::Linq::Expressions::Expression* arg2, System::Linq::Expressions::Expression* arg3) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(arg3)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BlockExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, arg0, arg1, arg2, arg3);
}
// Autogenerated method: System.Linq.Expressions.Expression.Block
System::Linq::Expressions::BlockExpression* System::Linq::Expressions::Expression::Block(System::Linq::Expressions::Expression* arg0, System::Linq::Expressions::Expression* arg1, System::Linq::Expressions::Expression* arg2, System::Linq::Expressions::Expression* arg3, System::Linq::Expressions::Expression* arg4) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(arg3), ::il2cpp_utils::ExtractType(arg4)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BlockExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, arg0, arg1, arg2, arg3, arg4);
}
// Autogenerated method: System.Linq.Expressions.Expression.Block
System::Linq::Expressions::BlockExpression* System::Linq::Expressions::Expression::Block(System::Collections::Generic::IEnumerable_1<System::Linq::Expressions::Expression*>* expressions) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expressions)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BlockExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expressions);
}
// Autogenerated method: System.Linq.Expressions.Expression.Block
System::Linq::Expressions::BlockExpression* System::Linq::Expressions::Expression::Block(System::Type* type, ::ArrayW<System::Linq::Expressions::Expression*> expressions) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(expressions)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BlockExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, expressions);
}
// Autogenerated method: System.Linq.Expressions.Expression.Block
System::Linq::Expressions::BlockExpression* System::Linq::Expressions::Expression::Block(System::Type* type, System::Collections::Generic::IEnumerable_1<System::Linq::Expressions::Expression*>* expressions) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(expressions)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BlockExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, expressions);
}
// Autogenerated method: System.Linq.Expressions.Expression.Block
System::Linq::Expressions::BlockExpression* System::Linq::Expressions::Expression::Block(System::Collections::Generic::IEnumerable_1<System::Linq::Expressions::ParameterExpression*>* variables, ::ArrayW<System::Linq::Expressions::Expression*> expressions) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(variables), ::il2cpp_utils::ExtractType(expressions)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BlockExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, variables, expressions);
}
// Autogenerated method: System.Linq.Expressions.Expression.Block
System::Linq::Expressions::BlockExpression* System::Linq::Expressions::Expression::Block(System::Type* type, System::Collections::Generic::IEnumerable_1<System::Linq::Expressions::ParameterExpression*>* variables, ::ArrayW<System::Linq::Expressions::Expression*> expressions) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(variables), ::il2cpp_utils::ExtractType(expressions)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BlockExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, variables, expressions);
}
// Autogenerated method: System.Linq.Expressions.Expression.Block
System::Linq::Expressions::BlockExpression* System::Linq::Expressions::Expression::Block(System::Collections::Generic::IEnumerable_1<System::Linq::Expressions::ParameterExpression*>* variables, System::Collections::Generic::IEnumerable_1<System::Linq::Expressions::Expression*>* expressions) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(variables), ::il2cpp_utils::ExtractType(expressions)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BlockExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, variables, expressions);
}
// Autogenerated method: System.Linq.Expressions.Expression.Block
System::Linq::Expressions::BlockExpression* System::Linq::Expressions::Expression::Block(System::Type* type, System::Collections::Generic::IEnumerable_1<System::Linq::Expressions::ParameterExpression*>* variables, System::Collections::Generic::IEnumerable_1<System::Linq::Expressions::Expression*>* expressions) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Block");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(variables), ::il2cpp_utils::ExtractType(expressions)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BlockExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, variables, expressions);
}
// Autogenerated method: System.Linq.Expressions.Expression.BlockCore
System::Linq::Expressions::BlockExpression* System::Linq::Expressions::Expression::BlockCore(System::Type* type, System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::ParameterExpression*>* variables, System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>* expressions) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::BlockCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "BlockCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(variables), ::il2cpp_utils::ExtractType(expressions)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BlockExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, variables, expressions);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateVariables
void System::Linq::Expressions::Expression::ValidateVariables(System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::ParameterExpression*>* varList, ::StringW collectionName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::ValidateVariables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateVariables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(varList), ::il2cpp_utils::ExtractType(collectionName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, varList, collectionName);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetOptimizedBlockExpression
System::Linq::Expressions::BlockExpression* System::Linq::Expressions::Expression::GetOptimizedBlockExpression(System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::Expression*>* expressions) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::GetOptimizedBlockExpression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetOptimizedBlockExpression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expressions)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BlockExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expressions);
}
// Autogenerated method: System.Linq.Expressions.Expression.MakeCatchBlock
System::Linq::Expressions::CatchBlock* System::Linq::Expressions::Expression::MakeCatchBlock(System::Type* type, System::Linq::Expressions::ParameterExpression* variable, System::Linq::Expressions::Expression* body, System::Linq::Expressions::Expression* filter) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::MakeCatchBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "MakeCatchBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(variable), ::il2cpp_utils::ExtractType(body), ::il2cpp_utils::ExtractType(filter)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::CatchBlock*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, variable, body, filter);
}
// Autogenerated method: System.Linq.Expressions.Expression.Condition
System::Linq::Expressions::ConditionalExpression* System::Linq::Expressions::Expression::Condition(System::Linq::Expressions::Expression* test, System::Linq::Expressions::Expression* ifTrue, System::Linq::Expressions::Expression* ifFalse) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Condition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Condition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test), ::il2cpp_utils::ExtractType(ifTrue), ::il2cpp_utils::ExtractType(ifFalse)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ConditionalExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, test, ifTrue, ifFalse);
}
// Autogenerated method: System.Linq.Expressions.Expression.Condition
System::Linq::Expressions::ConditionalExpression* System::Linq::Expressions::Expression::Condition(System::Linq::Expressions::Expression* test, System::Linq::Expressions::Expression* ifTrue, System::Linq::Expressions::Expression* ifFalse, System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Condition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Condition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test), ::il2cpp_utils::ExtractType(ifTrue), ::il2cpp_utils::ExtractType(ifFalse), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ConditionalExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, test, ifTrue, ifFalse, type);
}
// Autogenerated method: System.Linq.Expressions.Expression.IfThen
System::Linq::Expressions::ConditionalExpression* System::Linq::Expressions::Expression::IfThen(System::Linq::Expressions::Expression* test, System::Linq::Expressions::Expression* ifTrue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::IfThen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "IfThen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test), ::il2cpp_utils::ExtractType(ifTrue)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ConditionalExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, test, ifTrue);
}
// Autogenerated method: System.Linq.Expressions.Expression.Constant
System::Linq::Expressions::ConstantExpression* System::Linq::Expressions::Expression::Constant(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Constant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Constant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ConstantExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Linq.Expressions.Expression.Constant
System::Linq::Expressions::ConstantExpression* System::Linq::Expressions::Expression::Constant(::Il2CppObject* value, System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Constant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Constant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ConstantExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, type);
}
// Autogenerated method: System.Linq.Expressions.Expression.Empty
System::Linq::Expressions::DefaultExpression* System::Linq::Expressions::Expression::Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Empty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Empty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::DefaultExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Expression.Default
System::Linq::Expressions::DefaultExpression* System::Linq::Expressions::Expression::Default(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Default");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Default", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::DefaultExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Linq.Expressions.Expression.Reduce
System::Linq::Expressions::Expression* System::Linq::Expressions::Expression::Reduce() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Reduce");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reduce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Expression.VisitChildren
System::Linq::Expressions::Expression* System::Linq::Expressions::Expression::VisitChildren(System::Linq::Expressions::ExpressionVisitor* visitor) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::VisitChildren");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitChildren", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visitor)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, visitor);
}
// Autogenerated method: System.Linq.Expressions.Expression.Accept
System::Linq::Expressions::Expression* System::Linq::Expressions::Expression::Accept(System::Linq::Expressions::ExpressionVisitor* visitor) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Accept");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visitor)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, visitor);
}
// Autogenerated method: System.Linq.Expressions.Expression.ReduceAndCheck
System::Linq::Expressions::Expression* System::Linq::Expressions::Expression::ReduceAndCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::ReduceAndCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReduceAndCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Expression.RequiresCanRead
void System::Linq::Expressions::Expression::RequiresCanRead(System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::Expression*>* items, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::RequiresCanRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "RequiresCanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(items), ::il2cpp_utils::ExtractType(paramName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, items, paramName);
}
// Autogenerated method: System.Linq.Expressions.Expression.RequiresCanWrite
void System::Linq::Expressions::Expression::RequiresCanWrite(System::Linq::Expressions::Expression* expression, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::RequiresCanWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "RequiresCanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(paramName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, paramName);
}
// Autogenerated method: System.Linq.Expressions.Expression.Break
System::Linq::Expressions::GotoExpression* System::Linq::Expressions::Expression::Break(System::Linq::Expressions::LabelTarget* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Break");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Break", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::GotoExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target);
}
// Autogenerated method: System.Linq.Expressions.Expression.Return
System::Linq::Expressions::GotoExpression* System::Linq::Expressions::Expression::Return(System::Linq::Expressions::LabelTarget* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Return");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Return", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::GotoExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target);
}
// Autogenerated method: System.Linq.Expressions.Expression.Return
System::Linq::Expressions::GotoExpression* System::Linq::Expressions::Expression::Return(System::Linq::Expressions::LabelTarget* target, System::Linq::Expressions::Expression* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Return");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Return", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::GotoExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target, value);
}
// Autogenerated method: System.Linq.Expressions.Expression.Goto
System::Linq::Expressions::GotoExpression* System::Linq::Expressions::Expression::Goto(System::Linq::Expressions::LabelTarget* target, System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Goto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Goto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::GotoExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target, type);
}
// Autogenerated method: System.Linq.Expressions.Expression.Goto
System::Linq::Expressions::GotoExpression* System::Linq::Expressions::Expression::Goto(System::Linq::Expressions::LabelTarget* target, System::Linq::Expressions::Expression* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Goto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Goto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::GotoExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target, value);
}
// Autogenerated method: System.Linq.Expressions.Expression.MakeGoto
System::Linq::Expressions::GotoExpression* System::Linq::Expressions::Expression::MakeGoto(System::Linq::Expressions::GotoExpressionKind kind, System::Linq::Expressions::LabelTarget* target, System::Linq::Expressions::Expression* value, System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::MakeGoto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "MakeGoto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kind), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::GotoExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, kind, target, value, type);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateGoto
void System::Linq::Expressions::Expression::ValidateGoto(System::Linq::Expressions::LabelTarget* target, ByRef<System::Linq::Expressions::Expression*> value, ::StringW targetParameter, ::StringW valueParameter, System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::ValidateGoto");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateGoto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(targetParameter), ::il2cpp_utils::ExtractType(valueParameter), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target, byref(value), targetParameter, valueParameter, type);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateGotoType
void System::Linq::Expressions::Expression::ValidateGotoType(System::Type* expectedType, ByRef<System::Linq::Expressions::Expression*> value, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::ValidateGotoType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateGotoType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expectedType), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(paramName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expectedType, byref(value), paramName);
}
// Autogenerated method: System.Linq.Expressions.Expression.MakeIndex
System::Linq::Expressions::IndexExpression* System::Linq::Expressions::Expression::MakeIndex(System::Linq::Expressions::Expression* instance, System::Reflection::PropertyInfo* indexer, System::Collections::Generic::IEnumerable_1<System::Linq::Expressions::Expression*>* arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::MakeIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "MakeIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(indexer), ::il2cpp_utils::ExtractType(arguments)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::IndexExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, indexer, arguments);
}
// Autogenerated method: System.Linq.Expressions.Expression.ArrayAccess
System::Linq::Expressions::IndexExpression* System::Linq::Expressions::Expression::ArrayAccess(System::Linq::Expressions::Expression* array, ::ArrayW<System::Linq::Expressions::Expression*> indexes) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::ArrayAccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ArrayAccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(indexes)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::IndexExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, indexes);
}
// Autogenerated method: System.Linq.Expressions.Expression.ArrayAccess
System::Linq::Expressions::IndexExpression* System::Linq::Expressions::Expression::ArrayAccess(System::Linq::Expressions::Expression* array, System::Collections::Generic::IEnumerable_1<System::Linq::Expressions::Expression*>* indexes) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::ArrayAccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ArrayAccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(indexes)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::IndexExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, indexes);
}
// Autogenerated method: System.Linq.Expressions.Expression.Property
System::Linq::Expressions::IndexExpression* System::Linq::Expressions::Expression::Property(System::Linq::Expressions::Expression* instance, System::Reflection::PropertyInfo* indexer, System::Collections::Generic::IEnumerable_1<System::Linq::Expressions::Expression*>* arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Property");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Property", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(indexer), ::il2cpp_utils::ExtractType(arguments)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::IndexExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, indexer, arguments);
}
// Autogenerated method: System.Linq.Expressions.Expression.MakeIndexProperty
System::Linq::Expressions::IndexExpression* System::Linq::Expressions::Expression::MakeIndexProperty(System::Linq::Expressions::Expression* instance, System::Reflection::PropertyInfo* indexer, ::StringW paramName, System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>* argList) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::MakeIndexProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "MakeIndexProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(indexer), ::il2cpp_utils::ExtractType(paramName), ::il2cpp_utils::ExtractType(argList)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::IndexExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, indexer, paramName, argList);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateIndexedProperty
void System::Linq::Expressions::Expression::ValidateIndexedProperty(System::Linq::Expressions::Expression* instance, System::Reflection::PropertyInfo* indexer, ::StringW paramName, ByRef<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>*> argList) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::ValidateIndexedProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateIndexedProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(indexer), ::il2cpp_utils::ExtractType(paramName), ::il2cpp_utils::ExtractType(argList)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, indexer, paramName, byref(argList));
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateAccessor
void System::Linq::Expressions::Expression::ValidateAccessor(System::Linq::Expressions::Expression* instance, System::Reflection::MethodInfo* method, ::ArrayW<System::Reflection::ParameterInfo*> indexes, ByRef<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>*> arguments, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::ValidateAccessor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateAccessor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(indexes), ::il2cpp_utils::ExtractType(arguments), ::il2cpp_utils::ExtractType(paramName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, method, indexes, byref(arguments), paramName);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateAccessorArgumentTypes
void System::Linq::Expressions::Expression::ValidateAccessorArgumentTypes(System::Reflection::MethodInfo* method, ::ArrayW<System::Reflection::ParameterInfo*> indexes, ByRef<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>*> arguments, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::ValidateAccessorArgumentTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateAccessorArgumentTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(indexes), ::il2cpp_utils::ExtractType(arguments), ::il2cpp_utils::ExtractType(paramName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, indexes, byref(arguments), paramName);
}
// Autogenerated method: System.Linq.Expressions.Expression.Invoke
System::Linq::Expressions::InvocationExpression* System::Linq::Expressions::Expression::Invoke(System::Linq::Expressions::Expression* expression) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Invoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::InvocationExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression);
}
// Autogenerated method: System.Linq.Expressions.Expression.Invoke
System::Linq::Expressions::InvocationExpression* System::Linq::Expressions::Expression::Invoke(System::Linq::Expressions::Expression* expression, System::Linq::Expressions::Expression* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Invoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(arg0)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::InvocationExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, arg0);
}
// Autogenerated method: System.Linq.Expressions.Expression.Invoke
System::Linq::Expressions::InvocationExpression* System::Linq::Expressions::Expression::Invoke(System::Linq::Expressions::Expression* expression, System::Linq::Expressions::Expression* arg0, System::Linq::Expressions::Expression* arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Invoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::InvocationExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, arg0, arg1);
}
// Autogenerated method: System.Linq.Expressions.Expression.Invoke
System::Linq::Expressions::InvocationExpression* System::Linq::Expressions::Expression::Invoke(System::Linq::Expressions::Expression* expression, System::Linq::Expressions::Expression* arg0, System::Linq::Expressions::Expression* arg1, System::Linq::Expressions::Expression* arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Invoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::InvocationExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, arg0, arg1, arg2);
}
// Autogenerated method: System.Linq.Expressions.Expression.Invoke
System::Linq::Expressions::InvocationExpression* System::Linq::Expressions::Expression::Invoke(System::Linq::Expressions::Expression* expression, System::Linq::Expressions::Expression* arg0, System::Linq::Expressions::Expression* arg1, System::Linq::Expressions::Expression* arg2, System::Linq::Expressions::Expression* arg3) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Invoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(arg3)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::InvocationExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, arg0, arg1, arg2, arg3);
}
// Autogenerated method: System.Linq.Expressions.Expression.Invoke
System::Linq::Expressions::InvocationExpression* System::Linq::Expressions::Expression::Invoke(System::Linq::Expressions::Expression* expression, System::Linq::Expressions::Expression* arg0, System::Linq::Expressions::Expression* arg1, System::Linq::Expressions::Expression* arg2, System::Linq::Expressions::Expression* arg3, System::Linq::Expressions::Expression* arg4) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Invoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(arg3), ::il2cpp_utils::ExtractType(arg4)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::InvocationExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, arg0, arg1, arg2, arg3, arg4);
}
// Autogenerated method: System.Linq.Expressions.Expression.Invoke
System::Linq::Expressions::InvocationExpression* System::Linq::Expressions::Expression::Invoke(System::Linq::Expressions::Expression* expression, System::Collections::Generic::IEnumerable_1<System::Linq::Expressions::Expression*>* arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Invoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(arguments)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::InvocationExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, arguments);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetInvokeMethod
System::Reflection::MethodInfo* System::Linq::Expressions::Expression::GetInvokeMethod(System::Linq::Expressions::Expression* expression) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::GetInvokeMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetInvokeMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression);
}
// Autogenerated method: System.Linq.Expressions.Expression.Label
System::Linq::Expressions::LabelExpression* System::Linq::Expressions::Expression::Label(System::Linq::Expressions::LabelTarget* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Label");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Label", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::LabelExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target);
}
// Autogenerated method: System.Linq.Expressions.Expression.Label
System::Linq::Expressions::LabelExpression* System::Linq::Expressions::Expression::Label(System::Linq::Expressions::LabelTarget* target, System::Linq::Expressions::Expression* defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Label");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Label", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::LabelExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, target, defaultValue);
}
// Autogenerated method: System.Linq.Expressions.Expression.Label
System::Linq::Expressions::LabelTarget* System::Linq::Expressions::Expression::Label() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Label");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Label", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::LabelTarget*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Expression.Label
System::Linq::Expressions::LabelTarget* System::Linq::Expressions::Expression::Label(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Label");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Label", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::LabelTarget*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Linq.Expressions.Expression.Label
System::Linq::Expressions::LabelTarget* System::Linq::Expressions::Expression::Label(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Label");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Label", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::LabelTarget*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Linq.Expressions.Expression.Label
System::Linq::Expressions::LabelTarget* System::Linq::Expressions::Expression::Label(System::Type* type, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Label");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Label", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::LabelTarget*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, name);
}
// Autogenerated method: System.Linq.Expressions.Expression.CreateLambda
System::Linq::Expressions::LambdaExpression* System::Linq::Expressions::Expression::CreateLambda(System::Type* delegateType, System::Linq::Expressions::Expression* body, ::StringW name, bool tailCall, System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::ParameterExpression*>* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::CreateLambda");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "CreateLambda", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delegateType), ::il2cpp_utils::ExtractType(body), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(tailCall), ::il2cpp_utils::ExtractType(parameters)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::LambdaExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, delegateType, body, name, tailCall, parameters);
}
// Autogenerated method: System.Linq.Expressions.Expression.Lambda
System::Linq::Expressions::LambdaExpression* System::Linq::Expressions::Expression::Lambda(System::Type* delegateType, System::Linq::Expressions::Expression* body, ::ArrayW<System::Linq::Expressions::ParameterExpression*> parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Lambda");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Lambda", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delegateType), ::il2cpp_utils::ExtractType(body), ::il2cpp_utils::ExtractType(parameters)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::LambdaExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, delegateType, body, parameters);
}
// Autogenerated method: System.Linq.Expressions.Expression.Lambda
System::Linq::Expressions::LambdaExpression* System::Linq::Expressions::Expression::Lambda(System::Type* delegateType, System::Linq::Expressions::Expression* body, ::StringW name, bool tailCall, System::Collections::Generic::IEnumerable_1<System::Linq::Expressions::ParameterExpression*>* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Lambda");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Lambda", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delegateType), ::il2cpp_utils::ExtractType(body), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(tailCall), ::il2cpp_utils::ExtractType(parameters)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::LambdaExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, delegateType, body, name, tailCall, parameters);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateLambdaArgs
void System::Linq::Expressions::Expression::ValidateLambdaArgs(System::Type* delegateType, ByRef<System::Linq::Expressions::Expression*> body, System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::ParameterExpression*>* parameters, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::ValidateLambdaArgs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateLambdaArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delegateType), ::il2cpp_utils::ExtractType(body), ::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(paramName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, delegateType, byref(body), parameters, paramName);
}
// Autogenerated method: System.Linq.Expressions.Expression.Loop
System::Linq::Expressions::LoopExpression* System::Linq::Expressions::Expression::Loop(System::Linq::Expressions::Expression* body, System::Linq::Expressions::LabelTarget* _break, System::Linq::Expressions::LabelTarget* _continue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Loop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Loop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(body), ::il2cpp_utils::ExtractType(_break), ::il2cpp_utils::ExtractType(_continue)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::LoopExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, body, _break, _continue);
}
// Autogenerated method: System.Linq.Expressions.Expression.Field
System::Linq::Expressions::MemberExpression* System::Linq::Expressions::Expression::Field(System::Linq::Expressions::Expression* expression, System::Reflection::FieldInfo* field) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Field");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Field", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(field)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::MemberExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, field);
}
// Autogenerated method: System.Linq.Expressions.Expression.Field
System::Linq::Expressions::MemberExpression* System::Linq::Expressions::Expression::Field(System::Linq::Expressions::Expression* expression, ::StringW fieldName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Field");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Field", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(fieldName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::MemberExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, fieldName);
}
// Autogenerated method: System.Linq.Expressions.Expression.Property
System::Linq::Expressions::MemberExpression* System::Linq::Expressions::Expression::Property(System::Linq::Expressions::Expression* expression, ::StringW propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Property");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Property", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(propertyName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::MemberExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, propertyName);
}
// Autogenerated method: System.Linq.Expressions.Expression.Property
System::Linq::Expressions::MemberExpression* System::Linq::Expressions::Expression::Property(System::Linq::Expressions::Expression* expression, System::Reflection::PropertyInfo* property) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Property");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Property", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::MemberExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, property);
}
// Autogenerated method: System.Linq.Expressions.Expression.MakeMemberAccess
System::Linq::Expressions::MemberExpression* System::Linq::Expressions::Expression::MakeMemberAccess(System::Linq::Expressions::Expression* expression, System::Reflection::MemberInfo* member) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::MakeMemberAccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "MakeMemberAccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(member)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::MemberExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, member);
}
// Autogenerated method: System.Linq.Expressions.Expression.Call
System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::Expression::Call(System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Call");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Call", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::MethodCallExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.Call
System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::Expression::Call(System::Reflection::MethodInfo* method, System::Linq::Expressions::Expression* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Call");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Call", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(arg0)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::MethodCallExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, arg0);
}
// Autogenerated method: System.Linq.Expressions.Expression.Call
System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::Expression::Call(System::Reflection::MethodInfo* method, System::Linq::Expressions::Expression* arg0, System::Linq::Expressions::Expression* arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Call");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Call", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::MethodCallExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, arg0, arg1);
}
// Autogenerated method: System.Linq.Expressions.Expression.Call
System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::Expression::Call(System::Reflection::MethodInfo* method, System::Linq::Expressions::Expression* arg0, System::Linq::Expressions::Expression* arg1, System::Linq::Expressions::Expression* arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Call");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Call", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::MethodCallExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, arg0, arg1, arg2);
}
// Autogenerated method: System.Linq.Expressions.Expression.Call
System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::Expression::Call(System::Reflection::MethodInfo* method, System::Linq::Expressions::Expression* arg0, System::Linq::Expressions::Expression* arg1, System::Linq::Expressions::Expression* arg2, System::Linq::Expressions::Expression* arg3) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Call");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Call", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(arg3)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::MethodCallExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, arg0, arg1, arg2, arg3);
}
// Autogenerated method: System.Linq.Expressions.Expression.Call
System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::Expression::Call(System::Reflection::MethodInfo* method, System::Linq::Expressions::Expression* arg0, System::Linq::Expressions::Expression* arg1, System::Linq::Expressions::Expression* arg2, System::Linq::Expressions::Expression* arg3, System::Linq::Expressions::Expression* arg4) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Call");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Call", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2), ::il2cpp_utils::ExtractType(arg3), ::il2cpp_utils::ExtractType(arg4)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::MethodCallExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, arg0, arg1, arg2, arg3, arg4);
}
// Autogenerated method: System.Linq.Expressions.Expression.Call
System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::Expression::Call(System::Reflection::MethodInfo* method, ::ArrayW<System::Linq::Expressions::Expression*> arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Call");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Call", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(arguments)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::MethodCallExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, arguments);
}
// Autogenerated method: System.Linq.Expressions.Expression.Call
System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::Expression::Call(System::Reflection::MethodInfo* method, System::Collections::Generic::IEnumerable_1<System::Linq::Expressions::Expression*>* arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Call");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Call", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(arguments)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::MethodCallExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, arguments);
}
// Autogenerated method: System.Linq.Expressions.Expression.Call
System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::Expression::Call(System::Linq::Expressions::Expression* instance, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Call");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Call", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::MethodCallExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.Call
System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::Expression::Call(System::Linq::Expressions::Expression* instance, System::Reflection::MethodInfo* method, ::ArrayW<System::Linq::Expressions::Expression*> arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Call");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Call", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(arguments)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::MethodCallExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, method, arguments);
}
// Autogenerated method: System.Linq.Expressions.Expression.Call
System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::Expression::Call(System::Linq::Expressions::Expression* instance, System::Reflection::MethodInfo* method, System::Linq::Expressions::Expression* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Call");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Call", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(arg0)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::MethodCallExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, method, arg0);
}
// Autogenerated method: System.Linq.Expressions.Expression.Call
System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::Expression::Call(System::Linq::Expressions::Expression* instance, System::Reflection::MethodInfo* method, System::Linq::Expressions::Expression* arg0, System::Linq::Expressions::Expression* arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Call");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Call", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::MethodCallExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, method, arg0, arg1);
}
// Autogenerated method: System.Linq.Expressions.Expression.Call
System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::Expression::Call(System::Linq::Expressions::Expression* instance, System::Reflection::MethodInfo* method, System::Linq::Expressions::Expression* arg0, System::Linq::Expressions::Expression* arg1, System::Linq::Expressions::Expression* arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Call");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Call", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::MethodCallExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, method, arg0, arg1, arg2);
}
// Autogenerated method: System.Linq.Expressions.Expression.Call
System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::Expression::Call(System::Linq::Expressions::Expression* instance, ::StringW methodName, ::ArrayW<System::Type*> typeArguments, ::ArrayW<System::Linq::Expressions::Expression*> arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Call");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Call", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(typeArguments), ::il2cpp_utils::ExtractType(arguments)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::MethodCallExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, methodName, typeArguments, arguments);
}
// Autogenerated method: System.Linq.Expressions.Expression.Call
System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::Expression::Call(System::Linq::Expressions::Expression* instance, System::Reflection::MethodInfo* method, System::Collections::Generic::IEnumerable_1<System::Linq::Expressions::Expression*>* arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Call");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Call", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(arguments)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::MethodCallExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, method, arguments);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateMethodAndGetParameters
::ArrayW<System::Reflection::ParameterInfo*> System::Linq::Expressions::Expression::ValidateMethodAndGetParameters(System::Linq::Expressions::Expression* instance, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::ValidateMethodAndGetParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateMethodAndGetParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<System::Reflection::ParameterInfo*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateStaticOrInstanceMethod
void System::Linq::Expressions::Expression::ValidateStaticOrInstanceMethod(System::Linq::Expressions::Expression* instance, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::ValidateStaticOrInstanceMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateStaticOrInstanceMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(method)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateCallInstanceType
void System::Linq::Expressions::Expression::ValidateCallInstanceType(System::Type* instanceType, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::ValidateCallInstanceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateCallInstanceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instanceType), ::il2cpp_utils::ExtractType(method)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instanceType, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateArgumentTypes
void System::Linq::Expressions::Expression::ValidateArgumentTypes(System::Reflection::MethodBase* method, System::Linq::Expressions::ExpressionType nodeKind, ByRef<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>*> arguments, ::StringW methodParamName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::ValidateArgumentTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateArgumentTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(nodeKind), ::il2cpp_utils::ExtractType(arguments), ::il2cpp_utils::ExtractType(methodParamName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, nodeKind, byref(arguments), methodParamName);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetParametersForValidation
::ArrayW<System::Reflection::ParameterInfo*> System::Linq::Expressions::Expression::GetParametersForValidation(System::Reflection::MethodBase* method, System::Linq::Expressions::ExpressionType nodeKind) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::GetParametersForValidation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetParametersForValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(nodeKind)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<System::Reflection::ParameterInfo*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, nodeKind);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateArgumentCount
void System::Linq::Expressions::Expression::ValidateArgumentCount(System::Reflection::MethodBase* method, System::Linq::Expressions::ExpressionType nodeKind, int count, ::ArrayW<System::Reflection::ParameterInfo*> pis) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::ValidateArgumentCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateArgumentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(nodeKind), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(pis)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, nodeKind, count, pis);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateOneArgument
System::Linq::Expressions::Expression* System::Linq::Expressions::Expression::ValidateOneArgument(System::Reflection::MethodBase* method, System::Linq::Expressions::ExpressionType nodeKind, System::Linq::Expressions::Expression* arg, System::Reflection::ParameterInfo* pi, ::StringW methodParamName, ::StringW argumentParamName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::ValidateOneArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateOneArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method), ::il2cpp_utils::ExtractType(nodeKind), ::il2cpp_utils::ExtractType(arg), ::il2cpp_utils::ExtractType(pi), ::il2cpp_utils::ExtractType(methodParamName), ::il2cpp_utils::ExtractType(argumentParamName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, method, nodeKind, arg, pi, methodParamName, argumentParamName);
}
// Autogenerated method: System.Linq.Expressions.Expression.TryQuote
bool System::Linq::Expressions::Expression::TryQuote(System::Type* parameterType, ByRef<System::Linq::Expressions::Expression*> argument) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::TryQuote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "TryQuote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameterType), ::il2cpp_utils::ExtractType(argument)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, parameterType, byref(argument));
}
// Autogenerated method: System.Linq.Expressions.Expression.FindMethod
System::Reflection::MethodInfo* System::Linq::Expressions::Expression::FindMethod(System::Type* type, ::StringW methodName, ::ArrayW<System::Type*> typeArgs, ::ArrayW<System::Linq::Expressions::Expression*> args, System::Reflection::BindingFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::FindMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "FindMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(typeArgs), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, methodName, typeArgs, args, flags);
}
// Autogenerated method: System.Linq.Expressions.Expression.IsCompatible
bool System::Linq::Expressions::Expression::IsCompatible(System::Reflection::MethodBase* m, ::ArrayW<System::Linq::Expressions::Expression*> arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::IsCompatible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "IsCompatible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m), ::il2cpp_utils::ExtractType(arguments)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, m, arguments);
}
// Autogenerated method: System.Linq.Expressions.Expression.ApplyTypeArgs
System::Reflection::MethodInfo* System::Linq::Expressions::Expression::ApplyTypeArgs(System::Reflection::MethodInfo* m, ::ArrayW<System::Type*> typeArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::ApplyTypeArgs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ApplyTypeArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(m), ::il2cpp_utils::ExtractType(typeArgs)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, m, typeArgs);
}
// Autogenerated method: System.Linq.Expressions.Expression.NewArrayInit
System::Linq::Expressions::NewArrayExpression* System::Linq::Expressions::Expression::NewArrayInit(System::Type* type, ::ArrayW<System::Linq::Expressions::Expression*> initializers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::NewArrayInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "NewArrayInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(initializers)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::NewArrayExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, initializers);
}
// Autogenerated method: System.Linq.Expressions.Expression.NewArrayInit
System::Linq::Expressions::NewArrayExpression* System::Linq::Expressions::Expression::NewArrayInit(System::Type* type, System::Collections::Generic::IEnumerable_1<System::Linq::Expressions::Expression*>* initializers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::NewArrayInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "NewArrayInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(initializers)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::NewArrayExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, initializers);
}
// Autogenerated method: System.Linq.Expressions.Expression.NewArrayBounds
System::Linq::Expressions::NewArrayExpression* System::Linq::Expressions::Expression::NewArrayBounds(System::Type* type, System::Collections::Generic::IEnumerable_1<System::Linq::Expressions::Expression*>* bounds) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::NewArrayBounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "NewArrayBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(bounds)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::NewArrayExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, bounds);
}
// Autogenerated method: System.Linq.Expressions.Expression.Parameter
System::Linq::Expressions::ParameterExpression* System::Linq::Expressions::Expression::Parameter(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Parameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Parameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ParameterExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Linq.Expressions.Expression.Parameter
System::Linq::Expressions::ParameterExpression* System::Linq::Expressions::Expression::Parameter(System::Type* type, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Parameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Parameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ParameterExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, name);
}
// Autogenerated method: System.Linq.Expressions.Expression.Variable
System::Linq::Expressions::ParameterExpression* System::Linq::Expressions::Expression::Variable(System::Type* type, ::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Variable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Variable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ParameterExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, name);
}
// Autogenerated method: System.Linq.Expressions.Expression.Validate
void System::Linq::Expressions::Expression::Validate(System::Type* type, bool allowByRef) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Validate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Validate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(allowByRef)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, allowByRef);
}
// Autogenerated method: System.Linq.Expressions.Expression.TryFinally
System::Linq::Expressions::TryExpression* System::Linq::Expressions::Expression::TryFinally(System::Linq::Expressions::Expression* body, System::Linq::Expressions::Expression* finally) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::TryFinally");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "TryFinally", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(body), ::il2cpp_utils::ExtractType(finally)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::TryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, body, finally);
}
// Autogenerated method: System.Linq.Expressions.Expression.MakeTry
System::Linq::Expressions::TryExpression* System::Linq::Expressions::Expression::MakeTry(System::Type* type, System::Linq::Expressions::Expression* body, System::Linq::Expressions::Expression* finally, System::Linq::Expressions::Expression* fault, System::Collections::Generic::IEnumerable_1<System::Linq::Expressions::CatchBlock*>* handlers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::MakeTry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "MakeTry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(body), ::il2cpp_utils::ExtractType(finally), ::il2cpp_utils::ExtractType(fault), ::il2cpp_utils::ExtractType(handlers)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::TryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, body, finally, fault, handlers);
}
// Autogenerated method: System.Linq.Expressions.Expression.ValidateTryAndCatchHaveSameType
void System::Linq::Expressions::Expression::ValidateTryAndCatchHaveSameType(System::Type* type, System::Linq::Expressions::Expression* tryBody, System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::CatchBlock*>* handlers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::ValidateTryAndCatchHaveSameType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ValidateTryAndCatchHaveSameType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(tryBody), ::il2cpp_utils::ExtractType(handlers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, tryBody, handlers);
}
// Autogenerated method: System.Linq.Expressions.Expression.TypeIs
System::Linq::Expressions::TypeBinaryExpression* System::Linq::Expressions::Expression::TypeIs(System::Linq::Expressions::Expression* expression, System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::TypeIs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "TypeIs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::TypeBinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, type);
}
// Autogenerated method: System.Linq.Expressions.Expression.TypeEqual
System::Linq::Expressions::TypeBinaryExpression* System::Linq::Expressions::Expression::TypeEqual(System::Linq::Expressions::Expression* expression, System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::TypeEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "TypeEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::TypeBinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, type);
}
// Autogenerated method: System.Linq.Expressions.Expression.MakeUnary
System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::MakeUnary(System::Linq::Expressions::ExpressionType unaryType, System::Linq::Expressions::Expression* operand, System::Type* type, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::MakeUnary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "MakeUnary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unaryType), ::il2cpp_utils::ExtractType(operand), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, unaryType, operand, type, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetUserDefinedUnaryOperatorOrThrow
System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::GetUserDefinedUnaryOperatorOrThrow(System::Linq::Expressions::ExpressionType unaryType, ::StringW name, System::Linq::Expressions::Expression* operand) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::GetUserDefinedUnaryOperatorOrThrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetUserDefinedUnaryOperatorOrThrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unaryType), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(operand)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, unaryType, name, operand);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetUserDefinedUnaryOperator
System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::GetUserDefinedUnaryOperator(System::Linq::Expressions::ExpressionType unaryType, ::StringW name, System::Linq::Expressions::Expression* operand) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::GetUserDefinedUnaryOperator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetUserDefinedUnaryOperator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unaryType), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(operand)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, unaryType, name, operand);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetMethodBasedUnaryOperator
System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::GetMethodBasedUnaryOperator(System::Linq::Expressions::ExpressionType unaryType, System::Linq::Expressions::Expression* operand, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::GetMethodBasedUnaryOperator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetMethodBasedUnaryOperator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unaryType), ::il2cpp_utils::ExtractType(operand), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, unaryType, operand, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetUserDefinedCoercionOrThrow
System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::GetUserDefinedCoercionOrThrow(System::Linq::Expressions::ExpressionType coercionType, System::Linq::Expressions::Expression* expression, System::Type* convertToType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::GetUserDefinedCoercionOrThrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetUserDefinedCoercionOrThrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(coercionType), ::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(convertToType)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, coercionType, expression, convertToType);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetUserDefinedCoercion
System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::GetUserDefinedCoercion(System::Linq::Expressions::ExpressionType coercionType, System::Linq::Expressions::Expression* expression, System::Type* convertToType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::GetUserDefinedCoercion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetUserDefinedCoercion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(coercionType), ::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(convertToType)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, coercionType, expression, convertToType);
}
// Autogenerated method: System.Linq.Expressions.Expression.GetMethodBasedCoercionOperator
System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::GetMethodBasedCoercionOperator(System::Linq::Expressions::ExpressionType unaryType, System::Linq::Expressions::Expression* operand, System::Type* convertToType, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::GetMethodBasedCoercionOperator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "GetMethodBasedCoercionOperator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(unaryType), ::il2cpp_utils::ExtractType(operand), ::il2cpp_utils::ExtractType(convertToType), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, unaryType, operand, convertToType, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.Negate
System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::Negate(System::Linq::Expressions::Expression* expression, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Negate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Negate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.UnaryPlus
System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::UnaryPlus(System::Linq::Expressions::Expression* expression, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::UnaryPlus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "UnaryPlus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.NegateChecked
System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::NegateChecked(System::Linq::Expressions::Expression* expression, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::NegateChecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "NegateChecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.Not
System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::Not(System::Linq::Expressions::Expression* expression, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Not");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Not", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.IsFalse
System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::IsFalse(System::Linq::Expressions::Expression* expression, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::IsFalse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "IsFalse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.IsTrue
System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::IsTrue(System::Linq::Expressions::Expression* expression, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::IsTrue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "IsTrue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.OnesComplement
System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::OnesComplement(System::Linq::Expressions::Expression* expression, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::OnesComplement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "OnesComplement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.TypeAs
System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::TypeAs(System::Linq::Expressions::Expression* expression, System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::TypeAs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "TypeAs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, type);
}
// Autogenerated method: System.Linq.Expressions.Expression.Unbox
System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::Unbox(System::Linq::Expressions::Expression* expression, System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Unbox");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Unbox", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, type);
}
// Autogenerated method: System.Linq.Expressions.Expression.Convert
System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::Convert(System::Linq::Expressions::Expression* expression, System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Convert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, type);
}
// Autogenerated method: System.Linq.Expressions.Expression.Convert
System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::Convert(System::Linq::Expressions::Expression* expression, System::Type* type, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Convert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, type, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.ConvertChecked
System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::ConvertChecked(System::Linq::Expressions::Expression* expression, System::Type* type, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::ConvertChecked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ConvertChecked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, type, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.ArrayLength
System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::ArrayLength(System::Linq::Expressions::Expression* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::ArrayLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "ArrayLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array);
}
// Autogenerated method: System.Linq.Expressions.Expression.Quote
System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::Quote(System::Linq::Expressions::Expression* expression) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Quote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Quote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression);
}
// Autogenerated method: System.Linq.Expressions.Expression.Throw
System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::Throw(System::Linq::Expressions::Expression* value, System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Throw");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Throw", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, type);
}
// Autogenerated method: System.Linq.Expressions.Expression.Increment
System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::Increment(System::Linq::Expressions::Expression* expression, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Increment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Increment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.Decrement
System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::Decrement(System::Linq::Expressions::Expression* expression, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::Decrement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "Decrement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.PreIncrementAssign
System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::PreIncrementAssign(System::Linq::Expressions::Expression* expression) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::PreIncrementAssign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "PreIncrementAssign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression);
}
// Autogenerated method: System.Linq.Expressions.Expression.PreIncrementAssign
System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::PreIncrementAssign(System::Linq::Expressions::Expression* expression, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::PreIncrementAssign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "PreIncrementAssign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.PreDecrementAssign
System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::PreDecrementAssign(System::Linq::Expressions::Expression* expression, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::PreDecrementAssign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "PreDecrementAssign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.PostIncrementAssign
System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::PostIncrementAssign(System::Linq::Expressions::Expression* expression, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::PostIncrementAssign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "PostIncrementAssign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.PostDecrementAssign
System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::PostDecrementAssign(System::Linq::Expressions::Expression* expression, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::PostDecrementAssign");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "PostDecrementAssign", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.MakeOpAssignUnary
System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::Expression::MakeOpAssignUnary(System::Linq::Expressions::ExpressionType kind, System::Linq::Expressions::Expression* expression, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::MakeOpAssignUnary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Expression", "MakeOpAssignUnary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kind), ::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, kind, expression, method);
}
// Autogenerated method: System.Linq.Expressions.Expression.ToString
::StringW System::Linq::Expressions::Expression::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Expression::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.BlockExpression
#include "System/Linq/Expressions/BlockExpression.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Linq.Expressions.ParameterExpression
#include "System/Linq/Expressions/ParameterExpression.hpp"
// Including type: System.Linq.Expressions.ExpressionType
#include "System/Linq/Expressions/ExpressionType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Linq.Expressions.ExpressionVisitor
#include "System/Linq/Expressions/ExpressionVisitor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.BlockExpression.get_Expressions
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>* System::Linq::Expressions::BlockExpression::get_Expressions() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpression::get_Expressions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Expressions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BlockExpression.get_Variables
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::ParameterExpression*>* System::Linq::Expressions::BlockExpression::get_Variables() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpression::get_Variables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Variables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::ParameterExpression*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BlockExpression.get_ExpressionCount
int System::Linq::Expressions::BlockExpression::get_ExpressionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpression::get_ExpressionCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExpressionCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BlockExpression.GetExpression
System::Linq::Expressions::Expression* System::Linq::Expressions::BlockExpression::GetExpression(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpression::GetExpression");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExpression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.BlockExpression.GetOrMakeExpressions
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>* System::Linq::Expressions::BlockExpression::GetOrMakeExpressions() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpression::GetOrMakeExpressions");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOrMakeExpressions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BlockExpression.GetOrMakeVariables
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::ParameterExpression*>* System::Linq::Expressions::BlockExpression::GetOrMakeVariables() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpression::GetOrMakeVariables");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOrMakeVariables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::ParameterExpression*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BlockExpression.Rewrite
System::Linq::Expressions::BlockExpression* System::Linq::Expressions::BlockExpression::Rewrite(System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::ParameterExpression*>* variables, ::ArrayW<System::Linq::Expressions::Expression*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpression::Rewrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(variables), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BlockExpression*, false>(this, ___internal__method, variables, args);
}
// Autogenerated method: System.Linq.Expressions.BlockExpression.ReturnReadOnlyExpressions
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>* System::Linq::Expressions::BlockExpression::ReturnReadOnlyExpressions(System::Linq::Expressions::BlockExpression* provider, ByRef<::Il2CppObject*> collection) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpression::ReturnReadOnlyExpressions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "BlockExpression", "ReturnReadOnlyExpressions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(collection)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, provider, byref(collection));
}
// Autogenerated method: System.Linq.Expressions.BlockExpression.get_NodeType
System::Linq::Expressions::ExpressionType System::Linq::Expressions::BlockExpression::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpression::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ExpressionType, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BlockExpression.get_Type
System::Type* System::Linq::Expressions::BlockExpression::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpression::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BlockExpression.Accept
System::Linq::Expressions::Expression* System::Linq::Expressions::BlockExpression::Accept(System::Linq::Expressions::ExpressionVisitor* visitor) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpression::Accept");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visitor)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, visitor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.Block2
#include "System/Linq/Expressions/Block2.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Linq.Expressions.ParameterExpression
#include "System/Linq/Expressions/ParameterExpression.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object _arg0
::Il2CppObject*& System::Linq::Expressions::Block2::dyn__arg0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Block2::dyn__arg0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg0"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg1
System::Linq::Expressions::Expression*& System::Linq::Expressions::Block2::dyn__arg1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Block2::dyn__arg1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg1"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.Block2.get_ExpressionCount
int System::Linq::Expressions::Block2::get_ExpressionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Block2::get_ExpressionCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExpressionCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Block2.GetExpression
System::Linq::Expressions::Expression* System::Linq::Expressions::Block2::GetExpression(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Block2::GetExpression");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExpression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.Block2.GetOrMakeExpressions
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>* System::Linq::Expressions::Block2::GetOrMakeExpressions() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Block2::GetOrMakeExpressions");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOrMakeExpressions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Block2.Rewrite
System::Linq::Expressions::BlockExpression* System::Linq::Expressions::Block2::Rewrite(System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::ParameterExpression*>* variables, ::ArrayW<System::Linq::Expressions::Expression*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Block2::Rewrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(variables), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BlockExpression*, false>(this, ___internal__method, variables, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.Block3
#include "System/Linq/Expressions/Block3.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Linq.Expressions.ParameterExpression
#include "System/Linq/Expressions/ParameterExpression.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object _arg0
::Il2CppObject*& System::Linq::Expressions::Block3::dyn__arg0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Block3::dyn__arg0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg0"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg1
System::Linq::Expressions::Expression*& System::Linq::Expressions::Block3::dyn__arg1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Block3::dyn__arg1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg1"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg2
System::Linq::Expressions::Expression*& System::Linq::Expressions::Block3::dyn__arg2() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Block3::dyn__arg2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg2"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.Block3.get_ExpressionCount
int System::Linq::Expressions::Block3::get_ExpressionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Block3::get_ExpressionCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExpressionCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Block3.GetExpression
System::Linq::Expressions::Expression* System::Linq::Expressions::Block3::GetExpression(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Block3::GetExpression");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExpression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.Block3.GetOrMakeExpressions
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>* System::Linq::Expressions::Block3::GetOrMakeExpressions() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Block3::GetOrMakeExpressions");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOrMakeExpressions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Block3.Rewrite
System::Linq::Expressions::BlockExpression* System::Linq::Expressions::Block3::Rewrite(System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::ParameterExpression*>* variables, ::ArrayW<System::Linq::Expressions::Expression*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Block3::Rewrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(variables), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BlockExpression*, false>(this, ___internal__method, variables, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.Block4
#include "System/Linq/Expressions/Block4.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Linq.Expressions.ParameterExpression
#include "System/Linq/Expressions/ParameterExpression.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object _arg0
::Il2CppObject*& System::Linq::Expressions::Block4::dyn__arg0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Block4::dyn__arg0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg0"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg1
System::Linq::Expressions::Expression*& System::Linq::Expressions::Block4::dyn__arg1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Block4::dyn__arg1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg1"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg2
System::Linq::Expressions::Expression*& System::Linq::Expressions::Block4::dyn__arg2() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Block4::dyn__arg2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg2"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg3
System::Linq::Expressions::Expression*& System::Linq::Expressions::Block4::dyn__arg3() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Block4::dyn__arg3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg3"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.Block4.get_ExpressionCount
int System::Linq::Expressions::Block4::get_ExpressionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Block4::get_ExpressionCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExpressionCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Block4.GetExpression
System::Linq::Expressions::Expression* System::Linq::Expressions::Block4::GetExpression(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Block4::GetExpression");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExpression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.Block4.GetOrMakeExpressions
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>* System::Linq::Expressions::Block4::GetOrMakeExpressions() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Block4::GetOrMakeExpressions");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOrMakeExpressions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Block4.Rewrite
System::Linq::Expressions::BlockExpression* System::Linq::Expressions::Block4::Rewrite(System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::ParameterExpression*>* variables, ::ArrayW<System::Linq::Expressions::Expression*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Block4::Rewrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(variables), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BlockExpression*, false>(this, ___internal__method, variables, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.Block5
#include "System/Linq/Expressions/Block5.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Linq.Expressions.ParameterExpression
#include "System/Linq/Expressions/ParameterExpression.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object _arg0
::Il2CppObject*& System::Linq::Expressions::Block5::dyn__arg0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Block5::dyn__arg0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg0"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg1
System::Linq::Expressions::Expression*& System::Linq::Expressions::Block5::dyn__arg1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Block5::dyn__arg1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg1"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg2
System::Linq::Expressions::Expression*& System::Linq::Expressions::Block5::dyn__arg2() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Block5::dyn__arg2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg2"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg3
System::Linq::Expressions::Expression*& System::Linq::Expressions::Block5::dyn__arg3() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Block5::dyn__arg3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg3"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg4
System::Linq::Expressions::Expression*& System::Linq::Expressions::Block5::dyn__arg4() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Block5::dyn__arg4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg4"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.Block5.get_ExpressionCount
int System::Linq::Expressions::Block5::get_ExpressionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Block5::get_ExpressionCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExpressionCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Block5.GetExpression
System::Linq::Expressions::Expression* System::Linq::Expressions::Block5::GetExpression(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Block5::GetExpression");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExpression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.Block5.GetOrMakeExpressions
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>* System::Linq::Expressions::Block5::GetOrMakeExpressions() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Block5::GetOrMakeExpressions");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOrMakeExpressions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Block5.Rewrite
System::Linq::Expressions::BlockExpression* System::Linq::Expressions::Block5::Rewrite(System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::ParameterExpression*>* variables, ::ArrayW<System::Linq::Expressions::Expression*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Block5::Rewrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(variables), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BlockExpression*, false>(this, ___internal__method, variables, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.BlockN
#include "System/Linq/Expressions/BlockN.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Linq.Expressions.ParameterExpression
#include "System/Linq/Expressions/ParameterExpression.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IReadOnlyList`1<System.Linq.Expressions.Expression> _expressions
System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::Expression*>*& System::Linq::Expressions::BlockN::dyn__expressions() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockN::dyn__expressions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_expressions"))->offset;
  return *reinterpret_cast<System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::Expression*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.BlockN.get_ExpressionCount
int System::Linq::Expressions::BlockN::get_ExpressionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockN::get_ExpressionCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExpressionCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BlockN.GetExpression
System::Linq::Expressions::Expression* System::Linq::Expressions::BlockN::GetExpression(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockN::GetExpression");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExpression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.BlockN.GetOrMakeExpressions
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>* System::Linq::Expressions::BlockN::GetOrMakeExpressions() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockN::GetOrMakeExpressions");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOrMakeExpressions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BlockN.Rewrite
System::Linq::Expressions::BlockExpression* System::Linq::Expressions::BlockN::Rewrite(System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::ParameterExpression*>* variables, ::ArrayW<System::Linq::Expressions::Expression*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockN::Rewrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(variables), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BlockExpression*, false>(this, ___internal__method, variables, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.ScopeExpression
#include "System/Linq/Expressions/ScopeExpression.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Linq.Expressions.ParameterExpression
#include "System/Linq/Expressions/ParameterExpression.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IReadOnlyList`1<System.Linq.Expressions.ParameterExpression> _variables
System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::ParameterExpression*>*& System::Linq::Expressions::ScopeExpression::dyn__variables() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ScopeExpression::dyn__variables");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_variables"))->offset;
  return *reinterpret_cast<System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::ParameterExpression*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.ScopeExpression.get_VariablesList
System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::ParameterExpression*>* System::Linq::Expressions::ScopeExpression::get_VariablesList() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ScopeExpression::get_VariablesList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VariablesList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::ParameterExpression*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.ScopeExpression.ReuseOrValidateVariables
System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::ParameterExpression*>* System::Linq::Expressions::ScopeExpression::ReuseOrValidateVariables(System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::ParameterExpression*>* variables) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ScopeExpression::ReuseOrValidateVariables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReuseOrValidateVariables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(variables)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::ParameterExpression*>*, false>(this, ___internal__method, variables);
}
// Autogenerated method: System.Linq.Expressions.ScopeExpression.GetOrMakeVariables
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::ParameterExpression*>* System::Linq::Expressions::ScopeExpression::GetOrMakeVariables() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ScopeExpression::GetOrMakeVariables");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOrMakeVariables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::ParameterExpression*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.Scope1
#include "System/Linq/Expressions/Scope1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Linq.Expressions.ParameterExpression
#include "System/Linq/Expressions/ParameterExpression.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object _body
::Il2CppObject*& System::Linq::Expressions::Scope1::dyn__body() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Scope1::dyn__body");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_body"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.Scope1.get_ExpressionCount
int System::Linq::Expressions::Scope1::get_ExpressionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Scope1::get_ExpressionCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExpressionCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Scope1.GetExpression
System::Linq::Expressions::Expression* System::Linq::Expressions::Scope1::GetExpression(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Scope1::GetExpression");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExpression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.Scope1.GetOrMakeExpressions
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>* System::Linq::Expressions::Scope1::GetOrMakeExpressions() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Scope1::GetOrMakeExpressions");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOrMakeExpressions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Scope1.Rewrite
System::Linq::Expressions::BlockExpression* System::Linq::Expressions::Scope1::Rewrite(System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::ParameterExpression*>* variables, ::ArrayW<System::Linq::Expressions::Expression*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Scope1::Rewrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(variables), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BlockExpression*, false>(this, ___internal__method, variables, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.ScopeN
#include "System/Linq/Expressions/ScopeN.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Linq.Expressions.ParameterExpression
#include "System/Linq/Expressions/ParameterExpression.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IReadOnlyList`1<System.Linq.Expressions.Expression> _body
System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::Expression*>*& System::Linq::Expressions::ScopeN::dyn__body() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ScopeN::dyn__body");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_body"))->offset;
  return *reinterpret_cast<System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::Expression*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.ScopeN.get_Body
System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::Expression*>* System::Linq::Expressions::ScopeN::get_Body() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ScopeN::get_Body");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Body", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::Expression*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.ScopeN.get_ExpressionCount
int System::Linq::Expressions::ScopeN::get_ExpressionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ScopeN::get_ExpressionCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExpressionCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.ScopeN.GetExpression
System::Linq::Expressions::Expression* System::Linq::Expressions::ScopeN::GetExpression(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ScopeN::GetExpression");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExpression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.ScopeN.GetOrMakeExpressions
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>* System::Linq::Expressions::ScopeN::GetOrMakeExpressions() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ScopeN::GetOrMakeExpressions");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOrMakeExpressions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.ScopeN.Rewrite
System::Linq::Expressions::BlockExpression* System::Linq::Expressions::ScopeN::Rewrite(System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::ParameterExpression*>* variables, ::ArrayW<System::Linq::Expressions::Expression*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ScopeN::Rewrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(variables), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BlockExpression*, false>(this, ___internal__method, variables, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.ScopeWithType
#include "System/Linq/Expressions/ScopeWithType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Linq.Expressions.ParameterExpression
#include "System/Linq/Expressions/ParameterExpression.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Type <Type>k__BackingField
System::Type*& System::Linq::Expressions::ScopeWithType::dyn_$Type$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ScopeWithType::dyn_$Type$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Type>k__BackingField"))->offset;
  return *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.ScopeWithType.get_Type
System::Type* System::Linq::Expressions::ScopeWithType::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ScopeWithType::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.ScopeWithType.Rewrite
System::Linq::Expressions::BlockExpression* System::Linq::Expressions::ScopeWithType::Rewrite(System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::ParameterExpression*>* variables, ::ArrayW<System::Linq::Expressions::Expression*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ScopeWithType::Rewrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(variables), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BlockExpression*, false>(this, ___internal__method, variables, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.BlockExpressionList
#include "System/Linq/Expressions/BlockExpressionList.hpp"
// Including type: System.Linq.Expressions.BlockExpressionList/System.Linq.Expressions.<GetEnumerator>d__18
#include "System/Linq/Expressions/BlockExpressionList_-GetEnumerator-d__18.hpp"
// Including type: System.Linq.Expressions.Expression
#include "System/Linq/Expressions/Expression.hpp"
// Including type: System.Linq.Expressions.BlockExpression
#include "System/Linq/Expressions/BlockExpression.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.BlockExpression _block
System::Linq::Expressions::BlockExpression*& System::Linq::Expressions::BlockExpressionList::dyn__block() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpressionList::dyn__block");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_block"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::BlockExpression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg0
System::Linq::Expressions::Expression*& System::Linq::Expressions::BlockExpressionList::dyn__arg0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpressionList::dyn__arg0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg0"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.BlockExpressionList.get_Item
System::Linq::Expressions::Expression* System::Linq::Expressions::BlockExpressionList::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpressionList::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.BlockExpressionList.set_Item
void System::Linq::Expressions::BlockExpressionList::set_Item(int index, System::Linq::Expressions::Expression* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpressionList::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Linq.Expressions.BlockExpressionList.get_Count
int System::Linq::Expressions::BlockExpressionList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpressionList::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BlockExpressionList.get_IsReadOnly
bool System::Linq::Expressions::BlockExpressionList::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpressionList::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BlockExpressionList.IndexOf
int System::Linq::Expressions::BlockExpressionList::IndexOf(System::Linq::Expressions::Expression* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpressionList::IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, item);
}
// Autogenerated method: System.Linq.Expressions.BlockExpressionList.Insert
void System::Linq::Expressions::BlockExpressionList::Insert(int index, System::Linq::Expressions::Expression* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpressionList::Insert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, item);
}
// Autogenerated method: System.Linq.Expressions.BlockExpressionList.RemoveAt
void System::Linq::Expressions::BlockExpressionList::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpressionList::RemoveAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.BlockExpressionList.Add
void System::Linq::Expressions::BlockExpressionList::Add(System::Linq::Expressions::Expression* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpressionList::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, item);
}
// Autogenerated method: System.Linq.Expressions.BlockExpressionList.Clear
void System::Linq::Expressions::BlockExpressionList::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpressionList::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BlockExpressionList.Contains
bool System::Linq::Expressions::BlockExpressionList::Contains(System::Linq::Expressions::Expression* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpressionList::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated method: System.Linq.Expressions.BlockExpressionList.CopyTo
void System::Linq::Expressions::BlockExpressionList::CopyTo(::ArrayW<System::Linq::Expressions::Expression*> array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpressionList::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Linq.Expressions.BlockExpressionList.Remove
bool System::Linq::Expressions::BlockExpressionList::Remove(System::Linq::Expressions::Expression* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpressionList::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, item);
}
// Autogenerated method: System.Linq.Expressions.BlockExpressionList.GetEnumerator
System::Collections::Generic::IEnumerator_1<System::Linq::Expressions::Expression*>* System::Linq::Expressions::BlockExpressionList::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpressionList::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::Generic::IEnumerator_1<System::Linq::Expressions::Expression*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BlockExpressionList.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* System::Linq::Expressions::BlockExpressionList::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpressionList::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.BlockExpressionList/System.Linq.Expressions.<GetEnumerator>d__18
#include "System/Linq/Expressions/BlockExpressionList_-GetEnumerator-d__18.hpp"
// Including type: System.Linq.Expressions.Expression
#include "System/Linq/Expressions/Expression.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Linq.Expressions.Expression <>2__current
System::Linq::Expressions::Expression*& System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Linq.Expressions.BlockExpressionList <>4__this
System::Linq::Expressions::BlockExpressionList*& System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::BlockExpressionList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__1
int& System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18::dyn_$i$5__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18::dyn_$i$5__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.BlockExpressionList/System.Linq.Expressions.<GetEnumerator>d__18.System.Collections.Generic.IEnumerator<System.Linq.Expressions.Expression>.get_Current
System::Linq::Expressions::Expression* System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18::System_Collections_Generic_IEnumerator$System_Linq_Expressions_Expression$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18::System.Collections.Generic.IEnumerator<System.Linq.Expressions.Expression>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Linq.Expressions.Expression>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BlockExpressionList/System.Linq.Expressions.<GetEnumerator>d__18.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BlockExpressionList/System.Linq.Expressions.<GetEnumerator>d__18.System.IDisposable.Dispose
void System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BlockExpressionList/System.Linq.Expressions.<GetEnumerator>d__18.MoveNext
bool System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.BlockExpressionList/System.Linq.Expressions.<GetEnumerator>d__18.System.Collections.IEnumerator.Reset
void System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::BlockExpressionList::$GetEnumerator$d__18::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.CatchBlock
#include "System/Linq/Expressions/CatchBlock.hpp"
// Including type: System.Linq.Expressions.ParameterExpression
#include "System/Linq/Expressions/ParameterExpression.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Linq.Expressions.Expression
#include "System/Linq/Expressions/Expression.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.ParameterExpression <Variable>k__BackingField
System::Linq::Expressions::ParameterExpression*& System::Linq::Expressions::CatchBlock::dyn_$Variable$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CatchBlock::dyn_$Variable$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Variable>k__BackingField"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::ParameterExpression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Type <Test>k__BackingField
System::Type*& System::Linq::Expressions::CatchBlock::dyn_$Test$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CatchBlock::dyn_$Test$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Test>k__BackingField"))->offset;
  return *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression <Body>k__BackingField
System::Linq::Expressions::Expression*& System::Linq::Expressions::CatchBlock::dyn_$Body$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CatchBlock::dyn_$Body$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Body>k__BackingField"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression <Filter>k__BackingField
System::Linq::Expressions::Expression*& System::Linq::Expressions::CatchBlock::dyn_$Filter$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CatchBlock::dyn_$Filter$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Filter>k__BackingField"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.CatchBlock.get_Variable
System::Linq::Expressions::ParameterExpression* System::Linq::Expressions::CatchBlock::get_Variable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CatchBlock::get_Variable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Variable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ParameterExpression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.CatchBlock.get_Test
System::Type* System::Linq::Expressions::CatchBlock::get_Test() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CatchBlock::get_Test");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Test", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.CatchBlock.get_Body
System::Linq::Expressions::Expression* System::Linq::Expressions::CatchBlock::get_Body() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CatchBlock::get_Body");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Body", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.CatchBlock.get_Filter
System::Linq::Expressions::Expression* System::Linq::Expressions::CatchBlock::get_Filter() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CatchBlock::get_Filter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Filter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.CatchBlock.Update
System::Linq::Expressions::CatchBlock* System::Linq::Expressions::CatchBlock::Update(System::Linq::Expressions::ParameterExpression* variable, System::Linq::Expressions::Expression* filter, System::Linq::Expressions::Expression* body) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CatchBlock::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(variable), ::il2cpp_utils::ExtractType(filter), ::il2cpp_utils::ExtractType(body)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::CatchBlock*, false>(this, ___internal__method, variable, filter, body);
}
// Autogenerated method: System.Linq.Expressions.CatchBlock.ToString
::StringW System::Linq::Expressions::CatchBlock::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::CatchBlock::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.ArrayBuilderExtensions
#include "System/Linq/Expressions/ArrayBuilderExtensions.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.AnalyzeTypeIsResult
#include "System/Linq/Expressions/AnalyzeTypeIsResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.AnalyzeTypeIsResult KnownFalse
System::Linq::Expressions::AnalyzeTypeIsResult System::Linq::Expressions::AnalyzeTypeIsResult::_get_KnownFalse() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::AnalyzeTypeIsResult::_get_KnownFalse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::AnalyzeTypeIsResult>("System.Linq.Expressions", "AnalyzeTypeIsResult", "KnownFalse"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.AnalyzeTypeIsResult KnownFalse
void System::Linq::Expressions::AnalyzeTypeIsResult::_set_KnownFalse(System::Linq::Expressions::AnalyzeTypeIsResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::AnalyzeTypeIsResult::_set_KnownFalse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "AnalyzeTypeIsResult", "KnownFalse", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.AnalyzeTypeIsResult KnownTrue
System::Linq::Expressions::AnalyzeTypeIsResult System::Linq::Expressions::AnalyzeTypeIsResult::_get_KnownTrue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::AnalyzeTypeIsResult::_get_KnownTrue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::AnalyzeTypeIsResult>("System.Linq.Expressions", "AnalyzeTypeIsResult", "KnownTrue"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.AnalyzeTypeIsResult KnownTrue
void System::Linq::Expressions::AnalyzeTypeIsResult::_set_KnownTrue(System::Linq::Expressions::AnalyzeTypeIsResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::AnalyzeTypeIsResult::_set_KnownTrue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "AnalyzeTypeIsResult", "KnownTrue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.AnalyzeTypeIsResult KnownAssignable
System::Linq::Expressions::AnalyzeTypeIsResult System::Linq::Expressions::AnalyzeTypeIsResult::_get_KnownAssignable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::AnalyzeTypeIsResult::_get_KnownAssignable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::AnalyzeTypeIsResult>("System.Linq.Expressions", "AnalyzeTypeIsResult", "KnownAssignable"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.AnalyzeTypeIsResult KnownAssignable
void System::Linq::Expressions::AnalyzeTypeIsResult::_set_KnownAssignable(System::Linq::Expressions::AnalyzeTypeIsResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::AnalyzeTypeIsResult::_set_KnownAssignable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "AnalyzeTypeIsResult", "KnownAssignable", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.AnalyzeTypeIsResult Unknown
System::Linq::Expressions::AnalyzeTypeIsResult System::Linq::Expressions::AnalyzeTypeIsResult::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::AnalyzeTypeIsResult::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::AnalyzeTypeIsResult>("System.Linq.Expressions", "AnalyzeTypeIsResult", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.AnalyzeTypeIsResult Unknown
void System::Linq::Expressions::AnalyzeTypeIsResult::_set_Unknown(System::Linq::Expressions::AnalyzeTypeIsResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::AnalyzeTypeIsResult::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "AnalyzeTypeIsResult", "Unknown", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Linq::Expressions::AnalyzeTypeIsResult::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::AnalyzeTypeIsResult::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.ConstantCheck
#include "System/Linq/Expressions/ConstantCheck.hpp"
// Including type: System.Linq.Expressions.AnalyzeTypeIsResult
#include "System/Linq/Expressions/AnalyzeTypeIsResult.hpp"
// Including type: System.Linq.Expressions.TypeBinaryExpression
#include "System/Linq/Expressions/TypeBinaryExpression.hpp"
// Including type: System.Linq.Expressions.Expression
#include "System/Linq/Expressions/Expression.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.ConstantCheck.AnalyzeTypeIs
System::Linq::Expressions::AnalyzeTypeIsResult System::Linq::Expressions::ConstantCheck::AnalyzeTypeIs(System::Linq::Expressions::TypeBinaryExpression* typeIs) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ConstantCheck::AnalyzeTypeIs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "ConstantCheck", "AnalyzeTypeIs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeIs)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::AnalyzeTypeIsResult, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typeIs);
}
// Autogenerated method: System.Linq.Expressions.ConstantCheck.AnalyzeTypeIs
System::Linq::Expressions::AnalyzeTypeIsResult System::Linq::Expressions::ConstantCheck::AnalyzeTypeIs(System::Linq::Expressions::Expression* operand, System::Type* testType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ConstantCheck::AnalyzeTypeIs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "ConstantCheck", "AnalyzeTypeIs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(operand), ::il2cpp_utils::ExtractType(testType)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::AnalyzeTypeIsResult, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, operand, testType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.ConditionalExpression
#include "System/Linq/Expressions/ConditionalExpression.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Linq.Expressions.ExpressionType
#include "System/Linq/Expressions/ExpressionType.hpp"
// Including type: System.Linq.Expressions.ExpressionVisitor
#include "System/Linq/Expressions/ExpressionVisitor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression <Test>k__BackingField
System::Linq::Expressions::Expression*& System::Linq::Expressions::ConditionalExpression::dyn_$Test$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ConditionalExpression::dyn_$Test$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Test>k__BackingField"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression <IfTrue>k__BackingField
System::Linq::Expressions::Expression*& System::Linq::Expressions::ConditionalExpression::dyn_$IfTrue$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ConditionalExpression::dyn_$IfTrue$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IfTrue>k__BackingField"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.ConditionalExpression.get_Test
System::Linq::Expressions::Expression* System::Linq::Expressions::ConditionalExpression::get_Test() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ConditionalExpression::get_Test");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Test", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.ConditionalExpression.get_IfTrue
System::Linq::Expressions::Expression* System::Linq::Expressions::ConditionalExpression::get_IfTrue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ConditionalExpression::get_IfTrue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IfTrue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.ConditionalExpression.get_IfFalse
System::Linq::Expressions::Expression* System::Linq::Expressions::ConditionalExpression::get_IfFalse() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ConditionalExpression::get_IfFalse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IfFalse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.ConditionalExpression.Make
System::Linq::Expressions::ConditionalExpression* System::Linq::Expressions::ConditionalExpression::Make(System::Linq::Expressions::Expression* test, System::Linq::Expressions::Expression* ifTrue, System::Linq::Expressions::Expression* ifFalse, System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ConditionalExpression::Make");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "ConditionalExpression", "Make", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test), ::il2cpp_utils::ExtractType(ifTrue), ::il2cpp_utils::ExtractType(ifFalse), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ConditionalExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, test, ifTrue, ifFalse, type);
}
// Autogenerated method: System.Linq.Expressions.ConditionalExpression.GetFalse
System::Linq::Expressions::Expression* System::Linq::Expressions::ConditionalExpression::GetFalse() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ConditionalExpression::GetFalse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFalse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.ConditionalExpression.Update
System::Linq::Expressions::ConditionalExpression* System::Linq::Expressions::ConditionalExpression::Update(System::Linq::Expressions::Expression* test, System::Linq::Expressions::Expression* ifTrue, System::Linq::Expressions::Expression* ifFalse) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ConditionalExpression::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(test), ::il2cpp_utils::ExtractType(ifTrue), ::il2cpp_utils::ExtractType(ifFalse)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ConditionalExpression*, false>(this, ___internal__method, test, ifTrue, ifFalse);
}
// Autogenerated method: System.Linq.Expressions.ConditionalExpression.get_NodeType
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ConditionalExpression::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ConditionalExpression::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ExpressionType, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.ConditionalExpression.get_Type
System::Type* System::Linq::Expressions::ConditionalExpression::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ConditionalExpression::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.ConditionalExpression.Accept
System::Linq::Expressions::Expression* System::Linq::Expressions::ConditionalExpression::Accept(System::Linq::Expressions::ExpressionVisitor* visitor) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ConditionalExpression::Accept");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visitor)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, visitor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.FullConditionalExpression
#include "System/Linq/Expressions/FullConditionalExpression.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _false
System::Linq::Expressions::Expression*& System::Linq::Expressions::FullConditionalExpression::dyn__false() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::FullConditionalExpression::dyn__false");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_false"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.FullConditionalExpression.GetFalse
System::Linq::Expressions::Expression* System::Linq::Expressions::FullConditionalExpression::GetFalse() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::FullConditionalExpression::GetFalse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFalse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.FullConditionalExpressionWithType
#include "System/Linq/Expressions/FullConditionalExpressionWithType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Type <Type>k__BackingField
System::Type*& System::Linq::Expressions::FullConditionalExpressionWithType::dyn_$Type$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::FullConditionalExpressionWithType::dyn_$Type$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Type>k__BackingField"))->offset;
  return *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.FullConditionalExpressionWithType.get_Type
System::Type* System::Linq::Expressions::FullConditionalExpressionWithType::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::FullConditionalExpressionWithType::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.ConstantExpression
#include "System/Linq/Expressions/ConstantExpression.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Linq.Expressions.ExpressionType
#include "System/Linq/Expressions/ExpressionType.hpp"
// Including type: System.Linq.Expressions.ExpressionVisitor
#include "System/Linq/Expressions/ExpressionVisitor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Object <Value>k__BackingField
::Il2CppObject*& System::Linq::Expressions::ConstantExpression::dyn_$Value$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ConstantExpression::dyn_$Value$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Value>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.ConstantExpression.get_Value
::Il2CppObject* System::Linq::Expressions::ConstantExpression::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ConstantExpression::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.ConstantExpression.get_Type
System::Type* System::Linq::Expressions::ConstantExpression::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ConstantExpression::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.ConstantExpression.get_NodeType
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ConstantExpression::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ConstantExpression::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ExpressionType, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.ConstantExpression.Accept
System::Linq::Expressions::Expression* System::Linq::Expressions::ConstantExpression::Accept(System::Linq::Expressions::ExpressionVisitor* visitor) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ConstantExpression::Accept");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visitor)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, visitor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.TypedConstantExpression
#include "System/Linq/Expressions/TypedConstantExpression.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Type <Type>k__BackingField
System::Type*& System::Linq::Expressions::TypedConstantExpression::dyn_$Type$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::TypedConstantExpression::dyn_$Type$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Type>k__BackingField"))->offset;
  return *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.TypedConstantExpression.get_Type
System::Type* System::Linq::Expressions::TypedConstantExpression::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::TypedConstantExpression::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.DebugInfoExpression
#include "System/Linq/Expressions/DebugInfoExpression.hpp"
// Including type: System.Linq.Expressions.SymbolDocumentInfo
#include "System/Linq/Expressions/SymbolDocumentInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.SymbolDocumentInfo <Document>k__BackingField
System::Linq::Expressions::SymbolDocumentInfo*& System::Linq::Expressions::DebugInfoExpression::dyn_$Document$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::DebugInfoExpression::dyn_$Document$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Document>k__BackingField"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::SymbolDocumentInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.DebugInfoExpression.get_StartLine
int System::Linq::Expressions::DebugInfoExpression::get_StartLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::DebugInfoExpression::get_StartLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StartLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.DebugInfoExpression.get_EndLine
int System::Linq::Expressions::DebugInfoExpression::get_EndLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::DebugInfoExpression::get_EndLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EndLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.DebugInfoExpression.get_Document
System::Linq::Expressions::SymbolDocumentInfo* System::Linq::Expressions::DebugInfoExpression::get_Document() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::DebugInfoExpression::get_Document");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Document", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::SymbolDocumentInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.DebugInfoExpression.get_IsClear
bool System::Linq::Expressions::DebugInfoExpression::get_IsClear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::DebugInfoExpression::get_IsClear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsClear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.DefaultExpression
#include "System/Linq/Expressions/DefaultExpression.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Linq.Expressions.ExpressionType
#include "System/Linq/Expressions/ExpressionType.hpp"
// Including type: System.Linq.Expressions.ExpressionVisitor
#include "System/Linq/Expressions/ExpressionVisitor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Type <Type>k__BackingField
System::Type*& System::Linq::Expressions::DefaultExpression::dyn_$Type$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::DefaultExpression::dyn_$Type$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Type>k__BackingField"))->offset;
  return *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.DefaultExpression.get_Type
System::Type* System::Linq::Expressions::DefaultExpression::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::DefaultExpression::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.DefaultExpression.get_NodeType
System::Linq::Expressions::ExpressionType System::Linq::Expressions::DefaultExpression::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::DefaultExpression::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ExpressionType, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.DefaultExpression.Accept
System::Linq::Expressions::Expression* System::Linq::Expressions::DefaultExpression::Accept(System::Linq::Expressions::ExpressionVisitor* visitor) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::DefaultExpression::Accept");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visitor)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, visitor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.ElementInit
#include "System/Linq/Expressions/ElementInit.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Linq.Expressions.Expression
#include "System/Linq/Expressions/Expression.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Reflection.MethodInfo <AddMethod>k__BackingField
System::Reflection::MethodInfo*& System::Linq::Expressions::ElementInit::dyn_$AddMethod$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ElementInit::dyn_$AddMethod$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AddMethod>k__BackingField"))->offset;
  return *reinterpret_cast<System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.ObjectModel.ReadOnlyCollection`1<System.Linq.Expressions.Expression> <Arguments>k__BackingField
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>*& System::Linq::Expressions::ElementInit::dyn_$Arguments$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ElementInit::dyn_$Arguments$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Arguments>k__BackingField"))->offset;
  return *reinterpret_cast<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.ElementInit.get_AddMethod
System::Reflection::MethodInfo* System::Linq::Expressions::ElementInit::get_AddMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ElementInit::get_AddMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AddMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Reflection::MethodInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.ElementInit.get_Arguments
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>* System::Linq::Expressions::ElementInit::get_Arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ElementInit::get_Arguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Arguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.ElementInit.get_ArgumentCount
int System::Linq::Expressions::ElementInit::get_ArgumentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ElementInit::get_ArgumentCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArgumentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.ElementInit.GetArgument
System::Linq::Expressions::Expression* System::Linq::Expressions::ElementInit::GetArgument(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ElementInit::GetArgument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.Error
#include "System/Linq/Expressions/Error.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Linq.Expressions.ExpressionType
#include "System/Linq/Expressions/ExpressionType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.Error.ReducibleMustOverrideReduce
System::Exception* System::Linq::Expressions::Error::ReducibleMustOverrideReduce() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::ReducibleMustOverrideReduce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "ReducibleMustOverrideReduce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Error.InvalidMetaObjectCreated
System::Exception* System::Linq::Expressions::Error::InvalidMetaObjectCreated(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::InvalidMetaObjectCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "InvalidMetaObjectCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Error.AmbiguousMatchInExpandoObject
System::Exception* System::Linq::Expressions::Error::AmbiguousMatchInExpandoObject(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::AmbiguousMatchInExpandoObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "AmbiguousMatchInExpandoObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Error.SameKeyExistsInExpando
System::Exception* System::Linq::Expressions::Error::SameKeyExistsInExpando(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::SameKeyExistsInExpando");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "SameKeyExistsInExpando", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, key);
}
// Autogenerated method: System.Linq.Expressions.Error.KeyDoesNotExistInExpando
System::Exception* System::Linq::Expressions::Error::KeyDoesNotExistInExpando(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::KeyDoesNotExistInExpando");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "KeyDoesNotExistInExpando", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Error.CollectionModifiedWhileEnumerating
System::Exception* System::Linq::Expressions::Error::CollectionModifiedWhileEnumerating() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::CollectionModifiedWhileEnumerating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "CollectionModifiedWhileEnumerating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Error.CollectionReadOnly
System::Exception* System::Linq::Expressions::Error::CollectionReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::CollectionReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "CollectionReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Error.MustReduceToDifferent
System::Exception* System::Linq::Expressions::Error::MustReduceToDifferent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::MustReduceToDifferent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "MustReduceToDifferent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Error.BinderNotCompatibleWithCallSite
System::Exception* System::Linq::Expressions::Error::BinderNotCompatibleWithCallSite(::Il2CppObject* p0, ::Il2CppObject* p1, ::Il2CppObject* p2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::BinderNotCompatibleWithCallSite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "BinderNotCompatibleWithCallSite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, p2);
}
// Autogenerated method: System.Linq.Expressions.Error.DynamicBindingNeedsRestrictions
System::Exception* System::Linq::Expressions::Error::DynamicBindingNeedsRestrictions(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::DynamicBindingNeedsRestrictions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "DynamicBindingNeedsRestrictions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Error.DynamicObjectResultNotAssignable
System::Exception* System::Linq::Expressions::Error::DynamicObjectResultNotAssignable(::Il2CppObject* p0, ::Il2CppObject* p1, ::Il2CppObject* p2, ::Il2CppObject* p3) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::DynamicObjectResultNotAssignable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "DynamicObjectResultNotAssignable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(p3)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, p2, p3);
}
// Autogenerated method: System.Linq.Expressions.Error.DynamicBinderResultNotAssignable
System::Exception* System::Linq::Expressions::Error::DynamicBinderResultNotAssignable(::Il2CppObject* p0, ::Il2CppObject* p1, ::Il2CppObject* p2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::DynamicBinderResultNotAssignable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "DynamicBinderResultNotAssignable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, p2);
}
// Autogenerated method: System.Linq.Expressions.Error.BindingCannotBeNull
System::Exception* System::Linq::Expressions::Error::BindingCannotBeNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::BindingCannotBeNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "BindingCannotBeNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Error.ReducedNotCompatible
System::Exception* System::Linq::Expressions::Error::ReducedNotCompatible() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::ReducedNotCompatible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "ReducedNotCompatible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Error.SetterHasNoParams
System::Exception* System::Linq::Expressions::Error::SetterHasNoParams(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::SetterHasNoParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "SetterHasNoParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.PropertyCannotHaveRefType
System::Exception* System::Linq::Expressions::Error::PropertyCannotHaveRefType(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::PropertyCannotHaveRefType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "PropertyCannotHaveRefType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.IndexesOfSetGetMustMatch
System::Exception* System::Linq::Expressions::Error::IndexesOfSetGetMustMatch(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::IndexesOfSetGetMustMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "IndexesOfSetGetMustMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.TypeParameterIsNotDelegate
System::Exception* System::Linq::Expressions::Error::TypeParameterIsNotDelegate(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::TypeParameterIsNotDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "TypeParameterIsNotDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Error.FirstArgumentMustBeCallSite
System::Exception* System::Linq::Expressions::Error::FirstArgumentMustBeCallSite() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::FirstArgumentMustBeCallSite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "FirstArgumentMustBeCallSite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Error.AccessorsCannotHaveVarArgs
System::Exception* System::Linq::Expressions::Error::AccessorsCannotHaveVarArgs(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::AccessorsCannotHaveVarArgs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "AccessorsCannotHaveVarArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.AccessorsCannotHaveByRefArgs
System::Exception* System::Linq::Expressions::Error::AccessorsCannotHaveByRefArgs(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::AccessorsCannotHaveByRefArgs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "AccessorsCannotHaveByRefArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.AccessorsCannotHaveByRefArgs
System::Exception* System::Linq::Expressions::Error::AccessorsCannotHaveByRefArgs(::StringW paramName, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::AccessorsCannotHaveByRefArgs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "AccessorsCannotHaveByRefArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName, index);
}
// Autogenerated method: System.Linq.Expressions.Error.TypeMustBeDerivedFromSystemDelegate
System::Exception* System::Linq::Expressions::Error::TypeMustBeDerivedFromSystemDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::TypeMustBeDerivedFromSystemDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "TypeMustBeDerivedFromSystemDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Error.NoOrInvalidRuleProduced
System::Exception* System::Linq::Expressions::Error::NoOrInvalidRuleProduced() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::NoOrInvalidRuleProduced");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "NoOrInvalidRuleProduced", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Error.BoundsCannotBeLessThanOne
System::Exception* System::Linq::Expressions::Error::BoundsCannotBeLessThanOne(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::BoundsCannotBeLessThanOne");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "BoundsCannotBeLessThanOne", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.TypeMustNotBeByRef
System::Exception* System::Linq::Expressions::Error::TypeMustNotBeByRef(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::TypeMustNotBeByRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "TypeMustNotBeByRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.TypeMustNotBePointer
System::Exception* System::Linq::Expressions::Error::TypeMustNotBePointer(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::TypeMustNotBePointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "TypeMustNotBePointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.SetterMustBeVoid
System::Exception* System::Linq::Expressions::Error::SetterMustBeVoid(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::SetterMustBeVoid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "SetterMustBeVoid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.PropertyTypeMustMatchGetter
System::Exception* System::Linq::Expressions::Error::PropertyTypeMustMatchGetter(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::PropertyTypeMustMatchGetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "PropertyTypeMustMatchGetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.PropertyTypeMustMatchSetter
System::Exception* System::Linq::Expressions::Error::PropertyTypeMustMatchSetter(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::PropertyTypeMustMatchSetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "PropertyTypeMustMatchSetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.BothAccessorsMustBeStatic
System::Exception* System::Linq::Expressions::Error::BothAccessorsMustBeStatic(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::BothAccessorsMustBeStatic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "BothAccessorsMustBeStatic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.OnlyStaticFieldsHaveNullInstance
System::Exception* System::Linq::Expressions::Error::OnlyStaticFieldsHaveNullInstance(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::OnlyStaticFieldsHaveNullInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "OnlyStaticFieldsHaveNullInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.OnlyStaticPropertiesHaveNullInstance
System::Exception* System::Linq::Expressions::Error::OnlyStaticPropertiesHaveNullInstance(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::OnlyStaticPropertiesHaveNullInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "OnlyStaticPropertiesHaveNullInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.OnlyStaticMethodsHaveNullInstance
System::Exception* System::Linq::Expressions::Error::OnlyStaticMethodsHaveNullInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::OnlyStaticMethodsHaveNullInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "OnlyStaticMethodsHaveNullInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Error.PropertyTypeCannotBeVoid
System::Exception* System::Linq::Expressions::Error::PropertyTypeCannotBeVoid(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::PropertyTypeCannotBeVoid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "PropertyTypeCannotBeVoid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.InvalidUnboxType
System::Exception* System::Linq::Expressions::Error::InvalidUnboxType(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::InvalidUnboxType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "InvalidUnboxType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.ExpressionMustBeWriteable
System::Exception* System::Linq::Expressions::Error::ExpressionMustBeWriteable(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::ExpressionMustBeWriteable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "ExpressionMustBeWriteable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.ArgumentMustNotHaveValueType
System::Exception* System::Linq::Expressions::Error::ArgumentMustNotHaveValueType(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::ArgumentMustNotHaveValueType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "ArgumentMustNotHaveValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.MustBeReducible
System::Exception* System::Linq::Expressions::Error::MustBeReducible() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::MustBeReducible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "MustBeReducible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Error.LabelMustBeVoidOrHaveExpression
System::Exception* System::Linq::Expressions::Error::LabelMustBeVoidOrHaveExpression(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::LabelMustBeVoidOrHaveExpression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "LabelMustBeVoidOrHaveExpression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.LabelTypeMustBeVoid
System::Exception* System::Linq::Expressions::Error::LabelTypeMustBeVoid(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::LabelTypeMustBeVoid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "LabelTypeMustBeVoid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.QuotedExpressionMustBeLambda
System::Exception* System::Linq::Expressions::Error::QuotedExpressionMustBeLambda(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::QuotedExpressionMustBeLambda");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "QuotedExpressionMustBeLambda", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.VariableMustNotBeByRef
System::Exception* System::Linq::Expressions::Error::VariableMustNotBeByRef(::Il2CppObject* p0, ::Il2CppObject* p1, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::VariableMustNotBeByRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "VariableMustNotBeByRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.VariableMustNotBeByRef
System::Exception* System::Linq::Expressions::Error::VariableMustNotBeByRef(::Il2CppObject* p0, ::Il2CppObject* p1, ::StringW paramName, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::VariableMustNotBeByRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "VariableMustNotBeByRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(paramName), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, paramName, index);
}
// Autogenerated method: System.Linq.Expressions.Error.DuplicateVariable
System::Exception* System::Linq::Expressions::Error::DuplicateVariable(::Il2CppObject* p0, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::DuplicateVariable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "DuplicateVariable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.DuplicateVariable
System::Exception* System::Linq::Expressions::Error::DuplicateVariable(::Il2CppObject* p0, ::StringW paramName, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::DuplicateVariable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "DuplicateVariable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(paramName), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, paramName, index);
}
// Autogenerated method: System.Linq.Expressions.Error.FaultCannotHaveCatchOrFinally
System::Exception* System::Linq::Expressions::Error::FaultCannotHaveCatchOrFinally(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::FaultCannotHaveCatchOrFinally");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "FaultCannotHaveCatchOrFinally", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.TryMustHaveCatchFinallyOrFault
System::Exception* System::Linq::Expressions::Error::TryMustHaveCatchFinallyOrFault() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::TryMustHaveCatchFinallyOrFault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "TryMustHaveCatchFinallyOrFault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Error.BodyOfCatchMustHaveSameTypeAsBodyOfTry
System::Exception* System::Linq::Expressions::Error::BodyOfCatchMustHaveSameTypeAsBodyOfTry() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::BodyOfCatchMustHaveSameTypeAsBodyOfTry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "BodyOfCatchMustHaveSameTypeAsBodyOfTry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Error.ExtensionNodeMustOverrideProperty
System::Exception* System::Linq::Expressions::Error::ExtensionNodeMustOverrideProperty(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::ExtensionNodeMustOverrideProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "ExtensionNodeMustOverrideProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Error.UserDefinedOperatorMustBeStatic
System::Exception* System::Linq::Expressions::Error::UserDefinedOperatorMustBeStatic(::Il2CppObject* p0, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::UserDefinedOperatorMustBeStatic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "UserDefinedOperatorMustBeStatic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.UserDefinedOperatorMustNotBeVoid
System::Exception* System::Linq::Expressions::Error::UserDefinedOperatorMustNotBeVoid(::Il2CppObject* p0, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::UserDefinedOperatorMustNotBeVoid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "UserDefinedOperatorMustNotBeVoid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.CoercionOperatorNotDefined
System::Exception* System::Linq::Expressions::Error::CoercionOperatorNotDefined(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::CoercionOperatorNotDefined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "CoercionOperatorNotDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Error.UnaryOperatorNotDefined
System::Exception* System::Linq::Expressions::Error::UnaryOperatorNotDefined(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::UnaryOperatorNotDefined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "UnaryOperatorNotDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Error.BinaryOperatorNotDefined
System::Exception* System::Linq::Expressions::Error::BinaryOperatorNotDefined(::Il2CppObject* p0, ::Il2CppObject* p1, ::Il2CppObject* p2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::BinaryOperatorNotDefined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "BinaryOperatorNotDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, p2);
}
// Autogenerated method: System.Linq.Expressions.Error.ReferenceEqualityNotDefined
System::Exception* System::Linq::Expressions::Error::ReferenceEqualityNotDefined(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::ReferenceEqualityNotDefined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "ReferenceEqualityNotDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Error.OperandTypesDoNotMatchParameters
System::Exception* System::Linq::Expressions::Error::OperandTypesDoNotMatchParameters(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::OperandTypesDoNotMatchParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "OperandTypesDoNotMatchParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Error.OverloadOperatorTypeDoesNotMatchConversionType
System::Exception* System::Linq::Expressions::Error::OverloadOperatorTypeDoesNotMatchConversionType(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::OverloadOperatorTypeDoesNotMatchConversionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "OverloadOperatorTypeDoesNotMatchConversionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Error.ConversionIsNotSupportedForArithmeticTypes
System::Exception* System::Linq::Expressions::Error::ConversionIsNotSupportedForArithmeticTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::ConversionIsNotSupportedForArithmeticTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "ConversionIsNotSupportedForArithmeticTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Error.ArgumentMustBeArray
System::Exception* System::Linq::Expressions::Error::ArgumentMustBeArray(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::ArgumentMustBeArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "ArgumentMustBeArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.ArgumentMustBeBoolean
System::Exception* System::Linq::Expressions::Error::ArgumentMustBeBoolean(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::ArgumentMustBeBoolean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "ArgumentMustBeBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.ArgumentMustBeInteger
System::Exception* System::Linq::Expressions::Error::ArgumentMustBeInteger(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::ArgumentMustBeInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "ArgumentMustBeInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.ArgumentMustBeInteger
System::Exception* System::Linq::Expressions::Error::ArgumentMustBeInteger(::StringW paramName, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::ArgumentMustBeInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "ArgumentMustBeInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName, index);
}
// Autogenerated method: System.Linq.Expressions.Error.ArgumentMustBeArrayIndexType
System::Exception* System::Linq::Expressions::Error::ArgumentMustBeArrayIndexType(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::ArgumentMustBeArrayIndexType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "ArgumentMustBeArrayIndexType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.ArgumentMustBeSingleDimensionalArrayType
System::Exception* System::Linq::Expressions::Error::ArgumentMustBeSingleDimensionalArrayType(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::ArgumentMustBeSingleDimensionalArrayType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "ArgumentMustBeSingleDimensionalArrayType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.ArgumentTypesMustMatch
System::Exception* System::Linq::Expressions::Error::ArgumentTypesMustMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::ArgumentTypesMustMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "ArgumentTypesMustMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Error.CannotAutoInitializeValueTypeMemberThroughProperty
System::Exception* System::Linq::Expressions::Error::CannotAutoInitializeValueTypeMemberThroughProperty(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::CannotAutoInitializeValueTypeMemberThroughProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "CannotAutoInitializeValueTypeMemberThroughProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Error.IncorrectTypeForTypeAs
System::Exception* System::Linq::Expressions::Error::IncorrectTypeForTypeAs(::Il2CppObject* p0, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::IncorrectTypeForTypeAs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "IncorrectTypeForTypeAs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.CoalesceUsedOnNonNullType
System::Exception* System::Linq::Expressions::Error::CoalesceUsedOnNonNullType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::CoalesceUsedOnNonNullType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "CoalesceUsedOnNonNullType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Error.ExpressionTypeCannotInitializeArrayType
System::Exception* System::Linq::Expressions::Error::ExpressionTypeCannotInitializeArrayType(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::ExpressionTypeCannotInitializeArrayType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "ExpressionTypeCannotInitializeArrayType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Error.ExpressionTypeDoesNotMatchReturn
System::Exception* System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchReturn(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchReturn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "ExpressionTypeDoesNotMatchReturn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Error.ExpressionTypeDoesNotMatchAssignment
System::Exception* System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchAssignment(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchAssignment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "ExpressionTypeDoesNotMatchAssignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Error.ExpressionTypeDoesNotMatchLabel
System::Exception* System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchLabel(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchLabel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "ExpressionTypeDoesNotMatchLabel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Error.ExpressionTypeNotInvocable
System::Exception* System::Linq::Expressions::Error::ExpressionTypeNotInvocable(::Il2CppObject* p0, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::ExpressionTypeNotInvocable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "ExpressionTypeNotInvocable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.InstanceFieldNotDefinedForType
System::Exception* System::Linq::Expressions::Error::InstanceFieldNotDefinedForType(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::InstanceFieldNotDefinedForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "InstanceFieldNotDefinedForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Error.FieldInfoNotDefinedForType
System::Exception* System::Linq::Expressions::Error::FieldInfoNotDefinedForType(::Il2CppObject* p0, ::Il2CppObject* p1, ::Il2CppObject* p2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::FieldInfoNotDefinedForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "FieldInfoNotDefinedForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, p2);
}
// Autogenerated method: System.Linq.Expressions.Error.IncorrectNumberOfIndexes
System::Exception* System::Linq::Expressions::Error::IncorrectNumberOfIndexes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::IncorrectNumberOfIndexes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "IncorrectNumberOfIndexes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Error.IncorrectNumberOfLambdaDeclarationParameters
System::Exception* System::Linq::Expressions::Error::IncorrectNumberOfLambdaDeclarationParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::IncorrectNumberOfLambdaDeclarationParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "IncorrectNumberOfLambdaDeclarationParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Error.LambdaTypeMustBeDerivedFromSystemDelegate
System::Exception* System::Linq::Expressions::Error::LambdaTypeMustBeDerivedFromSystemDelegate(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::LambdaTypeMustBeDerivedFromSystemDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "LambdaTypeMustBeDerivedFromSystemDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.MemberNotFieldOrProperty
System::Exception* System::Linq::Expressions::Error::MemberNotFieldOrProperty(::Il2CppObject* p0, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::MemberNotFieldOrProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "MemberNotFieldOrProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.MethodContainsGenericParameters
System::Exception* System::Linq::Expressions::Error::MethodContainsGenericParameters(::Il2CppObject* p0, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::MethodContainsGenericParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "MethodContainsGenericParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.MethodIsGeneric
System::Exception* System::Linq::Expressions::Error::MethodIsGeneric(::Il2CppObject* p0, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::MethodIsGeneric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "MethodIsGeneric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.PropertyDoesNotHaveAccessor
System::Exception* System::Linq::Expressions::Error::PropertyDoesNotHaveAccessor(::Il2CppObject* p0, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::PropertyDoesNotHaveAccessor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "PropertyDoesNotHaveAccessor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.ParameterExpressionNotValidAsDelegate
System::Exception* System::Linq::Expressions::Error::ParameterExpressionNotValidAsDelegate(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::ParameterExpressionNotValidAsDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "ParameterExpressionNotValidAsDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Error.PropertyNotDefinedForType
System::Exception* System::Linq::Expressions::Error::PropertyNotDefinedForType(::Il2CppObject* p0, ::Il2CppObject* p1, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::PropertyNotDefinedForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "PropertyNotDefinedForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.InstancePropertyNotDefinedForType
System::Exception* System::Linq::Expressions::Error::InstancePropertyNotDefinedForType(::Il2CppObject* p0, ::Il2CppObject* p1, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::InstancePropertyNotDefinedForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "InstancePropertyNotDefinedForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.InstanceAndMethodTypeMismatch
System::Exception* System::Linq::Expressions::Error::InstanceAndMethodTypeMismatch(::Il2CppObject* p0, ::Il2CppObject* p1, ::Il2CppObject* p2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::InstanceAndMethodTypeMismatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "InstanceAndMethodTypeMismatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, p2);
}
// Autogenerated method: System.Linq.Expressions.Error.UnhandledBinary
System::Exception* System::Linq::Expressions::Error::UnhandledBinary(::Il2CppObject* p0, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::UnhandledBinary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "UnhandledBinary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.UnhandledUnary
System::Exception* System::Linq::Expressions::Error::UnhandledUnary(::Il2CppObject* p0, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::UnhandledUnary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "UnhandledUnary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.UserDefinedOpMustHaveConsistentTypes
System::Exception* System::Linq::Expressions::Error::UserDefinedOpMustHaveConsistentTypes(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::UserDefinedOpMustHaveConsistentTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "UserDefinedOpMustHaveConsistentTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Error.UserDefinedOpMustHaveValidReturnType
System::Exception* System::Linq::Expressions::Error::UserDefinedOpMustHaveValidReturnType(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::UserDefinedOpMustHaveValidReturnType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "UserDefinedOpMustHaveValidReturnType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Error.LogicalOperatorMustHaveBooleanOperators
System::Exception* System::Linq::Expressions::Error::LogicalOperatorMustHaveBooleanOperators(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::LogicalOperatorMustHaveBooleanOperators");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "LogicalOperatorMustHaveBooleanOperators", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Error.MethodWithArgsDoesNotExistOnType
System::Exception* System::Linq::Expressions::Error::MethodWithArgsDoesNotExistOnType(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::MethodWithArgsDoesNotExistOnType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "MethodWithArgsDoesNotExistOnType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Error.GenericMethodWithArgsDoesNotExistOnType
System::Exception* System::Linq::Expressions::Error::GenericMethodWithArgsDoesNotExistOnType(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::GenericMethodWithArgsDoesNotExistOnType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "GenericMethodWithArgsDoesNotExistOnType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Error.MethodWithMoreThanOneMatch
System::Exception* System::Linq::Expressions::Error::MethodWithMoreThanOneMatch(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::MethodWithMoreThanOneMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "MethodWithMoreThanOneMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Error.ArgumentCannotBeOfTypeVoid
System::Exception* System::Linq::Expressions::Error::ArgumentCannotBeOfTypeVoid(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::ArgumentCannotBeOfTypeVoid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "ArgumentCannotBeOfTypeVoid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.OutOfRange
System::Exception* System::Linq::Expressions::Error::OutOfRange(::StringW paramName, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::OutOfRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "OutOfRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName, p1);
}
// Autogenerated method: System.Linq.Expressions.Error.LabelTargetAlreadyDefined
System::Exception* System::Linq::Expressions::Error::LabelTargetAlreadyDefined(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::LabelTargetAlreadyDefined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "LabelTargetAlreadyDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Error.LabelTargetUndefined
System::Exception* System::Linq::Expressions::Error::LabelTargetUndefined(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::LabelTargetUndefined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "LabelTargetUndefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Error.ControlCannotLeaveFinally
System::Exception* System::Linq::Expressions::Error::ControlCannotLeaveFinally() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::ControlCannotLeaveFinally");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "ControlCannotLeaveFinally", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Error.ControlCannotLeaveFilterTest
System::Exception* System::Linq::Expressions::Error::ControlCannotLeaveFilterTest() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::ControlCannotLeaveFilterTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "ControlCannotLeaveFilterTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Error.AmbiguousJump
System::Exception* System::Linq::Expressions::Error::AmbiguousJump(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::AmbiguousJump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "AmbiguousJump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Error.ControlCannotEnterTry
System::Exception* System::Linq::Expressions::Error::ControlCannotEnterTry() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::ControlCannotEnterTry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "ControlCannotEnterTry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Error.ControlCannotEnterExpression
System::Exception* System::Linq::Expressions::Error::ControlCannotEnterExpression() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::ControlCannotEnterExpression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "ControlCannotEnterExpression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Error.NonLocalJumpWithValue
System::Exception* System::Linq::Expressions::Error::NonLocalJumpWithValue(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::NonLocalJumpWithValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "NonLocalJumpWithValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Error.InvalidLvalue
System::Exception* System::Linq::Expressions::Error::InvalidLvalue(System::Linq::Expressions::ExpressionType p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::InvalidLvalue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "InvalidLvalue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Error.RethrowRequiresCatch
System::Exception* System::Linq::Expressions::Error::RethrowRequiresCatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::RethrowRequiresCatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "RethrowRequiresCatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Error.MustRewriteToSameNode
System::Exception* System::Linq::Expressions::Error::MustRewriteToSameNode(::Il2CppObject* p0, ::Il2CppObject* p1, ::Il2CppObject* p2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::MustRewriteToSameNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "MustRewriteToSameNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, p2);
}
// Autogenerated method: System.Linq.Expressions.Error.MustRewriteChildToSameType
System::Exception* System::Linq::Expressions::Error::MustRewriteChildToSameType(::Il2CppObject* p0, ::Il2CppObject* p1, ::Il2CppObject* p2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::MustRewriteChildToSameType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "MustRewriteChildToSameType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, p2);
}
// Autogenerated method: System.Linq.Expressions.Error.MustRewriteWithoutMethod
System::Exception* System::Linq::Expressions::Error::MustRewriteWithoutMethod(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::MustRewriteWithoutMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "MustRewriteWithoutMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Error.ArgumentOutOfRange
System::Exception* System::Linq::Expressions::Error::ArgumentOutOfRange(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::ArgumentOutOfRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "ArgumentOutOfRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.NotSupported
System::Exception* System::Linq::Expressions::Error::NotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::NotSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "NotSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Error.NonAbstractConstructorRequired
System::Exception* System::Linq::Expressions::Error::NonAbstractConstructorRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::NonAbstractConstructorRequired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "NonAbstractConstructorRequired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Error.InvalidProgram
System::Exception* System::Linq::Expressions::Error::InvalidProgram() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::InvalidProgram");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "InvalidProgram", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Error.EnumerationIsDone
System::Exception* System::Linq::Expressions::Error::EnumerationIsDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::EnumerationIsDone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "EnumerationIsDone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Error.TypeContainsGenericParameters
System::Exception* System::Linq::Expressions::Error::TypeContainsGenericParameters(::Il2CppObject* p0, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::TypeContainsGenericParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "TypeContainsGenericParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.TypeContainsGenericParameters
System::Exception* System::Linq::Expressions::Error::TypeContainsGenericParameters(::Il2CppObject* p0, ::StringW paramName, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::TypeContainsGenericParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "TypeContainsGenericParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(paramName), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, paramName, index);
}
// Autogenerated method: System.Linq.Expressions.Error.TypeIsGeneric
System::Exception* System::Linq::Expressions::Error::TypeIsGeneric(::Il2CppObject* p0, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::TypeIsGeneric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "TypeIsGeneric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.TypeIsGeneric
System::Exception* System::Linq::Expressions::Error::TypeIsGeneric(::Il2CppObject* p0, ::StringW paramName, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::TypeIsGeneric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "TypeIsGeneric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(paramName), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, paramName, index);
}
// Autogenerated method: System.Linq.Expressions.Error.IncorrectNumberOfConstructorArguments
System::Exception* System::Linq::Expressions::Error::IncorrectNumberOfConstructorArguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::IncorrectNumberOfConstructorArguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "IncorrectNumberOfConstructorArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Error.ExpressionTypeDoesNotMatchMethodParameter
System::Exception* System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchMethodParameter(::Il2CppObject* p0, ::Il2CppObject* p1, ::Il2CppObject* p2, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchMethodParameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "ExpressionTypeDoesNotMatchMethodParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, p2, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.ExpressionTypeDoesNotMatchMethodParameter
System::Exception* System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchMethodParameter(::Il2CppObject* p0, ::Il2CppObject* p1, ::Il2CppObject* p2, ::StringW paramName, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchMethodParameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "ExpressionTypeDoesNotMatchMethodParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(paramName), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, p2, paramName, index);
}
// Autogenerated method: System.Linq.Expressions.Error.ExpressionTypeDoesNotMatchParameter
System::Exception* System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchParameter(::Il2CppObject* p0, ::Il2CppObject* p1, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchParameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "ExpressionTypeDoesNotMatchParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.ExpressionTypeDoesNotMatchParameter
System::Exception* System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchParameter(::Il2CppObject* p0, ::Il2CppObject* p1, ::StringW paramName, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchParameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "ExpressionTypeDoesNotMatchParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(paramName), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, paramName, index);
}
// Autogenerated method: System.Linq.Expressions.Error.IncorrectNumberOfLambdaArguments
System::Exception* System::Linq::Expressions::Error::IncorrectNumberOfLambdaArguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::IncorrectNumberOfLambdaArguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "IncorrectNumberOfLambdaArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Error.IncorrectNumberOfMethodCallArguments
System::Exception* System::Linq::Expressions::Error::IncorrectNumberOfMethodCallArguments(::Il2CppObject* p0, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::IncorrectNumberOfMethodCallArguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "IncorrectNumberOfMethodCallArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.ExpressionTypeDoesNotMatchConstructorParameter
System::Exception* System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchConstructorParameter(::Il2CppObject* p0, ::Il2CppObject* p1, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchConstructorParameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "ExpressionTypeDoesNotMatchConstructorParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.ExpressionTypeDoesNotMatchConstructorParameter
System::Exception* System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchConstructorParameter(::Il2CppObject* p0, ::Il2CppObject* p1, ::StringW paramName, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::ExpressionTypeDoesNotMatchConstructorParameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "ExpressionTypeDoesNotMatchConstructorParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(paramName), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, paramName, index);
}
// Autogenerated method: System.Linq.Expressions.Error.ExpressionMustBeReadable
System::Exception* System::Linq::Expressions::Error::ExpressionMustBeReadable(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::ExpressionMustBeReadable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "ExpressionMustBeReadable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.ExpressionMustBeReadable
System::Exception* System::Linq::Expressions::Error::ExpressionMustBeReadable(::StringW paramName, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::ExpressionMustBeReadable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "ExpressionMustBeReadable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName, index);
}
// Autogenerated method: System.Linq.Expressions.Error.InvalidArgumentValue
System::Exception* System::Linq::Expressions::Error::InvalidArgumentValue(::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::InvalidArgumentValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "InvalidArgumentValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.InvalidNullValue
System::Exception* System::Linq::Expressions::Error::InvalidNullValue(System::Type* type, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::InvalidNullValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "InvalidNullValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.InvalidTypeException
System::Exception* System::Linq::Expressions::Error::InvalidTypeException(::Il2CppObject* value, System::Type* type, ::StringW paramName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::InvalidTypeException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "InvalidTypeException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(paramName)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Exception*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value, type, paramName);
}
// Autogenerated method: System.Linq.Expressions.Error.GetParamName
::StringW System::Linq::Expressions::Error::GetParamName(::StringW paramName, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Error::GetParamName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Error", "GetParamName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paramName), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, paramName, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.ExpressionStringBuilder
#include "System/Linq/Expressions/ExpressionStringBuilder.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Linq.Expressions.LabelTarget
#include "System/Linq/Expressions/LabelTarget.hpp"
// Including type: System.Linq.Expressions.ParameterExpression
#include "System/Linq/Expressions/ParameterExpression.hpp"
// Including type: System.Linq.Expressions.Expression
#include "System/Linq/Expressions/Expression.hpp"
// Including type: System.Linq.Expressions.CatchBlock
#include "System/Linq/Expressions/CatchBlock.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.Linq.Expressions.BinaryExpression
#include "System/Linq/Expressions/BinaryExpression.hpp"
// Including type: System.Linq.Expressions.Expression`1
#include "System/Linq/Expressions/Expression_1.hpp"
// Including type: System.Linq.Expressions.ConditionalExpression
#include "System/Linq/Expressions/ConditionalExpression.hpp"
// Including type: System.Linq.Expressions.ConstantExpression
#include "System/Linq/Expressions/ConstantExpression.hpp"
// Including type: System.Linq.Expressions.MemberExpression
#include "System/Linq/Expressions/MemberExpression.hpp"
// Including type: System.Linq.Expressions.InvocationExpression
#include "System/Linq/Expressions/InvocationExpression.hpp"
// Including type: System.Linq.Expressions.MethodCallExpression
#include "System/Linq/Expressions/MethodCallExpression.hpp"
// Including type: System.Linq.Expressions.NewArrayExpression
#include "System/Linq/Expressions/NewArrayExpression.hpp"
// Including type: System.Linq.Expressions.TypeBinaryExpression
#include "System/Linq/Expressions/TypeBinaryExpression.hpp"
// Including type: System.Linq.Expressions.UnaryExpression
#include "System/Linq/Expressions/UnaryExpression.hpp"
// Including type: System.Linq.Expressions.BlockExpression
#include "System/Linq/Expressions/BlockExpression.hpp"
// Including type: System.Linq.Expressions.DefaultExpression
#include "System/Linq/Expressions/DefaultExpression.hpp"
// Including type: System.Linq.Expressions.LabelExpression
#include "System/Linq/Expressions/LabelExpression.hpp"
// Including type: System.Linq.Expressions.GotoExpression
#include "System/Linq/Expressions/GotoExpression.hpp"
// Including type: System.Linq.Expressions.LoopExpression
#include "System/Linq/Expressions/LoopExpression.hpp"
// Including type: System.Linq.Expressions.TryExpression
#include "System/Linq/Expressions/TryExpression.hpp"
// Including type: System.Linq.Expressions.IndexExpression
#include "System/Linq/Expressions/IndexExpression.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Text.StringBuilder _out
System::Text::StringBuilder*& System::Linq::Expressions::ExpressionStringBuilder::dyn__out() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionStringBuilder::dyn__out");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_out"))->offset;
  return *reinterpret_cast<System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Object,System.Int32> _ids
System::Collections::Generic::Dictionary_2<::Il2CppObject*, int>*& System::Linq::Expressions::ExpressionStringBuilder::dyn__ids() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionStringBuilder::dyn__ids");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ids"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<::Il2CppObject*, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.ExpressionStringBuilder.GetLabelId
int System::Linq::Expressions::ExpressionStringBuilder::GetLabelId(System::Linq::Expressions::LabelTarget* label) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionStringBuilder::GetLabelId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLabelId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(label)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, label);
}
// Autogenerated method: System.Linq.Expressions.ExpressionStringBuilder.GetParamId
int System::Linq::Expressions::ExpressionStringBuilder::GetParamId(System::Linq::Expressions::ParameterExpression* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionStringBuilder::GetParamId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParamId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, p);
}
// Autogenerated method: System.Linq.Expressions.ExpressionStringBuilder.GetId
int System::Linq::Expressions::ExpressionStringBuilder::GetId(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionStringBuilder::GetId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, o);
}
// Autogenerated method: System.Linq.Expressions.ExpressionStringBuilder.Out
void System::Linq::Expressions::ExpressionStringBuilder::Out(::StringW s) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionStringBuilder::Out");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Out", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Linq.Expressions.ExpressionStringBuilder.Out
void System::Linq::Expressions::ExpressionStringBuilder::Out(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionStringBuilder::Out");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Out", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Linq.Expressions.ExpressionStringBuilder.ExpressionToString
::StringW System::Linq::Expressions::ExpressionStringBuilder::ExpressionToString(System::Linq::Expressions::Expression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionStringBuilder::ExpressionToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "ExpressionStringBuilder", "ExpressionToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionStringBuilder.CatchBlockToString
::StringW System::Linq::Expressions::ExpressionStringBuilder::CatchBlockToString(System::Linq::Expressions::CatchBlock* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionStringBuilder::CatchBlockToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "ExpressionStringBuilder", "CatchBlockToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionStringBuilder.OutMember
void System::Linq::Expressions::ExpressionStringBuilder::OutMember(System::Linq::Expressions::Expression* instance, System::Reflection::MemberInfo* member) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionStringBuilder::OutMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OutMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(member)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, instance, member);
}
// Autogenerated method: System.Linq.Expressions.ExpressionStringBuilder.DumpLabel
void System::Linq::Expressions::ExpressionStringBuilder::DumpLabel(System::Linq::Expressions::LabelTarget* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionStringBuilder::DumpLabel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DumpLabel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, target);
}
// Autogenerated method: System.Linq.Expressions.ExpressionStringBuilder.IsBool
bool System::Linq::Expressions::ExpressionStringBuilder::IsBool(System::Linq::Expressions::Expression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionStringBuilder::IsBool");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "ExpressionStringBuilder", "IsBool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionStringBuilder.ToString
::StringW System::Linq::Expressions::ExpressionStringBuilder::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionStringBuilder::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.ExpressionStringBuilder.VisitBinary
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionStringBuilder::VisitBinary(System::Linq::Expressions::BinaryExpression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionStringBuilder::VisitBinary");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitBinary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionStringBuilder.VisitParameter
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionStringBuilder::VisitParameter(System::Linq::Expressions::ParameterExpression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionStringBuilder::VisitParameter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionStringBuilder.VisitConditional
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionStringBuilder::VisitConditional(System::Linq::Expressions::ConditionalExpression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionStringBuilder::VisitConditional");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitConditional", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionStringBuilder.VisitConstant
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionStringBuilder::VisitConstant(System::Linq::Expressions::ConstantExpression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionStringBuilder::VisitConstant");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitConstant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionStringBuilder.VisitMember
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionStringBuilder::VisitMember(System::Linq::Expressions::MemberExpression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionStringBuilder::VisitMember");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionStringBuilder.VisitInvocation
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionStringBuilder::VisitInvocation(System::Linq::Expressions::InvocationExpression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionStringBuilder::VisitInvocation");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitInvocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionStringBuilder.VisitMethodCall
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionStringBuilder::VisitMethodCall(System::Linq::Expressions::MethodCallExpression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionStringBuilder::VisitMethodCall");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitMethodCall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionStringBuilder.VisitNewArray
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionStringBuilder::VisitNewArray(System::Linq::Expressions::NewArrayExpression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionStringBuilder::VisitNewArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitNewArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionStringBuilder.VisitTypeBinary
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionStringBuilder::VisitTypeBinary(System::Linq::Expressions::TypeBinaryExpression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionStringBuilder::VisitTypeBinary");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitTypeBinary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionStringBuilder.VisitUnary
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionStringBuilder::VisitUnary(System::Linq::Expressions::UnaryExpression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionStringBuilder::VisitUnary");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitUnary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionStringBuilder.VisitBlock
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionStringBuilder::VisitBlock(System::Linq::Expressions::BlockExpression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionStringBuilder::VisitBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionStringBuilder.VisitDefault
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionStringBuilder::VisitDefault(System::Linq::Expressions::DefaultExpression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionStringBuilder::VisitDefault");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionStringBuilder.VisitLabel
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionStringBuilder::VisitLabel(System::Linq::Expressions::LabelExpression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionStringBuilder::VisitLabel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitLabel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionStringBuilder.VisitGoto
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionStringBuilder::VisitGoto(System::Linq::Expressions::GotoExpression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionStringBuilder::VisitGoto");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitGoto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionStringBuilder.VisitLoop
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionStringBuilder::VisitLoop(System::Linq::Expressions::LoopExpression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionStringBuilder::VisitLoop");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitLoop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionStringBuilder.VisitCatchBlock
System::Linq::Expressions::CatchBlock* System::Linq::Expressions::ExpressionStringBuilder::VisitCatchBlock(System::Linq::Expressions::CatchBlock* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionStringBuilder::VisitCatchBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitCatchBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::CatchBlock*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionStringBuilder.VisitTry
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionStringBuilder::VisitTry(System::Linq::Expressions::TryExpression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionStringBuilder::VisitTry");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitTry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionStringBuilder.VisitIndex
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionStringBuilder::VisitIndex(System::Linq::Expressions::IndexExpression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionStringBuilder::VisitIndex");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionStringBuilder.VisitExtension
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionStringBuilder::VisitExtension(System::Linq::Expressions::Expression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionStringBuilder::VisitExtension");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.ExpressionType
#include "System/Linq/Expressions/ExpressionType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType Add
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_Add() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_Add");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "Add"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType Add
void System::Linq::Expressions::ExpressionType::_set_Add(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_Add");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "Add", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType AddChecked
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_AddChecked() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_AddChecked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "AddChecked"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType AddChecked
void System::Linq::Expressions::ExpressionType::_set_AddChecked(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_AddChecked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "AddChecked", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType And
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_And() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_And");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "And"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType And
void System::Linq::Expressions::ExpressionType::_set_And(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_And");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "And", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType AndAlso
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_AndAlso() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_AndAlso");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "AndAlso"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType AndAlso
void System::Linq::Expressions::ExpressionType::_set_AndAlso(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_AndAlso");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "AndAlso", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType ArrayLength
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_ArrayLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_ArrayLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "ArrayLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType ArrayLength
void System::Linq::Expressions::ExpressionType::_set_ArrayLength(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_ArrayLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "ArrayLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType ArrayIndex
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_ArrayIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_ArrayIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "ArrayIndex"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType ArrayIndex
void System::Linq::Expressions::ExpressionType::_set_ArrayIndex(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_ArrayIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "ArrayIndex", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType Call
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_Call() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_Call");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "Call"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType Call
void System::Linq::Expressions::ExpressionType::_set_Call(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_Call");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "Call", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType Coalesce
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_Coalesce() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_Coalesce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "Coalesce"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType Coalesce
void System::Linq::Expressions::ExpressionType::_set_Coalesce(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_Coalesce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "Coalesce", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType Conditional
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_Conditional() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_Conditional");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "Conditional"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType Conditional
void System::Linq::Expressions::ExpressionType::_set_Conditional(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_Conditional");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "Conditional", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType Constant
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_Constant() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_Constant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "Constant"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType Constant
void System::Linq::Expressions::ExpressionType::_set_Constant(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_Constant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "Constant", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType Convert
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_Convert() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_Convert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "Convert"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType Convert
void System::Linq::Expressions::ExpressionType::_set_Convert(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_Convert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "Convert", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType ConvertChecked
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_ConvertChecked() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_ConvertChecked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "ConvertChecked"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType ConvertChecked
void System::Linq::Expressions::ExpressionType::_set_ConvertChecked(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_ConvertChecked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "ConvertChecked", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType Divide
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_Divide() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_Divide");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "Divide"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType Divide
void System::Linq::Expressions::ExpressionType::_set_Divide(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_Divide");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "Divide", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType Equal
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_Equal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_Equal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "Equal"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType Equal
void System::Linq::Expressions::ExpressionType::_set_Equal(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_Equal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "Equal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType ExclusiveOr
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_ExclusiveOr() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_ExclusiveOr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "ExclusiveOr"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType ExclusiveOr
void System::Linq::Expressions::ExpressionType::_set_ExclusiveOr(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_ExclusiveOr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "ExclusiveOr", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType GreaterThan
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_GreaterThan() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_GreaterThan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "GreaterThan"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType GreaterThan
void System::Linq::Expressions::ExpressionType::_set_GreaterThan(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_GreaterThan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "GreaterThan", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType GreaterThanOrEqual
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_GreaterThanOrEqual() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_GreaterThanOrEqual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "GreaterThanOrEqual"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType GreaterThanOrEqual
void System::Linq::Expressions::ExpressionType::_set_GreaterThanOrEqual(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_GreaterThanOrEqual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "GreaterThanOrEqual", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType Invoke
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_Invoke");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "Invoke"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType Invoke
void System::Linq::Expressions::ExpressionType::_set_Invoke(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_Invoke");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "Invoke", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType Lambda
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_Lambda() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_Lambda");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "Lambda"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType Lambda
void System::Linq::Expressions::ExpressionType::_set_Lambda(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_Lambda");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "Lambda", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType LeftShift
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_LeftShift() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_LeftShift");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "LeftShift"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType LeftShift
void System::Linq::Expressions::ExpressionType::_set_LeftShift(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_LeftShift");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "LeftShift", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType LessThan
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_LessThan() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_LessThan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "LessThan"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType LessThan
void System::Linq::Expressions::ExpressionType::_set_LessThan(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_LessThan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "LessThan", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType LessThanOrEqual
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_LessThanOrEqual() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_LessThanOrEqual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "LessThanOrEqual"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType LessThanOrEqual
void System::Linq::Expressions::ExpressionType::_set_LessThanOrEqual(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_LessThanOrEqual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "LessThanOrEqual", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType ListInit
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_ListInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_ListInit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "ListInit"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType ListInit
void System::Linq::Expressions::ExpressionType::_set_ListInit(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_ListInit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "ListInit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType MemberAccess
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_MemberAccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_MemberAccess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "MemberAccess"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType MemberAccess
void System::Linq::Expressions::ExpressionType::_set_MemberAccess(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_MemberAccess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "MemberAccess", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType MemberInit
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_MemberInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_MemberInit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "MemberInit"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType MemberInit
void System::Linq::Expressions::ExpressionType::_set_MemberInit(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_MemberInit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "MemberInit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType Modulo
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_Modulo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_Modulo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "Modulo"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType Modulo
void System::Linq::Expressions::ExpressionType::_set_Modulo(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_Modulo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "Modulo", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType Multiply
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_Multiply() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_Multiply");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "Multiply"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType Multiply
void System::Linq::Expressions::ExpressionType::_set_Multiply(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_Multiply");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "Multiply", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType MultiplyChecked
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_MultiplyChecked() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_MultiplyChecked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "MultiplyChecked"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType MultiplyChecked
void System::Linq::Expressions::ExpressionType::_set_MultiplyChecked(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_MultiplyChecked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "MultiplyChecked", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType Negate
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_Negate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_Negate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "Negate"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType Negate
void System::Linq::Expressions::ExpressionType::_set_Negate(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_Negate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "Negate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType UnaryPlus
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_UnaryPlus() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_UnaryPlus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "UnaryPlus"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType UnaryPlus
void System::Linq::Expressions::ExpressionType::_set_UnaryPlus(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_UnaryPlus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "UnaryPlus", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType NegateChecked
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_NegateChecked() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_NegateChecked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "NegateChecked"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType NegateChecked
void System::Linq::Expressions::ExpressionType::_set_NegateChecked(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_NegateChecked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "NegateChecked", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType New
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_New() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_New");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "New"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType New
void System::Linq::Expressions::ExpressionType::_set_New(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_New");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "New", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType NewArrayInit
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_NewArrayInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_NewArrayInit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "NewArrayInit"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType NewArrayInit
void System::Linq::Expressions::ExpressionType::_set_NewArrayInit(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_NewArrayInit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "NewArrayInit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType NewArrayBounds
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_NewArrayBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_NewArrayBounds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "NewArrayBounds"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType NewArrayBounds
void System::Linq::Expressions::ExpressionType::_set_NewArrayBounds(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_NewArrayBounds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "NewArrayBounds", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType Not
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_Not() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_Not");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "Not"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType Not
void System::Linq::Expressions::ExpressionType::_set_Not(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_Not");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "Not", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType NotEqual
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_NotEqual() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_NotEqual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "NotEqual"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType NotEqual
void System::Linq::Expressions::ExpressionType::_set_NotEqual(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_NotEqual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "NotEqual", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType Or
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_Or() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_Or");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "Or"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType Or
void System::Linq::Expressions::ExpressionType::_set_Or(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_Or");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "Or", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType OrElse
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_OrElse() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_OrElse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "OrElse"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType OrElse
void System::Linq::Expressions::ExpressionType::_set_OrElse(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_OrElse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "OrElse", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType Parameter
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_Parameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_Parameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "Parameter"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType Parameter
void System::Linq::Expressions::ExpressionType::_set_Parameter(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_Parameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "Parameter", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType Power
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_Power() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_Power");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "Power"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType Power
void System::Linq::Expressions::ExpressionType::_set_Power(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_Power");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "Power", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType Quote
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_Quote() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_Quote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "Quote"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType Quote
void System::Linq::Expressions::ExpressionType::_set_Quote(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_Quote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "Quote", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType RightShift
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_RightShift() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_RightShift");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "RightShift"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType RightShift
void System::Linq::Expressions::ExpressionType::_set_RightShift(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_RightShift");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "RightShift", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType Subtract
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_Subtract() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_Subtract");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "Subtract"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType Subtract
void System::Linq::Expressions::ExpressionType::_set_Subtract(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_Subtract");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "Subtract", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType SubtractChecked
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_SubtractChecked() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_SubtractChecked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "SubtractChecked"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType SubtractChecked
void System::Linq::Expressions::ExpressionType::_set_SubtractChecked(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_SubtractChecked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "SubtractChecked", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType TypeAs
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_TypeAs() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_TypeAs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "TypeAs"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType TypeAs
void System::Linq::Expressions::ExpressionType::_set_TypeAs(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_TypeAs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "TypeAs", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType TypeIs
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_TypeIs() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_TypeIs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "TypeIs"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType TypeIs
void System::Linq::Expressions::ExpressionType::_set_TypeIs(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_TypeIs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "TypeIs", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType Assign
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_Assign() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_Assign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "Assign"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType Assign
void System::Linq::Expressions::ExpressionType::_set_Assign(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_Assign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "Assign", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType Block
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_Block() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_Block");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "Block"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType Block
void System::Linq::Expressions::ExpressionType::_set_Block(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_Block");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "Block", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType DebugInfo
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_DebugInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_DebugInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "DebugInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType DebugInfo
void System::Linq::Expressions::ExpressionType::_set_DebugInfo(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_DebugInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "DebugInfo", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType Decrement
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_Decrement() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_Decrement");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "Decrement"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType Decrement
void System::Linq::Expressions::ExpressionType::_set_Decrement(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_Decrement");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "Decrement", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType Dynamic
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_Dynamic() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_Dynamic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "Dynamic"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType Dynamic
void System::Linq::Expressions::ExpressionType::_set_Dynamic(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_Dynamic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "Dynamic", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType Default
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "Default"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType Default
void System::Linq::Expressions::ExpressionType::_set_Default(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType Extension
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_Extension() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_Extension");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "Extension"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType Extension
void System::Linq::Expressions::ExpressionType::_set_Extension(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_Extension");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "Extension", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType Goto
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_Goto() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_Goto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "Goto"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType Goto
void System::Linq::Expressions::ExpressionType::_set_Goto(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_Goto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "Goto", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType Increment
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_Increment() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_Increment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "Increment"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType Increment
void System::Linq::Expressions::ExpressionType::_set_Increment(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_Increment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "Increment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType Index
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_Index");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "Index"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType Index
void System::Linq::Expressions::ExpressionType::_set_Index(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_Index");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "Index", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType Label
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_Label() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_Label");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "Label"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType Label
void System::Linq::Expressions::ExpressionType::_set_Label(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_Label");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "Label", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType RuntimeVariables
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_RuntimeVariables() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_RuntimeVariables");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "RuntimeVariables"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType RuntimeVariables
void System::Linq::Expressions::ExpressionType::_set_RuntimeVariables(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_RuntimeVariables");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "RuntimeVariables", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType Loop
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_Loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_Loop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "Loop"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType Loop
void System::Linq::Expressions::ExpressionType::_set_Loop(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_Loop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "Loop", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType Switch
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_Switch() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_Switch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "Switch"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType Switch
void System::Linq::Expressions::ExpressionType::_set_Switch(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_Switch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "Switch", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType Throw
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_Throw() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_Throw");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "Throw"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType Throw
void System::Linq::Expressions::ExpressionType::_set_Throw(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_Throw");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "Throw", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType Try
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_Try() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_Try");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "Try"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType Try
void System::Linq::Expressions::ExpressionType::_set_Try(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_Try");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "Try", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType Unbox
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_Unbox() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_Unbox");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "Unbox"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType Unbox
void System::Linq::Expressions::ExpressionType::_set_Unbox(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_Unbox");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "Unbox", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType AddAssign
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_AddAssign() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_AddAssign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "AddAssign"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType AddAssign
void System::Linq::Expressions::ExpressionType::_set_AddAssign(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_AddAssign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "AddAssign", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType AndAssign
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_AndAssign() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_AndAssign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "AndAssign"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType AndAssign
void System::Linq::Expressions::ExpressionType::_set_AndAssign(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_AndAssign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "AndAssign", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType DivideAssign
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_DivideAssign() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_DivideAssign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "DivideAssign"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType DivideAssign
void System::Linq::Expressions::ExpressionType::_set_DivideAssign(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_DivideAssign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "DivideAssign", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType ExclusiveOrAssign
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_ExclusiveOrAssign() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_ExclusiveOrAssign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "ExclusiveOrAssign"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType ExclusiveOrAssign
void System::Linq::Expressions::ExpressionType::_set_ExclusiveOrAssign(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_ExclusiveOrAssign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "ExclusiveOrAssign", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType LeftShiftAssign
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_LeftShiftAssign() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_LeftShiftAssign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "LeftShiftAssign"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType LeftShiftAssign
void System::Linq::Expressions::ExpressionType::_set_LeftShiftAssign(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_LeftShiftAssign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "LeftShiftAssign", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType ModuloAssign
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_ModuloAssign() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_ModuloAssign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "ModuloAssign"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType ModuloAssign
void System::Linq::Expressions::ExpressionType::_set_ModuloAssign(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_ModuloAssign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "ModuloAssign", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType MultiplyAssign
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_MultiplyAssign() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_MultiplyAssign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "MultiplyAssign"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType MultiplyAssign
void System::Linq::Expressions::ExpressionType::_set_MultiplyAssign(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_MultiplyAssign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "MultiplyAssign", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType OrAssign
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_OrAssign() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_OrAssign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "OrAssign"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType OrAssign
void System::Linq::Expressions::ExpressionType::_set_OrAssign(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_OrAssign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "OrAssign", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType PowerAssign
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_PowerAssign() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_PowerAssign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "PowerAssign"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType PowerAssign
void System::Linq::Expressions::ExpressionType::_set_PowerAssign(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_PowerAssign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "PowerAssign", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType RightShiftAssign
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_RightShiftAssign() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_RightShiftAssign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "RightShiftAssign"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType RightShiftAssign
void System::Linq::Expressions::ExpressionType::_set_RightShiftAssign(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_RightShiftAssign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "RightShiftAssign", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType SubtractAssign
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_SubtractAssign() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_SubtractAssign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "SubtractAssign"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType SubtractAssign
void System::Linq::Expressions::ExpressionType::_set_SubtractAssign(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_SubtractAssign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "SubtractAssign", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType AddAssignChecked
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_AddAssignChecked() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_AddAssignChecked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "AddAssignChecked"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType AddAssignChecked
void System::Linq::Expressions::ExpressionType::_set_AddAssignChecked(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_AddAssignChecked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "AddAssignChecked", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType MultiplyAssignChecked
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_MultiplyAssignChecked() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_MultiplyAssignChecked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "MultiplyAssignChecked"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType MultiplyAssignChecked
void System::Linq::Expressions::ExpressionType::_set_MultiplyAssignChecked(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_MultiplyAssignChecked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "MultiplyAssignChecked", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType SubtractAssignChecked
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_SubtractAssignChecked() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_SubtractAssignChecked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "SubtractAssignChecked"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType SubtractAssignChecked
void System::Linq::Expressions::ExpressionType::_set_SubtractAssignChecked(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_SubtractAssignChecked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "SubtractAssignChecked", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType PreIncrementAssign
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_PreIncrementAssign() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_PreIncrementAssign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "PreIncrementAssign"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType PreIncrementAssign
void System::Linq::Expressions::ExpressionType::_set_PreIncrementAssign(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_PreIncrementAssign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "PreIncrementAssign", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType PreDecrementAssign
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_PreDecrementAssign() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_PreDecrementAssign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "PreDecrementAssign"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType PreDecrementAssign
void System::Linq::Expressions::ExpressionType::_set_PreDecrementAssign(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_PreDecrementAssign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "PreDecrementAssign", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType PostIncrementAssign
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_PostIncrementAssign() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_PostIncrementAssign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "PostIncrementAssign"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType PostIncrementAssign
void System::Linq::Expressions::ExpressionType::_set_PostIncrementAssign(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_PostIncrementAssign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "PostIncrementAssign", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType PostDecrementAssign
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_PostDecrementAssign() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_PostDecrementAssign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "PostDecrementAssign"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType PostDecrementAssign
void System::Linq::Expressions::ExpressionType::_set_PostDecrementAssign(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_PostDecrementAssign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "PostDecrementAssign", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType TypeEqual
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_TypeEqual() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_TypeEqual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "TypeEqual"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType TypeEqual
void System::Linq::Expressions::ExpressionType::_set_TypeEqual(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_TypeEqual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "TypeEqual", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType OnesComplement
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_OnesComplement() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_OnesComplement");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "OnesComplement"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType OnesComplement
void System::Linq::Expressions::ExpressionType::_set_OnesComplement(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_OnesComplement");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "OnesComplement", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType IsTrue
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_IsTrue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_IsTrue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "IsTrue"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType IsTrue
void System::Linq::Expressions::ExpressionType::_set_IsTrue(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_IsTrue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "IsTrue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.ExpressionType IsFalse
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ExpressionType::_get_IsFalse() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_get_IsFalse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ExpressionType>("System.Linq.Expressions", "ExpressionType", "IsFalse"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.ExpressionType IsFalse
void System::Linq::Expressions::ExpressionType::_set_IsFalse(System::Linq::Expressions::ExpressionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::_set_IsFalse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "ExpressionType", "IsFalse", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Linq::Expressions::ExpressionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.ExpressionVisitor
#include "System/Linq/Expressions/ExpressionVisitor.hpp"
// Including type: System.Linq.Expressions.Expression
#include "System/Linq/Expressions/Expression.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Linq.Expressions.IArgumentProvider
#include "System/Linq/Expressions/IArgumentProvider.hpp"
// Including type: System.Linq.Expressions.ParameterExpression
#include "System/Linq/Expressions/ParameterExpression.hpp"
// Including type: System.Linq.Expressions.IParameterProvider
#include "System/Linq/Expressions/IParameterProvider.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Linq.Expressions.BinaryExpression
#include "System/Linq/Expressions/BinaryExpression.hpp"
// Including type: System.Linq.Expressions.BlockExpression
#include "System/Linq/Expressions/BlockExpression.hpp"
// Including type: System.Linq.Expressions.ConditionalExpression
#include "System/Linq/Expressions/ConditionalExpression.hpp"
// Including type: System.Linq.Expressions.ConstantExpression
#include "System/Linq/Expressions/ConstantExpression.hpp"
// Including type: System.Linq.Expressions.DefaultExpression
#include "System/Linq/Expressions/DefaultExpression.hpp"
// Including type: System.Linq.Expressions.GotoExpression
#include "System/Linq/Expressions/GotoExpression.hpp"
// Including type: System.Linq.Expressions.InvocationExpression
#include "System/Linq/Expressions/InvocationExpression.hpp"
// Including type: System.Linq.Expressions.LabelTarget
#include "System/Linq/Expressions/LabelTarget.hpp"
// Including type: System.Linq.Expressions.LabelExpression
#include "System/Linq/Expressions/LabelExpression.hpp"
// Including type: System.Linq.Expressions.Expression`1
#include "System/Linq/Expressions/Expression_1.hpp"
// Including type: System.Linq.Expressions.LoopExpression
#include "System/Linq/Expressions/LoopExpression.hpp"
// Including type: System.Linq.Expressions.MemberExpression
#include "System/Linq/Expressions/MemberExpression.hpp"
// Including type: System.Linq.Expressions.IndexExpression
#include "System/Linq/Expressions/IndexExpression.hpp"
// Including type: System.Linq.Expressions.MethodCallExpression
#include "System/Linq/Expressions/MethodCallExpression.hpp"
// Including type: System.Linq.Expressions.NewArrayExpression
#include "System/Linq/Expressions/NewArrayExpression.hpp"
// Including type: System.Linq.Expressions.CatchBlock
#include "System/Linq/Expressions/CatchBlock.hpp"
// Including type: System.Linq.Expressions.TryExpression
#include "System/Linq/Expressions/TryExpression.hpp"
// Including type: System.Linq.Expressions.TypeBinaryExpression
#include "System/Linq/Expressions/TypeBinaryExpression.hpp"
// Including type: System.Linq.Expressions.UnaryExpression
#include "System/Linq/Expressions/UnaryExpression.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.ExpressionVisitor.Visit
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionVisitor::Visit(System::Linq::Expressions::Expression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionVisitor::Visit");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Visit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionVisitor.Visit
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>* System::Linq::Expressions::ExpressionVisitor::Visit(System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>* nodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionVisitor::Visit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Visit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodes)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>*, false>(this, ___internal__method, nodes);
}
// Autogenerated method: System.Linq.Expressions.ExpressionVisitor.VisitArguments
::ArrayW<System::Linq::Expressions::Expression*> System::Linq::Expressions::ExpressionVisitor::VisitArguments(System::Linq::Expressions::IArgumentProvider* nodes) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionVisitor::VisitArguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodes)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<System::Linq::Expressions::Expression*>, false>(this, ___internal__method, nodes);
}
// Autogenerated method: System.Linq.Expressions.ExpressionVisitor.VisitParameters
::ArrayW<System::Linq::Expressions::ParameterExpression*> System::Linq::Expressions::ExpressionVisitor::VisitParameters(System::Linq::Expressions::IParameterProvider* nodes, ::StringW callerName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionVisitor::VisitParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodes), ::il2cpp_utils::ExtractType(callerName)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<System::Linq::Expressions::ParameterExpression*>, false>(this, ___internal__method, nodes, callerName);
}
// Autogenerated method: System.Linq.Expressions.ExpressionVisitor.VisitBinary
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionVisitor::VisitBinary(System::Linq::Expressions::BinaryExpression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionVisitor::VisitBinary");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitBinary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionVisitor.VisitBlock
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionVisitor::VisitBlock(System::Linq::Expressions::BlockExpression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionVisitor::VisitBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionVisitor.VisitConditional
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionVisitor::VisitConditional(System::Linq::Expressions::ConditionalExpression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionVisitor::VisitConditional");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitConditional", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionVisitor.VisitConstant
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionVisitor::VisitConstant(System::Linq::Expressions::ConstantExpression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionVisitor::VisitConstant");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitConstant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionVisitor.VisitDefault
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionVisitor::VisitDefault(System::Linq::Expressions::DefaultExpression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionVisitor::VisitDefault");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionVisitor.VisitExtension
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionVisitor::VisitExtension(System::Linq::Expressions::Expression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionVisitor::VisitExtension");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionVisitor.VisitGoto
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionVisitor::VisitGoto(System::Linq::Expressions::GotoExpression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionVisitor::VisitGoto");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitGoto", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionVisitor.VisitInvocation
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionVisitor::VisitInvocation(System::Linq::Expressions::InvocationExpression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionVisitor::VisitInvocation");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitInvocation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget
System::Linq::Expressions::LabelTarget* System::Linq::Expressions::ExpressionVisitor::VisitLabelTarget(System::Linq::Expressions::LabelTarget* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionVisitor::VisitLabelTarget");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitLabelTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::LabelTarget*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionVisitor.VisitLabel
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionVisitor::VisitLabel(System::Linq::Expressions::LabelExpression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionVisitor::VisitLabel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitLabel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionVisitor.VisitLoop
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionVisitor::VisitLoop(System::Linq::Expressions::LoopExpression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionVisitor::VisitLoop");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitLoop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionVisitor.VisitMember
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionVisitor::VisitMember(System::Linq::Expressions::MemberExpression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionVisitor::VisitMember");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionVisitor.VisitIndex
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionVisitor::VisitIndex(System::Linq::Expressions::IndexExpression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionVisitor::VisitIndex");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionVisitor.VisitMethodCall
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionVisitor::VisitMethodCall(System::Linq::Expressions::MethodCallExpression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionVisitor::VisitMethodCall");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitMethodCall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionVisitor.VisitNewArray
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionVisitor::VisitNewArray(System::Linq::Expressions::NewArrayExpression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionVisitor::VisitNewArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitNewArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionVisitor.VisitParameter
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionVisitor::VisitParameter(System::Linq::Expressions::ParameterExpression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionVisitor::VisitParameter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock
System::Linq::Expressions::CatchBlock* System::Linq::Expressions::ExpressionVisitor::VisitCatchBlock(System::Linq::Expressions::CatchBlock* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionVisitor::VisitCatchBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitCatchBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::CatchBlock*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionVisitor.VisitTry
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionVisitor::VisitTry(System::Linq::Expressions::TryExpression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionVisitor::VisitTry");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitTry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionVisitor::VisitTypeBinary(System::Linq::Expressions::TypeBinaryExpression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionVisitor::VisitTypeBinary");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitTypeBinary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionVisitor.VisitUnary
System::Linq::Expressions::Expression* System::Linq::Expressions::ExpressionVisitor::VisitUnary(System::Linq::Expressions::UnaryExpression* node) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionVisitor::VisitUnary");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VisitUnary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(node)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, node);
}
// Autogenerated method: System.Linq.Expressions.ExpressionVisitor.ValidateUnary
System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::ExpressionVisitor::ValidateUnary(System::Linq::Expressions::UnaryExpression* before, System::Linq::Expressions::UnaryExpression* after) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionVisitor::ValidateUnary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "ExpressionVisitor", "ValidateUnary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(before), ::il2cpp_utils::ExtractType(after)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::UnaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, before, after);
}
// Autogenerated method: System.Linq.Expressions.ExpressionVisitor.ValidateBinary
System::Linq::Expressions::BinaryExpression* System::Linq::Expressions::ExpressionVisitor::ValidateBinary(System::Linq::Expressions::BinaryExpression* before, System::Linq::Expressions::BinaryExpression* after) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionVisitor::ValidateBinary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "ExpressionVisitor", "ValidateBinary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(before), ::il2cpp_utils::ExtractType(after)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::BinaryExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, before, after);
}
// Autogenerated method: System.Linq.Expressions.ExpressionVisitor.ValidateChildType
void System::Linq::Expressions::ExpressionVisitor::ValidateChildType(System::Type* before, System::Type* after, ::StringW methodName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ExpressionVisitor::ValidateChildType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "ExpressionVisitor", "ValidateChildType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(before), ::il2cpp_utils::ExtractType(after), ::il2cpp_utils::ExtractType(methodName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, before, after, methodName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.GotoExpressionKind
#include "System/Linq/Expressions/GotoExpressionKind.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.GotoExpressionKind Goto
System::Linq::Expressions::GotoExpressionKind System::Linq::Expressions::GotoExpressionKind::_get_Goto() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::GotoExpressionKind::_get_Goto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::GotoExpressionKind>("System.Linq.Expressions", "GotoExpressionKind", "Goto"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.GotoExpressionKind Goto
void System::Linq::Expressions::GotoExpressionKind::_set_Goto(System::Linq::Expressions::GotoExpressionKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::GotoExpressionKind::_set_Goto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "GotoExpressionKind", "Goto", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.GotoExpressionKind Return
System::Linq::Expressions::GotoExpressionKind System::Linq::Expressions::GotoExpressionKind::_get_Return() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::GotoExpressionKind::_get_Return");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::GotoExpressionKind>("System.Linq.Expressions", "GotoExpressionKind", "Return"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.GotoExpressionKind Return
void System::Linq::Expressions::GotoExpressionKind::_set_Return(System::Linq::Expressions::GotoExpressionKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::GotoExpressionKind::_set_Return");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "GotoExpressionKind", "Return", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.GotoExpressionKind Break
System::Linq::Expressions::GotoExpressionKind System::Linq::Expressions::GotoExpressionKind::_get_Break() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::GotoExpressionKind::_get_Break");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::GotoExpressionKind>("System.Linq.Expressions", "GotoExpressionKind", "Break"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.GotoExpressionKind Break
void System::Linq::Expressions::GotoExpressionKind::_set_Break(System::Linq::Expressions::GotoExpressionKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::GotoExpressionKind::_set_Break");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "GotoExpressionKind", "Break", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.GotoExpressionKind Continue
System::Linq::Expressions::GotoExpressionKind System::Linq::Expressions::GotoExpressionKind::_get_Continue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::GotoExpressionKind::_get_Continue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::GotoExpressionKind>("System.Linq.Expressions", "GotoExpressionKind", "Continue"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.GotoExpressionKind Continue
void System::Linq::Expressions::GotoExpressionKind::_set_Continue(System::Linq::Expressions::GotoExpressionKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::GotoExpressionKind::_set_Continue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "GotoExpressionKind", "Continue", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Linq::Expressions::GotoExpressionKind::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::GotoExpressionKind::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.GotoExpression
#include "System/Linq/Expressions/GotoExpression.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Linq.Expressions.LabelTarget
#include "System/Linq/Expressions/LabelTarget.hpp"
// Including type: System.Linq.Expressions.ExpressionType
#include "System/Linq/Expressions/ExpressionType.hpp"
// Including type: System.Linq.Expressions.ExpressionVisitor
#include "System/Linq/Expressions/ExpressionVisitor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Type <Type>k__BackingField
System::Type*& System::Linq::Expressions::GotoExpression::dyn_$Type$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::GotoExpression::dyn_$Type$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Type>k__BackingField"))->offset;
  return *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression <Value>k__BackingField
System::Linq::Expressions::Expression*& System::Linq::Expressions::GotoExpression::dyn_$Value$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::GotoExpression::dyn_$Value$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Value>k__BackingField"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.LabelTarget <Target>k__BackingField
System::Linq::Expressions::LabelTarget*& System::Linq::Expressions::GotoExpression::dyn_$Target$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::GotoExpression::dyn_$Target$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Target>k__BackingField"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::LabelTarget**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.GotoExpressionKind <Kind>k__BackingField
System::Linq::Expressions::GotoExpressionKind& System::Linq::Expressions::GotoExpression::dyn_$Kind$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::GotoExpression::dyn_$Kind$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Kind>k__BackingField"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::GotoExpressionKind*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.GotoExpression.get_Value
System::Linq::Expressions::Expression* System::Linq::Expressions::GotoExpression::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::GotoExpression::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.GotoExpression.get_Target
System::Linq::Expressions::LabelTarget* System::Linq::Expressions::GotoExpression::get_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::GotoExpression::get_Target");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Target", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::LabelTarget*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.GotoExpression.get_Kind
System::Linq::Expressions::GotoExpressionKind System::Linq::Expressions::GotoExpression::get_Kind() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::GotoExpression::get_Kind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Kind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::GotoExpressionKind, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.GotoExpression.Update
System::Linq::Expressions::GotoExpression* System::Linq::Expressions::GotoExpression::Update(System::Linq::Expressions::LabelTarget* target, System::Linq::Expressions::Expression* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::GotoExpression::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::GotoExpression*, false>(this, ___internal__method, target, value);
}
// Autogenerated method: System.Linq.Expressions.GotoExpression.get_Type
System::Type* System::Linq::Expressions::GotoExpression::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::GotoExpression::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.GotoExpression.get_NodeType
System::Linq::Expressions::ExpressionType System::Linq::Expressions::GotoExpression::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::GotoExpression::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ExpressionType, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.GotoExpression.Accept
System::Linq::Expressions::Expression* System::Linq::Expressions::GotoExpression::Accept(System::Linq::Expressions::ExpressionVisitor* visitor) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::GotoExpression::Accept");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visitor)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, visitor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.IArgumentProvider
#include "System/Linq/Expressions/IArgumentProvider.hpp"
// Including type: System.Linq.Expressions.Expression
#include "System/Linq/Expressions/Expression.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.IArgumentProvider.get_ArgumentCount
int System::Linq::Expressions::IArgumentProvider::get_ArgumentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::IArgumentProvider::get_ArgumentCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArgumentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.IArgumentProvider.GetArgument
System::Linq::Expressions::Expression* System::Linq::Expressions::IArgumentProvider::GetArgument(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::IArgumentProvider::GetArgument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.IParameterProvider
#include "System/Linq/Expressions/IParameterProvider.hpp"
// Including type: System.Linq.Expressions.ParameterExpression
#include "System/Linq/Expressions/ParameterExpression.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.IParameterProvider.get_ParameterCount
int System::Linq::Expressions::IParameterProvider::get_ParameterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::IParameterProvider::get_ParameterCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParameterCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.IParameterProvider.GetParameter
System::Linq::Expressions::ParameterExpression* System::Linq::Expressions::IParameterProvider::GetParameter(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::IParameterProvider::GetParameter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ParameterExpression*, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.IndexExpression
#include "System/Linq/Expressions/IndexExpression.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Linq.Expressions.ExpressionType
#include "System/Linq/Expressions/ExpressionType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Linq.Expressions.ExpressionVisitor
#include "System/Linq/Expressions/ExpressionVisitor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IReadOnlyList`1<System.Linq.Expressions.Expression> _arguments
System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::Expression*>*& System::Linq::Expressions::IndexExpression::dyn__arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::IndexExpression::dyn__arguments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arguments"))->offset;
  return *reinterpret_cast<System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::Expression*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression <Object>k__BackingField
System::Linq::Expressions::Expression*& System::Linq::Expressions::IndexExpression::dyn_$Object$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::IndexExpression::dyn_$Object$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Object>k__BackingField"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Reflection.PropertyInfo <Indexer>k__BackingField
System::Reflection::PropertyInfo*& System::Linq::Expressions::IndexExpression::dyn_$Indexer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::IndexExpression::dyn_$Indexer$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Indexer>k__BackingField"))->offset;
  return *reinterpret_cast<System::Reflection::PropertyInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.IndexExpression.get_Object
System::Linq::Expressions::Expression* System::Linq::Expressions::IndexExpression::get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::IndexExpression::get_Object");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Object", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.IndexExpression.get_Indexer
System::Reflection::PropertyInfo* System::Linq::Expressions::IndexExpression::get_Indexer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::IndexExpression::get_Indexer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Indexer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Reflection::PropertyInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.IndexExpression.get_ArgumentCount
int System::Linq::Expressions::IndexExpression::get_ArgumentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::IndexExpression::get_ArgumentCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArgumentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.IndexExpression.GetArgument
System::Linq::Expressions::Expression* System::Linq::Expressions::IndexExpression::GetArgument(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::IndexExpression::GetArgument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.IndexExpression.Rewrite
System::Linq::Expressions::Expression* System::Linq::Expressions::IndexExpression::Rewrite(System::Linq::Expressions::Expression* instance, ::ArrayW<System::Linq::Expressions::Expression*> arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::IndexExpression::Rewrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(arguments)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, instance, arguments);
}
// Autogenerated method: System.Linq.Expressions.IndexExpression.get_NodeType
System::Linq::Expressions::ExpressionType System::Linq::Expressions::IndexExpression::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::IndexExpression::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ExpressionType, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.IndexExpression.get_Type
System::Type* System::Linq::Expressions::IndexExpression::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::IndexExpression::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.IndexExpression.Accept
System::Linq::Expressions::Expression* System::Linq::Expressions::IndexExpression::Accept(System::Linq::Expressions::ExpressionVisitor* visitor) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::IndexExpression::Accept");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visitor)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, visitor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.InvocationExpression
#include "System/Linq/Expressions/InvocationExpression.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Linq.Expressions.ExpressionType
#include "System/Linq/Expressions/ExpressionType.hpp"
// Including type: System.Linq.Expressions.ExpressionVisitor
#include "System/Linq/Expressions/ExpressionVisitor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Type <Type>k__BackingField
System::Type*& System::Linq::Expressions::InvocationExpression::dyn_$Type$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression::dyn_$Type$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Type>k__BackingField"))->offset;
  return *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression <Expression>k__BackingField
System::Linq::Expressions::Expression*& System::Linq::Expressions::InvocationExpression::dyn_$Expression$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression::dyn_$Expression$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Expression>k__BackingField"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.InvocationExpression.get_Expression
System::Linq::Expressions::Expression* System::Linq::Expressions::InvocationExpression::get_Expression() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression::get_Expression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Expression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.InvocationExpression.get_ArgumentCount
int System::Linq::Expressions::InvocationExpression::get_ArgumentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression::get_ArgumentCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArgumentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.InvocationExpression.GetArgument
System::Linq::Expressions::Expression* System::Linq::Expressions::InvocationExpression::GetArgument(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression::GetArgument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.InvocationExpression.Rewrite
System::Linq::Expressions::InvocationExpression* System::Linq::Expressions::InvocationExpression::Rewrite(System::Linq::Expressions::Expression* lambda, ::ArrayW<System::Linq::Expressions::Expression*> arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression::Rewrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lambda), ::il2cpp_utils::ExtractType(arguments)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::InvocationExpression*, false>(this, ___internal__method, lambda, arguments);
}
// Autogenerated method: System.Linq.Expressions.InvocationExpression.get_Type
System::Type* System::Linq::Expressions::InvocationExpression::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.InvocationExpression.get_NodeType
System::Linq::Expressions::ExpressionType System::Linq::Expressions::InvocationExpression::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ExpressionType, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.InvocationExpression.Accept
System::Linq::Expressions::Expression* System::Linq::Expressions::InvocationExpression::Accept(System::Linq::Expressions::ExpressionVisitor* visitor) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression::Accept");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visitor)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, visitor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.InvocationExpressionN
#include "System/Linq/Expressions/InvocationExpressionN.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IReadOnlyList`1<System.Linq.Expressions.Expression> _arguments
System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::Expression*>*& System::Linq::Expressions::InvocationExpressionN::dyn__arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpressionN::dyn__arguments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arguments"))->offset;
  return *reinterpret_cast<System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::Expression*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.InvocationExpressionN.get_ArgumentCount
int System::Linq::Expressions::InvocationExpressionN::get_ArgumentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpressionN::get_ArgumentCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArgumentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.InvocationExpressionN.GetArgument
System::Linq::Expressions::Expression* System::Linq::Expressions::InvocationExpressionN::GetArgument(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpressionN::GetArgument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.InvocationExpressionN.Rewrite
System::Linq::Expressions::InvocationExpression* System::Linq::Expressions::InvocationExpressionN::Rewrite(System::Linq::Expressions::Expression* lambda, ::ArrayW<System::Linq::Expressions::Expression*> arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpressionN::Rewrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lambda), ::il2cpp_utils::ExtractType(arguments)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::InvocationExpression*, false>(this, ___internal__method, lambda, arguments);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.InvocationExpression0
#include "System/Linq/Expressions/InvocationExpression0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.InvocationExpression0.get_ArgumentCount
int System::Linq::Expressions::InvocationExpression0::get_ArgumentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression0::get_ArgumentCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArgumentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.InvocationExpression0.GetArgument
System::Linq::Expressions::Expression* System::Linq::Expressions::InvocationExpression0::GetArgument(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression0::GetArgument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.InvocationExpression0.Rewrite
System::Linq::Expressions::InvocationExpression* System::Linq::Expressions::InvocationExpression0::Rewrite(System::Linq::Expressions::Expression* lambda, ::ArrayW<System::Linq::Expressions::Expression*> arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression0::Rewrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lambda), ::il2cpp_utils::ExtractType(arguments)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::InvocationExpression*, false>(this, ___internal__method, lambda, arguments);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.InvocationExpression1
#include "System/Linq/Expressions/InvocationExpression1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object _arg0
::Il2CppObject*& System::Linq::Expressions::InvocationExpression1::dyn__arg0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression1::dyn__arg0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg0"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.InvocationExpression1.get_ArgumentCount
int System::Linq::Expressions::InvocationExpression1::get_ArgumentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression1::get_ArgumentCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArgumentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.InvocationExpression1.GetArgument
System::Linq::Expressions::Expression* System::Linq::Expressions::InvocationExpression1::GetArgument(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression1::GetArgument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.InvocationExpression1.Rewrite
System::Linq::Expressions::InvocationExpression* System::Linq::Expressions::InvocationExpression1::Rewrite(System::Linq::Expressions::Expression* lambda, ::ArrayW<System::Linq::Expressions::Expression*> arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression1::Rewrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lambda), ::il2cpp_utils::ExtractType(arguments)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::InvocationExpression*, false>(this, ___internal__method, lambda, arguments);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.InvocationExpression2
#include "System/Linq/Expressions/InvocationExpression2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object _arg0
::Il2CppObject*& System::Linq::Expressions::InvocationExpression2::dyn__arg0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression2::dyn__arg0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg0"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg1
System::Linq::Expressions::Expression*& System::Linq::Expressions::InvocationExpression2::dyn__arg1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression2::dyn__arg1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg1"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.InvocationExpression2.get_ArgumentCount
int System::Linq::Expressions::InvocationExpression2::get_ArgumentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression2::get_ArgumentCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArgumentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.InvocationExpression2.GetArgument
System::Linq::Expressions::Expression* System::Linq::Expressions::InvocationExpression2::GetArgument(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression2::GetArgument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.InvocationExpression2.Rewrite
System::Linq::Expressions::InvocationExpression* System::Linq::Expressions::InvocationExpression2::Rewrite(System::Linq::Expressions::Expression* lambda, ::ArrayW<System::Linq::Expressions::Expression*> arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression2::Rewrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lambda), ::il2cpp_utils::ExtractType(arguments)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::InvocationExpression*, false>(this, ___internal__method, lambda, arguments);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.InvocationExpression3
#include "System/Linq/Expressions/InvocationExpression3.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object _arg0
::Il2CppObject*& System::Linq::Expressions::InvocationExpression3::dyn__arg0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression3::dyn__arg0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg0"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg1
System::Linq::Expressions::Expression*& System::Linq::Expressions::InvocationExpression3::dyn__arg1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression3::dyn__arg1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg1"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg2
System::Linq::Expressions::Expression*& System::Linq::Expressions::InvocationExpression3::dyn__arg2() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression3::dyn__arg2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg2"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.InvocationExpression3.get_ArgumentCount
int System::Linq::Expressions::InvocationExpression3::get_ArgumentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression3::get_ArgumentCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArgumentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.InvocationExpression3.GetArgument
System::Linq::Expressions::Expression* System::Linq::Expressions::InvocationExpression3::GetArgument(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression3::GetArgument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.InvocationExpression3.Rewrite
System::Linq::Expressions::InvocationExpression* System::Linq::Expressions::InvocationExpression3::Rewrite(System::Linq::Expressions::Expression* lambda, ::ArrayW<System::Linq::Expressions::Expression*> arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression3::Rewrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lambda), ::il2cpp_utils::ExtractType(arguments)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::InvocationExpression*, false>(this, ___internal__method, lambda, arguments);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.InvocationExpression4
#include "System/Linq/Expressions/InvocationExpression4.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object _arg0
::Il2CppObject*& System::Linq::Expressions::InvocationExpression4::dyn__arg0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression4::dyn__arg0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg0"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg1
System::Linq::Expressions::Expression*& System::Linq::Expressions::InvocationExpression4::dyn__arg1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression4::dyn__arg1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg1"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg2
System::Linq::Expressions::Expression*& System::Linq::Expressions::InvocationExpression4::dyn__arg2() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression4::dyn__arg2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg2"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg3
System::Linq::Expressions::Expression*& System::Linq::Expressions::InvocationExpression4::dyn__arg3() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression4::dyn__arg3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg3"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.InvocationExpression4.get_ArgumentCount
int System::Linq::Expressions::InvocationExpression4::get_ArgumentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression4::get_ArgumentCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArgumentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.InvocationExpression4.GetArgument
System::Linq::Expressions::Expression* System::Linq::Expressions::InvocationExpression4::GetArgument(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression4::GetArgument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.InvocationExpression4.Rewrite
System::Linq::Expressions::InvocationExpression* System::Linq::Expressions::InvocationExpression4::Rewrite(System::Linq::Expressions::Expression* lambda, ::ArrayW<System::Linq::Expressions::Expression*> arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression4::Rewrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lambda), ::il2cpp_utils::ExtractType(arguments)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::InvocationExpression*, false>(this, ___internal__method, lambda, arguments);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.InvocationExpression5
#include "System/Linq/Expressions/InvocationExpression5.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object _arg0
::Il2CppObject*& System::Linq::Expressions::InvocationExpression5::dyn__arg0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression5::dyn__arg0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg0"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg1
System::Linq::Expressions::Expression*& System::Linq::Expressions::InvocationExpression5::dyn__arg1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression5::dyn__arg1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg1"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg2
System::Linq::Expressions::Expression*& System::Linq::Expressions::InvocationExpression5::dyn__arg2() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression5::dyn__arg2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg2"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg3
System::Linq::Expressions::Expression*& System::Linq::Expressions::InvocationExpression5::dyn__arg3() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression5::dyn__arg3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg3"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg4
System::Linq::Expressions::Expression*& System::Linq::Expressions::InvocationExpression5::dyn__arg4() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression5::dyn__arg4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg4"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.InvocationExpression5.get_ArgumentCount
int System::Linq::Expressions::InvocationExpression5::get_ArgumentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression5::get_ArgumentCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArgumentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.InvocationExpression5.GetArgument
System::Linq::Expressions::Expression* System::Linq::Expressions::InvocationExpression5::GetArgument(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression5::GetArgument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.InvocationExpression5.Rewrite
System::Linq::Expressions::InvocationExpression* System::Linq::Expressions::InvocationExpression5::Rewrite(System::Linq::Expressions::Expression* lambda, ::ArrayW<System::Linq::Expressions::Expression*> arguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InvocationExpression5::Rewrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lambda), ::il2cpp_utils::ExtractType(arguments)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::InvocationExpression*, false>(this, ___internal__method, lambda, arguments);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.LabelExpression
#include "System/Linq/Expressions/LabelExpression.hpp"
// Including type: System.Linq.Expressions.LabelTarget
#include "System/Linq/Expressions/LabelTarget.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Linq.Expressions.ExpressionType
#include "System/Linq/Expressions/ExpressionType.hpp"
// Including type: System.Linq.Expressions.ExpressionVisitor
#include "System/Linq/Expressions/ExpressionVisitor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.LabelTarget <Target>k__BackingField
System::Linq::Expressions::LabelTarget*& System::Linq::Expressions::LabelExpression::dyn_$Target$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LabelExpression::dyn_$Target$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Target>k__BackingField"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::LabelTarget**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression <DefaultValue>k__BackingField
System::Linq::Expressions::Expression*& System::Linq::Expressions::LabelExpression::dyn_$DefaultValue$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LabelExpression::dyn_$DefaultValue$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DefaultValue>k__BackingField"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.LabelExpression.get_Target
System::Linq::Expressions::LabelTarget* System::Linq::Expressions::LabelExpression::get_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LabelExpression::get_Target");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Target", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::LabelTarget*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.LabelExpression.get_DefaultValue
System::Linq::Expressions::Expression* System::Linq::Expressions::LabelExpression::get_DefaultValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LabelExpression::get_DefaultValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.LabelExpression.Update
System::Linq::Expressions::LabelExpression* System::Linq::Expressions::LabelExpression::Update(System::Linq::Expressions::LabelTarget* target, System::Linq::Expressions::Expression* defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LabelExpression::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::LabelExpression*, false>(this, ___internal__method, target, defaultValue);
}
// Autogenerated method: System.Linq.Expressions.LabelExpression.get_Type
System::Type* System::Linq::Expressions::LabelExpression::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LabelExpression::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.LabelExpression.get_NodeType
System::Linq::Expressions::ExpressionType System::Linq::Expressions::LabelExpression::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LabelExpression::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ExpressionType, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.LabelExpression.Accept
System::Linq::Expressions::Expression* System::Linq::Expressions::LabelExpression::Accept(System::Linq::Expressions::ExpressionVisitor* visitor) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LabelExpression::Accept");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visitor)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, visitor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.LabelTarget
#include "System/Linq/Expressions/LabelTarget.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String <Name>k__BackingField
::StringW& System::Linq::Expressions::LabelTarget::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LabelTarget::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Type <Type>k__BackingField
System::Type*& System::Linq::Expressions::LabelTarget::dyn_$Type$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LabelTarget::dyn_$Type$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Type>k__BackingField"))->offset;
  return *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.LabelTarget.get_Name
::StringW System::Linq::Expressions::LabelTarget::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LabelTarget::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.LabelTarget.get_Type
System::Type* System::Linq::Expressions::LabelTarget::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LabelTarget::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.LabelTarget.ToString
::StringW System::Linq::Expressions::LabelTarget::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LabelTarget::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.LambdaExpression
#include "System/Linq/Expressions/LambdaExpression.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Linq.Expressions.ParameterExpression
#include "System/Linq/Expressions/ParameterExpression.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
// Including type: System.Runtime.CompilerServices.DebugInfoGenerator
#include "System/Runtime/CompilerServices/DebugInfoGenerator.hpp"
// Including type: System.Linq.Expressions.ExpressionType
#include "System/Linq/Expressions/ExpressionType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _body
System::Linq::Expressions::Expression*& System::Linq::Expressions::LambdaExpression::dyn__body() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LambdaExpression::dyn__body");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_body"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.LambdaExpression.get_TypeCore
System::Type* System::Linq::Expressions::LambdaExpression::get_TypeCore() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LambdaExpression::get_TypeCore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.LambdaExpression.get_PublicType
System::Type* System::Linq::Expressions::LambdaExpression::get_PublicType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LambdaExpression::get_PublicType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PublicType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.LambdaExpression.get_Name
::StringW System::Linq::Expressions::LambdaExpression::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LambdaExpression::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.LambdaExpression.get_NameCore
::StringW System::Linq::Expressions::LambdaExpression::get_NameCore() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LambdaExpression::get_NameCore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NameCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.LambdaExpression.get_Body
System::Linq::Expressions::Expression* System::Linq::Expressions::LambdaExpression::get_Body() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LambdaExpression::get_Body");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Body", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.LambdaExpression.get_ReturnType
System::Type* System::Linq::Expressions::LambdaExpression::get_ReturnType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LambdaExpression::get_ReturnType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReturnType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.LambdaExpression.get_TailCall
bool System::Linq::Expressions::LambdaExpression::get_TailCall() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LambdaExpression::get_TailCall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TailCall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.LambdaExpression.get_TailCallCore
bool System::Linq::Expressions::LambdaExpression::get_TailCallCore() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LambdaExpression::get_TailCallCore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TailCallCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.LambdaExpression.System.Linq.Expressions.IParameterProvider.get_ParameterCount
int System::Linq::Expressions::LambdaExpression::System_Linq_Expressions_IParameterProvider_get_ParameterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LambdaExpression::System.Linq.Expressions.IParameterProvider.get_ParameterCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Linq.Expressions.IParameterProvider.get_ParameterCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.LambdaExpression.get_ParameterCount
int System::Linq::Expressions::LambdaExpression::get_ParameterCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LambdaExpression::get_ParameterCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParameterCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.LambdaExpression.System.Linq.Expressions.IParameterProvider.GetParameter
System::Linq::Expressions::ParameterExpression* System::Linq::Expressions::LambdaExpression::System_Linq_Expressions_IParameterProvider_GetParameter(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LambdaExpression::System.Linq.Expressions.IParameterProvider.GetParameter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Linq.Expressions.IParameterProvider.GetParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ParameterExpression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.LambdaExpression.GetParameter
System::Linq::Expressions::ParameterExpression* System::Linq::Expressions::LambdaExpression::GetParameter(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LambdaExpression::GetParameter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ParameterExpression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.LambdaExpression.Compile
System::Delegate* System::Linq::Expressions::LambdaExpression::Compile() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LambdaExpression::Compile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Delegate*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.LambdaExpression.Compile
System::Delegate* System::Linq::Expressions::LambdaExpression::Compile(bool preferInterpretation) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LambdaExpression::Compile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(preferInterpretation)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Delegate*, false>(this, ___internal__method, preferInterpretation);
}
// Autogenerated method: System.Linq.Expressions.LambdaExpression.Compile
System::Delegate* System::Linq::Expressions::LambdaExpression::Compile(System::Runtime::CompilerServices::DebugInfoGenerator* debugInfoGenerator) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LambdaExpression::Compile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(debugInfoGenerator)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Delegate*, false>(this, ___internal__method, debugInfoGenerator);
}
// Autogenerated method: System.Linq.Expressions.LambdaExpression.get_Type
System::Type* System::Linq::Expressions::LambdaExpression::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LambdaExpression::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.LambdaExpression.get_NodeType
System::Linq::Expressions::ExpressionType System::Linq::Expressions::LambdaExpression::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LambdaExpression::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ExpressionType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.ListInitExpression
#include "System/Linq/Expressions/ListInitExpression.hpp"
// Including type: System.Linq.Expressions.NewExpression
#include "System/Linq/Expressions/NewExpression.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Linq.Expressions.ElementInit
#include "System/Linq/Expressions/ElementInit.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.NewExpression <NewExpression>k__BackingField
System::Linq::Expressions::NewExpression*& System::Linq::Expressions::ListInitExpression::dyn_$NewExpression$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ListInitExpression::dyn_$NewExpression$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NewExpression>k__BackingField"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::NewExpression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.ObjectModel.ReadOnlyCollection`1<System.Linq.Expressions.ElementInit> <Initializers>k__BackingField
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::ElementInit*>*& System::Linq::Expressions::ListInitExpression::dyn_$Initializers$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ListInitExpression::dyn_$Initializers$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Initializers>k__BackingField"))->offset;
  return *reinterpret_cast<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::ElementInit*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.ListInitExpression.get_NewExpression
System::Linq::Expressions::NewExpression* System::Linq::Expressions::ListInitExpression::get_NewExpression() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ListInitExpression::get_NewExpression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NewExpression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::NewExpression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.ListInitExpression.get_Initializers
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::ElementInit*>* System::Linq::Expressions::ListInitExpression::get_Initializers() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ListInitExpression::get_Initializers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Initializers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::ElementInit*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.LoopExpression
#include "System/Linq/Expressions/LoopExpression.hpp"
// Including type: System.Linq.Expressions.LabelTarget
#include "System/Linq/Expressions/LabelTarget.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Linq.Expressions.ExpressionType
#include "System/Linq/Expressions/ExpressionType.hpp"
// Including type: System.Linq.Expressions.ExpressionVisitor
#include "System/Linq/Expressions/ExpressionVisitor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression <Body>k__BackingField
System::Linq::Expressions::Expression*& System::Linq::Expressions::LoopExpression::dyn_$Body$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LoopExpression::dyn_$Body$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Body>k__BackingField"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.LabelTarget <BreakLabel>k__BackingField
System::Linq::Expressions::LabelTarget*& System::Linq::Expressions::LoopExpression::dyn_$BreakLabel$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LoopExpression::dyn_$BreakLabel$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BreakLabel>k__BackingField"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::LabelTarget**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.LabelTarget <ContinueLabel>k__BackingField
System::Linq::Expressions::LabelTarget*& System::Linq::Expressions::LoopExpression::dyn_$ContinueLabel$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LoopExpression::dyn_$ContinueLabel$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ContinueLabel>k__BackingField"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::LabelTarget**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.LoopExpression.get_Body
System::Linq::Expressions::Expression* System::Linq::Expressions::LoopExpression::get_Body() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LoopExpression::get_Body");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Body", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.LoopExpression.get_BreakLabel
System::Linq::Expressions::LabelTarget* System::Linq::Expressions::LoopExpression::get_BreakLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LoopExpression::get_BreakLabel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BreakLabel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::LabelTarget*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.LoopExpression.get_ContinueLabel
System::Linq::Expressions::LabelTarget* System::Linq::Expressions::LoopExpression::get_ContinueLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LoopExpression::get_ContinueLabel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContinueLabel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::LabelTarget*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.LoopExpression.Update
System::Linq::Expressions::LoopExpression* System::Linq::Expressions::LoopExpression::Update(System::Linq::Expressions::LabelTarget* breakLabel, System::Linq::Expressions::LabelTarget* continueLabel, System::Linq::Expressions::Expression* body) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LoopExpression::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(breakLabel), ::il2cpp_utils::ExtractType(continueLabel), ::il2cpp_utils::ExtractType(body)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::LoopExpression*, false>(this, ___internal__method, breakLabel, continueLabel, body);
}
// Autogenerated method: System.Linq.Expressions.LoopExpression.get_Type
System::Type* System::Linq::Expressions::LoopExpression::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LoopExpression::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.LoopExpression.get_NodeType
System::Linq::Expressions::ExpressionType System::Linq::Expressions::LoopExpression::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LoopExpression::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ExpressionType, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.LoopExpression.Accept
System::Linq::Expressions::Expression* System::Linq::Expressions::LoopExpression::Accept(System::Linq::Expressions::ExpressionVisitor* visitor) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::LoopExpression::Accept");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visitor)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, visitor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.MemberAssignment
#include "System/Linq/Expressions/MemberAssignment.hpp"
// Including type: System.Linq.Expressions.Expression
#include "System/Linq/Expressions/Expression.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _expression
System::Linq::Expressions::Expression*& System::Linq::Expressions::MemberAssignment::dyn__expression() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MemberAssignment::dyn__expression");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_expression"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.MemberAssignment.get_Expression
System::Linq::Expressions::Expression* System::Linq::Expressions::MemberAssignment::get_Expression() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MemberAssignment::get_Expression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Expression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.MemberBindingType
#include "System/Linq/Expressions/MemberBindingType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.MemberBindingType Assignment
System::Linq::Expressions::MemberBindingType System::Linq::Expressions::MemberBindingType::_get_Assignment() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MemberBindingType::_get_Assignment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::MemberBindingType>("System.Linq.Expressions", "MemberBindingType", "Assignment"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.MemberBindingType Assignment
void System::Linq::Expressions::MemberBindingType::_set_Assignment(System::Linq::Expressions::MemberBindingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MemberBindingType::_set_Assignment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "MemberBindingType", "Assignment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.MemberBindingType MemberBinding
System::Linq::Expressions::MemberBindingType System::Linq::Expressions::MemberBindingType::_get_MemberBinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MemberBindingType::_get_MemberBinding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::MemberBindingType>("System.Linq.Expressions", "MemberBindingType", "MemberBinding"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.MemberBindingType MemberBinding
void System::Linq::Expressions::MemberBindingType::_set_MemberBinding(System::Linq::Expressions::MemberBindingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MemberBindingType::_set_MemberBinding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "MemberBindingType", "MemberBinding", value));
}
// Autogenerated static field getter
// Get static field: static public System.Linq.Expressions.MemberBindingType ListBinding
System::Linq::Expressions::MemberBindingType System::Linq::Expressions::MemberBindingType::_get_ListBinding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MemberBindingType::_get_ListBinding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::MemberBindingType>("System.Linq.Expressions", "MemberBindingType", "ListBinding"));
}
// Autogenerated static field setter
// Set static field: static public System.Linq.Expressions.MemberBindingType ListBinding
void System::Linq::Expressions::MemberBindingType::_set_ListBinding(System::Linq::Expressions::MemberBindingType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MemberBindingType::_set_ListBinding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "MemberBindingType", "ListBinding", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Linq::Expressions::MemberBindingType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MemberBindingType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.MemberBinding
#include "System/Linq/Expressions/MemberBinding.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.MemberBindingType <BindingType>k__BackingField
System::Linq::Expressions::MemberBindingType& System::Linq::Expressions::MemberBinding::dyn_$BindingType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MemberBinding::dyn_$BindingType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BindingType>k__BackingField"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::MemberBindingType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Reflection.MemberInfo <Member>k__BackingField
System::Reflection::MemberInfo*& System::Linq::Expressions::MemberBinding::dyn_$Member$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MemberBinding::dyn_$Member$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Member>k__BackingField"))->offset;
  return *reinterpret_cast<System::Reflection::MemberInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.MemberBinding.get_BindingType
System::Linq::Expressions::MemberBindingType System::Linq::Expressions::MemberBinding::get_BindingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MemberBinding::get_BindingType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BindingType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::MemberBindingType, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.MemberBinding.get_Member
System::Reflection::MemberInfo* System::Linq::Expressions::MemberBinding::get_Member() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MemberBinding::get_Member");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Member", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Reflection::MemberInfo*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.MemberExpression
#include "System/Linq/Expressions/MemberExpression.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.Linq.Expressions.PropertyExpression
#include "System/Linq/Expressions/PropertyExpression.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Linq.Expressions.FieldExpression
#include "System/Linq/Expressions/FieldExpression.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: System.Linq.Expressions.ExpressionType
#include "System/Linq/Expressions/ExpressionType.hpp"
// Including type: System.Linq.Expressions.ExpressionVisitor
#include "System/Linq/Expressions/ExpressionVisitor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression <Expression>k__BackingField
System::Linq::Expressions::Expression*& System::Linq::Expressions::MemberExpression::dyn_$Expression$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MemberExpression::dyn_$Expression$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Expression>k__BackingField"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.MemberExpression.get_Member
System::Reflection::MemberInfo* System::Linq::Expressions::MemberExpression::get_Member() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MemberExpression::get_Member");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Member", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Reflection::MemberInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.MemberExpression.get_Expression
System::Linq::Expressions::Expression* System::Linq::Expressions::MemberExpression::get_Expression() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MemberExpression::get_Expression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Expression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.MemberExpression.Make
System::Linq::Expressions::PropertyExpression* System::Linq::Expressions::MemberExpression::Make(System::Linq::Expressions::Expression* expression, System::Reflection::PropertyInfo* property) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MemberExpression::Make");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "MemberExpression", "Make", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::PropertyExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, property);
}
// Autogenerated method: System.Linq.Expressions.MemberExpression.Make
System::Linq::Expressions::FieldExpression* System::Linq::Expressions::MemberExpression::Make(System::Linq::Expressions::Expression* expression, System::Reflection::FieldInfo* field) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MemberExpression::Make");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "MemberExpression", "Make", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression), ::il2cpp_utils::ExtractType(field)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::FieldExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, expression, field);
}
// Autogenerated method: System.Linq.Expressions.MemberExpression.GetMember
System::Reflection::MemberInfo* System::Linq::Expressions::MemberExpression::GetMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MemberExpression::GetMember");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Reflection::MemberInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.MemberExpression.Update
System::Linq::Expressions::MemberExpression* System::Linq::Expressions::MemberExpression::Update(System::Linq::Expressions::Expression* expression) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MemberExpression::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::MemberExpression*, false>(this, ___internal__method, expression);
}
// Autogenerated method: System.Linq.Expressions.MemberExpression.get_NodeType
System::Linq::Expressions::ExpressionType System::Linq::Expressions::MemberExpression::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MemberExpression::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ExpressionType, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.MemberExpression.Accept
System::Linq::Expressions::Expression* System::Linq::Expressions::MemberExpression::Accept(System::Linq::Expressions::ExpressionVisitor* visitor) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MemberExpression::Accept");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visitor)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, visitor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.FieldExpression
#include "System/Linq/Expressions/FieldExpression.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: System.Linq.Expressions.Expression
#include "System/Linq/Expressions/Expression.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Reflection.FieldInfo _field
System::Reflection::FieldInfo*& System::Linq::Expressions::FieldExpression::dyn__field() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::FieldExpression::dyn__field");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_field"))->offset;
  return *reinterpret_cast<System::Reflection::FieldInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.FieldExpression.get_Type
System::Type* System::Linq::Expressions::FieldExpression::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::FieldExpression::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.FieldExpression.GetMember
System::Reflection::MemberInfo* System::Linq::Expressions::FieldExpression::GetMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::FieldExpression::GetMember");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Reflection::MemberInfo*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.PropertyExpression
#include "System/Linq/Expressions/PropertyExpression.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Linq.Expressions.Expression
#include "System/Linq/Expressions/Expression.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Reflection.PropertyInfo _property
System::Reflection::PropertyInfo*& System::Linq::Expressions::PropertyExpression::dyn__property() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::PropertyExpression::dyn__property");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_property"))->offset;
  return *reinterpret_cast<System::Reflection::PropertyInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.PropertyExpression.get_Type
System::Type* System::Linq::Expressions::PropertyExpression::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::PropertyExpression::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.PropertyExpression.GetMember
System::Reflection::MemberInfo* System::Linq::Expressions::PropertyExpression::GetMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::PropertyExpression::GetMember");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Reflection::MemberInfo*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.MemberInitExpression
#include "System/Linq/Expressions/MemberInitExpression.hpp"
// Including type: System.Linq.Expressions.NewExpression
#include "System/Linq/Expressions/NewExpression.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Linq.Expressions.MemberBinding
#include "System/Linq/Expressions/MemberBinding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.NewExpression <NewExpression>k__BackingField
System::Linq::Expressions::NewExpression*& System::Linq::Expressions::MemberInitExpression::dyn_$NewExpression$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MemberInitExpression::dyn_$NewExpression$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NewExpression>k__BackingField"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::NewExpression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.ObjectModel.ReadOnlyCollection`1<System.Linq.Expressions.MemberBinding> <Bindings>k__BackingField
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::MemberBinding*>*& System::Linq::Expressions::MemberInitExpression::dyn_$Bindings$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MemberInitExpression::dyn_$Bindings$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Bindings>k__BackingField"))->offset;
  return *reinterpret_cast<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::MemberBinding*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.MemberInitExpression.get_NewExpression
System::Linq::Expressions::NewExpression* System::Linq::Expressions::MemberInitExpression::get_NewExpression() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MemberInitExpression::get_NewExpression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NewExpression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::NewExpression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.MemberInitExpression.get_Bindings
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::MemberBinding*>* System::Linq::Expressions::MemberInitExpression::get_Bindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MemberInitExpression::get_Bindings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Bindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::MemberBinding*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.MemberListBinding
#include "System/Linq/Expressions/MemberListBinding.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Linq.Expressions.ElementInit
#include "System/Linq/Expressions/ElementInit.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.ObjectModel.ReadOnlyCollection`1<System.Linq.Expressions.ElementInit> <Initializers>k__BackingField
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::ElementInit*>*& System::Linq::Expressions::MemberListBinding::dyn_$Initializers$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MemberListBinding::dyn_$Initializers$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Initializers>k__BackingField"))->offset;
  return *reinterpret_cast<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::ElementInit*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.MemberListBinding.get_Initializers
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::ElementInit*>* System::Linq::Expressions::MemberListBinding::get_Initializers() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MemberListBinding::get_Initializers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Initializers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::ElementInit*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.MemberMemberBinding
#include "System/Linq/Expressions/MemberMemberBinding.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.ObjectModel.ReadOnlyCollection`1<System.Linq.Expressions.MemberBinding> <Bindings>k__BackingField
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::MemberBinding*>*& System::Linq::Expressions::MemberMemberBinding::dyn_$Bindings$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MemberMemberBinding::dyn_$Bindings$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Bindings>k__BackingField"))->offset;
  return *reinterpret_cast<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::MemberBinding*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.MemberMemberBinding.get_Bindings
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::MemberBinding*>* System::Linq::Expressions::MemberMemberBinding::get_Bindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MemberMemberBinding::get_Bindings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Bindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::MemberBinding*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.MethodCallExpression
#include "System/Linq/Expressions/MethodCallExpression.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Linq.Expressions.ExpressionType
#include "System/Linq/Expressions/ExpressionType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Linq.Expressions.ExpressionVisitor
#include "System/Linq/Expressions/ExpressionVisitor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Reflection.MethodInfo <Method>k__BackingField
System::Reflection::MethodInfo*& System::Linq::Expressions::MethodCallExpression::dyn_$Method$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression::dyn_$Method$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Method>k__BackingField"))->offset;
  return *reinterpret_cast<System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.MethodCallExpression.get_Method
System::Reflection::MethodInfo* System::Linq::Expressions::MethodCallExpression::get_Method() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression::get_Method");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Reflection::MethodInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.MethodCallExpression.get_Object
System::Linq::Expressions::Expression* System::Linq::Expressions::MethodCallExpression::get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression::get_Object");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Object", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.MethodCallExpression.get_ArgumentCount
int System::Linq::Expressions::MethodCallExpression::get_ArgumentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression::get_ArgumentCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArgumentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.MethodCallExpression.GetInstance
System::Linq::Expressions::Expression* System::Linq::Expressions::MethodCallExpression::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression::GetInstance");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.MethodCallExpression.Rewrite
System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::MethodCallExpression::Rewrite(System::Linq::Expressions::Expression* instance, System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::Expression*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression::Rewrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::MethodCallExpression*, false>(this, ___internal__method, instance, args);
}
// Autogenerated method: System.Linq.Expressions.MethodCallExpression.GetArgument
System::Linq::Expressions::Expression* System::Linq::Expressions::MethodCallExpression::GetArgument(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression::GetArgument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.MethodCallExpression.get_NodeType
System::Linq::Expressions::ExpressionType System::Linq::Expressions::MethodCallExpression::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ExpressionType, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.MethodCallExpression.get_Type
System::Type* System::Linq::Expressions::MethodCallExpression::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.MethodCallExpression.Accept
System::Linq::Expressions::Expression* System::Linq::Expressions::MethodCallExpression::Accept(System::Linq::Expressions::ExpressionVisitor* visitor) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression::Accept");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visitor)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, visitor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.InstanceMethodCallExpression
#include "System/Linq/Expressions/InstanceMethodCallExpression.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _instance
System::Linq::Expressions::Expression*& System::Linq::Expressions::InstanceMethodCallExpression::dyn__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InstanceMethodCallExpression::dyn__instance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_instance"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.InstanceMethodCallExpression.GetInstance
System::Linq::Expressions::Expression* System::Linq::Expressions::InstanceMethodCallExpression::GetInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InstanceMethodCallExpression::GetInstance");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.MethodCallExpressionN
#include "System/Linq/Expressions/MethodCallExpressionN.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IReadOnlyList`1<System.Linq.Expressions.Expression> _arguments
System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::Expression*>*& System::Linq::Expressions::MethodCallExpressionN::dyn__arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpressionN::dyn__arguments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arguments"))->offset;
  return *reinterpret_cast<System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::Expression*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.MethodCallExpressionN.get_ArgumentCount
int System::Linq::Expressions::MethodCallExpressionN::get_ArgumentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpressionN::get_ArgumentCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArgumentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.MethodCallExpressionN.GetArgument
System::Linq::Expressions::Expression* System::Linq::Expressions::MethodCallExpressionN::GetArgument(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpressionN::GetArgument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.MethodCallExpressionN.Rewrite
System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::MethodCallExpressionN::Rewrite(System::Linq::Expressions::Expression* instance, System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::Expression*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpressionN::Rewrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::MethodCallExpression*, false>(this, ___internal__method, instance, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.InstanceMethodCallExpressionN
#include "System/Linq/Expressions/InstanceMethodCallExpressionN.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IReadOnlyList`1<System.Linq.Expressions.Expression> _arguments
System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::Expression*>*& System::Linq::Expressions::InstanceMethodCallExpressionN::dyn__arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InstanceMethodCallExpressionN::dyn__arguments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arguments"))->offset;
  return *reinterpret_cast<System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::Expression*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.InstanceMethodCallExpressionN.get_ArgumentCount
int System::Linq::Expressions::InstanceMethodCallExpressionN::get_ArgumentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InstanceMethodCallExpressionN::get_ArgumentCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArgumentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.InstanceMethodCallExpressionN.GetArgument
System::Linq::Expressions::Expression* System::Linq::Expressions::InstanceMethodCallExpressionN::GetArgument(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InstanceMethodCallExpressionN::GetArgument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.InstanceMethodCallExpressionN.Rewrite
System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::InstanceMethodCallExpressionN::Rewrite(System::Linq::Expressions::Expression* instance, System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::Expression*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InstanceMethodCallExpressionN::Rewrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::MethodCallExpression*, false>(this, ___internal__method, instance, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.MethodCallExpression0
#include "System/Linq/Expressions/MethodCallExpression0.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.MethodCallExpression0.get_ArgumentCount
int System::Linq::Expressions::MethodCallExpression0::get_ArgumentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression0::get_ArgumentCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArgumentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.MethodCallExpression0.GetArgument
System::Linq::Expressions::Expression* System::Linq::Expressions::MethodCallExpression0::GetArgument(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression0::GetArgument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.MethodCallExpression0.Rewrite
System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::MethodCallExpression0::Rewrite(System::Linq::Expressions::Expression* instance, System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::Expression*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression0::Rewrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::MethodCallExpression*, false>(this, ___internal__method, instance, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.MethodCallExpression1
#include "System/Linq/Expressions/MethodCallExpression1.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object _arg0
::Il2CppObject*& System::Linq::Expressions::MethodCallExpression1::dyn__arg0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression1::dyn__arg0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg0"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.MethodCallExpression1.get_ArgumentCount
int System::Linq::Expressions::MethodCallExpression1::get_ArgumentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression1::get_ArgumentCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArgumentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.MethodCallExpression1.GetArgument
System::Linq::Expressions::Expression* System::Linq::Expressions::MethodCallExpression1::GetArgument(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression1::GetArgument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.MethodCallExpression1.Rewrite
System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::MethodCallExpression1::Rewrite(System::Linq::Expressions::Expression* instance, System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::Expression*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression1::Rewrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::MethodCallExpression*, false>(this, ___internal__method, instance, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.MethodCallExpression2
#include "System/Linq/Expressions/MethodCallExpression2.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object _arg0
::Il2CppObject*& System::Linq::Expressions::MethodCallExpression2::dyn__arg0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression2::dyn__arg0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg0"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg1
System::Linq::Expressions::Expression*& System::Linq::Expressions::MethodCallExpression2::dyn__arg1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression2::dyn__arg1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg1"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.MethodCallExpression2.get_ArgumentCount
int System::Linq::Expressions::MethodCallExpression2::get_ArgumentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression2::get_ArgumentCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArgumentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.MethodCallExpression2.GetArgument
System::Linq::Expressions::Expression* System::Linq::Expressions::MethodCallExpression2::GetArgument(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression2::GetArgument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.MethodCallExpression2.Rewrite
System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::MethodCallExpression2::Rewrite(System::Linq::Expressions::Expression* instance, System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::Expression*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression2::Rewrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::MethodCallExpression*, false>(this, ___internal__method, instance, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.MethodCallExpression3
#include "System/Linq/Expressions/MethodCallExpression3.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object _arg0
::Il2CppObject*& System::Linq::Expressions::MethodCallExpression3::dyn__arg0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression3::dyn__arg0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg0"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg1
System::Linq::Expressions::Expression*& System::Linq::Expressions::MethodCallExpression3::dyn__arg1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression3::dyn__arg1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg1"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg2
System::Linq::Expressions::Expression*& System::Linq::Expressions::MethodCallExpression3::dyn__arg2() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression3::dyn__arg2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg2"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.MethodCallExpression3.get_ArgumentCount
int System::Linq::Expressions::MethodCallExpression3::get_ArgumentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression3::get_ArgumentCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArgumentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.MethodCallExpression3.GetArgument
System::Linq::Expressions::Expression* System::Linq::Expressions::MethodCallExpression3::GetArgument(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression3::GetArgument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.MethodCallExpression3.Rewrite
System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::MethodCallExpression3::Rewrite(System::Linq::Expressions::Expression* instance, System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::Expression*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression3::Rewrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::MethodCallExpression*, false>(this, ___internal__method, instance, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.MethodCallExpression4
#include "System/Linq/Expressions/MethodCallExpression4.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object _arg0
::Il2CppObject*& System::Linq::Expressions::MethodCallExpression4::dyn__arg0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression4::dyn__arg0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg0"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg1
System::Linq::Expressions::Expression*& System::Linq::Expressions::MethodCallExpression4::dyn__arg1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression4::dyn__arg1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg1"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg2
System::Linq::Expressions::Expression*& System::Linq::Expressions::MethodCallExpression4::dyn__arg2() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression4::dyn__arg2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg2"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg3
System::Linq::Expressions::Expression*& System::Linq::Expressions::MethodCallExpression4::dyn__arg3() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression4::dyn__arg3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg3"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.MethodCallExpression4.get_ArgumentCount
int System::Linq::Expressions::MethodCallExpression4::get_ArgumentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression4::get_ArgumentCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArgumentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.MethodCallExpression4.GetArgument
System::Linq::Expressions::Expression* System::Linq::Expressions::MethodCallExpression4::GetArgument(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression4::GetArgument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.MethodCallExpression4.Rewrite
System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::MethodCallExpression4::Rewrite(System::Linq::Expressions::Expression* instance, System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::Expression*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression4::Rewrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::MethodCallExpression*, false>(this, ___internal__method, instance, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.MethodCallExpression5
#include "System/Linq/Expressions/MethodCallExpression5.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object _arg0
::Il2CppObject*& System::Linq::Expressions::MethodCallExpression5::dyn__arg0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression5::dyn__arg0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg0"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg1
System::Linq::Expressions::Expression*& System::Linq::Expressions::MethodCallExpression5::dyn__arg1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression5::dyn__arg1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg1"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg2
System::Linq::Expressions::Expression*& System::Linq::Expressions::MethodCallExpression5::dyn__arg2() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression5::dyn__arg2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg2"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg3
System::Linq::Expressions::Expression*& System::Linq::Expressions::MethodCallExpression5::dyn__arg3() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression5::dyn__arg3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg3"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg4
System::Linq::Expressions::Expression*& System::Linq::Expressions::MethodCallExpression5::dyn__arg4() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression5::dyn__arg4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg4"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.MethodCallExpression5.get_ArgumentCount
int System::Linq::Expressions::MethodCallExpression5::get_ArgumentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression5::get_ArgumentCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArgumentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.MethodCallExpression5.GetArgument
System::Linq::Expressions::Expression* System::Linq::Expressions::MethodCallExpression5::GetArgument(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression5::GetArgument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.MethodCallExpression5.Rewrite
System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::MethodCallExpression5::Rewrite(System::Linq::Expressions::Expression* instance, System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::Expression*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::MethodCallExpression5::Rewrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::MethodCallExpression*, false>(this, ___internal__method, instance, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.InstanceMethodCallExpression0
#include "System/Linq/Expressions/InstanceMethodCallExpression0.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.InstanceMethodCallExpression0.get_ArgumentCount
int System::Linq::Expressions::InstanceMethodCallExpression0::get_ArgumentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InstanceMethodCallExpression0::get_ArgumentCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArgumentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.InstanceMethodCallExpression0.GetArgument
System::Linq::Expressions::Expression* System::Linq::Expressions::InstanceMethodCallExpression0::GetArgument(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InstanceMethodCallExpression0::GetArgument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.InstanceMethodCallExpression0.Rewrite
System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::InstanceMethodCallExpression0::Rewrite(System::Linq::Expressions::Expression* instance, System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::Expression*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InstanceMethodCallExpression0::Rewrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::MethodCallExpression*, false>(this, ___internal__method, instance, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.InstanceMethodCallExpression1
#include "System/Linq/Expressions/InstanceMethodCallExpression1.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object _arg0
::Il2CppObject*& System::Linq::Expressions::InstanceMethodCallExpression1::dyn__arg0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InstanceMethodCallExpression1::dyn__arg0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg0"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.InstanceMethodCallExpression1.get_ArgumentCount
int System::Linq::Expressions::InstanceMethodCallExpression1::get_ArgumentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InstanceMethodCallExpression1::get_ArgumentCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArgumentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.InstanceMethodCallExpression1.GetArgument
System::Linq::Expressions::Expression* System::Linq::Expressions::InstanceMethodCallExpression1::GetArgument(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InstanceMethodCallExpression1::GetArgument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.InstanceMethodCallExpression1.Rewrite
System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::InstanceMethodCallExpression1::Rewrite(System::Linq::Expressions::Expression* instance, System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::Expression*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InstanceMethodCallExpression1::Rewrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::MethodCallExpression*, false>(this, ___internal__method, instance, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.InstanceMethodCallExpression2
#include "System/Linq/Expressions/InstanceMethodCallExpression2.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object _arg0
::Il2CppObject*& System::Linq::Expressions::InstanceMethodCallExpression2::dyn__arg0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InstanceMethodCallExpression2::dyn__arg0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg0"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg1
System::Linq::Expressions::Expression*& System::Linq::Expressions::InstanceMethodCallExpression2::dyn__arg1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InstanceMethodCallExpression2::dyn__arg1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg1"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.InstanceMethodCallExpression2.get_ArgumentCount
int System::Linq::Expressions::InstanceMethodCallExpression2::get_ArgumentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InstanceMethodCallExpression2::get_ArgumentCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArgumentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.InstanceMethodCallExpression2.GetArgument
System::Linq::Expressions::Expression* System::Linq::Expressions::InstanceMethodCallExpression2::GetArgument(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InstanceMethodCallExpression2::GetArgument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.InstanceMethodCallExpression2.Rewrite
System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::InstanceMethodCallExpression2::Rewrite(System::Linq::Expressions::Expression* instance, System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::Expression*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InstanceMethodCallExpression2::Rewrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::MethodCallExpression*, false>(this, ___internal__method, instance, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.InstanceMethodCallExpression3
#include "System/Linq/Expressions/InstanceMethodCallExpression3.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object _arg0
::Il2CppObject*& System::Linq::Expressions::InstanceMethodCallExpression3::dyn__arg0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InstanceMethodCallExpression3::dyn__arg0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg0"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg1
System::Linq::Expressions::Expression*& System::Linq::Expressions::InstanceMethodCallExpression3::dyn__arg1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InstanceMethodCallExpression3::dyn__arg1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg1"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression _arg2
System::Linq::Expressions::Expression*& System::Linq::Expressions::InstanceMethodCallExpression3::dyn__arg2() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InstanceMethodCallExpression3::dyn__arg2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arg2"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.InstanceMethodCallExpression3.get_ArgumentCount
int System::Linq::Expressions::InstanceMethodCallExpression3::get_ArgumentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InstanceMethodCallExpression3::get_ArgumentCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArgumentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.InstanceMethodCallExpression3.GetArgument
System::Linq::Expressions::Expression* System::Linq::Expressions::InstanceMethodCallExpression3::GetArgument(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InstanceMethodCallExpression3::GetArgument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Linq.Expressions.InstanceMethodCallExpression3.Rewrite
System::Linq::Expressions::MethodCallExpression* System::Linq::Expressions::InstanceMethodCallExpression3::Rewrite(System::Linq::Expressions::Expression* instance, System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::Expression*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::InstanceMethodCallExpression3::Rewrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rewrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::MethodCallExpression*, false>(this, ___internal__method, instance, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.NewArrayExpression
#include "System/Linq/Expressions/NewArrayExpression.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Linq.Expressions.ExpressionType
#include "System/Linq/Expressions/ExpressionType.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Linq.Expressions.ExpressionVisitor
#include "System/Linq/Expressions/ExpressionVisitor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Type <Type>k__BackingField
System::Type*& System::Linq::Expressions::NewArrayExpression::dyn_$Type$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::NewArrayExpression::dyn_$Type$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Type>k__BackingField"))->offset;
  return *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.ObjectModel.ReadOnlyCollection`1<System.Linq.Expressions.Expression> <Expressions>k__BackingField
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>*& System::Linq::Expressions::NewArrayExpression::dyn_$Expressions$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::NewArrayExpression::dyn_$Expressions$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Expressions>k__BackingField"))->offset;
  return *reinterpret_cast<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.NewArrayExpression.get_Expressions
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>* System::Linq::Expressions::NewArrayExpression::get_Expressions() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::NewArrayExpression::get_Expressions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Expressions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.NewArrayExpression.Make
System::Linq::Expressions::NewArrayExpression* System::Linq::Expressions::NewArrayExpression::Make(System::Linq::Expressions::ExpressionType nodeType, System::Type* type, System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>* expressions) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::NewArrayExpression::Make");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "NewArrayExpression", "Make", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(expressions)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::NewArrayExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nodeType, type, expressions);
}
// Autogenerated method: System.Linq.Expressions.NewArrayExpression.Update
System::Linq::Expressions::NewArrayExpression* System::Linq::Expressions::NewArrayExpression::Update(System::Collections::Generic::IEnumerable_1<System::Linq::Expressions::Expression*>* expressions) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::NewArrayExpression::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expressions)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::NewArrayExpression*, false>(this, ___internal__method, expressions);
}
// Autogenerated method: System.Linq.Expressions.NewArrayExpression.get_Type
System::Type* System::Linq::Expressions::NewArrayExpression::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::NewArrayExpression::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.NewArrayExpression.Accept
System::Linq::Expressions::Expression* System::Linq::Expressions::NewArrayExpression::Accept(System::Linq::Expressions::ExpressionVisitor* visitor) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::NewArrayExpression::Accept");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visitor)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, visitor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.NewArrayInitExpression
#include "System/Linq/Expressions/NewArrayInitExpression.hpp"
// Including type: System.Linq.Expressions.ExpressionType
#include "System/Linq/Expressions/ExpressionType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.NewArrayInitExpression.get_NodeType
System::Linq::Expressions::ExpressionType System::Linq::Expressions::NewArrayInitExpression::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::NewArrayInitExpression::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ExpressionType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.NewArrayBoundsExpression
#include "System/Linq/Expressions/NewArrayBoundsExpression.hpp"
// Including type: System.Linq.Expressions.ExpressionType
#include "System/Linq/Expressions/ExpressionType.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.NewArrayBoundsExpression.get_NodeType
System::Linq::Expressions::ExpressionType System::Linq::Expressions::NewArrayBoundsExpression::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::NewArrayBoundsExpression::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ExpressionType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.NewExpression
#include "System/Linq/Expressions/NewExpression.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IReadOnlyList`1<System.Linq.Expressions.Expression> _arguments
System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::Expression*>*& System::Linq::Expressions::NewExpression::dyn__arguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::NewExpression::dyn__arguments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_arguments"))->offset;
  return *reinterpret_cast<System::Collections::Generic::IReadOnlyList_1<System::Linq::Expressions::Expression*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Reflection.ConstructorInfo <Constructor>k__BackingField
System::Reflection::ConstructorInfo*& System::Linq::Expressions::NewExpression::dyn_$Constructor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::NewExpression::dyn_$Constructor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Constructor>k__BackingField"))->offset;
  return *reinterpret_cast<System::Reflection::ConstructorInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.NewExpression.get_Constructor
System::Reflection::ConstructorInfo* System::Linq::Expressions::NewExpression::get_Constructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::NewExpression::get_Constructor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Constructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Reflection::ConstructorInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.NewExpression.GetArgument
System::Linq::Expressions::Expression* System::Linq::Expressions::NewExpression::GetArgument(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::NewExpression::GetArgument");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.ParameterExpression
#include "System/Linq/Expressions/ParameterExpression.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Linq.Expressions.ExpressionType
#include "System/Linq/Expressions/ExpressionType.hpp"
// Including type: System.Linq.Expressions.ExpressionVisitor
#include "System/Linq/Expressions/ExpressionVisitor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.String <Name>k__BackingField
::StringW& System::Linq::Expressions::ParameterExpression::dyn_$Name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ParameterExpression::dyn_$Name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.ParameterExpression.get_Name
::StringW System::Linq::Expressions::ParameterExpression::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ParameterExpression::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.ParameterExpression.get_IsByRef
bool System::Linq::Expressions::ParameterExpression::get_IsByRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ParameterExpression::get_IsByRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsByRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.ParameterExpression.Make
System::Linq::Expressions::ParameterExpression* System::Linq::Expressions::ParameterExpression::Make(System::Type* type, ::StringW name, bool isByRef) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ParameterExpression::Make");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "ParameterExpression", "Make", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(isByRef)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ParameterExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type, name, isByRef);
}
// Autogenerated method: System.Linq.Expressions.ParameterExpression.GetIsByRef
bool System::Linq::Expressions::ParameterExpression::GetIsByRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ParameterExpression::GetIsByRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIsByRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.ParameterExpression.get_Type
System::Type* System::Linq::Expressions::ParameterExpression::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ParameterExpression::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.ParameterExpression.get_NodeType
System::Linq::Expressions::ExpressionType System::Linq::Expressions::ParameterExpression::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ParameterExpression::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ExpressionType, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.ParameterExpression.Accept
System::Linq::Expressions::Expression* System::Linq::Expressions::ParameterExpression::Accept(System::Linq::Expressions::ExpressionVisitor* visitor) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ParameterExpression::Accept");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visitor)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, visitor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.ByRefParameterExpression
#include "System/Linq/Expressions/ByRefParameterExpression.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.ByRefParameterExpression.GetIsByRef
bool System::Linq::Expressions::ByRefParameterExpression::GetIsByRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::ByRefParameterExpression::GetIsByRef");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIsByRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.TypedParameterExpression
#include "System/Linq/Expressions/TypedParameterExpression.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Type <Type>k__BackingField
System::Type*& System::Linq::Expressions::TypedParameterExpression::dyn_$Type$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::TypedParameterExpression::dyn_$Type$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Type>k__BackingField"))->offset;
  return *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.TypedParameterExpression.get_Type
System::Type* System::Linq::Expressions::TypedParameterExpression::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::TypedParameterExpression::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.RuntimeVariablesExpression
#include "System/Linq/Expressions/RuntimeVariablesExpression.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Linq.Expressions.ParameterExpression
#include "System/Linq/Expressions/ParameterExpression.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.ObjectModel.ReadOnlyCollection`1<System.Linq.Expressions.ParameterExpression> <Variables>k__BackingField
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::ParameterExpression*>*& System::Linq::Expressions::RuntimeVariablesExpression::dyn_$Variables$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::RuntimeVariablesExpression::dyn_$Variables$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Variables>k__BackingField"))->offset;
  return *reinterpret_cast<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::ParameterExpression*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.RuntimeVariablesExpression.get_Variables
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::ParameterExpression*>* System::Linq::Expressions::RuntimeVariablesExpression::get_Variables() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::RuntimeVariablesExpression::get_Variables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Variables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::ParameterExpression*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.StackGuard
#include "System/Linq/Expressions/StackGuard.hpp"
// Including type: System.Linq.Expressions.StackGuard/System.Linq.Expressions.<>c__3`2
#include "System/Linq/Expressions/StackGuard_--c__3_2.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _executionStackCount
int& System::Linq::Expressions::StackGuard::dyn__executionStackCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::StackGuard::dyn__executionStackCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_executionStackCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.StackGuard.TryEnterOnCurrentStack
bool System::Linq::Expressions::StackGuard::TryEnterOnCurrentStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::StackGuard::TryEnterOnCurrentStack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryEnterOnCurrentStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.Strings
#include "System/Linq/Expressions/Strings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.Strings.get_ReducibleMustOverrideReduce
::StringW System::Linq::Expressions::Strings::get_ReducibleMustOverrideReduce() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_ReducibleMustOverrideReduce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_ReducibleMustOverrideReduce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_MustReduceToDifferent
::StringW System::Linq::Expressions::Strings::get_MustReduceToDifferent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_MustReduceToDifferent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_MustReduceToDifferent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_ReducedNotCompatible
::StringW System::Linq::Expressions::Strings::get_ReducedNotCompatible() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_ReducedNotCompatible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_ReducedNotCompatible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_SetterHasNoParams
::StringW System::Linq::Expressions::Strings::get_SetterHasNoParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_SetterHasNoParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_SetterHasNoParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_PropertyCannotHaveRefType
::StringW System::Linq::Expressions::Strings::get_PropertyCannotHaveRefType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_PropertyCannotHaveRefType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_PropertyCannotHaveRefType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_IndexesOfSetGetMustMatch
::StringW System::Linq::Expressions::Strings::get_IndexesOfSetGetMustMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_IndexesOfSetGetMustMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_IndexesOfSetGetMustMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_AccessorsCannotHaveVarArgs
::StringW System::Linq::Expressions::Strings::get_AccessorsCannotHaveVarArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_AccessorsCannotHaveVarArgs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_AccessorsCannotHaveVarArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_AccessorsCannotHaveByRefArgs
::StringW System::Linq::Expressions::Strings::get_AccessorsCannotHaveByRefArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_AccessorsCannotHaveByRefArgs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_AccessorsCannotHaveByRefArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_BoundsCannotBeLessThanOne
::StringW System::Linq::Expressions::Strings::get_BoundsCannotBeLessThanOne() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_BoundsCannotBeLessThanOne");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_BoundsCannotBeLessThanOne", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_TypeMustNotBeByRef
::StringW System::Linq::Expressions::Strings::get_TypeMustNotBeByRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_TypeMustNotBeByRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_TypeMustNotBeByRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_TypeMustNotBePointer
::StringW System::Linq::Expressions::Strings::get_TypeMustNotBePointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_TypeMustNotBePointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_TypeMustNotBePointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_SetterMustBeVoid
::StringW System::Linq::Expressions::Strings::get_SetterMustBeVoid() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_SetterMustBeVoid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_SetterMustBeVoid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_PropertyTypeMustMatchGetter
::StringW System::Linq::Expressions::Strings::get_PropertyTypeMustMatchGetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_PropertyTypeMustMatchGetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_PropertyTypeMustMatchGetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_PropertyTypeMustMatchSetter
::StringW System::Linq::Expressions::Strings::get_PropertyTypeMustMatchSetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_PropertyTypeMustMatchSetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_PropertyTypeMustMatchSetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_BothAccessorsMustBeStatic
::StringW System::Linq::Expressions::Strings::get_BothAccessorsMustBeStatic() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_BothAccessorsMustBeStatic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_BothAccessorsMustBeStatic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_OnlyStaticFieldsHaveNullInstance
::StringW System::Linq::Expressions::Strings::get_OnlyStaticFieldsHaveNullInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_OnlyStaticFieldsHaveNullInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_OnlyStaticFieldsHaveNullInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_OnlyStaticPropertiesHaveNullInstance
::StringW System::Linq::Expressions::Strings::get_OnlyStaticPropertiesHaveNullInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_OnlyStaticPropertiesHaveNullInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_OnlyStaticPropertiesHaveNullInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_OnlyStaticMethodsHaveNullInstance
::StringW System::Linq::Expressions::Strings::get_OnlyStaticMethodsHaveNullInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_OnlyStaticMethodsHaveNullInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_OnlyStaticMethodsHaveNullInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_PropertyTypeCannotBeVoid
::StringW System::Linq::Expressions::Strings::get_PropertyTypeCannotBeVoid() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_PropertyTypeCannotBeVoid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_PropertyTypeCannotBeVoid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_InvalidUnboxType
::StringW System::Linq::Expressions::Strings::get_InvalidUnboxType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_InvalidUnboxType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_InvalidUnboxType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_ExpressionMustBeWriteable
::StringW System::Linq::Expressions::Strings::get_ExpressionMustBeWriteable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_ExpressionMustBeWriteable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_ExpressionMustBeWriteable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_ArgumentMustNotHaveValueType
::StringW System::Linq::Expressions::Strings::get_ArgumentMustNotHaveValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_ArgumentMustNotHaveValueType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_ArgumentMustNotHaveValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_MustBeReducible
::StringW System::Linq::Expressions::Strings::get_MustBeReducible() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_MustBeReducible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_MustBeReducible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_LabelMustBeVoidOrHaveExpression
::StringW System::Linq::Expressions::Strings::get_LabelMustBeVoidOrHaveExpression() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_LabelMustBeVoidOrHaveExpression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_LabelMustBeVoidOrHaveExpression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_LabelTypeMustBeVoid
::StringW System::Linq::Expressions::Strings::get_LabelTypeMustBeVoid() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_LabelTypeMustBeVoid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_LabelTypeMustBeVoid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_QuotedExpressionMustBeLambda
::StringW System::Linq::Expressions::Strings::get_QuotedExpressionMustBeLambda() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_QuotedExpressionMustBeLambda");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_QuotedExpressionMustBeLambda", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_CollectionModifiedWhileEnumerating
::StringW System::Linq::Expressions::Strings::get_CollectionModifiedWhileEnumerating() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_CollectionModifiedWhileEnumerating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_CollectionModifiedWhileEnumerating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_CollectionReadOnly
::StringW System::Linq::Expressions::Strings::get_CollectionReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_CollectionReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_CollectionReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_BindingCannotBeNull
::StringW System::Linq::Expressions::Strings::get_BindingCannotBeNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_BindingCannotBeNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_BindingCannotBeNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_NoOrInvalidRuleProduced
::StringW System::Linq::Expressions::Strings::get_NoOrInvalidRuleProduced() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_NoOrInvalidRuleProduced");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_NoOrInvalidRuleProduced", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_TypeMustBeDerivedFromSystemDelegate
::StringW System::Linq::Expressions::Strings::get_TypeMustBeDerivedFromSystemDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_TypeMustBeDerivedFromSystemDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_TypeMustBeDerivedFromSystemDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_FirstArgumentMustBeCallSite
::StringW System::Linq::Expressions::Strings::get_FirstArgumentMustBeCallSite() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_FirstArgumentMustBeCallSite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_FirstArgumentMustBeCallSite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_FaultCannotHaveCatchOrFinally
::StringW System::Linq::Expressions::Strings::get_FaultCannotHaveCatchOrFinally() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_FaultCannotHaveCatchOrFinally");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_FaultCannotHaveCatchOrFinally", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_TryMustHaveCatchFinallyOrFault
::StringW System::Linq::Expressions::Strings::get_TryMustHaveCatchFinallyOrFault() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_TryMustHaveCatchFinallyOrFault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_TryMustHaveCatchFinallyOrFault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_BodyOfCatchMustHaveSameTypeAsBodyOfTry
::StringW System::Linq::Expressions::Strings::get_BodyOfCatchMustHaveSameTypeAsBodyOfTry() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_BodyOfCatchMustHaveSameTypeAsBodyOfTry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_BodyOfCatchMustHaveSameTypeAsBodyOfTry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_ConversionIsNotSupportedForArithmeticTypes
::StringW System::Linq::Expressions::Strings::get_ConversionIsNotSupportedForArithmeticTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_ConversionIsNotSupportedForArithmeticTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_ConversionIsNotSupportedForArithmeticTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_ArgumentMustBeArray
::StringW System::Linq::Expressions::Strings::get_ArgumentMustBeArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_ArgumentMustBeArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_ArgumentMustBeArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_ArgumentMustBeBoolean
::StringW System::Linq::Expressions::Strings::get_ArgumentMustBeBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_ArgumentMustBeBoolean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_ArgumentMustBeBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_ArgumentMustBeInteger
::StringW System::Linq::Expressions::Strings::get_ArgumentMustBeInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_ArgumentMustBeInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_ArgumentMustBeInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_ArgumentMustBeArrayIndexType
::StringW System::Linq::Expressions::Strings::get_ArgumentMustBeArrayIndexType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_ArgumentMustBeArrayIndexType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_ArgumentMustBeArrayIndexType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_ArgumentMustBeSingleDimensionalArrayType
::StringW System::Linq::Expressions::Strings::get_ArgumentMustBeSingleDimensionalArrayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_ArgumentMustBeSingleDimensionalArrayType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_ArgumentMustBeSingleDimensionalArrayType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_ArgumentTypesMustMatch
::StringW System::Linq::Expressions::Strings::get_ArgumentTypesMustMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_ArgumentTypesMustMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_ArgumentTypesMustMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_CoalesceUsedOnNonNullType
::StringW System::Linq::Expressions::Strings::get_CoalesceUsedOnNonNullType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_CoalesceUsedOnNonNullType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_CoalesceUsedOnNonNullType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_IncorrectNumberOfIndexes
::StringW System::Linq::Expressions::Strings::get_IncorrectNumberOfIndexes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_IncorrectNumberOfIndexes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_IncorrectNumberOfIndexes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_IncorrectNumberOfLambdaDeclarationParameters
::StringW System::Linq::Expressions::Strings::get_IncorrectNumberOfLambdaDeclarationParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_IncorrectNumberOfLambdaDeclarationParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_IncorrectNumberOfLambdaDeclarationParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_LambdaTypeMustBeDerivedFromSystemDelegate
::StringW System::Linq::Expressions::Strings::get_LambdaTypeMustBeDerivedFromSystemDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_LambdaTypeMustBeDerivedFromSystemDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_LambdaTypeMustBeDerivedFromSystemDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_ArgumentCannotBeOfTypeVoid
::StringW System::Linq::Expressions::Strings::get_ArgumentCannotBeOfTypeVoid() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_ArgumentCannotBeOfTypeVoid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_ArgumentCannotBeOfTypeVoid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_ControlCannotLeaveFinally
::StringW System::Linq::Expressions::Strings::get_ControlCannotLeaveFinally() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_ControlCannotLeaveFinally");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_ControlCannotLeaveFinally", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_ControlCannotLeaveFilterTest
::StringW System::Linq::Expressions::Strings::get_ControlCannotLeaveFilterTest() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_ControlCannotLeaveFilterTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_ControlCannotLeaveFilterTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_ControlCannotEnterTry
::StringW System::Linq::Expressions::Strings::get_ControlCannotEnterTry() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_ControlCannotEnterTry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_ControlCannotEnterTry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_ControlCannotEnterExpression
::StringW System::Linq::Expressions::Strings::get_ControlCannotEnterExpression() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_ControlCannotEnterExpression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_ControlCannotEnterExpression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_RethrowRequiresCatch
::StringW System::Linq::Expressions::Strings::get_RethrowRequiresCatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_RethrowRequiresCatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_RethrowRequiresCatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_NonAbstractConstructorRequired
::StringW System::Linq::Expressions::Strings::get_NonAbstractConstructorRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_NonAbstractConstructorRequired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_NonAbstractConstructorRequired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_ExpressionMustBeReadable
::StringW System::Linq::Expressions::Strings::get_ExpressionMustBeReadable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_ExpressionMustBeReadable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_ExpressionMustBeReadable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_EnumerationIsDone
::StringW System::Linq::Expressions::Strings::get_EnumerationIsDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_EnumerationIsDone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_EnumerationIsDone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_InvalidArgumentValue
::StringW System::Linq::Expressions::Strings::get_InvalidArgumentValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_InvalidArgumentValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_InvalidArgumentValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_IncorrectNumberOfLambdaArguments
::StringW System::Linq::Expressions::Strings::get_IncorrectNumberOfLambdaArguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_IncorrectNumberOfLambdaArguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_IncorrectNumberOfLambdaArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.get_IncorrectNumberOfConstructorArguments
::StringW System::Linq::Expressions::Strings::get_IncorrectNumberOfConstructorArguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::get_IncorrectNumberOfConstructorArguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "get_IncorrectNumberOfConstructorArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Strings.VariableMustNotBeByRef
::StringW System::Linq::Expressions::Strings::VariableMustNotBeByRef(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::VariableMustNotBeByRef");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "VariableMustNotBeByRef", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Strings.AmbiguousMatchInExpandoObject
::StringW System::Linq::Expressions::Strings::AmbiguousMatchInExpandoObject(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::AmbiguousMatchInExpandoObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "AmbiguousMatchInExpandoObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Strings.SameKeyExistsInExpando
::StringW System::Linq::Expressions::Strings::SameKeyExistsInExpando(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::SameKeyExistsInExpando");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "SameKeyExistsInExpando", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Strings.KeyDoesNotExistInExpando
::StringW System::Linq::Expressions::Strings::KeyDoesNotExistInExpando(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::KeyDoesNotExistInExpando");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "KeyDoesNotExistInExpando", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Strings.InvalidMetaObjectCreated
::StringW System::Linq::Expressions::Strings::InvalidMetaObjectCreated(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::InvalidMetaObjectCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "InvalidMetaObjectCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Strings.BinderNotCompatibleWithCallSite
::StringW System::Linq::Expressions::Strings::BinderNotCompatibleWithCallSite(::Il2CppObject* p0, ::Il2CppObject* p1, ::Il2CppObject* p2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::BinderNotCompatibleWithCallSite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "BinderNotCompatibleWithCallSite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, p2);
}
// Autogenerated method: System.Linq.Expressions.Strings.DynamicBindingNeedsRestrictions
::StringW System::Linq::Expressions::Strings::DynamicBindingNeedsRestrictions(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::DynamicBindingNeedsRestrictions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "DynamicBindingNeedsRestrictions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Strings.DynamicObjectResultNotAssignable
::StringW System::Linq::Expressions::Strings::DynamicObjectResultNotAssignable(::Il2CppObject* p0, ::Il2CppObject* p1, ::Il2CppObject* p2, ::Il2CppObject* p3) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::DynamicObjectResultNotAssignable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "DynamicObjectResultNotAssignable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2), ::il2cpp_utils::ExtractType(p3)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, p2, p3);
}
// Autogenerated method: System.Linq.Expressions.Strings.DynamicBinderResultNotAssignable
::StringW System::Linq::Expressions::Strings::DynamicBinderResultNotAssignable(::Il2CppObject* p0, ::Il2CppObject* p1, ::Il2CppObject* p2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::DynamicBinderResultNotAssignable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "DynamicBinderResultNotAssignable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, p2);
}
// Autogenerated method: System.Linq.Expressions.Strings.DuplicateVariable
::StringW System::Linq::Expressions::Strings::DuplicateVariable(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::DuplicateVariable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "DuplicateVariable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Strings.TypeParameterIsNotDelegate
::StringW System::Linq::Expressions::Strings::TypeParameterIsNotDelegate(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::TypeParameterIsNotDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "TypeParameterIsNotDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Strings.ExtensionNodeMustOverrideProperty
::StringW System::Linq::Expressions::Strings::ExtensionNodeMustOverrideProperty(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::ExtensionNodeMustOverrideProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "ExtensionNodeMustOverrideProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Strings.UserDefinedOperatorMustBeStatic
::StringW System::Linq::Expressions::Strings::UserDefinedOperatorMustBeStatic(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::UserDefinedOperatorMustBeStatic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "UserDefinedOperatorMustBeStatic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Strings.UserDefinedOperatorMustNotBeVoid
::StringW System::Linq::Expressions::Strings::UserDefinedOperatorMustNotBeVoid(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::UserDefinedOperatorMustNotBeVoid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "UserDefinedOperatorMustNotBeVoid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Strings.CoercionOperatorNotDefined
::StringW System::Linq::Expressions::Strings::CoercionOperatorNotDefined(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::CoercionOperatorNotDefined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "CoercionOperatorNotDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Strings.UnaryOperatorNotDefined
::StringW System::Linq::Expressions::Strings::UnaryOperatorNotDefined(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::UnaryOperatorNotDefined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "UnaryOperatorNotDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Strings.BinaryOperatorNotDefined
::StringW System::Linq::Expressions::Strings::BinaryOperatorNotDefined(::Il2CppObject* p0, ::Il2CppObject* p1, ::Il2CppObject* p2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::BinaryOperatorNotDefined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "BinaryOperatorNotDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, p2);
}
// Autogenerated method: System.Linq.Expressions.Strings.ReferenceEqualityNotDefined
::StringW System::Linq::Expressions::Strings::ReferenceEqualityNotDefined(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::ReferenceEqualityNotDefined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "ReferenceEqualityNotDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Strings.OperandTypesDoNotMatchParameters
::StringW System::Linq::Expressions::Strings::OperandTypesDoNotMatchParameters(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::OperandTypesDoNotMatchParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "OperandTypesDoNotMatchParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Strings.OverloadOperatorTypeDoesNotMatchConversionType
::StringW System::Linq::Expressions::Strings::OverloadOperatorTypeDoesNotMatchConversionType(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::OverloadOperatorTypeDoesNotMatchConversionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "OverloadOperatorTypeDoesNotMatchConversionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Strings.CannotAutoInitializeValueTypeMemberThroughProperty
::StringW System::Linq::Expressions::Strings::CannotAutoInitializeValueTypeMemberThroughProperty(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::CannotAutoInitializeValueTypeMemberThroughProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "CannotAutoInitializeValueTypeMemberThroughProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Strings.IncorrectTypeForTypeAs
::StringW System::Linq::Expressions::Strings::IncorrectTypeForTypeAs(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::IncorrectTypeForTypeAs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "IncorrectTypeForTypeAs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Strings.ExpressionTypeCannotInitializeArrayType
::StringW System::Linq::Expressions::Strings::ExpressionTypeCannotInitializeArrayType(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::ExpressionTypeCannotInitializeArrayType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "ExpressionTypeCannotInitializeArrayType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Strings.ExpressionTypeDoesNotMatchReturn
::StringW System::Linq::Expressions::Strings::ExpressionTypeDoesNotMatchReturn(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::ExpressionTypeDoesNotMatchReturn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "ExpressionTypeDoesNotMatchReturn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Strings.ExpressionTypeDoesNotMatchAssignment
::StringW System::Linq::Expressions::Strings::ExpressionTypeDoesNotMatchAssignment(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::ExpressionTypeDoesNotMatchAssignment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "ExpressionTypeDoesNotMatchAssignment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Strings.ExpressionTypeDoesNotMatchLabel
::StringW System::Linq::Expressions::Strings::ExpressionTypeDoesNotMatchLabel(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::ExpressionTypeDoesNotMatchLabel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "ExpressionTypeDoesNotMatchLabel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Strings.ExpressionTypeNotInvocable
::StringW System::Linq::Expressions::Strings::ExpressionTypeNotInvocable(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::ExpressionTypeNotInvocable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "ExpressionTypeNotInvocable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Strings.InstanceFieldNotDefinedForType
::StringW System::Linq::Expressions::Strings::InstanceFieldNotDefinedForType(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::InstanceFieldNotDefinedForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "InstanceFieldNotDefinedForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Strings.FieldInfoNotDefinedForType
::StringW System::Linq::Expressions::Strings::FieldInfoNotDefinedForType(::Il2CppObject* p0, ::Il2CppObject* p1, ::Il2CppObject* p2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::FieldInfoNotDefinedForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "FieldInfoNotDefinedForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, p2);
}
// Autogenerated method: System.Linq.Expressions.Strings.MemberNotFieldOrProperty
::StringW System::Linq::Expressions::Strings::MemberNotFieldOrProperty(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::MemberNotFieldOrProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "MemberNotFieldOrProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Strings.MethodContainsGenericParameters
::StringW System::Linq::Expressions::Strings::MethodContainsGenericParameters(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::MethodContainsGenericParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "MethodContainsGenericParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Strings.MethodIsGeneric
::StringW System::Linq::Expressions::Strings::MethodIsGeneric(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::MethodIsGeneric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "MethodIsGeneric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Strings.PropertyDoesNotHaveAccessor
::StringW System::Linq::Expressions::Strings::PropertyDoesNotHaveAccessor(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::PropertyDoesNotHaveAccessor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "PropertyDoesNotHaveAccessor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Strings.ParameterExpressionNotValidAsDelegate
::StringW System::Linq::Expressions::Strings::ParameterExpressionNotValidAsDelegate(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::ParameterExpressionNotValidAsDelegate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "ParameterExpressionNotValidAsDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Strings.PropertyNotDefinedForType
::StringW System::Linq::Expressions::Strings::PropertyNotDefinedForType(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::PropertyNotDefinedForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "PropertyNotDefinedForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Strings.InstancePropertyNotDefinedForType
::StringW System::Linq::Expressions::Strings::InstancePropertyNotDefinedForType(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::InstancePropertyNotDefinedForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "InstancePropertyNotDefinedForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Strings.InstanceAndMethodTypeMismatch
::StringW System::Linq::Expressions::Strings::InstanceAndMethodTypeMismatch(::Il2CppObject* p0, ::Il2CppObject* p1, ::Il2CppObject* p2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::InstanceAndMethodTypeMismatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "InstanceAndMethodTypeMismatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, p2);
}
// Autogenerated method: System.Linq.Expressions.Strings.UnhandledBinary
::StringW System::Linq::Expressions::Strings::UnhandledBinary(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::UnhandledBinary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "UnhandledBinary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Strings.UnhandledUnary
::StringW System::Linq::Expressions::Strings::UnhandledUnary(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::UnhandledUnary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "UnhandledUnary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Strings.UserDefinedOpMustHaveConsistentTypes
::StringW System::Linq::Expressions::Strings::UserDefinedOpMustHaveConsistentTypes(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::UserDefinedOpMustHaveConsistentTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "UserDefinedOpMustHaveConsistentTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Strings.UserDefinedOpMustHaveValidReturnType
::StringW System::Linq::Expressions::Strings::UserDefinedOpMustHaveValidReturnType(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::UserDefinedOpMustHaveValidReturnType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "UserDefinedOpMustHaveValidReturnType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Strings.LogicalOperatorMustHaveBooleanOperators
::StringW System::Linq::Expressions::Strings::LogicalOperatorMustHaveBooleanOperators(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::LogicalOperatorMustHaveBooleanOperators");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "LogicalOperatorMustHaveBooleanOperators", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Strings.MethodWithArgsDoesNotExistOnType
::StringW System::Linq::Expressions::Strings::MethodWithArgsDoesNotExistOnType(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::MethodWithArgsDoesNotExistOnType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "MethodWithArgsDoesNotExistOnType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Strings.GenericMethodWithArgsDoesNotExistOnType
::StringW System::Linq::Expressions::Strings::GenericMethodWithArgsDoesNotExistOnType(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::GenericMethodWithArgsDoesNotExistOnType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "GenericMethodWithArgsDoesNotExistOnType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Strings.MethodWithMoreThanOneMatch
::StringW System::Linq::Expressions::Strings::MethodWithMoreThanOneMatch(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::MethodWithMoreThanOneMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "MethodWithMoreThanOneMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Strings.OutOfRange
::StringW System::Linq::Expressions::Strings::OutOfRange(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::OutOfRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "OutOfRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Strings.LabelTargetAlreadyDefined
::StringW System::Linq::Expressions::Strings::LabelTargetAlreadyDefined(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::LabelTargetAlreadyDefined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "LabelTargetAlreadyDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Strings.LabelTargetUndefined
::StringW System::Linq::Expressions::Strings::LabelTargetUndefined(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::LabelTargetUndefined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "LabelTargetUndefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Strings.AmbiguousJump
::StringW System::Linq::Expressions::Strings::AmbiguousJump(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::AmbiguousJump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "AmbiguousJump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Strings.NonLocalJumpWithValue
::StringW System::Linq::Expressions::Strings::NonLocalJumpWithValue(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::NonLocalJumpWithValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "NonLocalJumpWithValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Strings.InvalidLvalue
::StringW System::Linq::Expressions::Strings::InvalidLvalue(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::InvalidLvalue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "InvalidLvalue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Strings.MustRewriteToSameNode
::StringW System::Linq::Expressions::Strings::MustRewriteToSameNode(::Il2CppObject* p0, ::Il2CppObject* p1, ::Il2CppObject* p2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::MustRewriteToSameNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "MustRewriteToSameNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, p2);
}
// Autogenerated method: System.Linq.Expressions.Strings.MustRewriteChildToSameType
::StringW System::Linq::Expressions::Strings::MustRewriteChildToSameType(::Il2CppObject* p0, ::Il2CppObject* p1, ::Il2CppObject* p2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::MustRewriteChildToSameType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "MustRewriteChildToSameType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, p2);
}
// Autogenerated method: System.Linq.Expressions.Strings.MustRewriteWithoutMethod
::StringW System::Linq::Expressions::Strings::MustRewriteWithoutMethod(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::MustRewriteWithoutMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "MustRewriteWithoutMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Strings.ExpressionTypeDoesNotMatchConstructorParameter
::StringW System::Linq::Expressions::Strings::ExpressionTypeDoesNotMatchConstructorParameter(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::ExpressionTypeDoesNotMatchConstructorParameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "ExpressionTypeDoesNotMatchConstructorParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Strings.TypeContainsGenericParameters
::StringW System::Linq::Expressions::Strings::TypeContainsGenericParameters(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::TypeContainsGenericParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "TypeContainsGenericParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Strings.TypeIsGeneric
::StringW System::Linq::Expressions::Strings::TypeIsGeneric(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::TypeIsGeneric");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "TypeIsGeneric", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Strings.InvalidNullValue
::StringW System::Linq::Expressions::Strings::InvalidNullValue(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::InvalidNullValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "InvalidNullValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated method: System.Linq.Expressions.Strings.InvalidObjectType
::StringW System::Linq::Expressions::Strings::InvalidObjectType(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::InvalidObjectType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "InvalidObjectType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Strings.ExpressionTypeDoesNotMatchMethodParameter
::StringW System::Linq::Expressions::Strings::ExpressionTypeDoesNotMatchMethodParameter(::Il2CppObject* p0, ::Il2CppObject* p1, ::Il2CppObject* p2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::ExpressionTypeDoesNotMatchMethodParameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "ExpressionTypeDoesNotMatchMethodParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1, p2);
}
// Autogenerated method: System.Linq.Expressions.Strings.ExpressionTypeDoesNotMatchParameter
::StringW System::Linq::Expressions::Strings::ExpressionTypeDoesNotMatchParameter(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::ExpressionTypeDoesNotMatchParameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "ExpressionTypeDoesNotMatchParameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: System.Linq.Expressions.Strings.IncorrectNumberOfMethodCallArguments
::StringW System::Linq::Expressions::Strings::IncorrectNumberOfMethodCallArguments(::Il2CppObject* p0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Strings::IncorrectNumberOfMethodCallArguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Strings", "IncorrectNumberOfMethodCallArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.SwitchCase
#include "System/Linq/Expressions/SwitchCase.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Linq.Expressions.Expression
#include "System/Linq/Expressions/Expression.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.ObjectModel.ReadOnlyCollection`1<System.Linq.Expressions.Expression> <TestValues>k__BackingField
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>*& System::Linq::Expressions::SwitchCase::dyn_$TestValues$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::SwitchCase::dyn_$TestValues$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TestValues>k__BackingField"))->offset;
  return *reinterpret_cast<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression <Body>k__BackingField
System::Linq::Expressions::Expression*& System::Linq::Expressions::SwitchCase::dyn_$Body$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::SwitchCase::dyn_$Body$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Body>k__BackingField"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.SwitchCase.get_TestValues
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>* System::Linq::Expressions::SwitchCase::get_TestValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::SwitchCase::get_TestValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TestValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::Expression*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.SwitchCase.get_Body
System::Linq::Expressions::Expression* System::Linq::Expressions::SwitchCase::get_Body() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::SwitchCase::get_Body");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Body", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.SwitchExpression
#include "System/Linq/Expressions/SwitchExpression.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Linq.Expressions.SwitchCase
#include "System/Linq/Expressions/SwitchCase.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression <SwitchValue>k__BackingField
System::Linq::Expressions::Expression*& System::Linq::Expressions::SwitchExpression::dyn_$SwitchValue$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::SwitchExpression::dyn_$SwitchValue$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SwitchValue>k__BackingField"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.ObjectModel.ReadOnlyCollection`1<System.Linq.Expressions.SwitchCase> <Cases>k__BackingField
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::SwitchCase*>*& System::Linq::Expressions::SwitchExpression::dyn_$Cases$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::SwitchExpression::dyn_$Cases$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Cases>k__BackingField"))->offset;
  return *reinterpret_cast<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::SwitchCase*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression <DefaultBody>k__BackingField
System::Linq::Expressions::Expression*& System::Linq::Expressions::SwitchExpression::dyn_$DefaultBody$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::SwitchExpression::dyn_$DefaultBody$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<DefaultBody>k__BackingField"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Reflection.MethodInfo <Comparison>k__BackingField
System::Reflection::MethodInfo*& System::Linq::Expressions::SwitchExpression::dyn_$Comparison$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::SwitchExpression::dyn_$Comparison$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Comparison>k__BackingField"))->offset;
  return *reinterpret_cast<System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.SwitchExpression.get_SwitchValue
System::Linq::Expressions::Expression* System::Linq::Expressions::SwitchExpression::get_SwitchValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::SwitchExpression::get_SwitchValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SwitchValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.SwitchExpression.get_Cases
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::SwitchCase*>* System::Linq::Expressions::SwitchExpression::get_Cases() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::SwitchExpression::get_Cases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Cases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::SwitchCase*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.SwitchExpression.get_DefaultBody
System::Linq::Expressions::Expression* System::Linq::Expressions::SwitchExpression::get_DefaultBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::SwitchExpression::get_DefaultBody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DefaultBody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.SwitchExpression.get_Comparison
System::Reflection::MethodInfo* System::Linq::Expressions::SwitchExpression::get_Comparison() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::SwitchExpression::get_Comparison");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Comparison", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Reflection::MethodInfo*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.SymbolDocumentInfo
#include "System/Linq/Expressions/SymbolDocumentInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Guid DocumentType_Text
System::Guid System::Linq::Expressions::SymbolDocumentInfo::_get_DocumentType_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::SymbolDocumentInfo::_get_DocumentType_Text");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid>("System.Linq.Expressions", "SymbolDocumentInfo", "DocumentType_Text"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Guid DocumentType_Text
void System::Linq::Expressions::SymbolDocumentInfo::_set_DocumentType_Text(System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::SymbolDocumentInfo::_set_DocumentType_Text");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "SymbolDocumentInfo", "DocumentType_Text", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String <FileName>k__BackingField
::StringW& System::Linq::Expressions::SymbolDocumentInfo::dyn_$FileName$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::SymbolDocumentInfo::dyn_$FileName$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<FileName>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.SymbolDocumentInfo.get_FileName
::StringW System::Linq::Expressions::SymbolDocumentInfo::get_FileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::SymbolDocumentInfo::get_FileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.SymbolDocumentInfo..cctor
void System::Linq::Expressions::SymbolDocumentInfo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::SymbolDocumentInfo::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "SymbolDocumentInfo", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.TryExpression
#include "System/Linq/Expressions/TryExpression.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.Linq.Expressions.CatchBlock
#include "System/Linq/Expressions/CatchBlock.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Linq.Expressions.ExpressionType
#include "System/Linq/Expressions/ExpressionType.hpp"
// Including type: System.Linq.Expressions.ExpressionVisitor
#include "System/Linq/Expressions/ExpressionVisitor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Type <Type>k__BackingField
System::Type*& System::Linq::Expressions::TryExpression::dyn_$Type$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::TryExpression::dyn_$Type$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Type>k__BackingField"))->offset;
  return *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression <Body>k__BackingField
System::Linq::Expressions::Expression*& System::Linq::Expressions::TryExpression::dyn_$Body$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::TryExpression::dyn_$Body$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Body>k__BackingField"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.ObjectModel.ReadOnlyCollection`1<System.Linq.Expressions.CatchBlock> <Handlers>k__BackingField
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::CatchBlock*>*& System::Linq::Expressions::TryExpression::dyn_$Handlers$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::TryExpression::dyn_$Handlers$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Handlers>k__BackingField"))->offset;
  return *reinterpret_cast<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::CatchBlock*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression <Finally>k__BackingField
System::Linq::Expressions::Expression*& System::Linq::Expressions::TryExpression::dyn_$Finally$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::TryExpression::dyn_$Finally$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Finally>k__BackingField"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression <Fault>k__BackingField
System::Linq::Expressions::Expression*& System::Linq::Expressions::TryExpression::dyn_$Fault$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::TryExpression::dyn_$Fault$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Fault>k__BackingField"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.TryExpression.get_Body
System::Linq::Expressions::Expression* System::Linq::Expressions::TryExpression::get_Body() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::TryExpression::get_Body");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Body", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.TryExpression.get_Handlers
System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::CatchBlock*>* System::Linq::Expressions::TryExpression::get_Handlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::TryExpression::get_Handlers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Handlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Collections::ObjectModel::ReadOnlyCollection_1<System::Linq::Expressions::CatchBlock*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.TryExpression.get_Finally
System::Linq::Expressions::Expression* System::Linq::Expressions::TryExpression::get_Finally() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::TryExpression::get_Finally");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Finally", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.TryExpression.get_Fault
System::Linq::Expressions::Expression* System::Linq::Expressions::TryExpression::get_Fault() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::TryExpression::get_Fault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Fault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.TryExpression.Update
System::Linq::Expressions::TryExpression* System::Linq::Expressions::TryExpression::Update(System::Linq::Expressions::Expression* body, System::Collections::Generic::IEnumerable_1<System::Linq::Expressions::CatchBlock*>* handlers, System::Linq::Expressions::Expression* finally, System::Linq::Expressions::Expression* fault) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::TryExpression::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(body), ::il2cpp_utils::ExtractType(handlers), ::il2cpp_utils::ExtractType(finally), ::il2cpp_utils::ExtractType(fault)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::TryExpression*, false>(this, ___internal__method, body, handlers, finally, fault);
}
// Autogenerated method: System.Linq.Expressions.TryExpression.get_Type
System::Type* System::Linq::Expressions::TryExpression::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::TryExpression::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.TryExpression.get_NodeType
System::Linq::Expressions::ExpressionType System::Linq::Expressions::TryExpression::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::TryExpression::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ExpressionType, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.TryExpression.Accept
System::Linq::Expressions::Expression* System::Linq::Expressions::TryExpression::Accept(System::Linq::Expressions::ExpressionVisitor* visitor) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::TryExpression::Accept");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visitor)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, visitor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.TypeBinaryExpression
#include "System/Linq/Expressions/TypeBinaryExpression.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Linq.Expressions.ExpressionVisitor
#include "System/Linq/Expressions/ExpressionVisitor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.ExpressionType <NodeType>k__BackingField
System::Linq::Expressions::ExpressionType& System::Linq::Expressions::TypeBinaryExpression::dyn_$NodeType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::TypeBinaryExpression::dyn_$NodeType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NodeType>k__BackingField"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::ExpressionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression <Expression>k__BackingField
System::Linq::Expressions::Expression*& System::Linq::Expressions::TypeBinaryExpression::dyn_$Expression$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::TypeBinaryExpression::dyn_$Expression$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Expression>k__BackingField"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Type <TypeOperand>k__BackingField
System::Type*& System::Linq::Expressions::TypeBinaryExpression::dyn_$TypeOperand$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::TypeBinaryExpression::dyn_$TypeOperand$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TypeOperand>k__BackingField"))->offset;
  return *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.TypeBinaryExpression.get_Expression
System::Linq::Expressions::Expression* System::Linq::Expressions::TypeBinaryExpression::get_Expression() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::TypeBinaryExpression::get_Expression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Expression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.TypeBinaryExpression.get_TypeOperand
System::Type* System::Linq::Expressions::TypeBinaryExpression::get_TypeOperand() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::TypeBinaryExpression::get_TypeOperand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeOperand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.TypeBinaryExpression.Update
System::Linq::Expressions::TypeBinaryExpression* System::Linq::Expressions::TypeBinaryExpression::Update(System::Linq::Expressions::Expression* expression) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::TypeBinaryExpression::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expression)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::TypeBinaryExpression*, false>(this, ___internal__method, expression);
}
// Autogenerated method: System.Linq.Expressions.TypeBinaryExpression.get_Type
System::Type* System::Linq::Expressions::TypeBinaryExpression::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::TypeBinaryExpression::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.TypeBinaryExpression.get_NodeType
System::Linq::Expressions::ExpressionType System::Linq::Expressions::TypeBinaryExpression::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::TypeBinaryExpression::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ExpressionType, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.TypeBinaryExpression.Accept
System::Linq::Expressions::Expression* System::Linq::Expressions::TypeBinaryExpression::Accept(System::Linq::Expressions::ExpressionVisitor* visitor) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::TypeBinaryExpression::Accept");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visitor)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, visitor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.UnaryExpression
#include "System/Linq/Expressions/UnaryExpression.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Linq.Expressions.ExpressionVisitor
#include "System/Linq/Expressions/ExpressionVisitor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Type <Type>k__BackingField
System::Type*& System::Linq::Expressions::UnaryExpression::dyn_$Type$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::UnaryExpression::dyn_$Type$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Type>k__BackingField"))->offset;
  return *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.ExpressionType <NodeType>k__BackingField
System::Linq::Expressions::ExpressionType& System::Linq::Expressions::UnaryExpression::dyn_$NodeType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::UnaryExpression::dyn_$NodeType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<NodeType>k__BackingField"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::ExpressionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Expression <Operand>k__BackingField
System::Linq::Expressions::Expression*& System::Linq::Expressions::UnaryExpression::dyn_$Operand$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::UnaryExpression::dyn_$Operand$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Operand>k__BackingField"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Expression**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Reflection.MethodInfo <Method>k__BackingField
System::Reflection::MethodInfo*& System::Linq::Expressions::UnaryExpression::dyn_$Method$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::UnaryExpression::dyn_$Method$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Method>k__BackingField"))->offset;
  return *reinterpret_cast<System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.UnaryExpression.get_Operand
System::Linq::Expressions::Expression* System::Linq::Expressions::UnaryExpression::get_Operand() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::UnaryExpression::get_Operand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Operand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.UnaryExpression.get_Method
System::Reflection::MethodInfo* System::Linq::Expressions::UnaryExpression::get_Method() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::UnaryExpression::get_Method");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Reflection::MethodInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.UnaryExpression.get_IsLifted
bool System::Linq::Expressions::UnaryExpression::get_IsLifted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::UnaryExpression::get_IsLifted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsLifted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.UnaryExpression.get_IsLiftedToNull
bool System::Linq::Expressions::UnaryExpression::get_IsLiftedToNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::UnaryExpression::get_IsLiftedToNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsLiftedToNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.UnaryExpression.get_IsPrefix
bool System::Linq::Expressions::UnaryExpression::get_IsPrefix() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::UnaryExpression::get_IsPrefix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.UnaryExpression.FunctionalOp
System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::UnaryExpression::FunctionalOp(System::Linq::Expressions::Expression* operand) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::UnaryExpression::FunctionalOp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FunctionalOp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(operand)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::UnaryExpression*, false>(this, ___internal__method, operand);
}
// Autogenerated method: System.Linq.Expressions.UnaryExpression.ReduceVariable
System::Linq::Expressions::Expression* System::Linq::Expressions::UnaryExpression::ReduceVariable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::UnaryExpression::ReduceVariable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReduceVariable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.UnaryExpression.ReduceMember
System::Linq::Expressions::Expression* System::Linq::Expressions::UnaryExpression::ReduceMember() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::UnaryExpression::ReduceMember");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReduceMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.UnaryExpression.ReduceIndex
System::Linq::Expressions::Expression* System::Linq::Expressions::UnaryExpression::ReduceIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::UnaryExpression::ReduceIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReduceIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.UnaryExpression.Update
System::Linq::Expressions::UnaryExpression* System::Linq::Expressions::UnaryExpression::Update(System::Linq::Expressions::Expression* operand) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::UnaryExpression::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(operand)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::UnaryExpression*, false>(this, ___internal__method, operand);
}
// Autogenerated method: System.Linq.Expressions.UnaryExpression.get_Type
System::Type* System::Linq::Expressions::UnaryExpression::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::UnaryExpression::get_Type");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.UnaryExpression.get_NodeType
System::Linq::Expressions::ExpressionType System::Linq::Expressions::UnaryExpression::get_NodeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::UnaryExpression::get_NodeType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NodeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ExpressionType, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.UnaryExpression.get_CanReduce
bool System::Linq::Expressions::UnaryExpression::get_CanReduce() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::UnaryExpression::get_CanReduce");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanReduce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.UnaryExpression.Accept
System::Linq::Expressions::Expression* System::Linq::Expressions::UnaryExpression::Accept(System::Linq::Expressions::ExpressionVisitor* visitor) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::UnaryExpression::Accept");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visitor)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method, visitor);
}
// Autogenerated method: System.Linq.Expressions.UnaryExpression.Reduce
System::Linq::Expressions::Expression* System::Linq::Expressions::UnaryExpression::Reduce() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::UnaryExpression::Reduce");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reduce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Expression*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.Utils
#include "System/Linq/Expressions/Utils.hpp"
// Including type: System.Linq.Expressions.ConstantExpression
#include "System/Linq/Expressions/ConstantExpression.hpp"
// Including type: System.Linq.Expressions.DefaultExpression
#include "System/Linq/Expressions/DefaultExpression.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Object BoxedFalse
::Il2CppObject* System::Linq::Expressions::Utils::_get_BoxedFalse() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_get_BoxedFalse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Linq.Expressions", "Utils", "BoxedFalse"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Object BoxedFalse
void System::Linq::Expressions::Utils::_set_BoxedFalse(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_set_BoxedFalse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "Utils", "BoxedFalse", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Object BoxedTrue
::Il2CppObject* System::Linq::Expressions::Utils::_get_BoxedTrue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_get_BoxedTrue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Linq.Expressions", "Utils", "BoxedTrue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Object BoxedTrue
void System::Linq::Expressions::Utils::_set_BoxedTrue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_set_BoxedTrue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "Utils", "BoxedTrue", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Object BoxedIntM1
::Il2CppObject* System::Linq::Expressions::Utils::_get_BoxedIntM1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_get_BoxedIntM1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Linq.Expressions", "Utils", "BoxedIntM1"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Object BoxedIntM1
void System::Linq::Expressions::Utils::_set_BoxedIntM1(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_set_BoxedIntM1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "Utils", "BoxedIntM1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Object BoxedInt0
::Il2CppObject* System::Linq::Expressions::Utils::_get_BoxedInt0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_get_BoxedInt0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Linq.Expressions", "Utils", "BoxedInt0"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Object BoxedInt0
void System::Linq::Expressions::Utils::_set_BoxedInt0(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_set_BoxedInt0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "Utils", "BoxedInt0", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Object BoxedInt1
::Il2CppObject* System::Linq::Expressions::Utils::_get_BoxedInt1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_get_BoxedInt1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Linq.Expressions", "Utils", "BoxedInt1"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Object BoxedInt1
void System::Linq::Expressions::Utils::_set_BoxedInt1(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_set_BoxedInt1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "Utils", "BoxedInt1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Object BoxedInt2
::Il2CppObject* System::Linq::Expressions::Utils::_get_BoxedInt2() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_get_BoxedInt2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Linq.Expressions", "Utils", "BoxedInt2"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Object BoxedInt2
void System::Linq::Expressions::Utils::_set_BoxedInt2(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_set_BoxedInt2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "Utils", "BoxedInt2", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Object BoxedInt3
::Il2CppObject* System::Linq::Expressions::Utils::_get_BoxedInt3() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_get_BoxedInt3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Linq.Expressions", "Utils", "BoxedInt3"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Object BoxedInt3
void System::Linq::Expressions::Utils::_set_BoxedInt3(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_set_BoxedInt3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "Utils", "BoxedInt3", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Object BoxedDefaultSByte
::Il2CppObject* System::Linq::Expressions::Utils::_get_BoxedDefaultSByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_get_BoxedDefaultSByte");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Linq.Expressions", "Utils", "BoxedDefaultSByte"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Object BoxedDefaultSByte
void System::Linq::Expressions::Utils::_set_BoxedDefaultSByte(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_set_BoxedDefaultSByte");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "Utils", "BoxedDefaultSByte", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Object BoxedDefaultChar
::Il2CppObject* System::Linq::Expressions::Utils::_get_BoxedDefaultChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_get_BoxedDefaultChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Linq.Expressions", "Utils", "BoxedDefaultChar"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Object BoxedDefaultChar
void System::Linq::Expressions::Utils::_set_BoxedDefaultChar(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_set_BoxedDefaultChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "Utils", "BoxedDefaultChar", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Object BoxedDefaultInt16
::Il2CppObject* System::Linq::Expressions::Utils::_get_BoxedDefaultInt16() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_get_BoxedDefaultInt16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Linq.Expressions", "Utils", "BoxedDefaultInt16"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Object BoxedDefaultInt16
void System::Linq::Expressions::Utils::_set_BoxedDefaultInt16(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_set_BoxedDefaultInt16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "Utils", "BoxedDefaultInt16", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Object BoxedDefaultInt64
::Il2CppObject* System::Linq::Expressions::Utils::_get_BoxedDefaultInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_get_BoxedDefaultInt64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Linq.Expressions", "Utils", "BoxedDefaultInt64"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Object BoxedDefaultInt64
void System::Linq::Expressions::Utils::_set_BoxedDefaultInt64(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_set_BoxedDefaultInt64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "Utils", "BoxedDefaultInt64", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Object BoxedDefaultByte
::Il2CppObject* System::Linq::Expressions::Utils::_get_BoxedDefaultByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_get_BoxedDefaultByte");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Linq.Expressions", "Utils", "BoxedDefaultByte"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Object BoxedDefaultByte
void System::Linq::Expressions::Utils::_set_BoxedDefaultByte(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_set_BoxedDefaultByte");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "Utils", "BoxedDefaultByte", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Object BoxedDefaultUInt16
::Il2CppObject* System::Linq::Expressions::Utils::_get_BoxedDefaultUInt16() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_get_BoxedDefaultUInt16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Linq.Expressions", "Utils", "BoxedDefaultUInt16"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Object BoxedDefaultUInt16
void System::Linq::Expressions::Utils::_set_BoxedDefaultUInt16(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_set_BoxedDefaultUInt16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "Utils", "BoxedDefaultUInt16", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Object BoxedDefaultUInt32
::Il2CppObject* System::Linq::Expressions::Utils::_get_BoxedDefaultUInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_get_BoxedDefaultUInt32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Linq.Expressions", "Utils", "BoxedDefaultUInt32"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Object BoxedDefaultUInt32
void System::Linq::Expressions::Utils::_set_BoxedDefaultUInt32(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_set_BoxedDefaultUInt32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "Utils", "BoxedDefaultUInt32", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Object BoxedDefaultUInt64
::Il2CppObject* System::Linq::Expressions::Utils::_get_BoxedDefaultUInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_get_BoxedDefaultUInt64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Linq.Expressions", "Utils", "BoxedDefaultUInt64"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Object BoxedDefaultUInt64
void System::Linq::Expressions::Utils::_set_BoxedDefaultUInt64(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_set_BoxedDefaultUInt64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "Utils", "BoxedDefaultUInt64", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Object BoxedDefaultSingle
::Il2CppObject* System::Linq::Expressions::Utils::_get_BoxedDefaultSingle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_get_BoxedDefaultSingle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Linq.Expressions", "Utils", "BoxedDefaultSingle"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Object BoxedDefaultSingle
void System::Linq::Expressions::Utils::_set_BoxedDefaultSingle(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_set_BoxedDefaultSingle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "Utils", "BoxedDefaultSingle", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Object BoxedDefaultDouble
::Il2CppObject* System::Linq::Expressions::Utils::_get_BoxedDefaultDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_get_BoxedDefaultDouble");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Linq.Expressions", "Utils", "BoxedDefaultDouble"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Object BoxedDefaultDouble
void System::Linq::Expressions::Utils::_set_BoxedDefaultDouble(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_set_BoxedDefaultDouble");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "Utils", "BoxedDefaultDouble", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Object BoxedDefaultDecimal
::Il2CppObject* System::Linq::Expressions::Utils::_get_BoxedDefaultDecimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_get_BoxedDefaultDecimal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Linq.Expressions", "Utils", "BoxedDefaultDecimal"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Object BoxedDefaultDecimal
void System::Linq::Expressions::Utils::_set_BoxedDefaultDecimal(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_set_BoxedDefaultDecimal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "Utils", "BoxedDefaultDecimal", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Object BoxedDefaultDateTime
::Il2CppObject* System::Linq::Expressions::Utils::_get_BoxedDefaultDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_get_BoxedDefaultDateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Linq.Expressions", "Utils", "BoxedDefaultDateTime"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Object BoxedDefaultDateTime
void System::Linq::Expressions::Utils::_set_BoxedDefaultDateTime(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_set_BoxedDefaultDateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "Utils", "BoxedDefaultDateTime", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Linq.Expressions.ConstantExpression s_true
System::Linq::Expressions::ConstantExpression* System::Linq::Expressions::Utils::_get_s_true() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_get_s_true");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ConstantExpression*>("System.Linq.Expressions", "Utils", "s_true"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Linq.Expressions.ConstantExpression s_true
void System::Linq::Expressions::Utils::_set_s_true(System::Linq::Expressions::ConstantExpression* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_set_s_true");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "Utils", "s_true", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Linq.Expressions.ConstantExpression s_false
System::Linq::Expressions::ConstantExpression* System::Linq::Expressions::Utils::_get_s_false() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_get_s_false");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ConstantExpression*>("System.Linq.Expressions", "Utils", "s_false"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Linq.Expressions.ConstantExpression s_false
void System::Linq::Expressions::Utils::_set_s_false(System::Linq::Expressions::ConstantExpression* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_set_s_false");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "Utils", "s_false", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Linq.Expressions.ConstantExpression s_m1
System::Linq::Expressions::ConstantExpression* System::Linq::Expressions::Utils::_get_s_m1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_get_s_m1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ConstantExpression*>("System.Linq.Expressions", "Utils", "s_m1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Linq.Expressions.ConstantExpression s_m1
void System::Linq::Expressions::Utils::_set_s_m1(System::Linq::Expressions::ConstantExpression* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_set_s_m1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "Utils", "s_m1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Linq.Expressions.ConstantExpression s_0
System::Linq::Expressions::ConstantExpression* System::Linq::Expressions::Utils::_get_s_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_get_s_0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ConstantExpression*>("System.Linq.Expressions", "Utils", "s_0"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Linq.Expressions.ConstantExpression s_0
void System::Linq::Expressions::Utils::_set_s_0(System::Linq::Expressions::ConstantExpression* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_set_s_0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "Utils", "s_0", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Linq.Expressions.ConstantExpression s_1
System::Linq::Expressions::ConstantExpression* System::Linq::Expressions::Utils::_get_s_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_get_s_1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ConstantExpression*>("System.Linq.Expressions", "Utils", "s_1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Linq.Expressions.ConstantExpression s_1
void System::Linq::Expressions::Utils::_set_s_1(System::Linq::Expressions::ConstantExpression* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_set_s_1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "Utils", "s_1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Linq.Expressions.ConstantExpression s_2
System::Linq::Expressions::ConstantExpression* System::Linq::Expressions::Utils::_get_s_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_get_s_2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ConstantExpression*>("System.Linq.Expressions", "Utils", "s_2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Linq.Expressions.ConstantExpression s_2
void System::Linq::Expressions::Utils::_set_s_2(System::Linq::Expressions::ConstantExpression* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_set_s_2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "Utils", "s_2", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Linq.Expressions.ConstantExpression s_3
System::Linq::Expressions::ConstantExpression* System::Linq::Expressions::Utils::_get_s_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_get_s_3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ConstantExpression*>("System.Linq.Expressions", "Utils", "s_3"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Linq.Expressions.ConstantExpression s_3
void System::Linq::Expressions::Utils::_set_s_3(System::Linq::Expressions::ConstantExpression* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_set_s_3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "Utils", "s_3", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Linq.Expressions.DefaultExpression Empty
System::Linq::Expressions::DefaultExpression* System::Linq::Expressions::Utils::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::DefaultExpression*>("System.Linq.Expressions", "Utils", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Linq.Expressions.DefaultExpression Empty
void System::Linq::Expressions::Utils::_set_Empty(System::Linq::Expressions::DefaultExpression* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "Utils", "Empty", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Linq.Expressions.ConstantExpression Null
System::Linq::Expressions::ConstantExpression* System::Linq::Expressions::Utils::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::ConstantExpression*>("System.Linq.Expressions", "Utils", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Linq.Expressions.ConstantExpression Null
void System::Linq::Expressions::Utils::_set_Null(System::Linq::Expressions::ConstantExpression* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions", "Utils", "Null", value));
}
// Autogenerated method: System.Linq.Expressions.Utils..cctor
void System::Linq::Expressions::Utils::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Utils", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Utils.Constant
System::Linq::Expressions::ConstantExpression* System::Linq::Expressions::Utils::Constant(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::Constant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Utils", "Constant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ConstantExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Linq.Expressions.Utils.Constant
System::Linq::Expressions::ConstantExpression* System::Linq::Expressions::Utils::Constant(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Utils::Constant");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions", "Utils", "Constant", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::ConstantExpression*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.AddInstruction
#include "System/Linq/Expressions/Interpreter/AddInstruction.hpp"
// Including type: System.Linq.Expressions.Interpreter.AddInstruction/System.Linq.Expressions.Interpreter.AddInt16
#include "System/Linq/Expressions/Interpreter/AddInstruction_AddInt16.hpp"
// Including type: System.Linq.Expressions.Interpreter.AddInstruction/System.Linq.Expressions.Interpreter.AddInt32
#include "System/Linq/Expressions/Interpreter/AddInstruction_AddInt32.hpp"
// Including type: System.Linq.Expressions.Interpreter.AddInstruction/System.Linq.Expressions.Interpreter.AddInt64
#include "System/Linq/Expressions/Interpreter/AddInstruction_AddInt64.hpp"
// Including type: System.Linq.Expressions.Interpreter.AddInstruction/System.Linq.Expressions.Interpreter.AddUInt16
#include "System/Linq/Expressions/Interpreter/AddInstruction_AddUInt16.hpp"
// Including type: System.Linq.Expressions.Interpreter.AddInstruction/System.Linq.Expressions.Interpreter.AddUInt32
#include "System/Linq/Expressions/Interpreter/AddInstruction_AddUInt32.hpp"
// Including type: System.Linq.Expressions.Interpreter.AddInstruction/System.Linq.Expressions.Interpreter.AddUInt64
#include "System/Linq/Expressions/Interpreter/AddInstruction_AddUInt64.hpp"
// Including type: System.Linq.Expressions.Interpreter.AddInstruction/System.Linq.Expressions.Interpreter.AddSingle
#include "System/Linq/Expressions/Interpreter/AddInstruction_AddSingle.hpp"
// Including type: System.Linq.Expressions.Interpreter.AddInstruction/System.Linq.Expressions.Interpreter.AddDouble
#include "System/Linq/Expressions/Interpreter/AddInstruction_AddDouble.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Linq.Expressions.Interpreter.Instruction s_Int16
System::Linq::Expressions::Interpreter::Instruction* System::Linq::Expressions::Interpreter::AddInstruction::_get_s_Int16() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddInstruction::_get_s_Int16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::Interpreter::Instruction*>("System.Linq.Expressions.Interpreter", "AddInstruction", "s_Int16"));
}
// Autogenerated static field setter
// Set static field: static private System.Linq.Expressions.Interpreter.Instruction s_Int16
void System::Linq::Expressions::Interpreter::AddInstruction::_set_s_Int16(System::Linq::Expressions::Interpreter::Instruction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddInstruction::_set_s_Int16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions.Interpreter", "AddInstruction", "s_Int16", value));
}
// Autogenerated static field getter
// Get static field: static private System.Linq.Expressions.Interpreter.Instruction s_Int32
System::Linq::Expressions::Interpreter::Instruction* System::Linq::Expressions::Interpreter::AddInstruction::_get_s_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddInstruction::_get_s_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::Interpreter::Instruction*>("System.Linq.Expressions.Interpreter", "AddInstruction", "s_Int32"));
}
// Autogenerated static field setter
// Set static field: static private System.Linq.Expressions.Interpreter.Instruction s_Int32
void System::Linq::Expressions::Interpreter::AddInstruction::_set_s_Int32(System::Linq::Expressions::Interpreter::Instruction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddInstruction::_set_s_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions.Interpreter", "AddInstruction", "s_Int32", value));
}
// Autogenerated static field getter
// Get static field: static private System.Linq.Expressions.Interpreter.Instruction s_Int64
System::Linq::Expressions::Interpreter::Instruction* System::Linq::Expressions::Interpreter::AddInstruction::_get_s_Int64() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddInstruction::_get_s_Int64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::Interpreter::Instruction*>("System.Linq.Expressions.Interpreter", "AddInstruction", "s_Int64"));
}
// Autogenerated static field setter
// Set static field: static private System.Linq.Expressions.Interpreter.Instruction s_Int64
void System::Linq::Expressions::Interpreter::AddInstruction::_set_s_Int64(System::Linq::Expressions::Interpreter::Instruction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddInstruction::_set_s_Int64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions.Interpreter", "AddInstruction", "s_Int64", value));
}
// Autogenerated static field getter
// Get static field: static private System.Linq.Expressions.Interpreter.Instruction s_UInt16
System::Linq::Expressions::Interpreter::Instruction* System::Linq::Expressions::Interpreter::AddInstruction::_get_s_UInt16() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddInstruction::_get_s_UInt16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::Interpreter::Instruction*>("System.Linq.Expressions.Interpreter", "AddInstruction", "s_UInt16"));
}
// Autogenerated static field setter
// Set static field: static private System.Linq.Expressions.Interpreter.Instruction s_UInt16
void System::Linq::Expressions::Interpreter::AddInstruction::_set_s_UInt16(System::Linq::Expressions::Interpreter::Instruction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddInstruction::_set_s_UInt16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions.Interpreter", "AddInstruction", "s_UInt16", value));
}
// Autogenerated static field getter
// Get static field: static private System.Linq.Expressions.Interpreter.Instruction s_UInt32
System::Linq::Expressions::Interpreter::Instruction* System::Linq::Expressions::Interpreter::AddInstruction::_get_s_UInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddInstruction::_get_s_UInt32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::Interpreter::Instruction*>("System.Linq.Expressions.Interpreter", "AddInstruction", "s_UInt32"));
}
// Autogenerated static field setter
// Set static field: static private System.Linq.Expressions.Interpreter.Instruction s_UInt32
void System::Linq::Expressions::Interpreter::AddInstruction::_set_s_UInt32(System::Linq::Expressions::Interpreter::Instruction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddInstruction::_set_s_UInt32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions.Interpreter", "AddInstruction", "s_UInt32", value));
}
// Autogenerated static field getter
// Get static field: static private System.Linq.Expressions.Interpreter.Instruction s_UInt64
System::Linq::Expressions::Interpreter::Instruction* System::Linq::Expressions::Interpreter::AddInstruction::_get_s_UInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddInstruction::_get_s_UInt64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::Interpreter::Instruction*>("System.Linq.Expressions.Interpreter", "AddInstruction", "s_UInt64"));
}
// Autogenerated static field setter
// Set static field: static private System.Linq.Expressions.Interpreter.Instruction s_UInt64
void System::Linq::Expressions::Interpreter::AddInstruction::_set_s_UInt64(System::Linq::Expressions::Interpreter::Instruction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddInstruction::_set_s_UInt64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions.Interpreter", "AddInstruction", "s_UInt64", value));
}
// Autogenerated static field getter
// Get static field: static private System.Linq.Expressions.Interpreter.Instruction s_Single
System::Linq::Expressions::Interpreter::Instruction* System::Linq::Expressions::Interpreter::AddInstruction::_get_s_Single() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddInstruction::_get_s_Single");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::Interpreter::Instruction*>("System.Linq.Expressions.Interpreter", "AddInstruction", "s_Single"));
}
// Autogenerated static field setter
// Set static field: static private System.Linq.Expressions.Interpreter.Instruction s_Single
void System::Linq::Expressions::Interpreter::AddInstruction::_set_s_Single(System::Linq::Expressions::Interpreter::Instruction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddInstruction::_set_s_Single");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions.Interpreter", "AddInstruction", "s_Single", value));
}
// Autogenerated static field getter
// Get static field: static private System.Linq.Expressions.Interpreter.Instruction s_Double
System::Linq::Expressions::Interpreter::Instruction* System::Linq::Expressions::Interpreter::AddInstruction::_get_s_Double() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddInstruction::_get_s_Double");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::Interpreter::Instruction*>("System.Linq.Expressions.Interpreter", "AddInstruction", "s_Double"));
}
// Autogenerated static field setter
// Set static field: static private System.Linq.Expressions.Interpreter.Instruction s_Double
void System::Linq::Expressions::Interpreter::AddInstruction::_set_s_Double(System::Linq::Expressions::Interpreter::Instruction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddInstruction::_set_s_Double");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions.Interpreter", "AddInstruction", "s_Double", value));
}
// Autogenerated method: System.Linq.Expressions.Interpreter.AddInstruction.Create
System::Linq::Expressions::Interpreter::Instruction* System::Linq::Expressions::Interpreter::AddInstruction::Create(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddInstruction::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions.Interpreter", "AddInstruction", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Interpreter::Instruction*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.AddInstruction.get_ConsumedStack
int System::Linq::Expressions::Interpreter::AddInstruction::get_ConsumedStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddInstruction::get_ConsumedStack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConsumedStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.AddInstruction.get_ProducedStack
int System::Linq::Expressions::Interpreter::AddInstruction::get_ProducedStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddInstruction::get_ProducedStack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProducedStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.AddInstruction.get_InstructionName
::StringW System::Linq::Expressions::Interpreter::AddInstruction::get_InstructionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddInstruction::get_InstructionName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InstructionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.AddInstruction/System.Linq.Expressions.Interpreter.AddInt16
#include "System/Linq/Expressions/Interpreter/AddInstruction_AddInt16.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.Interpreter.AddInstruction/System.Linq.Expressions.Interpreter.AddInt16.Run
int System::Linq::Expressions::Interpreter::AddInstruction::AddInt16::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddInstruction::AddInt16::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.AddInstruction/System.Linq.Expressions.Interpreter.AddInt32
#include "System/Linq/Expressions/Interpreter/AddInstruction_AddInt32.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.Interpreter.AddInstruction/System.Linq.Expressions.Interpreter.AddInt32.Run
int System::Linq::Expressions::Interpreter::AddInstruction::AddInt32::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddInstruction::AddInt32::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.AddInstruction/System.Linq.Expressions.Interpreter.AddInt64
#include "System/Linq/Expressions/Interpreter/AddInstruction_AddInt64.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.Interpreter.AddInstruction/System.Linq.Expressions.Interpreter.AddInt64.Run
int System::Linq::Expressions::Interpreter::AddInstruction::AddInt64::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddInstruction::AddInt64::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.AddInstruction/System.Linq.Expressions.Interpreter.AddUInt16
#include "System/Linq/Expressions/Interpreter/AddInstruction_AddUInt16.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.Interpreter.AddInstruction/System.Linq.Expressions.Interpreter.AddUInt16.Run
int System::Linq::Expressions::Interpreter::AddInstruction::AddUInt16::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddInstruction::AddUInt16::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.AddInstruction/System.Linq.Expressions.Interpreter.AddUInt32
#include "System/Linq/Expressions/Interpreter/AddInstruction_AddUInt32.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.Interpreter.AddInstruction/System.Linq.Expressions.Interpreter.AddUInt32.Run
int System::Linq::Expressions::Interpreter::AddInstruction::AddUInt32::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddInstruction::AddUInt32::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.AddInstruction/System.Linq.Expressions.Interpreter.AddUInt64
#include "System/Linq/Expressions/Interpreter/AddInstruction_AddUInt64.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.Interpreter.AddInstruction/System.Linq.Expressions.Interpreter.AddUInt64.Run
int System::Linq::Expressions::Interpreter::AddInstruction::AddUInt64::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddInstruction::AddUInt64::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.AddInstruction/System.Linq.Expressions.Interpreter.AddSingle
#include "System/Linq/Expressions/Interpreter/AddInstruction_AddSingle.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.Interpreter.AddInstruction/System.Linq.Expressions.Interpreter.AddSingle.Run
int System::Linq::Expressions::Interpreter::AddInstruction::AddSingle::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddInstruction::AddSingle::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.AddInstruction/System.Linq.Expressions.Interpreter.AddDouble
#include "System/Linq/Expressions/Interpreter/AddInstruction_AddDouble.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.Interpreter.AddInstruction/System.Linq.Expressions.Interpreter.AddDouble.Run
int System::Linq::Expressions::Interpreter::AddInstruction::AddDouble::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddInstruction::AddDouble::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.AddOvfInstruction
#include "System/Linq/Expressions/Interpreter/AddOvfInstruction.hpp"
// Including type: System.Linq.Expressions.Interpreter.AddOvfInstruction/System.Linq.Expressions.Interpreter.AddOvfInt16
#include "System/Linq/Expressions/Interpreter/AddOvfInstruction_AddOvfInt16.hpp"
// Including type: System.Linq.Expressions.Interpreter.AddOvfInstruction/System.Linq.Expressions.Interpreter.AddOvfInt32
#include "System/Linq/Expressions/Interpreter/AddOvfInstruction_AddOvfInt32.hpp"
// Including type: System.Linq.Expressions.Interpreter.AddOvfInstruction/System.Linq.Expressions.Interpreter.AddOvfInt64
#include "System/Linq/Expressions/Interpreter/AddOvfInstruction_AddOvfInt64.hpp"
// Including type: System.Linq.Expressions.Interpreter.AddOvfInstruction/System.Linq.Expressions.Interpreter.AddOvfUInt16
#include "System/Linq/Expressions/Interpreter/AddOvfInstruction_AddOvfUInt16.hpp"
// Including type: System.Linq.Expressions.Interpreter.AddOvfInstruction/System.Linq.Expressions.Interpreter.AddOvfUInt32
#include "System/Linq/Expressions/Interpreter/AddOvfInstruction_AddOvfUInt32.hpp"
// Including type: System.Linq.Expressions.Interpreter.AddOvfInstruction/System.Linq.Expressions.Interpreter.AddOvfUInt64
#include "System/Linq/Expressions/Interpreter/AddOvfInstruction_AddOvfUInt64.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Linq.Expressions.Interpreter.Instruction s_Int16
System::Linq::Expressions::Interpreter::Instruction* System::Linq::Expressions::Interpreter::AddOvfInstruction::_get_s_Int16() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddOvfInstruction::_get_s_Int16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::Interpreter::Instruction*>("System.Linq.Expressions.Interpreter", "AddOvfInstruction", "s_Int16"));
}
// Autogenerated static field setter
// Set static field: static private System.Linq.Expressions.Interpreter.Instruction s_Int16
void System::Linq::Expressions::Interpreter::AddOvfInstruction::_set_s_Int16(System::Linq::Expressions::Interpreter::Instruction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddOvfInstruction::_set_s_Int16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions.Interpreter", "AddOvfInstruction", "s_Int16", value));
}
// Autogenerated static field getter
// Get static field: static private System.Linq.Expressions.Interpreter.Instruction s_Int32
System::Linq::Expressions::Interpreter::Instruction* System::Linq::Expressions::Interpreter::AddOvfInstruction::_get_s_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddOvfInstruction::_get_s_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::Interpreter::Instruction*>("System.Linq.Expressions.Interpreter", "AddOvfInstruction", "s_Int32"));
}
// Autogenerated static field setter
// Set static field: static private System.Linq.Expressions.Interpreter.Instruction s_Int32
void System::Linq::Expressions::Interpreter::AddOvfInstruction::_set_s_Int32(System::Linq::Expressions::Interpreter::Instruction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddOvfInstruction::_set_s_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions.Interpreter", "AddOvfInstruction", "s_Int32", value));
}
// Autogenerated static field getter
// Get static field: static private System.Linq.Expressions.Interpreter.Instruction s_Int64
System::Linq::Expressions::Interpreter::Instruction* System::Linq::Expressions::Interpreter::AddOvfInstruction::_get_s_Int64() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddOvfInstruction::_get_s_Int64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::Interpreter::Instruction*>("System.Linq.Expressions.Interpreter", "AddOvfInstruction", "s_Int64"));
}
// Autogenerated static field setter
// Set static field: static private System.Linq.Expressions.Interpreter.Instruction s_Int64
void System::Linq::Expressions::Interpreter::AddOvfInstruction::_set_s_Int64(System::Linq::Expressions::Interpreter::Instruction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddOvfInstruction::_set_s_Int64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions.Interpreter", "AddOvfInstruction", "s_Int64", value));
}
// Autogenerated static field getter
// Get static field: static private System.Linq.Expressions.Interpreter.Instruction s_UInt16
System::Linq::Expressions::Interpreter::Instruction* System::Linq::Expressions::Interpreter::AddOvfInstruction::_get_s_UInt16() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddOvfInstruction::_get_s_UInt16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::Interpreter::Instruction*>("System.Linq.Expressions.Interpreter", "AddOvfInstruction", "s_UInt16"));
}
// Autogenerated static field setter
// Set static field: static private System.Linq.Expressions.Interpreter.Instruction s_UInt16
void System::Linq::Expressions::Interpreter::AddOvfInstruction::_set_s_UInt16(System::Linq::Expressions::Interpreter::Instruction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddOvfInstruction::_set_s_UInt16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions.Interpreter", "AddOvfInstruction", "s_UInt16", value));
}
// Autogenerated static field getter
// Get static field: static private System.Linq.Expressions.Interpreter.Instruction s_UInt32
System::Linq::Expressions::Interpreter::Instruction* System::Linq::Expressions::Interpreter::AddOvfInstruction::_get_s_UInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddOvfInstruction::_get_s_UInt32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::Interpreter::Instruction*>("System.Linq.Expressions.Interpreter", "AddOvfInstruction", "s_UInt32"));
}
// Autogenerated static field setter
// Set static field: static private System.Linq.Expressions.Interpreter.Instruction s_UInt32
void System::Linq::Expressions::Interpreter::AddOvfInstruction::_set_s_UInt32(System::Linq::Expressions::Interpreter::Instruction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddOvfInstruction::_set_s_UInt32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions.Interpreter", "AddOvfInstruction", "s_UInt32", value));
}
// Autogenerated static field getter
// Get static field: static private System.Linq.Expressions.Interpreter.Instruction s_UInt64
System::Linq::Expressions::Interpreter::Instruction* System::Linq::Expressions::Interpreter::AddOvfInstruction::_get_s_UInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddOvfInstruction::_get_s_UInt64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::Interpreter::Instruction*>("System.Linq.Expressions.Interpreter", "AddOvfInstruction", "s_UInt64"));
}
// Autogenerated static field setter
// Set static field: static private System.Linq.Expressions.Interpreter.Instruction s_UInt64
void System::Linq::Expressions::Interpreter::AddOvfInstruction::_set_s_UInt64(System::Linq::Expressions::Interpreter::Instruction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddOvfInstruction::_set_s_UInt64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions.Interpreter", "AddOvfInstruction", "s_UInt64", value));
}
// Autogenerated method: System.Linq.Expressions.Interpreter.AddOvfInstruction.Create
System::Linq::Expressions::Interpreter::Instruction* System::Linq::Expressions::Interpreter::AddOvfInstruction::Create(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddOvfInstruction::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions.Interpreter", "AddOvfInstruction", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Interpreter::Instruction*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.AddOvfInstruction.get_ConsumedStack
int System::Linq::Expressions::Interpreter::AddOvfInstruction::get_ConsumedStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddOvfInstruction::get_ConsumedStack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConsumedStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.AddOvfInstruction.get_ProducedStack
int System::Linq::Expressions::Interpreter::AddOvfInstruction::get_ProducedStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddOvfInstruction::get_ProducedStack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProducedStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.AddOvfInstruction.get_InstructionName
::StringW System::Linq::Expressions::Interpreter::AddOvfInstruction::get_InstructionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddOvfInstruction::get_InstructionName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InstructionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.AddOvfInstruction/System.Linq.Expressions.Interpreter.AddOvfInt16
#include "System/Linq/Expressions/Interpreter/AddOvfInstruction_AddOvfInt16.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.Interpreter.AddOvfInstruction/System.Linq.Expressions.Interpreter.AddOvfInt16.Run
int System::Linq::Expressions::Interpreter::AddOvfInstruction::AddOvfInt16::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddOvfInstruction::AddOvfInt16::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.AddOvfInstruction/System.Linq.Expressions.Interpreter.AddOvfInt32
#include "System/Linq/Expressions/Interpreter/AddOvfInstruction_AddOvfInt32.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.Interpreter.AddOvfInstruction/System.Linq.Expressions.Interpreter.AddOvfInt32.Run
int System::Linq::Expressions::Interpreter::AddOvfInstruction::AddOvfInt32::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddOvfInstruction::AddOvfInt32::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.AddOvfInstruction/System.Linq.Expressions.Interpreter.AddOvfInt64
#include "System/Linq/Expressions/Interpreter/AddOvfInstruction_AddOvfInt64.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.Interpreter.AddOvfInstruction/System.Linq.Expressions.Interpreter.AddOvfInt64.Run
int System::Linq::Expressions::Interpreter::AddOvfInstruction::AddOvfInt64::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddOvfInstruction::AddOvfInt64::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.AddOvfInstruction/System.Linq.Expressions.Interpreter.AddOvfUInt16
#include "System/Linq/Expressions/Interpreter/AddOvfInstruction_AddOvfUInt16.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.Interpreter.AddOvfInstruction/System.Linq.Expressions.Interpreter.AddOvfUInt16.Run
int System::Linq::Expressions::Interpreter::AddOvfInstruction::AddOvfUInt16::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddOvfInstruction::AddOvfUInt16::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.AddOvfInstruction/System.Linq.Expressions.Interpreter.AddOvfUInt32
#include "System/Linq/Expressions/Interpreter/AddOvfInstruction_AddOvfUInt32.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.Interpreter.AddOvfInstruction/System.Linq.Expressions.Interpreter.AddOvfUInt32.Run
int System::Linq::Expressions::Interpreter::AddOvfInstruction::AddOvfUInt32::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddOvfInstruction::AddOvfUInt32::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.AddOvfInstruction/System.Linq.Expressions.Interpreter.AddOvfUInt64
#include "System/Linq/Expressions/Interpreter/AddOvfInstruction_AddOvfUInt64.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.Interpreter.AddOvfInstruction/System.Linq.Expressions.Interpreter.AddOvfUInt64.Run
int System::Linq::Expressions::Interpreter::AddOvfInstruction::AddOvfUInt64::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AddOvfInstruction::AddOvfUInt64::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.AndInstruction
#include "System/Linq/Expressions/Interpreter/AndInstruction.hpp"
// Including type: System.Linq.Expressions.Interpreter.AndInstruction/System.Linq.Expressions.Interpreter.AndSByte
#include "System/Linq/Expressions/Interpreter/AndInstruction_AndSByte.hpp"
// Including type: System.Linq.Expressions.Interpreter.AndInstruction/System.Linq.Expressions.Interpreter.AndInt16
#include "System/Linq/Expressions/Interpreter/AndInstruction_AndInt16.hpp"
// Including type: System.Linq.Expressions.Interpreter.AndInstruction/System.Linq.Expressions.Interpreter.AndInt32
#include "System/Linq/Expressions/Interpreter/AndInstruction_AndInt32.hpp"
// Including type: System.Linq.Expressions.Interpreter.AndInstruction/System.Linq.Expressions.Interpreter.AndInt64
#include "System/Linq/Expressions/Interpreter/AndInstruction_AndInt64.hpp"
// Including type: System.Linq.Expressions.Interpreter.AndInstruction/System.Linq.Expressions.Interpreter.AndByte
#include "System/Linq/Expressions/Interpreter/AndInstruction_AndByte.hpp"
// Including type: System.Linq.Expressions.Interpreter.AndInstruction/System.Linq.Expressions.Interpreter.AndUInt16
#include "System/Linq/Expressions/Interpreter/AndInstruction_AndUInt16.hpp"
// Including type: System.Linq.Expressions.Interpreter.AndInstruction/System.Linq.Expressions.Interpreter.AndUInt32
#include "System/Linq/Expressions/Interpreter/AndInstruction_AndUInt32.hpp"
// Including type: System.Linq.Expressions.Interpreter.AndInstruction/System.Linq.Expressions.Interpreter.AndUInt64
#include "System/Linq/Expressions/Interpreter/AndInstruction_AndUInt64.hpp"
// Including type: System.Linq.Expressions.Interpreter.AndInstruction/System.Linq.Expressions.Interpreter.AndBoolean
#include "System/Linq/Expressions/Interpreter/AndInstruction_AndBoolean.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Linq.Expressions.Interpreter.Instruction s_SByte
System::Linq::Expressions::Interpreter::Instruction* System::Linq::Expressions::Interpreter::AndInstruction::_get_s_SByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AndInstruction::_get_s_SByte");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::Interpreter::Instruction*>("System.Linq.Expressions.Interpreter", "AndInstruction", "s_SByte"));
}
// Autogenerated static field setter
// Set static field: static private System.Linq.Expressions.Interpreter.Instruction s_SByte
void System::Linq::Expressions::Interpreter::AndInstruction::_set_s_SByte(System::Linq::Expressions::Interpreter::Instruction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AndInstruction::_set_s_SByte");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions.Interpreter", "AndInstruction", "s_SByte", value));
}
// Autogenerated static field getter
// Get static field: static private System.Linq.Expressions.Interpreter.Instruction s_Int16
System::Linq::Expressions::Interpreter::Instruction* System::Linq::Expressions::Interpreter::AndInstruction::_get_s_Int16() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AndInstruction::_get_s_Int16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::Interpreter::Instruction*>("System.Linq.Expressions.Interpreter", "AndInstruction", "s_Int16"));
}
// Autogenerated static field setter
// Set static field: static private System.Linq.Expressions.Interpreter.Instruction s_Int16
void System::Linq::Expressions::Interpreter::AndInstruction::_set_s_Int16(System::Linq::Expressions::Interpreter::Instruction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AndInstruction::_set_s_Int16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions.Interpreter", "AndInstruction", "s_Int16", value));
}
// Autogenerated static field getter
// Get static field: static private System.Linq.Expressions.Interpreter.Instruction s_Int32
System::Linq::Expressions::Interpreter::Instruction* System::Linq::Expressions::Interpreter::AndInstruction::_get_s_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AndInstruction::_get_s_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::Interpreter::Instruction*>("System.Linq.Expressions.Interpreter", "AndInstruction", "s_Int32"));
}
// Autogenerated static field setter
// Set static field: static private System.Linq.Expressions.Interpreter.Instruction s_Int32
void System::Linq::Expressions::Interpreter::AndInstruction::_set_s_Int32(System::Linq::Expressions::Interpreter::Instruction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AndInstruction::_set_s_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions.Interpreter", "AndInstruction", "s_Int32", value));
}
// Autogenerated static field getter
// Get static field: static private System.Linq.Expressions.Interpreter.Instruction s_Int64
System::Linq::Expressions::Interpreter::Instruction* System::Linq::Expressions::Interpreter::AndInstruction::_get_s_Int64() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AndInstruction::_get_s_Int64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::Interpreter::Instruction*>("System.Linq.Expressions.Interpreter", "AndInstruction", "s_Int64"));
}
// Autogenerated static field setter
// Set static field: static private System.Linq.Expressions.Interpreter.Instruction s_Int64
void System::Linq::Expressions::Interpreter::AndInstruction::_set_s_Int64(System::Linq::Expressions::Interpreter::Instruction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AndInstruction::_set_s_Int64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions.Interpreter", "AndInstruction", "s_Int64", value));
}
// Autogenerated static field getter
// Get static field: static private System.Linq.Expressions.Interpreter.Instruction s_Byte
System::Linq::Expressions::Interpreter::Instruction* System::Linq::Expressions::Interpreter::AndInstruction::_get_s_Byte() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AndInstruction::_get_s_Byte");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::Interpreter::Instruction*>("System.Linq.Expressions.Interpreter", "AndInstruction", "s_Byte"));
}
// Autogenerated static field setter
// Set static field: static private System.Linq.Expressions.Interpreter.Instruction s_Byte
void System::Linq::Expressions::Interpreter::AndInstruction::_set_s_Byte(System::Linq::Expressions::Interpreter::Instruction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AndInstruction::_set_s_Byte");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions.Interpreter", "AndInstruction", "s_Byte", value));
}
// Autogenerated static field getter
// Get static field: static private System.Linq.Expressions.Interpreter.Instruction s_UInt16
System::Linq::Expressions::Interpreter::Instruction* System::Linq::Expressions::Interpreter::AndInstruction::_get_s_UInt16() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AndInstruction::_get_s_UInt16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::Interpreter::Instruction*>("System.Linq.Expressions.Interpreter", "AndInstruction", "s_UInt16"));
}
// Autogenerated static field setter
// Set static field: static private System.Linq.Expressions.Interpreter.Instruction s_UInt16
void System::Linq::Expressions::Interpreter::AndInstruction::_set_s_UInt16(System::Linq::Expressions::Interpreter::Instruction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AndInstruction::_set_s_UInt16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions.Interpreter", "AndInstruction", "s_UInt16", value));
}
// Autogenerated static field getter
// Get static field: static private System.Linq.Expressions.Interpreter.Instruction s_UInt32
System::Linq::Expressions::Interpreter::Instruction* System::Linq::Expressions::Interpreter::AndInstruction::_get_s_UInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AndInstruction::_get_s_UInt32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::Interpreter::Instruction*>("System.Linq.Expressions.Interpreter", "AndInstruction", "s_UInt32"));
}
// Autogenerated static field setter
// Set static field: static private System.Linq.Expressions.Interpreter.Instruction s_UInt32
void System::Linq::Expressions::Interpreter::AndInstruction::_set_s_UInt32(System::Linq::Expressions::Interpreter::Instruction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AndInstruction::_set_s_UInt32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions.Interpreter", "AndInstruction", "s_UInt32", value));
}
// Autogenerated static field getter
// Get static field: static private System.Linq.Expressions.Interpreter.Instruction s_UInt64
System::Linq::Expressions::Interpreter::Instruction* System::Linq::Expressions::Interpreter::AndInstruction::_get_s_UInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AndInstruction::_get_s_UInt64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::Interpreter::Instruction*>("System.Linq.Expressions.Interpreter", "AndInstruction", "s_UInt64"));
}
// Autogenerated static field setter
// Set static field: static private System.Linq.Expressions.Interpreter.Instruction s_UInt64
void System::Linq::Expressions::Interpreter::AndInstruction::_set_s_UInt64(System::Linq::Expressions::Interpreter::Instruction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AndInstruction::_set_s_UInt64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions.Interpreter", "AndInstruction", "s_UInt64", value));
}
// Autogenerated static field getter
// Get static field: static private System.Linq.Expressions.Interpreter.Instruction s_Boolean
System::Linq::Expressions::Interpreter::Instruction* System::Linq::Expressions::Interpreter::AndInstruction::_get_s_Boolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AndInstruction::_get_s_Boolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::Interpreter::Instruction*>("System.Linq.Expressions.Interpreter", "AndInstruction", "s_Boolean"));
}
// Autogenerated static field setter
// Set static field: static private System.Linq.Expressions.Interpreter.Instruction s_Boolean
void System::Linq::Expressions::Interpreter::AndInstruction::_set_s_Boolean(System::Linq::Expressions::Interpreter::Instruction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AndInstruction::_set_s_Boolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions.Interpreter", "AndInstruction", "s_Boolean", value));
}
// Autogenerated method: System.Linq.Expressions.Interpreter.AndInstruction.Create
System::Linq::Expressions::Interpreter::Instruction* System::Linq::Expressions::Interpreter::AndInstruction::Create(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AndInstruction::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions.Interpreter", "AndInstruction", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Interpreter::Instruction*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.AndInstruction.get_ConsumedStack
int System::Linq::Expressions::Interpreter::AndInstruction::get_ConsumedStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AndInstruction::get_ConsumedStack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConsumedStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.AndInstruction.get_ProducedStack
int System::Linq::Expressions::Interpreter::AndInstruction::get_ProducedStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AndInstruction::get_ProducedStack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProducedStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.AndInstruction.get_InstructionName
::StringW System::Linq::Expressions::Interpreter::AndInstruction::get_InstructionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AndInstruction::get_InstructionName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InstructionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.AndInstruction/System.Linq.Expressions.Interpreter.AndSByte
#include "System/Linq/Expressions/Interpreter/AndInstruction_AndSByte.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.Interpreter.AndInstruction/System.Linq.Expressions.Interpreter.AndSByte.Run
int System::Linq::Expressions::Interpreter::AndInstruction::AndSByte::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AndInstruction::AndSByte::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.AndInstruction/System.Linq.Expressions.Interpreter.AndInt16
#include "System/Linq/Expressions/Interpreter/AndInstruction_AndInt16.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.Interpreter.AndInstruction/System.Linq.Expressions.Interpreter.AndInt16.Run
int System::Linq::Expressions::Interpreter::AndInstruction::AndInt16::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AndInstruction::AndInt16::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.AndInstruction/System.Linq.Expressions.Interpreter.AndInt32
#include "System/Linq/Expressions/Interpreter/AndInstruction_AndInt32.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.Interpreter.AndInstruction/System.Linq.Expressions.Interpreter.AndInt32.Run
int System::Linq::Expressions::Interpreter::AndInstruction::AndInt32::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AndInstruction::AndInt32::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.AndInstruction/System.Linq.Expressions.Interpreter.AndInt64
#include "System/Linq/Expressions/Interpreter/AndInstruction_AndInt64.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.Interpreter.AndInstruction/System.Linq.Expressions.Interpreter.AndInt64.Run
int System::Linq::Expressions::Interpreter::AndInstruction::AndInt64::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AndInstruction::AndInt64::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.AndInstruction/System.Linq.Expressions.Interpreter.AndByte
#include "System/Linq/Expressions/Interpreter/AndInstruction_AndByte.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.Interpreter.AndInstruction/System.Linq.Expressions.Interpreter.AndByte.Run
int System::Linq::Expressions::Interpreter::AndInstruction::AndByte::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AndInstruction::AndByte::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.AndInstruction/System.Linq.Expressions.Interpreter.AndUInt16
#include "System/Linq/Expressions/Interpreter/AndInstruction_AndUInt16.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.Interpreter.AndInstruction/System.Linq.Expressions.Interpreter.AndUInt16.Run
int System::Linq::Expressions::Interpreter::AndInstruction::AndUInt16::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AndInstruction::AndUInt16::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.AndInstruction/System.Linq.Expressions.Interpreter.AndUInt32
#include "System/Linq/Expressions/Interpreter/AndInstruction_AndUInt32.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.Interpreter.AndInstruction/System.Linq.Expressions.Interpreter.AndUInt32.Run
int System::Linq::Expressions::Interpreter::AndInstruction::AndUInt32::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AndInstruction::AndUInt32::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.AndInstruction/System.Linq.Expressions.Interpreter.AndUInt64
#include "System/Linq/Expressions/Interpreter/AndInstruction_AndUInt64.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.Interpreter.AndInstruction/System.Linq.Expressions.Interpreter.AndUInt64.Run
int System::Linq::Expressions::Interpreter::AndInstruction::AndUInt64::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AndInstruction::AndUInt64::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.AndInstruction/System.Linq.Expressions.Interpreter.AndBoolean
#include "System/Linq/Expressions/Interpreter/AndInstruction_AndBoolean.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.Interpreter.AndInstruction/System.Linq.Expressions.Interpreter.AndBoolean.Run
int System::Linq::Expressions::Interpreter::AndInstruction::AndBoolean::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::AndInstruction::AndBoolean::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.NewArrayInitInstruction
#include "System/Linq/Expressions/Interpreter/NewArrayInitInstruction.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Type _elementType
System::Type*& System::Linq::Expressions::Interpreter::NewArrayInitInstruction::dyn__elementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::NewArrayInitInstruction::dyn__elementType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elementType"))->offset;
  return *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _elementCount
int& System::Linq::Expressions::Interpreter::NewArrayInitInstruction::dyn__elementCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::NewArrayInitInstruction::dyn__elementCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elementCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.NewArrayInitInstruction.get_ConsumedStack
int System::Linq::Expressions::Interpreter::NewArrayInitInstruction::get_ConsumedStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::NewArrayInitInstruction::get_ConsumedStack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConsumedStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.NewArrayInitInstruction.get_ProducedStack
int System::Linq::Expressions::Interpreter::NewArrayInitInstruction::get_ProducedStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::NewArrayInitInstruction::get_ProducedStack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProducedStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.NewArrayInitInstruction.get_InstructionName
::StringW System::Linq::Expressions::Interpreter::NewArrayInitInstruction::get_InstructionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::NewArrayInitInstruction::get_InstructionName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InstructionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.NewArrayInitInstruction.Run
int System::Linq::Expressions::Interpreter::NewArrayInitInstruction::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::NewArrayInitInstruction::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.NewArrayInstruction
#include "System/Linq/Expressions/Interpreter/NewArrayInstruction.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Type _elementType
System::Type*& System::Linq::Expressions::Interpreter::NewArrayInstruction::dyn__elementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::NewArrayInstruction::dyn__elementType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elementType"))->offset;
  return *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.NewArrayInstruction.get_ConsumedStack
int System::Linq::Expressions::Interpreter::NewArrayInstruction::get_ConsumedStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::NewArrayInstruction::get_ConsumedStack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConsumedStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.NewArrayInstruction.get_ProducedStack
int System::Linq::Expressions::Interpreter::NewArrayInstruction::get_ProducedStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::NewArrayInstruction::get_ProducedStack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProducedStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.NewArrayInstruction.get_InstructionName
::StringW System::Linq::Expressions::Interpreter::NewArrayInstruction::get_InstructionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::NewArrayInstruction::get_InstructionName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InstructionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.NewArrayInstruction.Run
int System::Linq::Expressions::Interpreter::NewArrayInstruction::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::NewArrayInstruction::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.NewArrayBoundsInstruction
#include "System/Linq/Expressions/Interpreter/NewArrayBoundsInstruction.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Type _elementType
System::Type*& System::Linq::Expressions::Interpreter::NewArrayBoundsInstruction::dyn__elementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::NewArrayBoundsInstruction::dyn__elementType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elementType"))->offset;
  return *reinterpret_cast<System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _rank
int& System::Linq::Expressions::Interpreter::NewArrayBoundsInstruction::dyn__rank() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::NewArrayBoundsInstruction::dyn__rank");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rank"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.NewArrayBoundsInstruction.get_ConsumedStack
int System::Linq::Expressions::Interpreter::NewArrayBoundsInstruction::get_ConsumedStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::NewArrayBoundsInstruction::get_ConsumedStack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConsumedStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.NewArrayBoundsInstruction.get_ProducedStack
int System::Linq::Expressions::Interpreter::NewArrayBoundsInstruction::get_ProducedStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::NewArrayBoundsInstruction::get_ProducedStack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProducedStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.NewArrayBoundsInstruction.get_InstructionName
::StringW System::Linq::Expressions::Interpreter::NewArrayBoundsInstruction::get_InstructionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::NewArrayBoundsInstruction::get_InstructionName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InstructionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.NewArrayBoundsInstruction.Run
int System::Linq::Expressions::Interpreter::NewArrayBoundsInstruction::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::NewArrayBoundsInstruction::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.GetArrayItemInstruction
#include "System/Linq/Expressions/Interpreter/GetArrayItemInstruction.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Linq.Expressions.Interpreter.GetArrayItemInstruction Instance
System::Linq::Expressions::Interpreter::GetArrayItemInstruction* System::Linq::Expressions::Interpreter::GetArrayItemInstruction::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::GetArrayItemInstruction::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::Interpreter::GetArrayItemInstruction*>("System.Linq.Expressions.Interpreter", "GetArrayItemInstruction", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Linq.Expressions.Interpreter.GetArrayItemInstruction Instance
void System::Linq::Expressions::Interpreter::GetArrayItemInstruction::_set_Instance(System::Linq::Expressions::Interpreter::GetArrayItemInstruction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::GetArrayItemInstruction::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions.Interpreter", "GetArrayItemInstruction", "Instance", value));
}
// Autogenerated method: System.Linq.Expressions.Interpreter.GetArrayItemInstruction..cctor
void System::Linq::Expressions::Interpreter::GetArrayItemInstruction::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::GetArrayItemInstruction::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions.Interpreter", "GetArrayItemInstruction", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.GetArrayItemInstruction.get_ConsumedStack
int System::Linq::Expressions::Interpreter::GetArrayItemInstruction::get_ConsumedStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::GetArrayItemInstruction::get_ConsumedStack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConsumedStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.GetArrayItemInstruction.get_ProducedStack
int System::Linq::Expressions::Interpreter::GetArrayItemInstruction::get_ProducedStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::GetArrayItemInstruction::get_ProducedStack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProducedStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.GetArrayItemInstruction.get_InstructionName
::StringW System::Linq::Expressions::Interpreter::GetArrayItemInstruction::get_InstructionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::GetArrayItemInstruction::get_InstructionName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InstructionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.GetArrayItemInstruction.Run
int System::Linq::Expressions::Interpreter::GetArrayItemInstruction::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::GetArrayItemInstruction::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.SetArrayItemInstruction
#include "System/Linq/Expressions/Interpreter/SetArrayItemInstruction.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Linq.Expressions.Interpreter.SetArrayItemInstruction Instance
System::Linq::Expressions::Interpreter::SetArrayItemInstruction* System::Linq::Expressions::Interpreter::SetArrayItemInstruction::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::SetArrayItemInstruction::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::Interpreter::SetArrayItemInstruction*>("System.Linq.Expressions.Interpreter", "SetArrayItemInstruction", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Linq.Expressions.Interpreter.SetArrayItemInstruction Instance
void System::Linq::Expressions::Interpreter::SetArrayItemInstruction::_set_Instance(System::Linq::Expressions::Interpreter::SetArrayItemInstruction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::SetArrayItemInstruction::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions.Interpreter", "SetArrayItemInstruction", "Instance", value));
}
// Autogenerated method: System.Linq.Expressions.Interpreter.SetArrayItemInstruction..cctor
void System::Linq::Expressions::Interpreter::SetArrayItemInstruction::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::SetArrayItemInstruction::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions.Interpreter", "SetArrayItemInstruction", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.SetArrayItemInstruction.get_ConsumedStack
int System::Linq::Expressions::Interpreter::SetArrayItemInstruction::get_ConsumedStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::SetArrayItemInstruction::get_ConsumedStack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConsumedStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.SetArrayItemInstruction.get_InstructionName
::StringW System::Linq::Expressions::Interpreter::SetArrayItemInstruction::get_InstructionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::SetArrayItemInstruction::get_InstructionName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InstructionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.SetArrayItemInstruction.Run
int System::Linq::Expressions::Interpreter::SetArrayItemInstruction::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::SetArrayItemInstruction::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.ArrayLengthInstruction
#include "System/Linq/Expressions/Interpreter/ArrayLengthInstruction.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Linq.Expressions.Interpreter.ArrayLengthInstruction Instance
System::Linq::Expressions::Interpreter::ArrayLengthInstruction* System::Linq::Expressions::Interpreter::ArrayLengthInstruction::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::ArrayLengthInstruction::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::Interpreter::ArrayLengthInstruction*>("System.Linq.Expressions.Interpreter", "ArrayLengthInstruction", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Linq.Expressions.Interpreter.ArrayLengthInstruction Instance
void System::Linq::Expressions::Interpreter::ArrayLengthInstruction::_set_Instance(System::Linq::Expressions::Interpreter::ArrayLengthInstruction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::ArrayLengthInstruction::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions.Interpreter", "ArrayLengthInstruction", "Instance", value));
}
// Autogenerated method: System.Linq.Expressions.Interpreter.ArrayLengthInstruction..cctor
void System::Linq::Expressions::Interpreter::ArrayLengthInstruction::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::ArrayLengthInstruction::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions.Interpreter", "ArrayLengthInstruction", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.ArrayLengthInstruction.get_ConsumedStack
int System::Linq::Expressions::Interpreter::ArrayLengthInstruction::get_ConsumedStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::ArrayLengthInstruction::get_ConsumedStack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConsumedStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.ArrayLengthInstruction.get_ProducedStack
int System::Linq::Expressions::Interpreter::ArrayLengthInstruction::get_ProducedStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::ArrayLengthInstruction::get_ProducedStack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProducedStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.ArrayLengthInstruction.get_InstructionName
::StringW System::Linq::Expressions::Interpreter::ArrayLengthInstruction::get_InstructionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::ArrayLengthInstruction::get_InstructionName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InstructionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.ArrayLengthInstruction.Run
int System::Linq::Expressions::Interpreter::ArrayLengthInstruction::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::ArrayLengthInstruction::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.Interpreter.ConvertHelper
#include "System/Linq/Expressions/Interpreter/ConvertHelper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.Interpreter.ConvertHelper.ToInt32NoNull
int System::Linq::Expressions::Interpreter::ConvertHelper::ToInt32NoNull(::Il2CppObject* val) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::ConvertHelper::ToInt32NoNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions.Interpreter", "ConvertHelper", "ToInt32NoNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, val);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.RuntimeLabel
#include "System/Linq/Expressions/Interpreter/RuntimeLabel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 Index
int& System::Linq::Expressions::Interpreter::RuntimeLabel::dyn_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::RuntimeLabel::dyn_Index");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 StackDepth
int& System::Linq::Expressions::Interpreter::RuntimeLabel::dyn_StackDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::RuntimeLabel::dyn_StackDepth");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StackDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 ContinuationStackDepth
int& System::Linq::Expressions::Interpreter::RuntimeLabel::dyn_ContinuationStackDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::RuntimeLabel::dyn_ContinuationStackDepth");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ContinuationStackDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.RuntimeLabel..ctor
// ABORTED elsewhere.  System::Linq::Expressions::Interpreter::RuntimeLabel::RuntimeLabel(int index, int continuationStackDepth, int stackDepth)
// Autogenerated method: System.Linq.Expressions.Interpreter.RuntimeLabel.ToString
::StringW System::Linq::Expressions::Interpreter::RuntimeLabel::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::RuntimeLabel::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.BranchLabel
#include "System/Linq/Expressions/Interpreter/BranchLabel.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Linq.Expressions.Interpreter.RuntimeLabel
#include "System/Linq/Expressions/Interpreter/RuntimeLabel.hpp"
// Including type: System.Linq.Expressions.Interpreter.InstructionList
#include "System/Linq/Expressions/Interpreter/InstructionList.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _targetIndex
int& System::Linq::Expressions::Interpreter::BranchLabel::dyn__targetIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::BranchLabel::dyn__targetIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _stackDepth
int& System::Linq::Expressions::Interpreter::BranchLabel::dyn__stackDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::BranchLabel::dyn__stackDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stackDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _continuationStackDepth
int& System::Linq::Expressions::Interpreter::BranchLabel::dyn__continuationStackDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::BranchLabel::dyn__continuationStackDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_continuationStackDepth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Int32> _forwardBranchFixups
System::Collections::Generic::List_1<int>*& System::Linq::Expressions::Interpreter::BranchLabel::dyn__forwardBranchFixups() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::BranchLabel::dyn__forwardBranchFixups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_forwardBranchFixups"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <LabelIndex>k__BackingField
int& System::Linq::Expressions::Interpreter::BranchLabel::dyn_$LabelIndex$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::BranchLabel::dyn_$LabelIndex$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LabelIndex>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.BranchLabel.get_LabelIndex
int System::Linq::Expressions::Interpreter::BranchLabel::get_LabelIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::BranchLabel::get_LabelIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LabelIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.BranchLabel.set_LabelIndex
void System::Linq::Expressions::Interpreter::BranchLabel::set_LabelIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::BranchLabel::set_LabelIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LabelIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.BranchLabel.get_HasRuntimeLabel
bool System::Linq::Expressions::Interpreter::BranchLabel::get_HasRuntimeLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::BranchLabel::get_HasRuntimeLabel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasRuntimeLabel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.BranchLabel.get_TargetIndex
int System::Linq::Expressions::Interpreter::BranchLabel::get_TargetIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::BranchLabel::get_TargetIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.BranchLabel.ToRuntimeLabel
System::Linq::Expressions::Interpreter::RuntimeLabel System::Linq::Expressions::Interpreter::BranchLabel::ToRuntimeLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::BranchLabel::ToRuntimeLabel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToRuntimeLabel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Interpreter::RuntimeLabel, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.BranchLabel.Mark
void System::Linq::Expressions::Interpreter::BranchLabel::Mark(System::Linq::Expressions::Interpreter::InstructionList* instructions) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::BranchLabel::Mark");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Mark", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instructions)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, instructions);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.BranchLabel.AddBranch
void System::Linq::Expressions::Interpreter::BranchLabel::AddBranch(System::Linq::Expressions::Interpreter::InstructionList* instructions, int branchIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::BranchLabel::AddBranch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddBranch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instructions), ::il2cpp_utils::ExtractType(branchIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, instructions, branchIndex);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.BranchLabel.FixupBranch
void System::Linq::Expressions::Interpreter::BranchLabel::FixupBranch(System::Linq::Expressions::Interpreter::InstructionList* instructions, int branchIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::BranchLabel::FixupBranch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixupBranch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instructions), ::il2cpp_utils::ExtractType(branchIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, instructions, branchIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.Interpreter.CallInstruction
#include "System/Linq/Expressions/Interpreter/CallInstruction.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Linq.Expressions.Interpreter.LightLambda
#include "System/Linq/Expressions/Interpreter/LightLambda.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Linq.Expressions.Interpreter.CallInstruction.get_ArgumentCount
int System::Linq::Expressions::Interpreter::CallInstruction::get_ArgumentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::CallInstruction::get_ArgumentCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArgumentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.CallInstruction.Create
System::Linq::Expressions::Interpreter::CallInstruction* System::Linq::Expressions::Interpreter::CallInstruction::Create(System::Reflection::MethodInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::CallInstruction::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions.Interpreter", "CallInstruction", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Interpreter::CallInstruction*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, info);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.CallInstruction.Create
System::Linq::Expressions::Interpreter::CallInstruction* System::Linq::Expressions::Interpreter::CallInstruction::Create(System::Reflection::MethodInfo* info, ::ArrayW<System::Reflection::ParameterInfo*> parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::CallInstruction::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions.Interpreter", "CallInstruction", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(parameters)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Interpreter::CallInstruction*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, info, parameters);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.CallInstruction.GetArrayAccessor
System::Linq::Expressions::Interpreter::CallInstruction* System::Linq::Expressions::Interpreter::CallInstruction::GetArrayAccessor(System::Reflection::MethodInfo* info, int argumentCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::CallInstruction::GetArrayAccessor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions.Interpreter", "CallInstruction", "GetArrayAccessor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(argumentCount)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Interpreter::CallInstruction*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, info, argumentCount);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.CallInstruction.ArrayItemSetter1
void System::Linq::Expressions::Interpreter::CallInstruction::ArrayItemSetter1(System::Array* array, int index0, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::CallInstruction::ArrayItemSetter1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions.Interpreter", "CallInstruction", "ArrayItemSetter1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index0), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, index0, value);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.CallInstruction.ArrayItemSetter2
void System::Linq::Expressions::Interpreter::CallInstruction::ArrayItemSetter2(System::Array* array, int index0, int index1, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::CallInstruction::ArrayItemSetter2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions.Interpreter", "CallInstruction", "ArrayItemSetter2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index0), ::il2cpp_utils::ExtractType(index1), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, index0, index1, value);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.CallInstruction.ArrayItemSetter3
void System::Linq::Expressions::Interpreter::CallInstruction::ArrayItemSetter3(System::Array* array, int index0, int index1, int index2, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::CallInstruction::ArrayItemSetter3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions.Interpreter", "CallInstruction", "ArrayItemSetter3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index0), ::il2cpp_utils::ExtractType(index1), ::il2cpp_utils::ExtractType(index2), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, array, index0, index1, index2, value);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.CallInstruction.TryGetLightLambdaTarget
bool System::Linq::Expressions::Interpreter::CallInstruction::TryGetLightLambdaTarget(::Il2CppObject* instance, ByRef<System::Linq::Expressions::Interpreter::LightLambda*> lightLambda) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::CallInstruction::TryGetLightLambdaTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions.Interpreter", "CallInstruction", "TryGetLightLambdaTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instance), ::il2cpp_utils::ExtractIndependentType<System::Linq::Expressions::Interpreter::LightLambda*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, instance, byref(lightLambda));
}
// Autogenerated method: System.Linq.Expressions.Interpreter.CallInstruction.InterpretLambdaInvoke
::Il2CppObject* System::Linq::Expressions::Interpreter::CallInstruction::InterpretLambdaInvoke(System::Linq::Expressions::Interpreter::LightLambda* targetLambda, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::CallInstruction::InterpretLambdaInvoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InterpretLambdaInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetLambda), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, targetLambda, args);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.CallInstruction.get_InstructionName
::StringW System::Linq::Expressions::Interpreter::CallInstruction::get_InstructionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::CallInstruction::get_InstructionName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InstructionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.CallInstruction.get_ConsumedStack
int System::Linq::Expressions::Interpreter::CallInstruction::get_ConsumedStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::CallInstruction::get_ConsumedStack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConsumedStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Linq.Expressions.Interpreter.MethodInfoCallInstruction
#include "System/Linq/Expressions/Interpreter/MethodInfoCallInstruction.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected readonly System.Reflection.MethodInfo _target
System::Reflection::MethodInfo*& System::Linq::Expressions::Interpreter::MethodInfoCallInstruction::dyn__target() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::MethodInfoCallInstruction::dyn__target");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_target"))->offset;
  return *reinterpret_cast<System::Reflection::MethodInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected readonly System.Int32 _argumentCount
int& System::Linq::Expressions::Interpreter::MethodInfoCallInstruction::dyn__argumentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::MethodInfoCallInstruction::dyn__argumentCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_argumentCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.MethodInfoCallInstruction.GetArgs
::ArrayW<::Il2CppObject*> System::Linq::Expressions::Interpreter::MethodInfoCallInstruction::GetArgs(System::Linq::Expressions::Interpreter::InterpretedFrame* frame, int first, int skip) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::MethodInfoCallInstruction::GetArgs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame), ::il2cpp_utils::ExtractType(first), ::il2cpp_utils::ExtractType(skip)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, frame, first, skip);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.MethodInfoCallInstruction.get_ArgumentCount
int System::Linq::Expressions::Interpreter::MethodInfoCallInstruction::get_ArgumentCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::MethodInfoCallInstruction::get_ArgumentCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArgumentCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.MethodInfoCallInstruction.get_ProducedStack
int System::Linq::Expressions::Interpreter::MethodInfoCallInstruction::get_ProducedStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::MethodInfoCallInstruction::get_ProducedStack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProducedStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.MethodInfoCallInstruction.Run
int System::Linq::Expressions::Interpreter::MethodInfoCallInstruction::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::MethodInfoCallInstruction::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.MethodInfoCallInstruction.ToString
::StringW System::Linq::Expressions::Interpreter::MethodInfoCallInstruction::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::MethodInfoCallInstruction::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.ByRefMethodInfoCallInstruction
#include "System/Linq/Expressions/Interpreter/ByRefMethodInfoCallInstruction.hpp"
// Including type: System.Linq.Expressions.Interpreter.ByRefUpdater
#include "System/Linq/Expressions/Interpreter/ByRefUpdater.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Linq.Expressions.Interpreter.ByRefUpdater[] _byrefArgs
::ArrayW<System::Linq::Expressions::Interpreter::ByRefUpdater*>& System::Linq::Expressions::Interpreter::ByRefMethodInfoCallInstruction::dyn__byrefArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::ByRefMethodInfoCallInstruction::dyn__byrefArgs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_byrefArgs"))->offset;
  return *reinterpret_cast<::ArrayW<System::Linq::Expressions::Interpreter::ByRefUpdater*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.ByRefMethodInfoCallInstruction.get_ProducedStack
int System::Linq::Expressions::Interpreter::ByRefMethodInfoCallInstruction::get_ProducedStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::ByRefMethodInfoCallInstruction::get_ProducedStack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProducedStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.ByRefMethodInfoCallInstruction.Run
int System::Linq::Expressions::Interpreter::ByRefMethodInfoCallInstruction::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::ByRefMethodInfoCallInstruction::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.OffsetInstruction
#include "System/Linq/Expressions/Interpreter/OffsetInstruction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Int32 _offset
int& System::Linq::Expressions::Interpreter::OffsetInstruction::dyn__offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::OffsetInstruction::dyn__offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.OffsetInstruction.get_Cache
::ArrayW<System::Linq::Expressions::Interpreter::Instruction*> System::Linq::Expressions::Interpreter::OffsetInstruction::get_Cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::OffsetInstruction::get_Cache");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Cache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<System::Linq::Expressions::Interpreter::Instruction*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.OffsetInstruction.Fixup
System::Linq::Expressions::Interpreter::Instruction* System::Linq::Expressions::Interpreter::OffsetInstruction::Fixup(int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::OffsetInstruction::Fixup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fixup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Interpreter::Instruction*, false>(this, ___internal__method, offset);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.OffsetInstruction.ToString
::StringW System::Linq::Expressions::Interpreter::OffsetInstruction::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::OffsetInstruction::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.BranchFalseInstruction
#include "System/Linq/Expressions/Interpreter/BranchFalseInstruction.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Linq.Expressions.Interpreter.Instruction[] s_cache
::ArrayW<System::Linq::Expressions::Interpreter::Instruction*> System::Linq::Expressions::Interpreter::BranchFalseInstruction::_get_s_cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::BranchFalseInstruction::_get_s_cache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<System::Linq::Expressions::Interpreter::Instruction*>>("System.Linq.Expressions.Interpreter", "BranchFalseInstruction", "s_cache"));
}
// Autogenerated static field setter
// Set static field: static private System.Linq.Expressions.Interpreter.Instruction[] s_cache
void System::Linq::Expressions::Interpreter::BranchFalseInstruction::_set_s_cache(::ArrayW<System::Linq::Expressions::Interpreter::Instruction*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::BranchFalseInstruction::_set_s_cache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions.Interpreter", "BranchFalseInstruction", "s_cache", value));
}
// Autogenerated method: System.Linq.Expressions.Interpreter.BranchFalseInstruction.get_Cache
::ArrayW<System::Linq::Expressions::Interpreter::Instruction*> System::Linq::Expressions::Interpreter::BranchFalseInstruction::get_Cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::BranchFalseInstruction::get_Cache");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Cache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<System::Linq::Expressions::Interpreter::Instruction*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.BranchFalseInstruction.get_InstructionName
::StringW System::Linq::Expressions::Interpreter::BranchFalseInstruction::get_InstructionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::BranchFalseInstruction::get_InstructionName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InstructionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.BranchFalseInstruction.get_ConsumedStack
int System::Linq::Expressions::Interpreter::BranchFalseInstruction::get_ConsumedStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::BranchFalseInstruction::get_ConsumedStack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConsumedStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.BranchFalseInstruction.Run
int System::Linq::Expressions::Interpreter::BranchFalseInstruction::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::BranchFalseInstruction::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.BranchTrueInstruction
#include "System/Linq/Expressions/Interpreter/BranchTrueInstruction.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Linq.Expressions.Interpreter.Instruction[] s_cache
::ArrayW<System::Linq::Expressions::Interpreter::Instruction*> System::Linq::Expressions::Interpreter::BranchTrueInstruction::_get_s_cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::BranchTrueInstruction::_get_s_cache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<System::Linq::Expressions::Interpreter::Instruction*>>("System.Linq.Expressions.Interpreter", "BranchTrueInstruction", "s_cache"));
}
// Autogenerated static field setter
// Set static field: static private System.Linq.Expressions.Interpreter.Instruction[] s_cache
void System::Linq::Expressions::Interpreter::BranchTrueInstruction::_set_s_cache(::ArrayW<System::Linq::Expressions::Interpreter::Instruction*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::BranchTrueInstruction::_set_s_cache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions.Interpreter", "BranchTrueInstruction", "s_cache", value));
}
// Autogenerated method: System.Linq.Expressions.Interpreter.BranchTrueInstruction.get_Cache
::ArrayW<System::Linq::Expressions::Interpreter::Instruction*> System::Linq::Expressions::Interpreter::BranchTrueInstruction::get_Cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::BranchTrueInstruction::get_Cache");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Cache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<System::Linq::Expressions::Interpreter::Instruction*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.BranchTrueInstruction.get_InstructionName
::StringW System::Linq::Expressions::Interpreter::BranchTrueInstruction::get_InstructionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::BranchTrueInstruction::get_InstructionName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InstructionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.BranchTrueInstruction.get_ConsumedStack
int System::Linq::Expressions::Interpreter::BranchTrueInstruction::get_ConsumedStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::BranchTrueInstruction::get_ConsumedStack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConsumedStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.BranchTrueInstruction.Run
int System::Linq::Expressions::Interpreter::BranchTrueInstruction::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::BranchTrueInstruction::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.CoalescingBranchInstruction
#include "System/Linq/Expressions/Interpreter/CoalescingBranchInstruction.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Linq.Expressions.Interpreter.Instruction[] s_cache
::ArrayW<System::Linq::Expressions::Interpreter::Instruction*> System::Linq::Expressions::Interpreter::CoalescingBranchInstruction::_get_s_cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::CoalescingBranchInstruction::_get_s_cache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<System::Linq::Expressions::Interpreter::Instruction*>>("System.Linq.Expressions.Interpreter", "CoalescingBranchInstruction", "s_cache"));
}
// Autogenerated static field setter
// Set static field: static private System.Linq.Expressions.Interpreter.Instruction[] s_cache
void System::Linq::Expressions::Interpreter::CoalescingBranchInstruction::_set_s_cache(::ArrayW<System::Linq::Expressions::Interpreter::Instruction*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::CoalescingBranchInstruction::_set_s_cache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions.Interpreter", "CoalescingBranchInstruction", "s_cache", value));
}
// Autogenerated method: System.Linq.Expressions.Interpreter.CoalescingBranchInstruction.get_Cache
::ArrayW<System::Linq::Expressions::Interpreter::Instruction*> System::Linq::Expressions::Interpreter::CoalescingBranchInstruction::get_Cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::CoalescingBranchInstruction::get_Cache");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Cache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<System::Linq::Expressions::Interpreter::Instruction*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.CoalescingBranchInstruction.get_InstructionName
::StringW System::Linq::Expressions::Interpreter::CoalescingBranchInstruction::get_InstructionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::CoalescingBranchInstruction::get_InstructionName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InstructionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.CoalescingBranchInstruction.get_ConsumedStack
int System::Linq::Expressions::Interpreter::CoalescingBranchInstruction::get_ConsumedStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::CoalescingBranchInstruction::get_ConsumedStack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConsumedStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.CoalescingBranchInstruction.get_ProducedStack
int System::Linq::Expressions::Interpreter::CoalescingBranchInstruction::get_ProducedStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::CoalescingBranchInstruction::get_ProducedStack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProducedStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.CoalescingBranchInstruction.Run
int System::Linq::Expressions::Interpreter::CoalescingBranchInstruction::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::CoalescingBranchInstruction::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.BranchInstruction
#include "System/Linq/Expressions/Interpreter/BranchInstruction.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Linq.Expressions.Interpreter.Instruction[][][] s_caches
::ArrayW<::ArrayW<::ArrayW<System::Linq::Expressions::Interpreter::Instruction*>>> System::Linq::Expressions::Interpreter::BranchInstruction::_get_s_caches() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::BranchInstruction::_get_s_caches");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::ArrayW<::ArrayW<System::Linq::Expressions::Interpreter::Instruction*>>>>("System.Linq.Expressions.Interpreter", "BranchInstruction", "s_caches"));
}
// Autogenerated static field setter
// Set static field: static private System.Linq.Expressions.Interpreter.Instruction[][][] s_caches
void System::Linq::Expressions::Interpreter::BranchInstruction::_set_s_caches(::ArrayW<::ArrayW<::ArrayW<System::Linq::Expressions::Interpreter::Instruction*>>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::BranchInstruction::_set_s_caches");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions.Interpreter", "BranchInstruction", "s_caches", value));
}
// Autogenerated instance field getter
// Get instance field: readonly System.Boolean _hasResult
bool& System::Linq::Expressions::Interpreter::BranchInstruction::dyn__hasResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::BranchInstruction::dyn__hasResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasResult"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: readonly System.Boolean _hasValue
bool& System::Linq::Expressions::Interpreter::BranchInstruction::dyn__hasValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::BranchInstruction::dyn__hasValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.BranchInstruction.get_Cache
::ArrayW<System::Linq::Expressions::Interpreter::Instruction*> System::Linq::Expressions::Interpreter::BranchInstruction::get_Cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::BranchInstruction::get_Cache");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Cache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<System::Linq::Expressions::Interpreter::Instruction*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.BranchInstruction.get_InstructionName
::StringW System::Linq::Expressions::Interpreter::BranchInstruction::get_InstructionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::BranchInstruction::get_InstructionName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InstructionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.BranchInstruction.get_ConsumedStack
int System::Linq::Expressions::Interpreter::BranchInstruction::get_ConsumedStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::BranchInstruction::get_ConsumedStack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConsumedStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.BranchInstruction.get_ProducedStack
int System::Linq::Expressions::Interpreter::BranchInstruction::get_ProducedStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::BranchInstruction::get_ProducedStack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProducedStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.BranchInstruction.Run
int System::Linq::Expressions::Interpreter::BranchInstruction::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::BranchInstruction::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.IndexedBranchInstruction
#include "System/Linq/Expressions/Interpreter/IndexedBranchInstruction.hpp"
// Including type: System.Linq.Expressions.Interpreter.RuntimeLabel
#include "System/Linq/Expressions/Interpreter/RuntimeLabel.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: readonly System.Int32 _labelIndex
int& System::Linq::Expressions::Interpreter::IndexedBranchInstruction::dyn__labelIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::IndexedBranchInstruction::dyn__labelIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_labelIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.IndexedBranchInstruction.GetLabel
System::Linq::Expressions::Interpreter::RuntimeLabel System::Linq::Expressions::Interpreter::IndexedBranchInstruction::GetLabel(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::IndexedBranchInstruction::GetLabel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLabel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Interpreter::RuntimeLabel, false>(this, ___internal__method, frame);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.IndexedBranchInstruction.ToString
::StringW System::Linq::Expressions::Interpreter::IndexedBranchInstruction::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::IndexedBranchInstruction::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.GotoInstruction
#include "System/Linq/Expressions/Interpreter/GotoInstruction.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Linq.Expressions.Interpreter.GotoInstruction[] s_cache
::ArrayW<System::Linq::Expressions::Interpreter::GotoInstruction*> System::Linq::Expressions::Interpreter::GotoInstruction::_get_s_cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::GotoInstruction::_get_s_cache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<System::Linq::Expressions::Interpreter::GotoInstruction*>>("System.Linq.Expressions.Interpreter", "GotoInstruction", "s_cache"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Linq.Expressions.Interpreter.GotoInstruction[] s_cache
void System::Linq::Expressions::Interpreter::GotoInstruction::_set_s_cache(::ArrayW<System::Linq::Expressions::Interpreter::GotoInstruction*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::GotoInstruction::_set_s_cache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions.Interpreter", "GotoInstruction", "s_cache", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _hasResult
bool& System::Linq::Expressions::Interpreter::GotoInstruction::dyn__hasResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::GotoInstruction::dyn__hasResult");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasResult"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _hasValue
bool& System::Linq::Expressions::Interpreter::GotoInstruction::dyn__hasValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::GotoInstruction::dyn__hasValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _labelTargetGetsValue
bool& System::Linq::Expressions::Interpreter::GotoInstruction::dyn__labelTargetGetsValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::GotoInstruction::dyn__labelTargetGetsValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_labelTargetGetsValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.GotoInstruction..cctor
void System::Linq::Expressions::Interpreter::GotoInstruction::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::GotoInstruction::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions.Interpreter", "GotoInstruction", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.GotoInstruction.Create
System::Linq::Expressions::Interpreter::GotoInstruction* System::Linq::Expressions::Interpreter::GotoInstruction::Create(int labelIndex, bool hasResult, bool hasValue, bool labelTargetGetsValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::GotoInstruction::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions.Interpreter", "GotoInstruction", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(labelIndex), ::il2cpp_utils::ExtractType(hasResult), ::il2cpp_utils::ExtractType(hasValue), ::il2cpp_utils::ExtractType(labelTargetGetsValue)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Interpreter::GotoInstruction*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, labelIndex, hasResult, hasValue, labelTargetGetsValue);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.GotoInstruction.get_InstructionName
::StringW System::Linq::Expressions::Interpreter::GotoInstruction::get_InstructionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::GotoInstruction::get_InstructionName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InstructionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.GotoInstruction.get_ConsumedStack
int System::Linq::Expressions::Interpreter::GotoInstruction::get_ConsumedStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::GotoInstruction::get_ConsumedStack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConsumedStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.GotoInstruction.get_ProducedStack
int System::Linq::Expressions::Interpreter::GotoInstruction::get_ProducedStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::GotoInstruction::get_ProducedStack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProducedStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.GotoInstruction.Run
int System::Linq::Expressions::Interpreter::GotoInstruction::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::GotoInstruction::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.EnterTryCatchFinallyInstruction
#include "System/Linq/Expressions/Interpreter/EnterTryCatchFinallyInstruction.hpp"
// Including type: System.Linq.Expressions.Interpreter.TryCatchFinallyHandler
#include "System/Linq/Expressions/Interpreter/TryCatchFinallyHandler.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _hasFinally
bool& System::Linq::Expressions::Interpreter::EnterTryCatchFinallyInstruction::dyn__hasFinally() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::EnterTryCatchFinallyInstruction::dyn__hasFinally");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasFinally"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Linq.Expressions.Interpreter.TryCatchFinallyHandler _tryHandler
System::Linq::Expressions::Interpreter::TryCatchFinallyHandler*& System::Linq::Expressions::Interpreter::EnterTryCatchFinallyInstruction::dyn__tryHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::EnterTryCatchFinallyInstruction::dyn__tryHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tryHandler"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Interpreter::TryCatchFinallyHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.EnterTryCatchFinallyInstruction.SetTryHandler
void System::Linq::Expressions::Interpreter::EnterTryCatchFinallyInstruction::SetTryHandler(System::Linq::Expressions::Interpreter::TryCatchFinallyHandler* tryHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::EnterTryCatchFinallyInstruction::SetTryHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTryHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tryHandler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tryHandler);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.EnterTryCatchFinallyInstruction.CreateTryFinally
System::Linq::Expressions::Interpreter::EnterTryCatchFinallyInstruction* System::Linq::Expressions::Interpreter::EnterTryCatchFinallyInstruction::CreateTryFinally(int labelIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::EnterTryCatchFinallyInstruction::CreateTryFinally");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions.Interpreter", "EnterTryCatchFinallyInstruction", "CreateTryFinally", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(labelIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Interpreter::EnterTryCatchFinallyInstruction*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, labelIndex);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.EnterTryCatchFinallyInstruction.CreateTryCatch
System::Linq::Expressions::Interpreter::EnterTryCatchFinallyInstruction* System::Linq::Expressions::Interpreter::EnterTryCatchFinallyInstruction::CreateTryCatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::EnterTryCatchFinallyInstruction::CreateTryCatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions.Interpreter", "EnterTryCatchFinallyInstruction", "CreateTryCatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Interpreter::EnterTryCatchFinallyInstruction*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.EnterTryCatchFinallyInstruction.get_ProducedContinuations
int System::Linq::Expressions::Interpreter::EnterTryCatchFinallyInstruction::get_ProducedContinuations() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::EnterTryCatchFinallyInstruction::get_ProducedContinuations");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProducedContinuations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.EnterTryCatchFinallyInstruction.get_InstructionName
::StringW System::Linq::Expressions::Interpreter::EnterTryCatchFinallyInstruction::get_InstructionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::EnterTryCatchFinallyInstruction::get_InstructionName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InstructionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.EnterTryCatchFinallyInstruction.Run
int System::Linq::Expressions::Interpreter::EnterTryCatchFinallyInstruction::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::EnterTryCatchFinallyInstruction::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.EnterTryCatchFinallyInstruction.ToString
::StringW System::Linq::Expressions::Interpreter::EnterTryCatchFinallyInstruction::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::EnterTryCatchFinallyInstruction::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.EnterTryFaultInstruction
#include "System/Linq/Expressions/Interpreter/EnterTryFaultInstruction.hpp"
// Including type: System.Linq.Expressions.Interpreter.TryFaultHandler
#include "System/Linq/Expressions/Interpreter/TryFaultHandler.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Linq.Expressions.Interpreter.TryFaultHandler _tryHandler
System::Linq::Expressions::Interpreter::TryFaultHandler*& System::Linq::Expressions::Interpreter::EnterTryFaultInstruction::dyn__tryHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::EnterTryFaultInstruction::dyn__tryHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tryHandler"))->offset;
  return *reinterpret_cast<System::Linq::Expressions::Interpreter::TryFaultHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.EnterTryFaultInstruction.SetTryHandler
void System::Linq::Expressions::Interpreter::EnterTryFaultInstruction::SetTryHandler(System::Linq::Expressions::Interpreter::TryFaultHandler* tryHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::EnterTryFaultInstruction::SetTryHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTryHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tryHandler)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tryHandler);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.EnterTryFaultInstruction.get_InstructionName
::StringW System::Linq::Expressions::Interpreter::EnterTryFaultInstruction::get_InstructionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::EnterTryFaultInstruction::get_InstructionName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InstructionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.EnterTryFaultInstruction.get_ProducedContinuations
int System::Linq::Expressions::Interpreter::EnterTryFaultInstruction::get_ProducedContinuations() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::EnterTryFaultInstruction::get_ProducedContinuations");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProducedContinuations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.EnterTryFaultInstruction.Run
int System::Linq::Expressions::Interpreter::EnterTryFaultInstruction::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::EnterTryFaultInstruction::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.EnterFinallyInstruction
#include "System/Linq/Expressions/Interpreter/EnterFinallyInstruction.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Linq.Expressions.Interpreter.EnterFinallyInstruction[] s_cache
::ArrayW<System::Linq::Expressions::Interpreter::EnterFinallyInstruction*> System::Linq::Expressions::Interpreter::EnterFinallyInstruction::_get_s_cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::EnterFinallyInstruction::_get_s_cache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<System::Linq::Expressions::Interpreter::EnterFinallyInstruction*>>("System.Linq.Expressions.Interpreter", "EnterFinallyInstruction", "s_cache"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Linq.Expressions.Interpreter.EnterFinallyInstruction[] s_cache
void System::Linq::Expressions::Interpreter::EnterFinallyInstruction::_set_s_cache(::ArrayW<System::Linq::Expressions::Interpreter::EnterFinallyInstruction*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::EnterFinallyInstruction::_set_s_cache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions.Interpreter", "EnterFinallyInstruction", "s_cache", value));
}
// Autogenerated method: System.Linq.Expressions.Interpreter.EnterFinallyInstruction..cctor
void System::Linq::Expressions::Interpreter::EnterFinallyInstruction::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::EnterFinallyInstruction::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions.Interpreter", "EnterFinallyInstruction", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.EnterFinallyInstruction.Create
System::Linq::Expressions::Interpreter::EnterFinallyInstruction* System::Linq::Expressions::Interpreter::EnterFinallyInstruction::Create(int labelIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::EnterFinallyInstruction::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions.Interpreter", "EnterFinallyInstruction", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(labelIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<System::Linq::Expressions::Interpreter::EnterFinallyInstruction*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, labelIndex);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.EnterFinallyInstruction.get_InstructionName
::StringW System::Linq::Expressions::Interpreter::EnterFinallyInstruction::get_InstructionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::EnterFinallyInstruction::get_InstructionName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InstructionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.EnterFinallyInstruction.get_ProducedStack
int System::Linq::Expressions::Interpreter::EnterFinallyInstruction::get_ProducedStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::EnterFinallyInstruction::get_ProducedStack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProducedStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.EnterFinallyInstruction.get_ConsumedContinuations
int System::Linq::Expressions::Interpreter::EnterFinallyInstruction::get_ConsumedContinuations() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::EnterFinallyInstruction::get_ConsumedContinuations");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConsumedContinuations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.EnterFinallyInstruction.Run
int System::Linq::Expressions::Interpreter::EnterFinallyInstruction::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::EnterFinallyInstruction::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Linq.Expressions.Interpreter.LeaveFinallyInstruction
#include "System/Linq/Expressions/Interpreter/LeaveFinallyInstruction.hpp"
// Including type: System.Linq.Expressions.Interpreter.InterpretedFrame
#include "System/Linq/Expressions/Interpreter/InterpretedFrame.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Linq.Expressions.Interpreter.Instruction Instance
System::Linq::Expressions::Interpreter::Instruction* System::Linq::Expressions::Interpreter::LeaveFinallyInstruction::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::LeaveFinallyInstruction::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Linq::Expressions::Interpreter::Instruction*>("System.Linq.Expressions.Interpreter", "LeaveFinallyInstruction", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Linq.Expressions.Interpreter.Instruction Instance
void System::Linq::Expressions::Interpreter::LeaveFinallyInstruction::_set_Instance(System::Linq::Expressions::Interpreter::Instruction* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::LeaveFinallyInstruction::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Linq.Expressions.Interpreter", "LeaveFinallyInstruction", "Instance", value));
}
// Autogenerated method: System.Linq.Expressions.Interpreter.LeaveFinallyInstruction..cctor
void System::Linq::Expressions::Interpreter::LeaveFinallyInstruction::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::LeaveFinallyInstruction::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Linq.Expressions.Interpreter", "LeaveFinallyInstruction", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.LeaveFinallyInstruction.get_ConsumedStack
int System::Linq::Expressions::Interpreter::LeaveFinallyInstruction::get_ConsumedStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::LeaveFinallyInstruction::get_ConsumedStack");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConsumedStack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.LeaveFinallyInstruction.get_InstructionName
::StringW System::Linq::Expressions::Interpreter::LeaveFinallyInstruction::get_InstructionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::LeaveFinallyInstruction::get_InstructionName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InstructionName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: System.Linq.Expressions.Interpreter.LeaveFinallyInstruction.Run
int System::Linq::Expressions::Interpreter::LeaveFinallyInstruction::Run(System::Linq::Expressions::Interpreter::InterpretedFrame* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Linq::Expressions::Interpreter::LeaveFinallyInstruction::Run");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, frame);
}
