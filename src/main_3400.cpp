// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuViewControllersInstaller
#include "GlobalNamespace/MenuViewControllersInstaller.hpp"
// Including type: ServerPlayerListController
#include "GlobalNamespace/ServerPlayerListController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MenuViewControllersInstaller.InstallBindings
void GlobalNamespace::MenuViewControllersInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuViewControllersInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionGameplayInstaller
#include "GlobalNamespace/MissionGameplayInstaller.hpp"
// Including type: MissionGameplaySceneSetupData
#include "GlobalNamespace/MissionGameplaySceneSetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionGameplayInstaller.InstallBindings
void GlobalNamespace::MissionGameplayInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionGameplayInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerCoreInstaller
#include "GlobalNamespace/MultiplayerCoreInstaller.hpp"
// Including type: ScoreSyncStateManager
#include "GlobalNamespace/ScoreSyncStateManager.hpp"
// Including type: MultiplayerBadgesModelSO
#include "GlobalNamespace/MultiplayerBadgesModelSO.hpp"
// Including type: GameplayCoreSceneSetupData
#include "GlobalNamespace/GameplayCoreSceneSetupData.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerCoreInstaller.InstallBindings
void GlobalNamespace::MultiplayerCoreInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerCoreInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyInstaller
#include "GlobalNamespace/MultiplayerLobbyInstaller.hpp"
// Including type: MultiplayerLobbyAvatarController
#include "GlobalNamespace/MultiplayerLobbyAvatarController.hpp"
// Including type: MultiplayerLobbyAvatarPlace
#include "GlobalNamespace/MultiplayerLobbyAvatarPlace.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerLobbyInstaller.InstallBindings
void GlobalNamespace::MultiplayerLobbyInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLocalPlayerInstaller
#include "GlobalNamespace/MultiplayerLocalPlayerInstaller.hpp"
// Including type: MultiplayerLevelSceneSetupData
#include "GlobalNamespace/MultiplayerLevelSceneSetupData.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerLocalPlayerInstaller.InstallBindings
void GlobalNamespace::MultiplayerLocalPlayerInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLocalPlayerInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerMenuInstaller
#include "GlobalNamespace/MultiplayerMenuInstaller.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerMenuInstaller.InstallBindings
void GlobalNamespace::MultiplayerMenuInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerMenuInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardGameplayInstaller
#include "GlobalNamespace/StandardGameplayInstaller.hpp"
// Including type: StandardGameplaySceneSetupData
#include "GlobalNamespace/StandardGameplaySceneSetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StandardGameplayInstaller.InstallBindings
void GlobalNamespace::StandardGameplayInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardGameplayInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialBeatmapObjectPoolsInstaller
#include "GlobalNamespace/TutorialBeatmapObjectPoolsInstaller.hpp"
// Including type: TutorialNoteController
#include "GlobalNamespace/TutorialNoteController.hpp"
// Including type: BombNoteController
#include "GlobalNamespace/BombNoteController.hpp"
// Including type: ObstacleController
#include "GlobalNamespace/ObstacleController.hpp"
// Including type: NoteLineConnectionController
#include "GlobalNamespace/NoteLineConnectionController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TutorialBeatmapObjectPoolsInstaller.InstallBindings
void GlobalNamespace::TutorialBeatmapObjectPoolsInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialBeatmapObjectPoolsInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialInstaller
#include "GlobalNamespace/TutorialInstaller.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: BeatmapObjectSpawnControllerPlayerHeightSetter
#include "GlobalNamespace/BeatmapObjectSpawnControllerPlayerHeightSetter.hpp"
// Including type: PlayerHeightDetector
#include "GlobalNamespace/PlayerHeightDetector.hpp"
// Including type: EffectPoolsManualInstaller
#include "GlobalNamespace/EffectPoolsManualInstaller.hpp"
// Including type: TutorialSceneSetupData
#include "GlobalNamespace/TutorialSceneSetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TutorialInstaller.InstallBindings
void GlobalNamespace::TutorialInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BasicUIAudioManager
#include "GlobalNamespace/BasicUIAudioManager.hpp"
// Including type: Signal
#include "GlobalNamespace/Signal.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: RandomObjectPicker`1
#include "GlobalNamespace/RandomObjectPicker_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BasicUIAudioManager.Start
void GlobalNamespace::BasicUIAudioManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicUIAudioManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BasicUIAudioManager.OnEnable
void GlobalNamespace::BasicUIAudioManager::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicUIAudioManager::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BasicUIAudioManager.OnDisable
void GlobalNamespace::BasicUIAudioManager::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicUIAudioManager::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BasicUIAudioManager.HandleButtonClickEvent
void GlobalNamespace::BasicUIAudioManager::HandleButtonClickEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicUIAudioManager::HandleButtonClickEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleButtonClickEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VisualMetronome
#include "GlobalNamespace/VisualMetronome.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VisualMetronome.set_tickerColor
void GlobalNamespace::VisualMetronome::set_tickerColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VisualMetronome::set_tickerColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tickerColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VisualMetronome.set_movingTickerColor
void GlobalNamespace::VisualMetronome::set_movingTickerColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VisualMetronome::set_movingTickerColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_movingTickerColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VisualMetronome.set_zeroOffset
void GlobalNamespace::VisualMetronome::set_zeroOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VisualMetronome::set_zeroOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_zeroOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VisualMetronome.get_zeroOffset
float GlobalNamespace::VisualMetronome::get_zeroOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VisualMetronome::get_zeroOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_zeroOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VisualMetronome.Awake
void GlobalNamespace::VisualMetronome::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VisualMetronome::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VisualMetronome.OnEnable
void GlobalNamespace::VisualMetronome::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VisualMetronome::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VisualMetronome.OnDisable
void GlobalNamespace::VisualMetronome::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VisualMetronome::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VisualMetronome.Update
void GlobalNamespace::VisualMetronome::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VisualMetronome::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VisualMetronome.SetMovingTickerNormalizedPosition
void GlobalNamespace::VisualMetronome::SetMovingTickerNormalizedPosition(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VisualMetronome::SetMovingTickerNormalizedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMovingTickerNormalizedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorHueSlider
#include "GlobalNamespace/ColorHueSlider.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ColorHueSlider.add_colorHueDidChangeEvent
void GlobalNamespace::ColorHueSlider::add_colorHueDidChangeEvent(System::Action_3<GlobalNamespace::ColorHueSlider*, float, GlobalNamespace::ColorChangeUIEventType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorHueSlider::add_colorHueDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_colorHueDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorHueSlider.remove_colorHueDidChangeEvent
void GlobalNamespace::ColorHueSlider::remove_colorHueDidChangeEvent(System::Action_3<GlobalNamespace::ColorHueSlider*, float, GlobalNamespace::ColorChangeUIEventType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorHueSlider::remove_colorHueDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_colorHueDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorHueSlider.HandleNormalizedValueDidChange
void GlobalNamespace::ColorHueSlider::HandleNormalizedValueDidChange(HMUI::CircleSlider* slider, float normalizedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorHueSlider::HandleNormalizedValueDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNormalizedValueDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slider), ::il2cpp_utils::ExtractType(normalizedValue)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, slider, normalizedValue);
}
// Autogenerated method: ColorHueSlider.Awake
void GlobalNamespace::ColorHueSlider::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorHueSlider::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorHueSlider.OnDestroy
void GlobalNamespace::ColorHueSlider::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorHueSlider::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorHueSlider.UpdateVisuals
void GlobalNamespace::ColorHueSlider::UpdateVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorHueSlider::UpdateVisuals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorHueSlider.OnPointerUp
void GlobalNamespace::ColorHueSlider::OnPointerUp(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorHueSlider::OnPointerUp");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ColorSaturationValueSlider
#include "GlobalNamespace/ColorSaturationValueSlider.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ColorSaturationValueSlider.add_colorSaturationOrValueDidChangeEvent
void GlobalNamespace::ColorSaturationValueSlider::add_colorSaturationOrValueDidChangeEvent(System::Action_3<GlobalNamespace::ColorSaturationValueSlider*, UnityEngine::Vector2, GlobalNamespace::ColorChangeUIEventType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSaturationValueSlider::add_colorSaturationOrValueDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_colorSaturationOrValueDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorSaturationValueSlider.remove_colorSaturationOrValueDidChangeEvent
void GlobalNamespace::ColorSaturationValueSlider::remove_colorSaturationOrValueDidChangeEvent(System::Action_3<GlobalNamespace::ColorSaturationValueSlider*, UnityEngine::Vector2, GlobalNamespace::ColorChangeUIEventType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSaturationValueSlider::remove_colorSaturationOrValueDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_colorSaturationOrValueDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorSaturationValueSlider.SetHue
void GlobalNamespace::ColorSaturationValueSlider::SetHue(float hue) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSaturationValueSlider::SetHue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hue)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, hue);
}
// Autogenerated method: ColorSaturationValueSlider.HandleNormalizedValueDidChange
void GlobalNamespace::ColorSaturationValueSlider::HandleNormalizedValueDidChange(HMUI::Slider2D* slider, UnityEngine::Vector2 normalizedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSaturationValueSlider::HandleNormalizedValueDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNormalizedValueDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slider), ::il2cpp_utils::ExtractType(normalizedValue)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, slider, normalizedValue);
}
// Autogenerated method: ColorSaturationValueSlider.Awake
void GlobalNamespace::ColorSaturationValueSlider::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSaturationValueSlider::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorSaturationValueSlider.OnDestroy
void GlobalNamespace::ColorSaturationValueSlider::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSaturationValueSlider::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorSaturationValueSlider.UpdateVisuals
void GlobalNamespace::ColorSaturationValueSlider::UpdateVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSaturationValueSlider::UpdateVisuals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorSaturationValueSlider.OnPointerUp
void GlobalNamespace::ColorSaturationValueSlider::OnPointerUp(UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSaturationValueSlider::OnPointerUp");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ColorSchemeColorToggleController
#include "GlobalNamespace/ColorSchemeColorToggleController.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ColorSchemeColorToggleController.get_toggle
UnityEngine::UI::Toggle* GlobalNamespace::ColorSchemeColorToggleController::get_toggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorToggleController::get_toggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_toggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Toggle*, false>(this, ___internal__method);
}
// Autogenerated method: ColorSchemeColorToggleController.get_color
UnityEngine::Color GlobalNamespace::ColorSchemeColorToggleController::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorToggleController::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: ColorSchemeColorToggleController.set_color
void GlobalNamespace::ColorSchemeColorToggleController::set_color(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorToggleController::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorSchemeColorsToggleGroup
#include "GlobalNamespace/ColorSchemeColorsToggleGroup.hpp"
// Including type: ColorSchemeColorToggleController
#include "GlobalNamespace/ColorSchemeColorToggleController.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: HMUI.ToggleBinder
#include "HMUI/ToggleBinder.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ColorSchemeColorsToggleGroup.add_selectedColorDidChangeEvent
void GlobalNamespace::ColorSchemeColorsToggleGroup::add_selectedColorDidChangeEvent(System::Action_1<UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::add_selectedColorDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_selectedColorDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.remove_selectedColorDidChangeEvent
void GlobalNamespace::ColorSchemeColorsToggleGroup::remove_selectedColorDidChangeEvent(System::Action_1<UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::remove_selectedColorDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_selectedColorDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.get_color
UnityEngine::Color GlobalNamespace::ColorSchemeColorsToggleGroup::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.set_color
void GlobalNamespace::ColorSchemeColorsToggleGroup::set_color(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.SetColorScheme
void GlobalNamespace::ColorSchemeColorsToggleGroup::SetColorScheme(GlobalNamespace::ColorScheme* colorScheme) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::SetColorScheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColorScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorScheme)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, colorScheme);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.Awake
void GlobalNamespace::ColorSchemeColorsToggleGroup::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.OnDestroy
void GlobalNamespace::ColorSchemeColorsToggleGroup::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.HandleToggleWasSelected
void GlobalNamespace::ColorSchemeColorsToggleGroup::HandleToggleWasSelected(GlobalNamespace::ColorSchemeColorToggleController* toggleController, bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::HandleToggleWasSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleToggleWasSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toggleController), ::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, toggleController, isOn);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.CreateColorSchemeFromEditedColors
GlobalNamespace::ColorScheme* GlobalNamespace::ColorSchemeColorsToggleGroup::CreateColorSchemeFromEditedColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::CreateColorSchemeFromEditedColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateColorSchemeFromEditedColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ColorScheme*, false>(this, ___internal__method);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.<Awake>b__15_0
void GlobalNamespace::ColorSchemeColorsToggleGroup::$Awake$b__15_0(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::<Awake>b__15_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__15_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.<Awake>b__15_1
void GlobalNamespace::ColorSchemeColorsToggleGroup::$Awake$b__15_1(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::<Awake>b__15_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__15_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.<Awake>b__15_2
void GlobalNamespace::ColorSchemeColorsToggleGroup::$Awake$b__15_2(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::<Awake>b__15_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__15_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.<Awake>b__15_3
void GlobalNamespace::ColorSchemeColorsToggleGroup::$Awake$b__15_3(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::<Awake>b__15_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__15_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.<Awake>b__15_4
void GlobalNamespace::ColorSchemeColorsToggleGroup::$Awake$b__15_4(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeColorsToggleGroup::<Awake>b__15_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__15_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ColorSchemeDropdown
#include "GlobalNamespace/ColorSchemeDropdown.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: ColorSchemeView
#include "GlobalNamespace/ColorSchemeView.hpp"
// Including type: ColorSchemeTableCell
#include "GlobalNamespace/ColorSchemeTableCell.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ColorSchemeDropdown.LazyInit
void GlobalNamespace::ColorSchemeDropdown::LazyInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeDropdown::LazyInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LazyInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorSchemeDropdown.SetData
void GlobalNamespace::ColorSchemeDropdown::SetData(System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::ColorScheme*>* colorSchemes) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeDropdown::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorSchemes)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, colorSchemes);
}
// Autogenerated method: ColorSchemeDropdown.CellSize
float GlobalNamespace::ColorSchemeDropdown::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeDropdown::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ColorSchemeDropdown.NumberOfCells
int GlobalNamespace::ColorSchemeDropdown::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeDropdown::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ColorSchemeDropdown.CellForIdx
HMUI::TableCell* GlobalNamespace::ColorSchemeDropdown::CellForIdx(HMUI::TableView* tableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeDropdown::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodThrow<HMUI::TableCell*, false>(this, ___internal__method, tableView, idx);
}
// Autogenerated method: ColorSchemeDropdown.HandleDidSelectCellWithIdx
void GlobalNamespace::ColorSchemeDropdown::HandleDidSelectCellWithIdx(HMUI::DropdownWithTableView* dropdownWithTableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeDropdown::HandleDidSelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDidSelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dropdownWithTableView), ::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, dropdownWithTableView, idx);
}
// Autogenerated method: ColorSchemeDropdown.RefreshUI
void GlobalNamespace::ColorSchemeDropdown::RefreshUI(GlobalNamespace::ColorScheme* colorScheme) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeDropdown::RefreshUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorScheme)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, colorScheme);
}
// Autogenerated method: ColorSchemeDropdown.OnDestroy
void GlobalNamespace::ColorSchemeDropdown::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeDropdown::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorSchemeDropdown.Init
void GlobalNamespace::ColorSchemeDropdown::Init(HMUI::TableView::IDataSource* initTableViewDataSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeDropdown::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initTableViewDataSource)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, initTableViewDataSource);
}
// Autogenerated method: ColorSchemeDropdown.SelectCellWithIdx
void GlobalNamespace::ColorSchemeDropdown::SelectCellWithIdx(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeDropdown::SelectCellWithIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ColorSchemeTableCell
#include "GlobalNamespace/ColorSchemeTableCell.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: ColorSchemeView
#include "GlobalNamespace/ColorSchemeView.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ColorSchemeTableCell.set_text
void GlobalNamespace::ColorSchemeTableCell::set_text(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeTableCell::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorSchemeTableCell.get_text
::Il2CppString* GlobalNamespace::ColorSchemeTableCell::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeTableCell::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: ColorSchemeTableCell.set_showEditIcon
void GlobalNamespace::ColorSchemeTableCell::set_showEditIcon(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeTableCell::set_showEditIcon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_showEditIcon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorSchemeTableCell.SetColors
void GlobalNamespace::ColorSchemeTableCell::SetColors(UnityEngine::Color saberAColor, UnityEngine::Color saberBColor, UnityEngine::Color environment0Color, UnityEngine::Color environment1Color, UnityEngine::Color obstacleColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeTableCell::SetColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saberAColor), ::il2cpp_utils::ExtractType(saberBColor), ::il2cpp_utils::ExtractType(environment0Color), ::il2cpp_utils::ExtractType(environment1Color), ::il2cpp_utils::ExtractType(obstacleColor)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, saberAColor, saberBColor, environment0Color, environment1Color, obstacleColor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorSchemeView
#include "GlobalNamespace/ColorSchemeView.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ColorSchemeView.SetColors
void GlobalNamespace::ColorSchemeView::SetColors(UnityEngine::Color saberAColor, UnityEngine::Color saberBColor, UnityEngine::Color environment0Color, UnityEngine::Color environment1Color, UnityEngine::Color obstacleColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeView::SetColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saberAColor), ::il2cpp_utils::ExtractType(saberBColor), ::il2cpp_utils::ExtractType(environment0Color), ::il2cpp_utils::ExtractType(environment1Color), ::il2cpp_utils::ExtractType(obstacleColor)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, saberAColor, saberBColor, environment0Color, environment1Color, obstacleColor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorsOverrideSettingsPanelController
#include "GlobalNamespace/ColorsOverrideSettingsPanelController.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: ColorSchemeDropdown
#include "GlobalNamespace/ColorSchemeDropdown.hpp"
// Including type: EditColorSchemeController
#include "GlobalNamespace/EditColorSchemeController.hpp"
// Including type: HMUI.ModalView
#include "HMUI/ModalView.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: HMUI.PanelAnimationSO
#include "HMUI/PanelAnimationSO.hpp"
// Including type: ColorSchemesSettings
#include "GlobalNamespace/ColorSchemesSettings.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: HMUI.DropdownWithTableView
#include "HMUI/DropdownWithTableView.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ColorsOverrideSettingsPanelController.get_colorSchemesSettings
GlobalNamespace::ColorSchemesSettings* GlobalNamespace::ColorsOverrideSettingsPanelController::get_colorSchemesSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorsOverrideSettingsPanelController::get_colorSchemesSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorSchemesSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ColorSchemesSettings*, false>(this, ___internal__method);
}
// Autogenerated method: ColorsOverrideSettingsPanelController.SetData
void GlobalNamespace::ColorsOverrideSettingsPanelController::SetData(GlobalNamespace::ColorSchemesSettings* colorSchemesSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorsOverrideSettingsPanelController::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorSchemesSettings)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, colorSchemesSettings);
}
// Autogenerated method: ColorsOverrideSettingsPanelController.OnDestroy
void GlobalNamespace::ColorsOverrideSettingsPanelController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorsOverrideSettingsPanelController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorsOverrideSettingsPanelController.OnDisable
void GlobalNamespace::ColorsOverrideSettingsPanelController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorsOverrideSettingsPanelController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorsOverrideSettingsPanelController.Refresh
void GlobalNamespace::ColorsOverrideSettingsPanelController::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorsOverrideSettingsPanelController::Refresh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorsOverrideSettingsPanelController.HandleDropDownDidSelectCellWithIdx
void GlobalNamespace::ColorsOverrideSettingsPanelController::HandleDropDownDidSelectCellWithIdx(HMUI::DropdownWithTableView* dropDownWithTableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorsOverrideSettingsPanelController::HandleDropDownDidSelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDropDownDidSelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dropDownWithTableView), ::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, dropDownWithTableView, idx);
}
// Autogenerated method: ColorsOverrideSettingsPanelController.HandleOverrideColorsToggleValueChanged
void GlobalNamespace::ColorsOverrideSettingsPanelController::HandleOverrideColorsToggleValueChanged(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorsOverrideSettingsPanelController::HandleOverrideColorsToggleValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleOverrideColorsToggleValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: ColorsOverrideSettingsPanelController.HandleEditColorSchemeButtonWasPressed
void GlobalNamespace::ColorsOverrideSettingsPanelController::HandleEditColorSchemeButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorsOverrideSettingsPanelController::HandleEditColorSchemeButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEditColorSchemeButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorsOverrideSettingsPanelController.HandleEditColorSchemeControllerDidFinish
void GlobalNamespace::ColorsOverrideSettingsPanelController::HandleEditColorSchemeControllerDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorsOverrideSettingsPanelController::HandleEditColorSchemeControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEditColorSchemeControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorsOverrideSettingsPanelController.HandleEditColorSchemeControllerDidChangeColorScheme
void GlobalNamespace::ColorsOverrideSettingsPanelController::HandleEditColorSchemeControllerDidChangeColorScheme(GlobalNamespace::ColorScheme* colorScheme) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorsOverrideSettingsPanelController::HandleEditColorSchemeControllerDidChangeColorScheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEditColorSchemeControllerDidChangeColorScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorScheme)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, colorScheme);
}
// Autogenerated method: ColorsOverrideSettingsPanelController.<HandleOverrideColorsToggleValueChanged>b__18_0
void GlobalNamespace::ColorsOverrideSettingsPanelController::$HandleOverrideColorsToggleValueChanged$b__18_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorsOverrideSettingsPanelController::<HandleOverrideColorsToggleValueChanged>b__18_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleOverrideColorsToggleValueChanged>b__18_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EditColorController
#include "GlobalNamespace/EditColorController.hpp"
// Including type: HSVPanelController
#include "GlobalNamespace/HSVPanelController.hpp"
// Including type: PreviousColorPanelController
#include "GlobalNamespace/PreviousColorPanelController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: ColorChangeUIEventType
#include "GlobalNamespace/ColorChangeUIEventType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EditColorController.add_didChangeColorEvent
void GlobalNamespace::EditColorController::add_didChangeColorEvent(System::Action_1<UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorController::add_didChangeColorEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didChangeColorEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditColorController.remove_didChangeColorEvent
void GlobalNamespace::EditColorController::remove_didChangeColorEvent(System::Action_1<UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorController::remove_didChangeColorEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didChangeColorEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditColorController.add_didFinishEvent
void GlobalNamespace::EditColorController::add_didFinishEvent(System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditColorController.remove_didFinishEvent
void GlobalNamespace::EditColorController::remove_didFinishEvent(System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditColorController.SetColorCallback
void GlobalNamespace::EditColorController::SetColorCallback(System::Action_1<UnityEngine::Color>* colorCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorController::SetColorCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColorCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorCallback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, colorCallback);
}
// Autogenerated method: EditColorController.SetColor
void GlobalNamespace::EditColorController::SetColor(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorController::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: EditColorController.HandleHSVPanelControllerColorDidChange
void GlobalNamespace::EditColorController::HandleHSVPanelControllerColorDidChange(UnityEngine::Color color, GlobalNamespace::ColorChangeUIEventType colorChangeUIEventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorController::HandleHSVPanelControllerColorDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHSVPanelControllerColorDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(colorChangeUIEventType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color, colorChangeUIEventType);
}
// Autogenerated method: EditColorController.HandlePreviousColorPanelControllerColorWasSelected
void GlobalNamespace::EditColorController::HandlePreviousColorPanelControllerColorWasSelected(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorController::HandlePreviousColorPanelControllerColorWasSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePreviousColorPanelControllerColorWasSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: EditColorController.HandleCancelButtonWasPressed
void GlobalNamespace::EditColorController::HandleCancelButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorController::HandleCancelButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCancelButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditColorController.HandleApplyButtonWasPressed
void GlobalNamespace::EditColorController::HandleApplyButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorController::HandleApplyButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleApplyButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditColorController.ChangeColor
void GlobalNamespace::EditColorController::ChangeColor(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorController::ChangeColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: EditColorController.DidActivate
void GlobalNamespace::EditColorController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: EditColorController.DidDeactivate
void GlobalNamespace::EditColorController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EditColorSchemeController
#include "GlobalNamespace/EditColorSchemeController.hpp"
// Including type: ColorSchemeColorsToggleGroup
#include "GlobalNamespace/ColorSchemeColorsToggleGroup.hpp"
// Including type: RGBPanelController
#include "GlobalNamespace/RGBPanelController.hpp"
// Including type: HSVPanelController
#include "GlobalNamespace/HSVPanelController.hpp"
// Including type: PreviousColorPanelController
#include "GlobalNamespace/PreviousColorPanelController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: ColorChangeUIEventType
#include "GlobalNamespace/ColorChangeUIEventType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EditColorSchemeController.add_didFinishEvent
void GlobalNamespace::EditColorSchemeController::add_didFinishEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorSchemeController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditColorSchemeController.remove_didFinishEvent
void GlobalNamespace::EditColorSchemeController::remove_didFinishEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorSchemeController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditColorSchemeController.add_didChangeColorSchemeEvent
void GlobalNamespace::EditColorSchemeController::add_didChangeColorSchemeEvent(System::Action_1<GlobalNamespace::ColorScheme*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorSchemeController::add_didChangeColorSchemeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didChangeColorSchemeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditColorSchemeController.remove_didChangeColorSchemeEvent
void GlobalNamespace::EditColorSchemeController::remove_didChangeColorSchemeEvent(System::Action_1<GlobalNamespace::ColorScheme*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorSchemeController::remove_didChangeColorSchemeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didChangeColorSchemeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditColorSchemeController.SetColorScheme
void GlobalNamespace::EditColorSchemeController::SetColorScheme(GlobalNamespace::ColorScheme* colorScheme) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorSchemeController::SetColorScheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColorScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorScheme)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, colorScheme);
}
// Autogenerated method: EditColorSchemeController.Start
void GlobalNamespace::EditColorSchemeController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorSchemeController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditColorSchemeController.OnDestroy
void GlobalNamespace::EditColorSchemeController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorSchemeController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditColorSchemeController.HandleColorSchemeColorsToggleGroupSelectedColorDidChange
void GlobalNamespace::EditColorSchemeController::HandleColorSchemeColorsToggleGroupSelectedColorDidChange(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorSchemeController::HandleColorSchemeColorsToggleGroupSelectedColorDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleColorSchemeColorsToggleGroupSelectedColorDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: EditColorSchemeController.HandleRGBPanelControllerColorDidChange
void GlobalNamespace::EditColorSchemeController::HandleRGBPanelControllerColorDidChange(UnityEngine::Color color, GlobalNamespace::ColorChangeUIEventType colorChangeUIEventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorSchemeController::HandleRGBPanelControllerColorDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRGBPanelControllerColorDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(colorChangeUIEventType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color, colorChangeUIEventType);
}
// Autogenerated method: EditColorSchemeController.HandleHSVPanelControllerColorDidChange
void GlobalNamespace::EditColorSchemeController::HandleHSVPanelControllerColorDidChange(UnityEngine::Color color, GlobalNamespace::ColorChangeUIEventType colorChangeUIEventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorSchemeController::HandleHSVPanelControllerColorDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHSVPanelControllerColorDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(colorChangeUIEventType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color, colorChangeUIEventType);
}
// Autogenerated method: EditColorSchemeController.HandlePreviousColorPanelControllerColorWasSelected
void GlobalNamespace::EditColorSchemeController::HandlePreviousColorPanelControllerColorWasSelected(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorSchemeController::HandlePreviousColorPanelControllerColorWasSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePreviousColorPanelControllerColorWasSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: EditColorSchemeController.<Start>b__13_0
void GlobalNamespace::EditColorSchemeController::$Start$b__13_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditColorSchemeController::<Start>b__13_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__13_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HSVPanelController
#include "GlobalNamespace/HSVPanelController.hpp"
// Including type: ColorSaturationValueSlider
#include "GlobalNamespace/ColorSaturationValueSlider.hpp"
// Including type: ColorHueSlider
#include "GlobalNamespace/ColorHueSlider.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HSVPanelController.add_colorDidChangeEvent
void GlobalNamespace::HSVPanelController::add_colorDidChangeEvent(System::Action_2<UnityEngine::Color, GlobalNamespace::ColorChangeUIEventType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HSVPanelController::add_colorDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_colorDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HSVPanelController.remove_colorDidChangeEvent
void GlobalNamespace::HSVPanelController::remove_colorDidChangeEvent(System::Action_2<UnityEngine::Color, GlobalNamespace::ColorChangeUIEventType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HSVPanelController::remove_colorDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_colorDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HSVPanelController.get_color
UnityEngine::Color GlobalNamespace::HSVPanelController::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HSVPanelController::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: HSVPanelController.set_color
void GlobalNamespace::HSVPanelController::set_color(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HSVPanelController::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HSVPanelController.Awake
void GlobalNamespace::HSVPanelController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HSVPanelController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HSVPanelController.OnDestroy
void GlobalNamespace::HSVPanelController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HSVPanelController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HSVPanelController.HandleColorSaturationOrValueDidChange
void GlobalNamespace::HSVPanelController::HandleColorSaturationOrValueDidChange(GlobalNamespace::ColorSaturationValueSlider* slider, UnityEngine::Vector2 colorSaturationAndValue, GlobalNamespace::ColorChangeUIEventType colorChangeUIEventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HSVPanelController::HandleColorSaturationOrValueDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleColorSaturationOrValueDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slider), ::il2cpp_utils::ExtractType(colorSaturationAndValue), ::il2cpp_utils::ExtractType(colorChangeUIEventType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, slider, colorSaturationAndValue, colorChangeUIEventType);
}
// Autogenerated method: HSVPanelController.HandleColorHueDidChange
void GlobalNamespace::HSVPanelController::HandleColorHueDidChange(GlobalNamespace::ColorHueSlider* slider, float hue, GlobalNamespace::ColorChangeUIEventType colorChangeUIEventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HSVPanelController::HandleColorHueDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleColorHueDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slider), ::il2cpp_utils::ExtractType(hue), ::il2cpp_utils::ExtractType(colorChangeUIEventType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, slider, hue, colorChangeUIEventType);
}
// Autogenerated method: HSVPanelController.RefreshSlidersValues
void GlobalNamespace::HSVPanelController::RefreshSlidersValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HSVPanelController::RefreshSlidersValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshSlidersValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HSVPanelController.RefreshSlidersColors
void GlobalNamespace::HSVPanelController::RefreshSlidersColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HSVPanelController::RefreshSlidersColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshSlidersColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PreviousColorPanelController
#include "GlobalNamespace/PreviousColorPanelController.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxColors
int GlobalNamespace::PreviousColorPanelController::_get_kMaxColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviousColorPanelController::_get_kMaxColors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PreviousColorPanelController", "kMaxColors"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxColors
void GlobalNamespace::PreviousColorPanelController::_set_kMaxColors(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviousColorPanelController::_set_kMaxColors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PreviousColorPanelController", "kMaxColors", value));
}
// Autogenerated method: PreviousColorPanelController.add_colorWasSelectedEvent
void GlobalNamespace::PreviousColorPanelController::add_colorWasSelectedEvent(System::Action_1<UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviousColorPanelController::add_colorWasSelectedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_colorWasSelectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PreviousColorPanelController.remove_colorWasSelectedEvent
void GlobalNamespace::PreviousColorPanelController::remove_colorWasSelectedEvent(System::Action_1<UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviousColorPanelController::remove_colorWasSelectedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_colorWasSelectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PreviousColorPanelController.Awake
void GlobalNamespace::PreviousColorPanelController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviousColorPanelController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PreviousColorPanelController.OnDestroy
void GlobalNamespace::PreviousColorPanelController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviousColorPanelController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PreviousColorPanelController.AddColor
void GlobalNamespace::PreviousColorPanelController::AddColor(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviousColorPanelController::AddColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: PreviousColorPanelController.DiscardUpcomingColor
void GlobalNamespace::PreviousColorPanelController::DiscardUpcomingColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviousColorPanelController::DiscardUpcomingColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DiscardUpcomingColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PreviousColorPanelController.<Awake>b__9_0
void GlobalNamespace::PreviousColorPanelController::$Awake$b__9_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PreviousColorPanelController::<Awake>b__9_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__9_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RGBPanelController
#include "GlobalNamespace/RGBPanelController.hpp"
// Including type: HMUI.ColorGradientSlider
#include "HMUI/ColorGradientSlider.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: RGBPanelController.add_colorDidChangeEvent
void GlobalNamespace::RGBPanelController::add_colorDidChangeEvent(System::Action_2<UnityEngine::Color, GlobalNamespace::ColorChangeUIEventType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RGBPanelController::add_colorDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_colorDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RGBPanelController.remove_colorDidChangeEvent
void GlobalNamespace::RGBPanelController::remove_colorDidChangeEvent(System::Action_2<UnityEngine::Color, GlobalNamespace::ColorChangeUIEventType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RGBPanelController::remove_colorDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_colorDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RGBPanelController.get_color
UnityEngine::Color GlobalNamespace::RGBPanelController::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RGBPanelController::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: RGBPanelController.set_color
void GlobalNamespace::RGBPanelController::set_color(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RGBPanelController::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RGBPanelController.Awake
void GlobalNamespace::RGBPanelController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RGBPanelController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RGBPanelController.OnDestroy
void GlobalNamespace::RGBPanelController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RGBPanelController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RGBPanelController.HandleSliderColorDidChange
void GlobalNamespace::RGBPanelController::HandleSliderColorDidChange(HMUI::ColorGradientSlider* slider, UnityEngine::Color color, GlobalNamespace::ColorChangeUIEventType colorChangeUIEventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RGBPanelController::HandleSliderColorDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSliderColorDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slider), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(colorChangeUIEventType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, slider, color, colorChangeUIEventType);
}
// Autogenerated method: RGBPanelController.RefreshSlidersValues
void GlobalNamespace::RGBPanelController::RefreshSlidersValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RGBPanelController::RefreshSlidersValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshSlidersValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RGBPanelController.RefreshSlidersColors
void GlobalNamespace::RGBPanelController::RefreshSlidersColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RGBPanelController::RefreshSlidersColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshSlidersColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: AnnotatedBeatmapLevelCollectionTableCell
#include "GlobalNamespace/AnnotatedBeatmapLevelCollectionTableCell.hpp"
// Including type: AnnotatedBeatmapLevelCollectionTableCell/<RefreshAvailabilityAsync>d__18
#include "GlobalNamespace/AnnotatedBeatmapLevelCollectionTableCell_-RefreshAvailabilityAsync-d__18.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: IAnnotatedBeatmapLevelCollection
#include "GlobalNamespace/IAnnotatedBeatmapLevelCollection.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AnnotatedBeatmapLevelCollectionTableCell.set_showNewRibbon
void GlobalNamespace::AnnotatedBeatmapLevelCollectionTableCell::set_showNewRibbon(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionTableCell::set_showNewRibbon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_showNewRibbon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionTableCell.SetData
void GlobalNamespace::AnnotatedBeatmapLevelCollectionTableCell::SetData(GlobalNamespace::IAnnotatedBeatmapLevelCollection* annotatedBeatmapLevelCollection) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionTableCell::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(annotatedBeatmapLevelCollection)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, annotatedBeatmapLevelCollection);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionTableCell.RefreshVisuals
void GlobalNamespace::AnnotatedBeatmapLevelCollectionTableCell::RefreshVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionTableCell::RefreshVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionTableCell.GetInfoText
::Il2CppString* GlobalNamespace::AnnotatedBeatmapLevelCollectionTableCell::GetInfoText(::Il2CppString* name, int songs, int purchased) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionTableCell::GetInfoText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInfoText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(songs), ::il2cpp_utils::ExtractType(purchased)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, name, songs, purchased);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionTableCell.RefreshAvailabilityAsync
void GlobalNamespace::AnnotatedBeatmapLevelCollectionTableCell::RefreshAvailabilityAsync(GlobalNamespace::AdditionalContentModel* contentModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionTableCell::RefreshAvailabilityAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshAvailabilityAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contentModel)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, contentModel);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionTableCell.CancelAsyncOperations
void GlobalNamespace::AnnotatedBeatmapLevelCollectionTableCell::CancelAsyncOperations() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionTableCell::CancelAsyncOperations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelAsyncOperations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionTableCell.SelectionDidChange
void GlobalNamespace::AnnotatedBeatmapLevelCollectionTableCell::SelectionDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionTableCell::SelectionDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, transitionType);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionTableCell.HighlightDidChange
void GlobalNamespace::AnnotatedBeatmapLevelCollectionTableCell::HighlightDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionTableCell::HighlightDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighlightDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, transitionType);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionTableCell.WasPreparedForReuse
void GlobalNamespace::AnnotatedBeatmapLevelCollectionTableCell::WasPreparedForReuse() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionTableCell::WasPreparedForReuse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WasPreparedForReuse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: AnnotatedBeatmapLevelCollectionTableCell/<RefreshAvailabilityAsync>d__18
#include "GlobalNamespace/AnnotatedBeatmapLevelCollectionTableCell_-RefreshAvailabilityAsync-d__18.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AnnotatedBeatmapLevelCollectionTableCell/<RefreshAvailabilityAsync>d__18.MoveNext
void GlobalNamespace::AnnotatedBeatmapLevelCollectionTableCell::$RefreshAvailabilityAsync$d__18::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionTableCell::$RefreshAvailabilityAsync$d__18::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionTableCell/<RefreshAvailabilityAsync>d__18.SetStateMachine
void GlobalNamespace::AnnotatedBeatmapLevelCollectionTableCell::$RefreshAvailabilityAsync$d__18::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionTableCell::$RefreshAvailabilityAsync$d__18::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapCharacteristicTableCell
#include "GlobalNamespace/BeatmapCharacteristicTableCell.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapCharacteristicTableCell.SetData
void GlobalNamespace::BeatmapCharacteristicTableCell::SetData(GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicTableCell::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapCharacteristic)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapCharacteristic);
}
// Autogenerated method: BeatmapCharacteristicTableCell.RefreshVisuals
void GlobalNamespace::BeatmapCharacteristicTableCell::RefreshVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicTableCell::RefreshVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicTableCell.SelectionDidChange
void GlobalNamespace::BeatmapCharacteristicTableCell::SelectionDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicTableCell::SelectionDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, transitionType);
}
// Autogenerated method: BeatmapCharacteristicTableCell.HighlightDidChange
void GlobalNamespace::BeatmapCharacteristicTableCell::HighlightDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicTableCell::HighlightDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighlightDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, transitionType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorPickerButtonController
#include "GlobalNamespace/ColorPickerButtonController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ColorPickerButtonController.get_button
UnityEngine::UI::Button* GlobalNamespace::ColorPickerButtonController::get_button() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorPickerButtonController::get_button");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_button", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Button*, false>(this, ___internal__method);
}
// Autogenerated method: ColorPickerButtonController.SetColor
void GlobalNamespace::ColorPickerButtonController::SetColor(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorPickerButtonController::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorStepValuePicker
#include "GlobalNamespace/ColorStepValuePicker.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ColorStepValuePicker.add_decButtonWasPressedEvent
void GlobalNamespace::ColorStepValuePicker::add_decButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::add_decButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_decButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorStepValuePicker.remove_decButtonWasPressedEvent
void GlobalNamespace::ColorStepValuePicker::remove_decButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::remove_decButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_decButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorStepValuePicker.add_incButtonWasPressedEvent
void GlobalNamespace::ColorStepValuePicker::add_incButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::add_incButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_incButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorStepValuePicker.remove_incButtonWasPressedEvent
void GlobalNamespace::ColorStepValuePicker::remove_incButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::remove_incButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_incButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorStepValuePicker.get_color
UnityEngine::Color GlobalNamespace::ColorStepValuePicker::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: ColorStepValuePicker.set_color
void GlobalNamespace::ColorStepValuePicker::set_color(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorStepValuePicker.set_decButtonInteractable
void GlobalNamespace::ColorStepValuePicker::set_decButtonInteractable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::set_decButtonInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_decButtonInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorStepValuePicker.set_incButtonInteractable
void GlobalNamespace::ColorStepValuePicker::set_incButtonInteractable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::set_incButtonInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_incButtonInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorStepValuePicker.OnEnable
void GlobalNamespace::ColorStepValuePicker::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorStepValuePicker.OnDisable
void GlobalNamespace::ColorStepValuePicker::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorStepValuePicker.IncButtonPressed
void GlobalNamespace::ColorStepValuePicker::IncButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::IncButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorStepValuePicker.DecButtonPressed
void GlobalNamespace::ColorStepValuePicker::DecButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorStepValuePicker::DecButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: DifficultyTableCell
#include "GlobalNamespace/DifficultyTableCell.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: FillIndicator
#include "GlobalNamespace/FillIndicator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DifficultyTableCell.set_difficultyText
void GlobalNamespace::DifficultyTableCell::set_difficultyText(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableCell::set_difficultyText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_difficultyText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DifficultyTableCell.get_difficultyText
::Il2CppString* GlobalNamespace::DifficultyTableCell::get_difficultyText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableCell::get_difficultyText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: DifficultyTableCell.set_difficultyValue
void GlobalNamespace::DifficultyTableCell::set_difficultyValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableCell::set_difficultyValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_difficultyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DifficultyTableCell.SelectionDidChange
void GlobalNamespace::DifficultyTableCell::SelectionDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableCell::SelectionDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, transitionType);
}
// Autogenerated method: DifficultyTableCell.HighlightDidChange
void GlobalNamespace::DifficultyTableCell::HighlightDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableCell::HighlightDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighlightDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, transitionType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FillIndicator
#include "GlobalNamespace/FillIndicator.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FillIndicator.set_fillAmount
void GlobalNamespace::FillIndicator::set_fillAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FillIndicator::set_fillAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fillAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FillIndicator.get_fillAmount
float GlobalNamespace::FillIndicator::get_fillAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FillIndicator::get_fillAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fillAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerListDetailTableCell
#include "GlobalNamespace/GameServerListDetailTableCell.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GameServerListDetailTableCell.add_joinServerButtonWasPressedEvent
void GlobalNamespace::GameServerListDetailTableCell::add_joinServerButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListDetailTableCell::add_joinServerButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_joinServerButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerListDetailTableCell.remove_joinServerButtonWasPressedEvent
void GlobalNamespace::GameServerListDetailTableCell::remove_joinServerButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListDetailTableCell::remove_joinServerButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_joinServerButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerListDetailTableCell.<Start>b__5_0
void GlobalNamespace::GameServerListDetailTableCell::$Start$b__5_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListDetailTableCell::<Start>b__5_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__5_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerListDetailTableCell.Start
void GlobalNamespace::GameServerListDetailTableCell::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListDetailTableCell::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerListTableCell
#include "GlobalNamespace/GameServerListTableCell.hpp"
// Including type: HMUI.CurvedTextMeshPro
#include "HMUI/CurvedTextMeshPro.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: SongPackMasksModel
#include "GlobalNamespace/SongPackMasksModel.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GameServerListTableCell.SetData
void GlobalNamespace::GameServerListTableCell::SetData(GlobalNamespace::INetworkPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListTableCell::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerPlayerTableCell
#include "GlobalNamespace/GameServerPlayerTableCell.hpp"
// Including type: GameServerPlayerTableCell/<>c__DisplayClass26_0
#include "GlobalNamespace/GameServerPlayerTableCell_--c__DisplayClass26_0.hpp"
// Including type: GameServerPlayerTableCell/<SetBeatmapUseButtonEnabledAsync>d__32
#include "GlobalNamespace/GameServerPlayerTableCell_-SetBeatmapUseButtonEnabledAsync-d__32.hpp"
// Including type: HMUI.CurvedTextMeshPro
#include "HMUI/CurvedTextMeshPro.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: GameplayModifierInfoListItemsList
#include "GlobalNamespace/GameplayModifierInfoListItemsList.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: HMUI.HoverHint
#include "HMUI/HoverHint.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: ILobbyPlayerDataModel
#include "GlobalNamespace/ILobbyPlayerDataModel.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GameServerPlayerTableCell.add_kickPlayerEvent
void GlobalNamespace::GameServerPlayerTableCell::add_kickPlayerEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::add_kickPlayerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_kickPlayerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayerTableCell.remove_kickPlayerEvent
void GlobalNamespace::GameServerPlayerTableCell::remove_kickPlayerEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::remove_kickPlayerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_kickPlayerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayerTableCell.add_useBeatmapEvent
void GlobalNamespace::GameServerPlayerTableCell::add_useBeatmapEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::add_useBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_useBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayerTableCell.remove_useBeatmapEvent
void GlobalNamespace::GameServerPlayerTableCell::remove_useBeatmapEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::remove_useBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_useBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayerTableCell.add_useModifiersEvent
void GlobalNamespace::GameServerPlayerTableCell::add_useModifiersEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::add_useModifiersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_useModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayerTableCell.remove_useModifiersEvent
void GlobalNamespace::GameServerPlayerTableCell::remove_useModifiersEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::remove_useModifiersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_useModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayerTableCell.SetData
void GlobalNamespace::GameServerPlayerTableCell::SetData(GlobalNamespace::IConnectedPlayer* connectedPlayer, GlobalNamespace::ILobbyPlayerDataModel* playerDataModel, bool isHost, System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>* getLevelEntitlementTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer), ::il2cpp_utils::ExtractType(playerDataModel), ::il2cpp_utils::ExtractType(isHost), ::il2cpp_utils::ExtractType(getLevelEntitlementTask)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connectedPlayer, playerDataModel, isHost, getLevelEntitlementTask);
}
// Autogenerated method: GameServerPlayerTableCell.Awake
void GlobalNamespace::GameServerPlayerTableCell::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerPlayerTableCell.HandleKickPlayerButtonPressed
void GlobalNamespace::GameServerPlayerTableCell::HandleKickPlayerButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::HandleKickPlayerButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleKickPlayerButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerPlayerTableCell.HandleUseBeatmapButtonPressed
void GlobalNamespace::GameServerPlayerTableCell::HandleUseBeatmapButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::HandleUseBeatmapButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUseBeatmapButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerPlayerTableCell.HandleUseModifiersButtonPressed
void GlobalNamespace::GameServerPlayerTableCell::HandleUseModifiersButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::HandleUseModifiersButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUseModifiersButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerPlayerTableCell.SetBeatmapUseButtonEnabledAsync
void GlobalNamespace::GameServerPlayerTableCell::SetBeatmapUseButtonEnabledAsync(System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>* getLevelEntitlementTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::SetBeatmapUseButtonEnabledAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBeatmapUseButtonEnabledAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(getLevelEntitlementTask)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, getLevelEntitlementTask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerPlayerTableCell/<>c__DisplayClass26_0
#include "GlobalNamespace/GameServerPlayerTableCell_--c__DisplayClass26_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GameplayModifierParamsSO
#include "GlobalNamespace/GameplayModifierParamsSO.hpp"
// Including type: GameplayModifierInfoListItem
#include "GlobalNamespace/GameplayModifierInfoListItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GameServerPlayerTableCell/<>c__DisplayClass26_0.<SetData>b__0
void GlobalNamespace::GameServerPlayerTableCell::$$c__DisplayClass26_0::$SetData$b__0(int id, GlobalNamespace::GameplayModifierInfoListItem* listItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::$$c__DisplayClass26_0::<SetData>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetData>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(listItem)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, id, listItem);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerPlayerTableCell/<SetBeatmapUseButtonEnabledAsync>d__32
#include "GlobalNamespace/GameServerPlayerTableCell_-SetBeatmapUseButtonEnabledAsync-d__32.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GameServerPlayerTableCell/<SetBeatmapUseButtonEnabledAsync>d__32.MoveNext
void GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__32::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__32::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: GameServerPlayerTableCell/<SetBeatmapUseButtonEnabledAsync>d__32.SetStateMachine
void GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__32::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__32::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifierInfoListItem
#include "GlobalNamespace/GameplayModifierInfoListItem.hpp"
// Including type: HMUI.HoverHint
#include "HMUI/HoverHint.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: GameplayModifierParamsSO
#include "GlobalNamespace/GameplayModifierParamsSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GameplayModifierInfoListItem.SetModifier
void GlobalNamespace::GameplayModifierInfoListItem::SetModifier(GlobalNamespace::GameplayModifierParamsSO* modifierParam, bool showName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayModifierInfoListItem::SetModifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetModifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(modifierParam), ::il2cpp_utils::ExtractType(showName)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, modifierParam, showName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifierInfoListItemsList
#include "GlobalNamespace/GameplayModifierInfoListItemsList.hpp"
// Including type: GameplayModifierInfoListItem
#include "GlobalNamespace/GameplayModifierInfoListItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ImageWithHintItemsList
#include "GlobalNamespace/ImageWithHintItemsList.hpp"
// Including type: HMUI.ImageWithHint
#include "HMUI/ImageWithHint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IncDecColorController
#include "GlobalNamespace/IncDecColorController.hpp"
// Including type: ColorStepValuePicker
#include "GlobalNamespace/ColorStepValuePicker.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IncDecColorController.set_enableDec
void GlobalNamespace::IncDecColorController::set_enableDec(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecColorController::set_enableDec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableDec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IncDecColorController.set_enableInc
void GlobalNamespace::IncDecColorController::set_enableInc(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecColorController::set_enableInc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableInc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IncDecColorController.set_color
void GlobalNamespace::IncDecColorController::set_color(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecColorController::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IncDecColorController.Awake
void GlobalNamespace::IncDecColorController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecColorController::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IncDecColorController.OnDestroy
void GlobalNamespace::IncDecColorController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecColorController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IncDecColorController.IncButtonPressed
void GlobalNamespace::IncDecColorController::IncButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecColorController::IncButtonPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IncDecColorController.DecButtonPressed
void GlobalNamespace::IncDecColorController::DecButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IncDecColorController::DecButtonPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LeaderboardTableCell
#include "GlobalNamespace/LeaderboardTableCell.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LeaderboardTableCell.set_rank
void GlobalNamespace::LeaderboardTableCell::set_rank(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableCell::set_rank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardTableCell.set_playerName
void GlobalNamespace::LeaderboardTableCell::set_playerName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableCell::set_playerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardTableCell.set_score
void GlobalNamespace::LeaderboardTableCell::set_score(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableCell::set_score");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_score", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardTableCell.set_showSeparator
void GlobalNamespace::LeaderboardTableCell::set_showSeparator(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableCell::set_showSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_showSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardTableCell.set_showFullCombo
void GlobalNamespace::LeaderboardTableCell::set_showFullCombo(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableCell::set_showFullCombo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_showFullCombo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardTableCell.set_specialScore
void GlobalNamespace::LeaderboardTableCell::set_specialScore(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableCell::set_specialScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_specialScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LevelListTableCell
#include "GlobalNamespace/LevelListTableCell.hpp"
// Including type: LevelListTableCell/<SetDataFromLevelAsync>d__17
#include "GlobalNamespace/LevelListTableCell_-SetDataFromLevelAsync-d__17.hpp"
// Including type: LevelListTableCell/<RefreshAvailabilityAsync>d__22
#include "GlobalNamespace/LevelListTableCell_-RefreshAvailabilityAsync-d__22.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LevelListTableCell.SetDataFromLevelAsync
void GlobalNamespace::LevelListTableCell::SetDataFromLevelAsync(GlobalNamespace::IPreviewBeatmapLevel* level, bool isFavorite) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::SetDataFromLevelAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDataFromLevelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(isFavorite)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, level, isFavorite);
}
// Autogenerated method: LevelListTableCell.RefreshVisuals
void GlobalNamespace::LevelListTableCell::RefreshVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::RefreshVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelListTableCell.RefreshAvailabilityAsync
void GlobalNamespace::LevelListTableCell::RefreshAvailabilityAsync(GlobalNamespace::AdditionalContentModel* contentModel, ::Il2CppString* levelID) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::RefreshAvailabilityAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshAvailabilityAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contentModel), ::il2cpp_utils::ExtractType(levelID)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, contentModel, levelID);
}
// Autogenerated method: LevelListTableCell.CancelAsyncOperations
void GlobalNamespace::LevelListTableCell::CancelAsyncOperations() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::CancelAsyncOperations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelAsyncOperations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelListTableCell.SelectionDidChange
void GlobalNamespace::LevelListTableCell::SelectionDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::SelectionDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, transitionType);
}
// Autogenerated method: LevelListTableCell.HighlightDidChange
void GlobalNamespace::LevelListTableCell::HighlightDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::HighlightDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighlightDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, transitionType);
}
// Autogenerated method: LevelListTableCell.WasPreparedForReuse
void GlobalNamespace::LevelListTableCell::WasPreparedForReuse() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::WasPreparedForReuse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WasPreparedForReuse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelListTableCell/<SetDataFromLevelAsync>d__17
#include "GlobalNamespace/LevelListTableCell_-SetDataFromLevelAsync-d__17.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LevelListTableCell/<SetDataFromLevelAsync>d__17.MoveNext
void GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: LevelListTableCell/<SetDataFromLevelAsync>d__17.SetStateMachine
void GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$SetDataFromLevelAsync$d__17::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LevelListTableCell/<RefreshAvailabilityAsync>d__22
#include "GlobalNamespace/LevelListTableCell_-RefreshAvailabilityAsync-d__22.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LevelListTableCell/<RefreshAvailabilityAsync>d__22.MoveNext
void GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: LevelListTableCell/<RefreshAvailabilityAsync>d__22.SetStateMachine
void GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelListTableCell::$RefreshAvailabilityAsync$d__22::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LevelPackHeaderTableCell
#include "GlobalNamespace/LevelPackHeaderTableCell.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LevelPackHeaderTableCell.SetData
void GlobalNamespace::LevelPackHeaderTableCell::SetData(::Il2CppString* headerText) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackHeaderTableCell::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headerText)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, headerText);
}
// Autogenerated method: LevelPackHeaderTableCell.RefreshVisuals
void GlobalNamespace::LevelPackHeaderTableCell::RefreshVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackHeaderTableCell::RefreshVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelPackHeaderTableCell.SelectionDidChange
void GlobalNamespace::LevelPackHeaderTableCell::SelectionDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackHeaderTableCell::SelectionDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, transitionType);
}
// Autogenerated method: LevelPackHeaderTableCell.HighlightDidChange
void GlobalNamespace::LevelPackHeaderTableCell::HighlightDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelPackHeaderTableCell::HighlightDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighlightDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, transitionType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ListColorController
#include "GlobalNamespace/ListColorController.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ListColorController.GetInitValues
bool GlobalNamespace::ListColorController::GetInitValues(int& idx, int& numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListColorController::GetInitValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, idx, numberOfElements);
}
// Autogenerated method: ListColorController.ApplyValue
void GlobalNamespace::ListColorController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListColorController::ApplyValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: ListColorController.ColorForValue
UnityEngine::Color GlobalNamespace::ListColorController::ColorForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListColorController::ColorForValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorForValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method, idx);
}
// Autogenerated method: ListColorController.OnEnable
void GlobalNamespace::ListColorController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListColorController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ListColorController.RefreshUI
void GlobalNamespace::ListColorController::RefreshUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListColorController::RefreshUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ListColorController.Refresh
void GlobalNamespace::ListColorController::Refresh(bool applyValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListColorController::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(applyValue)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, applyValue);
}
// Autogenerated method: ListColorController.IncButtonPressed
void GlobalNamespace::ListColorController::IncButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListColorController::IncButtonPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ListColorController.DecButtonPressed
void GlobalNamespace::ListColorController::DecButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListColorController::DecButtonPressed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LoadingControl
#include "GlobalNamespace/LoadingControl.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LoadingControl.add_didPressRefreshButtonEvent
void GlobalNamespace::LoadingControl::add_didPressRefreshButtonEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::add_didPressRefreshButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didPressRefreshButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LoadingControl.remove_didPressRefreshButtonEvent
void GlobalNamespace::LoadingControl::remove_didPressRefreshButtonEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::remove_didPressRefreshButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didPressRefreshButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LoadingControl.get_isLoading
bool GlobalNamespace::LoadingControl::get_isLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::get_isLoading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isLoading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LoadingControl.Awake
void GlobalNamespace::LoadingControl::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LoadingControl.OnDestroy
void GlobalNamespace::LoadingControl::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LoadingControl.ShowLoading
void GlobalNamespace::LoadingControl::ShowLoading(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::ShowLoading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowLoading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: LoadingControl.ShowText
void GlobalNamespace::LoadingControl::ShowText(::Il2CppString* text, bool showRefreshButton) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::ShowText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(showRefreshButton)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text, showRefreshButton);
}
// Autogenerated method: LoadingControl.ShowDownloadingProgress
void GlobalNamespace::LoadingControl::ShowDownloadingProgress(::Il2CppString* text, float downloadingProgress) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::ShowDownloadingProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowDownloadingProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(downloadingProgress)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text, downloadingProgress);
}
// Autogenerated method: LoadingControl.Hide
void GlobalNamespace::LoadingControl::Hide() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::Hide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LoadingControl.<Awake>b__14_0
void GlobalNamespace::LoadingControl::$Awake$b__14_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LoadingControl::<Awake>b__14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__14_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NamedColorListController
#include "GlobalNamespace/NamedColorListController.hpp"
// Including type: NamedColorListController/ColorValuePair
#include "GlobalNamespace/NamedColorListController_ColorValuePair.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NamedColorListController.add_valueChangedEvent
void GlobalNamespace::NamedColorListController::add_valueChangedEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedColorListController::add_valueChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_valueChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NamedColorListController.remove_valueChangedEvent
void GlobalNamespace::NamedColorListController::remove_valueChangedEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedColorListController::remove_valueChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_valueChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NamedColorListController.Init
void GlobalNamespace::NamedColorListController::Init(::Array<GlobalNamespace::NamedColorListController::ColorValuePair*>* values, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedColorListController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, values, value);
}
// Autogenerated method: NamedColorListController.SetValue
void GlobalNamespace::NamedColorListController::SetValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedColorListController::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NamedColorListController.GetInitValues
bool GlobalNamespace::NamedColorListController::GetInitValues(int& idx, int& numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedColorListController::GetInitValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, idx, numberOfElements);
}
// Autogenerated method: NamedColorListController.ApplyValue
void GlobalNamespace::NamedColorListController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedColorListController::ApplyValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: NamedColorListController.ColorForValue
UnityEngine::Color GlobalNamespace::NamedColorListController::ColorForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedColorListController::ColorForValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorForValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NamedColorListController/ColorValuePair
#include "GlobalNamespace/NamedColorListController_ColorValuePair.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NamedIntListController
#include "GlobalNamespace/NamedIntListController.hpp"
// Including type: NamedIntListController/TextValuePair
#include "GlobalNamespace/NamedIntListController_TextValuePair.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NamedIntListController.add_valueChangedEvent
void GlobalNamespace::NamedIntListController::add_valueChangedEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListController::add_valueChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_valueChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NamedIntListController.remove_valueChangedEvent
void GlobalNamespace::NamedIntListController::remove_valueChangedEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListController::remove_valueChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_valueChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NamedIntListController.InitValues
void GlobalNamespace::NamedIntListController::InitValues(::Array<GlobalNamespace::NamedIntListController::TextValuePair*>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListController::InitValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(values)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, values);
}
// Autogenerated method: NamedIntListController.SetValue
void GlobalNamespace::NamedIntListController::SetValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListController::SetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NamedIntListController.GetInitValues
bool GlobalNamespace::NamedIntListController::GetInitValues(int& idx, int& numberOfElements) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListController::GetInitValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInitValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, idx, numberOfElements);
}
// Autogenerated method: NamedIntListController.ApplyValue
void GlobalNamespace::NamedIntListController::ApplyValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListController::ApplyValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ApplyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: NamedIntListController.TextForValue
::Il2CppString* GlobalNamespace::NamedIntListController::TextForValue(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListController::TextForValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TextForValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NamedIntListController/TextValuePair
#include "GlobalNamespace/NamedIntListController_TextValuePair.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NamedIntListController/TextValuePair.get_localizedText
::Il2CppString* GlobalNamespace::NamedIntListController::TextValuePair::get_localizedText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NamedIntListController::TextValuePair::get_localizedText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localizedText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PackLevelListHeaderTableCell
#include "GlobalNamespace/PackLevelListHeaderTableCell.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PackLevelListHeaderTableCell.set_text
void GlobalNamespace::PackLevelListHeaderTableCell::set_text(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PackLevelListHeaderTableCell::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PackLevelListHeaderTableCell.get_text
::Il2CppString* GlobalNamespace::PackLevelListHeaderTableCell::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PackLevelListHeaderTableCell::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PackLevelListHeaderTableCell.RefreshVisuals
void GlobalNamespace::PackLevelListHeaderTableCell::RefreshVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PackLevelListHeaderTableCell::RefreshVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PackLevelListHeaderTableCell.SelectionDidChange
void GlobalNamespace::PackLevelListHeaderTableCell::SelectionDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PackLevelListHeaderTableCell::SelectionDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, transitionType);
}
// Autogenerated method: PackLevelListHeaderTableCell.HighlightDidChange
void GlobalNamespace::PackLevelListHeaderTableCell::HighlightDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PackLevelListHeaderTableCell::HighlightDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighlightDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, transitionType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SafeAreaRectChecker
#include "GlobalNamespace/SafeAreaRectChecker.hpp"
// Including type: SafeAreaRectChecker/InitData
#include "GlobalNamespace/SafeAreaRectChecker_InitData.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: MainCamera
#include "GlobalNamespace/MainCamera.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SafeAreaRectChecker.Start
void GlobalNamespace::SafeAreaRectChecker::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SafeAreaRectChecker::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SafeAreaRectChecker.Update
void GlobalNamespace::SafeAreaRectChecker::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SafeAreaRectChecker::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SafeAreaRectChecker/InitData
#include "GlobalNamespace/SafeAreaRectChecker_InitData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StartMiddleEndButtonBackgroundController
#include "GlobalNamespace/StartMiddleEndButtonBackgroundController.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StartMiddleEndButtonBackgroundController.SetStartSprite
void GlobalNamespace::StartMiddleEndButtonBackgroundController::SetStartSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StartMiddleEndButtonBackgroundController::SetStartSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStartSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StartMiddleEndButtonBackgroundController.SetMiddleSprite
void GlobalNamespace::StartMiddleEndButtonBackgroundController::SetMiddleSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StartMiddleEndButtonBackgroundController::SetMiddleSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMiddleSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StartMiddleEndButtonBackgroundController.SetEndSprite
void GlobalNamespace::StartMiddleEndButtonBackgroundController::SetEndSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StartMiddleEndButtonBackgroundController::SetEndSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEndSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StartMiddleEndButtonsGroup
#include "GlobalNamespace/StartMiddleEndButtonsGroup.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StartMiddleEndButtonsGroup.SetLayoutHorizontal
void GlobalNamespace::StartMiddleEndButtonsGroup::SetLayoutHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StartMiddleEndButtonsGroup::SetLayoutHorizontal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayoutHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StartMiddleEndButtonsGroup.SetLayoutVertical
void GlobalNamespace::StartMiddleEndButtonsGroup::SetLayoutVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StartMiddleEndButtonsGroup::SetLayoutVertical");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLayoutVertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StepValuePicker
#include "GlobalNamespace/StepValuePicker.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StepValuePicker.add_decButtonWasPressedEvent
void GlobalNamespace::StepValuePicker::add_decButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::add_decButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_decButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StepValuePicker.remove_decButtonWasPressedEvent
void GlobalNamespace::StepValuePicker::remove_decButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::remove_decButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_decButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StepValuePicker.add_incButtonWasPressedEvent
void GlobalNamespace::StepValuePicker::add_incButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::add_incButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_incButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StepValuePicker.remove_incButtonWasPressedEvent
void GlobalNamespace::StepValuePicker::remove_incButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::remove_incButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_incButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StepValuePicker.get_text
::Il2CppString* GlobalNamespace::StepValuePicker::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StepValuePicker.set_text
void GlobalNamespace::StepValuePicker::set_text(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StepValuePicker.set_decButtonInteractable
void GlobalNamespace::StepValuePicker::set_decButtonInteractable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::set_decButtonInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_decButtonInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StepValuePicker.set_incButtonInteractable
void GlobalNamespace::StepValuePicker::set_incButtonInteractable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::set_incButtonInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_incButtonInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StepValuePicker.OnEnable
void GlobalNamespace::StepValuePicker::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StepValuePicker.OnDisable
void GlobalNamespace::StepValuePicker::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StepValuePicker.IncButtonPressed
void GlobalNamespace::StepValuePicker::IncButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::IncButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StepValuePicker.DecButtonPressed
void GlobalNamespace::StepValuePicker::DecButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StepValuePicker::DecButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TextButton
#include "GlobalNamespace/TextButton.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TextButton.get_text
UnityEngine::UI::Text* GlobalNamespace::TextButton::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextButton::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Text*, false>(this, ___internal__method);
}
// Autogenerated method: TextButton.get_button
UnityEngine::UI::Button* GlobalNamespace::TextButton::get_button() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextButton::get_button");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_button", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Button*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TextMeshProButton
#include "GlobalNamespace/TextMeshProButton.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TextMeshProButton.get_text
TMPro::TextMeshProUGUI* GlobalNamespace::TextMeshProButton::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextMeshProButton::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<TMPro::TextMeshProUGUI*, false>(this, ___internal__method);
}
// Autogenerated method: TextMeshProButton.get_button
UnityEngine::UI::Button* GlobalNamespace::TextMeshProButton::get_button() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextMeshProButton::get_button");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_button", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Button*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TextOnlyTableCell
#include "GlobalNamespace/TextOnlyTableCell.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
// Including type: HMUI.SelectableCell/TransitionType
#include "HMUI/SelectableCell.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TextOnlyTableCell.get_text
::Il2CppString* GlobalNamespace::TextOnlyTableCell::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextOnlyTableCell::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: TextOnlyTableCell.set_text
void GlobalNamespace::TextOnlyTableCell::set_text(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextOnlyTableCell::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TextOnlyTableCell.RefreshVisuals
void GlobalNamespace::TextOnlyTableCell::RefreshVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextOnlyTableCell::RefreshVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TextOnlyTableCell.SelectionDidChange
void GlobalNamespace::TextOnlyTableCell::SelectionDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextOnlyTableCell::SelectionDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, transitionType);
}
// Autogenerated method: TextOnlyTableCell.HighlightDidChange
void GlobalNamespace::TextOnlyTableCell::HighlightDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextOnlyTableCell::HighlightDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighlightDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, transitionType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BaseStateTransition
#include "GlobalNamespace/BaseStateTransition.hpp"
// Including type: Tweening.TweeningManager
#include "Tweening/TweeningManager.hpp"
// Including type: BaseTransitionSO
#include "GlobalNamespace/BaseTransitionSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BaseStateTransition.get_tweeningManager
Tweening::TweeningManager* GlobalNamespace::BaseStateTransition::get_tweeningManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::get_tweeningManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tweeningManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Tweening::TweeningManager*, false>(this, ___internal__method);
}
// Autogenerated method: BaseStateTransition.get_transition
GlobalNamespace::BaseTransitionSO* GlobalNamespace::BaseStateTransition::get_transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::get_transition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BaseTransitionSO*, false>(this, ___internal__method);
}
// Autogenerated method: BaseStateTransition.SetState
void GlobalNamespace::BaseStateTransition::SetState(GlobalNamespace::SelectableStateController::ViewState viewState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::SetState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewState)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, viewState);
}
// Autogenerated method: BaseStateTransition.OnEnable
void GlobalNamespace::BaseStateTransition::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseStateTransition.OnDisable
void GlobalNamespace::BaseStateTransition::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseStateTransition.HandleSelectableStateControllerStateDidChange
void GlobalNamespace::BaseStateTransition::HandleSelectableStateControllerStateDidChange(GlobalNamespace::SelectableStateController::ViewState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::HandleSelectableStateControllerStateDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSelectableStateControllerStateDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state);
}
// Autogenerated method: BaseStateTransition.TransitionToNormalState
void GlobalNamespace::BaseStateTransition::TransitionToNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::TransitionToNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseStateTransition.TransitionToHighlightedState
void GlobalNamespace::BaseStateTransition::TransitionToHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::TransitionToHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseStateTransition.TransitionToPressedState
void GlobalNamespace::BaseStateTransition::TransitionToPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::TransitionToPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseStateTransition.TransitionToDisabledState
void GlobalNamespace::BaseStateTransition::TransitionToDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::TransitionToDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseStateTransition.TransitionToSelectedState
void GlobalNamespace::BaseStateTransition::TransitionToSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::TransitionToSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseStateTransition.TransitionToSelectedAndHighlightedState
void GlobalNamespace::BaseStateTransition::TransitionToSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::TransitionToSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseStateTransition.SetNormalState
void GlobalNamespace::BaseStateTransition::SetNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::SetNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseStateTransition.SetHighlightedState
void GlobalNamespace::BaseStateTransition::SetHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::SetHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseStateTransition.SetPressedState
void GlobalNamespace::BaseStateTransition::SetPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::SetPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseStateTransition.SetDisabledState
void GlobalNamespace::BaseStateTransition::SetDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::SetDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseStateTransition.SetSelectedState
void GlobalNamespace::BaseStateTransition::SetSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::SetSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseStateTransition.SetSelectedAndHighlightedState
void GlobalNamespace::BaseStateTransition::SetSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseStateTransition::SetSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BaseTransitionSO
#include "GlobalNamespace/BaseTransitionSO.hpp"
// Including type: TransitionTimingSO
#include "GlobalNamespace/TransitionTimingSO.hpp"
// Including type: Tweening.EaseType
#include "Tweening/EaseType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BaseTransitionSO.get_easeType
Tweening::EaseType GlobalNamespace::BaseTransitionSO::get_easeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseTransitionSO::get_easeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_easeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Tweening::EaseType, false>(this, ___internal__method);
}
// Autogenerated method: BaseTransitionSO.get_easeDuration
float GlobalNamespace::BaseTransitionSO::get_easeDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseTransitionSO::get_easeDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_easeDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorGraphicStateTransition
#include "GlobalNamespace/ColorGraphicStateTransition.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
// Including type: ColorTransitionSO
#include "GlobalNamespace/ColorTransitionSO.hpp"
// Including type: Tweening.ColorTween
#include "Tweening/ColorTween.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: BaseTransitionSO
#include "GlobalNamespace/BaseTransitionSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ColorGraphicStateTransition.StartTween
void GlobalNamespace::ColorGraphicStateTransition::StartTween(UnityEngine::Color endColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::StartTween");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTween", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endColor)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, endColor);
}
// Autogenerated method: ColorGraphicStateTransition.<StartTween>b__16_0
void GlobalNamespace::ColorGraphicStateTransition::$StartTween$b__16_0(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::<StartTween>b__16_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTween>b__16_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: ColorGraphicStateTransition.<StartTween>b__16_1
void GlobalNamespace::ColorGraphicStateTransition::$StartTween$b__16_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::<StartTween>b__16_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTween>b__16_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.get_transition
GlobalNamespace::BaseTransitionSO* GlobalNamespace::ColorGraphicStateTransition::get_transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::get_transition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BaseTransitionSO*, false>(this, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.TransitionToNormalState
void GlobalNamespace::ColorGraphicStateTransition::TransitionToNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::TransitionToNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.TransitionToHighlightedState
void GlobalNamespace::ColorGraphicStateTransition::TransitionToHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::TransitionToHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.TransitionToPressedState
void GlobalNamespace::ColorGraphicStateTransition::TransitionToPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::TransitionToPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.TransitionToDisabledState
void GlobalNamespace::ColorGraphicStateTransition::TransitionToDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::TransitionToDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.TransitionToSelectedState
void GlobalNamespace::ColorGraphicStateTransition::TransitionToSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::TransitionToSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.TransitionToSelectedAndHighlightedState
void GlobalNamespace::ColorGraphicStateTransition::TransitionToSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::TransitionToSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.SetNormalState
void GlobalNamespace::ColorGraphicStateTransition::SetNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::SetNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.SetHighlightedState
void GlobalNamespace::ColorGraphicStateTransition::SetHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::SetHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.SetPressedState
void GlobalNamespace::ColorGraphicStateTransition::SetPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::SetPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.SetDisabledState
void GlobalNamespace::ColorGraphicStateTransition::SetDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::SetDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.SetSelectedState
void GlobalNamespace::ColorGraphicStateTransition::SetSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::SetSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorGraphicStateTransition.SetSelectedAndHighlightedState
void GlobalNamespace::ColorGraphicStateTransition::SetSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorGraphicStateTransition::SetSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorTMPTextStateTransition
#include "GlobalNamespace/ColorTMPTextStateTransition.hpp"
// Including type: TMPro.TMP_Text
#include "TMPro/TMP_Text.hpp"
// Including type: ColorTransitionSO
#include "GlobalNamespace/ColorTransitionSO.hpp"
// Including type: Tweening.ColorTween
#include "Tweening/ColorTween.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: BaseTransitionSO
#include "GlobalNamespace/BaseTransitionSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ColorTMPTextStateTransition.StartTween
void GlobalNamespace::ColorTMPTextStateTransition::StartTween(UnityEngine::Color endColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::StartTween");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTween", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endColor)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, endColor);
}
// Autogenerated method: ColorTMPTextStateTransition.<StartTween>b__16_0
void GlobalNamespace::ColorTMPTextStateTransition::$StartTween$b__16_0(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::<StartTween>b__16_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTween>b__16_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: ColorTMPTextStateTransition.<StartTween>b__16_1
void GlobalNamespace::ColorTMPTextStateTransition::$StartTween$b__16_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::<StartTween>b__16_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTween>b__16_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.get_transition
GlobalNamespace::BaseTransitionSO* GlobalNamespace::ColorTMPTextStateTransition::get_transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::get_transition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BaseTransitionSO*, false>(this, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.TransitionToNormalState
void GlobalNamespace::ColorTMPTextStateTransition::TransitionToNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::TransitionToNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.TransitionToHighlightedState
void GlobalNamespace::ColorTMPTextStateTransition::TransitionToHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::TransitionToHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.TransitionToPressedState
void GlobalNamespace::ColorTMPTextStateTransition::TransitionToPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::TransitionToPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.TransitionToDisabledState
void GlobalNamespace::ColorTMPTextStateTransition::TransitionToDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::TransitionToDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.TransitionToSelectedState
void GlobalNamespace::ColorTMPTextStateTransition::TransitionToSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::TransitionToSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.TransitionToSelectedAndHighlightedState
void GlobalNamespace::ColorTMPTextStateTransition::TransitionToSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::TransitionToSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.SetNormalState
void GlobalNamespace::ColorTMPTextStateTransition::SetNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::SetNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.SetHighlightedState
void GlobalNamespace::ColorTMPTextStateTransition::SetHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::SetHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.SetPressedState
void GlobalNamespace::ColorTMPTextStateTransition::SetPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::SetPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.SetDisabledState
void GlobalNamespace::ColorTMPTextStateTransition::SetDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::SetDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.SetSelectedState
void GlobalNamespace::ColorTMPTextStateTransition::SetSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::SetSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorTMPTextStateTransition.SetSelectedAndHighlightedState
void GlobalNamespace::ColorTMPTextStateTransition::SetSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTMPTextStateTransition::SetSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorTransitionSO
#include "GlobalNamespace/ColorTransitionSO.hpp"
// Including type: ColorSO
#include "GlobalNamespace/ColorSO.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ColorTransitionSO.get_normalColor
UnityEngine::Color GlobalNamespace::ColorTransitionSO::get_normalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTransitionSO::get_normalColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: ColorTransitionSO.get_highlightedColor
UnityEngine::Color GlobalNamespace::ColorTransitionSO::get_highlightedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTransitionSO::get_highlightedColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_highlightedColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: ColorTransitionSO.get_pressedColor
UnityEngine::Color GlobalNamespace::ColorTransitionSO::get_pressedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTransitionSO::get_pressedColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pressedColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: ColorTransitionSO.get_disabledColor
UnityEngine::Color GlobalNamespace::ColorTransitionSO::get_disabledColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTransitionSO::get_disabledColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disabledColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: ColorTransitionSO.get_selectedColor
UnityEngine::Color GlobalNamespace::ColorTransitionSO::get_selectedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTransitionSO::get_selectedColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: ColorTransitionSO.get_selectedAndHighlightedColor
UnityEngine::Color GlobalNamespace::ColorTransitionSO::get_selectedAndHighlightedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorTransitionSO::get_selectedAndHighlightedColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedAndHighlightedColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnabledTransitionSO
#include "GlobalNamespace/EnabledTransitionSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EnabledTransitionSO.get_normalState
bool GlobalNamespace::EnabledTransitionSO::get_normalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledTransitionSO::get_normalState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: EnabledTransitionSO.get_highlightedState
bool GlobalNamespace::EnabledTransitionSO::get_highlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledTransitionSO::get_highlightedState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_highlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: EnabledTransitionSO.get_pressedState
bool GlobalNamespace::EnabledTransitionSO::get_pressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledTransitionSO::get_pressedState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: EnabledTransitionSO.get_disabledState
bool GlobalNamespace::EnabledTransitionSO::get_disabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledTransitionSO::get_disabledState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: EnabledTransitionSO.get_selectedState
bool GlobalNamespace::EnabledTransitionSO::get_selectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledTransitionSO::get_selectedState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: EnabledTransitionSO.get_selectedAndHighlightedState
bool GlobalNamespace::EnabledTransitionSO::get_selectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledTransitionSO::get_selectedAndHighlightedState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnabledViewStateTransition
#include "GlobalNamespace/EnabledViewStateTransition.hpp"
// Including type: EnabledTransitionSO
#include "GlobalNamespace/EnabledTransitionSO.hpp"
// Including type: BaseTransitionSO
#include "GlobalNamespace/BaseTransitionSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EnabledViewStateTransition.get_transition
GlobalNamespace::BaseTransitionSO* GlobalNamespace::EnabledViewStateTransition::get_transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::get_transition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BaseTransitionSO*, false>(this, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.TransitionToNormalState
void GlobalNamespace::EnabledViewStateTransition::TransitionToNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::TransitionToNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.TransitionToHighlightedState
void GlobalNamespace::EnabledViewStateTransition::TransitionToHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::TransitionToHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.TransitionToPressedState
void GlobalNamespace::EnabledViewStateTransition::TransitionToPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::TransitionToPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.TransitionToDisabledState
void GlobalNamespace::EnabledViewStateTransition::TransitionToDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::TransitionToDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.TransitionToSelectedState
void GlobalNamespace::EnabledViewStateTransition::TransitionToSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::TransitionToSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.TransitionToSelectedAndHighlightedState
void GlobalNamespace::EnabledViewStateTransition::TransitionToSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::TransitionToSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.SetNormalState
void GlobalNamespace::EnabledViewStateTransition::SetNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::SetNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.SetHighlightedState
void GlobalNamespace::EnabledViewStateTransition::SetHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::SetHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.SetPressedState
void GlobalNamespace::EnabledViewStateTransition::SetPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::SetPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.SetDisabledState
void GlobalNamespace::EnabledViewStateTransition::SetDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::SetDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.SetSelectedState
void GlobalNamespace::EnabledViewStateTransition::SetSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::SetSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnabledViewStateTransition.SetSelectedAndHighlightedState
void GlobalNamespace::EnabledViewStateTransition::SetSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnabledViewStateTransition::SetSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GradientImageViewStateTransition
#include "GlobalNamespace/GradientImageViewStateTransition.hpp"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
// Including type: GradientTransitionSO
#include "GlobalNamespace/GradientTransitionSO.hpp"
// Including type: Tweening.ColorTween
#include "Tweening/ColorTween.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: BaseTransitionSO
#include "GlobalNamespace/BaseTransitionSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GradientImageViewStateTransition.StartTweens
void GlobalNamespace::GradientImageViewStateTransition::StartTweens(UnityEngine::Color endColor1, UnityEngine::Color endColor2) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::StartTweens");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTweens", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endColor1), ::il2cpp_utils::ExtractType(endColor2)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, endColor1, endColor2);
}
// Autogenerated method: GradientImageViewStateTransition.StartTween
void GlobalNamespace::GradientImageViewStateTransition::StartTween(UnityEngine::Color startColor, UnityEngine::Color endColor, System::Action_1<UnityEngine::Color>* tweenAction, System::Action* onCompleteAction, Tweening::ColorTween*& colorTween) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::StartTween");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTween", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startColor), ::il2cpp_utils::ExtractType(endColor), ::il2cpp_utils::ExtractType(tweenAction), ::il2cpp_utils::ExtractType(onCompleteAction), ::il2cpp_utils::ExtractType(colorTween)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, startColor, endColor, tweenAction, onCompleteAction, colorTween);
}
// Autogenerated method: GradientImageViewStateTransition.SetColors
void GlobalNamespace::GradientImageViewStateTransition::SetColors(UnityEngine::Color startColor, UnityEngine::Color endColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::SetColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startColor), ::il2cpp_utils::ExtractType(endColor)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, startColor, endColor);
}
// Autogenerated method: GradientImageViewStateTransition.<StartTweens>g__Color1CompleteAction|17_0
void GlobalNamespace::GradientImageViewStateTransition::$StartTweens$g__Color1CompleteAction_17_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::<StartTweens>g__Color1CompleteAction|17_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTweens>g__Color1CompleteAction|17_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.<StartTweens>g__Color2CompleteAction|17_1
void GlobalNamespace::GradientImageViewStateTransition::$StartTweens$g__Color2CompleteAction_17_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::<StartTweens>g__Color2CompleteAction|17_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTweens>g__Color2CompleteAction|17_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.<StartTweens>b__17_2
void GlobalNamespace::GradientImageViewStateTransition::$StartTweens$b__17_2(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::<StartTweens>b__17_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTweens>b__17_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: GradientImageViewStateTransition.<StartTweens>b__17_3
void GlobalNamespace::GradientImageViewStateTransition::$StartTweens$b__17_3(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::<StartTweens>b__17_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTweens>b__17_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: GradientImageViewStateTransition.get_transition
GlobalNamespace::BaseTransitionSO* GlobalNamespace::GradientImageViewStateTransition::get_transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::get_transition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BaseTransitionSO*, false>(this, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.TransitionToNormalState
void GlobalNamespace::GradientImageViewStateTransition::TransitionToNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::TransitionToNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.TransitionToHighlightedState
void GlobalNamespace::GradientImageViewStateTransition::TransitionToHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::TransitionToHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.TransitionToPressedState
void GlobalNamespace::GradientImageViewStateTransition::TransitionToPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::TransitionToPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.TransitionToDisabledState
void GlobalNamespace::GradientImageViewStateTransition::TransitionToDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::TransitionToDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.TransitionToSelectedState
void GlobalNamespace::GradientImageViewStateTransition::TransitionToSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::TransitionToSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.TransitionToSelectedAndHighlightedState
void GlobalNamespace::GradientImageViewStateTransition::TransitionToSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::TransitionToSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.SetNormalState
void GlobalNamespace::GradientImageViewStateTransition::SetNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::SetNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.SetHighlightedState
void GlobalNamespace::GradientImageViewStateTransition::SetHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::SetHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.SetPressedState
void GlobalNamespace::GradientImageViewStateTransition::SetPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::SetPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.SetDisabledState
void GlobalNamespace::GradientImageViewStateTransition::SetDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::SetDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.SetSelectedState
void GlobalNamespace::GradientImageViewStateTransition::SetSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::SetSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GradientImageViewStateTransition.SetSelectedAndHighlightedState
void GlobalNamespace::GradientImageViewStateTransition::SetSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientImageViewStateTransition::SetSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GradientTransitionSO
#include "GlobalNamespace/GradientTransitionSO.hpp"
// Including type: ColorSO
#include "GlobalNamespace/ColorSO.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GradientTransitionSO.get_normalColor1
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_normalColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_normalColor1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalColor1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: GradientTransitionSO.get_normalColor2
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_normalColor2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_normalColor2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalColor2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: GradientTransitionSO.get_highlightColor1
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_highlightColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_highlightColor1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_highlightColor1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: GradientTransitionSO.get_highlightColor2
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_highlightColor2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_highlightColor2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_highlightColor2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: GradientTransitionSO.get_pressedColor1
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_pressedColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_pressedColor1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pressedColor1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: GradientTransitionSO.get_pressedColor2
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_pressedColor2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_pressedColor2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pressedColor2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: GradientTransitionSO.get_disabledColor1
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_disabledColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_disabledColor1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disabledColor1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: GradientTransitionSO.get_disabledColor2
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_disabledColor2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_disabledColor2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disabledColor2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: GradientTransitionSO.get_selectedColor1
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_selectedColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_selectedColor1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedColor1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: GradientTransitionSO.get_selectedColor2
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_selectedColor2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_selectedColor2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedColor2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: GradientTransitionSO.get_selectedAndHighlightedColor1
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_selectedAndHighlightedColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_selectedAndHighlightedColor1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedAndHighlightedColor1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: GradientTransitionSO.get_selectedAndHighlightedColor2
UnityEngine::Color GlobalNamespace::GradientTransitionSO::get_selectedAndHighlightedColor2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GradientTransitionSO::get_selectedAndHighlightedColor2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedAndHighlightedColor2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoTransitionButtonSelectableStateController
#include "GlobalNamespace/NoTransitionButtonSelectableStateController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoTransitionButtonSelectableStateController.OnEnable
void GlobalNamespace::NoTransitionButtonSelectableStateController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoTransitionButtonSelectableStateController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoTransitionButtonSelectableStateController.OnDisable
void GlobalNamespace::NoTransitionButtonSelectableStateController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoTransitionButtonSelectableStateController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoTransitionButtonSelectableStateController.HandleNoTransitionButtonSelectionStateDidChange
void GlobalNamespace::NoTransitionButtonSelectableStateController::HandleNoTransitionButtonSelectionStateDidChange(HMUI::NoTransitionsButton::SelectionState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoTransitionButtonSelectableStateController::HandleNoTransitionButtonSelectionStateDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoTransitionButtonSelectionStateDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PositionRectTransformViewStateTransition
#include "GlobalNamespace/PositionRectTransformViewStateTransition.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: Vector3TransitionSO
#include "GlobalNamespace/Vector3TransitionSO.hpp"
// Including type: Tweening.Vector3Tween
#include "Tweening/Vector3Tween.hpp"
// Including type: BaseTransitionSO
#include "GlobalNamespace/BaseTransitionSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PositionRectTransformViewStateTransition.StartTween
void GlobalNamespace::PositionRectTransformViewStateTransition::StartTween(UnityEngine::Vector3 endPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::StartTween");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTween", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPosition)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, endPosition);
}
// Autogenerated method: PositionRectTransformViewStateTransition.<StartTween>b__16_0
void GlobalNamespace::PositionRectTransformViewStateTransition::$StartTween$b__16_0(UnityEngine::Vector3 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::<StartTween>b__16_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTween>b__16_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated method: PositionRectTransformViewStateTransition.<StartTween>b__16_1
void GlobalNamespace::PositionRectTransformViewStateTransition::$StartTween$b__16_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::<StartTween>b__16_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTween>b__16_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.get_transition
GlobalNamespace::BaseTransitionSO* GlobalNamespace::PositionRectTransformViewStateTransition::get_transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::get_transition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BaseTransitionSO*, false>(this, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.TransitionToNormalState
void GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.TransitionToHighlightedState
void GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.TransitionToPressedState
void GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.TransitionToDisabledState
void GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.TransitionToSelectedState
void GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.TransitionToSelectedAndHighlightedState
void GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::TransitionToSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.SetNormalState
void GlobalNamespace::PositionRectTransformViewStateTransition::SetNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::SetNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.SetHighlightedState
void GlobalNamespace::PositionRectTransformViewStateTransition::SetHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::SetHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.SetPressedState
void GlobalNamespace::PositionRectTransformViewStateTransition::SetPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::SetPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.SetDisabledState
void GlobalNamespace::PositionRectTransformViewStateTransition::SetDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::SetDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.SetSelectedState
void GlobalNamespace::PositionRectTransformViewStateTransition::SetSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::SetSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PositionRectTransformViewStateTransition.SetSelectedAndHighlightedState
void GlobalNamespace::PositionRectTransformViewStateTransition::SetSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PositionRectTransformViewStateTransition::SetSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ScaleRectTransformViewStateTransition
#include "GlobalNamespace/ScaleRectTransformViewStateTransition.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: Vector3TransitionSO
#include "GlobalNamespace/Vector3TransitionSO.hpp"
// Including type: Tweening.Vector3Tween
#include "Tweening/Vector3Tween.hpp"
// Including type: BaseTransitionSO
#include "GlobalNamespace/BaseTransitionSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ScaleRectTransformViewStateTransition.StartTween
void GlobalNamespace::ScaleRectTransformViewStateTransition::StartTween(UnityEngine::Vector3 endScale) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::StartTween");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTween", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endScale)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, endScale);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.<StartTween>b__16_0
void GlobalNamespace::ScaleRectTransformViewStateTransition::$StartTween$b__16_0(UnityEngine::Vector3 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::<StartTween>b__16_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTween>b__16_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.<StartTween>b__16_1
void GlobalNamespace::ScaleRectTransformViewStateTransition::$StartTween$b__16_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::<StartTween>b__16_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartTween>b__16_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.get_transition
GlobalNamespace::BaseTransitionSO* GlobalNamespace::ScaleRectTransformViewStateTransition::get_transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::get_transition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BaseTransitionSO*, false>(this, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.TransitionToNormalState
void GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.TransitionToHighlightedState
void GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.TransitionToPressedState
void GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.TransitionToDisabledState
void GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.TransitionToSelectedState
void GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.TransitionToSelectedAndHighlightedState
void GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::TransitionToSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.SetNormalState
void GlobalNamespace::ScaleRectTransformViewStateTransition::SetNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::SetNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.SetHighlightedState
void GlobalNamespace::ScaleRectTransformViewStateTransition::SetHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::SetHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.SetPressedState
void GlobalNamespace::ScaleRectTransformViewStateTransition::SetPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::SetPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.SetDisabledState
void GlobalNamespace::ScaleRectTransformViewStateTransition::SetDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::SetDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.SetSelectedState
void GlobalNamespace::ScaleRectTransformViewStateTransition::SetSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::SetSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScaleRectTransformViewStateTransition.SetSelectedAndHighlightedState
void GlobalNamespace::ScaleRectTransformViewStateTransition::SetSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScaleRectTransformViewStateTransition::SetSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SelectableStateController
#include "GlobalNamespace/SelectableStateController.hpp"
// Including type: Tweening.TweeningManager
#include "Tweening/TweeningManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SelectableStateController.add_stateDidChangeEvent
void GlobalNamespace::SelectableStateController::add_stateDidChangeEvent(System::Action_1<GlobalNamespace::SelectableStateController::ViewState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::add_stateDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_stateDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SelectableStateController.remove_stateDidChangeEvent
void GlobalNamespace::SelectableStateController::remove_stateDidChangeEvent(System::Action_1<GlobalNamespace::SelectableStateController::ViewState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::remove_stateDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_stateDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SelectableStateController.get_tweeningManager
Tweening::TweeningManager* GlobalNamespace::SelectableStateController::get_tweeningManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::get_tweeningManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_tweeningManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Tweening::TweeningManager*, false>(this, ___internal__method);
}
// Autogenerated method: SelectableStateController.get_currentViewState
GlobalNamespace::SelectableStateController::ViewState GlobalNamespace::SelectableStateController::get_currentViewState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::get_currentViewState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentViewState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SelectableStateController::ViewState, false>(this, ___internal__method);
}
// Autogenerated method: SelectableStateController.set_currentViewState
void GlobalNamespace::SelectableStateController::set_currentViewState(GlobalNamespace::SelectableStateController::ViewState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::set_currentViewState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_currentViewState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SelectableStateController.SetState
void GlobalNamespace::SelectableStateController::SetState(GlobalNamespace::SelectableStateController::ViewState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::SetState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SelectableStateController/ViewState
#include "GlobalNamespace/SelectableStateController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SelectableStateController/ViewState Normal
GlobalNamespace::SelectableStateController::ViewState GlobalNamespace::SelectableStateController::ViewState::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SelectableStateController::ViewState>("", "SelectableStateController/ViewState", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public SelectableStateController/ViewState Normal
void GlobalNamespace::SelectableStateController::ViewState::_set_Normal(GlobalNamespace::SelectableStateController::ViewState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectableStateController/ViewState", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public SelectableStateController/ViewState Highlighted
GlobalNamespace::SelectableStateController::ViewState GlobalNamespace::SelectableStateController::ViewState::_get_Highlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_get_Highlighted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SelectableStateController::ViewState>("", "SelectableStateController/ViewState", "Highlighted"));
}
// Autogenerated static field setter
// Set static field: static public SelectableStateController/ViewState Highlighted
void GlobalNamespace::SelectableStateController::ViewState::_set_Highlighted(GlobalNamespace::SelectableStateController::ViewState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_set_Highlighted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectableStateController/ViewState", "Highlighted", value));
}
// Autogenerated static field getter
// Get static field: static public SelectableStateController/ViewState Pressed
GlobalNamespace::SelectableStateController::ViewState GlobalNamespace::SelectableStateController::ViewState::_get_Pressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_get_Pressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SelectableStateController::ViewState>("", "SelectableStateController/ViewState", "Pressed"));
}
// Autogenerated static field setter
// Set static field: static public SelectableStateController/ViewState Pressed
void GlobalNamespace::SelectableStateController::ViewState::_set_Pressed(GlobalNamespace::SelectableStateController::ViewState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_set_Pressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectableStateController/ViewState", "Pressed", value));
}
// Autogenerated static field getter
// Get static field: static public SelectableStateController/ViewState Disabled
GlobalNamespace::SelectableStateController::ViewState GlobalNamespace::SelectableStateController::ViewState::_get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_get_Disabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SelectableStateController::ViewState>("", "SelectableStateController/ViewState", "Disabled"));
}
// Autogenerated static field setter
// Set static field: static public SelectableStateController/ViewState Disabled
void GlobalNamespace::SelectableStateController::ViewState::_set_Disabled(GlobalNamespace::SelectableStateController::ViewState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_set_Disabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectableStateController/ViewState", "Disabled", value));
}
// Autogenerated static field getter
// Get static field: static public SelectableStateController/ViewState Selected
GlobalNamespace::SelectableStateController::ViewState GlobalNamespace::SelectableStateController::ViewState::_get_Selected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_get_Selected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SelectableStateController::ViewState>("", "SelectableStateController/ViewState", "Selected"));
}
// Autogenerated static field setter
// Set static field: static public SelectableStateController/ViewState Selected
void GlobalNamespace::SelectableStateController::ViewState::_set_Selected(GlobalNamespace::SelectableStateController::ViewState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_set_Selected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectableStateController/ViewState", "Selected", value));
}
// Autogenerated static field getter
// Get static field: static public SelectableStateController/ViewState SelectedAndHighlighted
GlobalNamespace::SelectableStateController::ViewState GlobalNamespace::SelectableStateController::ViewState::_get_SelectedAndHighlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_get_SelectedAndHighlighted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SelectableStateController::ViewState>("", "SelectableStateController/ViewState", "SelectedAndHighlighted"));
}
// Autogenerated static field setter
// Set static field: static public SelectableStateController/ViewState SelectedAndHighlighted
void GlobalNamespace::SelectableStateController::ViewState::_set_SelectedAndHighlighted(GlobalNamespace::SelectableStateController::ViewState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectableStateController::ViewState::_set_SelectedAndHighlighted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SelectableStateController/ViewState", "SelectedAndHighlighted", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SpriteSwapGraphicViewStateTransition
#include "GlobalNamespace/SpriteSwapGraphicViewStateTransition.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: SpriteSwapTransitionSO
#include "GlobalNamespace/SpriteSwapTransitionSO.hpp"
// Including type: BaseTransitionSO
#include "GlobalNamespace/BaseTransitionSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SpriteSwapGraphicViewStateTransition.get_transition
GlobalNamespace::BaseTransitionSO* GlobalNamespace::SpriteSwapGraphicViewStateTransition::get_transition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::get_transition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BaseTransitionSO*, false>(this, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.TransitionToNormalState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.TransitionToHighlightedState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.TransitionToPressedState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.TransitionToDisabledState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.TransitionToSelectedState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.TransitionToSelectedAndHighlightedState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::TransitionToSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransitionToSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.SetNormalState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetNormalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetNormalState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNormalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.SetHighlightedState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.SetPressedState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetPressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetPressedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.SetDisabledState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetDisabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetDisabledState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.SetSelectedState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetSelectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetSelectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpriteSwapGraphicViewStateTransition.SetSelectedAndHighlightedState
void GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetSelectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapGraphicViewStateTransition::SetSelectedAndHighlightedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSelectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SpriteSwapTransitionSO
#include "GlobalNamespace/SpriteSwapTransitionSO.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SpriteSwapTransitionSO.get_normalSprite
UnityEngine::Sprite* GlobalNamespace::SpriteSwapTransitionSO::get_normalSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapTransitionSO::get_normalSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: SpriteSwapTransitionSO.get_highlightedSprite
UnityEngine::Sprite* GlobalNamespace::SpriteSwapTransitionSO::get_highlightedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapTransitionSO::get_highlightedSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_highlightedSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: SpriteSwapTransitionSO.get_pressedSprite
UnityEngine::Sprite* GlobalNamespace::SpriteSwapTransitionSO::get_pressedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapTransitionSO::get_pressedSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pressedSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: SpriteSwapTransitionSO.get_disabledSprite
UnityEngine::Sprite* GlobalNamespace::SpriteSwapTransitionSO::get_disabledSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapTransitionSO::get_disabledSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disabledSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: SpriteSwapTransitionSO.get_selectedSprite
UnityEngine::Sprite* GlobalNamespace::SpriteSwapTransitionSO::get_selectedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapTransitionSO::get_selectedSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: SpriteSwapTransitionSO.get_selectedAndHighlightedSprite
UnityEngine::Sprite* GlobalNamespace::SpriteSwapTransitionSO::get_selectedAndHighlightedSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpriteSwapTransitionSO::get_selectedAndHighlightedSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedAndHighlightedSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TransitionTimingSO
#include "GlobalNamespace/TransitionTimingSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TransitionTimingSO.get_easeType
Tweening::EaseType GlobalNamespace::TransitionTimingSO::get_easeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TransitionTimingSO::get_easeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_easeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Tweening::EaseType, false>(this, ___internal__method);
}
// Autogenerated method: TransitionTimingSO.get_easeDuration
float GlobalNamespace::TransitionTimingSO::get_easeDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TransitionTimingSO::get_easeDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_easeDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Vector3TransitionSO
#include "GlobalNamespace/Vector3TransitionSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Vector3TransitionSO.get_normalState
UnityEngine::Vector3 GlobalNamespace::Vector3TransitionSO::get_normalState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3TransitionSO::get_normalState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Vector3TransitionSO.get_highlightedState
UnityEngine::Vector3 GlobalNamespace::Vector3TransitionSO::get_highlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3TransitionSO::get_highlightedState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_highlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Vector3TransitionSO.get_pressedState
UnityEngine::Vector3 GlobalNamespace::Vector3TransitionSO::get_pressedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3TransitionSO::get_pressedState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pressedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Vector3TransitionSO.get_disabledState
UnityEngine::Vector3 GlobalNamespace::Vector3TransitionSO::get_disabledState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3TransitionSO::get_disabledState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disabledState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Vector3TransitionSO.get_selectedState
UnityEngine::Vector3 GlobalNamespace::Vector3TransitionSO::get_selectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3TransitionSO::get_selectedState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Vector3TransitionSO.get_selectedAndHighlightedState
UnityEngine::Vector3 GlobalNamespace::Vector3TransitionSO::get_selectedAndHighlightedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Vector3TransitionSO::get_selectedAndHighlightedState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedAndHighlightedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UIKeyboard
#include "GlobalNamespace/UIKeyboard.hpp"
// Including type: UIKeyboard/<>c__DisplayClass21_0
#include "GlobalNamespace/UIKeyboard_--c__DisplayClass21_0.hpp"
// Including type: TextMeshProButton
#include "GlobalNamespace/TextMeshProButton.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UIKeyboard.add_textKeyWasPressedEvent
void GlobalNamespace::UIKeyboard::add_textKeyWasPressedEvent(System::Action_1<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::add_textKeyWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_textKeyWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.remove_textKeyWasPressedEvent
void GlobalNamespace::UIKeyboard::remove_textKeyWasPressedEvent(System::Action_1<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::remove_textKeyWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_textKeyWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.add_deleteButtonWasPressedEvent
void GlobalNamespace::UIKeyboard::add_deleteButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::add_deleteButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_deleteButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.remove_deleteButtonWasPressedEvent
void GlobalNamespace::UIKeyboard::remove_deleteButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::remove_deleteButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_deleteButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.add_okButtonWasPressedEvent
void GlobalNamespace::UIKeyboard::add_okButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::add_okButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_okButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.remove_okButtonWasPressedEvent
void GlobalNamespace::UIKeyboard::remove_okButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::remove_okButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_okButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.add_cancelButtonWasPressedEvent
void GlobalNamespace::UIKeyboard::add_cancelButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::add_cancelButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_cancelButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.remove_cancelButtonWasPressedEvent
void GlobalNamespace::UIKeyboard::remove_cancelButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::remove_cancelButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_cancelButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.set_enableOkButtonInteractivity
void GlobalNamespace::UIKeyboard::set_enableOkButtonInteractivity(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::set_enableOkButtonInteractivity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableOkButtonInteractivity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.set_hideCancelButton
void GlobalNamespace::UIKeyboard::set_hideCancelButton(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::set_hideCancelButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hideCancelButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UIKeyboard.Awake
void GlobalNamespace::UIKeyboard::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UIKeyboard.<Awake>b__21_0
void GlobalNamespace::UIKeyboard::$Awake$b__21_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::<Awake>b__21_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__21_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UIKeyboard.<Awake>b__21_1
void GlobalNamespace::UIKeyboard::$Awake$b__21_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::<Awake>b__21_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__21_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UIKeyboard.<Awake>b__21_2
void GlobalNamespace::UIKeyboard::$Awake$b__21_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::<Awake>b__21_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__21_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UIKeyboard.<Awake>b__21_3
void GlobalNamespace::UIKeyboard::$Awake$b__21_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::<Awake>b__21_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__21_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UIKeyboard/<>c__DisplayClass21_0
#include "GlobalNamespace/UIKeyboard_--c__DisplayClass21_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UIKeyboard/<>c__DisplayClass21_0.<Awake>b__4
void GlobalNamespace::UIKeyboard::$$c__DisplayClass21_0::$Awake$b__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboard::$$c__DisplayClass21_0::<Awake>b__4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UIKeyboardManager
#include "GlobalNamespace/UIKeyboardManager.hpp"
// Including type: HMUI.UIKeyboard
#include "HMUI/UIKeyboard.hpp"
// Including type: HMUI.ModalView
#include "HMUI/ModalView.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: VRUIControls.VRInputModule
#include "VRUIControls/VRInputModule.hpp"
// Including type: HMUI.InputFieldView
#include "HMUI/InputFieldView.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kKeyboardTopOffset
float GlobalNamespace::UIKeyboardManager::_get_kKeyboardTopOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::_get_kKeyboardTopOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "UIKeyboardManager", "kKeyboardTopOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kKeyboardTopOffset
void GlobalNamespace::UIKeyboardManager::_set_kKeyboardTopOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::_set_kKeyboardTopOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UIKeyboardManager", "kKeyboardTopOffset", value));
}
// Autogenerated method: UIKeyboardManager.get_keyboard
HMUI::UIKeyboard* GlobalNamespace::UIKeyboardManager::get_keyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::get_keyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_keyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<HMUI::UIKeyboard*, false>(this, ___internal__method);
}
// Autogenerated method: UIKeyboardManager.Start
void GlobalNamespace::UIKeyboardManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UIKeyboardManager.OnEnable
void GlobalNamespace::UIKeyboardManager::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UIKeyboardManager.OnDisable
void GlobalNamespace::UIKeyboardManager::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UIKeyboardManager.OnDestroy
void GlobalNamespace::UIKeyboardManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UIKeyboardManager.OpenKeyboardFor
void GlobalNamespace::UIKeyboardManager::OpenKeyboardFor(HMUI::InputFieldView* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::OpenKeyboardFor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenKeyboardFor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: UIKeyboardManager.CloseKeyboard
void GlobalNamespace::UIKeyboardManager::CloseKeyboard() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::CloseKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloseKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UIKeyboardManager.TransferKeyboardTo
void GlobalNamespace::UIKeyboardManager::TransferKeyboardTo(HMUI::InputFieldView* nextInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::TransferKeyboardTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransferKeyboardTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nextInput)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nextInput);
}
// Autogenerated method: UIKeyboardManager.ShouldCloseKeyboard
bool GlobalNamespace::UIKeyboardManager::ShouldCloseKeyboard(UnityEngine::GameObject* root) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::ShouldCloseKeyboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldCloseKeyboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, root);
}
// Autogenerated method: UIKeyboardManager.ProcessMousePress
void GlobalNamespace::UIKeyboardManager::ProcessMousePress(UnityEngine::GameObject* currentOverGo) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::ProcessMousePress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMousePress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentOverGo)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, currentOverGo);
}
// Autogenerated method: UIKeyboardManager.HandleKeyboardOkButton
void GlobalNamespace::UIKeyboardManager::HandleKeyboardOkButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UIKeyboardManager::HandleKeyboardOkButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleKeyboardOkButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRTextEntryController
#include "GlobalNamespace/VRTextEntryController.hpp"
// Including type: VRTextEntryController/<BlinkCursor>d__23
#include "GlobalNamespace/VRTextEntryController_-BlinkCursor-d__23.hpp"
// Including type: UIKeyboard
#include "GlobalNamespace/UIKeyboard.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VRTextEntryController.add_textDidChangeEvent
void GlobalNamespace::VRTextEntryController::add_textDidChangeEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::add_textDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_textDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRTextEntryController.remove_textDidChangeEvent
void GlobalNamespace::VRTextEntryController::remove_textDidChangeEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::remove_textDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_textDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRTextEntryController.add_okButtonWasPressedEvent
void GlobalNamespace::VRTextEntryController::add_okButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::add_okButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_okButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRTextEntryController.remove_okButtonWasPressedEvent
void GlobalNamespace::VRTextEntryController::remove_okButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::remove_okButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_okButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRTextEntryController.add_cancelButtonWasPressedEvent
void GlobalNamespace::VRTextEntryController::add_cancelButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::add_cancelButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_cancelButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRTextEntryController.remove_cancelButtonWasPressedEvent
void GlobalNamespace::VRTextEntryController::remove_cancelButtonWasPressedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::remove_cancelButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_cancelButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRTextEntryController.set_hideCancelButton
void GlobalNamespace::VRTextEntryController::set_hideCancelButton(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::set_hideCancelButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hideCancelButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRTextEntryController.get_text
::Il2CppString* GlobalNamespace::VRTextEntryController::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: VRTextEntryController.set_text
void GlobalNamespace::VRTextEntryController::set_text(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRTextEntryController.Awake
void GlobalNamespace::VRTextEntryController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTextEntryController.OnEnable
void GlobalNamespace::VRTextEntryController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTextEntryController.OnDisable
void GlobalNamespace::VRTextEntryController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTextEntryController.BlinkCursor
System::Collections::IEnumerator* GlobalNamespace::VRTextEntryController::BlinkCursor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::BlinkCursor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlinkCursor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: VRTextEntryController.HandleUIKeyboardTextKeyWasPressed
void GlobalNamespace::VRTextEntryController::HandleUIKeyboardTextKeyWasPressed(::Il2CppChar key) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::HandleUIKeyboardTextKeyWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUIKeyboardTextKeyWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: VRTextEntryController.HandleUIKeyboardDeleteButtonWasPressed
void GlobalNamespace::VRTextEntryController::HandleUIKeyboardDeleteButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::HandleUIKeyboardDeleteButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUIKeyboardDeleteButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTextEntryController.<Awake>b__20_0
void GlobalNamespace::VRTextEntryController::$Awake$b__20_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::<Awake>b__20_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__20_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTextEntryController.<Awake>b__20_1
void GlobalNamespace::VRTextEntryController::$Awake$b__20_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::<Awake>b__20_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__20_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRTextEntryController/<BlinkCursor>d__23
#include "GlobalNamespace/VRTextEntryController_-BlinkCursor-d__23.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VRTextEntryController/<BlinkCursor>d__23.System.IDisposable.Dispose
void GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTextEntryController/<BlinkCursor>d__23.MoveNext
bool GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VRTextEntryController/<BlinkCursor>d__23.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: VRTextEntryController/<BlinkCursor>d__23.System.Collections.IEnumerator.Reset
void GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTextEntryController/<BlinkCursor>d__23.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTextEntryController::$BlinkCursor$d__23::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CreditsContent
#include "GlobalNamespace/CreditsContent.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CreditsContent.get_normalTextPrefab
UnityEngine::GameObject* GlobalNamespace::CreditsContent::get_normalTextPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::get_normalTextPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalTextPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: CreditsContent.get_normalLocalizedTextPrefab
UnityEngine::GameObject* GlobalNamespace::CreditsContent::get_normalLocalizedTextPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::get_normalLocalizedTextPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_normalLocalizedTextPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: CreditsContent.get_titleTextPrefab
UnityEngine::GameObject* GlobalNamespace::CreditsContent::get_titleTextPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::get_titleTextPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_titleTextPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: CreditsContent.get_titleLocalizedTextPrefab
UnityEngine::GameObject* GlobalNamespace::CreditsContent::get_titleLocalizedTextPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::get_titleLocalizedTextPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_titleLocalizedTextPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: CreditsContent.get_headerTextPrefab
UnityEngine::GameObject* GlobalNamespace::CreditsContent::get_headerTextPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::get_headerTextPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headerTextPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: CreditsContent.get_headerLocalizedTextPrefab
UnityEngine::GameObject* GlobalNamespace::CreditsContent::get_headerLocalizedTextPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::get_headerLocalizedTextPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headerLocalizedTextPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: CreditsContent.get_columnCount
int GlobalNamespace::CreditsContent::get_columnCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::get_columnCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_columnCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CreditsContent.get_spaceHeight
float GlobalNamespace::CreditsContent::get_spaceHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::get_spaceHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spaceHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CreditsContent.get_titleHeight
float GlobalNamespace::CreditsContent::get_titleHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::get_titleHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_titleHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CreditsContent.get_contentRoot
UnityEngine::Transform* GlobalNamespace::CreditsContent::get_contentRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::get_contentRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_contentRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: CreditsContent.get_rootRectTransform
UnityEngine::RectTransform* GlobalNamespace::CreditsContent::get_rootRectTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::get_rootRectTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rootRectTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::RectTransform*, false>(this, ___internal__method);
}
// Autogenerated method: CreditsContent.get_creditsContentTextAsset
UnityEngine::TextAsset* GlobalNamespace::CreditsContent::get_creditsContentTextAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsContent::get_creditsContentTextAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_creditsContentTextAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextAsset*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CreditsController
#include "GlobalNamespace/CreditsController.hpp"
// Including type: CreditsController/<ScrollCoroutine>d__13
#include "GlobalNamespace/CreditsController_-ScrollCoroutine-d__13.hpp"
// Including type: CreditsScenesTransitionSetupDataSO
#include "GlobalNamespace/CreditsScenesTransitionSetupDataSO.hpp"
// Including type: AudioPlayerBase
#include "GlobalNamespace/AudioPlayerBase.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: IVRPlatformHelper
#include "GlobalNamespace/IVRPlatformHelper.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CreditsController.Start
void GlobalNamespace::CreditsController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CreditsController.OnDestroy
void GlobalNamespace::CreditsController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CreditsController.Finish
void GlobalNamespace::CreditsController::Finish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::Finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CreditsController.ScrollCoroutine
System::Collections::IEnumerator* GlobalNamespace::CreditsController::ScrollCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::ScrollCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScrollCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: CreditsController.HandleInputFocusCaptured
void GlobalNamespace::CreditsController::HandleInputFocusCaptured() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::HandleInputFocusCaptured");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInputFocusCaptured", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CreditsController.HandleInputFocusReleased
void GlobalNamespace::CreditsController::HandleInputFocusReleased() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::HandleInputFocusReleased");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInputFocusReleased", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CreditsController/<ScrollCoroutine>d__13
#include "GlobalNamespace/CreditsController_-ScrollCoroutine-d__13.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CreditsController/<ScrollCoroutine>d__13.System.IDisposable.Dispose
void GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CreditsController/<ScrollCoroutine>d__13.MoveNext
bool GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CreditsController/<ScrollCoroutine>d__13.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: CreditsController/<ScrollCoroutine>d__13.System.Collections.IEnumerator.Reset
void GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CreditsController/<ScrollCoroutine>d__13.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsController::$ScrollCoroutine$d__13::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CreditsData
#include "GlobalNamespace/CreditsData.hpp"
// Including type: CreditsData/TextStyle
#include "GlobalNamespace/CreditsData_TextStyle.hpp"
// Including type: CreditsData/Text
#include "GlobalNamespace/CreditsData_Text.hpp"
// Including type: CreditsData/RootCreditsItem
#include "GlobalNamespace/CreditsData_RootCreditsItem.hpp"
// Including type: CreditsData/ChildCreditsItem
#include "GlobalNamespace/CreditsData_ChildCreditsItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CreditsData.Deserialize
GlobalNamespace::CreditsData* GlobalNamespace::CreditsData::Deserialize(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::Deserialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CreditsData", "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::CreditsData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CreditsData/TextStyle
#include "GlobalNamespace/CreditsData_TextStyle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public CreditsData/TextStyle Normal
GlobalNamespace::CreditsData::TextStyle GlobalNamespace::CreditsData::TextStyle::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::TextStyle::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::CreditsData::TextStyle>("", "CreditsData/TextStyle", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public CreditsData/TextStyle Normal
void GlobalNamespace::CreditsData::TextStyle::_set_Normal(GlobalNamespace::CreditsData::TextStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::TextStyle::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CreditsData/TextStyle", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public CreditsData/TextStyle Title
GlobalNamespace::CreditsData::TextStyle GlobalNamespace::CreditsData::TextStyle::_get_Title() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::TextStyle::_get_Title");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::CreditsData::TextStyle>("", "CreditsData/TextStyle", "Title"));
}
// Autogenerated static field setter
// Set static field: static public CreditsData/TextStyle Title
void GlobalNamespace::CreditsData::TextStyle::_set_Title(GlobalNamespace::CreditsData::TextStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::TextStyle::_set_Title");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CreditsData/TextStyle", "Title", value));
}
// Autogenerated static field getter
// Get static field: static public CreditsData/TextStyle Header
GlobalNamespace::CreditsData::TextStyle GlobalNamespace::CreditsData::TextStyle::_get_Header() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::TextStyle::_get_Header");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::CreditsData::TextStyle>("", "CreditsData/TextStyle", "Header"));
}
// Autogenerated static field setter
// Set static field: static public CreditsData/TextStyle Header
void GlobalNamespace::CreditsData::TextStyle::_set_Header(GlobalNamespace::CreditsData::TextStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::TextStyle::_set_Header");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CreditsData/TextStyle", "Header", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CreditsData/Text
#include "GlobalNamespace/CreditsData_Text.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CreditsData/Text.IsEmpty
bool GlobalNamespace::CreditsData::Text::IsEmpty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::Text::IsEmpty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsEmpty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CreditsData/Text.ToString
::Il2CppString* GlobalNamespace::CreditsData::Text::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::Text::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CreditsData/RootCreditsItem
#include "GlobalNamespace/CreditsData_RootCreditsItem.hpp"
// Including type: CreditsData/Text
#include "GlobalNamespace/CreditsData_Text.hpp"
// Including type: CreditsData/ChildCreditsItem
#include "GlobalNamespace/CreditsData_ChildCreditsItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CreditsData/RootCreditsItem.HasTitle
bool GlobalNamespace::CreditsData::RootCreditsItem::HasTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::RootCreditsItem::HasTitle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CreditsData/RootCreditsItem.HasText
bool GlobalNamespace::CreditsData::RootCreditsItem::HasText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::RootCreditsItem::HasText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CreditsData/RootCreditsItem.HasRowItems
bool GlobalNamespace::CreditsData::RootCreditsItem::HasRowItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::RootCreditsItem::HasRowItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasRowItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CreditsData/ChildCreditsItem
#include "GlobalNamespace/CreditsData_ChildCreditsItem.hpp"
// Including type: CreditsData/Text
#include "GlobalNamespace/CreditsData_Text.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CreditsData/ChildCreditsItem.HasTitle
bool GlobalNamespace::CreditsData::ChildCreditsItem::HasTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::ChildCreditsItem::HasTitle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CreditsData/ChildCreditsItem.HasText
bool GlobalNamespace::CreditsData::ChildCreditsItem::HasText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsData::ChildCreditsItem::HasText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MenuShockwave
#include "GlobalNamespace/MenuShockwave.hpp"
// Including type: VRUIControls.VRPointer
#include "VRUIControls/VRPointer.hpp"
// Including type: Signal
#include "GlobalNamespace/Signal.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MenuShockwave.Awake
void GlobalNamespace::MenuShockwave::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuShockwave::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuShockwave.OnEnable
void GlobalNamespace::MenuShockwave::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuShockwave::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuShockwave.OnDisable
void GlobalNamespace::MenuShockwave::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuShockwave::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuShockwave.HandleButtonClickEvent
void GlobalNamespace::MenuShockwave::HandleButtonClickEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuShockwave::HandleButtonClickEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleButtonClickEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuShockwave.SpawnShockwave
void GlobalNamespace::MenuShockwave::SpawnShockwave(UnityEngine::Vector3 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuShockwave::SpawnShockwave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnShockwave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: EnvironmentOverrideSettingsPanelController
#include "GlobalNamespace/EnvironmentOverrideSettingsPanelController.hpp"
// Including type: EnvironmentOverrideSettingsPanelController/Elements
#include "GlobalNamespace/EnvironmentOverrideSettingsPanelController_Elements.hpp"
// Including type: EnvironmentOverrideSettingsPanelController/<>c
#include "GlobalNamespace/EnvironmentOverrideSettingsPanelController_--c.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: HMUI.PanelAnimationSO
#include "HMUI/PanelAnimationSO.hpp"
// Including type: EnvironmentsListSO
#include "GlobalNamespace/EnvironmentsListSO.hpp"
// Including type: OverrideEnvironmentSettings
#include "GlobalNamespace/OverrideEnvironmentSettings.hpp"
// Including type: HMUI.DropdownWithTableView
#include "HMUI/DropdownWithTableView.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EnvironmentOverrideSettingsPanelController.get_overrideEnvironmentSettings
GlobalNamespace::OverrideEnvironmentSettings* GlobalNamespace::EnvironmentOverrideSettingsPanelController::get_overrideEnvironmentSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::get_overrideEnvironmentSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideEnvironmentSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OverrideEnvironmentSettings*, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentOverrideSettingsPanelController.SetData
void GlobalNamespace::EnvironmentOverrideSettingsPanelController::SetData(GlobalNamespace::OverrideEnvironmentSettings* overrideEnvironmentSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(overrideEnvironmentSettings)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, overrideEnvironmentSettings);
}
// Autogenerated method: EnvironmentOverrideSettingsPanelController.OnDestroy
void GlobalNamespace::EnvironmentOverrideSettingsPanelController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentOverrideSettingsPanelController.Refresh
void GlobalNamespace::EnvironmentOverrideSettingsPanelController::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::Refresh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentOverrideSettingsPanelController.HandleDropDownDidSelectCellWithIdx
void GlobalNamespace::EnvironmentOverrideSettingsPanelController::HandleDropDownDidSelectCellWithIdx(HMUI::DropdownWithTableView* dropDownWithTableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::HandleDropDownDidSelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDropDownDidSelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dropDownWithTableView), ::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, dropDownWithTableView, idx);
}
// Autogenerated method: EnvironmentOverrideSettingsPanelController.HandleOverrideEnvironmentsToggleValueChanged
void GlobalNamespace::EnvironmentOverrideSettingsPanelController::HandleOverrideEnvironmentsToggleValueChanged(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::HandleOverrideEnvironmentsToggleValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleOverrideEnvironmentsToggleValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: EnvironmentOverrideSettingsPanelController.<HandleOverrideEnvironmentsToggleValueChanged>b__15_0
void GlobalNamespace::EnvironmentOverrideSettingsPanelController::$HandleOverrideEnvironmentsToggleValueChanged$b__15_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::<HandleOverrideEnvironmentsToggleValueChanged>b__15_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleOverrideEnvironmentsToggleValueChanged>b__15_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentOverrideSettingsPanelController/Elements
#include "GlobalNamespace/EnvironmentOverrideSettingsPanelController_Elements.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: HMUI.SimpleTextDropdown
#include "HMUI/SimpleTextDropdown.hpp"
// Including type: EnvironmentTypeSO
#include "GlobalNamespace/EnvironmentTypeSO.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EnvironmentOverrideSettingsPanelController/Elements.get_environmentInfos
System::Collections::Generic::List_1<GlobalNamespace::EnvironmentInfoSO*>* GlobalNamespace::EnvironmentOverrideSettingsPanelController::Elements::get_environmentInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::Elements::get_environmentInfos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentInfos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<GlobalNamespace::EnvironmentInfoSO*>*, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentOverrideSettingsPanelController/Elements.set_environmentInfos
void GlobalNamespace::EnvironmentOverrideSettingsPanelController::Elements::set_environmentInfos(System::Collections::Generic::List_1<GlobalNamespace::EnvironmentInfoSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::Elements::set_environmentInfos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_environmentInfos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: EnvironmentOverrideSettingsPanelController/<>c
#include "GlobalNamespace/EnvironmentOverrideSettingsPanelController_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly EnvironmentOverrideSettingsPanelController/<>c <>9
GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c* GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c*>("", "EnvironmentOverrideSettingsPanelController/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly EnvironmentOverrideSettingsPanelController/<>c <>9
void GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::_set_$$9(GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "EnvironmentOverrideSettingsPanelController/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<EnvironmentInfoSO,System.String> <>9__11_0
System::Func_2<GlobalNamespace::EnvironmentInfoSO*, ::Il2CppString*>* GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::_get_$$9__11_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::_get_$$9__11_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<GlobalNamespace::EnvironmentInfoSO*, ::Il2CppString*>*>("", "EnvironmentOverrideSettingsPanelController/<>c", "<>9__11_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<EnvironmentInfoSO,System.String> <>9__11_0
void GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::_set_$$9__11_0(System::Func_2<GlobalNamespace::EnvironmentInfoSO*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::_set_$$9__11_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "EnvironmentOverrideSettingsPanelController/<>c", "<>9__11_0", value)));
}
// Autogenerated method: EnvironmentOverrideSettingsPanelController/<>c..cctor
void GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "EnvironmentOverrideSettingsPanelController/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: EnvironmentOverrideSettingsPanelController/<>c.<SetData>b__11_0
::Il2CppString* GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::$SetData$b__11_0(GlobalNamespace::EnvironmentInfoSO* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentOverrideSettingsPanelController::$$c::<SetData>b__11_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetData>b__11_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: FileBrowserTableCell
#include "GlobalNamespace/FileBrowserTableCell.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FileBrowserTableCell.set_text
void GlobalNamespace::FileBrowserTableCell::set_text(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableCell::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FileBrowserTableCell.get_text
::Il2CppString* GlobalNamespace::FileBrowserTableCell::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableCell::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: FileBrowserTableCell.SelectionDidChange
void GlobalNamespace::FileBrowserTableCell::SelectionDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableCell::SelectionDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, transitionType);
}
// Autogenerated method: FileBrowserTableCell.HighlightDidChange
void GlobalNamespace::FileBrowserTableCell::HighlightDidChange(HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableCell::HighlightDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighlightDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, transitionType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: FileBrowserTableView
#include "GlobalNamespace/FileBrowserTableView.hpp"
// Including type: FileBrowserTableCell
#include "GlobalNamespace/FileBrowserTableCell.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: FileBrowserItem
#include "GlobalNamespace/FileBrowserItem.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCellIdentifier
::Il2CppString* GlobalNamespace::FileBrowserTableView::_get_kCellIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableView::_get_kCellIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "FileBrowserTableView", "kCellIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCellIdentifier
void GlobalNamespace::FileBrowserTableView::_set_kCellIdentifier(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableView::_set_kCellIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FileBrowserTableView", "kCellIdentifier", value));
}
// Autogenerated method: FileBrowserTableView.add_didSelectRow
void GlobalNamespace::FileBrowserTableView::add_didSelectRow(System::Action_2<GlobalNamespace::FileBrowserTableView*, GlobalNamespace::FileBrowserItem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableView::add_didSelectRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FileBrowserTableView.remove_didSelectRow
void GlobalNamespace::FileBrowserTableView::remove_didSelectRow(System::Action_2<GlobalNamespace::FileBrowserTableView*, GlobalNamespace::FileBrowserItem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableView::remove_didSelectRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FileBrowserTableView.Init
void GlobalNamespace::FileBrowserTableView::Init(::Array<GlobalNamespace::FileBrowserItem*>* items) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableView::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(items)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, items);
}
// Autogenerated method: FileBrowserTableView.SetItems
void GlobalNamespace::FileBrowserTableView::SetItems(::Array<GlobalNamespace::FileBrowserItem*>* items) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableView::SetItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(items)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, items);
}
// Autogenerated method: FileBrowserTableView.SelectAndScrollRowToItemWithPath
bool GlobalNamespace::FileBrowserTableView::SelectAndScrollRowToItemWithPath(::Il2CppString* folderPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableView::SelectAndScrollRowToItemWithPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectAndScrollRowToItemWithPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(folderPath)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, folderPath);
}
// Autogenerated method: FileBrowserTableView.CellSize
float GlobalNamespace::FileBrowserTableView::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableView::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: FileBrowserTableView.NumberOfCells
int GlobalNamespace::FileBrowserTableView::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableView::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: FileBrowserTableView.CellForIdx
HMUI::TableCell* GlobalNamespace::FileBrowserTableView::CellForIdx(HMUI::TableView* tableView, int row) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableView::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(row)})));
  return ::il2cpp_utils::RunMethodThrow<HMUI::TableCell*, false>(this, ___internal__method, tableView, row);
}
// Autogenerated method: FileBrowserTableView.HandleDidSelectRowEvent
void GlobalNamespace::FileBrowserTableView::HandleDidSelectRowEvent(HMUI::TableView* tableView, int row) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableView::HandleDidSelectRowEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDidSelectRowEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(row)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tableView, row);
}
// Autogenerated method: FileBrowserTableView.SelectAndScrollRow
void GlobalNamespace::FileBrowserTableView::SelectAndScrollRow(int row) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableView::SelectAndScrollRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectAndScrollRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, row);
}
// Autogenerated method: FileBrowserTableView.ClearSelection
void GlobalNamespace::FileBrowserTableView::ClearSelection(bool animated, bool scrollToRow0) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FileBrowserTableView::ClearSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animated), ::il2cpp_utils::ExtractType(scrollToRow0)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animated, scrollToRow0);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ArcadeFlowCoordinator
#include "GlobalNamespace/ArcadeFlowCoordinator.hpp"
// Including type: ArcadeFlowCoordinator/<>c__DisplayClass22_0
#include "GlobalNamespace/ArcadeFlowCoordinator_--c__DisplayClass22_0.hpp"
// Including type: ArcadeFlowCoordinator/<>c__DisplayClass26_0
#include "GlobalNamespace/ArcadeFlowCoordinator_--c__DisplayClass26_0.hpp"
// Including type: LocalLeaderboardsModel
#include "GlobalNamespace/LocalLeaderboardsModel.hpp"
// Including type: MenuLightsPresetSO
#include "GlobalNamespace/MenuLightsPresetSO.hpp"
// Including type: TabBarViewController
#include "GlobalNamespace/TabBarViewController.hpp"
// Including type: LeaderboardViewController
#include "GlobalNamespace/LeaderboardViewController.hpp"
// Including type: MenuLightsManager
#include "GlobalNamespace/MenuLightsManager.hpp"
// Including type: ResultsViewController
#include "GlobalNamespace/ResultsViewController.hpp"
// Including type: LocalLeaderboardViewController
#include "GlobalNamespace/LocalLeaderboardViewController.hpp"
// Including type: EnterPlayerGuestNameViewController
#include "GlobalNamespace/EnterPlayerGuestNameViewController.hpp"
// Including type: MenuTransitionsHelper
#include "GlobalNamespace/MenuTransitionsHelper.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ArcadeFlowCoordinator.WillScoreGoToLeaderboard
bool GlobalNamespace::ArcadeFlowCoordinator::WillScoreGoToLeaderboard(GlobalNamespace::LevelCompletionResults* levelCompletionResults, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, bool practice) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::WillScoreGoToLeaderboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WillScoreGoToLeaderboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults), ::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(practice)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, levelCompletionResults, difficultyBeatmap, practice);
}
// Autogenerated method: ArcadeFlowCoordinator.ProcessScore
bool GlobalNamespace::ArcadeFlowCoordinator::ProcessScore(GlobalNamespace::LevelCompletionResults* levelCompletionResults, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, bool practice, ::Il2CppString* playerName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::ProcessScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults), ::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(practice), ::il2cpp_utils::ExtractType(playerName)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, levelCompletionResults, difficultyBeatmap, practice, playerName);
}
// Autogenerated method: ArcadeFlowCoordinator.HandleResultsViewControllerContinueButtonPressed
void GlobalNamespace::ArcadeFlowCoordinator::HandleResultsViewControllerContinueButtonPressed(GlobalNamespace::ResultsViewController* resultsViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::HandleResultsViewControllerContinueButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleResultsViewControllerContinueButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resultsViewController)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, resultsViewController);
}
// Autogenerated method: ArcadeFlowCoordinator.HandleResultsViewControllerRestartButtonPressed
void GlobalNamespace::ArcadeFlowCoordinator::HandleResultsViewControllerRestartButtonPressed(GlobalNamespace::ResultsViewController* resultsViewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::HandleResultsViewControllerRestartButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleResultsViewControllerRestartButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resultsViewController)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, resultsViewController);
}
// Autogenerated method: ArcadeFlowCoordinator.HandleHowToPlayViewControllerDidFinish
void GlobalNamespace::ArcadeFlowCoordinator::HandleHowToPlayViewControllerDidFinish(GlobalNamespace::HowToPlayViewController::HowToPlayOptions howToPlayOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::HandleHowToPlayViewControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHowToPlayViewControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(howToPlayOptions)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, howToPlayOptions);
}
// Autogenerated method: ArcadeFlowCoordinator.HandleHowToPlayTabSelected
void GlobalNamespace::ArcadeFlowCoordinator::HandleHowToPlayTabSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::HandleHowToPlayTabSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHowToPlayTabSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ArcadeFlowCoordinator.<SinglePlayerLevelSelectionFlowCoordinatorDidActivate>b__20_0
void GlobalNamespace::ArcadeFlowCoordinator::$SinglePlayerLevelSelectionFlowCoordinatorDidActivate$b__20_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::<SinglePlayerLevelSelectionFlowCoordinatorDidActivate>b__20_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SinglePlayerLevelSelectionFlowCoordinatorDidActivate>b__20_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ArcadeFlowCoordinator.<HandleHowToPlayTabSelected>b__28_0
void GlobalNamespace::ArcadeFlowCoordinator::$HandleHowToPlayTabSelected$b__28_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::<HandleHowToPlayTabSelected>b__28_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleHowToPlayTabSelected>b__28_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ArcadeFlowCoordinator.get_gameMode
::Il2CppString* GlobalNamespace::ArcadeFlowCoordinator::get_gameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::get_gameMode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: ArcadeFlowCoordinator.get_leaderboardViewController
GlobalNamespace::LeaderboardViewController* GlobalNamespace::ArcadeFlowCoordinator::get_leaderboardViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::get_leaderboardViewController");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leaderboardViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::LeaderboardViewController*, false>(this, ___internal__method);
}
// Autogenerated method: ArcadeFlowCoordinator.get_initialTopScreenViewController
HMUI::ViewController* GlobalNamespace::ArcadeFlowCoordinator::get_initialTopScreenViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::get_initialTopScreenViewController");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_initialTopScreenViewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<HMUI::ViewController*, false>(this, ___internal__method);
}
// Autogenerated method: ArcadeFlowCoordinator.get_showPlayerStatsInDetailView
bool GlobalNamespace::ArcadeFlowCoordinator::get_showPlayerStatsInDetailView() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::get_showPlayerStatsInDetailView");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_showPlayerStatsInDetailView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ArcadeFlowCoordinator.get_hidePacksIfOneOrNone
bool GlobalNamespace::ArcadeFlowCoordinator::get_hidePacksIfOneOrNone() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::get_hidePacksIfOneOrNone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hidePacksIfOneOrNone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ArcadeFlowCoordinator.SinglePlayerLevelSelectionFlowCoordinatorDidActivate
void GlobalNamespace::ArcadeFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidActivate(bool firstActivation, bool addedToHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SinglePlayerLevelSelectionFlowCoordinatorDidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy);
}
// Autogenerated method: ArcadeFlowCoordinator.SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate
void GlobalNamespace::ArcadeFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate(bool removedFromHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SinglePlayerLevelSelectionFlowCoordinatorDidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy);
}
// Autogenerated method: ArcadeFlowCoordinator.ProcessLevelCompletionResultsAfterLevelDidFinish
void GlobalNamespace::ArcadeFlowCoordinator::ProcessLevelCompletionResultsAfterLevelDidFinish(GlobalNamespace::LevelCompletionResults* levelCompletionResults, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::GameplayModifiers* gameplayModifiers, bool practice) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ArcadeFlowCoordinator::ProcessLevelCompletionResultsAfterLevelDidFinish");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessLevelCompletionResultsAfterLevelDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults), ::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(practice)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelCompletionResults, difficultyBeatmap, gameplayModifiers, practice);
}
