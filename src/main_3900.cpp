// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BloomFogParamsBehaviour
#include "GlobalNamespace/BloomFogParamsBehaviour.hpp"
// Including type: BloomFogEnvironmentParams
#include "GlobalNamespace/BloomFogEnvironmentParams.hpp"
// Including type: BloomFogSO
#include "GlobalNamespace/BloomFogSO.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BloomFogParamsBehaviour.ProcessFrame
void GlobalNamespace::BloomFogParamsBehaviour::ProcessFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsBehaviour::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated method: BloomFogParamsBehaviour.OnPlayableDestroy
void GlobalNamespace::BloomFogParamsBehaviour::OnPlayableDestroy(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomFogParamsBehaviour::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Writing MetadataGetter for method: BloomFogParamsBehaviour::ProcessFrame
// Il2CppName: ProcessFrame
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BloomFogParamsBehaviour::*)(UnityEngine::Playables::Playable, UnityEngine::Playables::FrameData, ::Il2CppObject*)>(&BloomFogParamsBehaviour::ProcessFrame)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BloomFogParamsBehaviour*), "ProcessFrame", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Playables::Playable>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Playables::FrameData>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: BloomFogParamsBehaviour::OnPlayableDestroy
// Il2CppName: OnPlayableDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BloomFogParamsBehaviour::*)(UnityEngine::Playables::Playable)>(&BloomFogParamsBehaviour::OnPlayableDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BloomFogParamsBehaviour*), "OnPlayableDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Playables::Playable>()});
  }
};
// Writing MetadataGetter for method: BloomFogParamsBehaviour::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BloomFogParamsBehaviour::*)()>(&BloomFogParamsBehaviour::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BloomFogParamsBehaviour*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BloomFogParamsBehaviour::*)()>(&BloomFogParamsBehaviour::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BloomFogParamsBehaviour*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomControlPlayableAsset
#include "GlobalNamespace/CustomControlPlayableAsset.hpp"
// Including type: AvatarColorBehaviour
#include "GlobalNamespace/AvatarColorBehaviour.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CustomControlPlayableAsset.get_clipCaps
UnityEngine::Timeline::ClipCaps GlobalNamespace::CustomControlPlayableAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomControlPlayableAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CustomControlPlayableAsset::get_clipCaps
// Il2CppName: get_clipCaps
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Timeline::ClipCaps (CustomControlPlayableAsset::*)()>(&CustomControlPlayableAsset::get_clipCaps)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomControlPlayableAsset*), "get_clipCaps", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomControlPlayableAsset::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomControlPlayableAsset::*)()>(&CustomControlPlayableAsset::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomControlPlayableAsset*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomControlPlayableAsset::*)()>(&CustomControlPlayableAsset::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomControlPlayableAsset*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomControlTrack
#include "GlobalNamespace/CustomControlTrack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: CustomControlTrack::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomControlTrack::*)()>(&CustomControlTrack::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomControlTrack*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomControlTrack::*)()>(&CustomControlTrack::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomControlTrack*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CustomTimelineTween
#include "GlobalNamespace/CustomTimelineTween.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CustomTimelineTween.OnValidate
void GlobalNamespace::CustomTimelineTween::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTimelineTween::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CustomTimelineTween::OnValidate
// Il2CppName: OnValidate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomTimelineTween::*)()>(&CustomTimelineTween::OnValidate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomTimelineTween*), "OnValidate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomTimelineTween::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomTimelineTween::*)()>(&CustomTimelineTween::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomTimelineTween*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomTimelineTween::*)()>(&CustomTimelineTween::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomTimelineTween*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CustomTweenBehaviour
#include "GlobalNamespace/CustomTweenBehaviour.hpp"
// Including type: CustomTweenBehaviour/<>c
#include "GlobalNamespace/CustomTweenBehaviour_--c.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CustomTweenBehaviour.OnGraphStart
void GlobalNamespace::CustomTweenBehaviour::OnGraphStart(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::OnGraphStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGraphStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: CustomTweenBehaviour.ProcessFrame
void GlobalNamespace::CustomTweenBehaviour::ProcessFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated method: CustomTweenBehaviour.OnPlayableDestroy
void GlobalNamespace::CustomTweenBehaviour::OnPlayableDestroy(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Autogenerated method: CustomTweenBehaviour.OnBehaviourPlay
void GlobalNamespace::CustomTweenBehaviour::OnBehaviourPlay(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Writing MetadataGetter for method: CustomTweenBehaviour::OnGraphStart
// Il2CppName: OnGraphStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomTweenBehaviour::*)(UnityEngine::Playables::Playable)>(&CustomTweenBehaviour::OnGraphStart)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomTweenBehaviour*), "OnGraphStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Playables::Playable>()});
  }
};
// Writing MetadataGetter for method: CustomTweenBehaviour::ProcessFrame
// Il2CppName: ProcessFrame
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomTweenBehaviour::*)(UnityEngine::Playables::Playable, UnityEngine::Playables::FrameData, ::Il2CppObject*)>(&CustomTweenBehaviour::ProcessFrame)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomTweenBehaviour*), "ProcessFrame", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Playables::Playable>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Playables::FrameData>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: CustomTweenBehaviour::OnPlayableDestroy
// Il2CppName: OnPlayableDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomTweenBehaviour::*)(UnityEngine::Playables::Playable)>(&CustomTweenBehaviour::OnPlayableDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomTweenBehaviour*), "OnPlayableDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Playables::Playable>()});
  }
};
// Writing MetadataGetter for method: CustomTweenBehaviour::OnBehaviourPlay
// Il2CppName: OnBehaviourPlay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomTweenBehaviour::*)(UnityEngine::Playables::Playable, UnityEngine::Playables::FrameData)>(&CustomTweenBehaviour::OnBehaviourPlay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomTweenBehaviour*), "OnBehaviourPlay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Playables::Playable>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Playables::FrameData>()});
  }
};
// Writing MetadataGetter for method: CustomTweenBehaviour::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomTweenBehaviour::*)()>(&CustomTweenBehaviour::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomTweenBehaviour*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomTweenBehaviour::*)()>(&CustomTweenBehaviour::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomTweenBehaviour*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CustomTweenBehaviour/<>c
#include "GlobalNamespace/CustomTweenBehaviour_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly CustomTweenBehaviour/<>c <>9
GlobalNamespace::CustomTweenBehaviour::$$c* GlobalNamespace::CustomTweenBehaviour::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::CustomTweenBehaviour::$$c*>("", "CustomTweenBehaviour/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly CustomTweenBehaviour/<>c <>9
void GlobalNamespace::CustomTweenBehaviour::$$c::_set_$$9(GlobalNamespace::CustomTweenBehaviour::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "CustomTweenBehaviour/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Int32,System.Single> <>9__21_0
System::Func_2<int, float>* GlobalNamespace::CustomTweenBehaviour::$$c::_get_$$9__21_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::$$c::_get_$$9__21_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<int, float>*>("", "CustomTweenBehaviour/<>c", "<>9__21_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Int32,System.Single> <>9__21_0
void GlobalNamespace::CustomTweenBehaviour::$$c::_set_$$9__21_0(System::Func_2<int, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::$$c::_set_$$9__21_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "CustomTweenBehaviour/<>c", "<>9__21_0", value)));
}
// Autogenerated method: CustomTweenBehaviour/<>c..cctor
void GlobalNamespace::CustomTweenBehaviour::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CustomTweenBehaviour/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: CustomTweenBehaviour/<>c.<OnBehaviourPlay>b__21_0
float GlobalNamespace::CustomTweenBehaviour::$$c::$OnBehaviourPlay$b__21_0(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CustomTweenBehaviour::$$c::<OnBehaviourPlay>b__21_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnBehaviourPlay>b__21_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, i);
}
// Writing MetadataGetter for method: CustomTweenBehaviour::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CustomTweenBehaviour::$$c::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomTweenBehaviour::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CustomTweenBehaviour::$$c::$OnBehaviourPlay$b__21_0
// Il2CppName: <OnBehaviourPlay>b__21_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (CustomTweenBehaviour::$$c::*)(int)>(&CustomTweenBehaviour::$$c::$OnBehaviourPlay$b__21_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomTweenBehaviour::$$c*), "<OnBehaviourPlay>b__21_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CustomTweenBehaviour::$$c::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomTweenBehaviour::$$c::*)()>(&CustomTweenBehaviour::$$c::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomTweenBehaviour::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CustomTweenBehaviour::$$c::*)()>(&CustomTweenBehaviour::$$c::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CustomTweenBehaviour::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GhostEffectAsset
#include "GlobalNamespace/GhostEffectAsset.hpp"
// Including type: TimelineArrayReference
#include "GlobalNamespace/TimelineArrayReference.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GhostEffectAsset.get_clipCaps
UnityEngine::Timeline::ClipCaps GlobalNamespace::GhostEffectAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: GhostEffectAsset.CreatePlayable
UnityEngine::Playables::Playable GlobalNamespace::GhostEffectAsset::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Writing MetadataGetter for method: GhostEffectAsset::get_clipCaps
// Il2CppName: get_clipCaps
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Timeline::ClipCaps (GhostEffectAsset::*)()>(&GhostEffectAsset::get_clipCaps)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GhostEffectAsset*), "get_clipCaps", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GhostEffectAsset::CreatePlayable
// Il2CppName: CreatePlayable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Playables::Playable (GhostEffectAsset::*)(UnityEngine::Playables::PlayableGraph, UnityEngine::GameObject*)>(&GhostEffectAsset::CreatePlayable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GhostEffectAsset*), "CreatePlayable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Playables::PlayableGraph>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>()});
  }
};
// Writing MetadataGetter for method: GhostEffectAsset::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GhostEffectAsset::*)()>(&GhostEffectAsset::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GhostEffectAsset*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GhostEffectAsset::*)()>(&GhostEffectAsset::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GhostEffectAsset*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: GhostEffectBehaviour
#include "GlobalNamespace/GhostEffectBehaviour.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GhostEffectBehaviour.EnableObjects
void GlobalNamespace::GhostEffectBehaviour::EnableObjects(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::EnableObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(on)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, on);
}
// Autogenerated method: GhostEffectBehaviour.OnBehaviourPlay
void GlobalNamespace::GhostEffectBehaviour::OnBehaviourPlay(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::OnBehaviourPlay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnBehaviourPlay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info);
}
// Autogenerated method: GhostEffectBehaviour.ProcessFrame
void GlobalNamespace::GhostEffectBehaviour::ProcessFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Writing MetadataGetter for method: GhostEffectBehaviour::EnableObjects
// Il2CppName: EnableObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GhostEffectBehaviour::*)(bool)>(&GhostEffectBehaviour::EnableObjects)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GhostEffectBehaviour*), "EnableObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: GhostEffectBehaviour::OnBehaviourPlay
// Il2CppName: OnBehaviourPlay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GhostEffectBehaviour::*)(UnityEngine::Playables::Playable, UnityEngine::Playables::FrameData)>(&GhostEffectBehaviour::OnBehaviourPlay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GhostEffectBehaviour*), "OnBehaviourPlay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Playables::Playable>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Playables::FrameData>()});
  }
};
// Writing MetadataGetter for method: GhostEffectBehaviour::ProcessFrame
// Il2CppName: ProcessFrame
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GhostEffectBehaviour::*)(UnityEngine::Playables::Playable, UnityEngine::Playables::FrameData, ::Il2CppObject*)>(&GhostEffectBehaviour::ProcessFrame)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GhostEffectBehaviour*), "ProcessFrame", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Playables::Playable>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Playables::FrameData>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: GhostEffectBehaviour::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GhostEffectBehaviour::*)()>(&GhostEffectBehaviour::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GhostEffectBehaviour*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GhostEffectBehaviour::*)()>(&GhostEffectBehaviour::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GhostEffectBehaviour*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GhostEffectBehaviour/EndBehavior
#include "GlobalNamespace/GhostEffectBehaviour.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GhostEffectBehaviour/EndBehavior DisableAll
GlobalNamespace::GhostEffectBehaviour::EndBehavior GlobalNamespace::GhostEffectBehaviour::EndBehavior::_get_DisableAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::EndBehavior::_get_DisableAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GhostEffectBehaviour::EndBehavior>("", "GhostEffectBehaviour/EndBehavior", "DisableAll"));
}
// Autogenerated static field setter
// Set static field: static public GhostEffectBehaviour/EndBehavior DisableAll
void GlobalNamespace::GhostEffectBehaviour::EndBehavior::_set_DisableAll(GlobalNamespace::GhostEffectBehaviour::EndBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::EndBehavior::_set_DisableAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GhostEffectBehaviour/EndBehavior", "DisableAll", value));
}
// Autogenerated static field getter
// Get static field: static public GhostEffectBehaviour/EndBehavior DisableCopies
GlobalNamespace::GhostEffectBehaviour::EndBehavior GlobalNamespace::GhostEffectBehaviour::EndBehavior::_get_DisableCopies() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::EndBehavior::_get_DisableCopies");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GhostEffectBehaviour::EndBehavior>("", "GhostEffectBehaviour/EndBehavior", "DisableCopies"));
}
// Autogenerated static field setter
// Set static field: static public GhostEffectBehaviour/EndBehavior DisableCopies
void GlobalNamespace::GhostEffectBehaviour::EndBehavior::_set_DisableCopies(GlobalNamespace::GhostEffectBehaviour::EndBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::EndBehavior::_set_DisableCopies");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GhostEffectBehaviour/EndBehavior", "DisableCopies", value));
}
// Autogenerated static field getter
// Get static field: static public GhostEffectBehaviour/EndBehavior Nothing
GlobalNamespace::GhostEffectBehaviour::EndBehavior GlobalNamespace::GhostEffectBehaviour::EndBehavior::_get_Nothing() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::EndBehavior::_get_Nothing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GhostEffectBehaviour::EndBehavior>("", "GhostEffectBehaviour/EndBehavior", "Nothing"));
}
// Autogenerated static field setter
// Set static field: static public GhostEffectBehaviour/EndBehavior Nothing
void GlobalNamespace::GhostEffectBehaviour::EndBehavior::_set_Nothing(GlobalNamespace::GhostEffectBehaviour::EndBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::EndBehavior::_set_Nothing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GhostEffectBehaviour/EndBehavior", "Nothing", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GhostEffectBehaviour/GhostEffectType
#include "GlobalNamespace/GhostEffectBehaviour.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GhostEffectBehaviour/GhostEffectType TextMeshPro
GlobalNamespace::GhostEffectBehaviour::GhostEffectType GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_get_TextMeshPro() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_get_TextMeshPro");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GhostEffectBehaviour::GhostEffectType>("", "GhostEffectBehaviour/GhostEffectType", "TextMeshPro"));
}
// Autogenerated static field setter
// Set static field: static public GhostEffectBehaviour/GhostEffectType TextMeshPro
void GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_set_TextMeshPro(GlobalNamespace::GhostEffectBehaviour::GhostEffectType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_set_TextMeshPro");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GhostEffectBehaviour/GhostEffectType", "TextMeshPro", value));
}
// Autogenerated static field getter
// Get static field: static public GhostEffectBehaviour/GhostEffectType Canvas
GlobalNamespace::GhostEffectBehaviour::GhostEffectType GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_get_Canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_get_Canvas");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GhostEffectBehaviour::GhostEffectType>("", "GhostEffectBehaviour/GhostEffectType", "Canvas"));
}
// Autogenerated static field setter
// Set static field: static public GhostEffectBehaviour/GhostEffectType Canvas
void GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_set_Canvas(GlobalNamespace::GhostEffectBehaviour::GhostEffectType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GhostEffectBehaviour::GhostEffectType::_set_Canvas");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GhostEffectBehaviour/GhostEffectType", "Canvas", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SinglePositionTween
#include "GlobalNamespace/SinglePositionTween.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: CustomTweenBehaviour
#include "GlobalNamespace/CustomTweenBehaviour.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SinglePositionTween.get_clipCaps
UnityEngine::Timeline::ClipCaps GlobalNamespace::SinglePositionTween::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePositionTween::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: SinglePositionTween.CreatePlayable
UnityEngine::Playables::Playable GlobalNamespace::SinglePositionTween::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SinglePositionTween::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Writing MetadataGetter for method: SinglePositionTween::get_clipCaps
// Il2CppName: get_clipCaps
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Timeline::ClipCaps (SinglePositionTween::*)()>(&SinglePositionTween::get_clipCaps)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SinglePositionTween*), "get_clipCaps", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SinglePositionTween::CreatePlayable
// Il2CppName: CreatePlayable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Playables::Playable (SinglePositionTween::*)(UnityEngine::Playables::PlayableGraph, UnityEngine::GameObject*)>(&SinglePositionTween::CreatePlayable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SinglePositionTween*), "CreatePlayable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Playables::PlayableGraph>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>()});
  }
};
// Writing MetadataGetter for method: SinglePositionTween::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SinglePositionTween::*)()>(&SinglePositionTween::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SinglePositionTween*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SinglePositionTween::*)()>(&SinglePositionTween::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SinglePositionTween*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TimelineArrayReference
#include "GlobalNamespace/TimelineArrayReference.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: DirectionalLight
#include "GlobalNamespace/DirectionalLight.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: TimelineArrayReference::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TimelineArrayReference::*)()>(&TimelineArrayReference::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TimelineArrayReference*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TimelineArrayReference::*)()>(&TimelineArrayReference::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TimelineArrayReference*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TimelineArrayReference/ArrayTypes
#include "GlobalNamespace/TimelineArrayReference.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TimelineArrayReference/ArrayTypes TubeLight
GlobalNamespace::TimelineArrayReference::ArrayTypes GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_TubeLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_TubeLight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TimelineArrayReference::ArrayTypes>("", "TimelineArrayReference/ArrayTypes", "TubeLight"));
}
// Autogenerated static field setter
// Set static field: static public TimelineArrayReference/ArrayTypes TubeLight
void GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_TubeLight(GlobalNamespace::TimelineArrayReference::ArrayTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_TubeLight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TimelineArrayReference/ArrayTypes", "TubeLight", value));
}
// Autogenerated static field getter
// Get static field: static public TimelineArrayReference/ArrayTypes Transform
GlobalNamespace::TimelineArrayReference::ArrayTypes GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_Transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_Transform");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TimelineArrayReference::ArrayTypes>("", "TimelineArrayReference/ArrayTypes", "Transform"));
}
// Autogenerated static field setter
// Set static field: static public TimelineArrayReference/ArrayTypes Transform
void GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_Transform(GlobalNamespace::TimelineArrayReference::ArrayTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_Transform");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TimelineArrayReference/ArrayTypes", "Transform", value));
}
// Autogenerated static field getter
// Get static field: static public TimelineArrayReference/ArrayTypes Canvas
GlobalNamespace::TimelineArrayReference::ArrayTypes GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_Canvas() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_Canvas");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TimelineArrayReference::ArrayTypes>("", "TimelineArrayReference/ArrayTypes", "Canvas"));
}
// Autogenerated static field setter
// Set static field: static public TimelineArrayReference/ArrayTypes Canvas
void GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_Canvas(GlobalNamespace::TimelineArrayReference::ArrayTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_Canvas");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TimelineArrayReference/ArrayTypes", "Canvas", value));
}
// Autogenerated static field getter
// Get static field: static public TimelineArrayReference/ArrayTypes TextMeshPro
GlobalNamespace::TimelineArrayReference::ArrayTypes GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_TextMeshPro() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_TextMeshPro");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TimelineArrayReference::ArrayTypes>("", "TimelineArrayReference/ArrayTypes", "TextMeshPro"));
}
// Autogenerated static field setter
// Set static field: static public TimelineArrayReference/ArrayTypes TextMeshPro
void GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_TextMeshPro(GlobalNamespace::TimelineArrayReference::ArrayTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_TextMeshPro");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TimelineArrayReference/ArrayTypes", "TextMeshPro", value));
}
// Autogenerated static field getter
// Get static field: static public TimelineArrayReference/ArrayTypes DirectionalLight
GlobalNamespace::TimelineArrayReference::ArrayTypes GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_DirectionalLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::ArrayTypes::_get_DirectionalLight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TimelineArrayReference::ArrayTypes>("", "TimelineArrayReference/ArrayTypes", "DirectionalLight"));
}
// Autogenerated static field setter
// Set static field: static public TimelineArrayReference/ArrayTypes DirectionalLight
void GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_DirectionalLight(GlobalNamespace::TimelineArrayReference::ArrayTypes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TimelineArrayReference::ArrayTypes::_set_DirectionalLight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TimelineArrayReference/ArrayTypes", "DirectionalLight", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TubeLightAsset
#include "GlobalNamespace/TubeLightAsset.hpp"
// Including type: TubeLightBehaviour
#include "GlobalNamespace/TubeLightBehaviour.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TubeLightAsset.get_clipCaps
UnityEngine::Timeline::ClipCaps GlobalNamespace::TubeLightAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: TubeLightAsset.CreatePlayable
UnityEngine::Playables::Playable GlobalNamespace::TubeLightAsset::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Writing MetadataGetter for method: TubeLightAsset::get_clipCaps
// Il2CppName: get_clipCaps
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Timeline::ClipCaps (TubeLightAsset::*)()>(&TubeLightAsset::get_clipCaps)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TubeLightAsset*), "get_clipCaps", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TubeLightAsset::CreatePlayable
// Il2CppName: CreatePlayable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Playables::Playable (TubeLightAsset::*)(UnityEngine::Playables::PlayableGraph, UnityEngine::GameObject*)>(&TubeLightAsset::CreatePlayable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TubeLightAsset*), "CreatePlayable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Playables::PlayableGraph>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>()});
  }
};
// Writing MetadataGetter for method: TubeLightAsset::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TubeLightAsset::*)()>(&TubeLightAsset::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TubeLightAsset*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TubeLightAsset::*)()>(&TubeLightAsset::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TubeLightAsset*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TubeLightBehaviour
#include "GlobalNamespace/TubeLightBehaviour.hpp"
// Including type: TubeLightBehaviour/ParameterType
#include "GlobalNamespace/TubeLightBehaviour_ParameterType.hpp"
// Including type: ColorSO
#include "GlobalNamespace/ColorSO.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
// Including type: DirectionalLight
#include "GlobalNamespace/DirectionalLight.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TubeLightBehaviour.ProcessFrame
void GlobalNamespace::TubeLightBehaviour::ProcessFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated method: TubeLightBehaviour.OnPlayableDestroy
void GlobalNamespace::TubeLightBehaviour::OnPlayableDestroy(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Writing MetadataGetter for method: TubeLightBehaviour::ProcessFrame
// Il2CppName: ProcessFrame
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TubeLightBehaviour::*)(UnityEngine::Playables::Playable, UnityEngine::Playables::FrameData, ::Il2CppObject*)>(&TubeLightBehaviour::ProcessFrame)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TubeLightBehaviour*), "ProcessFrame", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Playables::Playable>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Playables::FrameData>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: TubeLightBehaviour::OnPlayableDestroy
// Il2CppName: OnPlayableDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TubeLightBehaviour::*)(UnityEngine::Playables::Playable)>(&TubeLightBehaviour::OnPlayableDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TubeLightBehaviour*), "OnPlayableDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Playables::Playable>()});
  }
};
// Writing MetadataGetter for method: TubeLightBehaviour::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TubeLightBehaviour::*)()>(&TubeLightBehaviour::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TubeLightBehaviour*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TubeLightBehaviour::*)()>(&TubeLightBehaviour::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TubeLightBehaviour*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TubeLightBehaviour/ParameterType
#include "GlobalNamespace/TubeLightBehaviour_ParameterType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TubeLightBehaviour/ParameterType Values
GlobalNamespace::TubeLightBehaviour::ParameterType GlobalNamespace::TubeLightBehaviour::ParameterType::_get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::ParameterType::_get_Values");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TubeLightBehaviour::ParameterType>("", "TubeLightBehaviour/ParameterType", "Values"));
}
// Autogenerated static field setter
// Set static field: static public TubeLightBehaviour/ParameterType Values
void GlobalNamespace::TubeLightBehaviour::ParameterType::_set_Values(GlobalNamespace::TubeLightBehaviour::ParameterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::ParameterType::_set_Values");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TubeLightBehaviour/ParameterType", "Values", value));
}
// Autogenerated static field getter
// Get static field: static public TubeLightBehaviour/ParameterType References
GlobalNamespace::TubeLightBehaviour::ParameterType GlobalNamespace::TubeLightBehaviour::ParameterType::_get_References() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::ParameterType::_get_References");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TubeLightBehaviour::ParameterType>("", "TubeLightBehaviour/ParameterType", "References"));
}
// Autogenerated static field setter
// Set static field: static public TubeLightBehaviour/ParameterType References
void GlobalNamespace::TubeLightBehaviour::ParameterType::_set_References(GlobalNamespace::TubeLightBehaviour::ParameterType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightBehaviour::ParameterType::_set_References");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TubeLightBehaviour/ParameterType", "References", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TubeLightIntensityAsset
#include "GlobalNamespace/TubeLightIntensityAsset.hpp"
// Including type: TubeLightIntensityBehaviour
#include "GlobalNamespace/TubeLightIntensityBehaviour.hpp"
// Including type: UnityEngine.Timeline.ClipCaps
#include "UnityEngine/Timeline/ClipCaps.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.PlayableGraph
#include "UnityEngine/Playables/PlayableGraph.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TubeLightIntensityAsset.get_clipCaps
UnityEngine::Timeline::ClipCaps GlobalNamespace::TubeLightIntensityAsset::get_clipCaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityAsset::get_clipCaps");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clipCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Timeline::ClipCaps, false>(this, ___internal__method);
}
// Autogenerated method: TubeLightIntensityAsset.CreatePlayable
UnityEngine::Playables::Playable GlobalNamespace::TubeLightIntensityAsset::CreatePlayable(UnityEngine::Playables::PlayableGraph graph, UnityEngine::GameObject* go) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityAsset::CreatePlayable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlayable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(go)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, go);
}
// Writing MetadataGetter for method: TubeLightIntensityAsset::get_clipCaps
// Il2CppName: get_clipCaps
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Timeline::ClipCaps (TubeLightIntensityAsset::*)()>(&TubeLightIntensityAsset::get_clipCaps)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TubeLightIntensityAsset*), "get_clipCaps", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TubeLightIntensityAsset::CreatePlayable
// Il2CppName: CreatePlayable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Playables::Playable (TubeLightIntensityAsset::*)(UnityEngine::Playables::PlayableGraph, UnityEngine::GameObject*)>(&TubeLightIntensityAsset::CreatePlayable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TubeLightIntensityAsset*), "CreatePlayable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Playables::PlayableGraph>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>()});
  }
};
// Writing MetadataGetter for method: TubeLightIntensityAsset::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TubeLightIntensityAsset::*)()>(&TubeLightIntensityAsset::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TubeLightIntensityAsset*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TubeLightIntensityAsset::*)()>(&TubeLightIntensityAsset::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TubeLightIntensityAsset*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TubeLightIntensityBehaviour
#include "GlobalNamespace/TubeLightIntensityBehaviour.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
// Including type: DirectionalLight
#include "GlobalNamespace/DirectionalLight.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
// Including type: UnityEngine.Playables.FrameData
#include "UnityEngine/Playables/FrameData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TubeLightIntensityBehaviour.EnableObjects
void GlobalNamespace::TubeLightIntensityBehaviour::EnableObjects(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::EnableObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(on)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, on);
}
// Autogenerated method: TubeLightIntensityBehaviour.ProcessFrame
void GlobalNamespace::TubeLightIntensityBehaviour::ProcessFrame(UnityEngine::Playables::Playable playable, UnityEngine::Playables::FrameData info, ::Il2CppObject* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::ProcessFrame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable, info, playerData);
}
// Autogenerated method: TubeLightIntensityBehaviour.OnPlayableDestroy
void GlobalNamespace::TubeLightIntensityBehaviour::OnPlayableDestroy(UnityEngine::Playables::Playable playable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TubeLightIntensityBehaviour::OnPlayableDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPlayableDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playable);
}
// Writing MetadataGetter for method: TubeLightIntensityBehaviour::EnableObjects
// Il2CppName: EnableObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TubeLightIntensityBehaviour::*)(bool)>(&TubeLightIntensityBehaviour::EnableObjects)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TubeLightIntensityBehaviour*), "EnableObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: TubeLightIntensityBehaviour::ProcessFrame
// Il2CppName: ProcessFrame
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TubeLightIntensityBehaviour::*)(UnityEngine::Playables::Playable, UnityEngine::Playables::FrameData, ::Il2CppObject*)>(&TubeLightIntensityBehaviour::ProcessFrame)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TubeLightIntensityBehaviour*), "ProcessFrame", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Playables::Playable>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Playables::FrameData>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: TubeLightIntensityBehaviour::OnPlayableDestroy
// Il2CppName: OnPlayableDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TubeLightIntensityBehaviour::*)(UnityEngine::Playables::Playable)>(&TubeLightIntensityBehaviour::OnPlayableDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TubeLightIntensityBehaviour*), "OnPlayableDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Playables::Playable>()});
  }
};
// Writing MetadataGetter for method: TubeLightIntensityBehaviour::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TubeLightIntensityBehaviour::*)()>(&TubeLightIntensityBehaviour::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TubeLightIntensityBehaviour*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TubeLightIntensityBehaviour::*)()>(&TubeLightIntensityBehaviour::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TubeLightIntensityBehaviour*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TubeLightIntensityTrack
#include "GlobalNamespace/TubeLightIntensityTrack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: TubeLightIntensityTrack::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TubeLightIntensityTrack::*)()>(&TubeLightIntensityTrack::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TubeLightIntensityTrack*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TubeLightIntensityTrack::*)()>(&TubeLightIntensityTrack::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TubeLightIntensityTrack*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TubeLightTrack
#include "GlobalNamespace/TubeLightTrack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: TubeLightTrack::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TubeLightTrack::*)()>(&TubeLightTrack::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TubeLightTrack*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TubeLightTrack::*)()>(&TubeLightTrack::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TubeLightTrack*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentSceneSetup
#include "GlobalNamespace/EnvironmentSceneSetup.hpp"
// Including type: EnvironmentSceneSetupData
#include "GlobalNamespace/EnvironmentSceneSetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EnvironmentSceneSetup.InstallBindings
void GlobalNamespace::EnvironmentSceneSetup::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSceneSetup::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: EnvironmentSceneSetup::InstallBindings
// Il2CppName: InstallBindings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnvironmentSceneSetup::*)()>(&EnvironmentSceneSetup::InstallBindings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnvironmentSceneSetup*), "InstallBindings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EnvironmentSceneSetup::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnvironmentSceneSetup::*)()>(&EnvironmentSceneSetup::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnvironmentSceneSetup*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnvironmentSceneSetup::*)()>(&EnvironmentSceneSetup::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnvironmentSceneSetup*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EventsTestSceneSetup
#include "GlobalNamespace/EventsTestSceneSetup.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EventsTestSceneSetup.InstallBindings
void GlobalNamespace::EventsTestSceneSetup::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EventsTestSceneSetup::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: EventsTestSceneSetup::InstallBindings
// Il2CppName: InstallBindings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventsTestSceneSetup::*)()>(&EventsTestSceneSetup::InstallBindings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventsTestSceneSetup*), "InstallBindings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EventsTestSceneSetup::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventsTestSceneSetup::*)()>(&EventsTestSceneSetup::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventsTestSceneSetup*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventsTestSceneSetup::*)()>(&EventsTestSceneSetup::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventsTestSceneSetup*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameCoreSceneSetup
#include "GlobalNamespace/GameCoreSceneSetup.hpp"
// Including type: ScreenCaptureAfterDelay
#include "GlobalNamespace/ScreenCaptureAfterDelay.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: BloomFogSO
#include "GlobalNamespace/BloomFogSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kPauseButtonPressDurationMultiplier
float GlobalNamespace::GameCoreSceneSetup::_get_kPauseButtonPressDurationMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameCoreSceneSetup::_get_kPauseButtonPressDurationMultiplier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "GameCoreSceneSetup", "kPauseButtonPressDurationMultiplier"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kPauseButtonPressDurationMultiplier
void GlobalNamespace::GameCoreSceneSetup::_set_kPauseButtonPressDurationMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameCoreSceneSetup::_set_kPauseButtonPressDurationMultiplier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameCoreSceneSetup", "kPauseButtonPressDurationMultiplier", value));
}
// Autogenerated method: GameCoreSceneSetup.InstallBindings
void GlobalNamespace::GameCoreSceneSetup::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameCoreSceneSetup::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: GameCoreSceneSetup::InstallBindings
// Il2CppName: InstallBindings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameCoreSceneSetup::*)()>(&GameCoreSceneSetup::InstallBindings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameCoreSceneSetup*), "InstallBindings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameCoreSceneSetup::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameCoreSceneSetup::*)()>(&GameCoreSceneSetup::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameCoreSceneSetup*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameCoreSceneSetup::*)()>(&GameCoreSceneSetup::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameCoreSceneSetup*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HealthWarningSceneSetup
#include "GlobalNamespace/HealthWarningSceneSetup.hpp"
// Including type: HealthWarningSceneSetupData
#include "GlobalNamespace/HealthWarningSceneSetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HealthWarningSceneSetup.InstallBindings
void GlobalNamespace::HealthWarningSceneSetup::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneSetup::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: HealthWarningSceneSetup::InstallBindings
// Il2CppName: InstallBindings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HealthWarningSceneSetup::*)()>(&HealthWarningSceneSetup::InstallBindings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HealthWarningSceneSetup*), "InstallBindings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HealthWarningSceneSetup::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HealthWarningSceneSetup::*)()>(&HealthWarningSceneSetup::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HealthWarningSceneSetup*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HealthWarningSceneSetup::*)()>(&HealthWarningSceneSetup::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HealthWarningSceneSetup*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HealthWarningSceneStart
#include "GlobalNamespace/HealthWarningSceneStart.hpp"
// Including type: HealthWarningSceneStart/<Start>d__3
#include "GlobalNamespace/HealthWarningSceneStart_-Start-d__3.hpp"
// Including type: HealthWarningFlowCoordinator
#include "GlobalNamespace/HealthWarningFlowCoordinator.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: HMUI.HierarchyManager
#include "HMUI/HierarchyManager.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HealthWarningSceneStart.Start
System::Collections::IEnumerator* GlobalNamespace::HealthWarningSceneStart::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: HealthWarningSceneStart::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (HealthWarningSceneStart::*)()>(&HealthWarningSceneStart::Start)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HealthWarningSceneStart*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HealthWarningSceneStart::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HealthWarningSceneStart::*)()>(&HealthWarningSceneStart::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HealthWarningSceneStart*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HealthWarningSceneStart::*)()>(&HealthWarningSceneStart::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HealthWarningSceneStart*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HealthWarningSceneStart/<Start>d__3
#include "GlobalNamespace/HealthWarningSceneStart_-Start-d__3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HealthWarningSceneStart/<Start>d__3.System.IDisposable.Dispose
void GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HealthWarningSceneStart/<Start>d__3.MoveNext
bool GlobalNamespace::HealthWarningSceneStart::$Start$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::$Start$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HealthWarningSceneStart/<Start>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: HealthWarningSceneStart/<Start>d__3.System.Collections.IEnumerator.Reset
void GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HealthWarningSceneStart/<Start>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: HealthWarningSceneStart::$Start$d__3::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HealthWarningSceneStart::$Start$d__3::*)(int)>(&HealthWarningSceneStart::$Start$d__3::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HealthWarningSceneStart::$Start$d__3*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HealthWarningSceneStart::$Start$d__3::*)(int)>(&HealthWarningSceneStart::$Start$d__3::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HealthWarningSceneStart::$Start$d__3*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: HealthWarningSceneStart::$Start$d__3::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HealthWarningSceneStart::$Start$d__3::*)()>(&HealthWarningSceneStart::$Start$d__3::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HealthWarningSceneStart::$Start$d__3*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HealthWarningSceneStart::$Start$d__3::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HealthWarningSceneStart::$Start$d__3::*)()>(&HealthWarningSceneStart::$Start$d__3::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HealthWarningSceneStart::$Start$d__3*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HealthWarningSceneStart::$Start$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (HealthWarningSceneStart::$Start$d__3::*)()>(&HealthWarningSceneStart::$Start$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HealthWarningSceneStart::$Start$d__3*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HealthWarningSceneStart::$Start$d__3::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HealthWarningSceneStart::$Start$d__3::*)()>(&HealthWarningSceneStart::$Start$d__3::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HealthWarningSceneStart::$Start$d__3*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HealthWarningSceneStart::$Start$d__3::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (HealthWarningSceneStart::$Start$d__3::*)()>(&HealthWarningSceneStart::$Start$d__3::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HealthWarningSceneStart::$Start$d__3*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightmappingSceneSetup
#include "GlobalNamespace/LightmappingSceneSetup.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LightmappingSceneSetup.get_colorScheme
GlobalNamespace::ColorSchemeSO* GlobalNamespace::LightmappingSceneSetup::get_colorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightmappingSceneSetup::get_colorScheme");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ColorSchemeSO*, false>(this, ___internal__method);
}
// Autogenerated method: LightmappingSceneSetup.set_colorScheme
void GlobalNamespace::LightmappingSceneSetup::set_colorScheme(GlobalNamespace::ColorSchemeSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightmappingSceneSetup::set_colorScheme");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colorScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LightmappingSceneSetup.InstallBindings
void GlobalNamespace::LightmappingSceneSetup::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LightmappingSceneSetup::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: LightmappingSceneSetup::get_colorScheme
// Il2CppName: get_colorScheme
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::ColorSchemeSO* (LightmappingSceneSetup::*)()>(&LightmappingSceneSetup::get_colorScheme)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LightmappingSceneSetup*), "get_colorScheme", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LightmappingSceneSetup::set_colorScheme
// Il2CppName: set_colorScheme
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LightmappingSceneSetup::*)(GlobalNamespace::ColorSchemeSO*)>(&LightmappingSceneSetup::set_colorScheme)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LightmappingSceneSetup*), "set_colorScheme", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ColorSchemeSO*>()});
  }
};
// Writing MetadataGetter for method: LightmappingSceneSetup::InstallBindings
// Il2CppName: InstallBindings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LightmappingSceneSetup::*)()>(&LightmappingSceneSetup::InstallBindings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LightmappingSceneSetup*), "InstallBindings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LightmappingSceneSetup::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LightmappingSceneSetup::*)()>(&LightmappingSceneSetup::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LightmappingSceneSetup*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LightmappingSceneSetup::*)()>(&LightmappingSceneSetup::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LightmappingSceneSetup*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuSceneSetup
#include "GlobalNamespace/MenuSceneSetup.hpp"
// Including type: MenuSceneSetup/<Start>d__3
#include "GlobalNamespace/MenuSceneSetup_-Start-d__3.hpp"
// Including type: HMUI.FlowCoordinator
#include "HMUI/FlowCoordinator.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: HMUI.HierarchyManager
#include "HMUI/HierarchyManager.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MenuSceneSetup.Start
System::Collections::IEnumerator* GlobalNamespace::MenuSceneSetup::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MenuSceneSetup::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (MenuSceneSetup::*)()>(&MenuSceneSetup::Start)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuSceneSetup*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MenuSceneSetup::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuSceneSetup::*)()>(&MenuSceneSetup::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuSceneSetup*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuSceneSetup::*)()>(&MenuSceneSetup::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuSceneSetup*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MenuSceneSetup/<Start>d__3
#include "GlobalNamespace/MenuSceneSetup_-Start-d__3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MenuSceneSetup/<Start>d__3.System.IDisposable.Dispose
void GlobalNamespace::MenuSceneSetup::$Start$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::$Start$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuSceneSetup/<Start>d__3.MoveNext
bool GlobalNamespace::MenuSceneSetup::$Start$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::$Start$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MenuSceneSetup/<Start>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MenuSceneSetup::$Start$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::$Start$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MenuSceneSetup/<Start>d__3.System.Collections.IEnumerator.Reset
void GlobalNamespace::MenuSceneSetup::$Start$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::$Start$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuSceneSetup/<Start>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MenuSceneSetup::$Start$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::$Start$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MenuSceneSetup::$Start$d__3::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuSceneSetup::$Start$d__3::*)(int)>(&MenuSceneSetup::$Start$d__3::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuSceneSetup::$Start$d__3*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuSceneSetup::$Start$d__3::*)(int)>(&MenuSceneSetup::$Start$d__3::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuSceneSetup::$Start$d__3*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MenuSceneSetup::$Start$d__3::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuSceneSetup::$Start$d__3::*)()>(&MenuSceneSetup::$Start$d__3::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuSceneSetup::$Start$d__3*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MenuSceneSetup::$Start$d__3::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MenuSceneSetup::$Start$d__3::*)()>(&MenuSceneSetup::$Start$d__3::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuSceneSetup::$Start$d__3*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MenuSceneSetup::$Start$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (MenuSceneSetup::$Start$d__3::*)()>(&MenuSceneSetup::$Start$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuSceneSetup::$Start$d__3*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MenuSceneSetup::$Start$d__3::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuSceneSetup::$Start$d__3::*)()>(&MenuSceneSetup::$Start$d__3::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuSceneSetup::$Start$d__3*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MenuSceneSetup::$Start$d__3::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (MenuSceneSetup::$Start$d__3::*)()>(&MenuSceneSetup::$Start$d__3::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuSceneSetup::$Start$d__3*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HealthWarningNoTransitionInstaller
#include "GlobalNamespace/HealthWarningNoTransitionInstaller.hpp"
// Including type: HealthWarningSceneSetupData
#include "GlobalNamespace/HealthWarningSceneSetupData.hpp"
// Including type: HealthWarningScenesTransitionSetupDataSO
#include "GlobalNamespace/HealthWarningScenesTransitionSetupDataSO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HealthWarningNoTransitionInstaller.InstallBindings
void GlobalNamespace::HealthWarningNoTransitionInstaller::InstallBindings(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningNoTransitionInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Writing MetadataGetter for method: HealthWarningNoTransitionInstaller::InstallBindings
// Il2CppName: InstallBindings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HealthWarningNoTransitionInstaller::*)(Zenject::DiContainer*)>(&HealthWarningNoTransitionInstaller::InstallBindings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HealthWarningNoTransitionInstaller*), "InstallBindings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Zenject::DiContainer*>()});
  }
};
// Writing MetadataGetter for method: HealthWarningNoTransitionInstaller::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HealthWarningNoTransitionInstaller::*)()>(&HealthWarningNoTransitionInstaller::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HealthWarningNoTransitionInstaller*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HealthWarningNoTransitionInstaller::*)()>(&HealthWarningNoTransitionInstaller::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HealthWarningNoTransitionInstaller*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: INoTransitionColorSchemeProvider
#include "GlobalNamespace/INoTransitionColorSchemeProvider.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: INoTransitionColorSchemeProvider.get_colorScheme
GlobalNamespace::ColorSchemeSO* GlobalNamespace::INoTransitionColorSchemeProvider::get_colorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INoTransitionColorSchemeProvider::get_colorScheme");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ColorSchemeSO*, false>(this, ___internal__method);
}
// Autogenerated method: INoTransitionColorSchemeProvider.set_colorScheme
void GlobalNamespace::INoTransitionColorSchemeProvider::set_colorScheme(GlobalNamespace::ColorSchemeSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INoTransitionColorSchemeProvider::set_colorScheme");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colorScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: INoTransitionColorSchemeProvider::get_colorScheme
// Il2CppName: get_colorScheme
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::ColorSchemeSO* (INoTransitionColorSchemeProvider::*)()>(&INoTransitionColorSchemeProvider::get_colorScheme)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(INoTransitionColorSchemeProvider*), "get_colorScheme", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: INoTransitionColorSchemeProvider::set_colorScheme
// Il2CppName: set_colorScheme
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (INoTransitionColorSchemeProvider::*)(GlobalNamespace::ColorSchemeSO*)>(&INoTransitionColorSchemeProvider::set_colorScheme)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(INoTransitionColorSchemeProvider*), "set_colorScheme", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ColorSchemeSO*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionLevelNoTransitionInstaller
#include "GlobalNamespace/MissionLevelNoTransitionInstaller.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
// Including type: MissionObjective
#include "GlobalNamespace/MissionObjective.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: MissionLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MissionLevelScenesTransitionSetupDataSO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionLevelNoTransitionInstaller.InstallBindings
void GlobalNamespace::MissionLevelNoTransitionInstaller::InstallBindings(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelNoTransitionInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Writing MetadataGetter for method: MissionLevelNoTransitionInstaller::InstallBindings
// Il2CppName: InstallBindings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionLevelNoTransitionInstaller::*)(Zenject::DiContainer*)>(&MissionLevelNoTransitionInstaller::InstallBindings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionLevelNoTransitionInstaller*), "InstallBindings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Zenject::DiContainer*>()});
  }
};
// Writing MetadataGetter for method: MissionLevelNoTransitionInstaller::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionLevelNoTransitionInstaller::*)()>(&MissionLevelNoTransitionInstaller::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionLevelNoTransitionInstaller*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionLevelNoTransitionInstaller::*)()>(&MissionLevelNoTransitionInstaller::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionLevelNoTransitionInstaller*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerLevelNoTransitionInstaller
#include "GlobalNamespace/MultiplayerLevelNoTransitionInstaller.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: PracticeSettings
#include "GlobalNamespace/PracticeSettings.hpp"
// Including type: MultiplayerLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MultiplayerLevelScenesTransitionSetupDataSO.hpp"
// Including type: IMenuRpcManager
#include "GlobalNamespace/IMenuRpcManager.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerLevelNoTransitionInstaller.OnDestroy
void GlobalNamespace::MultiplayerLevelNoTransitionInstaller::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelNoTransitionInstaller::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelNoTransitionInstaller.GetStartedLevel
void GlobalNamespace::MultiplayerLevelNoTransitionInstaller::GetStartedLevel(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelNoTransitionInstaller::GetStartedLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStartedLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: MultiplayerLevelNoTransitionInstaller.StartLevelImmediately
void GlobalNamespace::MultiplayerLevelNoTransitionInstaller::StartLevelImmediately() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelNoTransitionInstaller::StartLevelImmediately");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartLevelImmediately", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelNoTransitionInstaller.InstallBindings
void GlobalNamespace::MultiplayerLevelNoTransitionInstaller::InstallBindings(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelNoTransitionInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: MultiplayerLevelNoTransitionInstaller.PostInstall
void GlobalNamespace::MultiplayerLevelNoTransitionInstaller::PostInstall(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelNoTransitionInstaller::PostInstall");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PostInstall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Writing MetadataGetter for method: MultiplayerLevelNoTransitionInstaller::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLevelNoTransitionInstaller::*)()>(&MultiplayerLevelNoTransitionInstaller::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelNoTransitionInstaller*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MultiplayerLevelNoTransitionInstaller::GetStartedLevel
// Il2CppName: GetStartedLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLevelNoTransitionInstaller::*)(::Il2CppString*)>(&MultiplayerLevelNoTransitionInstaller::GetStartedLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelNoTransitionInstaller*), "GetStartedLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: MultiplayerLevelNoTransitionInstaller::StartLevelImmediately
// Il2CppName: StartLevelImmediately
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLevelNoTransitionInstaller::*)()>(&MultiplayerLevelNoTransitionInstaller::StartLevelImmediately)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelNoTransitionInstaller*), "StartLevelImmediately", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MultiplayerLevelNoTransitionInstaller::InstallBindings
// Il2CppName: InstallBindings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLevelNoTransitionInstaller::*)(Zenject::DiContainer*)>(&MultiplayerLevelNoTransitionInstaller::InstallBindings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelNoTransitionInstaller*), "InstallBindings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Zenject::DiContainer*>()});
  }
};
// Writing MetadataGetter for method: MultiplayerLevelNoTransitionInstaller::PostInstall
// Il2CppName: PostInstall
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLevelNoTransitionInstaller::*)(Zenject::DiContainer*)>(&MultiplayerLevelNoTransitionInstaller::PostInstall)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelNoTransitionInstaller*), "PostInstall", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Zenject::DiContainer*>()});
  }
};
// Writing MetadataGetter for method: MultiplayerLevelNoTransitionInstaller::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLevelNoTransitionInstaller::*)()>(&MultiplayerLevelNoTransitionInstaller::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelNoTransitionInstaller*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLevelNoTransitionInstaller::*)()>(&MultiplayerLevelNoTransitionInstaller::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelNoTransitionInstaller*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PatternFightNoTransitionInstaller
#include "GlobalNamespace/PatternFightNoTransitionInstaller.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: PatternFightScenesTransitionSetupDataSO
#include "GlobalNamespace/PatternFightScenesTransitionSetupDataSO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PatternFightNoTransitionInstaller.InstallBindings
void GlobalNamespace::PatternFightNoTransitionInstaller::InstallBindings(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightNoTransitionInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Writing MetadataGetter for method: PatternFightNoTransitionInstaller::InstallBindings
// Il2CppName: InstallBindings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PatternFightNoTransitionInstaller::*)(Zenject::DiContainer*)>(&PatternFightNoTransitionInstaller::InstallBindings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PatternFightNoTransitionInstaller*), "InstallBindings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Zenject::DiContainer*>()});
  }
};
// Writing MetadataGetter for method: PatternFightNoTransitionInstaller::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PatternFightNoTransitionInstaller::*)()>(&PatternFightNoTransitionInstaller::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PatternFightNoTransitionInstaller*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PatternFightNoTransitionInstaller::*)()>(&PatternFightNoTransitionInstaller::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PatternFightNoTransitionInstaller*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelNoTransitionInstaller
#include "GlobalNamespace/StandardLevelNoTransitionInstaller.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: PracticeSettings
#include "GlobalNamespace/PracticeSettings.hpp"
// Including type: StandardLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/StandardLevelScenesTransitionSetupDataSO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StandardLevelNoTransitionInstaller.get_colorScheme
GlobalNamespace::ColorSchemeSO* GlobalNamespace::StandardLevelNoTransitionInstaller::get_colorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelNoTransitionInstaller::get_colorScheme");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ColorSchemeSO*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelNoTransitionInstaller.set_colorScheme
void GlobalNamespace::StandardLevelNoTransitionInstaller::set_colorScheme(GlobalNamespace::ColorSchemeSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelNoTransitionInstaller::set_colorScheme");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colorScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelNoTransitionInstaller.InstallBindings
void GlobalNamespace::StandardLevelNoTransitionInstaller::InstallBindings(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelNoTransitionInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Writing MetadataGetter for method: StandardLevelNoTransitionInstaller::get_colorScheme
// Il2CppName: get_colorScheme
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::ColorSchemeSO* (StandardLevelNoTransitionInstaller::*)()>(&StandardLevelNoTransitionInstaller::get_colorScheme)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelNoTransitionInstaller*), "get_colorScheme", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandardLevelNoTransitionInstaller::set_colorScheme
// Il2CppName: set_colorScheme
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelNoTransitionInstaller::*)(GlobalNamespace::ColorSchemeSO*)>(&StandardLevelNoTransitionInstaller::set_colorScheme)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelNoTransitionInstaller*), "set_colorScheme", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ColorSchemeSO*>()});
  }
};
// Writing MetadataGetter for method: StandardLevelNoTransitionInstaller::InstallBindings
// Il2CppName: InstallBindings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelNoTransitionInstaller::*)(Zenject::DiContainer*)>(&StandardLevelNoTransitionInstaller::InstallBindings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelNoTransitionInstaller*), "InstallBindings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Zenject::DiContainer*>()});
  }
};
// Writing MetadataGetter for method: StandardLevelNoTransitionInstaller::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelNoTransitionInstaller::*)()>(&StandardLevelNoTransitionInstaller::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelNoTransitionInstaller*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelNoTransitionInstaller::*)()>(&StandardLevelNoTransitionInstaller::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelNoTransitionInstaller*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialNoTransitionInstaller
#include "GlobalNamespace/TutorialNoTransitionInstaller.hpp"
// Including type: TutorialScenesTransitionSetupDataSO
#include "GlobalNamespace/TutorialScenesTransitionSetupDataSO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TutorialNoTransitionInstaller.InstallBindings
void GlobalNamespace::TutorialNoTransitionInstaller::InstallBindings(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialNoTransitionInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Writing MetadataGetter for method: TutorialNoTransitionInstaller::InstallBindings
// Il2CppName: InstallBindings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TutorialNoTransitionInstaller::*)(Zenject::DiContainer*)>(&TutorialNoTransitionInstaller::InstallBindings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TutorialNoTransitionInstaller*), "InstallBindings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Zenject::DiContainer*>()});
  }
};
// Writing MetadataGetter for method: TutorialNoTransitionInstaller::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TutorialNoTransitionInstaller::*)()>(&TutorialNoTransitionInstaller::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TutorialNoTransitionInstaller*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TutorialNoTransitionInstaller::*)()>(&TutorialNoTransitionInstaller::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TutorialNoTransitionInstaller*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PatternFightSceneSetup
#include "GlobalNamespace/PatternFightSceneSetup.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: BeatmapObjectSpawnControllerPlayerHeightSetter
#include "GlobalNamespace/BeatmapObjectSpawnControllerPlayerHeightSetter.hpp"
// Including type: PlayerHeightDetector
#include "GlobalNamespace/PlayerHeightDetector.hpp"
// Including type: AudioManagerSO
#include "GlobalNamespace/AudioManagerSO.hpp"
// Including type: PatternFightSceneSetupData
#include "GlobalNamespace/PatternFightSceneSetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PatternFightSceneSetup.InstallBindings
void GlobalNamespace::PatternFightSceneSetup::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightSceneSetup::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: PatternFightSceneSetup::InstallBindings
// Il2CppName: InstallBindings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PatternFightSceneSetup::*)()>(&PatternFightSceneSetup::InstallBindings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PatternFightSceneSetup*), "InstallBindings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PatternFightSceneSetup::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PatternFightSceneSetup::*)()>(&PatternFightSceneSetup::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PatternFightSceneSetup*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PatternFightSceneSetup::*)()>(&PatternFightSceneSetup::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PatternFightSceneSetup*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapEditorSceneSetupData
#include "GlobalNamespace/BeatmapEditorSceneSetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapEditorSceneSetupData.get_levelDirPath
::Il2CppString* GlobalNamespace::BeatmapEditorSceneSetupData::get_levelDirPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapEditorSceneSetupData::get_levelDirPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelDirPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapEditorSceneSetupData.get_levelAssetPath
::Il2CppString* GlobalNamespace::BeatmapEditorSceneSetupData::get_levelAssetPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapEditorSceneSetupData::get_levelAssetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelAssetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: BeatmapEditorSceneSetupData::get_levelDirPath
// Il2CppName: get_levelDirPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (BeatmapEditorSceneSetupData::*)()>(&BeatmapEditorSceneSetupData::get_levelDirPath)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapEditorSceneSetupData*), "get_levelDirPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeatmapEditorSceneSetupData::get_levelAssetPath
// Il2CppName: get_levelAssetPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (BeatmapEditorSceneSetupData::*)()>(&BeatmapEditorSceneSetupData::get_levelAssetPath)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapEditorSceneSetupData*), "get_levelAssetPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeatmapEditorSceneSetupData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapEditorSceneSetupData::*)(::Il2CppString*, ::Il2CppString*)>(&BeatmapEditorSceneSetupData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapEditorSceneSetupData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapEditorSceneSetupData::*)(::Il2CppString*, ::Il2CppString*)>(&BeatmapEditorSceneSetupData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapEditorSceneSetupData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentSceneSetupData
#include "GlobalNamespace/EnvironmentSceneSetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: EnvironmentSceneSetupData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnvironmentSceneSetupData::*)(bool)>(&EnvironmentSceneSetupData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnvironmentSceneSetupData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EnvironmentSceneSetupData::*)(bool)>(&EnvironmentSceneSetupData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EnvironmentSceneSetupData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameCoreSceneSetupData
#include "GlobalNamespace/GameCoreSceneSetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: GameCoreSceneSetupData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameCoreSceneSetupData::*)()>(&GameCoreSceneSetupData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameCoreSceneSetupData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameCoreSceneSetupData::*)()>(&GameCoreSceneSetupData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameCoreSceneSetupData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayCoreSceneSetupData
#include "GlobalNamespace/GameplayCoreSceneSetupData.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: PracticeSettings
#include "GlobalNamespace/PracticeSettings.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: GameplayCoreSceneSetupData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplayCoreSceneSetupData::*)(GlobalNamespace::IDifficultyBeatmap*, GlobalNamespace::IPreviewBeatmapLevel*, GlobalNamespace::GameplayModifiers*, GlobalNamespace::PlayerSpecificSettings*, GlobalNamespace::PracticeSettings*, bool, GlobalNamespace::EnvironmentInfoSO*, GlobalNamespace::ColorScheme*)>(&GameplayCoreSceneSetupData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplayCoreSceneSetupData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifiers*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSpecificSettings*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PracticeSettings*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::EnvironmentInfoSO*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ColorScheme*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplayCoreSceneSetupData::*)(GlobalNamespace::IDifficultyBeatmap*, GlobalNamespace::IPreviewBeatmapLevel*, GlobalNamespace::GameplayModifiers*, GlobalNamespace::PlayerSpecificSettings*, GlobalNamespace::PracticeSettings*, bool, GlobalNamespace::EnvironmentInfoSO*, GlobalNamespace::ColorScheme*)>(&GameplayCoreSceneSetupData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplayCoreSceneSetupData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifiers*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSpecificSettings*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PracticeSettings*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::EnvironmentInfoSO*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ColorScheme*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HealthWarningSceneSetupData
#include "GlobalNamespace/HealthWarningSceneSetupData.hpp"
// Including type: ScenesTransitionSetupDataSO
#include "GlobalNamespace/ScenesTransitionSetupDataSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HealthWarningSceneSetupData.get_nextScenesTransitionSetupData
GlobalNamespace::ScenesTransitionSetupDataSO* GlobalNamespace::HealthWarningSceneSetupData::get_nextScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneSetupData::get_nextScenesTransitionSetupData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_nextScenesTransitionSetupData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ScenesTransitionSetupDataSO*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: HealthWarningSceneSetupData::get_nextScenesTransitionSetupData
// Il2CppName: get_nextScenesTransitionSetupData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::ScenesTransitionSetupDataSO* (HealthWarningSceneSetupData::*)()>(&HealthWarningSceneSetupData::get_nextScenesTransitionSetupData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HealthWarningSceneSetupData*), "get_nextScenesTransitionSetupData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HealthWarningSceneSetupData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HealthWarningSceneSetupData::*)(GlobalNamespace::ScenesTransitionSetupDataSO*)>(&HealthWarningSceneSetupData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HealthWarningSceneSetupData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ScenesTransitionSetupDataSO*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HealthWarningSceneSetupData::*)(GlobalNamespace::ScenesTransitionSetupDataSO*)>(&HealthWarningSceneSetupData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HealthWarningSceneSetupData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ScenesTransitionSetupDataSO*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionGameplaySceneSetupData
#include "GlobalNamespace/MissionGameplaySceneSetupData.hpp"
// Including type: MissionObjective
#include "GlobalNamespace/MissionObjective.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: MissionGameplaySceneSetupData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionGameplaySceneSetupData::*)(::Array<GlobalNamespace::MissionObjective*>*, bool, GlobalNamespace::IPreviewBeatmapLevel*, GlobalNamespace::BeatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO*, GlobalNamespace::GameplayModifiers*, ::Il2CppString*)>(&MissionGameplaySceneSetupData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionGameplaySceneSetupData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::MissionObjective*>*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficulty>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicSO*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifiers*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionGameplaySceneSetupData::*)(::Array<GlobalNamespace::MissionObjective*>*, bool, GlobalNamespace::IPreviewBeatmapLevel*, GlobalNamespace::BeatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO*, GlobalNamespace::GameplayModifiers*, ::Il2CppString*)>(&MissionGameplaySceneSetupData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionGameplaySceneSetupData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::MissionObjective*>*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficulty>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicSO*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifiers*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLevelSceneSetupData
#include "GlobalNamespace/MultiplayerLevelSceneSetupData.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: MultiplayerLevelSceneSetupData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLevelSceneSetupData::*)(GlobalNamespace::IPreviewBeatmapLevel*, GlobalNamespace::BeatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO*, bool)>(&MultiplayerLevelSceneSetupData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelSceneSetupData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficulty>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicSO*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLevelSceneSetupData::*)(GlobalNamespace::IPreviewBeatmapLevel*, GlobalNamespace::BeatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO*, bool)>(&MultiplayerLevelSceneSetupData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelSceneSetupData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficulty>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicSO*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetEaseSceneSetupData
#include "GlobalNamespace/NetEaseSceneSetupData.hpp"
// Including type: ScenesTransitionSetupDataSO
#include "GlobalNamespace/ScenesTransitionSetupDataSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NetEaseSceneSetupData.get_nextScenesTransitionSetupData
GlobalNamespace::ScenesTransitionSetupDataSO* GlobalNamespace::NetEaseSceneSetupData::get_nextScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseSceneSetupData::get_nextScenesTransitionSetupData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_nextScenesTransitionSetupData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ScenesTransitionSetupDataSO*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: NetEaseSceneSetupData::get_nextScenesTransitionSetupData
// Il2CppName: get_nextScenesTransitionSetupData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::ScenesTransitionSetupDataSO* (NetEaseSceneSetupData::*)()>(&NetEaseSceneSetupData::get_nextScenesTransitionSetupData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetEaseSceneSetupData*), "get_nextScenesTransitionSetupData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetEaseSceneSetupData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetEaseSceneSetupData::*)(GlobalNamespace::ScenesTransitionSetupDataSO*)>(&NetEaseSceneSetupData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetEaseSceneSetupData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ScenesTransitionSetupDataSO*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetEaseSceneSetupData::*)(GlobalNamespace::ScenesTransitionSetupDataSO*)>(&NetEaseSceneSetupData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetEaseSceneSetupData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ScenesTransitionSetupDataSO*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PatternFightSceneSetupData
#include "GlobalNamespace/PatternFightSceneSetupData.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: PatternFightSceneSetupData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PatternFightSceneSetupData::*)(GlobalNamespace::PlayerSpecificSettings*, GlobalNamespace::ColorScheme*)>(&PatternFightSceneSetupData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PatternFightSceneSetupData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSpecificSettings*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ColorScheme*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PatternFightSceneSetupData::*)(GlobalNamespace::PlayerSpecificSettings*, GlobalNamespace::ColorScheme*)>(&PatternFightSceneSetupData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PatternFightSceneSetupData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSpecificSettings*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ColorScheme*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ShaderWarmupSceneSetupData
#include "GlobalNamespace/ShaderWarmupSceneSetupData.hpp"
// Including type: ScenesTransitionSetupDataSO
#include "GlobalNamespace/ScenesTransitionSetupDataSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ShaderWarmupSceneSetupData.get_nextScenesTransitionSetupData
GlobalNamespace::ScenesTransitionSetupDataSO* GlobalNamespace::ShaderWarmupSceneSetupData::get_nextScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShaderWarmupSceneSetupData::get_nextScenesTransitionSetupData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_nextScenesTransitionSetupData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ScenesTransitionSetupDataSO*, false>(this, ___internal__method);
}
// Autogenerated method: ShaderWarmupSceneSetupData.set_nextScenesTransitionSetupData
void GlobalNamespace::ShaderWarmupSceneSetupData::set_nextScenesTransitionSetupData(GlobalNamespace::ScenesTransitionSetupDataSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShaderWarmupSceneSetupData::set_nextScenesTransitionSetupData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_nextScenesTransitionSetupData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: ShaderWarmupSceneSetupData::get_nextScenesTransitionSetupData
// Il2CppName: get_nextScenesTransitionSetupData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::ScenesTransitionSetupDataSO* (ShaderWarmupSceneSetupData::*)()>(&ShaderWarmupSceneSetupData::get_nextScenesTransitionSetupData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ShaderWarmupSceneSetupData*), "get_nextScenesTransitionSetupData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ShaderWarmupSceneSetupData::set_nextScenesTransitionSetupData
// Il2CppName: set_nextScenesTransitionSetupData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ShaderWarmupSceneSetupData::*)(GlobalNamespace::ScenesTransitionSetupDataSO*)>(&ShaderWarmupSceneSetupData::set_nextScenesTransitionSetupData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ShaderWarmupSceneSetupData*), "set_nextScenesTransitionSetupData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ScenesTransitionSetupDataSO*>()});
  }
};
// Writing MetadataGetter for method: ShaderWarmupSceneSetupData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ShaderWarmupSceneSetupData::*)(GlobalNamespace::ScenesTransitionSetupDataSO*)>(&ShaderWarmupSceneSetupData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ShaderWarmupSceneSetupData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ScenesTransitionSetupDataSO*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ShaderWarmupSceneSetupData::*)(GlobalNamespace::ScenesTransitionSetupDataSO*)>(&ShaderWarmupSceneSetupData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ShaderWarmupSceneSetupData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ScenesTransitionSetupDataSO*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardGameplaySceneSetupData
#include "GlobalNamespace/StandardGameplaySceneSetupData.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: StandardGameplaySceneSetupData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardGameplaySceneSetupData::*)(bool, GlobalNamespace::IPreviewBeatmapLevel*, GlobalNamespace::BeatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO*, ::Il2CppString*, GlobalNamespace::GameplayModifiers*)>(&StandardGameplaySceneSetupData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardGameplaySceneSetupData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficulty>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicSO*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifiers*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardGameplaySceneSetupData::*)(bool, GlobalNamespace::IPreviewBeatmapLevel*, GlobalNamespace::BeatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO*, ::Il2CppString*, GlobalNamespace::GameplayModifiers*)>(&StandardGameplaySceneSetupData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardGameplaySceneSetupData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficulty>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicSO*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifiers*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialSceneSetupData
#include "GlobalNamespace/TutorialSceneSetupData.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: TutorialSceneSetupData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TutorialSceneSetupData::*)(GlobalNamespace::ColorScheme*)>(&TutorialSceneSetupData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TutorialSceneSetupData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ColorScheme*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TutorialSceneSetupData::*)(GlobalNamespace::ColorScheme*)>(&TutorialSceneSetupData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TutorialSceneSetupData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ColorScheme*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AppInitScenesTransitionSetupDataContainerSO
#include "GlobalNamespace/AppInitScenesTransitionSetupDataContainerSO.hpp"
// Including type: AppInitScenesTransitionSetupDataSO
#include "GlobalNamespace/AppInitScenesTransitionSetupDataSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: AppInitScenesTransitionSetupDataContainerSO::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AppInitScenesTransitionSetupDataContainerSO::*)()>(&AppInitScenesTransitionSetupDataContainerSO::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AppInitScenesTransitionSetupDataContainerSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AppInitScenesTransitionSetupDataContainerSO::*)()>(&AppInitScenesTransitionSetupDataContainerSO::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AppInitScenesTransitionSetupDataContainerSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AppInitScenesTransitionSetupDataSO
#include "GlobalNamespace/AppInitScenesTransitionSetupDataSO.hpp"
// Including type: AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType
#include "GlobalNamespace/AppInitScenesTransitionSetupDataSO_AppInitOverrideStartType.hpp"
// Including type: AppInitScenesTransitionSetupDataSO/AppInitSceneSetupData
#include "GlobalNamespace/AppInitScenesTransitionSetupDataSO_AppInitSceneSetupData.hpp"
// Including type: MockPlayersModel
#include "GlobalNamespace/MockPlayersModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AppInitScenesTransitionSetupDataSO.Init
void GlobalNamespace::AppInitScenesTransitionSetupDataSO::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AppInitScenesTransitionSetupDataSO.InitAsAppStart
void GlobalNamespace::AppInitScenesTransitionSetupDataSO::InitAsAppStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::InitAsAppStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitAsAppStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AppInitScenesTransitionSetupDataSO.__Init
void GlobalNamespace::AppInitScenesTransitionSetupDataSO::__Init(GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType appInitOverrideStartType, GlobalNamespace::MockPlayersModel* mockPlayersModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::__Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appInitOverrideStartType), ::il2cpp_utils::ExtractType(mockPlayersModel)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, appInitOverrideStartType, mockPlayersModel);
}
// Writing MetadataGetter for method: AppInitScenesTransitionSetupDataSO::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AppInitScenesTransitionSetupDataSO::*)()>(&AppInitScenesTransitionSetupDataSO::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AppInitScenesTransitionSetupDataSO*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AppInitScenesTransitionSetupDataSO::InitAsAppStart
// Il2CppName: InitAsAppStart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AppInitScenesTransitionSetupDataSO::*)()>(&AppInitScenesTransitionSetupDataSO::InitAsAppStart)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AppInitScenesTransitionSetupDataSO*), "InitAsAppStart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AppInitScenesTransitionSetupDataSO::__Init
// Il2CppName: __Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AppInitScenesTransitionSetupDataSO::*)(GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType, GlobalNamespace::MockPlayersModel*)>(&AppInitScenesTransitionSetupDataSO::__Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AppInitScenesTransitionSetupDataSO*), "__Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MockPlayersModel*>()});
  }
};
// Writing MetadataGetter for method: AppInitScenesTransitionSetupDataSO::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AppInitScenesTransitionSetupDataSO::*)()>(&AppInitScenesTransitionSetupDataSO::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AppInitScenesTransitionSetupDataSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AppInitScenesTransitionSetupDataSO::*)()>(&AppInitScenesTransitionSetupDataSO::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AppInitScenesTransitionSetupDataSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType
#include "GlobalNamespace/AppInitScenesTransitionSetupDataSO_AppInitOverrideStartType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType DoNotOverride
GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_get_DoNotOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_get_DoNotOverride");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType>("", "AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType", "DoNotOverride"));
}
// Autogenerated static field setter
// Set static field: static public AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType DoNotOverride
void GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_set_DoNotOverride(GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_set_DoNotOverride");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType", "DoNotOverride", value));
}
// Autogenerated static field getter
// Get static field: static public AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType AppStart
GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_get_AppStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_get_AppStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType>("", "AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType", "AppStart"));
}
// Autogenerated static field setter
// Set static field: static public AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType AppStart
void GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_set_AppStart(GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_set_AppStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType", "AppStart", value));
}
// Autogenerated static field getter
// Get static field: static public AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType AppRestart
GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_get_AppRestart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_get_AppRestart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType>("", "AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType", "AppRestart"));
}
// Autogenerated static field setter
// Set static field: static public AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType AppRestart
void GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_set_AppRestart(GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_set_AppRestart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType", "AppRestart", value));
}
// Autogenerated static field getter
// Get static field: static public AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType MultiSceneEditor
GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_get_MultiSceneEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_get_MultiSceneEditor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType>("", "AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType", "MultiSceneEditor"));
}
// Autogenerated static field setter
// Set static field: static public AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType MultiSceneEditor
void GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_set_MultiSceneEditor(GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_set_MultiSceneEditor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType", "MultiSceneEditor", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AppInitScenesTransitionSetupDataSO/AppInitSceneSetupData
#include "GlobalNamespace/AppInitScenesTransitionSetupDataSO_AppInitSceneSetupData.hpp"
// Including type: MockPlayersModel
#include "GlobalNamespace/MockPlayersModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AppInitScenesTransitionSetupDataSO/AppInitSceneSetupData.get_appInitOverrideStartType
GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::get_appInitOverrideStartType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::get_appInitOverrideStartType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_appInitOverrideStartType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType, false>(this, ___internal__method);
}
// Autogenerated method: AppInitScenesTransitionSetupDataSO/AppInitSceneSetupData.set_appInitOverrideStartType
void GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::set_appInitOverrideStartType(GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::set_appInitOverrideStartType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_appInitOverrideStartType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AppInitScenesTransitionSetupDataSO/AppInitSceneSetupData.get_overrideMockPlayersModel
GlobalNamespace::MockPlayersModel* GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::get_overrideMockPlayersModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::get_overrideMockPlayersModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_overrideMockPlayersModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MockPlayersModel*, false>(this, ___internal__method);
}
// Autogenerated method: AppInitScenesTransitionSetupDataSO/AppInitSceneSetupData.set_overrideMockPlayersModel
void GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::set_overrideMockPlayersModel(GlobalNamespace::MockPlayersModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::set_overrideMockPlayersModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_overrideMockPlayersModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::get_appInitOverrideStartType
// Il2CppName: get_appInitOverrideStartType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType (AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::*)()>(&AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::get_appInitOverrideStartType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData*), "get_appInitOverrideStartType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::set_appInitOverrideStartType
// Il2CppName: set_appInitOverrideStartType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::*)(GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType)>(&AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::set_appInitOverrideStartType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData*), "set_appInitOverrideStartType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType>()});
  }
};
// Writing MetadataGetter for method: AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::get_overrideMockPlayersModel
// Il2CppName: get_overrideMockPlayersModel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::MockPlayersModel* (AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::*)()>(&AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::get_overrideMockPlayersModel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData*), "get_overrideMockPlayersModel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::set_overrideMockPlayersModel
// Il2CppName: set_overrideMockPlayersModel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::*)(GlobalNamespace::MockPlayersModel*)>(&AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::set_overrideMockPlayersModel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData*), "set_overrideMockPlayersModel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MockPlayersModel*>()});
  }
};
// Writing MetadataGetter for method: AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::*)(GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType, GlobalNamespace::MockPlayersModel*)>(&AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MockPlayersModel*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::*)(GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType, GlobalNamespace::MockPlayersModel*)>(&AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MockPlayersModel*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapEditorScenesTransitionSetupDataSO
#include "GlobalNamespace/BeatmapEditorScenesTransitionSetupDataSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapEditorScenesTransitionSetupDataSO.add_didFinishEvent
void GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::add_didFinishEvent(System::Action_1<GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapEditorScenesTransitionSetupDataSO.remove_didFinishEvent
void GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::remove_didFinishEvent(System::Action_1<GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapEditorScenesTransitionSetupDataSO.Init
void GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapEditorScenesTransitionSetupDataSO.Finish
void GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::Finish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::Finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: BeatmapEditorScenesTransitionSetupDataSO::add_didFinishEvent
// Il2CppName: add_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapEditorScenesTransitionSetupDataSO::*)(System::Action_1<GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO*>*)>(&BeatmapEditorScenesTransitionSetupDataSO::add_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapEditorScenesTransitionSetupDataSO*), "add_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO*>*>()});
  }
};
// Writing MetadataGetter for method: BeatmapEditorScenesTransitionSetupDataSO::remove_didFinishEvent
// Il2CppName: remove_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapEditorScenesTransitionSetupDataSO::*)(System::Action_1<GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO*>*)>(&BeatmapEditorScenesTransitionSetupDataSO::remove_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapEditorScenesTransitionSetupDataSO*), "remove_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO*>*>()});
  }
};
// Writing MetadataGetter for method: BeatmapEditorScenesTransitionSetupDataSO::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapEditorScenesTransitionSetupDataSO::*)()>(&BeatmapEditorScenesTransitionSetupDataSO::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapEditorScenesTransitionSetupDataSO*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeatmapEditorScenesTransitionSetupDataSO::Finish
// Il2CppName: Finish
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapEditorScenesTransitionSetupDataSO::*)()>(&BeatmapEditorScenesTransitionSetupDataSO::Finish)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapEditorScenesTransitionSetupDataSO*), "Finish", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeatmapEditorScenesTransitionSetupDataSO::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapEditorScenesTransitionSetupDataSO::*)()>(&BeatmapEditorScenesTransitionSetupDataSO::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapEditorScenesTransitionSetupDataSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapEditorScenesTransitionSetupDataSO::*)()>(&BeatmapEditorScenesTransitionSetupDataSO::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapEditorScenesTransitionSetupDataSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CreditsScenesTransitionSetupDataSO
#include "GlobalNamespace/CreditsScenesTransitionSetupDataSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CreditsScenesTransitionSetupDataSO.add_didFinishEvent
void GlobalNamespace::CreditsScenesTransitionSetupDataSO::add_didFinishEvent(System::Action_1<GlobalNamespace::CreditsScenesTransitionSetupDataSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsScenesTransitionSetupDataSO::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CreditsScenesTransitionSetupDataSO.remove_didFinishEvent
void GlobalNamespace::CreditsScenesTransitionSetupDataSO::remove_didFinishEvent(System::Action_1<GlobalNamespace::CreditsScenesTransitionSetupDataSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsScenesTransitionSetupDataSO::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CreditsScenesTransitionSetupDataSO.Finish
void GlobalNamespace::CreditsScenesTransitionSetupDataSO::Finish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsScenesTransitionSetupDataSO::Finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CreditsScenesTransitionSetupDataSO::add_didFinishEvent
// Il2CppName: add_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CreditsScenesTransitionSetupDataSO::*)(System::Action_1<GlobalNamespace::CreditsScenesTransitionSetupDataSO*>*)>(&CreditsScenesTransitionSetupDataSO::add_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CreditsScenesTransitionSetupDataSO*), "add_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::CreditsScenesTransitionSetupDataSO*>*>()});
  }
};
// Writing MetadataGetter for method: CreditsScenesTransitionSetupDataSO::remove_didFinishEvent
// Il2CppName: remove_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CreditsScenesTransitionSetupDataSO::*)(System::Action_1<GlobalNamespace::CreditsScenesTransitionSetupDataSO*>*)>(&CreditsScenesTransitionSetupDataSO::remove_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CreditsScenesTransitionSetupDataSO*), "remove_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::CreditsScenesTransitionSetupDataSO*>*>()});
  }
};
// Writing MetadataGetter for method: CreditsScenesTransitionSetupDataSO::Finish
// Il2CppName: Finish
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CreditsScenesTransitionSetupDataSO::*)()>(&CreditsScenesTransitionSetupDataSO::Finish)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CreditsScenesTransitionSetupDataSO*), "Finish", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CreditsScenesTransitionSetupDataSO::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CreditsScenesTransitionSetupDataSO::*)()>(&CreditsScenesTransitionSetupDataSO::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CreditsScenesTransitionSetupDataSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CreditsScenesTransitionSetupDataSO::*)()>(&CreditsScenesTransitionSetupDataSO::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CreditsScenesTransitionSetupDataSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EventsTestScenesTransitionSetupDataSO
#include "GlobalNamespace/EventsTestScenesTransitionSetupDataSO.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: SceneInfo
#include "GlobalNamespace/SceneInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EventsTestScenesTransitionSetupDataSO.Init
void GlobalNamespace::EventsTestScenesTransitionSetupDataSO::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EventsTestScenesTransitionSetupDataSO::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: EventsTestScenesTransitionSetupDataSO::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventsTestScenesTransitionSetupDataSO::*)()>(&EventsTestScenesTransitionSetupDataSO::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventsTestScenesTransitionSetupDataSO*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EventsTestScenesTransitionSetupDataSO::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventsTestScenesTransitionSetupDataSO::*)()>(&EventsTestScenesTransitionSetupDataSO::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventsTestScenesTransitionSetupDataSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EventsTestScenesTransitionSetupDataSO::*)()>(&EventsTestScenesTransitionSetupDataSO::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EventsTestScenesTransitionSetupDataSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayLevelSceneTransitionEvents
#include "GlobalNamespace/GameplayLevelSceneTransitionEvents.hpp"
// Including type: StandardLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/StandardLevelScenesTransitionSetupDataSO.hpp"
// Including type: MissionLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MissionLevelScenesTransitionSetupDataSO.hpp"
// Including type: MultiplayerLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MultiplayerLevelScenesTransitionSetupDataSO.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: MultiplayerResultsData
#include "GlobalNamespace/MultiplayerResultsData.hpp"
// Including type: MissionCompletionResults
#include "GlobalNamespace/MissionCompletionResults.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GameplayLevelSceneTransitionEvents.add_anyGameplayLevelDidFinishEvent
void GlobalNamespace::GameplayLevelSceneTransitionEvents::add_anyGameplayLevelDidFinishEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayLevelSceneTransitionEvents::add_anyGameplayLevelDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_anyGameplayLevelDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayLevelSceneTransitionEvents.remove_anyGameplayLevelDidFinishEvent
void GlobalNamespace::GameplayLevelSceneTransitionEvents::remove_anyGameplayLevelDidFinishEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayLevelSceneTransitionEvents::remove_anyGameplayLevelDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_anyGameplayLevelDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameplayLevelSceneTransitionEvents.HandleStandardLevelDidFinish
void GlobalNamespace::GameplayLevelSceneTransitionEvents::HandleStandardLevelDidFinish(GlobalNamespace::StandardLevelScenesTransitionSetupDataSO* standardLevelScenesTransitionSetupData, GlobalNamespace::LevelCompletionResults* levelCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayLevelSceneTransitionEvents::HandleStandardLevelDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleStandardLevelDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standardLevelScenesTransitionSetupData), ::il2cpp_utils::ExtractType(levelCompletionResults)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, standardLevelScenesTransitionSetupData, levelCompletionResults);
}
// Autogenerated method: GameplayLevelSceneTransitionEvents.HandleMultiplayerLevelDidFinish
void GlobalNamespace::GameplayLevelSceneTransitionEvents::HandleMultiplayerLevelDidFinish(GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO* multiplayerLevelScenesTransitionSetupData, GlobalNamespace::MultiplayerResultsData* multiplayerResultsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayLevelSceneTransitionEvents::HandleMultiplayerLevelDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerLevelDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplayerLevelScenesTransitionSetupData), ::il2cpp_utils::ExtractType(multiplayerResultsData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, multiplayerLevelScenesTransitionSetupData, multiplayerResultsData);
}
// Autogenerated method: GameplayLevelSceneTransitionEvents.HandleMissionLevelDidFinish
void GlobalNamespace::GameplayLevelSceneTransitionEvents::HandleMissionLevelDidFinish(GlobalNamespace::MissionLevelScenesTransitionSetupDataSO* missionLevelScenesTransitionSetupData, GlobalNamespace::MissionCompletionResults* missionCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayLevelSceneTransitionEvents::HandleMissionLevelDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMissionLevelDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionLevelScenesTransitionSetupData), ::il2cpp_utils::ExtractType(missionCompletionResults)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, missionLevelScenesTransitionSetupData, missionCompletionResults);
}
// Autogenerated method: GameplayLevelSceneTransitionEvents.InvokeAnyGameplayLevelDidFinish
void GlobalNamespace::GameplayLevelSceneTransitionEvents::InvokeAnyGameplayLevelDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayLevelSceneTransitionEvents::InvokeAnyGameplayLevelDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeAnyGameplayLevelDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameplayLevelSceneTransitionEvents.Finalize
void GlobalNamespace::GameplayLevelSceneTransitionEvents::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameplayLevelSceneTransitionEvents::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: GameplayLevelSceneTransitionEvents::add_anyGameplayLevelDidFinishEvent
// Il2CppName: add_anyGameplayLevelDidFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplayLevelSceneTransitionEvents::*)(System::Action*)>(&GameplayLevelSceneTransitionEvents::add_anyGameplayLevelDidFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplayLevelSceneTransitionEvents*), "add_anyGameplayLevelDidFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: GameplayLevelSceneTransitionEvents::remove_anyGameplayLevelDidFinishEvent
// Il2CppName: remove_anyGameplayLevelDidFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplayLevelSceneTransitionEvents::*)(System::Action*)>(&GameplayLevelSceneTransitionEvents::remove_anyGameplayLevelDidFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplayLevelSceneTransitionEvents*), "remove_anyGameplayLevelDidFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: GameplayLevelSceneTransitionEvents::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplayLevelSceneTransitionEvents::*)(GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*, GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*, GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*)>(&GameplayLevelSceneTransitionEvents::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplayLevelSceneTransitionEvents*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplayLevelSceneTransitionEvents::*)(GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*, GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*, GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*)>(&GameplayLevelSceneTransitionEvents::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplayLevelSceneTransitionEvents*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*>()});
  }
};
// Writing MetadataGetter for method: GameplayLevelSceneTransitionEvents::HandleStandardLevelDidFinish
// Il2CppName: HandleStandardLevelDidFinish
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplayLevelSceneTransitionEvents::*)(GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*, GlobalNamespace::LevelCompletionResults*)>(&GameplayLevelSceneTransitionEvents::HandleStandardLevelDidFinish)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplayLevelSceneTransitionEvents*), "HandleStandardLevelDidFinish", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::LevelCompletionResults*>()});
  }
};
// Writing MetadataGetter for method: GameplayLevelSceneTransitionEvents::HandleMultiplayerLevelDidFinish
// Il2CppName: HandleMultiplayerLevelDidFinish
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplayLevelSceneTransitionEvents::*)(GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::MultiplayerResultsData*)>(&GameplayLevelSceneTransitionEvents::HandleMultiplayerLevelDidFinish)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplayLevelSceneTransitionEvents*), "HandleMultiplayerLevelDidFinish", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MultiplayerResultsData*>()});
  }
};
// Writing MetadataGetter for method: GameplayLevelSceneTransitionEvents::HandleMissionLevelDidFinish
// Il2CppName: HandleMissionLevelDidFinish
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplayLevelSceneTransitionEvents::*)(GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*, GlobalNamespace::MissionCompletionResults*)>(&GameplayLevelSceneTransitionEvents::HandleMissionLevelDidFinish)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplayLevelSceneTransitionEvents*), "HandleMissionLevelDidFinish", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MissionCompletionResults*>()});
  }
};
// Writing MetadataGetter for method: GameplayLevelSceneTransitionEvents::InvokeAnyGameplayLevelDidFinish
// Il2CppName: InvokeAnyGameplayLevelDidFinish
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplayLevelSceneTransitionEvents::*)()>(&GameplayLevelSceneTransitionEvents::InvokeAnyGameplayLevelDidFinish)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplayLevelSceneTransitionEvents*), "InvokeAnyGameplayLevelDidFinish", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameplayLevelSceneTransitionEvents::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameplayLevelSceneTransitionEvents::*)()>(&GameplayLevelSceneTransitionEvents::Finalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameplayLevelSceneTransitionEvents*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HealthWarningScenesTransitionSetupDataSO
#include "GlobalNamespace/HealthWarningScenesTransitionSetupDataSO.hpp"
// Including type: HealthWarningSceneSetupData
#include "GlobalNamespace/HealthWarningSceneSetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HealthWarningScenesTransitionSetupDataSO.Init
void GlobalNamespace::HealthWarningScenesTransitionSetupDataSO::Init(GlobalNamespace::HealthWarningSceneSetupData* healthWarningSceneSetupData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningScenesTransitionSetupDataSO::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(healthWarningSceneSetupData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, healthWarningSceneSetupData);
}
// Writing MetadataGetter for method: HealthWarningScenesTransitionSetupDataSO::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HealthWarningScenesTransitionSetupDataSO::*)(GlobalNamespace::HealthWarningSceneSetupData*)>(&HealthWarningScenesTransitionSetupDataSO::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HealthWarningScenesTransitionSetupDataSO*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::HealthWarningSceneSetupData*>()});
  }
};
// Writing MetadataGetter for method: HealthWarningScenesTransitionSetupDataSO::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HealthWarningScenesTransitionSetupDataSO::*)()>(&HealthWarningScenesTransitionSetupDataSO::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HealthWarningScenesTransitionSetupDataSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HealthWarningScenesTransitionSetupDataSO::*)()>(&HealthWarningScenesTransitionSetupDataSO::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HealthWarningScenesTransitionSetupDataSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuScenesTransitionSetupDataSO
#include "GlobalNamespace/MenuScenesTransitionSetupDataSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: MenuScenesTransitionSetupDataSO::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuScenesTransitionSetupDataSO::*)()>(&MenuScenesTransitionSetupDataSO::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuScenesTransitionSetupDataSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuScenesTransitionSetupDataSO::*)()>(&MenuScenesTransitionSetupDataSO::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuScenesTransitionSetupDataSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MenuTransitionsHelper
#include "GlobalNamespace/MenuTransitionsHelper.hpp"
// Including type: MenuTransitionsHelper/<>c
#include "GlobalNamespace/MenuTransitionsHelper_--c.hpp"
// Including type: MenuTransitionsHelper/<>c__DisplayClass23_0
#include "GlobalNamespace/MenuTransitionsHelper_--c__DisplayClass23_0.hpp"
// Including type: MenuTransitionsHelper/<>c__DisplayClass24_0
#include "GlobalNamespace/MenuTransitionsHelper_--c__DisplayClass24_0.hpp"
// Including type: MenuTransitionsHelper/<>c__DisplayClass25_0
#include "GlobalNamespace/MenuTransitionsHelper_--c__DisplayClass25_0.hpp"
// Including type: MenuTransitionsHelper/<>c__DisplayClass26_0
#include "GlobalNamespace/MenuTransitionsHelper_--c__DisplayClass26_0.hpp"
// Including type: MenuTransitionsHelper/<>c__DisplayClass27_0
#include "GlobalNamespace/MenuTransitionsHelper_--c__DisplayClass27_0.hpp"
// Including type: AppInitScenesTransitionSetupDataContainerSO
#include "GlobalNamespace/AppInitScenesTransitionSetupDataContainerSO.hpp"
// Including type: StandardLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/StandardLevelScenesTransitionSetupDataSO.hpp"
// Including type: MultiplayerLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MultiplayerLevelScenesTransitionSetupDataSO.hpp"
// Including type: MissionLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MissionLevelScenesTransitionSetupDataSO.hpp"
// Including type: TutorialScenesTransitionSetupDataSO/TutorialEndStateType
#include "GlobalNamespace/TutorialScenesTransitionSetupDataSO.hpp"
// Including type: CreditsScenesTransitionSetupDataSO
#include "GlobalNamespace/CreditsScenesTransitionSetupDataSO.hpp"
// Including type: BeatmapEditorScenesTransitionSetupDataSO
#include "GlobalNamespace/BeatmapEditorScenesTransitionSetupDataSO.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: MultiplayerResultsData
#include "GlobalNamespace/MultiplayerResultsData.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: MissionCompletionResults
#include "GlobalNamespace/MissionCompletionResults.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: OverrideEnvironmentSettings
#include "GlobalNamespace/OverrideEnvironmentSettings.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: PracticeSettings
#include "GlobalNamespace/PracticeSettings.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: MissionObjective
#include "GlobalNamespace/MissionObjective.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MenuTransitionsHelper.StartStandardLevel
void GlobalNamespace::MenuTransitionsHelper::StartStandardLevel(::Il2CppString* gameMode, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, GlobalNamespace::OverrideEnvironmentSettings* overrideEnvironmentSettings, GlobalNamespace::ColorScheme* overrideColorScheme, GlobalNamespace::GameplayModifiers* gameplayModifiers, GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings, GlobalNamespace::PracticeSettings* practiceSettings, ::Il2CppString* backButtonText, bool useTestNoteCutSoundEffects, System::Action* beforeSceneSwitchCallback, System::Action_2<GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*, GlobalNamespace::LevelCompletionResults*>* levelFinishedCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::StartStandardLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartStandardLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameMode), ::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(overrideEnvironmentSettings), ::il2cpp_utils::ExtractType(overrideColorScheme), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(playerSpecificSettings), ::il2cpp_utils::ExtractType(practiceSettings), ::il2cpp_utils::ExtractType(backButtonText), ::il2cpp_utils::ExtractType(useTestNoteCutSoundEffects), ::il2cpp_utils::ExtractType(beforeSceneSwitchCallback), ::il2cpp_utils::ExtractType(levelFinishedCallback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, gameMode, difficultyBeatmap, previewBeatmapLevel, overrideEnvironmentSettings, overrideColorScheme, gameplayModifiers, playerSpecificSettings, practiceSettings, backButtonText, useTestNoteCutSoundEffects, beforeSceneSwitchCallback, levelFinishedCallback);
}
// Autogenerated method: MenuTransitionsHelper.StartStandardLevel
void GlobalNamespace::MenuTransitionsHelper::StartStandardLevel(::Il2CppString* gameMode, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, GlobalNamespace::OverrideEnvironmentSettings* overrideEnvironmentSettings, GlobalNamespace::ColorScheme* overrideColorScheme, GlobalNamespace::GameplayModifiers* gameplayModifiers, GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings, GlobalNamespace::PracticeSettings* practiceSettings, ::Il2CppString* backButtonText, bool useTestNoteCutSoundEffects, System::Action* beforeSceneSwitchCallback, System::Action_1<Zenject::DiContainer*>* afterSceneSwitchCallback, System::Action_2<GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*, GlobalNamespace::LevelCompletionResults*>* levelFinishedCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::StartStandardLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartStandardLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameMode), ::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(overrideEnvironmentSettings), ::il2cpp_utils::ExtractType(overrideColorScheme), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(playerSpecificSettings), ::il2cpp_utils::ExtractType(practiceSettings), ::il2cpp_utils::ExtractType(backButtonText), ::il2cpp_utils::ExtractType(useTestNoteCutSoundEffects), ::il2cpp_utils::ExtractType(beforeSceneSwitchCallback), ::il2cpp_utils::ExtractType(afterSceneSwitchCallback), ::il2cpp_utils::ExtractType(levelFinishedCallback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, gameMode, difficultyBeatmap, previewBeatmapLevel, overrideEnvironmentSettings, overrideColorScheme, gameplayModifiers, playerSpecificSettings, practiceSettings, backButtonText, useTestNoteCutSoundEffects, beforeSceneSwitchCallback, afterSceneSwitchCallback, levelFinishedCallback);
}
// Autogenerated method: MenuTransitionsHelper.StartMissionLevel
void GlobalNamespace::MenuTransitionsHelper::StartMissionLevel(::Il2CppString* missionId, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, GlobalNamespace::ColorScheme* overrideColorScheme, GlobalNamespace::GameplayModifiers* gameplayModifiers, ::Array<GlobalNamespace::MissionObjective*>* missionObjectives, GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings, System::Action* beforeSceneSwitchCallback, System::Action_2<GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*, GlobalNamespace::MissionCompletionResults*>* levelFinishedCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::StartMissionLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartMissionLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionId), ::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(overrideColorScheme), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(missionObjectives), ::il2cpp_utils::ExtractType(playerSpecificSettings), ::il2cpp_utils::ExtractType(beforeSceneSwitchCallback), ::il2cpp_utils::ExtractType(levelFinishedCallback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, missionId, difficultyBeatmap, previewBeatmapLevel, overrideColorScheme, gameplayModifiers, missionObjectives, playerSpecificSettings, beforeSceneSwitchCallback, levelFinishedCallback);
}
// Autogenerated method: MenuTransitionsHelper.StartMultiplayerLevel
void GlobalNamespace::MenuTransitionsHelper::StartMultiplayerLevel(::Il2CppString* gameMode, GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, GlobalNamespace::BeatmapDifficulty beatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::ColorScheme* overrideColorScheme, GlobalNamespace::GameplayModifiers* gameplayModifiers, GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings, GlobalNamespace::PracticeSettings* practiceSettings, ::Il2CppString* backButtonText, bool useTestNoteCutSoundEffects, System::Action* beforeSceneSwitchCallback, System::Action_2<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::MultiplayerResultsData*>* levelFinishedCallback, System::Action_1<GlobalNamespace::DisconnectedReason>* didDisconnectCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::StartMultiplayerLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartMultiplayerLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameMode), ::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(beatmapDifficulty), ::il2cpp_utils::ExtractType(beatmapCharacteristic), ::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(overrideColorScheme), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(playerSpecificSettings), ::il2cpp_utils::ExtractType(practiceSettings), ::il2cpp_utils::ExtractType(backButtonText), ::il2cpp_utils::ExtractType(useTestNoteCutSoundEffects), ::il2cpp_utils::ExtractType(beforeSceneSwitchCallback), ::il2cpp_utils::ExtractType(levelFinishedCallback), ::il2cpp_utils::ExtractType(didDisconnectCallback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, gameMode, previewBeatmapLevel, beatmapDifficulty, beatmapCharacteristic, difficultyBeatmap, overrideColorScheme, gameplayModifiers, playerSpecificSettings, practiceSettings, backButtonText, useTestNoteCutSoundEffects, beforeSceneSwitchCallback, levelFinishedCallback, didDisconnectCallback);
}
// Autogenerated method: MenuTransitionsHelper.StartMultiplayerLevel
void GlobalNamespace::MenuTransitionsHelper::StartMultiplayerLevel(::Il2CppString* gameMode, GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, GlobalNamespace::BeatmapDifficulty beatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::ColorScheme* overrideColorScheme, GlobalNamespace::GameplayModifiers* gameplayModifiers, GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings, GlobalNamespace::PracticeSettings* practiceSettings, ::Il2CppString* backButtonText, bool useTestNoteCutSoundEffects, System::Action* beforeSceneSwitchCallback, System::Action_1<Zenject::DiContainer*>* afterSceneSwitchCallback, System::Action_2<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::MultiplayerResultsData*>* levelFinishedCallback, System::Action_1<GlobalNamespace::DisconnectedReason>* didDisconnectCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::StartMultiplayerLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartMultiplayerLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameMode), ::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(beatmapDifficulty), ::il2cpp_utils::ExtractType(beatmapCharacteristic), ::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(overrideColorScheme), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(playerSpecificSettings), ::il2cpp_utils::ExtractType(practiceSettings), ::il2cpp_utils::ExtractType(backButtonText), ::il2cpp_utils::ExtractType(useTestNoteCutSoundEffects), ::il2cpp_utils::ExtractType(beforeSceneSwitchCallback), ::il2cpp_utils::ExtractType(afterSceneSwitchCallback), ::il2cpp_utils::ExtractType(levelFinishedCallback), ::il2cpp_utils::ExtractType(didDisconnectCallback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, gameMode, previewBeatmapLevel, beatmapDifficulty, beatmapCharacteristic, difficultyBeatmap, overrideColorScheme, gameplayModifiers, playerSpecificSettings, practiceSettings, backButtonText, useTestNoteCutSoundEffects, beforeSceneSwitchCallback, afterSceneSwitchCallback, levelFinishedCallback, didDisconnectCallback);
}
// Autogenerated method: MenuTransitionsHelper.StartTutorial
void GlobalNamespace::MenuTransitionsHelper::StartTutorial(System::Action* beforeSceneSwitchCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::StartTutorial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTutorial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beforeSceneSwitchCallback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beforeSceneSwitchCallback);
}
// Autogenerated method: MenuTransitionsHelper.ShowCredits
void GlobalNamespace::MenuTransitionsHelper::ShowCredits() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::ShowCredits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowCredits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuTransitionsHelper.StartBeatmapEditor
void GlobalNamespace::MenuTransitionsHelper::StartBeatmapEditor(System::Action* beatmapEditorFinishedCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::StartBeatmapEditor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartBeatmapEditor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEditorFinishedCallback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapEditorFinishedCallback);
}
// Autogenerated method: MenuTransitionsHelper.RestartGame
void GlobalNamespace::MenuTransitionsHelper::RestartGame(System::Action_1<Zenject::DiContainer*>* finishCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::RestartGame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RestartGame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finishCallback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, finishCallback);
}
// Autogenerated method: MenuTransitionsHelper.HandleMainGameSceneDidFinish
void GlobalNamespace::MenuTransitionsHelper::HandleMainGameSceneDidFinish(GlobalNamespace::StandardLevelScenesTransitionSetupDataSO* standardLevelScenesTransitionSetupData, GlobalNamespace::LevelCompletionResults* levelCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::HandleMainGameSceneDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMainGameSceneDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standardLevelScenesTransitionSetupData), ::il2cpp_utils::ExtractType(levelCompletionResults)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, standardLevelScenesTransitionSetupData, levelCompletionResults);
}
// Autogenerated method: MenuTransitionsHelper.HandleMultiplayerLevelDidFinish
void GlobalNamespace::MenuTransitionsHelper::HandleMultiplayerLevelDidFinish(GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO* multiplayerLevelScenesTransitionSetupData, GlobalNamespace::MultiplayerResultsData* multiplayerResultsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::HandleMultiplayerLevelDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerLevelDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplayerLevelScenesTransitionSetupData), ::il2cpp_utils::ExtractType(multiplayerResultsData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, multiplayerLevelScenesTransitionSetupData, multiplayerResultsData);
}
// Autogenerated method: MenuTransitionsHelper.HandleMultiplayerLevelDidDisconnect
void GlobalNamespace::MenuTransitionsHelper::HandleMultiplayerLevelDidDisconnect(GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO* multiplayerLevelScenesTransitionSetupData, GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::HandleMultiplayerLevelDidDisconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerLevelDidDisconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplayerLevelScenesTransitionSetupData), ::il2cpp_utils::ExtractType(disconnectedReason)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, multiplayerLevelScenesTransitionSetupData, disconnectedReason);
}
// Autogenerated method: MenuTransitionsHelper.HandleMissionLevelSceneDidFinish
void GlobalNamespace::MenuTransitionsHelper::HandleMissionLevelSceneDidFinish(GlobalNamespace::MissionLevelScenesTransitionSetupDataSO* missionLevelScenesTransitionSetupData, GlobalNamespace::MissionCompletionResults* missionCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::HandleMissionLevelSceneDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMissionLevelSceneDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionLevelScenesTransitionSetupData), ::il2cpp_utils::ExtractType(missionCompletionResults)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, missionLevelScenesTransitionSetupData, missionCompletionResults);
}
// Autogenerated method: MenuTransitionsHelper.HandleTutorialSceneDidFinish
void GlobalNamespace::MenuTransitionsHelper::HandleTutorialSceneDidFinish(GlobalNamespace::TutorialScenesTransitionSetupDataSO* tutorialSceneTransitionSetupData, GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType endState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::HandleTutorialSceneDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleTutorialSceneDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tutorialSceneTransitionSetupData), ::il2cpp_utils::ExtractType(endState)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tutorialSceneTransitionSetupData, endState);
}
// Autogenerated method: MenuTransitionsHelper.HandleCreditsSceneDidFinish
void GlobalNamespace::MenuTransitionsHelper::HandleCreditsSceneDidFinish(GlobalNamespace::CreditsScenesTransitionSetupDataSO* creditsSceneTransitionSetupData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::HandleCreditsSceneDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCreditsSceneDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(creditsSceneTransitionSetupData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, creditsSceneTransitionSetupData);
}
// Autogenerated method: MenuTransitionsHelper.HandleBeatmapEditorSceneDidFinish
void GlobalNamespace::MenuTransitionsHelper::HandleBeatmapEditorSceneDidFinish(GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO* beatmapEditorScenesTransitionSetupData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::HandleBeatmapEditorSceneDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapEditorSceneDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEditorScenesTransitionSetupData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapEditorScenesTransitionSetupData);
}
// Autogenerated method: MenuTransitionsHelper.<HandleBeatmapEditorSceneDidFinish>b__29_0
void GlobalNamespace::MenuTransitionsHelper::$HandleBeatmapEditorSceneDidFinish$b__29_0(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::<HandleBeatmapEditorSceneDidFinish>b__29_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleBeatmapEditorSceneDidFinish>b__29_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Writing MetadataGetter for method: MenuTransitionsHelper::StartStandardLevel
// Il2CppName: StartStandardLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::*)(::Il2CppString*, GlobalNamespace::IDifficultyBeatmap*, GlobalNamespace::IPreviewBeatmapLevel*, GlobalNamespace::OverrideEnvironmentSettings*, GlobalNamespace::ColorScheme*, GlobalNamespace::GameplayModifiers*, GlobalNamespace::PlayerSpecificSettings*, GlobalNamespace::PracticeSettings*, ::Il2CppString*, bool, System::Action*, System::Action_2<GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*, GlobalNamespace::LevelCompletionResults*>*)>(&MenuTransitionsHelper::StartStandardLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper*), "StartStandardLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OverrideEnvironmentSettings*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ColorScheme*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifiers*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSpecificSettings*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PracticeSettings*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<System::Action*>(), ::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*, GlobalNamespace::LevelCompletionResults*>*>()});
  }
};
// Writing MetadataGetter for method: MenuTransitionsHelper::StartStandardLevel
// Il2CppName: StartStandardLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::*)(::Il2CppString*, GlobalNamespace::IDifficultyBeatmap*, GlobalNamespace::IPreviewBeatmapLevel*, GlobalNamespace::OverrideEnvironmentSettings*, GlobalNamespace::ColorScheme*, GlobalNamespace::GameplayModifiers*, GlobalNamespace::PlayerSpecificSettings*, GlobalNamespace::PracticeSettings*, ::Il2CppString*, bool, System::Action*, System::Action_1<Zenject::DiContainer*>*, System::Action_2<GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*, GlobalNamespace::LevelCompletionResults*>*)>(&MenuTransitionsHelper::StartStandardLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper*), "StartStandardLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OverrideEnvironmentSettings*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ColorScheme*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifiers*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSpecificSettings*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PracticeSettings*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<System::Action*>(), ::il2cpp_utils::ExtractIndependentType<System::Action_1<Zenject::DiContainer*>*>(), ::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*, GlobalNamespace::LevelCompletionResults*>*>()});
  }
};
// Writing MetadataGetter for method: MenuTransitionsHelper::StartMissionLevel
// Il2CppName: StartMissionLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::*)(::Il2CppString*, GlobalNamespace::IDifficultyBeatmap*, GlobalNamespace::IPreviewBeatmapLevel*, GlobalNamespace::ColorScheme*, GlobalNamespace::GameplayModifiers*, ::Array<GlobalNamespace::MissionObjective*>*, GlobalNamespace::PlayerSpecificSettings*, System::Action*, System::Action_2<GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*, GlobalNamespace::MissionCompletionResults*>*)>(&MenuTransitionsHelper::StartMissionLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper*), "StartMissionLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ColorScheme*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifiers*>(), ::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::MissionObjective*>*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSpecificSettings*>(), ::il2cpp_utils::ExtractIndependentType<System::Action*>(), ::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*, GlobalNamespace::MissionCompletionResults*>*>()});
  }
};
// Writing MetadataGetter for method: MenuTransitionsHelper::StartMultiplayerLevel
// Il2CppName: StartMultiplayerLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::*)(::Il2CppString*, GlobalNamespace::IPreviewBeatmapLevel*, GlobalNamespace::BeatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO*, GlobalNamespace::IDifficultyBeatmap*, GlobalNamespace::ColorScheme*, GlobalNamespace::GameplayModifiers*, GlobalNamespace::PlayerSpecificSettings*, GlobalNamespace::PracticeSettings*, ::Il2CppString*, bool, System::Action*, System::Action_2<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::MultiplayerResultsData*>*, System::Action_1<GlobalNamespace::DisconnectedReason>*)>(&MenuTransitionsHelper::StartMultiplayerLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper*), "StartMultiplayerLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficulty>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicSO*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ColorScheme*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifiers*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSpecificSettings*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PracticeSettings*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<System::Action*>(), ::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::MultiplayerResultsData*>*>(), ::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::DisconnectedReason>*>()});
  }
};
// Writing MetadataGetter for method: MenuTransitionsHelper::StartMultiplayerLevel
// Il2CppName: StartMultiplayerLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::*)(::Il2CppString*, GlobalNamespace::IPreviewBeatmapLevel*, GlobalNamespace::BeatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO*, GlobalNamespace::IDifficultyBeatmap*, GlobalNamespace::ColorScheme*, GlobalNamespace::GameplayModifiers*, GlobalNamespace::PlayerSpecificSettings*, GlobalNamespace::PracticeSettings*, ::Il2CppString*, bool, System::Action*, System::Action_1<Zenject::DiContainer*>*, System::Action_2<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::MultiplayerResultsData*>*, System::Action_1<GlobalNamespace::DisconnectedReason>*)>(&MenuTransitionsHelper::StartMultiplayerLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper*), "StartMultiplayerLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficulty>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicSO*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ColorScheme*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifiers*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSpecificSettings*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PracticeSettings*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<System::Action*>(), ::il2cpp_utils::ExtractIndependentType<System::Action_1<Zenject::DiContainer*>*>(), ::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::MultiplayerResultsData*>*>(), ::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::DisconnectedReason>*>()});
  }
};
// Writing MetadataGetter for method: MenuTransitionsHelper::StartTutorial
// Il2CppName: StartTutorial
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::*)(System::Action*)>(&MenuTransitionsHelper::StartTutorial)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper*), "StartTutorial", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: MenuTransitionsHelper::ShowCredits
// Il2CppName: ShowCredits
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::*)()>(&MenuTransitionsHelper::ShowCredits)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper*), "ShowCredits", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MenuTransitionsHelper::StartBeatmapEditor
// Il2CppName: StartBeatmapEditor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::*)(System::Action*)>(&MenuTransitionsHelper::StartBeatmapEditor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper*), "StartBeatmapEditor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: MenuTransitionsHelper::RestartGame
// Il2CppName: RestartGame
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::*)(System::Action_1<Zenject::DiContainer*>*)>(&MenuTransitionsHelper::RestartGame)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper*), "RestartGame", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<Zenject::DiContainer*>*>()});
  }
};
// Writing MetadataGetter for method: MenuTransitionsHelper::HandleMainGameSceneDidFinish
// Il2CppName: HandleMainGameSceneDidFinish
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::*)(GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*, GlobalNamespace::LevelCompletionResults*)>(&MenuTransitionsHelper::HandleMainGameSceneDidFinish)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper*), "HandleMainGameSceneDidFinish", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::LevelCompletionResults*>()});
  }
};
// Writing MetadataGetter for method: MenuTransitionsHelper::HandleMultiplayerLevelDidFinish
// Il2CppName: HandleMultiplayerLevelDidFinish
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::*)(GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::MultiplayerResultsData*)>(&MenuTransitionsHelper::HandleMultiplayerLevelDidFinish)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper*), "HandleMultiplayerLevelDidFinish", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MultiplayerResultsData*>()});
  }
};
// Writing MetadataGetter for method: MenuTransitionsHelper::HandleMultiplayerLevelDidDisconnect
// Il2CppName: HandleMultiplayerLevelDidDisconnect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::*)(GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::DisconnectedReason)>(&MenuTransitionsHelper::HandleMultiplayerLevelDidDisconnect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper*), "HandleMultiplayerLevelDidDisconnect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::DisconnectedReason>()});
  }
};
// Writing MetadataGetter for method: MenuTransitionsHelper::HandleMissionLevelSceneDidFinish
// Il2CppName: HandleMissionLevelSceneDidFinish
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::*)(GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*, GlobalNamespace::MissionCompletionResults*)>(&MenuTransitionsHelper::HandleMissionLevelSceneDidFinish)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper*), "HandleMissionLevelSceneDidFinish", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MissionCompletionResults*>()});
  }
};
// Writing MetadataGetter for method: MenuTransitionsHelper::HandleTutorialSceneDidFinish
// Il2CppName: HandleTutorialSceneDidFinish
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::*)(GlobalNamespace::TutorialScenesTransitionSetupDataSO*, GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType)>(&MenuTransitionsHelper::HandleTutorialSceneDidFinish)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper*), "HandleTutorialSceneDidFinish", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::TutorialScenesTransitionSetupDataSO*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType>()});
  }
};
// Writing MetadataGetter for method: MenuTransitionsHelper::HandleCreditsSceneDidFinish
// Il2CppName: HandleCreditsSceneDidFinish
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::*)(GlobalNamespace::CreditsScenesTransitionSetupDataSO*)>(&MenuTransitionsHelper::HandleCreditsSceneDidFinish)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper*), "HandleCreditsSceneDidFinish", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::CreditsScenesTransitionSetupDataSO*>()});
  }
};
// Writing MetadataGetter for method: MenuTransitionsHelper::HandleBeatmapEditorSceneDidFinish
// Il2CppName: HandleBeatmapEditorSceneDidFinish
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::*)(GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO*)>(&MenuTransitionsHelper::HandleBeatmapEditorSceneDidFinish)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper*), "HandleBeatmapEditorSceneDidFinish", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO*>()});
  }
};
// Writing MetadataGetter for method: MenuTransitionsHelper::$HandleBeatmapEditorSceneDidFinish$b__29_0
// Il2CppName: <HandleBeatmapEditorSceneDidFinish>b__29_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::*)(Zenject::DiContainer*)>(&MenuTransitionsHelper::$HandleBeatmapEditorSceneDidFinish$b__29_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper*), "<HandleBeatmapEditorSceneDidFinish>b__29_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Zenject::DiContainer*>()});
  }
};
// Writing MetadataGetter for method: MenuTransitionsHelper::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::*)()>(&MenuTransitionsHelper::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::*)()>(&MenuTransitionsHelper::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuTransitionsHelper/<>c
#include "GlobalNamespace/MenuTransitionsHelper_--c.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly MenuTransitionsHelper/<>c <>9
GlobalNamespace::MenuTransitionsHelper::$$c* GlobalNamespace::MenuTransitionsHelper::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::MenuTransitionsHelper::$$c*>("", "MenuTransitionsHelper/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly MenuTransitionsHelper/<>c <>9
void GlobalNamespace::MenuTransitionsHelper::$$c::_set_$$9(GlobalNamespace::MenuTransitionsHelper::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MenuTransitionsHelper/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action <>9__21_0
System::Action* GlobalNamespace::MenuTransitionsHelper::$$c::_get_$$9__21_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::$$c::_get_$$9__21_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Action*>("", "MenuTransitionsHelper/<>c", "<>9__21_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action <>9__21_0
void GlobalNamespace::MenuTransitionsHelper::$$c::_set_$$9__21_0(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::$$c::_set_$$9__21_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MenuTransitionsHelper/<>c", "<>9__21_0", value)));
}
// Autogenerated method: MenuTransitionsHelper/<>c..cctor
void GlobalNamespace::MenuTransitionsHelper::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MenuTransitionsHelper/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MenuTransitionsHelper/<>c.<StartBeatmapEditor>b__21_0
void GlobalNamespace::MenuTransitionsHelper::$$c::$StartBeatmapEditor$b__21_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::$$c::<StartBeatmapEditor>b__21_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartBeatmapEditor>b__21_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MenuTransitionsHelper::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&MenuTransitionsHelper::$$c::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MenuTransitionsHelper::$$c::$StartBeatmapEditor$b__21_0
// Il2CppName: <StartBeatmapEditor>b__21_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::$$c::*)()>(&MenuTransitionsHelper::$$c::$StartBeatmapEditor$b__21_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper::$$c*), "<StartBeatmapEditor>b__21_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MenuTransitionsHelper::$$c::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::$$c::*)()>(&MenuTransitionsHelper::$$c::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::$$c::*)()>(&MenuTransitionsHelper::$$c::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuTransitionsHelper/<>c__DisplayClass23_0
#include "GlobalNamespace/MenuTransitionsHelper_--c__DisplayClass23_0.hpp"
// Including type: StandardLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/StandardLevelScenesTransitionSetupDataSO.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MenuTransitionsHelper/<>c__DisplayClass23_0.<HandleMainGameSceneDidFinish>b__0
void GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass23_0::$HandleMainGameSceneDidFinish$b__0(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass23_0::<HandleMainGameSceneDidFinish>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleMainGameSceneDidFinish>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Writing MetadataGetter for method: MenuTransitionsHelper::$$c__DisplayClass23_0::$HandleMainGameSceneDidFinish$b__0
// Il2CppName: <HandleMainGameSceneDidFinish>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::$$c__DisplayClass23_0::*)(Zenject::DiContainer*)>(&MenuTransitionsHelper::$$c__DisplayClass23_0::$HandleMainGameSceneDidFinish$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper::$$c__DisplayClass23_0*), "<HandleMainGameSceneDidFinish>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Zenject::DiContainer*>()});
  }
};
// Writing MetadataGetter for method: MenuTransitionsHelper::$$c__DisplayClass23_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::$$c__DisplayClass23_0::*)()>(&MenuTransitionsHelper::$$c__DisplayClass23_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper::$$c__DisplayClass23_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::$$c__DisplayClass23_0::*)()>(&MenuTransitionsHelper::$$c__DisplayClass23_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper::$$c__DisplayClass23_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuTransitionsHelper/<>c__DisplayClass24_0
#include "GlobalNamespace/MenuTransitionsHelper_--c__DisplayClass24_0.hpp"
// Including type: MultiplayerLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MultiplayerLevelScenesTransitionSetupDataSO.hpp"
// Including type: MultiplayerResultsData
#include "GlobalNamespace/MultiplayerResultsData.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MenuTransitionsHelper/<>c__DisplayClass24_0.<HandleMultiplayerLevelDidFinish>b__0
void GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass24_0::$HandleMultiplayerLevelDidFinish$b__0(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass24_0::<HandleMultiplayerLevelDidFinish>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleMultiplayerLevelDidFinish>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Writing MetadataGetter for method: MenuTransitionsHelper::$$c__DisplayClass24_0::$HandleMultiplayerLevelDidFinish$b__0
// Il2CppName: <HandleMultiplayerLevelDidFinish>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::$$c__DisplayClass24_0::*)(Zenject::DiContainer*)>(&MenuTransitionsHelper::$$c__DisplayClass24_0::$HandleMultiplayerLevelDidFinish$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper::$$c__DisplayClass24_0*), "<HandleMultiplayerLevelDidFinish>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Zenject::DiContainer*>()});
  }
};
// Writing MetadataGetter for method: MenuTransitionsHelper::$$c__DisplayClass24_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::$$c__DisplayClass24_0::*)()>(&MenuTransitionsHelper::$$c__DisplayClass24_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper::$$c__DisplayClass24_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::$$c__DisplayClass24_0::*)()>(&MenuTransitionsHelper::$$c__DisplayClass24_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper::$$c__DisplayClass24_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuTransitionsHelper/<>c__DisplayClass25_0
#include "GlobalNamespace/MenuTransitionsHelper_--c__DisplayClass25_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MenuTransitionsHelper/<>c__DisplayClass25_0.<HandleMultiplayerLevelDidDisconnect>b__0
void GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass25_0::$HandleMultiplayerLevelDidDisconnect$b__0(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass25_0::<HandleMultiplayerLevelDidDisconnect>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleMultiplayerLevelDidDisconnect>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Writing MetadataGetter for method: MenuTransitionsHelper::$$c__DisplayClass25_0::$HandleMultiplayerLevelDidDisconnect$b__0
// Il2CppName: <HandleMultiplayerLevelDidDisconnect>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::$$c__DisplayClass25_0::*)(Zenject::DiContainer*)>(&MenuTransitionsHelper::$$c__DisplayClass25_0::$HandleMultiplayerLevelDidDisconnect$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper::$$c__DisplayClass25_0*), "<HandleMultiplayerLevelDidDisconnect>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Zenject::DiContainer*>()});
  }
};
// Writing MetadataGetter for method: MenuTransitionsHelper::$$c__DisplayClass25_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::$$c__DisplayClass25_0::*)()>(&MenuTransitionsHelper::$$c__DisplayClass25_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper::$$c__DisplayClass25_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::$$c__DisplayClass25_0::*)()>(&MenuTransitionsHelper::$$c__DisplayClass25_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper::$$c__DisplayClass25_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuTransitionsHelper/<>c__DisplayClass26_0
#include "GlobalNamespace/MenuTransitionsHelper_--c__DisplayClass26_0.hpp"
// Including type: MissionLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MissionLevelScenesTransitionSetupDataSO.hpp"
// Including type: MissionCompletionResults
#include "GlobalNamespace/MissionCompletionResults.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MenuTransitionsHelper/<>c__DisplayClass26_0.<HandleMissionLevelSceneDidFinish>b__0
void GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass26_0::$HandleMissionLevelSceneDidFinish$b__0(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass26_0::<HandleMissionLevelSceneDidFinish>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleMissionLevelSceneDidFinish>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Writing MetadataGetter for method: MenuTransitionsHelper::$$c__DisplayClass26_0::$HandleMissionLevelSceneDidFinish$b__0
// Il2CppName: <HandleMissionLevelSceneDidFinish>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::$$c__DisplayClass26_0::*)(Zenject::DiContainer*)>(&MenuTransitionsHelper::$$c__DisplayClass26_0::$HandleMissionLevelSceneDidFinish$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper::$$c__DisplayClass26_0*), "<HandleMissionLevelSceneDidFinish>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Zenject::DiContainer*>()});
  }
};
// Writing MetadataGetter for method: MenuTransitionsHelper::$$c__DisplayClass26_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::$$c__DisplayClass26_0::*)()>(&MenuTransitionsHelper::$$c__DisplayClass26_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper::$$c__DisplayClass26_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::$$c__DisplayClass26_0::*)()>(&MenuTransitionsHelper::$$c__DisplayClass26_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper::$$c__DisplayClass26_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuTransitionsHelper/<>c__DisplayClass27_0
#include "GlobalNamespace/MenuTransitionsHelper_--c__DisplayClass27_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MenuTransitionsHelper/<>c__DisplayClass27_0.<HandleTutorialSceneDidFinish>b__0
void GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass27_0::$HandleTutorialSceneDidFinish$b__0(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass27_0::<HandleTutorialSceneDidFinish>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleTutorialSceneDidFinish>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Writing MetadataGetter for method: MenuTransitionsHelper::$$c__DisplayClass27_0::$HandleTutorialSceneDidFinish$b__0
// Il2CppName: <HandleTutorialSceneDidFinish>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::$$c__DisplayClass27_0::*)(Zenject::DiContainer*)>(&MenuTransitionsHelper::$$c__DisplayClass27_0::$HandleTutorialSceneDidFinish$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper::$$c__DisplayClass27_0*), "<HandleTutorialSceneDidFinish>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Zenject::DiContainer*>()});
  }
};
// Writing MetadataGetter for method: MenuTransitionsHelper::$$c__DisplayClass27_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::$$c__DisplayClass27_0::*)()>(&MenuTransitionsHelper::$$c__DisplayClass27_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper::$$c__DisplayClass27_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MenuTransitionsHelper::$$c__DisplayClass27_0::*)()>(&MenuTransitionsHelper::$$c__DisplayClass27_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MenuTransitionsHelper::$$c__DisplayClass27_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MissionLevelScenesTransitionSetupDataSO.hpp"
// Including type: SceneInfo
#include "GlobalNamespace/SceneInfo.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: MissionCompletionResults
#include "GlobalNamespace/MissionCompletionResults.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: MissionObjective
#include "GlobalNamespace/MissionObjective.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionLevelScenesTransitionSetupDataSO.add_didFinishEvent
void GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::add_didFinishEvent(System::Action_2<GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*, GlobalNamespace::MissionCompletionResults*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionLevelScenesTransitionSetupDataSO.remove_didFinishEvent
void GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::remove_didFinishEvent(System::Action_2<GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*, GlobalNamespace::MissionCompletionResults*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionLevelScenesTransitionSetupDataSO.get_missionId
::Il2CppString* GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::get_missionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::get_missionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_missionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MissionLevelScenesTransitionSetupDataSO.set_missionId
void GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::set_missionId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::set_missionId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_missionId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionLevelScenesTransitionSetupDataSO.get_difficultyBeatmap
GlobalNamespace::IDifficultyBeatmap* GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::get_difficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::get_difficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IDifficultyBeatmap*, false>(this, ___internal__method);
}
// Autogenerated method: MissionLevelScenesTransitionSetupDataSO.set_difficultyBeatmap
void GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::set_difficultyBeatmap(GlobalNamespace::IDifficultyBeatmap* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::set_difficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_difficultyBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionLevelScenesTransitionSetupDataSO.Init
void GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::Init(::Il2CppString* missionId, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, ::Array<GlobalNamespace::MissionObjective*>* missionObjectives, GlobalNamespace::ColorScheme* overrideColorScheme, GlobalNamespace::GameplayModifiers* gameplayModifiers, GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings, ::Il2CppString* backButtonText) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionId), ::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(missionObjectives), ::il2cpp_utils::ExtractType(overrideColorScheme), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(playerSpecificSettings), ::il2cpp_utils::ExtractType(backButtonText)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, missionId, difficultyBeatmap, previewBeatmapLevel, missionObjectives, overrideColorScheme, gameplayModifiers, playerSpecificSettings, backButtonText);
}
// Autogenerated method: MissionLevelScenesTransitionSetupDataSO.Finish
void GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::Finish(GlobalNamespace::MissionCompletionResults* levelCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::Finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelCompletionResults);
}
// Writing MetadataGetter for method: MissionLevelScenesTransitionSetupDataSO::add_didFinishEvent
// Il2CppName: add_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionLevelScenesTransitionSetupDataSO::*)(System::Action_2<GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*, GlobalNamespace::MissionCompletionResults*>*)>(&MissionLevelScenesTransitionSetupDataSO::add_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionLevelScenesTransitionSetupDataSO*), "add_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*, GlobalNamespace::MissionCompletionResults*>*>()});
  }
};
// Writing MetadataGetter for method: MissionLevelScenesTransitionSetupDataSO::remove_didFinishEvent
// Il2CppName: remove_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionLevelScenesTransitionSetupDataSO::*)(System::Action_2<GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*, GlobalNamespace::MissionCompletionResults*>*)>(&MissionLevelScenesTransitionSetupDataSO::remove_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionLevelScenesTransitionSetupDataSO*), "remove_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*, GlobalNamespace::MissionCompletionResults*>*>()});
  }
};
// Writing MetadataGetter for method: MissionLevelScenesTransitionSetupDataSO::get_missionId
// Il2CppName: get_missionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (MissionLevelScenesTransitionSetupDataSO::*)()>(&MissionLevelScenesTransitionSetupDataSO::get_missionId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionLevelScenesTransitionSetupDataSO*), "get_missionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MissionLevelScenesTransitionSetupDataSO::set_missionId
// Il2CppName: set_missionId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionLevelScenesTransitionSetupDataSO::*)(::Il2CppString*)>(&MissionLevelScenesTransitionSetupDataSO::set_missionId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionLevelScenesTransitionSetupDataSO*), "set_missionId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: MissionLevelScenesTransitionSetupDataSO::get_difficultyBeatmap
// Il2CppName: get_difficultyBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::IDifficultyBeatmap* (MissionLevelScenesTransitionSetupDataSO::*)()>(&MissionLevelScenesTransitionSetupDataSO::get_difficultyBeatmap)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionLevelScenesTransitionSetupDataSO*), "get_difficultyBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MissionLevelScenesTransitionSetupDataSO::set_difficultyBeatmap
// Il2CppName: set_difficultyBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionLevelScenesTransitionSetupDataSO::*)(GlobalNamespace::IDifficultyBeatmap*)>(&MissionLevelScenesTransitionSetupDataSO::set_difficultyBeatmap)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionLevelScenesTransitionSetupDataSO*), "set_difficultyBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>()});
  }
};
// Writing MetadataGetter for method: MissionLevelScenesTransitionSetupDataSO::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionLevelScenesTransitionSetupDataSO::*)(::Il2CppString*, GlobalNamespace::IDifficultyBeatmap*, GlobalNamespace::IPreviewBeatmapLevel*, ::Array<GlobalNamespace::MissionObjective*>*, GlobalNamespace::ColorScheme*, GlobalNamespace::GameplayModifiers*, GlobalNamespace::PlayerSpecificSettings*, ::Il2CppString*)>(&MissionLevelScenesTransitionSetupDataSO::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionLevelScenesTransitionSetupDataSO*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>(), ::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::MissionObjective*>*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ColorScheme*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifiers*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSpecificSettings*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: MissionLevelScenesTransitionSetupDataSO::Finish
// Il2CppName: Finish
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionLevelScenesTransitionSetupDataSO::*)(GlobalNamespace::MissionCompletionResults*)>(&MissionLevelScenesTransitionSetupDataSO::Finish)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionLevelScenesTransitionSetupDataSO*), "Finish", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MissionCompletionResults*>()});
  }
};
// Writing MetadataGetter for method: MissionLevelScenesTransitionSetupDataSO::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionLevelScenesTransitionSetupDataSO::*)()>(&MissionLevelScenesTransitionSetupDataSO::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionLevelScenesTransitionSetupDataSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionLevelScenesTransitionSetupDataSO::*)()>(&MissionLevelScenesTransitionSetupDataSO::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionLevelScenesTransitionSetupDataSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MultiplayerLevelScenesTransitionSetupDataSO.hpp"
// Including type: SceneInfo
#include "GlobalNamespace/SceneInfo.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: MultiplayerResultsData
#include "GlobalNamespace/MultiplayerResultsData.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: PracticeSettings
#include "GlobalNamespace/PracticeSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.add_didFinishEvent
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::add_didFinishEvent(System::Action_2<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::MultiplayerResultsData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.remove_didFinishEvent
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::remove_didFinishEvent(System::Action_2<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::MultiplayerResultsData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.add_didDisconnectEvent
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::add_didDisconnectEvent(System::Action_2<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::add_didDisconnectEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didDisconnectEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.remove_didDisconnectEvent
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::remove_didDisconnectEvent(System::Action_2<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::remove_didDisconnectEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didDisconnectEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.get_gameMode
::Il2CppString* GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::get_gameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::get_gameMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.set_gameMode
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::set_gameMode(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::set_gameMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gameMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.get_previewBeatmapLevel
GlobalNamespace::IPreviewBeatmapLevel* GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::get_previewBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::get_previewBeatmapLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_previewBeatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IPreviewBeatmapLevel*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.set_previewBeatmapLevel
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::set_previewBeatmapLevel(GlobalNamespace::IPreviewBeatmapLevel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::set_previewBeatmapLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_previewBeatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.get_beatmapDifficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::get_beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::get_beatmapDifficulty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapDifficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapDifficulty, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.set_beatmapDifficulty
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::set_beatmapDifficulty(GlobalNamespace::BeatmapDifficulty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::set_beatmapDifficulty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_beatmapDifficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.get_difficultyBeatmap
GlobalNamespace::IDifficultyBeatmap* GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::get_difficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::get_difficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IDifficultyBeatmap*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.set_difficultyBeatmap
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::set_difficultyBeatmap(GlobalNamespace::IDifficultyBeatmap* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::set_difficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_difficultyBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.get_beatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::get_beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::get_beatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.set_beatmapCharacteristic
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::set_beatmapCharacteristic(GlobalNamespace::BeatmapCharacteristicSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::set_beatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.Init
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::Init(::Il2CppString* gameMode, GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, GlobalNamespace::BeatmapDifficulty beatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::ColorScheme* overrideColorScheme, GlobalNamespace::GameplayModifiers* gameplayModifiers, GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings, GlobalNamespace::PracticeSettings* practiceSettings, bool useTestNoteCutSoundEffects) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameMode), ::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(beatmapDifficulty), ::il2cpp_utils::ExtractType(beatmapCharacteristic), ::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(overrideColorScheme), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(playerSpecificSettings), ::il2cpp_utils::ExtractType(practiceSettings), ::il2cpp_utils::ExtractType(useTestNoteCutSoundEffects)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, gameMode, previewBeatmapLevel, beatmapDifficulty, beatmapCharacteristic, difficultyBeatmap, overrideColorScheme, gameplayModifiers, playerSpecificSettings, practiceSettings, useTestNoteCutSoundEffects);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.Finish
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::Finish(GlobalNamespace::MultiplayerResultsData* resultsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::Finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resultsData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, resultsData);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.FinishWithDisconnect
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::FinishWithDisconnect(GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::FinishWithDisconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinishWithDisconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Writing MetadataGetter for method: MultiplayerLevelScenesTransitionSetupDataSO::add_didFinishEvent
// Il2CppName: add_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLevelScenesTransitionSetupDataSO::*)(System::Action_2<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::MultiplayerResultsData*>*)>(&MultiplayerLevelScenesTransitionSetupDataSO::add_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelScenesTransitionSetupDataSO*), "add_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::MultiplayerResultsData*>*>()});
  }
};
// Writing MetadataGetter for method: MultiplayerLevelScenesTransitionSetupDataSO::remove_didFinishEvent
// Il2CppName: remove_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLevelScenesTransitionSetupDataSO::*)(System::Action_2<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::MultiplayerResultsData*>*)>(&MultiplayerLevelScenesTransitionSetupDataSO::remove_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelScenesTransitionSetupDataSO*), "remove_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::MultiplayerResultsData*>*>()});
  }
};
// Writing MetadataGetter for method: MultiplayerLevelScenesTransitionSetupDataSO::add_didDisconnectEvent
// Il2CppName: add_didDisconnectEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLevelScenesTransitionSetupDataSO::*)(System::Action_2<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::DisconnectedReason>*)>(&MultiplayerLevelScenesTransitionSetupDataSO::add_didDisconnectEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelScenesTransitionSetupDataSO*), "add_didDisconnectEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::DisconnectedReason>*>()});
  }
};
// Writing MetadataGetter for method: MultiplayerLevelScenesTransitionSetupDataSO::remove_didDisconnectEvent
// Il2CppName: remove_didDisconnectEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLevelScenesTransitionSetupDataSO::*)(System::Action_2<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::DisconnectedReason>*)>(&MultiplayerLevelScenesTransitionSetupDataSO::remove_didDisconnectEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelScenesTransitionSetupDataSO*), "remove_didDisconnectEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::DisconnectedReason>*>()});
  }
};
// Writing MetadataGetter for method: MultiplayerLevelScenesTransitionSetupDataSO::get_gameMode
// Il2CppName: get_gameMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (MultiplayerLevelScenesTransitionSetupDataSO::*)()>(&MultiplayerLevelScenesTransitionSetupDataSO::get_gameMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelScenesTransitionSetupDataSO*), "get_gameMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MultiplayerLevelScenesTransitionSetupDataSO::set_gameMode
// Il2CppName: set_gameMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLevelScenesTransitionSetupDataSO::*)(::Il2CppString*)>(&MultiplayerLevelScenesTransitionSetupDataSO::set_gameMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelScenesTransitionSetupDataSO*), "set_gameMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: MultiplayerLevelScenesTransitionSetupDataSO::get_previewBeatmapLevel
// Il2CppName: get_previewBeatmapLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::IPreviewBeatmapLevel* (MultiplayerLevelScenesTransitionSetupDataSO::*)()>(&MultiplayerLevelScenesTransitionSetupDataSO::get_previewBeatmapLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelScenesTransitionSetupDataSO*), "get_previewBeatmapLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MultiplayerLevelScenesTransitionSetupDataSO::set_previewBeatmapLevel
// Il2CppName: set_previewBeatmapLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLevelScenesTransitionSetupDataSO::*)(GlobalNamespace::IPreviewBeatmapLevel*)>(&MultiplayerLevelScenesTransitionSetupDataSO::set_previewBeatmapLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelScenesTransitionSetupDataSO*), "set_previewBeatmapLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>()});
  }
};
// Writing MetadataGetter for method: MultiplayerLevelScenesTransitionSetupDataSO::get_beatmapDifficulty
// Il2CppName: get_beatmapDifficulty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::BeatmapDifficulty (MultiplayerLevelScenesTransitionSetupDataSO::*)()>(&MultiplayerLevelScenesTransitionSetupDataSO::get_beatmapDifficulty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelScenesTransitionSetupDataSO*), "get_beatmapDifficulty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MultiplayerLevelScenesTransitionSetupDataSO::set_beatmapDifficulty
// Il2CppName: set_beatmapDifficulty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLevelScenesTransitionSetupDataSO::*)(GlobalNamespace::BeatmapDifficulty)>(&MultiplayerLevelScenesTransitionSetupDataSO::set_beatmapDifficulty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelScenesTransitionSetupDataSO*), "set_beatmapDifficulty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficulty>()});
  }
};
// Writing MetadataGetter for method: MultiplayerLevelScenesTransitionSetupDataSO::get_difficultyBeatmap
// Il2CppName: get_difficultyBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::IDifficultyBeatmap* (MultiplayerLevelScenesTransitionSetupDataSO::*)()>(&MultiplayerLevelScenesTransitionSetupDataSO::get_difficultyBeatmap)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelScenesTransitionSetupDataSO*), "get_difficultyBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MultiplayerLevelScenesTransitionSetupDataSO::set_difficultyBeatmap
// Il2CppName: set_difficultyBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLevelScenesTransitionSetupDataSO::*)(GlobalNamespace::IDifficultyBeatmap*)>(&MultiplayerLevelScenesTransitionSetupDataSO::set_difficultyBeatmap)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelScenesTransitionSetupDataSO*), "set_difficultyBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>()});
  }
};
// Writing MetadataGetter for method: MultiplayerLevelScenesTransitionSetupDataSO::get_beatmapCharacteristic
// Il2CppName: get_beatmapCharacteristic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::BeatmapCharacteristicSO* (MultiplayerLevelScenesTransitionSetupDataSO::*)()>(&MultiplayerLevelScenesTransitionSetupDataSO::get_beatmapCharacteristic)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelScenesTransitionSetupDataSO*), "get_beatmapCharacteristic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MultiplayerLevelScenesTransitionSetupDataSO::set_beatmapCharacteristic
// Il2CppName: set_beatmapCharacteristic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLevelScenesTransitionSetupDataSO::*)(GlobalNamespace::BeatmapCharacteristicSO*)>(&MultiplayerLevelScenesTransitionSetupDataSO::set_beatmapCharacteristic)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelScenesTransitionSetupDataSO*), "set_beatmapCharacteristic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicSO*>()});
  }
};
// Writing MetadataGetter for method: MultiplayerLevelScenesTransitionSetupDataSO::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLevelScenesTransitionSetupDataSO::*)(::Il2CppString*, GlobalNamespace::IPreviewBeatmapLevel*, GlobalNamespace::BeatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO*, GlobalNamespace::IDifficultyBeatmap*, GlobalNamespace::ColorScheme*, GlobalNamespace::GameplayModifiers*, GlobalNamespace::PlayerSpecificSettings*, GlobalNamespace::PracticeSettings*, bool)>(&MultiplayerLevelScenesTransitionSetupDataSO::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelScenesTransitionSetupDataSO*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficulty>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicSO*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ColorScheme*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifiers*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSpecificSettings*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PracticeSettings*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MultiplayerLevelScenesTransitionSetupDataSO::Finish
// Il2CppName: Finish
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLevelScenesTransitionSetupDataSO::*)(GlobalNamespace::MultiplayerResultsData*)>(&MultiplayerLevelScenesTransitionSetupDataSO::Finish)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelScenesTransitionSetupDataSO*), "Finish", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MultiplayerResultsData*>()});
  }
};
// Writing MetadataGetter for method: MultiplayerLevelScenesTransitionSetupDataSO::FinishWithDisconnect
// Il2CppName: FinishWithDisconnect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLevelScenesTransitionSetupDataSO::*)(GlobalNamespace::DisconnectedReason)>(&MultiplayerLevelScenesTransitionSetupDataSO::FinishWithDisconnect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelScenesTransitionSetupDataSO*), "FinishWithDisconnect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::DisconnectedReason>()});
  }
};
// Writing MetadataGetter for method: MultiplayerLevelScenesTransitionSetupDataSO::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLevelScenesTransitionSetupDataSO::*)()>(&MultiplayerLevelScenesTransitionSetupDataSO::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelScenesTransitionSetupDataSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerLevelScenesTransitionSetupDataSO::*)()>(&MultiplayerLevelScenesTransitionSetupDataSO::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerLevelScenesTransitionSetupDataSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PatternFightScenesTransitionSetupDataSO
#include "GlobalNamespace/PatternFightScenesTransitionSetupDataSO.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: SceneInfo
#include "GlobalNamespace/SceneInfo.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PatternFightScenesTransitionSetupDataSO.add_didFinishEvent
void GlobalNamespace::PatternFightScenesTransitionSetupDataSO::add_didFinishEvent(System::Action_2<GlobalNamespace::PatternFightScenesTransitionSetupDataSO*, GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightScenesTransitionSetupDataSO::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PatternFightScenesTransitionSetupDataSO.remove_didFinishEvent
void GlobalNamespace::PatternFightScenesTransitionSetupDataSO::remove_didFinishEvent(System::Action_2<GlobalNamespace::PatternFightScenesTransitionSetupDataSO*, GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightScenesTransitionSetupDataSO::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PatternFightScenesTransitionSetupDataSO.Init
void GlobalNamespace::PatternFightScenesTransitionSetupDataSO::Init(GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightScenesTransitionSetupDataSO::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerSpecificSettings)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playerSpecificSettings);
}
// Autogenerated method: PatternFightScenesTransitionSetupDataSO.Finish
void GlobalNamespace::PatternFightScenesTransitionSetupDataSO::Finish(GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType endState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightScenesTransitionSetupDataSO::Finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endState)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, endState);
}
// Writing MetadataGetter for method: PatternFightScenesTransitionSetupDataSO::add_didFinishEvent
// Il2CppName: add_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PatternFightScenesTransitionSetupDataSO::*)(System::Action_2<GlobalNamespace::PatternFightScenesTransitionSetupDataSO*, GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType>*)>(&PatternFightScenesTransitionSetupDataSO::add_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PatternFightScenesTransitionSetupDataSO*), "add_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::PatternFightScenesTransitionSetupDataSO*, GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType>*>()});
  }
};
// Writing MetadataGetter for method: PatternFightScenesTransitionSetupDataSO::remove_didFinishEvent
// Il2CppName: remove_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PatternFightScenesTransitionSetupDataSO::*)(System::Action_2<GlobalNamespace::PatternFightScenesTransitionSetupDataSO*, GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType>*)>(&PatternFightScenesTransitionSetupDataSO::remove_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PatternFightScenesTransitionSetupDataSO*), "remove_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::PatternFightScenesTransitionSetupDataSO*, GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType>*>()});
  }
};
// Writing MetadataGetter for method: PatternFightScenesTransitionSetupDataSO::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PatternFightScenesTransitionSetupDataSO::*)(GlobalNamespace::PlayerSpecificSettings*)>(&PatternFightScenesTransitionSetupDataSO::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PatternFightScenesTransitionSetupDataSO*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSpecificSettings*>()});
  }
};
// Writing MetadataGetter for method: PatternFightScenesTransitionSetupDataSO::Finish
// Il2CppName: Finish
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PatternFightScenesTransitionSetupDataSO::*)(GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType)>(&PatternFightScenesTransitionSetupDataSO::Finish)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PatternFightScenesTransitionSetupDataSO*), "Finish", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType>()});
  }
};
// Writing MetadataGetter for method: PatternFightScenesTransitionSetupDataSO::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PatternFightScenesTransitionSetupDataSO::*)()>(&PatternFightScenesTransitionSetupDataSO::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PatternFightScenesTransitionSetupDataSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PatternFightScenesTransitionSetupDataSO::*)()>(&PatternFightScenesTransitionSetupDataSO::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PatternFightScenesTransitionSetupDataSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PatternFightScenesTransitionSetupDataSO/PatternFightEndStateType
#include "GlobalNamespace/PatternFightScenesTransitionSetupDataSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PatternFightScenesTransitionSetupDataSO/PatternFightEndStateType Completed
GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType::_get_Completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType::_get_Completed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType>("", "PatternFightScenesTransitionSetupDataSO/PatternFightEndStateType", "Completed"));
}
// Autogenerated static field setter
// Set static field: static public PatternFightScenesTransitionSetupDataSO/PatternFightEndStateType Completed
void GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType::_set_Completed(GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType::_set_Completed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PatternFightScenesTransitionSetupDataSO/PatternFightEndStateType", "Completed", value));
}
// Autogenerated static field getter
// Get static field: static public PatternFightScenesTransitionSetupDataSO/PatternFightEndStateType ReturnToMenu
GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType::_get_ReturnToMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType::_get_ReturnToMenu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType>("", "PatternFightScenesTransitionSetupDataSO/PatternFightEndStateType", "ReturnToMenu"));
}
// Autogenerated static field setter
// Set static field: static public PatternFightScenesTransitionSetupDataSO/PatternFightEndStateType ReturnToMenu
void GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType::_set_ReturnToMenu(GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType::_set_ReturnToMenu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PatternFightScenesTransitionSetupDataSO/PatternFightEndStateType", "ReturnToMenu", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ShaderWarmupScenesTransitionSetupDataSO
#include "GlobalNamespace/ShaderWarmupScenesTransitionSetupDataSO.hpp"
// Including type: ShaderWarmupSceneSetupData
#include "GlobalNamespace/ShaderWarmupSceneSetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ShaderWarmupScenesTransitionSetupDataSO.Init
void GlobalNamespace::ShaderWarmupScenesTransitionSetupDataSO::Init(GlobalNamespace::ShaderWarmupSceneSetupData* shaderWarmupSceneSetupData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShaderWarmupScenesTransitionSetupDataSO::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(shaderWarmupSceneSetupData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, shaderWarmupSceneSetupData);
}
// Writing MetadataGetter for method: ShaderWarmupScenesTransitionSetupDataSO::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ShaderWarmupScenesTransitionSetupDataSO::*)(GlobalNamespace::ShaderWarmupSceneSetupData*)>(&ShaderWarmupScenesTransitionSetupDataSO::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ShaderWarmupScenesTransitionSetupDataSO*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ShaderWarmupSceneSetupData*>()});
  }
};
// Writing MetadataGetter for method: ShaderWarmupScenesTransitionSetupDataSO::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ShaderWarmupScenesTransitionSetupDataSO::*)()>(&ShaderWarmupScenesTransitionSetupDataSO::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ShaderWarmupScenesTransitionSetupDataSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ShaderWarmupScenesTransitionSetupDataSO::*)()>(&ShaderWarmupScenesTransitionSetupDataSO::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ShaderWarmupScenesTransitionSetupDataSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/StandardLevelScenesTransitionSetupDataSO.hpp"
// Including type: SceneInfo
#include "GlobalNamespace/SceneInfo.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: PracticeSettings
#include "GlobalNamespace/PracticeSettings.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: OverrideEnvironmentSettings
#include "GlobalNamespace/OverrideEnvironmentSettings.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StandardLevelScenesTransitionSetupDataSO.add_didFinishEvent
void GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::add_didFinishEvent(System::Action_2<GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*, GlobalNamespace::LevelCompletionResults*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelScenesTransitionSetupDataSO.remove_didFinishEvent
void GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::remove_didFinishEvent(System::Action_2<GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*, GlobalNamespace::LevelCompletionResults*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelScenesTransitionSetupDataSO.get_gameMode
::Il2CppString* GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::get_gameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::get_gameMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelScenesTransitionSetupDataSO.set_gameMode
void GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::set_gameMode(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::set_gameMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gameMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelScenesTransitionSetupDataSO.get_difficultyBeatmap
GlobalNamespace::IDifficultyBeatmap* GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::get_difficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::get_difficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IDifficultyBeatmap*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelScenesTransitionSetupDataSO.set_difficultyBeatmap
void GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::set_difficultyBeatmap(GlobalNamespace::IDifficultyBeatmap* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::set_difficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_difficultyBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelScenesTransitionSetupDataSO.get_practiceSettings
GlobalNamespace::PracticeSettings* GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::get_practiceSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::get_practiceSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_practiceSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PracticeSettings*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelScenesTransitionSetupDataSO.set_practiceSettings
void GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::set_practiceSettings(GlobalNamespace::PracticeSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::set_practiceSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_practiceSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelScenesTransitionSetupDataSO.Init
void GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::Init(::Il2CppString* gameMode, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, GlobalNamespace::OverrideEnvironmentSettings* overrideEnvironmentSettings, GlobalNamespace::ColorScheme* overrideColorScheme, GlobalNamespace::GameplayModifiers* gameplayModifiers, GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings, GlobalNamespace::PracticeSettings* practiceSettings, ::Il2CppString* backButtonText, bool useTestNoteCutSoundEffects) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameMode), ::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(overrideEnvironmentSettings), ::il2cpp_utils::ExtractType(overrideColorScheme), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(playerSpecificSettings), ::il2cpp_utils::ExtractType(practiceSettings), ::il2cpp_utils::ExtractType(backButtonText), ::il2cpp_utils::ExtractType(useTestNoteCutSoundEffects)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, gameMode, difficultyBeatmap, previewBeatmapLevel, overrideEnvironmentSettings, overrideColorScheme, gameplayModifiers, playerSpecificSettings, practiceSettings, backButtonText, useTestNoteCutSoundEffects);
}
// Autogenerated method: StandardLevelScenesTransitionSetupDataSO.Finish
void GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::Finish(GlobalNamespace::LevelCompletionResults* levelCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::Finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelCompletionResults);
}
// Writing MetadataGetter for method: StandardLevelScenesTransitionSetupDataSO::add_didFinishEvent
// Il2CppName: add_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelScenesTransitionSetupDataSO::*)(System::Action_2<GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*, GlobalNamespace::LevelCompletionResults*>*)>(&StandardLevelScenesTransitionSetupDataSO::add_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelScenesTransitionSetupDataSO*), "add_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*, GlobalNamespace::LevelCompletionResults*>*>()});
  }
};
// Writing MetadataGetter for method: StandardLevelScenesTransitionSetupDataSO::remove_didFinishEvent
// Il2CppName: remove_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelScenesTransitionSetupDataSO::*)(System::Action_2<GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*, GlobalNamespace::LevelCompletionResults*>*)>(&StandardLevelScenesTransitionSetupDataSO::remove_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelScenesTransitionSetupDataSO*), "remove_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*, GlobalNamespace::LevelCompletionResults*>*>()});
  }
};
// Writing MetadataGetter for method: StandardLevelScenesTransitionSetupDataSO::get_gameMode
// Il2CppName: get_gameMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (StandardLevelScenesTransitionSetupDataSO::*)()>(&StandardLevelScenesTransitionSetupDataSO::get_gameMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelScenesTransitionSetupDataSO*), "get_gameMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandardLevelScenesTransitionSetupDataSO::set_gameMode
// Il2CppName: set_gameMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelScenesTransitionSetupDataSO::*)(::Il2CppString*)>(&StandardLevelScenesTransitionSetupDataSO::set_gameMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelScenesTransitionSetupDataSO*), "set_gameMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: StandardLevelScenesTransitionSetupDataSO::get_difficultyBeatmap
// Il2CppName: get_difficultyBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::IDifficultyBeatmap* (StandardLevelScenesTransitionSetupDataSO::*)()>(&StandardLevelScenesTransitionSetupDataSO::get_difficultyBeatmap)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelScenesTransitionSetupDataSO*), "get_difficultyBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandardLevelScenesTransitionSetupDataSO::set_difficultyBeatmap
// Il2CppName: set_difficultyBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelScenesTransitionSetupDataSO::*)(GlobalNamespace::IDifficultyBeatmap*)>(&StandardLevelScenesTransitionSetupDataSO::set_difficultyBeatmap)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelScenesTransitionSetupDataSO*), "set_difficultyBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>()});
  }
};
// Writing MetadataGetter for method: StandardLevelScenesTransitionSetupDataSO::get_practiceSettings
// Il2CppName: get_practiceSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PracticeSettings* (StandardLevelScenesTransitionSetupDataSO::*)()>(&StandardLevelScenesTransitionSetupDataSO::get_practiceSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelScenesTransitionSetupDataSO*), "get_practiceSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandardLevelScenesTransitionSetupDataSO::set_practiceSettings
// Il2CppName: set_practiceSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelScenesTransitionSetupDataSO::*)(GlobalNamespace::PracticeSettings*)>(&StandardLevelScenesTransitionSetupDataSO::set_practiceSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelScenesTransitionSetupDataSO*), "set_practiceSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PracticeSettings*>()});
  }
};
// Writing MetadataGetter for method: StandardLevelScenesTransitionSetupDataSO::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelScenesTransitionSetupDataSO::*)(::Il2CppString*, GlobalNamespace::IDifficultyBeatmap*, GlobalNamespace::IPreviewBeatmapLevel*, GlobalNamespace::OverrideEnvironmentSettings*, GlobalNamespace::ColorScheme*, GlobalNamespace::GameplayModifiers*, GlobalNamespace::PlayerSpecificSettings*, GlobalNamespace::PracticeSettings*, ::Il2CppString*, bool)>(&StandardLevelScenesTransitionSetupDataSO::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelScenesTransitionSetupDataSO*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::OverrideEnvironmentSettings*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ColorScheme*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifiers*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerSpecificSettings*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PracticeSettings*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: StandardLevelScenesTransitionSetupDataSO::Finish
// Il2CppName: Finish
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelScenesTransitionSetupDataSO::*)(GlobalNamespace::LevelCompletionResults*)>(&StandardLevelScenesTransitionSetupDataSO::Finish)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelScenesTransitionSetupDataSO*), "Finish", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::LevelCompletionResults*>()});
  }
};
// Writing MetadataGetter for method: StandardLevelScenesTransitionSetupDataSO::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelScenesTransitionSetupDataSO::*)()>(&StandardLevelScenesTransitionSetupDataSO::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelScenesTransitionSetupDataSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelScenesTransitionSetupDataSO::*)()>(&StandardLevelScenesTransitionSetupDataSO::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelScenesTransitionSetupDataSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialScenesTransitionSetupDataSO
#include "GlobalNamespace/TutorialScenesTransitionSetupDataSO.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: SceneInfo
#include "GlobalNamespace/SceneInfo.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TutorialScenesTransitionSetupDataSO.add_didFinishEvent
void GlobalNamespace::TutorialScenesTransitionSetupDataSO::add_didFinishEvent(System::Action_2<GlobalNamespace::TutorialScenesTransitionSetupDataSO*, GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialScenesTransitionSetupDataSO::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TutorialScenesTransitionSetupDataSO.remove_didFinishEvent
void GlobalNamespace::TutorialScenesTransitionSetupDataSO::remove_didFinishEvent(System::Action_2<GlobalNamespace::TutorialScenesTransitionSetupDataSO*, GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialScenesTransitionSetupDataSO::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TutorialScenesTransitionSetupDataSO.Init
void GlobalNamespace::TutorialScenesTransitionSetupDataSO::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialScenesTransitionSetupDataSO::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialScenesTransitionSetupDataSO.Finish
void GlobalNamespace::TutorialScenesTransitionSetupDataSO::Finish(GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType endState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialScenesTransitionSetupDataSO::Finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endState)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, endState);
}
// Writing MetadataGetter for method: TutorialScenesTransitionSetupDataSO::add_didFinishEvent
// Il2CppName: add_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TutorialScenesTransitionSetupDataSO::*)(System::Action_2<GlobalNamespace::TutorialScenesTransitionSetupDataSO*, GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType>*)>(&TutorialScenesTransitionSetupDataSO::add_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TutorialScenesTransitionSetupDataSO*), "add_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::TutorialScenesTransitionSetupDataSO*, GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType>*>()});
  }
};
// Writing MetadataGetter for method: TutorialScenesTransitionSetupDataSO::remove_didFinishEvent
// Il2CppName: remove_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TutorialScenesTransitionSetupDataSO::*)(System::Action_2<GlobalNamespace::TutorialScenesTransitionSetupDataSO*, GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType>*)>(&TutorialScenesTransitionSetupDataSO::remove_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TutorialScenesTransitionSetupDataSO*), "remove_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::TutorialScenesTransitionSetupDataSO*, GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType>*>()});
  }
};
// Writing MetadataGetter for method: TutorialScenesTransitionSetupDataSO::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TutorialScenesTransitionSetupDataSO::*)()>(&TutorialScenesTransitionSetupDataSO::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TutorialScenesTransitionSetupDataSO*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TutorialScenesTransitionSetupDataSO::Finish
// Il2CppName: Finish
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TutorialScenesTransitionSetupDataSO::*)(GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType)>(&TutorialScenesTransitionSetupDataSO::Finish)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TutorialScenesTransitionSetupDataSO*), "Finish", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType>()});
  }
};
// Writing MetadataGetter for method: TutorialScenesTransitionSetupDataSO::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TutorialScenesTransitionSetupDataSO::*)()>(&TutorialScenesTransitionSetupDataSO::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TutorialScenesTransitionSetupDataSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TutorialScenesTransitionSetupDataSO::*)()>(&TutorialScenesTransitionSetupDataSO::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TutorialScenesTransitionSetupDataSO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialScenesTransitionSetupDataSO/TutorialEndStateType
#include "GlobalNamespace/TutorialScenesTransitionSetupDataSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TutorialScenesTransitionSetupDataSO/TutorialEndStateType Completed
GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType::_get_Completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType::_get_Completed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType>("", "TutorialScenesTransitionSetupDataSO/TutorialEndStateType", "Completed"));
}
// Autogenerated static field setter
// Set static field: static public TutorialScenesTransitionSetupDataSO/TutorialEndStateType Completed
void GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType::_set_Completed(GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType::_set_Completed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TutorialScenesTransitionSetupDataSO/TutorialEndStateType", "Completed", value));
}
// Autogenerated static field getter
// Get static field: static public TutorialScenesTransitionSetupDataSO/TutorialEndStateType ReturnToMenu
GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType::_get_ReturnToMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType::_get_ReturnToMenu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType>("", "TutorialScenesTransitionSetupDataSO/TutorialEndStateType", "ReturnToMenu"));
}
// Autogenerated static field setter
// Set static field: static public TutorialScenesTransitionSetupDataSO/TutorialEndStateType ReturnToMenu
void GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType::_set_ReturnToMenu(GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType::_set_ReturnToMenu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TutorialScenesTransitionSetupDataSO/TutorialEndStateType", "ReturnToMenu", value));
}
// Autogenerated static field getter
// Get static field: static public TutorialScenesTransitionSetupDataSO/TutorialEndStateType Restart
GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType::_get_Restart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType::_get_Restart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType>("", "TutorialScenesTransitionSetupDataSO/TutorialEndStateType", "Restart"));
}
// Autogenerated static field setter
// Set static field: static public TutorialScenesTransitionSetupDataSO/TutorialEndStateType Restart
void GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType::_set_Restart(GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType::_set_Restart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TutorialScenesTransitionSetupDataSO/TutorialEndStateType", "Restart", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ShaderWarmupSceneSetup
#include "GlobalNamespace/ShaderWarmupSceneSetup.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ShaderWarmupSceneSetup.InstallBindings
void GlobalNamespace::ShaderWarmupSceneSetup::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShaderWarmupSceneSetup::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ShaderWarmupSceneSetup::InstallBindings
// Il2CppName: InstallBindings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ShaderWarmupSceneSetup::*)()>(&ShaderWarmupSceneSetup::InstallBindings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ShaderWarmupSceneSetup*), "InstallBindings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ShaderWarmupSceneSetup::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ShaderWarmupSceneSetup::*)()>(&ShaderWarmupSceneSetup::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ShaderWarmupSceneSetup*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ShaderWarmupSceneSetup::*)()>(&ShaderWarmupSceneSetup::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ShaderWarmupSceneSetup*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ShaderWarmupSceneStart
#include "GlobalNamespace/ShaderWarmupSceneStart.hpp"
// Including type: ShaderWarmupSceneStart/<Start>d__2
#include "GlobalNamespace/ShaderWarmupSceneStart_-Start-d__2.hpp"
// Including type: ShaderWarmupSceneSetupData
#include "GlobalNamespace/ShaderWarmupSceneSetupData.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ShaderWarmupSceneStart.Start
System::Collections::IEnumerator* GlobalNamespace::ShaderWarmupSceneStart::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShaderWarmupSceneStart::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ShaderWarmupSceneStart::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (ShaderWarmupSceneStart::*)()>(&ShaderWarmupSceneStart::Start)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ShaderWarmupSceneStart*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ShaderWarmupSceneStart::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ShaderWarmupSceneStart::*)()>(&ShaderWarmupSceneStart::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ShaderWarmupSceneStart*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ShaderWarmupSceneStart::*)()>(&ShaderWarmupSceneStart::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ShaderWarmupSceneStart*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ShaderWarmupSceneStart/<Start>d__2
#include "GlobalNamespace/ShaderWarmupSceneStart_-Start-d__2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ShaderWarmupSceneStart/<Start>d__2.System.IDisposable.Dispose
void GlobalNamespace::ShaderWarmupSceneStart::$Start$d__2::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShaderWarmupSceneStart::$Start$d__2::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ShaderWarmupSceneStart/<Start>d__2.MoveNext
bool GlobalNamespace::ShaderWarmupSceneStart::$Start$d__2::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShaderWarmupSceneStart::$Start$d__2::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ShaderWarmupSceneStart/<Start>d__2.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::ShaderWarmupSceneStart::$Start$d__2::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShaderWarmupSceneStart::$Start$d__2::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: ShaderWarmupSceneStart/<Start>d__2.System.Collections.IEnumerator.Reset
void GlobalNamespace::ShaderWarmupSceneStart::$Start$d__2::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShaderWarmupSceneStart::$Start$d__2::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ShaderWarmupSceneStart/<Start>d__2.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::ShaderWarmupSceneStart::$Start$d__2::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShaderWarmupSceneStart::$Start$d__2::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ShaderWarmupSceneStart::$Start$d__2::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ShaderWarmupSceneStart::$Start$d__2::*)(int)>(&ShaderWarmupSceneStart::$Start$d__2::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ShaderWarmupSceneStart::$Start$d__2*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ShaderWarmupSceneStart::$Start$d__2::*)(int)>(&ShaderWarmupSceneStart::$Start$d__2::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ShaderWarmupSceneStart::$Start$d__2*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ShaderWarmupSceneStart::$Start$d__2::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ShaderWarmupSceneStart::$Start$d__2::*)()>(&ShaderWarmupSceneStart::$Start$d__2::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ShaderWarmupSceneStart::$Start$d__2*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ShaderWarmupSceneStart::$Start$d__2::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ShaderWarmupSceneStart::$Start$d__2::*)()>(&ShaderWarmupSceneStart::$Start$d__2::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ShaderWarmupSceneStart::$Start$d__2*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ShaderWarmupSceneStart::$Start$d__2::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ShaderWarmupSceneStart::$Start$d__2::*)()>(&ShaderWarmupSceneStart::$Start$d__2::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ShaderWarmupSceneStart::$Start$d__2*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ShaderWarmupSceneStart::$Start$d__2::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ShaderWarmupSceneStart::$Start$d__2::*)()>(&ShaderWarmupSceneStart::$Start$d__2::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ShaderWarmupSceneStart::$Start$d__2*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ShaderWarmupSceneStart::$Start$d__2::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ShaderWarmupSceneStart::$Start$d__2::*)()>(&ShaderWarmupSceneStart::$Start$d__2::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ShaderWarmupSceneStart::$Start$d__2*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SimpleLevelStarter
#include "GlobalNamespace/SimpleLevelStarter.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: MenuTransitionsHelper
#include "GlobalNamespace/MenuTransitionsHelper.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: ScenesTransitionSetupDataSO
#include "GlobalNamespace/ScenesTransitionSetupDataSO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: StandardLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/StandardLevelScenesTransitionSetupDataSO.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SimpleLevelStarter.Awake
void GlobalNamespace::SimpleLevelStarter::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleLevelStarter::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleLevelStarter.OnDestroy
void GlobalNamespace::SimpleLevelStarter::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleLevelStarter::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleLevelStarter.StartLevel
void GlobalNamespace::SimpleLevelStarter::StartLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleLevelStarter::StartLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleLevelStarter.InstallEarlyBindings
void GlobalNamespace::SimpleLevelStarter::InstallEarlyBindings(GlobalNamespace::ScenesTransitionSetupDataSO* scenesTransitionSetupData, Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleLevelStarter::InstallEarlyBindings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallEarlyBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scenesTransitionSetupData), ::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, scenesTransitionSetupData, container);
}
// Autogenerated method: SimpleLevelStarter.ButtonPressed
void GlobalNamespace::SimpleLevelStarter::ButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleLevelStarter::ButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleLevelStarter.HandleLevelDidFinish
void GlobalNamespace::SimpleLevelStarter::HandleLevelDidFinish(GlobalNamespace::StandardLevelScenesTransitionSetupDataSO* standardLevelSceneSetupData, GlobalNamespace::LevelCompletionResults* levelCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleLevelStarter::HandleLevelDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(standardLevelSceneSetupData), ::il2cpp_utils::ExtractType(levelCompletionResults)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, standardLevelSceneSetupData, levelCompletionResults);
}
// Autogenerated method: SimpleLevelStarter.<StartLevel>g__AfterSceneSwitchCallback|14_0
void GlobalNamespace::SimpleLevelStarter::$StartLevel$g__AfterSceneSwitchCallback_14_0(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleLevelStarter::<StartLevel>g__AfterSceneSwitchCallback|14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartLevel>g__AfterSceneSwitchCallback|14_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Writing MetadataGetter for method: SimpleLevelStarter::Awake
// Il2CppName: Awake
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SimpleLevelStarter::*)()>(&SimpleLevelStarter::Awake)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SimpleLevelStarter*), "Awake", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SimpleLevelStarter::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SimpleLevelStarter::*)()>(&SimpleLevelStarter::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SimpleLevelStarter*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SimpleLevelStarter::StartLevel
// Il2CppName: StartLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SimpleLevelStarter::*)()>(&SimpleLevelStarter::StartLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SimpleLevelStarter*), "StartLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SimpleLevelStarter::InstallEarlyBindings
// Il2CppName: InstallEarlyBindings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SimpleLevelStarter::*)(GlobalNamespace::ScenesTransitionSetupDataSO*, Zenject::DiContainer*)>(&SimpleLevelStarter::InstallEarlyBindings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SimpleLevelStarter*), "InstallEarlyBindings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ScenesTransitionSetupDataSO*>(), ::il2cpp_utils::ExtractIndependentType<Zenject::DiContainer*>()});
  }
};
// Writing MetadataGetter for method: SimpleLevelStarter::ButtonPressed
// Il2CppName: ButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SimpleLevelStarter::*)()>(&SimpleLevelStarter::ButtonPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SimpleLevelStarter*), "ButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SimpleLevelStarter::HandleLevelDidFinish
// Il2CppName: HandleLevelDidFinish
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SimpleLevelStarter::*)(GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*, GlobalNamespace::LevelCompletionResults*)>(&SimpleLevelStarter::HandleLevelDidFinish)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SimpleLevelStarter*), "HandleLevelDidFinish", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::LevelCompletionResults*>()});
  }
};
// Writing MetadataGetter for method: SimpleLevelStarter::$StartLevel$g__AfterSceneSwitchCallback_14_0
// Il2CppName: <StartLevel>g__AfterSceneSwitchCallback|14_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SimpleLevelStarter::*)(Zenject::DiContainer*)>(&SimpleLevelStarter::$StartLevel$g__AfterSceneSwitchCallback_14_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SimpleLevelStarter*), "<StartLevel>g__AfterSceneSwitchCallback|14_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Zenject::DiContainer*>()});
  }
};
// Writing MetadataGetter for method: SimpleLevelStarter::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SimpleLevelStarter::*)()>(&SimpleLevelStarter::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SimpleLevelStarter*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SimpleLevelStarter::*)()>(&SimpleLevelStarter::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SimpleLevelStarter*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tweening.FloatTween
#include "Tweening/FloatTween.hpp"
// Including type: Zenject.StaticMemoryPool`7
#include "Zenject/StaticMemoryPool_7.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE297C4
// Autogenerated static field getter
// Get static field: static public readonly Zenject.StaticMemoryPool`7<System.Single,System.Single,System.Action`1<System.Single>,System.Single,Tweening.EaseType,System.Single,Tweening.FloatTween> Pool
Zenject::StaticMemoryPool_7<float, float, System::Action_1<float>*, float, Tweening::EaseType, float, Tweening::FloatTween*>* Tweening::FloatTween::_get_Pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::FloatTween::_get_Pool");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::StaticMemoryPool_7<float, float, System::Action_1<float>*, float, Tweening::EaseType, float, Tweening::FloatTween*>*>("Tweening", "FloatTween", "Pool")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.StaticMemoryPool`7<System.Single,System.Single,System.Action`1<System.Single>,System.Single,Tweening.EaseType,System.Single,Tweening.FloatTween> Pool
void Tweening::FloatTween::_set_Pool(Zenject::StaticMemoryPool_7<float, float, System::Action_1<float>*, float, Tweening::EaseType, float, Tweening::FloatTween*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::FloatTween::_set_Pool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "FloatTween", "Pool", value));
}
// Autogenerated method: Tweening.FloatTween.GetValue
float Tweening::FloatTween::GetValue(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::FloatTween::GetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, t);
}
// Autogenerated method: Tweening.FloatTween..cctor
void Tweening::FloatTween::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::FloatTween::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Tweening", "FloatTween", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: FloatTween::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FloatTween::*)(float, float, System::Action_1<float>*, float, Tweening::EaseType, float)>(&FloatTween::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FloatTween*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<System::Action_1<float>*>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<Tweening::EaseType>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FloatTween::*)(float, float, System::Action_1<float>*, float, Tweening::EaseType, float)>(&FloatTween::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FloatTween*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<System::Action_1<float>*>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<Tweening::EaseType>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: FloatTween::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FloatTween::*)(float, float, System::Action_1<float>*, float, UnityEngine::AnimationCurve*, float)>(&FloatTween::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FloatTween*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<System::Action_1<float>*>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::AnimationCurve*>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FloatTween::*)(float, float, System::Action_1<float>*, float, UnityEngine::AnimationCurve*, float)>(&FloatTween::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FloatTween*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<System::Action_1<float>*>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::AnimationCurve*>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: FloatTween::GetValue
// Il2CppName: GetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (FloatTween::*)(float)>(&FloatTween::GetValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FloatTween*), "GetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: FloatTween::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&FloatTween::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FloatTween*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FloatTween::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FloatTween::*)()>(&FloatTween::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FloatTween*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FloatTween::*)()>(&FloatTween::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FloatTween*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tweening.Vector2Tween
#include "Tweening/Vector2Tween.hpp"
// Including type: Zenject.StaticMemoryPool`7
#include "Zenject/StaticMemoryPool_7.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE297D4
// Autogenerated static field getter
// Get static field: static public readonly Zenject.StaticMemoryPool`7<UnityEngine.Vector2,UnityEngine.Vector2,System.Action`1<UnityEngine.Vector2>,System.Single,Tweening.EaseType,System.Single,Tweening.Vector2Tween> Pool
Zenject::StaticMemoryPool_7<UnityEngine::Vector2, UnityEngine::Vector2, System::Action_1<UnityEngine::Vector2>*, float, Tweening::EaseType, float, Tweening::Vector2Tween*>* Tweening::Vector2Tween::_get_Pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Vector2Tween::_get_Pool");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::StaticMemoryPool_7<UnityEngine::Vector2, UnityEngine::Vector2, System::Action_1<UnityEngine::Vector2>*, float, Tweening::EaseType, float, Tweening::Vector2Tween*>*>("Tweening", "Vector2Tween", "Pool")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.StaticMemoryPool`7<UnityEngine.Vector2,UnityEngine.Vector2,System.Action`1<UnityEngine.Vector2>,System.Single,Tweening.EaseType,System.Single,Tweening.Vector2Tween> Pool
void Tweening::Vector2Tween::_set_Pool(Zenject::StaticMemoryPool_7<UnityEngine::Vector2, UnityEngine::Vector2, System::Action_1<UnityEngine::Vector2>*, float, Tweening::EaseType, float, Tweening::Vector2Tween*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Vector2Tween::_set_Pool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "Vector2Tween", "Pool", value));
}
// Autogenerated method: Tweening.Vector2Tween.GetValue
UnityEngine::Vector2 Tweening::Vector2Tween::GetValue(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Vector2Tween::GetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method, t);
}
// Autogenerated method: Tweening.Vector2Tween..cctor
void Tweening::Vector2Tween::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Vector2Tween::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Tweening", "Vector2Tween", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: Vector2Tween::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Vector2Tween::*)(UnityEngine::Vector2, UnityEngine::Vector2, System::Action_1<UnityEngine::Vector2>*, float, Tweening::EaseType, float)>(&Vector2Tween::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Vector2Tween*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<System::Action_1<UnityEngine::Vector2>*>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<Tweening::EaseType>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Vector2Tween::*)(UnityEngine::Vector2, UnityEngine::Vector2, System::Action_1<UnityEngine::Vector2>*, float, Tweening::EaseType, float)>(&Vector2Tween::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Vector2Tween*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<System::Action_1<UnityEngine::Vector2>*>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<Tweening::EaseType>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Vector2Tween::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Vector2Tween::*)(UnityEngine::Vector2, UnityEngine::Vector2, System::Action_1<UnityEngine::Vector2>*, float, UnityEngine::AnimationCurve*, float)>(&Vector2Tween::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Vector2Tween*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<System::Action_1<UnityEngine::Vector2>*>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::AnimationCurve*>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Vector2Tween::*)(UnityEngine::Vector2, UnityEngine::Vector2, System::Action_1<UnityEngine::Vector2>*, float, UnityEngine::AnimationCurve*, float)>(&Vector2Tween::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Vector2Tween*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector2>(), ::il2cpp_utils::ExtractIndependentType<System::Action_1<UnityEngine::Vector2>*>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::AnimationCurve*>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Vector2Tween::GetValue
// Il2CppName: GetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector2 (Vector2Tween::*)(float)>(&Vector2Tween::GetValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Vector2Tween*), "GetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Vector2Tween::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Vector2Tween::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Vector2Tween*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Vector2Tween::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Vector2Tween::*)()>(&Vector2Tween::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Vector2Tween*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Vector2Tween::*)()>(&Vector2Tween::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Vector2Tween*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tweening.Vector3Tween
#include "Tweening/Vector3Tween.hpp"
// Including type: Zenject.StaticMemoryPool`7
#include "Zenject/StaticMemoryPool_7.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE297E4
// Autogenerated static field getter
// Get static field: static public readonly Zenject.StaticMemoryPool`7<UnityEngine.Vector3,UnityEngine.Vector3,System.Action`1<UnityEngine.Vector3>,System.Single,Tweening.EaseType,System.Single,Tweening.Vector3Tween> Pool
Zenject::StaticMemoryPool_7<UnityEngine::Vector3, UnityEngine::Vector3, System::Action_1<UnityEngine::Vector3>*, float, Tweening::EaseType, float, Tweening::Vector3Tween*>* Tweening::Vector3Tween::_get_Pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Vector3Tween::_get_Pool");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::StaticMemoryPool_7<UnityEngine::Vector3, UnityEngine::Vector3, System::Action_1<UnityEngine::Vector3>*, float, Tweening::EaseType, float, Tweening::Vector3Tween*>*>("Tweening", "Vector3Tween", "Pool")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.StaticMemoryPool`7<UnityEngine.Vector3,UnityEngine.Vector3,System.Action`1<UnityEngine.Vector3>,System.Single,Tweening.EaseType,System.Single,Tweening.Vector3Tween> Pool
void Tweening::Vector3Tween::_set_Pool(Zenject::StaticMemoryPool_7<UnityEngine::Vector3, UnityEngine::Vector3, System::Action_1<UnityEngine::Vector3>*, float, Tweening::EaseType, float, Tweening::Vector3Tween*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Vector3Tween::_set_Pool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "Vector3Tween", "Pool", value));
}
// Autogenerated method: Tweening.Vector3Tween.GetValue
UnityEngine::Vector3 Tweening::Vector3Tween::GetValue(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Vector3Tween::GetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, t);
}
// Autogenerated method: Tweening.Vector3Tween..cctor
void Tweening::Vector3Tween::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Vector3Tween::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Tweening", "Vector3Tween", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: Vector3Tween::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Vector3Tween::*)(UnityEngine::Vector3, UnityEngine::Vector3, System::Action_1<UnityEngine::Vector3>*, float, Tweening::EaseType, float)>(&Vector3Tween::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Vector3Tween*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<System::Action_1<UnityEngine::Vector3>*>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<Tweening::EaseType>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Vector3Tween::*)(UnityEngine::Vector3, UnityEngine::Vector3, System::Action_1<UnityEngine::Vector3>*, float, Tweening::EaseType, float)>(&Vector3Tween::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Vector3Tween*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<System::Action_1<UnityEngine::Vector3>*>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<Tweening::EaseType>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Vector3Tween::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Vector3Tween::*)(UnityEngine::Vector3, UnityEngine::Vector3, System::Action_1<UnityEngine::Vector3>*, float, UnityEngine::AnimationCurve*, float)>(&Vector3Tween::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Vector3Tween*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<System::Action_1<UnityEngine::Vector3>*>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::AnimationCurve*>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Vector3Tween::*)(UnityEngine::Vector3, UnityEngine::Vector3, System::Action_1<UnityEngine::Vector3>*, float, UnityEngine::AnimationCurve*, float)>(&Vector3Tween::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Vector3Tween*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<System::Action_1<UnityEngine::Vector3>*>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::AnimationCurve*>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Vector3Tween::GetValue
// Il2CppName: GetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (Vector3Tween::*)(float)>(&Vector3Tween::GetValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Vector3Tween*), "GetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Vector3Tween::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Vector3Tween::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Vector3Tween*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Vector3Tween::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Vector3Tween::*)()>(&Vector3Tween::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Vector3Tween*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Vector3Tween::*)()>(&Vector3Tween::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Vector3Tween*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tweening.ColorTween
#include "Tweening/ColorTween.hpp"
// Including type: Zenject.StaticMemoryPool`7
#include "Zenject/StaticMemoryPool_7.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE297F4
// Autogenerated static field getter
// Get static field: static public readonly Zenject.StaticMemoryPool`7<UnityEngine.Color,UnityEngine.Color,System.Action`1<UnityEngine.Color>,System.Single,Tweening.EaseType,System.Single,Tweening.ColorTween> Pool
Zenject::StaticMemoryPool_7<UnityEngine::Color, UnityEngine::Color, System::Action_1<UnityEngine::Color>*, float, Tweening::EaseType, float, Tweening::ColorTween*>* Tweening::ColorTween::_get_Pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::ColorTween::_get_Pool");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Zenject::StaticMemoryPool_7<UnityEngine::Color, UnityEngine::Color, System::Action_1<UnityEngine::Color>*, float, Tweening::EaseType, float, Tweening::ColorTween*>*>("Tweening", "ColorTween", "Pool")));
}
// Autogenerated static field setter
// Set static field: static public readonly Zenject.StaticMemoryPool`7<UnityEngine.Color,UnityEngine.Color,System.Action`1<UnityEngine.Color>,System.Single,Tweening.EaseType,System.Single,Tweening.ColorTween> Pool
void Tweening::ColorTween::_set_Pool(Zenject::StaticMemoryPool_7<UnityEngine::Color, UnityEngine::Color, System::Action_1<UnityEngine::Color>*, float, Tweening::EaseType, float, Tweening::ColorTween*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::ColorTween::_set_Pool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "ColorTween", "Pool", value));
}
// Autogenerated method: Tweening.ColorTween.GetValue
UnityEngine::Color Tweening::ColorTween::GetValue(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::ColorTween::GetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method, t);
}
// Autogenerated method: Tweening.ColorTween..cctor
void Tweening::ColorTween::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::ColorTween::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Tweening", "ColorTween", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: ColorTween::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ColorTween::*)(UnityEngine::Color, UnityEngine::Color, System::Action_1<UnityEngine::Color>*, float, Tweening::EaseType, float)>(&ColorTween::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorTween*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>(), ::il2cpp_utils::ExtractIndependentType<System::Action_1<UnityEngine::Color>*>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<Tweening::EaseType>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ColorTween::*)(UnityEngine::Color, UnityEngine::Color, System::Action_1<UnityEngine::Color>*, float, Tweening::EaseType, float)>(&ColorTween::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorTween*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>(), ::il2cpp_utils::ExtractIndependentType<System::Action_1<UnityEngine::Color>*>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<Tweening::EaseType>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: ColorTween::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ColorTween::*)(UnityEngine::Color, UnityEngine::Color, System::Action_1<UnityEngine::Color>*, float, UnityEngine::AnimationCurve*, float)>(&ColorTween::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorTween*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>(), ::il2cpp_utils::ExtractIndependentType<System::Action_1<UnityEngine::Color>*>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::AnimationCurve*>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ColorTween::*)(UnityEngine::Color, UnityEngine::Color, System::Action_1<UnityEngine::Color>*, float, UnityEngine::AnimationCurve*, float)>(&ColorTween::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorTween*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>(), ::il2cpp_utils::ExtractIndependentType<System::Action_1<UnityEngine::Color>*>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::AnimationCurve*>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: ColorTween::GetValue
// Il2CppName: GetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (ColorTween::*)(float)>(&ColorTween::GetValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorTween*), "GetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: ColorTween::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ColorTween::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorTween*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ColorTween::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ColorTween::*)()>(&ColorTween::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorTween*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ColorTween::*)()>(&ColorTween::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ColorTween*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tweening.InterpolationType
#include "Tweening/InterpolationType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Tweening.InterpolationType Easing
Tweening::InterpolationType Tweening::InterpolationType::_get_Easing() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::InterpolationType::_get_Easing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::InterpolationType>("Tweening", "InterpolationType", "Easing"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.InterpolationType Easing
void Tweening::InterpolationType::_set_Easing(Tweening::InterpolationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::InterpolationType::_set_Easing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "InterpolationType", "Easing", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.InterpolationType AnimationCurve
Tweening::InterpolationType Tweening::InterpolationType::_get_AnimationCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::InterpolationType::_get_AnimationCurve");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::InterpolationType>("Tweening", "InterpolationType", "AnimationCurve"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.InterpolationType AnimationCurve
void Tweening::InterpolationType::_set_AnimationCurve(Tweening::InterpolationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::InterpolationType::_set_AnimationCurve");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "InterpolationType", "AnimationCurve", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tweening.EaseType
#include "Tweening/EaseType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType None
Tweening::EaseType Tweening::EaseType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType None
void Tweening::EaseType::_set_None(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType Linear
Tweening::EaseType Tweening::EaseType::_get_Linear() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_Linear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "Linear"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType Linear
void Tweening::EaseType::_set_Linear(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_Linear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "Linear", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InSine
Tweening::EaseType Tweening::EaseType::_get_InSine() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InSine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InSine"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InSine
void Tweening::EaseType::_set_InSine(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InSine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InSine", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType OutSine
Tweening::EaseType Tweening::EaseType::_get_OutSine() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_OutSine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "OutSine"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType OutSine
void Tweening::EaseType::_set_OutSine(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_OutSine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "OutSine", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InOutSine
Tweening::EaseType Tweening::EaseType::_get_InOutSine() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InOutSine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InOutSine"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InOutSine
void Tweening::EaseType::_set_InOutSine(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InOutSine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InOutSine", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InQuad
Tweening::EaseType Tweening::EaseType::_get_InQuad() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InQuad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InQuad"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InQuad
void Tweening::EaseType::_set_InQuad(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InQuad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InQuad", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType OutQuad
Tweening::EaseType Tweening::EaseType::_get_OutQuad() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_OutQuad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "OutQuad"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType OutQuad
void Tweening::EaseType::_set_OutQuad(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_OutQuad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "OutQuad", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InOutQuad
Tweening::EaseType Tweening::EaseType::_get_InOutQuad() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InOutQuad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InOutQuad"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InOutQuad
void Tweening::EaseType::_set_InOutQuad(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InOutQuad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InOutQuad", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InCubic
Tweening::EaseType Tweening::EaseType::_get_InCubic() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InCubic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InCubic"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InCubic
void Tweening::EaseType::_set_InCubic(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InCubic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InCubic", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType OutCubic
Tweening::EaseType Tweening::EaseType::_get_OutCubic() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_OutCubic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "OutCubic"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType OutCubic
void Tweening::EaseType::_set_OutCubic(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_OutCubic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "OutCubic", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InOutCubic
Tweening::EaseType Tweening::EaseType::_get_InOutCubic() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InOutCubic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InOutCubic"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InOutCubic
void Tweening::EaseType::_set_InOutCubic(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InOutCubic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InOutCubic", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InQuart
Tweening::EaseType Tweening::EaseType::_get_InQuart() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InQuart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InQuart"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InQuart
void Tweening::EaseType::_set_InQuart(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InQuart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InQuart", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType OutQuart
Tweening::EaseType Tweening::EaseType::_get_OutQuart() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_OutQuart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "OutQuart"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType OutQuart
void Tweening::EaseType::_set_OutQuart(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_OutQuart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "OutQuart", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InOutQuart
Tweening::EaseType Tweening::EaseType::_get_InOutQuart() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InOutQuart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InOutQuart"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InOutQuart
void Tweening::EaseType::_set_InOutQuart(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InOutQuart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InOutQuart", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InQuint
Tweening::EaseType Tweening::EaseType::_get_InQuint() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InQuint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InQuint"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InQuint
void Tweening::EaseType::_set_InQuint(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InQuint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InQuint", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType OutQuint
Tweening::EaseType Tweening::EaseType::_get_OutQuint() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_OutQuint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "OutQuint"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType OutQuint
void Tweening::EaseType::_set_OutQuint(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_OutQuint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "OutQuint", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InOutQuint
Tweening::EaseType Tweening::EaseType::_get_InOutQuint() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InOutQuint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InOutQuint"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InOutQuint
void Tweening::EaseType::_set_InOutQuint(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InOutQuint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InOutQuint", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InExpo
Tweening::EaseType Tweening::EaseType::_get_InExpo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InExpo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InExpo"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InExpo
void Tweening::EaseType::_set_InExpo(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InExpo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InExpo", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType OutExpo
Tweening::EaseType Tweening::EaseType::_get_OutExpo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_OutExpo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "OutExpo"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType OutExpo
void Tweening::EaseType::_set_OutExpo(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_OutExpo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "OutExpo", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InOutExpo
Tweening::EaseType Tweening::EaseType::_get_InOutExpo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InOutExpo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InOutExpo"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InOutExpo
void Tweening::EaseType::_set_InOutExpo(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InOutExpo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InOutExpo", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InCirc
Tweening::EaseType Tweening::EaseType::_get_InCirc() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InCirc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InCirc"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InCirc
void Tweening::EaseType::_set_InCirc(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InCirc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InCirc", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType OutCirc
Tweening::EaseType Tweening::EaseType::_get_OutCirc() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_OutCirc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "OutCirc"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType OutCirc
void Tweening::EaseType::_set_OutCirc(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_OutCirc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "OutCirc", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InOutCirc
Tweening::EaseType Tweening::EaseType::_get_InOutCirc() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InOutCirc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InOutCirc"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InOutCirc
void Tweening::EaseType::_set_InOutCirc(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InOutCirc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InOutCirc", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InBack
Tweening::EaseType Tweening::EaseType::_get_InBack() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InBack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InBack"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InBack
void Tweening::EaseType::_set_InBack(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InBack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InBack", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType OutBack
Tweening::EaseType Tweening::EaseType::_get_OutBack() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_OutBack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "OutBack"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType OutBack
void Tweening::EaseType::_set_OutBack(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_OutBack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "OutBack", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InOutBack
Tweening::EaseType Tweening::EaseType::_get_InOutBack() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InOutBack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InOutBack"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InOutBack
void Tweening::EaseType::_set_InOutBack(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InOutBack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InOutBack", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InElastic
Tweening::EaseType Tweening::EaseType::_get_InElastic() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InElastic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InElastic"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InElastic
void Tweening::EaseType::_set_InElastic(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InElastic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InElastic", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType OutElastic
Tweening::EaseType Tweening::EaseType::_get_OutElastic() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_OutElastic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "OutElastic"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType OutElastic
void Tweening::EaseType::_set_OutElastic(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_OutElastic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "OutElastic", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InOutElastic
Tweening::EaseType Tweening::EaseType::_get_InOutElastic() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InOutElastic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InOutElastic"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InOutElastic
void Tweening::EaseType::_set_InOutElastic(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InOutElastic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InOutElastic", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InBounce
Tweening::EaseType Tweening::EaseType::_get_InBounce() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InBounce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InBounce"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InBounce
void Tweening::EaseType::_set_InBounce(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InBounce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InBounce", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType OutBounce
Tweening::EaseType Tweening::EaseType::_get_OutBounce() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_OutBounce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "OutBounce"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType OutBounce
void Tweening::EaseType::_set_OutBounce(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_OutBounce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "OutBounce", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InOutBounce
Tweening::EaseType Tweening::EaseType::_get_InOutBounce() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InOutBounce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InOutBounce"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InOutBounce
void Tweening::EaseType::_set_InOutBounce(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InOutBounce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InOutBounce", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tweening.Interpolation
#include "Tweening/Interpolation.hpp"
// Including type: Tweening.EaseType
#include "Tweening/EaseType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Tweening.Interpolation.Interpolate
float Tweening::Interpolation::Interpolate(float t, Tweening::EaseType easeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Interpolation::Interpolate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Tweening", "Interpolation", "Interpolate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(easeType)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, easeType);
}
// Writing MetadataGetter for method: Interpolation::Interpolate
// Il2CppName: Interpolate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (*)(float, Tweening::EaseType)>(&Interpolation::Interpolate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Interpolation*), "Interpolate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<Tweening::EaseType>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tweening.Tween
#include "Tweening/Tween.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static protected System.Single kEpsilon
float Tweening::Tween::_get_kEpsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::_get_kEpsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("Tweening", "Tween", "kEpsilon"));
}
// Autogenerated static field setter
// Set static field: static protected System.Single kEpsilon
void Tweening::Tween::_set_kEpsilon(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::_set_kEpsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "Tween", "kEpsilon", value));
}
// Autogenerated method: Tweening.Tween.get_progress
float Tweening::Tween::get_progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::get_progress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_progress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Tweening.Tween.get_time
float Tweening::Tween::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::get_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Tweening.Tween.set_time
void Tweening::Tween::set_time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::set_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tweening.Tween.get_duration
float Tweening::Tween::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::get_duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Tweening.Tween.set_duration
void Tweening::Tween::set_duration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::set_duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tweening.Tween.get_loop
bool Tweening::Tween::get_loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::get_loop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_loop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Tweening.Tween.set_loop
void Tweening::Tween::set_loop(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::set_loop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_loop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tweening.Tween.get_delay
float Tweening::Tween::get_delay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::get_delay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_delay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Tweening.Tween.set_delay
void Tweening::Tween::set_delay(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::set_delay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_delay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tweening.Tween.get_isStarted
bool Tweening::Tween::get_isStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::get_isStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Tweening.Tween.set_isStarted
void Tweening::Tween::set_isStarted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::set_isStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tweening.Tween.get_isActive
bool Tweening::Tween::get_isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::get_isActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Tweening.Tween.get_isComplete
bool Tweening::Tween::get_isComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::get_isComplete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isComplete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Tweening.Tween.get_isKilled
bool Tweening::Tween::get_isKilled() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::get_isKilled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isKilled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Tweening.Tween.set_isKilled
void Tweening::Tween::set_isKilled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::set_isKilled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isKilled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tweening.Tween.get_interpolationType
Tweening::InterpolationType Tweening::Tween::get_interpolationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::get_interpolationType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interpolationType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Tweening::InterpolationType, false>(this, ___internal__method);
}
// Autogenerated method: Tweening.Tween.set_interpolationType
void Tweening::Tween::set_interpolationType(Tweening::InterpolationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::set_interpolationType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interpolationType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tweening.Tween.get_easeType
Tweening::EaseType Tweening::Tween::get_easeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::get_easeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_easeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Tweening::EaseType, false>(this, ___internal__method);
}
// Autogenerated method: Tweening.Tween.set_easeType
void Tweening::Tween::set_easeType(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::set_easeType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_easeType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tweening.Tween.get_animationCurve
UnityEngine::AnimationCurve* Tweening::Tween::get_animationCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::get_animationCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animationCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationCurve*, false>(this, ___internal__method);
}
// Autogenerated method: Tweening.Tween.set_animationCurve
void Tweening::Tween::set_animationCurve(UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::set_animationCurve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_animationCurve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tweening.Tween.Kill
void Tweening::Tween::Kill() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::Kill");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Kill", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tweening.Tween.Restart
void Tweening::Tween::Restart() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::Restart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Restart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tweening.Tween.Update
void Tweening::Tween::Update(float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deltaTime)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, deltaTime);
}
// Autogenerated method: Tweening.Tween.Sample
void Tweening::Tween::Sample(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::Sample");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Sample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: Tweening.Tween.Interpolate
float Tweening::Tween::Interpolate(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::Interpolate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Interpolate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, t);
}
// Writing MetadataGetter for method: Tween::get_progress
// Il2CppName: get_progress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Tween::*)()>(&Tween::get_progress)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tween*), "get_progress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Tween::get_time
// Il2CppName: get_time
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Tween::*)()>(&Tween::get_time)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tween*), "get_time", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Tween::set_time
// Il2CppName: set_time
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Tween::*)(float)>(&Tween::set_time)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tween*), "set_time", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Tween::get_duration
// Il2CppName: get_duration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Tween::*)()>(&Tween::get_duration)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tween*), "get_duration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Tween::set_duration
// Il2CppName: set_duration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Tween::*)(float)>(&Tween::set_duration)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tween*), "set_duration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Tween::get_loop
// Il2CppName: get_loop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Tween::*)()>(&Tween::get_loop)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tween*), "get_loop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Tween::set_loop
// Il2CppName: set_loop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Tween::*)(bool)>(&Tween::set_loop)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tween*), "set_loop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Tween::get_delay
// Il2CppName: get_delay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Tween::*)()>(&Tween::get_delay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tween*), "get_delay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Tween::set_delay
// Il2CppName: set_delay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Tween::*)(float)>(&Tween::set_delay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tween*), "set_delay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Tween::get_isStarted
// Il2CppName: get_isStarted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Tween::*)()>(&Tween::get_isStarted)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tween*), "get_isStarted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Tween::set_isStarted
// Il2CppName: set_isStarted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Tween::*)(bool)>(&Tween::set_isStarted)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tween*), "set_isStarted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Tween::get_isActive
// Il2CppName: get_isActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Tween::*)()>(&Tween::get_isActive)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tween*), "get_isActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Tween::get_isComplete
// Il2CppName: get_isComplete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Tween::*)()>(&Tween::get_isComplete)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tween*), "get_isComplete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Tween::get_isKilled
// Il2CppName: get_isKilled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Tween::*)()>(&Tween::get_isKilled)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tween*), "get_isKilled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Tween::set_isKilled
// Il2CppName: set_isKilled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Tween::*)(bool)>(&Tween::set_isKilled)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tween*), "set_isKilled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Tween::get_interpolationType
// Il2CppName: get_interpolationType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Tweening::InterpolationType (Tween::*)()>(&Tween::get_interpolationType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tween*), "get_interpolationType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Tween::set_interpolationType
// Il2CppName: set_interpolationType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Tween::*)(Tweening::InterpolationType)>(&Tween::set_interpolationType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tween*), "set_interpolationType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Tweening::InterpolationType>()});
  }
};
// Writing MetadataGetter for method: Tween::get_easeType
// Il2CppName: get_easeType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Tweening::EaseType (Tween::*)()>(&Tween::get_easeType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tween*), "get_easeType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Tween::set_easeType
// Il2CppName: set_easeType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Tween::*)(Tweening::EaseType)>(&Tween::set_easeType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tween*), "set_easeType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Tweening::EaseType>()});
  }
};
// Writing MetadataGetter for method: Tween::get_animationCurve
// Il2CppName: get_animationCurve
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::AnimationCurve* (Tween::*)()>(&Tween::get_animationCurve)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tween*), "get_animationCurve", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Tween::set_animationCurve
// Il2CppName: set_animationCurve
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Tween::*)(UnityEngine::AnimationCurve*)>(&Tween::set_animationCurve)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tween*), "set_animationCurve", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::AnimationCurve*>()});
  }
};
// Writing MetadataGetter for method: Tween::Kill
// Il2CppName: Kill
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Tween::*)()>(&Tween::Kill)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tween*), "Kill", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Tween::Restart
// Il2CppName: Restart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Tween::*)()>(&Tween::Restart)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tween*), "Restart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Tween::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Tween::*)(float)>(&Tween::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tween*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Tween::Sample
// Il2CppName: Sample
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Tween::*)(float)>(&Tween::Sample)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tween*), "Sample", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Tween::Interpolate
// Il2CppName: Interpolate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (Tween::*)(float)>(&Tween::Interpolate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tween*), "Interpolate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: Tween::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Tween::*)()>(&Tween::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tween*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Tween::*)()>(&Tween::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Tween*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tweening.TweeningManager
#include "Tweening/TweeningManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Tweening.Tween
#include "Tweening/Tween.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Tweening.TweeningManager.Start
void Tweening::TweeningManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::TweeningManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tweening.TweeningManager.Update
void Tweening::TweeningManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::TweeningManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tweening.TweeningManager.AddTween
Tweening::Tween* Tweening::TweeningManager::AddTween(Tweening::Tween* tween, UnityEngine::Object* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::TweeningManager::AddTween");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTween", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tween), ::il2cpp_utils::ExtractType(owner)})));
  return ::il2cpp_utils::RunMethodThrow<Tweening::Tween*, false>(this, ___internal__method, tween, owner);
}
// Autogenerated method: Tweening.TweeningManager.RestartTween
Tweening::Tween* Tweening::TweeningManager::RestartTween(Tweening::Tween* tween, UnityEngine::Object* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::TweeningManager::RestartTween");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RestartTween", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tween), ::il2cpp_utils::ExtractType(owner)})));
  return ::il2cpp_utils::RunMethodThrow<Tweening::Tween*, false>(this, ___internal__method, tween, owner);
}
// Autogenerated method: Tweening.TweeningManager.KillAllTweens
void Tweening::TweeningManager::KillAllTweens(UnityEngine::Object* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::TweeningManager::KillAllTweens");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KillAllTweens", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(owner)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, owner);
}
// Autogenerated method: Tweening.TweeningManager.AddTweenToOwnerDictionary
void Tweening::TweeningManager::AddTweenToOwnerDictionary(Tweening::Tween* tween, UnityEngine::Object* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::TweeningManager::AddTweenToOwnerDictionary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddTweenToOwnerDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tween), ::il2cpp_utils::ExtractType(owner)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tween, owner);
}
// Writing MetadataGetter for method: TweeningManager::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TweeningManager::*)()>(&TweeningManager::Start)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TweeningManager*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TweeningManager::Update
// Il2CppName: Update
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TweeningManager::*)()>(&TweeningManager::Update)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TweeningManager*), "Update", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TweeningManager::AddTween
// Il2CppName: AddTween
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Tweening::Tween* (TweeningManager::*)(Tweening::Tween*, UnityEngine::Object*)>(&TweeningManager::AddTween)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TweeningManager*), "AddTween", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Tweening::Tween*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Object*>()});
  }
};
// Writing MetadataGetter for method: TweeningManager::RestartTween
// Il2CppName: RestartTween
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Tweening::Tween* (TweeningManager::*)(Tweening::Tween*, UnityEngine::Object*)>(&TweeningManager::RestartTween)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TweeningManager*), "RestartTween", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Tweening::Tween*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Object*>()});
  }
};
// Writing MetadataGetter for method: TweeningManager::KillAllTweens
// Il2CppName: KillAllTweens
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TweeningManager::*)(UnityEngine::Object*)>(&TweeningManager::KillAllTweens)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TweeningManager*), "KillAllTweens", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Object*>()});
  }
};
// Writing MetadataGetter for method: TweeningManager::AddTweenToOwnerDictionary
// Il2CppName: AddTweenToOwnerDictionary
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TweeningManager::*)(Tweening::Tween*, UnityEngine::Object*)>(&TweeningManager::AddTweenToOwnerDictionary)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TweeningManager*), "AddTweenToOwnerDictionary", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Tweening::Tween*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Object*>()});
  }
};
// Writing MetadataGetter for method: TweeningManager::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TweeningManager::*)()>(&TweeningManager::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TweeningManager*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TweeningManager::*)()>(&TweeningManager::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TweeningManager*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Menu.ViewControllers.EditAvatarHistorySnapshot
#include "Menu/ViewControllers/EditAvatarHistorySnapshot.hpp"
// Including type: AvatarData
#include "GlobalNamespace/AvatarData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Menu.ViewControllers.EditAvatarHistorySnapshot.get_avatarEditPart
GlobalNamespace::EditAvatarViewController::AvatarEditPart Menu::ViewControllers::EditAvatarHistorySnapshot::get_avatarEditPart() {
  static auto ___internal__logger = ::Logger::get().WithContext("Menu::ViewControllers::EditAvatarHistorySnapshot::get_avatarEditPart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_avatarEditPart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EditAvatarViewController::AvatarEditPart, false>(this, ___internal__method);
}
// Autogenerated method: Menu.ViewControllers.EditAvatarHistorySnapshot.get_avatarData
GlobalNamespace::AvatarData* Menu::ViewControllers::EditAvatarHistorySnapshot::get_avatarData() {
  static auto ___internal__logger = ::Logger::get().WithContext("Menu::ViewControllers::EditAvatarHistorySnapshot::get_avatarData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_avatarData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::AvatarData*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: EditAvatarHistorySnapshot::get_avatarEditPart
// Il2CppName: get_avatarEditPart
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::EditAvatarViewController::AvatarEditPart (EditAvatarHistorySnapshot::*)()>(&EditAvatarHistorySnapshot::get_avatarEditPart)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarHistorySnapshot*), "get_avatarEditPart", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarHistorySnapshot::get_avatarData
// Il2CppName: get_avatarData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::AvatarData* (EditAvatarHistorySnapshot::*)()>(&EditAvatarHistorySnapshot::get_avatarData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarHistorySnapshot*), "get_avatarData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditAvatarHistorySnapshot::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarHistorySnapshot::*)(GlobalNamespace::AvatarData*, GlobalNamespace::EditAvatarViewController::AvatarEditPart)>(&EditAvatarHistorySnapshot::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarHistorySnapshot*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::AvatarData*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::EditAvatarViewController::AvatarEditPart>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditAvatarHistorySnapshot::*)(GlobalNamespace::AvatarData*, GlobalNamespace::EditAvatarViewController::AvatarEditPart)>(&EditAvatarHistorySnapshot::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditAvatarHistorySnapshot*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::AvatarData*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::EditAvatarViewController::AvatarEditPart>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LeaderboardsDTO.LoginRequestDTO
#include "LeaderboardsDTO/LoginRequestDTO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: LoginRequestDTO::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LoginRequestDTO::*)()>(&LoginRequestDTO::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LoginRequestDTO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LoginRequestDTO::*)()>(&LoginRequestDTO::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LoginRequestDTO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LeaderboardsDTO.LeaderboardQueryDTO
#include "LeaderboardsDTO/LeaderboardQueryDTO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: LeaderboardQueryDTO::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardQueryDTO::*)()>(&LeaderboardQueryDTO::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardQueryDTO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardQueryDTO::*)()>(&LeaderboardQueryDTO::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardQueryDTO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardsDTO.LeaderboardQueryDTO/ScoresScope
#include "LeaderboardsDTO/LeaderboardQueryDTO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LeaderboardsDTO.LeaderboardQueryDTO/ScoresScope Global
LeaderboardsDTO::LeaderboardQueryDTO::ScoresScope LeaderboardsDTO::LeaderboardQueryDTO::ScoresScope::_get_Global() {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::LeaderboardQueryDTO::ScoresScope::_get_Global");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LeaderboardsDTO::LeaderboardQueryDTO::ScoresScope>("LeaderboardsDTO", "LeaderboardQueryDTO/ScoresScope", "Global"));
}
// Autogenerated static field setter
// Set static field: static public LeaderboardsDTO.LeaderboardQueryDTO/ScoresScope Global
void LeaderboardsDTO::LeaderboardQueryDTO::ScoresScope::_set_Global(LeaderboardsDTO::LeaderboardQueryDTO::ScoresScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::LeaderboardQueryDTO::ScoresScope::_set_Global");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LeaderboardsDTO", "LeaderboardQueryDTO/ScoresScope", "Global", value));
}
// Autogenerated static field getter
// Get static field: static public LeaderboardsDTO.LeaderboardQueryDTO/ScoresScope Friends
LeaderboardsDTO::LeaderboardQueryDTO::ScoresScope LeaderboardsDTO::LeaderboardQueryDTO::ScoresScope::_get_Friends() {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::LeaderboardQueryDTO::ScoresScope::_get_Friends");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LeaderboardsDTO::LeaderboardQueryDTO::ScoresScope>("LeaderboardsDTO", "LeaderboardQueryDTO/ScoresScope", "Friends"));
}
// Autogenerated static field setter
// Set static field: static public LeaderboardsDTO.LeaderboardQueryDTO/ScoresScope Friends
void LeaderboardsDTO::LeaderboardQueryDTO::ScoresScope::_set_Friends(LeaderboardsDTO::LeaderboardQueryDTO::ScoresScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::LeaderboardQueryDTO::ScoresScope::_set_Friends");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LeaderboardsDTO", "LeaderboardQueryDTO/ScoresScope", "Friends", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LeaderboardsDTO.TokenDTO
#include "LeaderboardsDTO/TokenDTO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: TokenDTO::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TokenDTO::*)()>(&TokenDTO::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TokenDTO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TokenDTO::*)()>(&TokenDTO::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TokenDTO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LeaderboardsDTO.LevelScoreResultDTO
#include "LeaderboardsDTO/LevelScoreResultDTO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: LevelScoreResultDTO::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelScoreResultDTO::*)()>(&LevelScoreResultDTO::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelScoreResultDTO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelScoreResultDTO::*)()>(&LevelScoreResultDTO::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelScoreResultDTO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LeaderboardsDTO.LeaderboardEntryDTO
#include "LeaderboardsDTO/LeaderboardEntryDTO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: LeaderboardEntryDTO::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardEntryDTO::*)()>(&LeaderboardEntryDTO::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardEntryDTO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardEntryDTO::*)()>(&LeaderboardEntryDTO::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardEntryDTO*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardsDTO.GameplayModifiersDto
#include "LeaderboardsDTO/GameplayModifiersDto.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LeaderboardsDTO.GameplayModifiersDto None
LeaderboardsDTO::GameplayModifiersDto LeaderboardsDTO::GameplayModifiersDto::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LeaderboardsDTO::GameplayModifiersDto>("LeaderboardsDTO", "GameplayModifiersDto", "None"));
}
// Autogenerated static field setter
// Set static field: static public LeaderboardsDTO.GameplayModifiersDto None
void LeaderboardsDTO::GameplayModifiersDto::_set_None(LeaderboardsDTO::GameplayModifiersDto value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LeaderboardsDTO", "GameplayModifiersDto", "None", value));
}
// Autogenerated static field getter
// Get static field: static public LeaderboardsDTO.GameplayModifiersDto NoFail
LeaderboardsDTO::GameplayModifiersDto LeaderboardsDTO::GameplayModifiersDto::_get_NoFail() {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_get_NoFail");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LeaderboardsDTO::GameplayModifiersDto>("LeaderboardsDTO", "GameplayModifiersDto", "NoFail"));
}
// Autogenerated static field setter
// Set static field: static public LeaderboardsDTO.GameplayModifiersDto NoFail
void LeaderboardsDTO::GameplayModifiersDto::_set_NoFail(LeaderboardsDTO::GameplayModifiersDto value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_set_NoFail");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LeaderboardsDTO", "GameplayModifiersDto", "NoFail", value));
}
// Autogenerated static field getter
// Get static field: static public LeaderboardsDTO.GameplayModifiersDto InstaFail
LeaderboardsDTO::GameplayModifiersDto LeaderboardsDTO::GameplayModifiersDto::_get_InstaFail() {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_get_InstaFail");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LeaderboardsDTO::GameplayModifiersDto>("LeaderboardsDTO", "GameplayModifiersDto", "InstaFail"));
}
// Autogenerated static field setter
// Set static field: static public LeaderboardsDTO.GameplayModifiersDto InstaFail
void LeaderboardsDTO::GameplayModifiersDto::_set_InstaFail(LeaderboardsDTO::GameplayModifiersDto value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_set_InstaFail");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LeaderboardsDTO", "GameplayModifiersDto", "InstaFail", value));
}
// Autogenerated static field getter
// Get static field: static public LeaderboardsDTO.GameplayModifiersDto FailOnSaberClash
LeaderboardsDTO::GameplayModifiersDto LeaderboardsDTO::GameplayModifiersDto::_get_FailOnSaberClash() {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_get_FailOnSaberClash");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LeaderboardsDTO::GameplayModifiersDto>("LeaderboardsDTO", "GameplayModifiersDto", "FailOnSaberClash"));
}
// Autogenerated static field setter
// Set static field: static public LeaderboardsDTO.GameplayModifiersDto FailOnSaberClash
void LeaderboardsDTO::GameplayModifiersDto::_set_FailOnSaberClash(LeaderboardsDTO::GameplayModifiersDto value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_set_FailOnSaberClash");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LeaderboardsDTO", "GameplayModifiersDto", "FailOnSaberClash", value));
}
// Autogenerated static field getter
// Get static field: static public LeaderboardsDTO.GameplayModifiersDto FastNotes
LeaderboardsDTO::GameplayModifiersDto LeaderboardsDTO::GameplayModifiersDto::_get_FastNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_get_FastNotes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LeaderboardsDTO::GameplayModifiersDto>("LeaderboardsDTO", "GameplayModifiersDto", "FastNotes"));
}
// Autogenerated static field setter
// Set static field: static public LeaderboardsDTO.GameplayModifiersDto FastNotes
void LeaderboardsDTO::GameplayModifiersDto::_set_FastNotes(LeaderboardsDTO::GameplayModifiersDto value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_set_FastNotes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LeaderboardsDTO", "GameplayModifiersDto", "FastNotes", value));
}
// Autogenerated static field getter
// Get static field: static public LeaderboardsDTO.GameplayModifiersDto DisappearingArrows
LeaderboardsDTO::GameplayModifiersDto LeaderboardsDTO::GameplayModifiersDto::_get_DisappearingArrows() {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_get_DisappearingArrows");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LeaderboardsDTO::GameplayModifiersDto>("LeaderboardsDTO", "GameplayModifiersDto", "DisappearingArrows"));
}
// Autogenerated static field setter
// Set static field: static public LeaderboardsDTO.GameplayModifiersDto DisappearingArrows
void LeaderboardsDTO::GameplayModifiersDto::_set_DisappearingArrows(LeaderboardsDTO::GameplayModifiersDto value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_set_DisappearingArrows");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LeaderboardsDTO", "GameplayModifiersDto", "DisappearingArrows", value));
}
// Autogenerated static field getter
// Get static field: static public LeaderboardsDTO.GameplayModifiersDto NoBombs
LeaderboardsDTO::GameplayModifiersDto LeaderboardsDTO::GameplayModifiersDto::_get_NoBombs() {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_get_NoBombs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LeaderboardsDTO::GameplayModifiersDto>("LeaderboardsDTO", "GameplayModifiersDto", "NoBombs"));
}
// Autogenerated static field setter
// Set static field: static public LeaderboardsDTO.GameplayModifiersDto NoBombs
void LeaderboardsDTO::GameplayModifiersDto::_set_NoBombs(LeaderboardsDTO::GameplayModifiersDto value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_set_NoBombs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LeaderboardsDTO", "GameplayModifiersDto", "NoBombs", value));
}
// Autogenerated static field getter
// Get static field: static public LeaderboardsDTO.GameplayModifiersDto SongSpeedFaster
LeaderboardsDTO::GameplayModifiersDto LeaderboardsDTO::GameplayModifiersDto::_get_SongSpeedFaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_get_SongSpeedFaster");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LeaderboardsDTO::GameplayModifiersDto>("LeaderboardsDTO", "GameplayModifiersDto", "SongSpeedFaster"));
}
// Autogenerated static field setter
// Set static field: static public LeaderboardsDTO.GameplayModifiersDto SongSpeedFaster
void LeaderboardsDTO::GameplayModifiersDto::_set_SongSpeedFaster(LeaderboardsDTO::GameplayModifiersDto value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_set_SongSpeedFaster");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LeaderboardsDTO", "GameplayModifiersDto", "SongSpeedFaster", value));
}
// Autogenerated static field getter
// Get static field: static public LeaderboardsDTO.GameplayModifiersDto SongSpeedSlower
LeaderboardsDTO::GameplayModifiersDto LeaderboardsDTO::GameplayModifiersDto::_get_SongSpeedSlower() {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_get_SongSpeedSlower");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LeaderboardsDTO::GameplayModifiersDto>("LeaderboardsDTO", "GameplayModifiersDto", "SongSpeedSlower"));
}
// Autogenerated static field setter
// Set static field: static public LeaderboardsDTO.GameplayModifiersDto SongSpeedSlower
void LeaderboardsDTO::GameplayModifiersDto::_set_SongSpeedSlower(LeaderboardsDTO::GameplayModifiersDto value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_set_SongSpeedSlower");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LeaderboardsDTO", "GameplayModifiersDto", "SongSpeedSlower", value));
}
// Autogenerated static field getter
// Get static field: static public LeaderboardsDTO.GameplayModifiersDto EnabledObstacleTypeFullHeightOnly
LeaderboardsDTO::GameplayModifiersDto LeaderboardsDTO::GameplayModifiersDto::_get_EnabledObstacleTypeFullHeightOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_get_EnabledObstacleTypeFullHeightOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LeaderboardsDTO::GameplayModifiersDto>("LeaderboardsDTO", "GameplayModifiersDto", "EnabledObstacleTypeFullHeightOnly"));
}
// Autogenerated static field setter
// Set static field: static public LeaderboardsDTO.GameplayModifiersDto EnabledObstacleTypeFullHeightOnly
void LeaderboardsDTO::GameplayModifiersDto::_set_EnabledObstacleTypeFullHeightOnly(LeaderboardsDTO::GameplayModifiersDto value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_set_EnabledObstacleTypeFullHeightOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LeaderboardsDTO", "GameplayModifiersDto", "EnabledObstacleTypeFullHeightOnly", value));
}
// Autogenerated static field getter
// Get static field: static public LeaderboardsDTO.GameplayModifiersDto EnabledObstacleTypeNoObstacles
LeaderboardsDTO::GameplayModifiersDto LeaderboardsDTO::GameplayModifiersDto::_get_EnabledObstacleTypeNoObstacles() {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_get_EnabledObstacleTypeNoObstacles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LeaderboardsDTO::GameplayModifiersDto>("LeaderboardsDTO", "GameplayModifiersDto", "EnabledObstacleTypeNoObstacles"));
}
// Autogenerated static field setter
// Set static field: static public LeaderboardsDTO.GameplayModifiersDto EnabledObstacleTypeNoObstacles
void LeaderboardsDTO::GameplayModifiersDto::_set_EnabledObstacleTypeNoObstacles(LeaderboardsDTO::GameplayModifiersDto value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_set_EnabledObstacleTypeNoObstacles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LeaderboardsDTO", "GameplayModifiersDto", "EnabledObstacleTypeNoObstacles", value));
}
// Autogenerated static field getter
// Get static field: static public LeaderboardsDTO.GameplayModifiersDto EnergyTypeBattery
LeaderboardsDTO::GameplayModifiersDto LeaderboardsDTO::GameplayModifiersDto::_get_EnergyTypeBattery() {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_get_EnergyTypeBattery");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LeaderboardsDTO::GameplayModifiersDto>("LeaderboardsDTO", "GameplayModifiersDto", "EnergyTypeBattery"));
}
// Autogenerated static field setter
// Set static field: static public LeaderboardsDTO.GameplayModifiersDto EnergyTypeBattery
void LeaderboardsDTO::GameplayModifiersDto::_set_EnergyTypeBattery(LeaderboardsDTO::GameplayModifiersDto value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_set_EnergyTypeBattery");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LeaderboardsDTO", "GameplayModifiersDto", "EnergyTypeBattery", value));
}
// Autogenerated static field getter
// Get static field: static public LeaderboardsDTO.GameplayModifiersDto StrictAngles
LeaderboardsDTO::GameplayModifiersDto LeaderboardsDTO::GameplayModifiersDto::_get_StrictAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_get_StrictAngles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LeaderboardsDTO::GameplayModifiersDto>("LeaderboardsDTO", "GameplayModifiersDto", "StrictAngles"));
}
// Autogenerated static field setter
// Set static field: static public LeaderboardsDTO.GameplayModifiersDto StrictAngles
void LeaderboardsDTO::GameplayModifiersDto::_set_StrictAngles(LeaderboardsDTO::GameplayModifiersDto value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_set_StrictAngles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LeaderboardsDTO", "GameplayModifiersDto", "StrictAngles", value));
}
// Autogenerated static field getter
// Get static field: static public LeaderboardsDTO.GameplayModifiersDto NoArrows
LeaderboardsDTO::GameplayModifiersDto LeaderboardsDTO::GameplayModifiersDto::_get_NoArrows() {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_get_NoArrows");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LeaderboardsDTO::GameplayModifiersDto>("LeaderboardsDTO", "GameplayModifiersDto", "NoArrows"));
}
// Autogenerated static field setter
// Set static field: static public LeaderboardsDTO.GameplayModifiersDto NoArrows
void LeaderboardsDTO::GameplayModifiersDto::_set_NoArrows(LeaderboardsDTO::GameplayModifiersDto value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_set_NoArrows");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LeaderboardsDTO", "GameplayModifiersDto", "NoArrows", value));
}
// Autogenerated static field getter
// Get static field: static public LeaderboardsDTO.GameplayModifiersDto GhostNotes
LeaderboardsDTO::GameplayModifiersDto LeaderboardsDTO::GameplayModifiersDto::_get_GhostNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_get_GhostNotes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LeaderboardsDTO::GameplayModifiersDto>("LeaderboardsDTO", "GameplayModifiersDto", "GhostNotes"));
}
// Autogenerated static field setter
// Set static field: static public LeaderboardsDTO.GameplayModifiersDto GhostNotes
void LeaderboardsDTO::GameplayModifiersDto::_set_GhostNotes(LeaderboardsDTO::GameplayModifiersDto value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_set_GhostNotes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LeaderboardsDTO", "GameplayModifiersDto", "GhostNotes", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OnlineServices.LeaderboardEntriesResult
#include "OnlineServices/LeaderboardEntriesResult.hpp"
// Including type: OnlineServices.LeaderboardEntryData
#include "OnlineServices/LeaderboardEntryData.hpp"
// Including type: OnlineServices.GetLeaderboardEntriesResult
#include "OnlineServices/GetLeaderboardEntriesResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.LeaderboardEntriesResult.ErrorResult
OnlineServices::LeaderboardEntriesResult* OnlineServices::LeaderboardEntriesResult::ErrorResult(::Il2CppString* localizedErrorMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::LeaderboardEntriesResult::ErrorResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OnlineServices", "LeaderboardEntriesResult", "ErrorResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localizedErrorMessage)})));
  return ::il2cpp_utils::RunMethodThrow<OnlineServices::LeaderboardEntriesResult*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, localizedErrorMessage);
}
// Autogenerated method: OnlineServices.LeaderboardEntriesResult.get_notInicializedError
OnlineServices::LeaderboardEntriesResult* OnlineServices::LeaderboardEntriesResult::get_notInicializedError() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::LeaderboardEntriesResult::get_notInicializedError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OnlineServices", "LeaderboardEntriesResult", "get_notInicializedError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<OnlineServices::LeaderboardEntriesResult*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OnlineServices.LeaderboardEntriesResult.get_somethingWentWrongError
OnlineServices::LeaderboardEntriesResult* OnlineServices::LeaderboardEntriesResult::get_somethingWentWrongError() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::LeaderboardEntriesResult::get_somethingWentWrongError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OnlineServices", "LeaderboardEntriesResult", "get_somethingWentWrongError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<OnlineServices::LeaderboardEntriesResult*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OnlineServices.LeaderboardEntriesResult.get_onlineServicesUnavailableError
OnlineServices::LeaderboardEntriesResult* OnlineServices::LeaderboardEntriesResult::get_onlineServicesUnavailableError() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::LeaderboardEntriesResult::get_onlineServicesUnavailableError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OnlineServices", "LeaderboardEntriesResult", "get_onlineServicesUnavailableError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<OnlineServices::LeaderboardEntriesResult*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OnlineServices.LeaderboardEntriesResult.FromGetLeaderboardEntriesResult
OnlineServices::LeaderboardEntriesResult* OnlineServices::LeaderboardEntriesResult::FromGetLeaderboardEntriesResult(OnlineServices::GetLeaderboardEntriesResult getLeaderboardEntriesResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::LeaderboardEntriesResult::FromGetLeaderboardEntriesResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("OnlineServices", "LeaderboardEntriesResult", "FromGetLeaderboardEntriesResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(getLeaderboardEntriesResult)})));
  return ::il2cpp_utils::RunMethodThrow<OnlineServices::LeaderboardEntriesResult*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, getLeaderboardEntriesResult);
}
// Writing MetadataGetter for method: LeaderboardEntriesResult::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardEntriesResult::*)(::Array<OnlineServices::LeaderboardEntryData*>*, int, bool, ::Il2CppString*)>(&LeaderboardEntriesResult::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardEntriesResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<OnlineServices::LeaderboardEntryData*>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardEntriesResult::*)(::Array<OnlineServices::LeaderboardEntryData*>*, int, bool, ::Il2CppString*)>(&LeaderboardEntriesResult::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardEntriesResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<OnlineServices::LeaderboardEntryData*>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: LeaderboardEntriesResult::ErrorResult
// Il2CppName: ErrorResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<OnlineServices::LeaderboardEntriesResult* (*)(::Il2CppString*)>(&LeaderboardEntriesResult::ErrorResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardEntriesResult*), "ErrorResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: LeaderboardEntriesResult::get_notInicializedError
// Il2CppName: get_notInicializedError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<OnlineServices::LeaderboardEntriesResult* (*)()>(&LeaderboardEntriesResult::get_notInicializedError)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardEntriesResult*), "get_notInicializedError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LeaderboardEntriesResult::get_somethingWentWrongError
// Il2CppName: get_somethingWentWrongError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<OnlineServices::LeaderboardEntriesResult* (*)()>(&LeaderboardEntriesResult::get_somethingWentWrongError)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardEntriesResult*), "get_somethingWentWrongError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LeaderboardEntriesResult::get_onlineServicesUnavailableError
// Il2CppName: get_onlineServicesUnavailableError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<OnlineServices::LeaderboardEntriesResult* (*)()>(&LeaderboardEntriesResult::get_onlineServicesUnavailableError)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardEntriesResult*), "get_onlineServicesUnavailableError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LeaderboardEntriesResult::FromGetLeaderboardEntriesResult
// Il2CppName: FromGetLeaderboardEntriesResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<OnlineServices::LeaderboardEntriesResult* (*)(OnlineServices::GetLeaderboardEntriesResult)>(&LeaderboardEntriesResult::FromGetLeaderboardEntriesResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardEntriesResult*), "FromGetLeaderboardEntriesResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<OnlineServices::GetLeaderboardEntriesResult>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OnlineServices.ILeaderboardsModel
#include "OnlineServices/ILeaderboardsModel.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: OnlineServices.GetLeaderboardFilterData
#include "OnlineServices/GetLeaderboardFilterData.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: OnlineServices.LevelScoreResultsData
#include "OnlineServices/LevelScoreResultsData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.ILeaderboardsModel.GetLeaderboardId
::Il2CppString* OnlineServices::ILeaderboardsModel::GetLeaderboardId(GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::ILeaderboardsModel::GetLeaderboardId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeaderboardId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, difficultyBeatmap);
}
// Autogenerated method: OnlineServices.ILeaderboardsModel.GetLeaderboardEntriesAsync
System::Threading::Tasks::Task_1<OnlineServices::GetLeaderboardEntriesResult>* OnlineServices::ILeaderboardsModel::GetLeaderboardEntriesAsync(OnlineServices::GetLeaderboardFilterData leaderboardFilterData, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::ILeaderboardsModel::GetLeaderboardEntriesAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLeaderboardEntriesAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardFilterData), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<OnlineServices::GetLeaderboardEntriesResult>*, false>(this, ___internal__method, leaderboardFilterData, cancellationToken);
}
// Autogenerated method: OnlineServices.ILeaderboardsModel.SendLevelScoreResultAsync
System::Threading::Tasks::Task_1<OnlineServices::SendLeaderboardEntryResult>* OnlineServices::ILeaderboardsModel::SendLevelScoreResultAsync(OnlineServices::LevelScoreResultsData levelScoreResultsData, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::ILeaderboardsModel::SendLevelScoreResultAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendLevelScoreResultAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelScoreResultsData), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<OnlineServices::SendLeaderboardEntryResult>*, false>(this, ___internal__method, levelScoreResultsData, cancellationToken);
}
// Writing MetadataGetter for method: ILeaderboardsModel::GetLeaderboardId
// Il2CppName: GetLeaderboardId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (ILeaderboardsModel::*)(GlobalNamespace::IDifficultyBeatmap*)>(&ILeaderboardsModel::GetLeaderboardId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ILeaderboardsModel*), "GetLeaderboardId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>()});
  }
};
// Writing MetadataGetter for method: ILeaderboardsModel::GetLeaderboardEntriesAsync
// Il2CppName: GetLeaderboardEntriesAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<OnlineServices::GetLeaderboardEntriesResult>* (ILeaderboardsModel::*)(OnlineServices::GetLeaderboardFilterData, System::Threading::CancellationToken)>(&ILeaderboardsModel::GetLeaderboardEntriesAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ILeaderboardsModel*), "GetLeaderboardEntriesAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<OnlineServices::GetLeaderboardFilterData>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: ILeaderboardsModel::SendLevelScoreResultAsync
// Il2CppName: SendLevelScoreResultAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<OnlineServices::SendLeaderboardEntryResult>* (ILeaderboardsModel::*)(OnlineServices::LevelScoreResultsData, System::Threading::CancellationToken)>(&ILeaderboardsModel::SendLevelScoreResultAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ILeaderboardsModel*), "SendLevelScoreResultAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<OnlineServices::LevelScoreResultsData>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OnlineServices.LevelScoreResultsData
#include "OnlineServices/LevelScoreResultsData.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.LevelScoreResultsData.ToString
::Il2CppString* OnlineServices::LevelScoreResultsData::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::LevelScoreResultsData::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Writing MetadataGetter for method: LevelScoreResultsData::LevelScoreResultsData
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelScoreResultsData::*)(GlobalNamespace::IDifficultyBeatmap*, int, int, bool, int, int, int, int, GlobalNamespace::GameplayModifiers*)>(&LevelScoreResultsData::LevelScoreResultsData<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelScoreResultsData), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifiers*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelScoreResultsData::*)(GlobalNamespace::IDifficultyBeatmap*, int, int, bool, int, int, int, int, GlobalNamespace::GameplayModifiers*)>(&LevelScoreResultsData::LevelScoreResultsData<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelScoreResultsData), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifiers*>()});
  }
};
// Writing MetadataGetter for method: LevelScoreResultsData::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (LevelScoreResultsData::*)()>(&LevelScoreResultsData::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelScoreResultsData), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
