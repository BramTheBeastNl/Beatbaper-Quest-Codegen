// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.CaseInsensitiveHashCodeProvider
#include "System/Collections/CaseInsensitiveHashCodeProvider.hpp"
// Including type: System.Globalization.TextInfo
#include "System/Globalization/TextInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.CaseInsensitiveHashCodeProvider.get_Default
System::Collections::CaseInsensitiveHashCodeProvider* System::Collections::CaseInsensitiveHashCodeProvider::get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::CaseInsensitiveHashCodeProvider::get_Default");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Collections", "CaseInsensitiveHashCodeProvider", "get_Default", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::CaseInsensitiveHashCodeProvider*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.CaseInsensitiveHashCodeProvider.GetHashCode
int System::Collections::CaseInsensitiveHashCodeProvider::GetHashCode(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::CaseInsensitiveHashCodeProvider::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.CollectionBase
#include "System/Collections/CollectionBase.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.CollectionBase.get_InnerList
System::Collections::ArrayList* System::Collections::CollectionBase::get_InnerList() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::CollectionBase::get_InnerList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_InnerList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::ArrayList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CollectionBase.OnSet
void System::Collections::CollectionBase::OnSet(int index, ::Il2CppObject* oldValue, ::Il2CppObject* newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::CollectionBase::OnSet");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnSet", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index, oldValue, newValue)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, oldValue, newValue);
}
// Autogenerated method: System.Collections.CollectionBase.OnInsert
void System::Collections::CollectionBase::OnInsert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::CollectionBase::OnInsert");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnInsert", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.CollectionBase.OnClear
void System::Collections::CollectionBase::OnClear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::CollectionBase::OnClear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnClear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CollectionBase.OnRemove
void System::Collections::CollectionBase::OnRemove(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::CollectionBase::OnRemove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnRemove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.CollectionBase.OnValidate
void System::Collections::CollectionBase::OnValidate(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::CollectionBase::OnValidate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.CollectionBase.OnSetComplete
void System::Collections::CollectionBase::OnSetComplete(int index, ::Il2CppObject* oldValue, ::Il2CppObject* newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::CollectionBase::OnSetComplete");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnSetComplete", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index, oldValue, newValue)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, oldValue, newValue);
}
// Autogenerated method: System.Collections.CollectionBase.OnInsertComplete
void System::Collections::CollectionBase::OnInsertComplete(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::CollectionBase::OnInsertComplete");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnInsertComplete", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.CollectionBase.OnClearComplete
void System::Collections::CollectionBase::OnClearComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::CollectionBase::OnClearComplete");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnClearComplete", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CollectionBase.OnRemoveComplete
void System::Collections::CollectionBase::OnRemoveComplete(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::CollectionBase::OnRemoveComplete");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnRemoveComplete", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.CollectionBase.get_Count
int System::Collections::CollectionBase::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::CollectionBase::get_Count");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
int System::Collections::CollectionBase::System_Collections_ICollection_get_Count() {
  return System::Collections::CollectionBase::get_Count();
}
// Autogenerated method: System.Collections.CollectionBase.Clear
void System::Collections::CollectionBase::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::CollectionBase::Clear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void System::Collections::CollectionBase::System_Collections_IList_Clear() {
  System::Collections::CollectionBase::Clear();
}
// Autogenerated method: System.Collections.CollectionBase.RemoveAt
void System::Collections::CollectionBase::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::CollectionBase::RemoveAt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index);
}
void System::Collections::CollectionBase::System_Collections_IList_RemoveAt(int index) {
  System::Collections::CollectionBase::RemoveAt(index);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.IList.get_IsReadOnly
bool System::Collections::CollectionBase::System_Collections_IList_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::CollectionBase::System.Collections.IList.get_IsReadOnly");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_IsReadOnly", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.ICollection.CopyTo
void System::Collections::CollectionBase::System_Collections_ICollection_CopyTo(System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::CollectionBase::System.Collections.ICollection.CopyTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.IList.get_Item
::Il2CppObject* System::Collections::CollectionBase::System_Collections_IList_get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::CollectionBase::System.Collections.IList.get_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.IList.set_Item
void System::Collections::CollectionBase::System_Collections_IList_set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::CollectionBase::System.Collections.IList.set_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IList.set_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.IList.Contains
bool System::Collections::CollectionBase::System_Collections_IList_Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::CollectionBase::System.Collections.IList.Contains");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IList.Contains", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.IList.Add
int System::Collections::CollectionBase::System_Collections_IList_Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::CollectionBase::System.Collections.IList.Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IList.Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.IList.Remove
void System::Collections::CollectionBase::System_Collections_IList_Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::CollectionBase::System.Collections.IList.Remove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IList.Remove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.IList.IndexOf
int System::Collections::CollectionBase::System_Collections_IList_IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::CollectionBase::System.Collections.IList.IndexOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IList.IndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.CollectionBase.System.Collections.IList.Insert
void System::Collections::CollectionBase::System_Collections_IList_Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::CollectionBase::System.Collections.IList.Insert");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IList.Insert", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.CollectionBase.GetEnumerator
System::Collections::IEnumerator* System::Collections::CollectionBase::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::CollectionBase::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
System::Collections::IEnumerator* System::Collections::CollectionBase::System_Collections_IEnumerable_GetEnumerator() {
  return System::Collections::CollectionBase::GetEnumerator();
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Comparer
#include "System/Collections/Comparer.hpp"
// Including type: System.Globalization.CompareInfo
#include "System/Globalization/CompareInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Collections.Comparer Default
System::Collections::Comparer* System::Collections::Comparer::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Comparer::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Comparer*>("System.Collections", "Comparer", "Default"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Collections.Comparer Default
void System::Collections::Comparer::_set_Default(System::Collections::Comparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Comparer::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Comparer", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Collections.Comparer DefaultInvariant
System::Collections::Comparer* System::Collections::Comparer::_get_DefaultInvariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Comparer::_get_DefaultInvariant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Comparer*>("System.Collections", "Comparer", "DefaultInvariant"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Collections.Comparer DefaultInvariant
void System::Collections::Comparer::_set_DefaultInvariant(System::Collections::Comparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Comparer::_set_DefaultInvariant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Comparer", "DefaultInvariant", value));
}
// Autogenerated method: System.Collections.Comparer..cctor
void System::Collections::Comparer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Comparer::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Collections", "Comparer", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.Comparer.Compare
int System::Collections::Comparer::Compare(::Il2CppObject* a, ::Il2CppObject* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Comparer::Compare");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, a, b);
}
int System::Collections::Comparer::System_Collections_IComparer_Compare(::Il2CppObject* a, ::Il2CppObject* b) {
  return System::Collections::Comparer::Compare(a, b);
}
// Autogenerated method: System.Collections.Comparer.GetObjectData
void System::Collections::Comparer::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Comparer::GetObjectData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(info, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
void System::Collections::Comparer::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  System::Collections::Comparer::GetObjectData(info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.CompatibleComparer
#include "System/Collections/CompatibleComparer.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.Collections.IHashCodeProvider
#include "System/Collections/IHashCodeProvider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.CompatibleComparer.Compare
int System::Collections::CompatibleComparer::Compare(::Il2CppObject* a, ::Il2CppObject* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::CompatibleComparer::Compare");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated method: System.Collections.CompatibleComparer.get_Comparer
System::Collections::IComparer* System::Collections::CompatibleComparer::get_Comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::CompatibleComparer::get_Comparer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Comparer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IComparer*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CompatibleComparer.get_HashCodeProvider
System::Collections::IHashCodeProvider* System::Collections::CompatibleComparer::get_HashCodeProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::CompatibleComparer::get_HashCodeProvider");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_HashCodeProvider", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IHashCodeProvider*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.CompatibleComparer.Equals
bool System::Collections::CompatibleComparer::Equals(::Il2CppObject* a, ::Il2CppObject* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::CompatibleComparer::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, a, b);
}
bool System::Collections::CompatibleComparer::System_Collections_IEqualityComparer_Equals(::Il2CppObject* a, ::Il2CppObject* b) {
  return System::Collections::CompatibleComparer::Equals(a, b);
}
// Autogenerated method: System.Collections.CompatibleComparer.GetHashCode
int System::Collections::CompatibleComparer::GetHashCode(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::CompatibleComparer::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, obj);
}
int System::Collections::CompatibleComparer::System_Collections_IEqualityComparer_GetHashCode(::Il2CppObject* obj) {
  return System::Collections::CompatibleComparer::GetHashCode(obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.EmptyReadOnlyDictionaryInternal
#include "System/Collections/EmptyReadOnlyDictionaryInternal.hpp"
// Including type: System.Collections.EmptyReadOnlyDictionaryInternal/NodeEnumerator
#include "System/Collections/EmptyReadOnlyDictionaryInternal_NodeEnumerator.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* System::Collections::EmptyReadOnlyDictionaryInternal::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::EmptyReadOnlyDictionaryInternal::System.Collections.IEnumerable.GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal.CopyTo
void System::Collections::EmptyReadOnlyDictionaryInternal::CopyTo(System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::EmptyReadOnlyDictionaryInternal::CopyTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, index);
}
void System::Collections::EmptyReadOnlyDictionaryInternal::System_Collections_ICollection_CopyTo(System::Array* array, int index) {
  System::Collections::EmptyReadOnlyDictionaryInternal::CopyTo(array, index);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal.get_Count
int System::Collections::EmptyReadOnlyDictionaryInternal::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::EmptyReadOnlyDictionaryInternal::get_Count");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
int System::Collections::EmptyReadOnlyDictionaryInternal::System_Collections_ICollection_get_Count() {
  return System::Collections::EmptyReadOnlyDictionaryInternal::get_Count();
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal.get_Item
::Il2CppObject* System::Collections::EmptyReadOnlyDictionaryInternal::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::EmptyReadOnlyDictionaryInternal::get_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
::Il2CppObject* System::Collections::EmptyReadOnlyDictionaryInternal::System_Collections_IDictionary_get_Item(::Il2CppObject* key) {
  return System::Collections::EmptyReadOnlyDictionaryInternal::get_Item(key);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal.set_Item
void System::Collections::EmptyReadOnlyDictionaryInternal::set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::EmptyReadOnlyDictionaryInternal::set_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
void System::Collections::EmptyReadOnlyDictionaryInternal::System_Collections_IDictionary_set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  System::Collections::EmptyReadOnlyDictionaryInternal::set_Item(key, value);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal.get_Keys
System::Collections::ICollection* System::Collections::EmptyReadOnlyDictionaryInternal::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::EmptyReadOnlyDictionaryInternal::get_Keys");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::ICollection*, false>(this, ___internal__method);
}
System::Collections::ICollection* System::Collections::EmptyReadOnlyDictionaryInternal::System_Collections_IDictionary_get_Keys() {
  return System::Collections::EmptyReadOnlyDictionaryInternal::get_Keys();
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal.Contains
bool System::Collections::EmptyReadOnlyDictionaryInternal::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::EmptyReadOnlyDictionaryInternal::Contains");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, key);
}
bool System::Collections::EmptyReadOnlyDictionaryInternal::System_Collections_IDictionary_Contains(::Il2CppObject* key) {
  return System::Collections::EmptyReadOnlyDictionaryInternal::Contains(key);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal.Add
void System::Collections::EmptyReadOnlyDictionaryInternal::Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::EmptyReadOnlyDictionaryInternal::Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
void System::Collections::EmptyReadOnlyDictionaryInternal::System_Collections_IDictionary_Add(::Il2CppObject* key, ::Il2CppObject* value) {
  System::Collections::EmptyReadOnlyDictionaryInternal::Add(key, value);
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal.GetEnumerator
System::Collections::IDictionaryEnumerator* System::Collections::EmptyReadOnlyDictionaryInternal::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::EmptyReadOnlyDictionaryInternal::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
System::Collections::IDictionaryEnumerator* System::Collections::EmptyReadOnlyDictionaryInternal::System_Collections_IDictionary_GetEnumerator() {
  return System::Collections::EmptyReadOnlyDictionaryInternal::GetEnumerator();
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.EmptyReadOnlyDictionaryInternal/NodeEnumerator
#include "System/Collections/EmptyReadOnlyDictionaryInternal_NodeEnumerator.hpp"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal/NodeEnumerator.MoveNext
bool System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::System_Collections_IEnumerator_MoveNext() {
  return System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::MoveNext();
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal/NodeEnumerator.get_Current
::Il2CppObject* System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::System_Collections_IEnumerator_get_Current() {
  return System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::get_Current();
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal/NodeEnumerator.Reset
void System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::System_Collections_IEnumerator_Reset() {
  System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::Reset();
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal/NodeEnumerator.get_Key
::Il2CppObject* System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::get_Key");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::System_Collections_IDictionaryEnumerator_get_Key() {
  return System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::get_Key();
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal/NodeEnumerator.get_Value
::Il2CppObject* System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::get_Value");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::System_Collections_IDictionaryEnumerator_get_Value() {
  return System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::get_Value();
}
// Autogenerated method: System.Collections.EmptyReadOnlyDictionaryInternal/NodeEnumerator.get_Entry
System::Collections::DictionaryEntry System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::get_Entry() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::get_Entry");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Entry", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::DictionaryEntry, false>(this, ___internal__method);
}
System::Collections::DictionaryEntry System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::System_Collections_IDictionaryEnumerator_get_Entry() {
  return System::Collections::EmptyReadOnlyDictionaryInternal::NodeEnumerator::get_Entry();
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Collections.Hashtable/KeyCollection
#include "System/Collections/Hashtable_KeyCollection.hpp"
// Including type: System.Collections.Hashtable/ValueCollection
#include "System/Collections/Hashtable_ValueCollection.hpp"
// Including type: System.Collections.Hashtable/SyncHashtable
#include "System/Collections/Hashtable_SyncHashtable.hpp"
// Including type: System.Collections.Hashtable/HashtableEnumerator
#include "System/Collections/Hashtable_HashtableEnumerator.hpp"
// Including type: System.Collections.Hashtable/HashtableDebugView
#include "System/Collections/Hashtable_HashtableDebugView.hpp"
// Including type: System.Collections.IEqualityComparer
#include "System/Collections/IEqualityComparer.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.IHashCodeProvider
#include "System/Collections/IHashCodeProvider.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 HashPrime
int System::Collections::Hashtable::_get_HashPrime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::_get_HashPrime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Collections", "Hashtable", "HashPrime"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 HashPrime
void System::Collections::Hashtable::_set_HashPrime(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::_set_HashPrime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "HashPrime", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 InitialSize
int System::Collections::Hashtable::_get_InitialSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::_get_InitialSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Collections", "Hashtable", "InitialSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 InitialSize
void System::Collections::Hashtable::_set_InitialSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::_set_InitialSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "InitialSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.String LoadFactorName
::Il2CppString* System::Collections::Hashtable::_get_LoadFactorName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::_get_LoadFactorName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Collections", "Hashtable", "LoadFactorName"));
}
// Autogenerated static field setter
// Set static field: static private System.String LoadFactorName
void System::Collections::Hashtable::_set_LoadFactorName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::_set_LoadFactorName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "LoadFactorName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String VersionName
::Il2CppString* System::Collections::Hashtable::_get_VersionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::_get_VersionName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Collections", "Hashtable", "VersionName"));
}
// Autogenerated static field setter
// Set static field: static private System.String VersionName
void System::Collections::Hashtable::_set_VersionName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::_set_VersionName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "VersionName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String ComparerName
::Il2CppString* System::Collections::Hashtable::_get_ComparerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::_get_ComparerName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Collections", "Hashtable", "ComparerName"));
}
// Autogenerated static field setter
// Set static field: static private System.String ComparerName
void System::Collections::Hashtable::_set_ComparerName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::_set_ComparerName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "ComparerName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String HashCodeProviderName
::Il2CppString* System::Collections::Hashtable::_get_HashCodeProviderName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::_get_HashCodeProviderName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Collections", "Hashtable", "HashCodeProviderName"));
}
// Autogenerated static field setter
// Set static field: static private System.String HashCodeProviderName
void System::Collections::Hashtable::_set_HashCodeProviderName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::_set_HashCodeProviderName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "HashCodeProviderName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String HashSizeName
::Il2CppString* System::Collections::Hashtable::_get_HashSizeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::_get_HashSizeName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Collections", "Hashtable", "HashSizeName"));
}
// Autogenerated static field setter
// Set static field: static private System.String HashSizeName
void System::Collections::Hashtable::_set_HashSizeName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::_set_HashSizeName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "HashSizeName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String KeysName
::Il2CppString* System::Collections::Hashtable::_get_KeysName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::_get_KeysName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Collections", "Hashtable", "KeysName"));
}
// Autogenerated static field setter
// Set static field: static private System.String KeysName
void System::Collections::Hashtable::_set_KeysName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::_set_KeysName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "KeysName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String ValuesName
::Il2CppString* System::Collections::Hashtable::_get_ValuesName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::_get_ValuesName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Collections", "Hashtable", "ValuesName"));
}
// Autogenerated static field setter
// Set static field: static private System.String ValuesName
void System::Collections::Hashtable::_set_ValuesName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::_set_ValuesName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "ValuesName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String KeyComparerName
::Il2CppString* System::Collections::Hashtable::_get_KeyComparerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::_get_KeyComparerName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Collections", "Hashtable", "KeyComparerName"));
}
// Autogenerated static field setter
// Set static field: static private System.String KeyComparerName
void System::Collections::Hashtable::_set_KeyComparerName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::_set_KeyComparerName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "Hashtable", "KeyComparerName", value));
}
// Autogenerated method: System.Collections.Hashtable.InitHash
uint System::Collections::Hashtable::InitHash(::Il2CppObject* key, int hashsize, uint& seed, uint& incr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::InitHash");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitHash", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key, hashsize, seed, incr)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, key, hashsize, seed, incr);
}
// Autogenerated method: System.Collections.Hashtable.Clear
void System::Collections::Hashtable::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::Clear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.ContainsKey
bool System::Collections::Hashtable::ContainsKey(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::ContainsKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ContainsKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Hashtable.CopyKeys
void System::Collections::Hashtable::CopyKeys(System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::CopyKeys");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CopyKeys", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, arrayIndex)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Collections.Hashtable.CopyEntries
void System::Collections::Hashtable::CopyEntries(System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::CopyEntries");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CopyEntries", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, arrayIndex)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Collections.Hashtable.CopyValues
void System::Collections::Hashtable::CopyValues(System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::CopyValues");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CopyValues", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, arrayIndex)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: System.Collections.Hashtable.expand
void System::Collections::Hashtable::expand() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::expand");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "expand", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.rehash
void System::Collections::Hashtable::rehash() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::rehash");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "rehash", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.UpdateVersion
void System::Collections::Hashtable::UpdateVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::UpdateVersion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateVersion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.rehash
void System::Collections::Hashtable::rehash(int newsize, bool forceNewHashCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::rehash");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "rehash", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(newsize, forceNewHashCode)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newsize, forceNewHashCode);
}
// Autogenerated method: System.Collections.Hashtable.GetHash
int System::Collections::Hashtable::GetHash(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::GetHash");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHash", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Hashtable.KeyEquals
bool System::Collections::Hashtable::KeyEquals(::Il2CppObject* item, ::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::KeyEquals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "KeyEquals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(item, key)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, item, key);
}
// Autogenerated method: System.Collections.Hashtable.get_Values
System::Collections::ICollection* System::Collections::Hashtable::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::get_Values");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.Insert
void System::Collections::Hashtable::Insert(::Il2CppObject* key, ::Il2CppObject* nvalue, bool add) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::Insert");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key, nvalue, add)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, nvalue, add);
}
// Autogenerated method: System.Collections.Hashtable.putEntry
void System::Collections::Hashtable::putEntry(::Array<System::Collections::Hashtable::bucket>* newBuckets, ::Il2CppObject* key, ::Il2CppObject* nvalue, int hashcode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::putEntry");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "putEntry", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(newBuckets, key, nvalue, hashcode)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newBuckets, key, nvalue, hashcode);
}
// Autogenerated method: System.Collections.Hashtable.Remove
void System::Collections::Hashtable::Remove(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::Remove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Hashtable.get_SyncRoot
::Il2CppObject* System::Collections::Hashtable::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::get_SyncRoot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.Synchronized
System::Collections::Hashtable* System::Collections::Hashtable::Synchronized(System::Collections::Hashtable* table) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::Synchronized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Collections", "Hashtable", "Synchronized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(table)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Hashtable*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, table);
}
// Autogenerated method: System.Collections.Hashtable.Add
void System::Collections::Hashtable::Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
void System::Collections::Hashtable::System_Collections_IDictionary_Add(::Il2CppObject* key, ::Il2CppObject* value) {
  System::Collections::Hashtable::Add(key, value);
}
// Autogenerated method: System.Collections.Hashtable.Clone
::Il2CppObject* System::Collections::Hashtable::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::Clone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* System::Collections::Hashtable::System_ICloneable_Clone() {
  return System::Collections::Hashtable::Clone();
}
// Autogenerated method: System.Collections.Hashtable.Contains
bool System::Collections::Hashtable::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::Contains");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, key);
}
bool System::Collections::Hashtable::System_Collections_IDictionary_Contains(::Il2CppObject* key) {
  return System::Collections::Hashtable::Contains(key);
}
// Autogenerated method: System.Collections.Hashtable.CopyTo
void System::Collections::Hashtable::CopyTo(System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::CopyTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, arrayIndex)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, arrayIndex);
}
void System::Collections::Hashtable::System_Collections_ICollection_CopyTo(System::Array* array, int arrayIndex) {
  System::Collections::Hashtable::CopyTo(array, arrayIndex);
}
// Autogenerated method: System.Collections.Hashtable.get_Item
::Il2CppObject* System::Collections::Hashtable::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::get_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
::Il2CppObject* System::Collections::Hashtable::System_Collections_IDictionary_get_Item(::Il2CppObject* key) {
  return System::Collections::Hashtable::get_Item(key);
}
// Autogenerated method: System.Collections.Hashtable.set_Item
void System::Collections::Hashtable::set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::set_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
void System::Collections::Hashtable::System_Collections_IDictionary_set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  System::Collections::Hashtable::set_Item(key, value);
}
// Autogenerated method: System.Collections.Hashtable.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* System::Collections::Hashtable::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::System.Collections.IEnumerable.GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable.GetEnumerator
System::Collections::IDictionaryEnumerator* System::Collections::Hashtable::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
System::Collections::IDictionaryEnumerator* System::Collections::Hashtable::System_Collections_IDictionary_GetEnumerator() {
  return System::Collections::Hashtable::GetEnumerator();
}
// Autogenerated method: System.Collections.Hashtable.get_Keys
System::Collections::ICollection* System::Collections::Hashtable::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::get_Keys");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::ICollection*, false>(this, ___internal__method);
}
System::Collections::ICollection* System::Collections::Hashtable::System_Collections_IDictionary_get_Keys() {
  return System::Collections::Hashtable::get_Keys();
}
// Autogenerated method: System.Collections.Hashtable.get_Count
int System::Collections::Hashtable::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::get_Count");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
int System::Collections::Hashtable::System_Collections_ICollection_get_Count() {
  return System::Collections::Hashtable::get_Count();
}
// Autogenerated method: System.Collections.Hashtable.GetObjectData
void System::Collections::Hashtable::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::GetObjectData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(info, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
void System::Collections::Hashtable::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  System::Collections::Hashtable::GetObjectData(info, context);
}
// Autogenerated method: System.Collections.Hashtable.OnDeserialization
void System::Collections::Hashtable::OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::OnDeserialization");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDeserialization", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sender)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sender);
}
void System::Collections::Hashtable::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::Il2CppObject* sender) {
  System::Collections::Hashtable::OnDeserialization(sender);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Hashtable/KeyCollection
#include "System/Collections/Hashtable_KeyCollection.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Hashtable/KeyCollection.CopyTo
void System::Collections::Hashtable::KeyCollection::CopyTo(System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::KeyCollection::CopyTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, arrayIndex)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, arrayIndex);
}
void System::Collections::Hashtable::KeyCollection::System_Collections_ICollection_CopyTo(System::Array* array, int arrayIndex) {
  System::Collections::Hashtable::KeyCollection::CopyTo(array, arrayIndex);
}
// Autogenerated method: System.Collections.Hashtable/KeyCollection.GetEnumerator
System::Collections::IEnumerator* System::Collections::Hashtable::KeyCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::KeyCollection::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
System::Collections::IEnumerator* System::Collections::Hashtable::KeyCollection::System_Collections_IEnumerable_GetEnumerator() {
  return System::Collections::Hashtable::KeyCollection::GetEnumerator();
}
// Autogenerated method: System.Collections.Hashtable/KeyCollection.get_Count
int System::Collections::Hashtable::KeyCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::KeyCollection::get_Count");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
int System::Collections::Hashtable::KeyCollection::System_Collections_ICollection_get_Count() {
  return System::Collections::Hashtable::KeyCollection::get_Count();
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Hashtable/ValueCollection
#include "System/Collections/Hashtable_ValueCollection.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Hashtable/ValueCollection.CopyTo
void System::Collections::Hashtable::ValueCollection::CopyTo(System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::ValueCollection::CopyTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, arrayIndex)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, arrayIndex);
}
void System::Collections::Hashtable::ValueCollection::System_Collections_ICollection_CopyTo(System::Array* array, int arrayIndex) {
  System::Collections::Hashtable::ValueCollection::CopyTo(array, arrayIndex);
}
// Autogenerated method: System.Collections.Hashtable/ValueCollection.GetEnumerator
System::Collections::IEnumerator* System::Collections::Hashtable::ValueCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::ValueCollection::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
System::Collections::IEnumerator* System::Collections::Hashtable::ValueCollection::System_Collections_IEnumerable_GetEnumerator() {
  return System::Collections::Hashtable::ValueCollection::GetEnumerator();
}
// Autogenerated method: System.Collections.Hashtable/ValueCollection.get_Count
int System::Collections::Hashtable::ValueCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::ValueCollection::get_Count");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
int System::Collections::Hashtable::ValueCollection::System_Collections_ICollection_get_Count() {
  return System::Collections::Hashtable::ValueCollection::get_Count();
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Hashtable/SyncHashtable
#include "System/Collections/Hashtable_SyncHashtable.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.GetObjectData
void System::Collections::Hashtable::SyncHashtable::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::SyncHashtable::GetObjectData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(info, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
void System::Collections::Hashtable::SyncHashtable::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  System::Collections::Hashtable::SyncHashtable::GetObjectData(info, context);
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.get_Count
int System::Collections::Hashtable::SyncHashtable::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::SyncHashtable::get_Count");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
int System::Collections::Hashtable::SyncHashtable::System_Collections_ICollection_get_Count() {
  return System::Collections::Hashtable::SyncHashtable::get_Count();
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.get_Item
::Il2CppObject* System::Collections::Hashtable::SyncHashtable::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::SyncHashtable::get_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
::Il2CppObject* System::Collections::Hashtable::SyncHashtable::System_Collections_IDictionary_get_Item(::Il2CppObject* key) {
  return System::Collections::Hashtable::SyncHashtable::get_Item(key);
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.set_Item
void System::Collections::Hashtable::SyncHashtable::set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::SyncHashtable::set_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
void System::Collections::Hashtable::SyncHashtable::System_Collections_IDictionary_set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  System::Collections::Hashtable::SyncHashtable::set_Item(key, value);
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.get_SyncRoot
::Il2CppObject* System::Collections::Hashtable::SyncHashtable::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::SyncHashtable::get_SyncRoot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.Add
void System::Collections::Hashtable::SyncHashtable::Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::SyncHashtable::Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
void System::Collections::Hashtable::SyncHashtable::System_Collections_IDictionary_Add(::Il2CppObject* key, ::Il2CppObject* value) {
  System::Collections::Hashtable::SyncHashtable::Add(key, value);
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.Clear
void System::Collections::Hashtable::SyncHashtable::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::SyncHashtable::Clear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.Contains
bool System::Collections::Hashtable::SyncHashtable::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::SyncHashtable::Contains");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, key);
}
bool System::Collections::Hashtable::SyncHashtable::System_Collections_IDictionary_Contains(::Il2CppObject* key) {
  return System::Collections::Hashtable::SyncHashtable::Contains(key);
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.ContainsKey
bool System::Collections::Hashtable::SyncHashtable::ContainsKey(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::SyncHashtable::ContainsKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ContainsKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.CopyTo
void System::Collections::Hashtable::SyncHashtable::CopyTo(System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::SyncHashtable::CopyTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, arrayIndex)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, arrayIndex);
}
void System::Collections::Hashtable::SyncHashtable::System_Collections_ICollection_CopyTo(System::Array* array, int arrayIndex) {
  System::Collections::Hashtable::SyncHashtable::CopyTo(array, arrayIndex);
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.Clone
::Il2CppObject* System::Collections::Hashtable::SyncHashtable::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::SyncHashtable::Clone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* System::Collections::Hashtable::SyncHashtable::System_ICloneable_Clone() {
  return System::Collections::Hashtable::SyncHashtable::Clone();
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* System::Collections::Hashtable::SyncHashtable::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::SyncHashtable::System.Collections.IEnumerable.GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.GetEnumerator
System::Collections::IDictionaryEnumerator* System::Collections::Hashtable::SyncHashtable::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::SyncHashtable::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
System::Collections::IDictionaryEnumerator* System::Collections::Hashtable::SyncHashtable::System_Collections_IDictionary_GetEnumerator() {
  return System::Collections::Hashtable::SyncHashtable::GetEnumerator();
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.get_Keys
System::Collections::ICollection* System::Collections::Hashtable::SyncHashtable::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::SyncHashtable::get_Keys");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::ICollection*, false>(this, ___internal__method);
}
System::Collections::ICollection* System::Collections::Hashtable::SyncHashtable::System_Collections_IDictionary_get_Keys() {
  return System::Collections::Hashtable::SyncHashtable::get_Keys();
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.get_Values
System::Collections::ICollection* System::Collections::Hashtable::SyncHashtable::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::SyncHashtable::get_Values");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.Remove
void System::Collections::Hashtable::SyncHashtable::Remove(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::SyncHashtable::Remove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Hashtable/SyncHashtable.OnDeserialization
void System::Collections::Hashtable::SyncHashtable::OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::SyncHashtable::OnDeserialization");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDeserialization", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sender)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sender);
}
void System::Collections::Hashtable::SyncHashtable::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::Il2CppObject* sender) {
  System::Collections::Hashtable::SyncHashtable::OnDeserialization(sender);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Hashtable/HashtableEnumerator
#include "System/Collections/Hashtable_HashtableEnumerator.hpp"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Hashtable/HashtableEnumerator.Clone
::Il2CppObject* System::Collections::Hashtable::HashtableEnumerator::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::HashtableEnumerator::Clone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* System::Collections::Hashtable::HashtableEnumerator::System_ICloneable_Clone() {
  return System::Collections::Hashtable::HashtableEnumerator::Clone();
}
// Autogenerated method: System.Collections.Hashtable/HashtableEnumerator.get_Key
::Il2CppObject* System::Collections::Hashtable::HashtableEnumerator::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::HashtableEnumerator::get_Key");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* System::Collections::Hashtable::HashtableEnumerator::System_Collections_IDictionaryEnumerator_get_Key() {
  return System::Collections::Hashtable::HashtableEnumerator::get_Key();
}
// Autogenerated method: System.Collections.Hashtable/HashtableEnumerator.MoveNext
bool System::Collections::Hashtable::HashtableEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::HashtableEnumerator::MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool System::Collections::Hashtable::HashtableEnumerator::System_Collections_IEnumerator_MoveNext() {
  return System::Collections::Hashtable::HashtableEnumerator::MoveNext();
}
// Autogenerated method: System.Collections.Hashtable/HashtableEnumerator.get_Entry
System::Collections::DictionaryEntry System::Collections::Hashtable::HashtableEnumerator::get_Entry() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::HashtableEnumerator::get_Entry");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Entry", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::DictionaryEntry, false>(this, ___internal__method);
}
System::Collections::DictionaryEntry System::Collections::Hashtable::HashtableEnumerator::System_Collections_IDictionaryEnumerator_get_Entry() {
  return System::Collections::Hashtable::HashtableEnumerator::get_Entry();
}
// Autogenerated method: System.Collections.Hashtable/HashtableEnumerator.get_Current
::Il2CppObject* System::Collections::Hashtable::HashtableEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::HashtableEnumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* System::Collections::Hashtable::HashtableEnumerator::System_Collections_IEnumerator_get_Current() {
  return System::Collections::Hashtable::HashtableEnumerator::get_Current();
}
// Autogenerated method: System.Collections.Hashtable/HashtableEnumerator.get_Value
::Il2CppObject* System::Collections::Hashtable::HashtableEnumerator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::HashtableEnumerator::get_Value");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* System::Collections::Hashtable::HashtableEnumerator::System_Collections_IDictionaryEnumerator_get_Value() {
  return System::Collections::Hashtable::HashtableEnumerator::get_Value();
}
// Autogenerated method: System.Collections.Hashtable/HashtableEnumerator.Reset
void System::Collections::Hashtable::HashtableEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Hashtable::HashtableEnumerator::Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void System::Collections::Hashtable::HashtableEnumerator::System_Collections_IEnumerator_Reset() {
  System::Collections::Hashtable::HashtableEnumerator::Reset();
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.HashHelpers
#include "System/Collections/HashHelpers.hpp"
// Including type: System.Runtime.CompilerServices.ConditionalWeakTable`2
#include "System/Runtime/CompilerServices/ConditionalWeakTable_2.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32[] primes
::Array<int>* System::Collections::HashHelpers::_get_primes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::HashHelpers::_get_primes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int>*>("System.Collections", "HashHelpers", "primes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32[] primes
void System::Collections::HashHelpers::_set_primes(::Array<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::HashHelpers::_set_primes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "HashHelpers", "primes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Object,System.Runtime.Serialization.SerializationInfo> s_SerializationInfoTable
System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, System::Runtime::Serialization::SerializationInfo*>* System::Collections::HashHelpers::_get_s_SerializationInfoTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::HashHelpers::_get_s_SerializationInfoTable");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, System::Runtime::Serialization::SerializationInfo*>*>("System.Collections", "HashHelpers", "s_SerializationInfoTable")));
}
// Autogenerated static field setter
// Set static field: static private System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Object,System.Runtime.Serialization.SerializationInfo> s_SerializationInfoTable
void System::Collections::HashHelpers::_set_s_SerializationInfoTable(System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, System::Runtime::Serialization::SerializationInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::HashHelpers::_set_s_SerializationInfoTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "HashHelpers", "s_SerializationInfoTable", value));
}
// Autogenerated method: System.Collections.HashHelpers.get_SerializationInfoTable
System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, System::Runtime::Serialization::SerializationInfo*>* System::Collections::HashHelpers::get_SerializationInfoTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::HashHelpers::get_SerializationInfoTable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Collections", "HashHelpers", "get_SerializationInfoTable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, System::Runtime::Serialization::SerializationInfo*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.HashHelpers.IsPrime
bool System::Collections::HashHelpers::IsPrime(int candidate) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::HashHelpers::IsPrime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Collections", "HashHelpers", "IsPrime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(candidate)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, candidate);
}
// Autogenerated method: System.Collections.HashHelpers.GetPrime
int System::Collections::HashHelpers::GetPrime(int min) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::HashHelpers::GetPrime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Collections", "HashHelpers", "GetPrime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(min)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, min);
}
// Autogenerated method: System.Collections.HashHelpers.ExpandPrime
int System::Collections::HashHelpers::ExpandPrime(int oldSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::HashHelpers::ExpandPrime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Collections", "HashHelpers", "ExpandPrime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(oldSize)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, oldSize);
}
// Autogenerated method: System.Collections.HashHelpers..cctor
void System::Collections::HashHelpers::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::HashHelpers::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Collections", "HashHelpers", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.ICollection.CopyTo
void System::Collections::ICollection::System_Collections_ICollection_CopyTo(System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::ICollection::CopyTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.ICollection.get_Count
int System::Collections::ICollection::System_Collections_ICollection_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::ICollection::get_Count");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IComparer.Compare
int System::Collections::IComparer::System_Collections_IComparer_Compare(::Il2CppObject* x, ::Il2CppObject* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::IComparer::Compare");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IDictionary.get_Item
::Il2CppObject* System::Collections::IDictionary::System_Collections_IDictionary_get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::IDictionary::get_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.IDictionary.set_Item
void System::Collections::IDictionary::System_Collections_IDictionary_set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::IDictionary::set_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.IDictionary.get_Keys
System::Collections::ICollection* System::Collections::IDictionary::System_Collections_IDictionary_get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::IDictionary::get_Keys");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IDictionary.Contains
bool System::Collections::IDictionary::System_Collections_IDictionary_Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::IDictionary::Contains");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.IDictionary.Add
void System::Collections::IDictionary::System_Collections_IDictionary_Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::IDictionary::Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.IDictionary.GetEnumerator
System::Collections::IDictionaryEnumerator* System::Collections::IDictionary::System_Collections_IDictionary_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::IDictionary::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IDictionaryEnumerator.get_Key
::Il2CppObject* System::Collections::IDictionaryEnumerator::System_Collections_IDictionaryEnumerator_get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::IDictionaryEnumerator::get_Key");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IDictionaryEnumerator.get_Value
::Il2CppObject* System::Collections::IDictionaryEnumerator::System_Collections_IDictionaryEnumerator_get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::IDictionaryEnumerator::get_Value");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IDictionaryEnumerator.get_Entry
System::Collections::DictionaryEntry System::Collections::IDictionaryEnumerator::System_Collections_IDictionaryEnumerator_get_Entry() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::IDictionaryEnumerator::get_Entry");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Entry", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::DictionaryEntry, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.IEnumerable
#include "System/Collections/IEnumerable.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* System::Collections::IEnumerable::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::IEnumerable::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IEnumerator.MoveNext
bool System::Collections::IEnumerator::System_Collections_IEnumerator_MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::IEnumerator::MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Collections::IEnumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::IEnumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IEnumerator.Reset
void System::Collections::IEnumerator::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::IEnumerator::Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IEqualityComparer
#include "System/Collections/IEqualityComparer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IEqualityComparer.Equals
bool System::Collections::IEqualityComparer::System_Collections_IEqualityComparer_Equals(::Il2CppObject* x, ::Il2CppObject* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::IEqualityComparer::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.Collections.IEqualityComparer.GetHashCode
int System::Collections::IEqualityComparer::System_Collections_IEqualityComparer_GetHashCode(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::IEqualityComparer::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IHashCodeProvider
#include "System/Collections/IHashCodeProvider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IHashCodeProvider.GetHashCode
int System::Collections::IHashCodeProvider::GetHashCode(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::IHashCodeProvider::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IList.get_Item
::Il2CppObject* System::Collections::IList::System_Collections_IList_get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::IList::get_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.IList.set_Item
void System::Collections::IList::System_Collections_IList_set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::IList::set_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.IList.Add
int System::Collections::IList::System_Collections_IList_Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::IList::Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.IList.Contains
bool System::Collections::IList::System_Collections_IList_Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::IList::Contains");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.IList.Clear
void System::Collections::IList::System_Collections_IList_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::IList::Clear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IList.get_IsReadOnly
bool System::Collections::IList::System_Collections_IList_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::IList::get_IsReadOnly");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.IList.IndexOf
int System::Collections::IList::System_Collections_IList_IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::IList::IndexOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.IList.Insert
void System::Collections::IList::System_Collections_IList_Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::IList::Insert");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.IList.Remove
void System::Collections::IList::System_Collections_IList_Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::IList::Remove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.IList.RemoveAt
void System::Collections::IList::System_Collections_IList_RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::IList::RemoveAt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IStructuralComparable
#include "System/Collections/IStructuralComparable.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IStructuralComparable.CompareTo
int System::Collections::IStructuralComparable::System_Collections_IStructuralComparable_CompareTo(::Il2CppObject* other, System::Collections::IComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::IStructuralComparable::CompareTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CompareTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other, comparer)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, other, comparer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.IStructuralEquatable
#include "System/Collections/IStructuralEquatable.hpp"
// Including type: System.Collections.IEqualityComparer
#include "System/Collections/IEqualityComparer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.IStructuralEquatable.Equals
bool System::Collections::IStructuralEquatable::System_Collections_IStructuralEquatable_Equals(::Il2CppObject* other, System::Collections::IEqualityComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::IStructuralEquatable::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other, comparer)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, other, comparer);
}
// Autogenerated method: System.Collections.IStructuralEquatable.GetHashCode
int System::Collections::IStructuralEquatable::System_Collections_IStructuralEquatable_GetHashCode(System::Collections::IEqualityComparer* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::IStructuralEquatable::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(comparer)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, comparer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ListDictionaryInternal
#include "System/Collections/ListDictionaryInternal.hpp"
// Including type: System.Collections.ListDictionaryInternal/NodeEnumerator
#include "System/Collections/ListDictionaryInternal_NodeEnumerator.hpp"
// Including type: System.Collections.ListDictionaryInternal/NodeKeyValueCollection
#include "System/Collections/ListDictionaryInternal_NodeKeyValueCollection.hpp"
// Including type: System.Collections.ListDictionaryInternal/DictionaryNode
#include "System/Collections/ListDictionaryInternal_DictionaryNode.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.ListDictionaryInternal.get_Item
::Il2CppObject* System::Collections::ListDictionaryInternal::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::ListDictionaryInternal::get_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
::Il2CppObject* System::Collections::ListDictionaryInternal::System_Collections_IDictionary_get_Item(::Il2CppObject* key) {
  return System::Collections::ListDictionaryInternal::get_Item(key);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.set_Item
void System::Collections::ListDictionaryInternal::set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::ListDictionaryInternal::set_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
void System::Collections::ListDictionaryInternal::System_Collections_IDictionary_set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  System::Collections::ListDictionaryInternal::set_Item(key, value);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.get_Count
int System::Collections::ListDictionaryInternal::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::ListDictionaryInternal::get_Count");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
int System::Collections::ListDictionaryInternal::System_Collections_ICollection_get_Count() {
  return System::Collections::ListDictionaryInternal::get_Count();
}
// Autogenerated method: System.Collections.ListDictionaryInternal.get_Keys
System::Collections::ICollection* System::Collections::ListDictionaryInternal::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::ListDictionaryInternal::get_Keys");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::ICollection*, false>(this, ___internal__method);
}
System::Collections::ICollection* System::Collections::ListDictionaryInternal::System_Collections_IDictionary_get_Keys() {
  return System::Collections::ListDictionaryInternal::get_Keys();
}
// Autogenerated method: System.Collections.ListDictionaryInternal.Add
void System::Collections::ListDictionaryInternal::Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::ListDictionaryInternal::Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
void System::Collections::ListDictionaryInternal::System_Collections_IDictionary_Add(::Il2CppObject* key, ::Il2CppObject* value) {
  System::Collections::ListDictionaryInternal::Add(key, value);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.Contains
bool System::Collections::ListDictionaryInternal::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::ListDictionaryInternal::Contains");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, key);
}
bool System::Collections::ListDictionaryInternal::System_Collections_IDictionary_Contains(::Il2CppObject* key) {
  return System::Collections::ListDictionaryInternal::Contains(key);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.CopyTo
void System::Collections::ListDictionaryInternal::CopyTo(System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::ListDictionaryInternal::CopyTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, index);
}
void System::Collections::ListDictionaryInternal::System_Collections_ICollection_CopyTo(System::Array* array, int index) {
  System::Collections::ListDictionaryInternal::CopyTo(array, index);
}
// Autogenerated method: System.Collections.ListDictionaryInternal.GetEnumerator
System::Collections::IDictionaryEnumerator* System::Collections::ListDictionaryInternal::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::ListDictionaryInternal::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
System::Collections::IDictionaryEnumerator* System::Collections::ListDictionaryInternal::System_Collections_IDictionary_GetEnumerator() {
  return System::Collections::ListDictionaryInternal::GetEnumerator();
}
// Autogenerated method: System.Collections.ListDictionaryInternal.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* System::Collections::ListDictionaryInternal::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::ListDictionaryInternal::System.Collections.IEnumerable.GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ListDictionaryInternal/NodeEnumerator
#include "System/Collections/ListDictionaryInternal_NodeEnumerator.hpp"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
// Including type: System.Collections.ListDictionaryInternal/DictionaryNode
#include "System/Collections/ListDictionaryInternal_DictionaryNode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.ListDictionaryInternal/NodeEnumerator.get_Current
::Il2CppObject* System::Collections::ListDictionaryInternal::NodeEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::ListDictionaryInternal::NodeEnumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* System::Collections::ListDictionaryInternal::NodeEnumerator::System_Collections_IEnumerator_get_Current() {
  return System::Collections::ListDictionaryInternal::NodeEnumerator::get_Current();
}
// Autogenerated method: System.Collections.ListDictionaryInternal/NodeEnumerator.get_Entry
System::Collections::DictionaryEntry System::Collections::ListDictionaryInternal::NodeEnumerator::get_Entry() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::ListDictionaryInternal::NodeEnumerator::get_Entry");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Entry", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::DictionaryEntry, false>(this, ___internal__method);
}
System::Collections::DictionaryEntry System::Collections::ListDictionaryInternal::NodeEnumerator::System_Collections_IDictionaryEnumerator_get_Entry() {
  return System::Collections::ListDictionaryInternal::NodeEnumerator::get_Entry();
}
// Autogenerated method: System.Collections.ListDictionaryInternal/NodeEnumerator.get_Key
::Il2CppObject* System::Collections::ListDictionaryInternal::NodeEnumerator::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::ListDictionaryInternal::NodeEnumerator::get_Key");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* System::Collections::ListDictionaryInternal::NodeEnumerator::System_Collections_IDictionaryEnumerator_get_Key() {
  return System::Collections::ListDictionaryInternal::NodeEnumerator::get_Key();
}
// Autogenerated method: System.Collections.ListDictionaryInternal/NodeEnumerator.get_Value
::Il2CppObject* System::Collections::ListDictionaryInternal::NodeEnumerator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::ListDictionaryInternal::NodeEnumerator::get_Value");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* System::Collections::ListDictionaryInternal::NodeEnumerator::System_Collections_IDictionaryEnumerator_get_Value() {
  return System::Collections::ListDictionaryInternal::NodeEnumerator::get_Value();
}
// Autogenerated method: System.Collections.ListDictionaryInternal/NodeEnumerator.MoveNext
bool System::Collections::ListDictionaryInternal::NodeEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::ListDictionaryInternal::NodeEnumerator::MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool System::Collections::ListDictionaryInternal::NodeEnumerator::System_Collections_IEnumerator_MoveNext() {
  return System::Collections::ListDictionaryInternal::NodeEnumerator::MoveNext();
}
// Autogenerated method: System.Collections.ListDictionaryInternal/NodeEnumerator.Reset
void System::Collections::ListDictionaryInternal::NodeEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::ListDictionaryInternal::NodeEnumerator::Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void System::Collections::ListDictionaryInternal::NodeEnumerator::System_Collections_IEnumerator_Reset() {
  System::Collections::ListDictionaryInternal::NodeEnumerator::Reset();
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.ListDictionaryInternal/NodeKeyValueCollection
#include "System/Collections/ListDictionaryInternal_NodeKeyValueCollection.hpp"
// Including type: System.Collections.ListDictionaryInternal/NodeKeyValueCollection/NodeKeyValueEnumerator
#include "System/Collections/ListDictionaryInternal_NodeKeyValueCollection_NodeKeyValueEnumerator.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.ListDictionaryInternal/NodeKeyValueCollection.System.Collections.ICollection.CopyTo
void System::Collections::ListDictionaryInternal::NodeKeyValueCollection::System_Collections_ICollection_CopyTo(System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::ListDictionaryInternal::NodeKeyValueCollection::System.Collections.ICollection.CopyTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/NodeKeyValueCollection.System.Collections.ICollection.get_Count
int System::Collections::ListDictionaryInternal::NodeKeyValueCollection::System_Collections_ICollection_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::ListDictionaryInternal::NodeKeyValueCollection::System.Collections.ICollection.get_Count");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_Count", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ListDictionaryInternal/NodeKeyValueCollection.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* System::Collections::ListDictionaryInternal::NodeKeyValueCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::ListDictionaryInternal::NodeKeyValueCollection::System.Collections.IEnumerable.GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ListDictionaryInternal/NodeKeyValueCollection/NodeKeyValueEnumerator
#include "System/Collections/ListDictionaryInternal_NodeKeyValueCollection_NodeKeyValueEnumerator.hpp"
// Including type: System.Collections.ListDictionaryInternal/DictionaryNode
#include "System/Collections/ListDictionaryInternal_DictionaryNode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.ListDictionaryInternal/NodeKeyValueCollection/NodeKeyValueEnumerator.get_Current
::Il2CppObject* System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::System_Collections_IEnumerator_get_Current() {
  return System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::get_Current();
}
// Autogenerated method: System.Collections.ListDictionaryInternal/NodeKeyValueCollection/NodeKeyValueEnumerator.MoveNext
bool System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::System_Collections_IEnumerator_MoveNext() {
  return System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::MoveNext();
}
// Autogenerated method: System.Collections.ListDictionaryInternal/NodeKeyValueCollection/NodeKeyValueEnumerator.Reset
void System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::System_Collections_IEnumerator_Reset() {
  System::Collections::ListDictionaryInternal::NodeKeyValueCollection::NodeKeyValueEnumerator::Reset();
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.ListDictionaryInternal/DictionaryNode
#include "System/Collections/ListDictionaryInternal_DictionaryNode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Queue
#include "System/Collections/Queue.hpp"
// Including type: System.Collections.Queue/QueueEnumerator
#include "System/Collections/Queue_QueueEnumerator.hpp"
// Including type: System.Collections.Queue/QueueDebugView
#include "System/Collections/Queue_QueueDebugView.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Queue.Clear
void System::Collections::Queue::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Queue::Clear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Queue.Enqueue
void System::Collections::Queue::Enqueue(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Queue::Enqueue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Enqueue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.Queue.Dequeue
::Il2CppObject* System::Collections::Queue::Dequeue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Queue::Dequeue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dequeue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Queue.Peek
::Il2CppObject* System::Collections::Queue::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Queue::Peek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Peek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Queue.GetElement
::Il2CppObject* System::Collections::Queue::GetElement(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Queue::GetElement");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetElement", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, i);
}
// Autogenerated method: System.Collections.Queue.ToArray
::Array<::Il2CppObject*>* System::Collections::Queue::ToArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Queue::ToArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Queue.SetCapacity
void System::Collections::Queue::SetCapacity(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Queue::SetCapacity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetCapacity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(capacity)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Collections.Queue.get_Count
int System::Collections::Queue::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Queue::get_Count");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
int System::Collections::Queue::System_Collections_ICollection_get_Count() {
  return System::Collections::Queue::get_Count();
}
// Autogenerated method: System.Collections.Queue.Clone
::Il2CppObject* System::Collections::Queue::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Queue::Clone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* System::Collections::Queue::System_ICloneable_Clone() {
  return System::Collections::Queue::Clone();
}
// Autogenerated method: System.Collections.Queue.CopyTo
void System::Collections::Queue::CopyTo(System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Queue::CopyTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, index);
}
void System::Collections::Queue::System_Collections_ICollection_CopyTo(System::Array* array, int index) {
  System::Collections::Queue::CopyTo(array, index);
}
// Autogenerated method: System.Collections.Queue.GetEnumerator
System::Collections::IEnumerator* System::Collections::Queue::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Queue::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
System::Collections::IEnumerator* System::Collections::Queue::System_Collections_IEnumerable_GetEnumerator() {
  return System::Collections::Queue::GetEnumerator();
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Queue/QueueEnumerator
#include "System/Collections/Queue_QueueEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Queue/QueueEnumerator.Clone
::Il2CppObject* System::Collections::Queue::QueueEnumerator::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Queue::QueueEnumerator::Clone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* System::Collections::Queue::QueueEnumerator::System_ICloneable_Clone() {
  return System::Collections::Queue::QueueEnumerator::Clone();
}
// Autogenerated method: System.Collections.Queue/QueueEnumerator.MoveNext
bool System::Collections::Queue::QueueEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Queue::QueueEnumerator::MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool System::Collections::Queue::QueueEnumerator::System_Collections_IEnumerator_MoveNext() {
  return System::Collections::Queue::QueueEnumerator::MoveNext();
}
// Autogenerated method: System.Collections.Queue/QueueEnumerator.get_Current
::Il2CppObject* System::Collections::Queue::QueueEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Queue::QueueEnumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* System::Collections::Queue::QueueEnumerator::System_Collections_IEnumerator_get_Current() {
  return System::Collections::Queue::QueueEnumerator::get_Current();
}
// Autogenerated method: System.Collections.Queue/QueueEnumerator.Reset
void System::Collections::Queue::QueueEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Queue::QueueEnumerator::Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void System::Collections::Queue::QueueEnumerator::System_Collections_IEnumerator_Reset() {
  System::Collections::Queue::QueueEnumerator::Reset();
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.ReadOnlyCollectionBase
#include "System/Collections/ReadOnlyCollectionBase.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.ReadOnlyCollectionBase.get_InnerList
System::Collections::ArrayList* System::Collections::ReadOnlyCollectionBase::get_InnerList() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::ReadOnlyCollectionBase::get_InnerList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_InnerList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::ArrayList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.ReadOnlyCollectionBase.get_Count
int System::Collections::ReadOnlyCollectionBase::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::ReadOnlyCollectionBase::get_Count");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
int System::Collections::ReadOnlyCollectionBase::System_Collections_ICollection_get_Count() {
  return System::Collections::ReadOnlyCollectionBase::get_Count();
}
// Autogenerated method: System.Collections.ReadOnlyCollectionBase.System.Collections.ICollection.CopyTo
void System::Collections::ReadOnlyCollectionBase::System_Collections_ICollection_CopyTo(System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::ReadOnlyCollectionBase::System.Collections.ICollection.CopyTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.ReadOnlyCollectionBase.GetEnumerator
System::Collections::IEnumerator* System::Collections::ReadOnlyCollectionBase::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::ReadOnlyCollectionBase::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
System::Collections::IEnumerator* System::Collections::ReadOnlyCollectionBase::System_Collections_IEnumerable_GetEnumerator() {
  return System::Collections::ReadOnlyCollectionBase::GetEnumerator();
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.SortedList
#include "System/Collections/SortedList.hpp"
// Including type: System.Collections.SortedList/SyncSortedList
#include "System/Collections/SortedList_SyncSortedList.hpp"
// Including type: System.Collections.SortedList/SortedListEnumerator
#include "System/Collections/SortedList_SortedListEnumerator.hpp"
// Including type: System.Collections.SortedList/KeyList
#include "System/Collections/SortedList_KeyList.hpp"
// Including type: System.Collections.SortedList/ValueList
#include "System/Collections/SortedList_ValueList.hpp"
// Including type: System.Collections.SortedList/SortedListDebugView
#include "System/Collections/SortedList_SortedListDebugView.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 _defaultCapacity
int System::Collections::SortedList::_get__defaultCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::_get__defaultCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Collections", "SortedList", "_defaultCapacity"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _defaultCapacity
void System::Collections::SortedList::_set__defaultCapacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::_set__defaultCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "SortedList", "_defaultCapacity", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object[] emptyArray
::Array<::Il2CppObject*>* System::Collections::SortedList::_get_emptyArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::_get_emptyArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppObject*>*>("System.Collections", "SortedList", "emptyArray"));
}
// Autogenerated static field setter
// Set static field: static private System.Object[] emptyArray
void System::Collections::SortedList::_set_emptyArray(::Array<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::_set_emptyArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections", "SortedList", "emptyArray", value));
}
// Autogenerated method: System.Collections.SortedList.Init
void System::Collections::SortedList::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.get_Capacity
int System::Collections::SortedList::get_Capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::get_Capacity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Capacity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.set_Capacity
void System::Collections::SortedList::set_Capacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::set_Capacity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Capacity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.SortedList.get_Values
System::Collections::ICollection* System::Collections::SortedList::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::get_Values");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.get_SyncRoot
::Il2CppObject* System::Collections::SortedList::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::get_SyncRoot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.ContainsValue
bool System::Collections::SortedList::ContainsValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::ContainsValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ContainsValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.SortedList.EnsureCapacity
void System::Collections::SortedList::EnsureCapacity(int min) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::EnsureCapacity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EnsureCapacity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(min)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, min);
}
// Autogenerated method: System.Collections.SortedList.GetByIndex
::Il2CppObject* System::Collections::SortedList::GetByIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::GetByIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetByIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.SortedList.GetKey
::Il2CppObject* System::Collections::SortedList::GetKey(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::GetKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.SortedList.GetKeyList
System::Collections::IList* System::Collections::SortedList::GetKeyList() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::GetKeyList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetKeyList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.GetValueList
System::Collections::IList* System::Collections::SortedList::GetValueList() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::GetValueList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetValueList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.IndexOfKey
int System::Collections::SortedList::IndexOfKey(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::IndexOfKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IndexOfKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList.IndexOfValue
int System::Collections::SortedList::IndexOfValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::IndexOfValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IndexOfValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.SortedList.Insert
void System::Collections::SortedList::Insert(int index, ::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::Insert");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index, key, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, key, value);
}
// Autogenerated method: System.Collections.SortedList.RemoveAt
void System::Collections::SortedList::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::RemoveAt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.SortedList.Synchronized
System::Collections::SortedList* System::Collections::SortedList::Synchronized(System::Collections::SortedList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::Synchronized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Collections", "SortedList", "Synchronized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(list)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::SortedList*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Autogenerated method: System.Collections.SortedList..cctor
void System::Collections::SortedList::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Collections", "SortedList", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.Add
void System::Collections::SortedList::Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
void System::Collections::SortedList::System_Collections_IDictionary_Add(::Il2CppObject* key, ::Il2CppObject* value) {
  System::Collections::SortedList::Add(key, value);
}
// Autogenerated method: System.Collections.SortedList.get_Count
int System::Collections::SortedList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::get_Count");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
int System::Collections::SortedList::System_Collections_ICollection_get_Count() {
  return System::Collections::SortedList::get_Count();
}
// Autogenerated method: System.Collections.SortedList.get_Keys
System::Collections::ICollection* System::Collections::SortedList::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::get_Keys");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::ICollection*, false>(this, ___internal__method);
}
System::Collections::ICollection* System::Collections::SortedList::System_Collections_IDictionary_get_Keys() {
  return System::Collections::SortedList::get_Keys();
}
// Autogenerated method: System.Collections.SortedList.Clone
::Il2CppObject* System::Collections::SortedList::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::Clone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* System::Collections::SortedList::System_ICloneable_Clone() {
  return System::Collections::SortedList::Clone();
}
// Autogenerated method: System.Collections.SortedList.Contains
bool System::Collections::SortedList::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::Contains");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, key);
}
bool System::Collections::SortedList::System_Collections_IDictionary_Contains(::Il2CppObject* key) {
  return System::Collections::SortedList::Contains(key);
}
// Autogenerated method: System.Collections.SortedList.CopyTo
void System::Collections::SortedList::CopyTo(System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::CopyTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, arrayIndex)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, arrayIndex);
}
void System::Collections::SortedList::System_Collections_ICollection_CopyTo(System::Array* array, int arrayIndex) {
  System::Collections::SortedList::CopyTo(array, arrayIndex);
}
// Autogenerated method: System.Collections.SortedList.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* System::Collections::SortedList::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::System.Collections.IEnumerable.GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList.GetEnumerator
System::Collections::IDictionaryEnumerator* System::Collections::SortedList::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
System::Collections::IDictionaryEnumerator* System::Collections::SortedList::System_Collections_IDictionary_GetEnumerator() {
  return System::Collections::SortedList::GetEnumerator();
}
// Autogenerated method: System.Collections.SortedList.get_Item
::Il2CppObject* System::Collections::SortedList::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::get_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
::Il2CppObject* System::Collections::SortedList::System_Collections_IDictionary_get_Item(::Il2CppObject* key) {
  return System::Collections::SortedList::get_Item(key);
}
// Autogenerated method: System.Collections.SortedList.set_Item
void System::Collections::SortedList::set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::set_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
void System::Collections::SortedList::System_Collections_IDictionary_set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  System::Collections::SortedList::set_Item(key, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.SortedList/SyncSortedList
#include "System/Collections/SortedList_SyncSortedList.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.SortedList/SyncSortedList.get_Count
int System::Collections::SortedList::SyncSortedList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::SyncSortedList::get_Count");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
int System::Collections::SortedList::SyncSortedList::System_Collections_ICollection_get_Count() {
  return System::Collections::SortedList::SyncSortedList::get_Count();
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.get_SyncRoot
::Il2CppObject* System::Collections::SortedList::SyncSortedList::get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::SyncSortedList::get_SyncRoot");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SyncRoot", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.get_Item
::Il2CppObject* System::Collections::SortedList::SyncSortedList::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::SyncSortedList::get_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
::Il2CppObject* System::Collections::SortedList::SyncSortedList::System_Collections_IDictionary_get_Item(::Il2CppObject* key) {
  return System::Collections::SortedList::SyncSortedList::get_Item(key);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.set_Item
void System::Collections::SortedList::SyncSortedList::set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::SyncSortedList::set_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
void System::Collections::SortedList::SyncSortedList::System_Collections_IDictionary_set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  System::Collections::SortedList::SyncSortedList::set_Item(key, value);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.Add
void System::Collections::SortedList::SyncSortedList::Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::SyncSortedList::Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
void System::Collections::SortedList::SyncSortedList::System_Collections_IDictionary_Add(::Il2CppObject* key, ::Il2CppObject* value) {
  System::Collections::SortedList::SyncSortedList::Add(key, value);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.get_Capacity
int System::Collections::SortedList::SyncSortedList::get_Capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::SyncSortedList::get_Capacity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Capacity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.Clone
::Il2CppObject* System::Collections::SortedList::SyncSortedList::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::SyncSortedList::Clone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* System::Collections::SortedList::SyncSortedList::System_ICloneable_Clone() {
  return System::Collections::SortedList::SyncSortedList::Clone();
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.Contains
bool System::Collections::SortedList::SyncSortedList::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::SyncSortedList::Contains");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, key);
}
bool System::Collections::SortedList::SyncSortedList::System_Collections_IDictionary_Contains(::Il2CppObject* key) {
  return System::Collections::SortedList::SyncSortedList::Contains(key);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.ContainsValue
bool System::Collections::SortedList::SyncSortedList::ContainsValue(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::SyncSortedList::ContainsValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ContainsValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.CopyTo
void System::Collections::SortedList::SyncSortedList::CopyTo(System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::SyncSortedList::CopyTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, index);
}
void System::Collections::SortedList::SyncSortedList::System_Collections_ICollection_CopyTo(System::Array* array, int index) {
  System::Collections::SortedList::SyncSortedList::CopyTo(array, index);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.GetByIndex
::Il2CppObject* System::Collections::SortedList::SyncSortedList::GetByIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::SyncSortedList::GetByIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetByIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.GetEnumerator
System::Collections::IDictionaryEnumerator* System::Collections::SortedList::SyncSortedList::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::SyncSortedList::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
System::Collections::IDictionaryEnumerator* System::Collections::SortedList::SyncSortedList::System_Collections_IDictionary_GetEnumerator() {
  return System::Collections::SortedList::SyncSortedList::GetEnumerator();
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.GetKey
::Il2CppObject* System::Collections::SortedList::SyncSortedList::GetKey(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::SyncSortedList::GetKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.GetKeyList
System::Collections::IList* System::Collections::SortedList::SyncSortedList::GetKeyList() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::SyncSortedList::GetKeyList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetKeyList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.GetValueList
System::Collections::IList* System::Collections::SortedList::SyncSortedList::GetValueList() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::SyncSortedList::GetValueList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetValueList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.IndexOfKey
int System::Collections::SortedList::SyncSortedList::IndexOfKey(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::SyncSortedList::IndexOfKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IndexOfKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.IndexOfValue
int System::Collections::SortedList::SyncSortedList::IndexOfValue(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::SyncSortedList::IndexOfValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IndexOfValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.SortedList/SyncSortedList.RemoveAt
void System::Collections::SortedList::SyncSortedList::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::SyncSortedList::RemoveAt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.SortedList/SortedListEnumerator
#include "System/Collections/SortedList_SortedListEnumerator.hpp"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.SortedList/SortedListEnumerator.Clone
::Il2CppObject* System::Collections::SortedList::SortedListEnumerator::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::SortedListEnumerator::Clone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* System::Collections::SortedList::SortedListEnumerator::System_ICloneable_Clone() {
  return System::Collections::SortedList::SortedListEnumerator::Clone();
}
// Autogenerated method: System.Collections.SortedList/SortedListEnumerator.get_Key
::Il2CppObject* System::Collections::SortedList::SortedListEnumerator::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::SortedListEnumerator::get_Key");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* System::Collections::SortedList::SortedListEnumerator::System_Collections_IDictionaryEnumerator_get_Key() {
  return System::Collections::SortedList::SortedListEnumerator::get_Key();
}
// Autogenerated method: System.Collections.SortedList/SortedListEnumerator.MoveNext
bool System::Collections::SortedList::SortedListEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::SortedListEnumerator::MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool System::Collections::SortedList::SortedListEnumerator::System_Collections_IEnumerator_MoveNext() {
  return System::Collections::SortedList::SortedListEnumerator::MoveNext();
}
// Autogenerated method: System.Collections.SortedList/SortedListEnumerator.get_Entry
System::Collections::DictionaryEntry System::Collections::SortedList::SortedListEnumerator::get_Entry() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::SortedListEnumerator::get_Entry");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Entry", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::DictionaryEntry, false>(this, ___internal__method);
}
System::Collections::DictionaryEntry System::Collections::SortedList::SortedListEnumerator::System_Collections_IDictionaryEnumerator_get_Entry() {
  return System::Collections::SortedList::SortedListEnumerator::get_Entry();
}
// Autogenerated method: System.Collections.SortedList/SortedListEnumerator.get_Current
::Il2CppObject* System::Collections::SortedList::SortedListEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::SortedListEnumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* System::Collections::SortedList::SortedListEnumerator::System_Collections_IEnumerator_get_Current() {
  return System::Collections::SortedList::SortedListEnumerator::get_Current();
}
// Autogenerated method: System.Collections.SortedList/SortedListEnumerator.get_Value
::Il2CppObject* System::Collections::SortedList::SortedListEnumerator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::SortedListEnumerator::get_Value");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* System::Collections::SortedList::SortedListEnumerator::System_Collections_IDictionaryEnumerator_get_Value() {
  return System::Collections::SortedList::SortedListEnumerator::get_Value();
}
// Autogenerated method: System.Collections.SortedList/SortedListEnumerator.Reset
void System::Collections::SortedList::SortedListEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::SortedListEnumerator::Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void System::Collections::SortedList::SortedListEnumerator::System_Collections_IEnumerator_Reset() {
  System::Collections::SortedList::SortedListEnumerator::Reset();
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.SortedList/KeyList
#include "System/Collections/SortedList_KeyList.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.SortedList/KeyList.get_Count
int System::Collections::SortedList::KeyList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::KeyList::get_Count");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
int System::Collections::SortedList::KeyList::System_Collections_ICollection_get_Count() {
  return System::Collections::SortedList::KeyList::get_Count();
}
// Autogenerated method: System.Collections.SortedList/KeyList.get_IsReadOnly
bool System::Collections::SortedList::KeyList::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::KeyList::get_IsReadOnly");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool System::Collections::SortedList::KeyList::System_Collections_IList_get_IsReadOnly() {
  return System::Collections::SortedList::KeyList::get_IsReadOnly();
}
// Autogenerated method: System.Collections.SortedList/KeyList.Add
int System::Collections::SortedList::KeyList::Add(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::KeyList::Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, key);
}
int System::Collections::SortedList::KeyList::System_Collections_IList_Add(::Il2CppObject* key) {
  return System::Collections::SortedList::KeyList::Add(key);
}
// Autogenerated method: System.Collections.SortedList/KeyList.Clear
void System::Collections::SortedList::KeyList::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::KeyList::Clear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void System::Collections::SortedList::KeyList::System_Collections_IList_Clear() {
  System::Collections::SortedList::KeyList::Clear();
}
// Autogenerated method: System.Collections.SortedList/KeyList.Contains
bool System::Collections::SortedList::KeyList::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::KeyList::Contains");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, key);
}
bool System::Collections::SortedList::KeyList::System_Collections_IList_Contains(::Il2CppObject* key) {
  return System::Collections::SortedList::KeyList::Contains(key);
}
// Autogenerated method: System.Collections.SortedList/KeyList.CopyTo
void System::Collections::SortedList::KeyList::CopyTo(System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::KeyList::CopyTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, arrayIndex)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, arrayIndex);
}
void System::Collections::SortedList::KeyList::System_Collections_ICollection_CopyTo(System::Array* array, int arrayIndex) {
  System::Collections::SortedList::KeyList::CopyTo(array, arrayIndex);
}
// Autogenerated method: System.Collections.SortedList/KeyList.Insert
void System::Collections::SortedList::KeyList::Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::KeyList::Insert");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, value);
}
void System::Collections::SortedList::KeyList::System_Collections_IList_Insert(int index, ::Il2CppObject* value) {
  System::Collections::SortedList::KeyList::Insert(index, value);
}
// Autogenerated method: System.Collections.SortedList/KeyList.get_Item
::Il2CppObject* System::Collections::SortedList::KeyList::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::KeyList::get_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
::Il2CppObject* System::Collections::SortedList::KeyList::System_Collections_IList_get_Item(int index) {
  return System::Collections::SortedList::KeyList::get_Item(index);
}
// Autogenerated method: System.Collections.SortedList/KeyList.set_Item
void System::Collections::SortedList::KeyList::set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::KeyList::set_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, value);
}
void System::Collections::SortedList::KeyList::System_Collections_IList_set_Item(int index, ::Il2CppObject* value) {
  System::Collections::SortedList::KeyList::set_Item(index, value);
}
// Autogenerated method: System.Collections.SortedList/KeyList.GetEnumerator
System::Collections::IEnumerator* System::Collections::SortedList::KeyList::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::KeyList::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
System::Collections::IEnumerator* System::Collections::SortedList::KeyList::System_Collections_IEnumerable_GetEnumerator() {
  return System::Collections::SortedList::KeyList::GetEnumerator();
}
// Autogenerated method: System.Collections.SortedList/KeyList.IndexOf
int System::Collections::SortedList::KeyList::IndexOf(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::KeyList::IndexOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, key);
}
int System::Collections::SortedList::KeyList::System_Collections_IList_IndexOf(::Il2CppObject* key) {
  return System::Collections::SortedList::KeyList::IndexOf(key);
}
// Autogenerated method: System.Collections.SortedList/KeyList.Remove
void System::Collections::SortedList::KeyList::Remove(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::KeyList::Remove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key);
}
void System::Collections::SortedList::KeyList::System_Collections_IList_Remove(::Il2CppObject* key) {
  System::Collections::SortedList::KeyList::Remove(key);
}
// Autogenerated method: System.Collections.SortedList/KeyList.RemoveAt
void System::Collections::SortedList::KeyList::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::KeyList::RemoveAt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index);
}
void System::Collections::SortedList::KeyList::System_Collections_IList_RemoveAt(int index) {
  System::Collections::SortedList::KeyList::RemoveAt(index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.SortedList/ValueList
#include "System/Collections/SortedList_ValueList.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.SortedList/ValueList.get_Count
int System::Collections::SortedList::ValueList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::ValueList::get_Count");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
int System::Collections::SortedList::ValueList::System_Collections_ICollection_get_Count() {
  return System::Collections::SortedList::ValueList::get_Count();
}
// Autogenerated method: System.Collections.SortedList/ValueList.get_IsReadOnly
bool System::Collections::SortedList::ValueList::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::ValueList::get_IsReadOnly");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool System::Collections::SortedList::ValueList::System_Collections_IList_get_IsReadOnly() {
  return System::Collections::SortedList::ValueList::get_IsReadOnly();
}
// Autogenerated method: System.Collections.SortedList/ValueList.Add
int System::Collections::SortedList::ValueList::Add(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::ValueList::Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, key);
}
int System::Collections::SortedList::ValueList::System_Collections_IList_Add(::Il2CppObject* key) {
  return System::Collections::SortedList::ValueList::Add(key);
}
// Autogenerated method: System.Collections.SortedList/ValueList.Clear
void System::Collections::SortedList::ValueList::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::ValueList::Clear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void System::Collections::SortedList::ValueList::System_Collections_IList_Clear() {
  System::Collections::SortedList::ValueList::Clear();
}
// Autogenerated method: System.Collections.SortedList/ValueList.Contains
bool System::Collections::SortedList::ValueList::Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::ValueList::Contains");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
bool System::Collections::SortedList::ValueList::System_Collections_IList_Contains(::Il2CppObject* value) {
  return System::Collections::SortedList::ValueList::Contains(value);
}
// Autogenerated method: System.Collections.SortedList/ValueList.CopyTo
void System::Collections::SortedList::ValueList::CopyTo(System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::ValueList::CopyTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, arrayIndex)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, arrayIndex);
}
void System::Collections::SortedList::ValueList::System_Collections_ICollection_CopyTo(System::Array* array, int arrayIndex) {
  System::Collections::SortedList::ValueList::CopyTo(array, arrayIndex);
}
// Autogenerated method: System.Collections.SortedList/ValueList.Insert
void System::Collections::SortedList::ValueList::Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::ValueList::Insert");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, value);
}
void System::Collections::SortedList::ValueList::System_Collections_IList_Insert(int index, ::Il2CppObject* value) {
  System::Collections::SortedList::ValueList::Insert(index, value);
}
// Autogenerated method: System.Collections.SortedList/ValueList.get_Item
::Il2CppObject* System::Collections::SortedList::ValueList::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::ValueList::get_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
::Il2CppObject* System::Collections::SortedList::ValueList::System_Collections_IList_get_Item(int index) {
  return System::Collections::SortedList::ValueList::get_Item(index);
}
// Autogenerated method: System.Collections.SortedList/ValueList.set_Item
void System::Collections::SortedList::ValueList::set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::ValueList::set_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, value);
}
void System::Collections::SortedList::ValueList::System_Collections_IList_set_Item(int index, ::Il2CppObject* value) {
  System::Collections::SortedList::ValueList::set_Item(index, value);
}
// Autogenerated method: System.Collections.SortedList/ValueList.GetEnumerator
System::Collections::IEnumerator* System::Collections::SortedList::ValueList::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::ValueList::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
System::Collections::IEnumerator* System::Collections::SortedList::ValueList::System_Collections_IEnumerable_GetEnumerator() {
  return System::Collections::SortedList::ValueList::GetEnumerator();
}
// Autogenerated method: System.Collections.SortedList/ValueList.IndexOf
int System::Collections::SortedList::ValueList::IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::ValueList::IndexOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value);
}
int System::Collections::SortedList::ValueList::System_Collections_IList_IndexOf(::Il2CppObject* value) {
  return System::Collections::SortedList::ValueList::IndexOf(value);
}
// Autogenerated method: System.Collections.SortedList/ValueList.Remove
void System::Collections::SortedList::ValueList::Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::ValueList::Remove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
void System::Collections::SortedList::ValueList::System_Collections_IList_Remove(::Il2CppObject* value) {
  System::Collections::SortedList::ValueList::Remove(value);
}
// Autogenerated method: System.Collections.SortedList/ValueList.RemoveAt
void System::Collections::SortedList::ValueList::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::SortedList::ValueList::RemoveAt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index);
}
void System::Collections::SortedList::ValueList::System_Collections_IList_RemoveAt(int index) {
  System::Collections::SortedList::ValueList::RemoveAt(index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Stack
#include "System/Collections/Stack.hpp"
// Including type: System.Collections.Stack/StackEnumerator
#include "System/Collections/Stack_StackEnumerator.hpp"
// Including type: System.Collections.Stack/StackDebugView
#include "System/Collections/Stack_StackDebugView.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Stack.Clear
void System::Collections::Stack::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Stack::Clear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Stack.Peek
::Il2CppObject* System::Collections::Stack::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Stack::Peek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Peek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Stack.Pop
::Il2CppObject* System::Collections::Stack::Pop() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Stack::Pop");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Pop", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Stack.Push
void System::Collections::Stack::Push(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Stack::Push");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Push", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.Stack.get_Count
int System::Collections::Stack::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Stack::get_Count");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
int System::Collections::Stack::System_Collections_ICollection_get_Count() {
  return System::Collections::Stack::get_Count();
}
// Autogenerated method: System.Collections.Stack.Clone
::Il2CppObject* System::Collections::Stack::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Stack::Clone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* System::Collections::Stack::System_ICloneable_Clone() {
  return System::Collections::Stack::Clone();
}
// Autogenerated method: System.Collections.Stack.CopyTo
void System::Collections::Stack::CopyTo(System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Stack::CopyTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, index)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, index);
}
void System::Collections::Stack::System_Collections_ICollection_CopyTo(System::Array* array, int index) {
  System::Collections::Stack::CopyTo(array, index);
}
// Autogenerated method: System.Collections.Stack.GetEnumerator
System::Collections::IEnumerator* System::Collections::Stack::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Stack::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
System::Collections::IEnumerator* System::Collections::Stack::System_Collections_IEnumerable_GetEnumerator() {
  return System::Collections::Stack::GetEnumerator();
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Stack/StackEnumerator
#include "System/Collections/Stack_StackEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Stack/StackEnumerator.Clone
::Il2CppObject* System::Collections::Stack::StackEnumerator::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Stack::StackEnumerator::Clone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* System::Collections::Stack::StackEnumerator::System_ICloneable_Clone() {
  return System::Collections::Stack::StackEnumerator::Clone();
}
// Autogenerated method: System.Collections.Stack/StackEnumerator.MoveNext
bool System::Collections::Stack::StackEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Stack::StackEnumerator::MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool System::Collections::Stack::StackEnumerator::System_Collections_IEnumerator_MoveNext() {
  return System::Collections::Stack::StackEnumerator::MoveNext();
}
// Autogenerated method: System.Collections.Stack/StackEnumerator.get_Current
::Il2CppObject* System::Collections::Stack::StackEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Stack::StackEnumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* System::Collections::Stack::StackEnumerator::System_Collections_IEnumerator_get_Current() {
  return System::Collections::Stack::StackEnumerator::get_Current();
}
// Autogenerated method: System.Collections.Stack/StackEnumerator.Reset
void System::Collections::Stack::StackEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Stack::StackEnumerator::Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void System::Collections::Stack::StackEnumerator::System_Collections_IEnumerator_Reset() {
  System::Collections::Stack::StackEnumerator::Reset();
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Concurrent.CDSCollectionETWBCLProvider
#include "System/Collections/Concurrent/CDSCollectionETWBCLProvider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Collections.Concurrent.CDSCollectionETWBCLProvider Log
System::Collections::Concurrent::CDSCollectionETWBCLProvider* System::Collections::Concurrent::CDSCollectionETWBCLProvider::_get_Log() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Concurrent::CDSCollectionETWBCLProvider::_get_Log");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Concurrent::CDSCollectionETWBCLProvider*>("System.Collections.Concurrent", "CDSCollectionETWBCLProvider", "Log"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Concurrent.CDSCollectionETWBCLProvider Log
void System::Collections::Concurrent::CDSCollectionETWBCLProvider::_set_Log(System::Collections::Concurrent::CDSCollectionETWBCLProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Concurrent::CDSCollectionETWBCLProvider::_set_Log");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Concurrent", "CDSCollectionETWBCLProvider", "Log", value));
}
// Autogenerated method: System.Collections.Concurrent.CDSCollectionETWBCLProvider.ConcurrentDictionary_AcquiringAllLocks
void System::Collections::Concurrent::CDSCollectionETWBCLProvider::ConcurrentDictionary_AcquiringAllLocks(int numOfBuckets) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Concurrent::CDSCollectionETWBCLProvider::ConcurrentDictionary_AcquiringAllLocks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConcurrentDictionary_AcquiringAllLocks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(numOfBuckets)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, numOfBuckets);
}
// Autogenerated method: System.Collections.Concurrent.CDSCollectionETWBCLProvider..cctor
void System::Collections::Concurrent::CDSCollectionETWBCLProvider::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Concurrent::CDSCollectionETWBCLProvider::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Collections.Concurrent", "CDSCollectionETWBCLProvider", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Generic.CollectionExtensions
#include "System/Collections/Generic/CollectionExtensions.hpp"
// Including type: System.Collections.Generic.IReadOnlyDictionary`2
#include "System/Collections/Generic/IReadOnlyDictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Generic.KeyValuePair
#include "System/Collections/Generic/KeyValuePair.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Generic.KeyValuePair.PairToString
::Il2CppString* System::Collections::Generic::KeyValuePair::PairToString(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::KeyValuePair::PairToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Collections.Generic", "KeyValuePair", "PairToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key, value)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, key, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Generic.IntrospectiveSortUtilities
#include "System/Collections/Generic/IntrospectiveSortUtilities.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Generic.IntrospectiveSortUtilities.FloorLog2
int System::Collections::Generic::IntrospectiveSortUtilities::FloorLog2(int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::IntrospectiveSortUtilities::FloorLog2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Collections.Generic", "IntrospectiveSortUtilities", "FloorLog2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(n)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, n);
}
// Autogenerated method: System.Collections.Generic.IntrospectiveSortUtilities.ThrowOrIgnoreBadComparer
void System::Collections::Generic::IntrospectiveSortUtilities::ThrowOrIgnoreBadComparer(::Il2CppObject* comparer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::IntrospectiveSortUtilities::ThrowOrIgnoreBadComparer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Collections.Generic", "IntrospectiveSortUtilities", "ThrowOrIgnoreBadComparer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(comparer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, comparer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Generic.InsertionBehavior
#include "System/Collections/Generic/InsertionBehavior.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.InsertionBehavior None
System::Collections::Generic::InsertionBehavior System::Collections::Generic::InsertionBehavior::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::InsertionBehavior::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::InsertionBehavior>("System.Collections.Generic", "InsertionBehavior", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.InsertionBehavior None
void System::Collections::Generic::InsertionBehavior::_set_None(System::Collections::Generic::InsertionBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::InsertionBehavior::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "InsertionBehavior", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.InsertionBehavior OverwriteExisting
System::Collections::Generic::InsertionBehavior System::Collections::Generic::InsertionBehavior::_get_OverwriteExisting() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::InsertionBehavior::_get_OverwriteExisting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::InsertionBehavior>("System.Collections.Generic", "InsertionBehavior", "OverwriteExisting"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.InsertionBehavior OverwriteExisting
void System::Collections::Generic::InsertionBehavior::_set_OverwriteExisting(System::Collections::Generic::InsertionBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::InsertionBehavior::_set_OverwriteExisting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "InsertionBehavior", "OverwriteExisting", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.InsertionBehavior ThrowOnExisting
System::Collections::Generic::InsertionBehavior System::Collections::Generic::InsertionBehavior::_get_ThrowOnExisting() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::InsertionBehavior::_get_ThrowOnExisting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::InsertionBehavior>("System.Collections.Generic", "InsertionBehavior", "ThrowOnExisting"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.InsertionBehavior ThrowOnExisting
void System::Collections::Generic::InsertionBehavior::_set_ThrowOnExisting(System::Collections::Generic::InsertionBehavior value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::InsertionBehavior::_set_ThrowOnExisting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "InsertionBehavior", "ThrowOnExisting", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Generic.DictionaryHashHelpers
#include "System/Collections/Generic/DictionaryHashHelpers.hpp"
// Including type: System.Runtime.CompilerServices.ConditionalWeakTable`2
#include "System/Runtime/CompilerServices/ConditionalWeakTable_2.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [CompilerGeneratedAttribute] Offset: 0xCAFC7C
// Autogenerated static field getter
// Get static field: static private readonly System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Object,System.Runtime.Serialization.SerializationInfo> <SerializationInfoTable>k__BackingField
System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, System::Runtime::Serialization::SerializationInfo*>* System::Collections::Generic::DictionaryHashHelpers::_get_$SerializationInfoTable$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::DictionaryHashHelpers::_get_$SerializationInfoTable$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, System::Runtime::Serialization::SerializationInfo*>*>("System.Collections.Generic", "DictionaryHashHelpers", "<SerializationInfoTable>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Object,System.Runtime.Serialization.SerializationInfo> <SerializationInfoTable>k__BackingField
void System::Collections::Generic::DictionaryHashHelpers::_set_$SerializationInfoTable$k__BackingField(System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, System::Runtime::Serialization::SerializationInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::DictionaryHashHelpers::_set_$SerializationInfoTable$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "DictionaryHashHelpers", "<SerializationInfoTable>k__BackingField", value));
}
// Autogenerated method: System.Collections.Generic.DictionaryHashHelpers.get_SerializationInfoTable
System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, System::Runtime::Serialization::SerializationInfo*>* System::Collections::Generic::DictionaryHashHelpers::get_SerializationInfoTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::DictionaryHashHelpers::get_SerializationInfoTable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Collections.Generic", "DictionaryHashHelpers", "get_SerializationInfoTable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::CompilerServices::ConditionalWeakTable_2<::Il2CppObject*, System::Runtime::Serialization::SerializationInfo*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.Generic.DictionaryHashHelpers..cctor
void System::Collections::Generic::DictionaryHashHelpers::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::DictionaryHashHelpers::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Collections.Generic", "DictionaryHashHelpers", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Generic.NonRandomizedStringEqualityComparer
#include "System/Collections/Generic/NonRandomizedStringEqualityComparer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Generic.NonRandomizedStringEqualityComparer.Equals
bool System::Collections::Generic::NonRandomizedStringEqualityComparer::Equals(::Il2CppString* x, ::Il2CppString* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::NonRandomizedStringEqualityComparer::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.Collections.Generic.NonRandomizedStringEqualityComparer.GetHashCode
int System::Collections::Generic::NonRandomizedStringEqualityComparer::GetHashCode(::Il2CppString* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::NonRandomizedStringEqualityComparer::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Generic.ObjectEqualityComparer
#include "System/Collections/Generic/ObjectEqualityComparer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Collections.Generic.ObjectEqualityComparer Default
System::Collections::Generic::ObjectEqualityComparer* System::Collections::Generic::ObjectEqualityComparer::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::ObjectEqualityComparer::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::ObjectEqualityComparer*>("System.Collections.Generic", "ObjectEqualityComparer", "Default"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Collections.Generic.ObjectEqualityComparer Default
void System::Collections::Generic::ObjectEqualityComparer::_set_Default(System::Collections::Generic::ObjectEqualityComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::ObjectEqualityComparer::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "ObjectEqualityComparer", "Default", value));
}
// Autogenerated method: System.Collections.Generic.ObjectEqualityComparer..cctor
void System::Collections::Generic::ObjectEqualityComparer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::ObjectEqualityComparer::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Collections.Generic", "ObjectEqualityComparer", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.Generic.ObjectEqualityComparer.System.Collections.IEqualityComparer.GetHashCode
int System::Collections::Generic::ObjectEqualityComparer::System_Collections_IEqualityComparer_GetHashCode(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::ObjectEqualityComparer::System.Collections.IEqualityComparer.GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEqualityComparer.GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.Generic.ObjectEqualityComparer.System.Collections.IEqualityComparer.Equals
bool System::Collections::Generic::ObjectEqualityComparer::System_Collections_IEqualityComparer_Equals(::Il2CppObject* x, ::Il2CppObject* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::ObjectEqualityComparer::System.Collections.IEqualityComparer.Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEqualityComparer.Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Generic.ByteEqualityComparer
#include "System/Collections/Generic/ByteEqualityComparer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.Equals
bool System::Collections::Generic::ByteEqualityComparer::Equals(uint8_t x, uint8_t y) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::ByteEqualityComparer::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.GetHashCode
int System::Collections::Generic::ByteEqualityComparer::GetHashCode(uint8_t b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::ByteEqualityComparer::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(b)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, b);
}
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.IndexOf
int System::Collections::Generic::ByteEqualityComparer::IndexOf(::Array<uint8_t>* array, uint8_t value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::ByteEqualityComparer::IndexOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, value, startIndex, count)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, array, value, startIndex, count);
}
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.LastIndexOf
int System::Collections::Generic::ByteEqualityComparer::LastIndexOf(::Array<uint8_t>* array, uint8_t value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::ByteEqualityComparer::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, value, startIndex, count)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, array, value, startIndex, count);
}
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.Equals
bool System::Collections::Generic::ByteEqualityComparer::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::ByteEqualityComparer::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.Generic.ByteEqualityComparer.GetHashCode
int System::Collections::Generic::ByteEqualityComparer::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::ByteEqualityComparer::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Generic.InternalStringComparer
#include "System/Collections/Generic/InternalStringComparer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Generic.InternalStringComparer.GetHashCode
int System::Collections::Generic::InternalStringComparer::GetHashCode(::Il2CppString* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::InternalStringComparer::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.Generic.InternalStringComparer.Equals
bool System::Collections::Generic::InternalStringComparer::Equals(::Il2CppString* x, ::Il2CppString* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::InternalStringComparer::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.Collections.Generic.InternalStringComparer.IndexOf
int System::Collections::Generic::InternalStringComparer::IndexOf(::Array<::Il2CppString*>* array, ::Il2CppString* value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::InternalStringComparer::IndexOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, value, startIndex, count)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, array, value, startIndex, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Generic.KeyNotFoundException
#include "System/Collections/Generic/KeyNotFoundException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.ConditionalAttribute
#include "System/Diagnostics/ConditionalAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerStepThroughAttribute
#include "System/Diagnostics/DebuggerStepThroughAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerHiddenAttribute
#include "System/Diagnostics/DebuggerHiddenAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerNonUserCodeAttribute
#include "System/Diagnostics/DebuggerNonUserCodeAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggableAttribute
#include "System/Diagnostics/DebuggableAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggableAttribute/DebuggingModes
#include "System/Diagnostics/DebuggableAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggableAttribute/DebuggingModes None
System::Diagnostics::DebuggableAttribute::DebuggingModes System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::DebuggableAttribute::DebuggingModes>("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggableAttribute/DebuggingModes None
void System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_None(System::Diagnostics::DebuggableAttribute::DebuggingModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggableAttribute/DebuggingModes Default
System::Diagnostics::DebuggableAttribute::DebuggingModes System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::DebuggableAttribute::DebuggingModes>("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "Default"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggableAttribute/DebuggingModes Default
void System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_Default(System::Diagnostics::DebuggableAttribute::DebuggingModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggableAttribute/DebuggingModes DisableOptimizations
System::Diagnostics::DebuggableAttribute::DebuggingModes System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_DisableOptimizations() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_DisableOptimizations");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::DebuggableAttribute::DebuggingModes>("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "DisableOptimizations"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggableAttribute/DebuggingModes DisableOptimizations
void System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_DisableOptimizations(System::Diagnostics::DebuggableAttribute::DebuggingModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_DisableOptimizations");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "DisableOptimizations", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggableAttribute/DebuggingModes IgnoreSymbolStoreSequencePoints
System::Diagnostics::DebuggableAttribute::DebuggingModes System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_IgnoreSymbolStoreSequencePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_IgnoreSymbolStoreSequencePoints");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::DebuggableAttribute::DebuggingModes>("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "IgnoreSymbolStoreSequencePoints"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggableAttribute/DebuggingModes IgnoreSymbolStoreSequencePoints
void System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_IgnoreSymbolStoreSequencePoints(System::Diagnostics::DebuggableAttribute::DebuggingModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_IgnoreSymbolStoreSequencePoints");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "IgnoreSymbolStoreSequencePoints", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggableAttribute/DebuggingModes EnableEditAndContinue
System::Diagnostics::DebuggableAttribute::DebuggingModes System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_EnableEditAndContinue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DebuggableAttribute::DebuggingModes::_get_EnableEditAndContinue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::DebuggableAttribute::DebuggingModes>("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "EnableEditAndContinue"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggableAttribute/DebuggingModes EnableEditAndContinue
void System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_EnableEditAndContinue(System::Diagnostics::DebuggableAttribute::DebuggingModes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DebuggableAttribute::DebuggingModes::_set_EnableEditAndContinue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggableAttribute/DebuggingModes", "EnableEditAndContinue", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerBrowsableState
#include "System/Diagnostics/DebuggerBrowsableState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggerBrowsableState Never
System::Diagnostics::DebuggerBrowsableState System::Diagnostics::DebuggerBrowsableState::_get_Never() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DebuggerBrowsableState::_get_Never");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::DebuggerBrowsableState>("System.Diagnostics", "DebuggerBrowsableState", "Never"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggerBrowsableState Never
void System::Diagnostics::DebuggerBrowsableState::_set_Never(System::Diagnostics::DebuggerBrowsableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DebuggerBrowsableState::_set_Never");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggerBrowsableState", "Never", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggerBrowsableState Collapsed
System::Diagnostics::DebuggerBrowsableState System::Diagnostics::DebuggerBrowsableState::_get_Collapsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DebuggerBrowsableState::_get_Collapsed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::DebuggerBrowsableState>("System.Diagnostics", "DebuggerBrowsableState", "Collapsed"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggerBrowsableState Collapsed
void System::Diagnostics::DebuggerBrowsableState::_set_Collapsed(System::Diagnostics::DebuggerBrowsableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DebuggerBrowsableState::_set_Collapsed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggerBrowsableState", "Collapsed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.DebuggerBrowsableState RootHidden
System::Diagnostics::DebuggerBrowsableState System::Diagnostics::DebuggerBrowsableState::_get_RootHidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DebuggerBrowsableState::_get_RootHidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::DebuggerBrowsableState>("System.Diagnostics", "DebuggerBrowsableState", "RootHidden"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.DebuggerBrowsableState RootHidden
void System::Diagnostics::DebuggerBrowsableState::_set_RootHidden(System::Diagnostics::DebuggerBrowsableState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DebuggerBrowsableState::_set_RootHidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "DebuggerBrowsableState", "RootHidden", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.DebuggerBrowsableAttribute
#include "System/Diagnostics/DebuggerBrowsableAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.DebuggerTypeProxyAttribute
#include "System/Diagnostics/DebuggerTypeProxyAttribute.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.DebuggerDisplayAttribute
#include "System/Diagnostics/DebuggerDisplayAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Debugger
#include "System/Diagnostics/Debugger.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.String DefaultCategory
::Il2CppString* System::Diagnostics::Debugger::_get_DefaultCategory() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Debugger::_get_DefaultCategory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Diagnostics", "Debugger", "DefaultCategory"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String DefaultCategory
void System::Diagnostics::Debugger::_set_DefaultCategory(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Debugger::_set_DefaultCategory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "Debugger", "DefaultCategory", value));
}
// Autogenerated method: System.Diagnostics.Debugger.get_IsAttached
bool System::Diagnostics::Debugger::get_IsAttached() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Debugger::get_IsAttached");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", "get_IsAttached", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Debugger.IsAttached_internal
bool System::Diagnostics::Debugger::IsAttached_internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Debugger::IsAttached_internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", "IsAttached_internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Debugger.IsLogging
bool System::Diagnostics::Debugger::IsLogging() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Debugger::IsLogging");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", "IsLogging", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Debugger.Log
void System::Diagnostics::Debugger::Log(int level, ::Il2CppString* category, ::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Debugger::Log");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", "Log", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(level, category, message)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, level, category, message);
}
// Autogenerated method: System.Diagnostics.Debugger.NotifyOfCrossThreadDependency
void System::Diagnostics::Debugger::NotifyOfCrossThreadDependency() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Debugger::NotifyOfCrossThreadDependency");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", "NotifyOfCrossThreadDependency", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Debugger..cctor
void System::Diagnostics::Debugger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Debugger::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "Debugger", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.StackFrame
#include "System/Diagnostics/StackFrame.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 OFFSET_UNKNOWN
int System::Diagnostics::StackFrame::_get_OFFSET_UNKNOWN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackFrame::_get_OFFSET_UNKNOWN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Diagnostics", "StackFrame", "OFFSET_UNKNOWN"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 OFFSET_UNKNOWN
void System::Diagnostics::StackFrame::_set_OFFSET_UNKNOWN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackFrame::_set_OFFSET_UNKNOWN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackFrame", "OFFSET_UNKNOWN", value));
}
// Autogenerated method: System.Diagnostics.StackFrame.get_frame_info
bool System::Diagnostics::StackFrame::get_frame_info(int skip, bool needFileInfo, System::Reflection::MethodBase*& method, int& iloffset, int& native_offset, ::Il2CppString*& file, int& line, int& column) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackFrame::get_frame_info");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "StackFrame", "get_frame_info", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(skip, needFileInfo, method, iloffset, native_offset, file, line, column)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, skip, needFileInfo, method, iloffset, native_offset, file, line, column);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetFileLineNumber
int System::Diagnostics::StackFrame::GetFileLineNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackFrame::GetFileLineNumber");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetFileLineNumber", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetFileName
::Il2CppString* System::Diagnostics::StackFrame::GetFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackFrame::GetFileName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetFileName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetSecureFileName
::Il2CppString* System::Diagnostics::StackFrame::GetSecureFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackFrame::GetSecureFileName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSecureFileName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetILOffset
int System::Diagnostics::StackFrame::GetILOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackFrame::GetILOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetILOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetMethod
System::Reflection::MethodBase* System::Diagnostics::StackFrame::GetMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackFrame::GetMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodBase*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetNativeOffset
int System::Diagnostics::StackFrame::GetNativeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackFrame::GetNativeOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetNativeOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetMethodAddress
int64_t System::Diagnostics::StackFrame::GetMethodAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackFrame::GetMethodAddress");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMethodAddress", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetMethodIndex
uint System::Diagnostics::StackFrame::GetMethodIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackFrame::GetMethodIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMethodIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.GetInternalMethodName
::Il2CppString* System::Diagnostics::StackFrame::GetInternalMethodName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackFrame::GetInternalMethodName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInternalMethodName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackFrame.ToString
::Il2CppString* System::Diagnostics::StackFrame::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackFrame::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.StackTrace
#include "System/Diagnostics/StackTrace.hpp"
// Including type: System.Diagnostics.StackTrace/TraceFormat
#include "System/Diagnostics/StackTrace_TraceFormat.hpp"
// Including type: System.Diagnostics.StackFrame
#include "System/Diagnostics/StackFrame.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 METHODS_TO_SKIP
int System::Diagnostics::StackTrace::_get_METHODS_TO_SKIP() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::_get_METHODS_TO_SKIP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Diagnostics", "StackTrace", "METHODS_TO_SKIP"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 METHODS_TO_SKIP
void System::Diagnostics::StackTrace::_set_METHODS_TO_SKIP(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::_set_METHODS_TO_SKIP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace", "METHODS_TO_SKIP", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean isAotidSet
bool System::Diagnostics::StackTrace::_get_isAotidSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::_get_isAotidSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Diagnostics", "StackTrace", "isAotidSet"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean isAotidSet
void System::Diagnostics::StackTrace::_set_isAotidSet(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::_set_isAotidSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace", "isAotidSet", value));
}
// Autogenerated static field getter
// Get static field: static private System.String aotid
::Il2CppString* System::Diagnostics::StackTrace::_get_aotid() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::_get_aotid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Diagnostics", "StackTrace", "aotid"));
}
// Autogenerated static field setter
// Set static field: static private System.String aotid
void System::Diagnostics::StackTrace::_set_aotid(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::_set_aotid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace", "aotid", value));
}
// Autogenerated method: System.Diagnostics.StackTrace.init_frames
void System::Diagnostics::StackTrace::init_frames(int skipFrames, bool fNeedFileInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::init_frames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "init_frames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(skipFrames, fNeedFileInfo)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, skipFrames, fNeedFileInfo);
}
// Autogenerated method: System.Diagnostics.StackTrace.get_trace
::Array<System::Diagnostics::StackFrame*>* System::Diagnostics::StackTrace::get_trace(System::Exception* e, int skipFrames, bool fNeedFileInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::get_trace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "StackTrace", "get_trace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(e, skipFrames, fNeedFileInfo)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Diagnostics::StackFrame*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, e, skipFrames, fNeedFileInfo);
}
// Autogenerated method: System.Diagnostics.StackTrace.get_FrameCount
int System::Diagnostics::StackTrace::get_FrameCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::get_FrameCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_FrameCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackTrace.GetFrame
System::Diagnostics::StackFrame* System::Diagnostics::StackTrace::GetFrame(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::GetFrame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetFrame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<System::Diagnostics::StackFrame*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Diagnostics.StackTrace.GetAotId
::Il2CppString* System::Diagnostics::StackTrace::GetAotId() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::GetAotId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics", "StackTrace", "GetAotId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.StackTrace.AddFrames
bool System::Diagnostics::StackTrace::AddFrames(System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::AddFrames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddFrames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sb)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sb);
}
// Autogenerated method: System.Diagnostics.StackTrace.GetFullNameForStackTrace
void System::Diagnostics::StackTrace::GetFullNameForStackTrace(System::Text::StringBuilder* sb, System::Reflection::MethodBase* mi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::GetFullNameForStackTrace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetFullNameForStackTrace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sb, mi)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sb, mi);
}
// Autogenerated method: System.Diagnostics.StackTrace.ToString
::Il2CppString* System::Diagnostics::StackTrace::ToString(System::Diagnostics::StackTrace::TraceFormat traceFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(traceFormat)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, traceFormat);
}
// Autogenerated method: System.Diagnostics.StackTrace.ToString
::Il2CppString* System::Diagnostics::StackTrace::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.StackTrace/TraceFormat
#include "System/Diagnostics/StackTrace_TraceFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.StackTrace/TraceFormat Normal
System::Diagnostics::StackTrace::TraceFormat System::Diagnostics::StackTrace::TraceFormat::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::TraceFormat::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::StackTrace::TraceFormat>("System.Diagnostics", "StackTrace/TraceFormat", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.StackTrace/TraceFormat Normal
void System::Diagnostics::StackTrace::TraceFormat::_set_Normal(System::Diagnostics::StackTrace::TraceFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::TraceFormat::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace/TraceFormat", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.StackTrace/TraceFormat TrailingNewLine
System::Diagnostics::StackTrace::TraceFormat System::Diagnostics::StackTrace::TraceFormat::_get_TrailingNewLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::TraceFormat::_get_TrailingNewLine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::StackTrace::TraceFormat>("System.Diagnostics", "StackTrace/TraceFormat", "TrailingNewLine"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.StackTrace/TraceFormat TrailingNewLine
void System::Diagnostics::StackTrace::TraceFormat::_set_TrailingNewLine(System::Diagnostics::StackTrace::TraceFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::TraceFormat::_set_TrailingNewLine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace/TraceFormat", "TrailingNewLine", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.StackTrace/TraceFormat NoResourceLookup
System::Diagnostics::StackTrace::TraceFormat System::Diagnostics::StackTrace::TraceFormat::_get_NoResourceLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::TraceFormat::_get_NoResourceLookup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::StackTrace::TraceFormat>("System.Diagnostics", "StackTrace/TraceFormat", "NoResourceLookup"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.StackTrace/TraceFormat NoResourceLookup
void System::Diagnostics::StackTrace::TraceFormat::_set_NoResourceLookup(System::Diagnostics::StackTrace::TraceFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::StackTrace::TraceFormat::_set_NoResourceLookup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics", "StackTrace/TraceFormat", "NoResourceLookup", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Contracts.Contract
#include "System/Diagnostics/Contracts/Contract.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.DataCollector
#include "System/Diagnostics/Tracing/DataCollector.hpp"
// Including type: System.Runtime.InteropServices.GCHandle
#include "System/Runtime/InteropServices/GCHandle.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Diagnostics.Tracing.EventSource/EventData
#include "System/Diagnostics/Tracing/EventSource_EventData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [ThreadStaticAttribute] Offset: 0xCAFC8C
// Autogenerated static field getter
// Get static field: static System.Diagnostics.Tracing.DataCollector ThreadInstance
System::Diagnostics::Tracing::DataCollector System::Diagnostics::Tracing::DataCollector::_get_ThreadInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::DataCollector::_get_ThreadInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::DataCollector>("System.Diagnostics.Tracing", "DataCollector", "ThreadInstance"));
}
// Autogenerated static field setter
// Set static field: static System.Diagnostics.Tracing.DataCollector ThreadInstance
void System::Diagnostics::Tracing::DataCollector::_set_ThreadInstance(System::Diagnostics::Tracing::DataCollector value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::DataCollector::_set_ThreadInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "DataCollector", "ThreadInstance", value));
}
// Autogenerated method: System.Diagnostics.Tracing.DataCollector.Enable
void System::Diagnostics::Tracing::DataCollector::Enable(uint8_t* scratch, int scratchSize, System::Diagnostics::Tracing::EventSource::EventData* datas, int dataCount, System::Runtime::InteropServices::GCHandle* pins, int pinCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::DataCollector::Enable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Enable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(scratch, scratchSize, datas, dataCount, pins, pinCount)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, scratch, scratchSize, datas, dataCount, pins, pinCount);
}
// Autogenerated method: System.Diagnostics.Tracing.DataCollector.Disable
void System::Diagnostics::Tracing::DataCollector::Disable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::DataCollector::Disable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Disable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.DataCollector.Finish
System::Diagnostics::Tracing::EventSource::EventData* System::Diagnostics::Tracing::DataCollector::Finish() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::DataCollector::Finish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Finish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Diagnostics::Tracing::EventSource::EventData*, false>(*this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.DataCollector.AddScalar
void System::Diagnostics::Tracing::DataCollector::AddScalar(void* value, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::DataCollector::AddScalar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "AddScalar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, size)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value, size);
}
// Autogenerated method: System.Diagnostics.Tracing.DataCollector.AddBinary
void System::Diagnostics::Tracing::DataCollector::AddBinary(::Il2CppString* value, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::DataCollector::AddBinary");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "AddBinary", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, size)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value, size);
}
// Autogenerated method: System.Diagnostics.Tracing.DataCollector.AddBinary
void System::Diagnostics::Tracing::DataCollector::AddBinary(System::Array* value, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::DataCollector::AddBinary");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "AddBinary", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, size)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value, size);
}
// Autogenerated method: System.Diagnostics.Tracing.DataCollector.AddArray
void System::Diagnostics::Tracing::DataCollector::AddArray(System::Array* value, int length, int itemSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::DataCollector::AddArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "AddArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, length, itemSize)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value, length, itemSize);
}
// Autogenerated method: System.Diagnostics.Tracing.DataCollector.BeginBufferedArray
int System::Diagnostics::Tracing::DataCollector::BeginBufferedArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::DataCollector::BeginBufferedArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "BeginBufferedArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.DataCollector.EndBufferedArray
void System::Diagnostics::Tracing::DataCollector::EndBufferedArray(int bookmark, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::DataCollector::EndBufferedArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "EndBufferedArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bookmark, count)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, bookmark, count);
}
// Autogenerated method: System.Diagnostics.Tracing.DataCollector.BeginBuffered
void System::Diagnostics::Tracing::DataCollector::BeginBuffered() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::DataCollector::BeginBuffered");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "BeginBuffered", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.DataCollector.EndBuffered
void System::Diagnostics::Tracing::DataCollector::EndBuffered() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::DataCollector::EndBuffered");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "EndBuffered", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.DataCollector.EnsureBuffer
void System::Diagnostics::Tracing::DataCollector::EnsureBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::DataCollector::EnsureBuffer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "EnsureBuffer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.DataCollector.EnsureBuffer
void System::Diagnostics::Tracing::DataCollector::EnsureBuffer(int additionalSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::DataCollector::EnsureBuffer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "EnsureBuffer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(additionalSize)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, additionalSize);
}
// Autogenerated method: System.Diagnostics.Tracing.DataCollector.GrowBuffer
void System::Diagnostics::Tracing::DataCollector::GrowBuffer(int required) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::DataCollector::GrowBuffer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GrowBuffer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(required)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, required);
}
// Autogenerated method: System.Diagnostics.Tracing.DataCollector.PinArray
void System::Diagnostics::Tracing::DataCollector::PinArray(::Il2CppObject* value, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::DataCollector::PinArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "PinArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, size)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value, size);
}
// Autogenerated method: System.Diagnostics.Tracing.DataCollector.ScalarsBegin
void System::Diagnostics::Tracing::DataCollector::ScalarsBegin() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::DataCollector::ScalarsBegin");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ScalarsBegin", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.DataCollector.ScalarsEnd
void System::Diagnostics::Tracing::DataCollector::ScalarsEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::DataCollector::ScalarsEnd");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ScalarsEnd", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.EventDataAttribute
#include "System/Diagnostics/Tracing/EventDataAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.EventDataAttribute.get_Name
::Il2CppString* System::Diagnostics::Tracing::EventDataAttribute::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventDataAttribute::get_Name");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventDataAttribute.get_Level
System::Diagnostics::Tracing::EventLevel System::Diagnostics::Tracing::EventDataAttribute::get_Level() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventDataAttribute::get_Level");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Level", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Diagnostics::Tracing::EventLevel, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventDataAttribute.get_Opcode
System::Diagnostics::Tracing::EventOpcode System::Diagnostics::Tracing::EventDataAttribute::get_Opcode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventDataAttribute::get_Opcode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Opcode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Diagnostics::Tracing::EventOpcode, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventDataAttribute.get_Keywords
System::Diagnostics::Tracing::EventKeywords System::Diagnostics::Tracing::EventDataAttribute::get_Keywords() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventDataAttribute::get_Keywords");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Keywords", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Diagnostics::Tracing::EventKeywords, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventDataAttribute.get_Tags
System::Diagnostics::Tracing::EventTags System::Diagnostics::Tracing::EventDataAttribute::get_Tags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventDataAttribute::get_Tags");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Tags", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Diagnostics::Tracing::EventTags, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EventFieldTags
#include "System/Diagnostics/Tracing/EventFieldTags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventFieldTags None
System::Diagnostics::Tracing::EventFieldTags System::Diagnostics::Tracing::EventFieldTags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventFieldTags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::EventFieldTags>("System.Diagnostics.Tracing", "EventFieldTags", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventFieldTags None
void System::Diagnostics::Tracing::EventFieldTags::_set_None(System::Diagnostics::Tracing::EventFieldTags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventFieldTags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventFieldTags", "None", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.EventFieldAttribute
#include "System/Diagnostics/Tracing/EventFieldAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.EventFieldAttribute.get_Tags
System::Diagnostics::Tracing::EventFieldTags System::Diagnostics::Tracing::EventFieldAttribute::get_Tags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventFieldAttribute::get_Tags");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Tags", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Diagnostics::Tracing::EventFieldTags, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventFieldAttribute.get_Name
::Il2CppString* System::Diagnostics::Tracing::EventFieldAttribute::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventFieldAttribute::get_Name");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventFieldAttribute.get_Format
System::Diagnostics::Tracing::EventFieldFormat System::Diagnostics::Tracing::EventFieldAttribute::get_Format() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventFieldAttribute::get_Format");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Format", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Diagnostics::Tracing::EventFieldFormat, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventFieldFormat Default
System::Diagnostics::Tracing::EventFieldFormat System::Diagnostics::Tracing::EventFieldFormat::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventFieldFormat::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::EventFieldFormat>("System.Diagnostics.Tracing", "EventFieldFormat", "Default"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventFieldFormat Default
void System::Diagnostics::Tracing::EventFieldFormat::_set_Default(System::Diagnostics::Tracing::EventFieldFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventFieldFormat::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventFieldFormat", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventFieldFormat String
System::Diagnostics::Tracing::EventFieldFormat System::Diagnostics::Tracing::EventFieldFormat::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventFieldFormat::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::EventFieldFormat>("System.Diagnostics.Tracing", "EventFieldFormat", "String"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventFieldFormat String
void System::Diagnostics::Tracing::EventFieldFormat::_set_String(System::Diagnostics::Tracing::EventFieldFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventFieldFormat::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventFieldFormat", "String", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventFieldFormat Boolean
System::Diagnostics::Tracing::EventFieldFormat System::Diagnostics::Tracing::EventFieldFormat::_get_Boolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventFieldFormat::_get_Boolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::EventFieldFormat>("System.Diagnostics.Tracing", "EventFieldFormat", "Boolean"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventFieldFormat Boolean
void System::Diagnostics::Tracing::EventFieldFormat::_set_Boolean(System::Diagnostics::Tracing::EventFieldFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventFieldFormat::_set_Boolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventFieldFormat", "Boolean", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventFieldFormat Hexadecimal
System::Diagnostics::Tracing::EventFieldFormat System::Diagnostics::Tracing::EventFieldFormat::_get_Hexadecimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventFieldFormat::_get_Hexadecimal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::EventFieldFormat>("System.Diagnostics.Tracing", "EventFieldFormat", "Hexadecimal"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventFieldFormat Hexadecimal
void System::Diagnostics::Tracing::EventFieldFormat::_set_Hexadecimal(System::Diagnostics::Tracing::EventFieldFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventFieldFormat::_set_Hexadecimal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventFieldFormat", "Hexadecimal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventFieldFormat Xml
System::Diagnostics::Tracing::EventFieldFormat System::Diagnostics::Tracing::EventFieldFormat::_get_Xml() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventFieldFormat::_get_Xml");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::EventFieldFormat>("System.Diagnostics.Tracing", "EventFieldFormat", "Xml"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventFieldFormat Xml
void System::Diagnostics::Tracing::EventFieldFormat::_set_Xml(System::Diagnostics::Tracing::EventFieldFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventFieldFormat::_set_Xml");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventFieldFormat", "Xml", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventFieldFormat Json
System::Diagnostics::Tracing::EventFieldFormat System::Diagnostics::Tracing::EventFieldFormat::_get_Json() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventFieldFormat::_get_Json");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::EventFieldFormat>("System.Diagnostics.Tracing", "EventFieldFormat", "Json"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventFieldFormat Json
void System::Diagnostics::Tracing::EventFieldFormat::_set_Json(System::Diagnostics::Tracing::EventFieldFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventFieldFormat::_set_Json");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventFieldFormat", "Json", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.EventFieldFormat HResult
System::Diagnostics::Tracing::EventFieldFormat System::Diagnostics::Tracing::EventFieldFormat::_get_HResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventFieldFormat::_get_HResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::EventFieldFormat>("System.Diagnostics.Tracing", "EventFieldFormat", "HResult"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.EventFieldFormat HResult
void System::Diagnostics::Tracing::EventFieldFormat::_set_HResult(System::Diagnostics::Tracing::EventFieldFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventFieldFormat::_set_HResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventFieldFormat", "HResult", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.EventPayload
#include "System/Diagnostics/Tracing/EventPayload.hpp"
// Including type: System.Diagnostics.Tracing.EventPayload/<GetEnumerator>d__17
#include "System/Diagnostics/Tracing/EventPayload_-GetEnumerator-d__17.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.EventPayload.get_Keys
System::Collections::Generic::ICollection_1<::Il2CppString*>* System::Diagnostics::Tracing::EventPayload::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventPayload::get_Keys");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::ICollection_1<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventPayload.GetEnumerator
System::Collections::Generic::IEnumerator_1<System::Collections::Generic::KeyValuePair_2<::Il2CppString*, ::Il2CppObject*>>* System::Diagnostics::Tracing::EventPayload::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventPayload::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<System::Collections::Generic::KeyValuePair_2<::Il2CppString*, ::Il2CppObject*>>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventPayload.CopyTo
void System::Diagnostics::Tracing::EventPayload::CopyTo(::Array<System::Collections::Generic::KeyValuePair_2<::Il2CppString*, ::Il2CppObject*>>* payloadEntries, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventPayload::CopyTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(payloadEntries, count)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, payloadEntries, count);
}
// Autogenerated method: System.Diagnostics.Tracing.EventPayload.TryGetValue
bool System::Diagnostics::Tracing::EventPayload::TryGetValue(::Il2CppString* key, ::Il2CppObject*& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventPayload::TryGetValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryGetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key, value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Diagnostics.Tracing.EventPayload.get_Item
::Il2CppObject* System::Diagnostics::Tracing::EventPayload::get_Item(::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventPayload::get_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Diagnostics.Tracing.EventPayload.set_Item
void System::Diagnostics::Tracing::EventPayload::set_Item(::Il2CppString* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventPayload::set_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Diagnostics.Tracing.EventPayload.Add
void System::Diagnostics::Tracing::EventPayload::Add(::Il2CppString* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventPayload::Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
void System::Diagnostics::Tracing::EventPayload::System_Collections_Generic_IDictionary_2_Add(::Il2CppString* key, ::Il2CppObject* value) {
  System::Diagnostics::Tracing::EventPayload::Add(key, value);
}
// Autogenerated method: System.Diagnostics.Tracing.EventPayload.Add
void System::Diagnostics::Tracing::EventPayload::Add(System::Collections::Generic::KeyValuePair_2<::Il2CppString*, ::Il2CppObject*> payloadEntry) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventPayload::Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(payloadEntry)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, payloadEntry);
}
void System::Diagnostics::Tracing::EventPayload::System_Collections_Generic_ICollection_1_Add(System::Collections::Generic::KeyValuePair_2<::Il2CppString*, ::Il2CppObject*> payloadEntry) {
  System::Diagnostics::Tracing::EventPayload::Add(payloadEntry);
}
// Autogenerated method: System.Diagnostics.Tracing.EventPayload.Clear
void System::Diagnostics::Tracing::EventPayload::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventPayload::Clear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void System::Diagnostics::Tracing::EventPayload::System_Collections_Generic_ICollection_1_Clear() {
  System::Diagnostics::Tracing::EventPayload::Clear();
}
// Autogenerated method: System.Diagnostics.Tracing.EventPayload.Contains
bool System::Diagnostics::Tracing::EventPayload::Contains(System::Collections::Generic::KeyValuePair_2<::Il2CppString*, ::Il2CppObject*> entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventPayload::Contains");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(entry)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, entry);
}
bool System::Diagnostics::Tracing::EventPayload::System_Collections_Generic_ICollection_1_Contains(System::Collections::Generic::KeyValuePair_2<::Il2CppString*, ::Il2CppObject*> entry) {
  return System::Diagnostics::Tracing::EventPayload::Contains(entry);
}
// Autogenerated method: System.Diagnostics.Tracing.EventPayload.ContainsKey
bool System::Diagnostics::Tracing::EventPayload::ContainsKey(::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventPayload::ContainsKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ContainsKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Diagnostics.Tracing.EventPayload.get_Count
int System::Diagnostics::Tracing::EventPayload::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventPayload::get_Count");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
int System::Diagnostics::Tracing::EventPayload::System_Collections_Generic_ICollection_1_get_Count() {
  return System::Diagnostics::Tracing::EventPayload::get_Count();
}
// Autogenerated method: System.Diagnostics.Tracing.EventPayload.get_IsReadOnly
bool System::Diagnostics::Tracing::EventPayload::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventPayload::get_IsReadOnly");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool System::Diagnostics::Tracing::EventPayload::System_Collections_Generic_ICollection_1_get_IsReadOnly() {
  return System::Diagnostics::Tracing::EventPayload::get_IsReadOnly();
}
// Autogenerated method: System.Diagnostics.Tracing.EventPayload.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* System::Diagnostics::Tracing::EventPayload::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventPayload::System.Collections.IEnumerable.GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventPayload.Remove
bool System::Diagnostics::Tracing::EventPayload::Remove(::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventPayload::Remove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, key);
}
bool System::Diagnostics::Tracing::EventPayload::System_Collections_Generic_IDictionary_2_Remove(::Il2CppString* key) {
  return System::Diagnostics::Tracing::EventPayload::Remove(key);
}
// Autogenerated method: System.Diagnostics.Tracing.EventPayload.Remove
bool System::Diagnostics::Tracing::EventPayload::Remove(System::Collections::Generic::KeyValuePair_2<::Il2CppString*, ::Il2CppObject*> entry) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventPayload::Remove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(entry)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, entry);
}
bool System::Diagnostics::Tracing::EventPayload::System_Collections_Generic_ICollection_1_Remove(System::Collections::Generic::KeyValuePair_2<::Il2CppString*, ::Il2CppObject*> entry) {
  return System::Diagnostics::Tracing::EventPayload::Remove(entry);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.EventPayload/<GetEnumerator>d__17
#include "System/Diagnostics/Tracing/EventPayload_-GetEnumerator-d__17.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.EventPayload/<GetEnumerator>d__17.System.IDisposable.Dispose
void System::Diagnostics::Tracing::EventPayload::$GetEnumerator$d__17::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventPayload::$GetEnumerator$d__17::System.IDisposable.Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventPayload/<GetEnumerator>d__17.MoveNext
bool System::Diagnostics::Tracing::EventPayload::$GetEnumerator$d__17::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventPayload::$GetEnumerator$d__17::MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool System::Diagnostics::Tracing::EventPayload::$GetEnumerator$d__17::System_Collections_IEnumerator_MoveNext() {
  return System::Diagnostics::Tracing::EventPayload::$GetEnumerator$d__17::MoveNext();
}
// Autogenerated method: System.Diagnostics.Tracing.EventPayload/<GetEnumerator>d__17.System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.get_Current
System::Collections::Generic::KeyValuePair_2<::Il2CppString*, ::Il2CppObject*> System::Diagnostics::Tracing::EventPayload::$GetEnumerator$d__17::System_Collections_Generic_IEnumerator_1_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventPayload::$GetEnumerator$d__17::System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::KeyValuePair_2<::Il2CppString*, ::Il2CppObject*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventPayload/<GetEnumerator>d__17.System.Collections.IEnumerator.Reset
void System::Diagnostics::Tracing::EventPayload::$GetEnumerator$d__17::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventPayload::$GetEnumerator$d__17::System.Collections.IEnumerator.Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventPayload/<GetEnumerator>d__17.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Diagnostics::Tracing::EventPayload::$GetEnumerator$d__17::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventPayload::$GetEnumerator$d__17::System.Collections.IEnumerator.get_Current");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EventSourceOptions
#include "System/Diagnostics/Tracing/EventSourceOptions.hpp"
// Including type: System.Diagnostics.Tracing.EventLevel
#include "System/Diagnostics/Tracing/EventLevel.hpp"
// Including type: System.Diagnostics.Tracing.EventOpcode
#include "System/Diagnostics/Tracing/EventOpcode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.EventSourceOptions.set_Level
void System::Diagnostics::Tracing::EventSourceOptions::set_Level(System::Diagnostics::Tracing::EventLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSourceOptions::set_Level");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_Level", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSourceOptions.set_Opcode
void System::Diagnostics::Tracing::EventSourceOptions::set_Opcode(System::Diagnostics::Tracing::EventOpcode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSourceOptions::set_Opcode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_Opcode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSourceOptions.set_Keywords
void System::Diagnostics::Tracing::EventSourceOptions::set_Keywords(System::Diagnostics::Tracing::EventKeywords value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSourceOptions::set_Keywords");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_Keywords", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.FieldMetadata
#include "System/Diagnostics/Tracing/FieldMetadata.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.FieldMetadata.IncrementStructFieldCount
void System::Diagnostics::Tracing::FieldMetadata::IncrementStructFieldCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::FieldMetadata::IncrementStructFieldCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IncrementStructFieldCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.FieldMetadata.Encode
void System::Diagnostics::Tracing::FieldMetadata::Encode(int& pos, ::Array<uint8_t>* metadata) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::FieldMetadata::Encode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pos, metadata)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pos, metadata);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.NameInfo
#include "System/Diagnostics/Tracing/NameInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 lastIdentity
int System::Diagnostics::Tracing::NameInfo::_get_lastIdentity() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::NameInfo::_get_lastIdentity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Diagnostics.Tracing", "NameInfo", "lastIdentity"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 lastIdentity
void System::Diagnostics::Tracing::NameInfo::_set_lastIdentity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::NameInfo::_set_lastIdentity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "NameInfo", "lastIdentity", value));
}
// Autogenerated method: System.Diagnostics.Tracing.NameInfo.ReserveEventIDsBelow
void System::Diagnostics::Tracing::NameInfo::ReserveEventIDsBelow(int eventId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::NameInfo::ReserveEventIDsBelow");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "NameInfo", "ReserveEventIDsBelow", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, eventId);
}
// Autogenerated method: System.Diagnostics.Tracing.NameInfo.Compare
int System::Diagnostics::Tracing::NameInfo::Compare(System::Diagnostics::Tracing::NameInfo* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::NameInfo::Compare");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Diagnostics.Tracing.NameInfo.Compare
int System::Diagnostics::Tracing::NameInfo::Compare(System::Collections::Generic::KeyValuePair_2<::Il2CppString*, System::Diagnostics::Tracing::EventTags> key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::NameInfo::Compare");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Diagnostics.Tracing.NameInfo.Compare
int System::Diagnostics::Tracing::NameInfo::Compare(::Il2CppString* otherName, System::Diagnostics::Tracing::EventTags otherTags) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::NameInfo::Compare");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(otherName, otherTags)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, otherName, otherTags);
}
// Autogenerated method: System.Diagnostics.Tracing.NameInfo..cctor
void System::Diagnostics::Tracing::NameInfo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::NameInfo::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "NameInfo", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.PropertyAnalysis
#include "System/Diagnostics/Tracing/PropertyAnalysis.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingTypeInfo
#include "System/Diagnostics/Tracing/TraceLoggingTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldAttribute
#include "System/Diagnostics/Tracing/EventFieldAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.BooleanTypeInfo
#include "System/Diagnostics/Tracing/BooleanTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.BooleanTypeInfo.WriteData
void System::Diagnostics::Tracing::BooleanTypeInfo::WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, bool& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::BooleanTypeInfo::WriteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.BooleanTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::BooleanTypeInfo::WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::BooleanTypeInfo::WriteMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, name, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.ByteTypeInfo
#include "System/Diagnostics/Tracing/ByteTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.ByteTypeInfo.WriteData
void System::Diagnostics::Tracing::ByteTypeInfo::WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, uint8_t& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::ByteTypeInfo::WriteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.ByteTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::ByteTypeInfo::WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::ByteTypeInfo::WriteMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, name, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.SByteTypeInfo
#include "System/Diagnostics/Tracing/SByteTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.SByteTypeInfo.WriteData
void System::Diagnostics::Tracing::SByteTypeInfo::WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, int8_t& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::SByteTypeInfo::WriteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.SByteTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::SByteTypeInfo::WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::SByteTypeInfo::WriteMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, name, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.Int16TypeInfo
#include "System/Diagnostics/Tracing/Int16TypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.Int16TypeInfo.WriteData
void System::Diagnostics::Tracing::Int16TypeInfo::WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, int16_t& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Int16TypeInfo::WriteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.Int16TypeInfo.WriteMetadata
void System::Diagnostics::Tracing::Int16TypeInfo::WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Int16TypeInfo::WriteMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, name, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.UInt16TypeInfo
#include "System/Diagnostics/Tracing/UInt16TypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.UInt16TypeInfo.WriteData
void System::Diagnostics::Tracing::UInt16TypeInfo::WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, uint16_t& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::UInt16TypeInfo::WriteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.UInt16TypeInfo.WriteMetadata
void System::Diagnostics::Tracing::UInt16TypeInfo::WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::UInt16TypeInfo::WriteMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, name, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.Int32TypeInfo
#include "System/Diagnostics/Tracing/Int32TypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.Int32TypeInfo.WriteData
void System::Diagnostics::Tracing::Int32TypeInfo::WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, int& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Int32TypeInfo::WriteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.Int32TypeInfo.WriteMetadata
void System::Diagnostics::Tracing::Int32TypeInfo::WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Int32TypeInfo::WriteMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, name, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.UInt32TypeInfo
#include "System/Diagnostics/Tracing/UInt32TypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.UInt32TypeInfo.WriteData
void System::Diagnostics::Tracing::UInt32TypeInfo::WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, uint& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::UInt32TypeInfo::WriteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.UInt32TypeInfo.WriteMetadata
void System::Diagnostics::Tracing::UInt32TypeInfo::WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::UInt32TypeInfo::WriteMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, name, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.Int64TypeInfo
#include "System/Diagnostics/Tracing/Int64TypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.Int64TypeInfo.WriteData
void System::Diagnostics::Tracing::Int64TypeInfo::WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, int64_t& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Int64TypeInfo::WriteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.Int64TypeInfo.WriteMetadata
void System::Diagnostics::Tracing::Int64TypeInfo::WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Int64TypeInfo::WriteMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, name, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.UInt64TypeInfo
#include "System/Diagnostics/Tracing/UInt64TypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.UInt64TypeInfo.WriteData
void System::Diagnostics::Tracing::UInt64TypeInfo::WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, uint64_t& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::UInt64TypeInfo::WriteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.UInt64TypeInfo.WriteMetadata
void System::Diagnostics::Tracing::UInt64TypeInfo::WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::UInt64TypeInfo::WriteMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, name, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.IntPtrTypeInfo
#include "System/Diagnostics/Tracing/IntPtrTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.IntPtrTypeInfo.WriteData
void System::Diagnostics::Tracing::IntPtrTypeInfo::WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, System::IntPtr& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::IntPtrTypeInfo::WriteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.IntPtrTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::IntPtrTypeInfo::WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::IntPtrTypeInfo::WriteMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, name, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.UIntPtrTypeInfo
#include "System/Diagnostics/Tracing/UIntPtrTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.UIntPtrTypeInfo.WriteData
void System::Diagnostics::Tracing::UIntPtrTypeInfo::WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, System::UIntPtr& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::UIntPtrTypeInfo::WriteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.UIntPtrTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::UIntPtrTypeInfo::WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::UIntPtrTypeInfo::WriteMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, name, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.DoubleTypeInfo
#include "System/Diagnostics/Tracing/DoubleTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.DoubleTypeInfo.WriteData
void System::Diagnostics::Tracing::DoubleTypeInfo::WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, double& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::DoubleTypeInfo::WriteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.DoubleTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::DoubleTypeInfo::WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::DoubleTypeInfo::WriteMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, name, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.SingleTypeInfo
#include "System/Diagnostics/Tracing/SingleTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.SingleTypeInfo.WriteData
void System::Diagnostics::Tracing::SingleTypeInfo::WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, float& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::SingleTypeInfo::WriteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.SingleTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::SingleTypeInfo::WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::SingleTypeInfo::WriteMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, name, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.CharTypeInfo
#include "System/Diagnostics/Tracing/CharTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.CharTypeInfo.WriteData
void System::Diagnostics::Tracing::CharTypeInfo::WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ::Il2CppChar& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::CharTypeInfo::WriteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.CharTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::CharTypeInfo::WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::CharTypeInfo::WriteMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, name, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.BooleanArrayTypeInfo
#include "System/Diagnostics/Tracing/BooleanArrayTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.BooleanArrayTypeInfo.WriteData
void System::Diagnostics::Tracing::BooleanArrayTypeInfo::WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ::Array<bool>*& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::BooleanArrayTypeInfo::WriteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.BooleanArrayTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::BooleanArrayTypeInfo::WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::BooleanArrayTypeInfo::WriteMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, name, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.ByteArrayTypeInfo
#include "System/Diagnostics/Tracing/ByteArrayTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.ByteArrayTypeInfo.WriteData
void System::Diagnostics::Tracing::ByteArrayTypeInfo::WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ::Array<uint8_t>*& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::ByteArrayTypeInfo::WriteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.ByteArrayTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::ByteArrayTypeInfo::WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::ByteArrayTypeInfo::WriteMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, name, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.SByteArrayTypeInfo
#include "System/Diagnostics/Tracing/SByteArrayTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.SByteArrayTypeInfo.WriteData
void System::Diagnostics::Tracing::SByteArrayTypeInfo::WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ::Array<int8_t>*& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::SByteArrayTypeInfo::WriteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.SByteArrayTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::SByteArrayTypeInfo::WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::SByteArrayTypeInfo::WriteMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, name, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.Int16ArrayTypeInfo
#include "System/Diagnostics/Tracing/Int16ArrayTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.Int16ArrayTypeInfo.WriteData
void System::Diagnostics::Tracing::Int16ArrayTypeInfo::WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ::Array<int16_t>*& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Int16ArrayTypeInfo::WriteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.Int16ArrayTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::Int16ArrayTypeInfo::WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Int16ArrayTypeInfo::WriteMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, name, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.UInt16ArrayTypeInfo
#include "System/Diagnostics/Tracing/UInt16ArrayTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.UInt16ArrayTypeInfo.WriteData
void System::Diagnostics::Tracing::UInt16ArrayTypeInfo::WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ::Array<uint16_t>*& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::UInt16ArrayTypeInfo::WriteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.UInt16ArrayTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::UInt16ArrayTypeInfo::WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::UInt16ArrayTypeInfo::WriteMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, name, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.Int32ArrayTypeInfo
#include "System/Diagnostics/Tracing/Int32ArrayTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.Int32ArrayTypeInfo.WriteData
void System::Diagnostics::Tracing::Int32ArrayTypeInfo::WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ::Array<int>*& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Int32ArrayTypeInfo::WriteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.Int32ArrayTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::Int32ArrayTypeInfo::WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Int32ArrayTypeInfo::WriteMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, name, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.UInt32ArrayTypeInfo
#include "System/Diagnostics/Tracing/UInt32ArrayTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.UInt32ArrayTypeInfo.WriteData
void System::Diagnostics::Tracing::UInt32ArrayTypeInfo::WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ::Array<uint>*& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::UInt32ArrayTypeInfo::WriteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.UInt32ArrayTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::UInt32ArrayTypeInfo::WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::UInt32ArrayTypeInfo::WriteMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, name, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.Int64ArrayTypeInfo
#include "System/Diagnostics/Tracing/Int64ArrayTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.Int64ArrayTypeInfo.WriteData
void System::Diagnostics::Tracing::Int64ArrayTypeInfo::WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ::Array<int64_t>*& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Int64ArrayTypeInfo::WriteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.Int64ArrayTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::Int64ArrayTypeInfo::WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Int64ArrayTypeInfo::WriteMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, name, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.UInt64ArrayTypeInfo
#include "System/Diagnostics/Tracing/UInt64ArrayTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.UInt64ArrayTypeInfo.WriteData
void System::Diagnostics::Tracing::UInt64ArrayTypeInfo::WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ::Array<uint64_t>*& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::UInt64ArrayTypeInfo::WriteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.UInt64ArrayTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::UInt64ArrayTypeInfo::WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::UInt64ArrayTypeInfo::WriteMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, name, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.IntPtrArrayTypeInfo
#include "System/Diagnostics/Tracing/IntPtrArrayTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.IntPtrArrayTypeInfo.WriteData
void System::Diagnostics::Tracing::IntPtrArrayTypeInfo::WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ::Array<System::IntPtr>*& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::IntPtrArrayTypeInfo::WriteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.IntPtrArrayTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::IntPtrArrayTypeInfo::WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::IntPtrArrayTypeInfo::WriteMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, name, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.UIntPtrArrayTypeInfo
#include "System/Diagnostics/Tracing/UIntPtrArrayTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.UIntPtrArrayTypeInfo.WriteData
void System::Diagnostics::Tracing::UIntPtrArrayTypeInfo::WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ::Array<System::UIntPtr>*& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::UIntPtrArrayTypeInfo::WriteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.UIntPtrArrayTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::UIntPtrArrayTypeInfo::WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::UIntPtrArrayTypeInfo::WriteMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, name, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.CharArrayTypeInfo
#include "System/Diagnostics/Tracing/CharArrayTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.CharArrayTypeInfo.WriteData
void System::Diagnostics::Tracing::CharArrayTypeInfo::WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ::Array<::Il2CppChar>*& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::CharArrayTypeInfo::WriteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.CharArrayTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::CharArrayTypeInfo::WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::CharArrayTypeInfo::WriteMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, name, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.DoubleArrayTypeInfo
#include "System/Diagnostics/Tracing/DoubleArrayTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.DoubleArrayTypeInfo.WriteData
void System::Diagnostics::Tracing::DoubleArrayTypeInfo::WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ::Array<double>*& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::DoubleArrayTypeInfo::WriteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.DoubleArrayTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::DoubleArrayTypeInfo::WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::DoubleArrayTypeInfo::WriteMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, name, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.SingleArrayTypeInfo
#include "System/Diagnostics/Tracing/SingleArrayTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.SingleArrayTypeInfo.WriteData
void System::Diagnostics::Tracing::SingleArrayTypeInfo::WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ::Array<float>*& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::SingleArrayTypeInfo::WriteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.SingleArrayTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::SingleArrayTypeInfo::WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::SingleArrayTypeInfo::WriteMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, name, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.StringTypeInfo
#include "System/Diagnostics/Tracing/StringTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.StringTypeInfo.WriteData
void System::Diagnostics::Tracing::StringTypeInfo::WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ::Il2CppString*& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::StringTypeInfo::WriteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.StringTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::StringTypeInfo::WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::StringTypeInfo::WriteMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, name, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated method: System.Diagnostics.Tracing.StringTypeInfo.GetData
::Il2CppObject* System::Diagnostics::Tracing::StringTypeInfo::GetData(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::StringTypeInfo::GetData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.GuidTypeInfo
#include "System/Diagnostics/Tracing/GuidTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.GuidTypeInfo.WriteData
void System::Diagnostics::Tracing::GuidTypeInfo::WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, System::Guid& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::GuidTypeInfo::WriteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.GuidTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::GuidTypeInfo::WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::GuidTypeInfo::WriteMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, name, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.GuidArrayTypeInfo
#include "System/Diagnostics/Tracing/GuidArrayTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.GuidArrayTypeInfo.WriteData
void System::Diagnostics::Tracing::GuidArrayTypeInfo::WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, ::Array<System::Guid>*& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::GuidArrayTypeInfo::WriteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.GuidArrayTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::GuidArrayTypeInfo::WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::GuidArrayTypeInfo::WriteMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, name, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.DateTimeTypeInfo
#include "System/Diagnostics/Tracing/DateTimeTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.DateTimeTypeInfo.WriteData
void System::Diagnostics::Tracing::DateTimeTypeInfo::WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, System::DateTime& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::DateTimeTypeInfo::WriteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.DateTimeTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::DateTimeTypeInfo::WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::DateTimeTypeInfo::WriteMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, name, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.DateTimeOffsetTypeInfo
#include "System/Diagnostics/Tracing/DateTimeOffsetTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.DateTimeOffsetTypeInfo.WriteData
void System::Diagnostics::Tracing::DateTimeOffsetTypeInfo::WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, System::DateTimeOffset& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::DateTimeOffsetTypeInfo::WriteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.DateTimeOffsetTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::DateTimeOffsetTypeInfo::WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::DateTimeOffsetTypeInfo::WriteMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, name, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.TimeSpanTypeInfo
#include "System/Diagnostics/Tracing/TimeSpanTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.TimeSpanTypeInfo.WriteData
void System::Diagnostics::Tracing::TimeSpanTypeInfo::WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, System::TimeSpan& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TimeSpanTypeInfo::WriteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TimeSpanTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::TimeSpanTypeInfo::WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TimeSpanTypeInfo::WriteMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, name, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.DecimalTypeInfo
#include "System/Diagnostics/Tracing/DecimalTypeInfo.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingMetadataCollector
#include "System/Diagnostics/Tracing/TraceLoggingMetadataCollector.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.DecimalTypeInfo.WriteData
void System::Diagnostics::Tracing::DecimalTypeInfo::WriteData(System::Diagnostics::Tracing::TraceLoggingDataCollector* collector, System::Decimal& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::DecimalTypeInfo::WriteData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, value);
}
// Autogenerated method: System.Diagnostics.Tracing.DecimalTypeInfo.WriteMetadata
void System::Diagnostics::Tracing::DecimalTypeInfo::WriteMetadata(System::Diagnostics::Tracing::TraceLoggingMetadataCollector* collector, ::Il2CppString* name, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::DecimalTypeInfo::WriteMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(collector, name, format)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collector, name, format);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.Statics
#include "System/Diagnostics/Tracing/Statics.hpp"
// Including type: System.Diagnostics.Tracing.EventFieldFormat
#include "System/Diagnostics/Tracing/EventFieldFormat.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingTypeInfo
#include "System/Diagnostics/Tracing/TraceLoggingTypeInfo.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingTypeInfo`1
#include "System/Diagnostics/Tracing/TraceLoggingTypeInfo_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Diagnostics.Tracing.TraceLoggingDataType IntPtrType
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::Statics::_get_IntPtrType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Statics::_get_IntPtrType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "Statics", "IntPtrType"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Diagnostics.Tracing.TraceLoggingDataType IntPtrType
void System::Diagnostics::Tracing::Statics::_set_IntPtrType(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Statics::_set_IntPtrType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "Statics", "IntPtrType", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Diagnostics.Tracing.TraceLoggingDataType UIntPtrType
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::Statics::_get_UIntPtrType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Statics::_get_UIntPtrType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "Statics", "UIntPtrType"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Diagnostics.Tracing.TraceLoggingDataType UIntPtrType
void System::Diagnostics::Tracing::Statics::_set_UIntPtrType(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Statics::_set_UIntPtrType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "Statics", "UIntPtrType", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Diagnostics.Tracing.TraceLoggingDataType HexIntPtrType
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::Statics::_get_HexIntPtrType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Statics::_get_HexIntPtrType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "Statics", "HexIntPtrType"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Diagnostics.Tracing.TraceLoggingDataType HexIntPtrType
void System::Diagnostics::Tracing::Statics::_set_HexIntPtrType(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Statics::_set_HexIntPtrType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "Statics", "HexIntPtrType", value));
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.MetadataForString
::Array<uint8_t>* System::Diagnostics::Tracing::Statics::MetadataForString(::Il2CppString* name, int prefixSize, int suffixSize, int additionalSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Statics::MetadataForString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "MetadataForString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, prefixSize, suffixSize, additionalSize)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, prefixSize, suffixSize, additionalSize);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.EncodeTags
void System::Diagnostics::Tracing::Statics::EncodeTags(int tags, int& pos, ::Array<uint8_t>* metadata) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Statics::EncodeTags");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "EncodeTags", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tags, pos, metadata)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, tags, pos, metadata);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.Combine
uint8_t System::Diagnostics::Tracing::Statics::Combine(int settingValue, uint8_t defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Statics::Combine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "Combine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(settingValue, defaultValue)));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, settingValue, defaultValue);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.Combine
int System::Diagnostics::Tracing::Statics::Combine(int settingValue1, int settingValue2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Statics::Combine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "Combine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(settingValue1, settingValue2)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, settingValue1, settingValue2);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.CheckName
void System::Diagnostics::Tracing::Statics::CheckName(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Statics::CheckName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "CheckName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.ShouldOverrideFieldName
bool System::Diagnostics::Tracing::Statics::ShouldOverrideFieldName(::Il2CppString* fieldName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Statics::ShouldOverrideFieldName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "ShouldOverrideFieldName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(fieldName)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, fieldName);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.MakeDataType
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::Statics::MakeDataType(System::Diagnostics::Tracing::TraceLoggingDataType baseType, System::Diagnostics::Tracing::EventFieldFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Statics::MakeDataType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "MakeDataType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(baseType, format)));
  return ::il2cpp_utils::RunMethodThrow<System::Diagnostics::Tracing::TraceLoggingDataType, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, baseType, format);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.Format8
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::Statics::Format8(System::Diagnostics::Tracing::EventFieldFormat format, System::Diagnostics::Tracing::TraceLoggingDataType native) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Statics::Format8");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "Format8", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, native)));
  return ::il2cpp_utils::RunMethodThrow<System::Diagnostics::Tracing::TraceLoggingDataType, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, native);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.Format16
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::Statics::Format16(System::Diagnostics::Tracing::EventFieldFormat format, System::Diagnostics::Tracing::TraceLoggingDataType native) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Statics::Format16");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "Format16", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, native)));
  return ::il2cpp_utils::RunMethodThrow<System::Diagnostics::Tracing::TraceLoggingDataType, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, native);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.Format32
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::Statics::Format32(System::Diagnostics::Tracing::EventFieldFormat format, System::Diagnostics::Tracing::TraceLoggingDataType native) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Statics::Format32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "Format32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, native)));
  return ::il2cpp_utils::RunMethodThrow<System::Diagnostics::Tracing::TraceLoggingDataType, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, native);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.Format64
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::Statics::Format64(System::Diagnostics::Tracing::EventFieldFormat format, System::Diagnostics::Tracing::TraceLoggingDataType native) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Statics::Format64");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "Format64", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, native)));
  return ::il2cpp_utils::RunMethodThrow<System::Diagnostics::Tracing::TraceLoggingDataType, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, native);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.FormatPtr
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::Statics::FormatPtr(System::Diagnostics::Tracing::EventFieldFormat format, System::Diagnostics::Tracing::TraceLoggingDataType native) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Statics::FormatPtr");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "FormatPtr", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, native)));
  return ::il2cpp_utils::RunMethodThrow<System::Diagnostics::Tracing::TraceLoggingDataType, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, native);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.CreateInstance
::Il2CppObject* System::Diagnostics::Tracing::Statics::CreateInstance(System::Type* type, ::Array<::Il2CppObject*>* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Statics::CreateInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "CreateInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, parameters)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, parameters);
}
// Creating initializer_list -> params proxy for: System.Object CreateInstance(System.Type type, params System.Object[] parameters)
::Il2CppObject* System::Diagnostics::Tracing::Statics::CreateInstance(System::Type* type, std::initializer_list<::Il2CppObject*> parameters) {
  return System::Diagnostics::Tracing::Statics::CreateInstance(type, ::Array<::Il2CppObject*>::New(parameters));
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.IsValueType
bool System::Diagnostics::Tracing::Statics::IsValueType(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Statics::IsValueType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "IsValueType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.IsEnum
bool System::Diagnostics::Tracing::Statics::IsEnum(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Statics::IsEnum");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "IsEnum", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.GetProperties
System::Collections::Generic::IEnumerable_1<System::Reflection::PropertyInfo*>* System::Diagnostics::Tracing::Statics::GetProperties(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Statics::GetProperties");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "GetProperties", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<System::Reflection::PropertyInfo*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.GetGetMethod
System::Reflection::MethodInfo* System::Diagnostics::Tracing::Statics::GetGetMethod(System::Reflection::PropertyInfo* propInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Statics::GetGetMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "GetGetMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(propInfo)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, propInfo);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.GetDeclaredStaticMethod
System::Reflection::MethodInfo* System::Diagnostics::Tracing::Statics::GetDeclaredStaticMethod(System::Type* declaringType, ::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Statics::GetDeclaredStaticMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "GetDeclaredStaticMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(declaringType, name)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, declaringType, name);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.HasCustomAttribute
bool System::Diagnostics::Tracing::Statics::HasCustomAttribute(System::Reflection::PropertyInfo* propInfo, System::Type* attributeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Statics::HasCustomAttribute");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "HasCustomAttribute", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(propInfo, attributeType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, propInfo, attributeType);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.GetGenericArguments
::Array<System::Type*>* System::Diagnostics::Tracing::Statics::GetGenericArguments(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Statics::GetGenericArguments");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "GetGenericArguments", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Type*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.FindEnumerableElementType
System::Type* System::Diagnostics::Tracing::Statics::FindEnumerableElementType(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Statics::FindEnumerableElementType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "FindEnumerableElementType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.IsGenericMatch
bool System::Diagnostics::Tracing::Statics::IsGenericMatch(System::Type* type, ::Il2CppObject* openType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Statics::IsGenericMatch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "IsGenericMatch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, openType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, openType);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.CreateDelegate
System::Delegate* System::Diagnostics::Tracing::Statics::CreateDelegate(System::Type* delegateType, System::Reflection::MethodInfo* methodInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Statics::CreateDelegate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "CreateDelegate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(delegateType, methodInfo)));
  return ::il2cpp_utils::RunMethodThrow<System::Delegate*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, delegateType, methodInfo);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics.GetTypeInfoInstance
System::Diagnostics::Tracing::TraceLoggingTypeInfo* System::Diagnostics::Tracing::Statics::GetTypeInfoInstance(System::Type* dataType, System::Collections::Generic::List_1<System::Type*>* recursionCheck) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Statics::GetTypeInfoInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", "GetTypeInfoInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dataType, recursionCheck)));
  return ::il2cpp_utils::RunMethodThrow<System::Diagnostics::Tracing::TraceLoggingTypeInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dataType, recursionCheck);
}
// Autogenerated method: System.Diagnostics.Tracing.Statics..cctor
void System::Diagnostics::Tracing::Statics::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::Statics::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "Statics", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.TraceLoggingDataCollector
#include "System/Diagnostics/Tracing/TraceLoggingDataCollector.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Diagnostics.Tracing.TraceLoggingDataCollector Instance
System::Diagnostics::Tracing::TraceLoggingDataCollector* System::Diagnostics::Tracing::TraceLoggingDataCollector::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataCollector*>("System.Diagnostics.Tracing", "TraceLoggingDataCollector", "Instance"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Diagnostics.Tracing.TraceLoggingDataCollector Instance
void System::Diagnostics::Tracing::TraceLoggingDataCollector::_set_Instance(System::Diagnostics::Tracing::TraceLoggingDataCollector* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataCollector", "Instance", value));
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.BeginBufferedArray
int System::Diagnostics::Tracing::TraceLoggingDataCollector::BeginBufferedArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::BeginBufferedArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginBufferedArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.EndBufferedArray
void System::Diagnostics::Tracing::TraceLoggingDataCollector::EndBufferedArray(int bookmark, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::EndBufferedArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndBufferedArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bookmark, count)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bookmark, count);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddScalar
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddScalar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddScalar
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddScalar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddScalar
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddScalar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddScalar
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddScalar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddScalar
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddScalar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddScalar
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddScalar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddScalar
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddScalar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddScalar
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddScalar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddScalar
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddScalar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddScalar
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddScalar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddScalar
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar(System::UIntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddScalar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddScalar
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddScalar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddScalar
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddScalar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddScalar
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddScalar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddScalar
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar(System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::AddScalar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddScalar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddBinary
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddBinary(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::AddBinary");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddBinary", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddBinary
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddBinary(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::AddBinary");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddBinary", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddArray
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray(::Array<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddArray
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray(::Array<int8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddArray
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray(::Array<int16_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddArray
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray(::Array<uint16_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddArray
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray(::Array<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddArray
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddArray
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray(::Array<int64_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddArray
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray(::Array<uint64_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddArray
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray(::Array<System::IntPtr>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddArray
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray(::Array<System::UIntPtr>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddArray
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray(::Array<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddArray
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray(::Array<double>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddArray
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector.AddArray
void System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray(::Array<System::Guid>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::AddArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.TraceLoggingDataCollector..cctor
void System::Diagnostics::Tracing::TraceLoggingDataCollector::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataCollector::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "TraceLoggingDataCollector", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.TraceLoggingDataType
#include "System/Diagnostics/Tracing/TraceLoggingDataType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Nil
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_Nil() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_Nil");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "Nil"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Nil
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_Nil(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_Nil");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "Nil", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Utf16String
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_Utf16String() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_Utf16String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "Utf16String"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Utf16String
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_Utf16String(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_Utf16String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "Utf16String", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType MbcsString
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_MbcsString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_MbcsString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "MbcsString"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType MbcsString
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_MbcsString(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_MbcsString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "MbcsString", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Int8
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_Int8() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_Int8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "Int8"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Int8
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_Int8(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_Int8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "Int8", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType UInt8
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_UInt8() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_UInt8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "UInt8"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType UInt8
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_UInt8(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_UInt8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "UInt8", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Int16
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_Int16() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_Int16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "Int16"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Int16
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_Int16(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_Int16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "Int16", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType UInt16
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_UInt16() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_UInt16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "UInt16"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType UInt16
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_UInt16(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_UInt16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "UInt16", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Int32
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_Int32() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_Int32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "Int32"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Int32
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_Int32(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_Int32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "Int32", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType UInt32
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_UInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_UInt32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "UInt32"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType UInt32
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_UInt32(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_UInt32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "UInt32", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Int64
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_Int64() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_Int64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "Int64"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Int64
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_Int64(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_Int64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "Int64", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType UInt64
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_UInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_UInt64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "UInt64"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType UInt64
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_UInt64(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_UInt64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "UInt64", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Float
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "Float"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Float
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_Float(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "Float", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Double
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_Double() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_Double");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "Double"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Double
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_Double(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_Double");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "Double", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Boolean32
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_Boolean32() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_Boolean32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "Boolean32"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Boolean32
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_Boolean32(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_Boolean32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "Boolean32", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Binary
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_Binary() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_Binary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "Binary"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Binary
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_Binary(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_Binary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "Binary", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Guid
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_Guid() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_Guid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "Guid"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Guid
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_Guid(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_Guid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "Guid", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType FileTime
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_FileTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_FileTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "FileTime"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType FileTime
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_FileTime(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_FileTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "FileTime", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType SystemTime
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_SystemTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_SystemTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "SystemTime"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType SystemTime
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_SystemTime(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_SystemTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "SystemTime", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType HexInt32
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_HexInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_HexInt32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "HexInt32"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType HexInt32
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_HexInt32(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_HexInt32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "HexInt32", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType HexInt64
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_HexInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_HexInt64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "HexInt64"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType HexInt64
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_HexInt64(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_HexInt64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "HexInt64", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType CountedUtf16String
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_CountedUtf16String() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_CountedUtf16String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "CountedUtf16String"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType CountedUtf16String
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_CountedUtf16String(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_CountedUtf16String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "CountedUtf16String", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType CountedMbcsString
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_CountedMbcsString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_CountedMbcsString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "CountedMbcsString"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType CountedMbcsString
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_CountedMbcsString(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_CountedMbcsString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "CountedMbcsString", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Struct
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_Struct() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_Struct");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "Struct"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Struct
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_Struct(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_Struct");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "Struct", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Char16
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_Char16() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_Char16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "Char16"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Char16
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_Char16(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_Char16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "Char16", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Char8
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_Char8() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_Char8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "Char8"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Char8
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_Char8(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_Char8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "Char8", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Boolean8
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_Boolean8() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_Boolean8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "Boolean8"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Boolean8
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_Boolean8(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_Boolean8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "Boolean8", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType HexInt8
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_HexInt8() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_HexInt8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "HexInt8"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType HexInt8
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_HexInt8(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_HexInt8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "HexInt8", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType HexInt16
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_HexInt16() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_HexInt16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "HexInt16"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType HexInt16
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_HexInt16(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_HexInt16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "HexInt16", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Utf16Xml
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_Utf16Xml() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_Utf16Xml");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "Utf16Xml"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Utf16Xml
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_Utf16Xml(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_Utf16Xml");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "Utf16Xml", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType MbcsXml
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_MbcsXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_MbcsXml");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "MbcsXml"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType MbcsXml
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_MbcsXml(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_MbcsXml");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "MbcsXml", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType CountedUtf16Xml
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_CountedUtf16Xml() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_CountedUtf16Xml");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "CountedUtf16Xml"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType CountedUtf16Xml
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_CountedUtf16Xml(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_CountedUtf16Xml");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "CountedUtf16Xml", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType CountedMbcsXml
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_CountedMbcsXml() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_CountedMbcsXml");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "CountedMbcsXml"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType CountedMbcsXml
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_CountedMbcsXml(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_CountedMbcsXml");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "CountedMbcsXml", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Utf16Json
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_Utf16Json() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_Utf16Json");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "Utf16Json"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType Utf16Json
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_Utf16Json(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_Utf16Json");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "Utf16Json", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType MbcsJson
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_MbcsJson() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_MbcsJson");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "MbcsJson"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType MbcsJson
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_MbcsJson(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_MbcsJson");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "MbcsJson", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType CountedUtf16Json
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_CountedUtf16Json() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_CountedUtf16Json");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "CountedUtf16Json"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType CountedUtf16Json
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_CountedUtf16Json(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_CountedUtf16Json");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "CountedUtf16Json", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType CountedMbcsJson
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_CountedMbcsJson() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_CountedMbcsJson");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "CountedMbcsJson"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType CountedMbcsJson
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_CountedMbcsJson(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_CountedMbcsJson");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "CountedMbcsJson", value));
}
// Autogenerated static field getter
// Get static field: static public System.Diagnostics.Tracing.TraceLoggingDataType HResult
System::Diagnostics::Tracing::TraceLoggingDataType System::Diagnostics::Tracing::TraceLoggingDataType::_get_HResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_get_HResult");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Diagnostics::Tracing::TraceLoggingDataType>("System.Diagnostics.Tracing", "TraceLoggingDataType", "HResult"));
}
// Autogenerated static field setter
// Set static field: static public System.Diagnostics.Tracing.TraceLoggingDataType HResult
void System::Diagnostics::Tracing::TraceLoggingDataType::_set_HResult(System::Diagnostics::Tracing::TraceLoggingDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::TraceLoggingDataType::_set_HResult");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "TraceLoggingDataType", "HResult", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.EventSource
#include "System/Diagnostics/Tracing/EventSource.hpp"
// Including type: System.Diagnostics.Tracing.EventSource/EventData
#include "System/Diagnostics/Tracing/EventSource_EventData.hpp"
// Including type: System.Diagnostics.Tracing.EventSource/Sha1ForNonSecretPurposes
#include "System/Diagnostics/Tracing/EventSource_Sha1ForNonSecretPurposes.hpp"
// Including type: System.Diagnostics.Tracing.EventSource/OverideEventProvider
#include "System/Diagnostics/Tracing/EventSource_OverideEventProvider.hpp"
// Including type: System.EventHandler`1
#include "System/EventHandler_1.hpp"
// Including type: System.Diagnostics.Tracing.EventCommandEventArgs
#include "System/Diagnostics/Tracing/EventCommandEventArgs.hpp"
// Including type: System.Diagnostics.Tracing.EventDispatcher
#include "System/Diagnostics/Tracing/EventDispatcher.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Diagnostics.Tracing.EtwSession
#include "System/Diagnostics/Tracing/EtwSession.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Diagnostics.Tracing.ActivityTracker
#include "System/Diagnostics/Tracing/ActivityTracker.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Diagnostics.Tracing.TraceLoggingEventTypes
#include "System/Diagnostics/Tracing/TraceLoggingEventTypes.hpp"
// Including type: System.Runtime.InteropServices.GCHandle
#include "System/Runtime/InteropServices/GCHandle.hpp"
// Including type: System.Diagnostics.Tracing.NameInfo
#include "System/Diagnostics/Tracing/NameInfo.hpp"
// Including type: System.Diagnostics.Tracing.EventChannel
#include "System/Diagnostics/Tracing/EventChannel.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Diagnostics.Tracing.EventListener
#include "System/Diagnostics/Tracing/EventListener.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Diagnostics.Tracing.EventManifestOptions
#include "System/Diagnostics/Tracing/EventManifestOptions.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Diagnostics.Tracing.EventWrittenEventArgs
#include "System/Diagnostics/Tracing/EventWrittenEventArgs.hpp"
// Including type: System.Diagnostics.Tracing.EventOpcode
#include "System/Diagnostics/Tracing/EventOpcode.hpp"
// Including type: System.Diagnostics.Tracing.EventCommand
#include "System/Diagnostics/Tracing/EventCommand.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.Diagnostics.Tracing.ManifestBuilder
#include "System/Diagnostics/Tracing/ManifestBuilder.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: System.Diagnostics.Tracing.EventAttribute
#include "System/Diagnostics/Tracing/EventAttribute.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.UInt32 s_currentPid
uint System::Diagnostics::Tracing::EventSource::_get_s_currentPid() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::_get_s_currentPid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System.Diagnostics.Tracing", "EventSource", "s_currentPid"));
}
// Autogenerated static field setter
// Set static field: static System.UInt32 s_currentPid
void System::Diagnostics::Tracing::EventSource::_set_s_currentPid(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::_set_s_currentPid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventSource", "s_currentPid", value));
}
// [ThreadStaticAttribute] Offset: 0xCAFCFC
// Autogenerated static field getter
// Get static field: static private System.Byte m_EventSourceExceptionRecurenceCount
uint8_t System::Diagnostics::Tracing::EventSource::_get_m_EventSourceExceptionRecurenceCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::_get_m_EventSourceExceptionRecurenceCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("System.Diagnostics.Tracing", "EventSource", "m_EventSourceExceptionRecurenceCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte m_EventSourceExceptionRecurenceCount
void System::Diagnostics::Tracing::EventSource::_set_m_EventSourceExceptionRecurenceCount(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::_set_m_EventSourceExceptionRecurenceCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventSource", "m_EventSourceExceptionRecurenceCount", value));
}
// Autogenerated static field getter
// Get static field: static System.Action`1<System.Guid> s_activityDying
System::Action_1<System::Guid>* System::Diagnostics::Tracing::EventSource::_get_s_activityDying() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::_get_s_activityDying");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<System::Guid>*>("System.Diagnostics.Tracing", "EventSource", "s_activityDying"));
}
// Autogenerated static field setter
// Set static field: static System.Action`1<System.Guid> s_activityDying
void System::Diagnostics::Tracing::EventSource::_set_s_activityDying(System::Action_1<System::Guid>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::_set_s_activityDying");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventSource", "s_activityDying", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] namespaceBytes
::Array<uint8_t>* System::Diagnostics::Tracing::EventSource::_get_namespaceBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::_get_namespaceBytes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("System.Diagnostics.Tracing", "EventSource", "namespaceBytes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] namespaceBytes
void System::Diagnostics::Tracing::EventSource::_set_namespaceBytes(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::_set_namespaceBytes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventSource", "namespaceBytes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Guid AspNetEventSourceGuid
System::Guid System::Diagnostics::Tracing::EventSource::_get_AspNetEventSourceGuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::_get_AspNetEventSourceGuid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid>("System.Diagnostics.Tracing", "EventSource", "AspNetEventSourceGuid"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Guid AspNetEventSourceGuid
void System::Diagnostics::Tracing::EventSource::_set_AspNetEventSourceGuid(System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::_set_AspNetEventSourceGuid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Diagnostics.Tracing", "EventSource", "AspNetEventSourceGuid", value));
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteMultiMerge
void System::Diagnostics::Tracing::EventSource::WriteMultiMerge(::Il2CppString* eventName, System::Diagnostics::Tracing::EventSourceOptions& options, System::Diagnostics::Tracing::TraceLoggingEventTypes* eventTypes, System::Guid* activityID, System::Guid* childActivityID, ::Array<::Il2CppObject*>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::WriteMultiMerge");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMultiMerge", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventName, options, eventTypes, activityID, childActivityID, values)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventName, options, eventTypes, activityID, childActivityID, values);
}
// Creating initializer_list -> params proxy for: System.Void WriteMultiMerge(System.String eventName, ref System.Diagnostics.Tracing.EventSourceOptions options, System.Diagnostics.Tracing.TraceLoggingEventTypes eventTypes, System.Guid* activityID, System.Guid* childActivityID, params System.Object[] values)
void System::Diagnostics::Tracing::EventSource::WriteMultiMerge(::Il2CppString* eventName, System::Diagnostics::Tracing::EventSourceOptions& options, System::Diagnostics::Tracing::TraceLoggingEventTypes* eventTypes, System::Guid* activityID, System::Guid* childActivityID, std::initializer_list<::Il2CppObject*> values) {
  System::Diagnostics::Tracing::EventSource::WriteMultiMerge(eventName, options, eventTypes, activityID, childActivityID, ::Array<::Il2CppObject*>::New(values));
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteMultiMergeInner
void System::Diagnostics::Tracing::EventSource::WriteMultiMergeInner(::Il2CppString* eventName, System::Diagnostics::Tracing::EventSourceOptions& options, System::Diagnostics::Tracing::TraceLoggingEventTypes* eventTypes, System::Guid* activityID, System::Guid* childActivityID, ::Array<::Il2CppObject*>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::WriteMultiMergeInner");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMultiMergeInner", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventName, options, eventTypes, activityID, childActivityID, values)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventName, options, eventTypes, activityID, childActivityID, values);
}
// Creating initializer_list -> params proxy for: System.Void WriteMultiMergeInner(System.String eventName, ref System.Diagnostics.Tracing.EventSourceOptions options, System.Diagnostics.Tracing.TraceLoggingEventTypes eventTypes, System.Guid* activityID, System.Guid* childActivityID, params System.Object[] values)
void System::Diagnostics::Tracing::EventSource::WriteMultiMergeInner(::Il2CppString* eventName, System::Diagnostics::Tracing::EventSourceOptions& options, System::Diagnostics::Tracing::TraceLoggingEventTypes* eventTypes, System::Guid* activityID, System::Guid* childActivityID, std::initializer_list<::Il2CppObject*> values) {
  System::Diagnostics::Tracing::EventSource::WriteMultiMergeInner(eventName, options, eventTypes, activityID, childActivityID, ::Array<::Il2CppObject*>::New(values));
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteMultiMerge
void System::Diagnostics::Tracing::EventSource::WriteMultiMerge(::Il2CppString* eventName, System::Diagnostics::Tracing::EventSourceOptions& options, System::Diagnostics::Tracing::TraceLoggingEventTypes* eventTypes, System::Guid* activityID, System::Guid* childActivityID, System::Diagnostics::Tracing::EventSource::EventData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::WriteMultiMerge");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteMultiMerge", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventName, options, eventTypes, activityID, childActivityID, data)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventName, options, eventTypes, activityID, childActivityID, data);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteCleanup
void System::Diagnostics::Tracing::EventSource::WriteCleanup(System::Runtime::InteropServices::GCHandle* pPins, int cPins) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::WriteCleanup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteCleanup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pPins, cPins)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pPins, cPins);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.InitializeProviderMetadata
void System::Diagnostics::Tracing::EventSource::InitializeProviderMetadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::InitializeProviderMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitializeProviderMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.AddValueToMetaData
int System::Diagnostics::Tracing::EventSource::AddValueToMetaData(System::Collections::Generic::List_1<uint8_t>* metaData, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::AddValueToMetaData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "AddValueToMetaData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(metaData, value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, metaData, value);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.HexDigit
int System::Diagnostics::Tracing::EventSource::HexDigit(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::HexDigit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "HexDigit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.UpdateDescriptor
System::Diagnostics::Tracing::NameInfo* System::Diagnostics::Tracing::EventSource::UpdateDescriptor(::Il2CppString* name, System::Diagnostics::Tracing::TraceLoggingEventTypes* eventInfo, System::Diagnostics::Tracing::EventSourceOptions& options, System::Diagnostics::Tracing::EventDescriptor& descriptor) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::UpdateDescriptor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateDescriptor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, eventInfo, options, descriptor)));
  return ::il2cpp_utils::RunMethodThrow<System::Diagnostics::Tracing::NameInfo*, false>(this, ___internal__method, name, eventInfo, options, descriptor);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.get_Name
::Il2CppString* System::Diagnostics::Tracing::EventSource::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::get_Name");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.get_Guid
System::Guid System::Diagnostics::Tracing::EventSource::get_Guid() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::get_Guid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Guid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Guid, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.IsEnabled
bool System::Diagnostics::Tracing::EventSource::IsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::IsEnabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsEnabled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.IsEnabled
bool System::Diagnostics::Tracing::EventSource::IsEnabled(System::Diagnostics::Tracing::EventLevel level, System::Diagnostics::Tracing::EventKeywords keywords) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::IsEnabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsEnabled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(level, keywords)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, level, keywords);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.IsEnabled
bool System::Diagnostics::Tracing::EventSource::IsEnabled(System::Diagnostics::Tracing::EventLevel level, System::Diagnostics::Tracing::EventKeywords keywords, System::Diagnostics::Tracing::EventChannel channel) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::IsEnabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsEnabled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(level, keywords, channel)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, level, keywords, channel);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.GetGuid
System::Guid System::Diagnostics::Tracing::EventSource::GetGuid(System::Type* eventSourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::GetGuid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "GetGuid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventSourceType)));
  return ::il2cpp_utils::RunMethodThrow<System::Guid, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, eventSourceType);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.GetName
::Il2CppString* System::Diagnostics::Tracing::EventSource::GetName(System::Type* eventSourceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::GetName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "GetName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventSourceType)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, eventSourceType);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.SetCurrentThreadActivityId
void System::Diagnostics::Tracing::EventSource::SetCurrentThreadActivityId(System::Guid activityId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::SetCurrentThreadActivityId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "SetCurrentThreadActivityId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(activityId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, activityId);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.get_CurrentThreadActivityId
System::Guid System::Diagnostics::Tracing::EventSource::get_CurrentThreadActivityId() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::get_CurrentThreadActivityId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "get_CurrentThreadActivityId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Guid, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.get_InternalCurrentThreadActivityId
System::Guid System::Diagnostics::Tracing::EventSource::get_InternalCurrentThreadActivityId() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::get_InternalCurrentThreadActivityId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "get_InternalCurrentThreadActivityId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Guid, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.get_FallbackActivityId
System::Guid System::Diagnostics::Tracing::EventSource::get_FallbackActivityId() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::get_FallbackActivityId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "get_FallbackActivityId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Guid, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.OnEventCommand
void System::Diagnostics::Tracing::EventSource::OnEventCommand(System::Diagnostics::Tracing::EventCommandEventArgs* command) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::OnEventCommand");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEventCommand", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(command)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, command);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteEvent
void System::Diagnostics::Tracing::EventSource::WriteEvent(int eventId, int arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::WriteEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventId, arg1)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventId, arg1);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteEvent
void System::Diagnostics::Tracing::EventSource::WriteEvent(int eventId, ::Il2CppString* arg1, ::Il2CppString* arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::WriteEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventId, arg1, arg2)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventId, arg1, arg2);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteEvent
void System::Diagnostics::Tracing::EventSource::WriteEvent(int eventId, ::Il2CppString* arg1, ::Il2CppString* arg2, ::Il2CppString* arg3) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::WriteEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventId, arg1, arg2, arg3)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventId, arg1, arg2, arg3);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteEventCore
void System::Diagnostics::Tracing::EventSource::WriteEventCore(int eventId, int eventDataCount, System::Diagnostics::Tracing::EventSource::EventData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::WriteEventCore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteEventCore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventId, eventDataCount, data)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventId, eventDataCount, data);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteEventWithRelatedActivityIdCore
void System::Diagnostics::Tracing::EventSource::WriteEventWithRelatedActivityIdCore(int eventId, System::Guid* relatedActivityId, int eventDataCount, System::Diagnostics::Tracing::EventSource::EventData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::WriteEventWithRelatedActivityIdCore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteEventWithRelatedActivityIdCore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventId, relatedActivityId, eventDataCount, data)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventId, relatedActivityId, eventDataCount, data);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteEvent
void System::Diagnostics::Tracing::EventSource::WriteEvent(int eventId, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::WriteEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventId, args)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventId, args);
}
// Creating initializer_list -> params proxy for: System.Void WriteEvent(System.Int32 eventId, params System.Object[] args)
void System::Diagnostics::Tracing::EventSource::WriteEvent(int eventId, std::initializer_list<::Il2CppObject*> args) {
  System::Diagnostics::Tracing::EventSource::WriteEvent(eventId, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.Dispose
void System::Diagnostics::Tracing::EventSource::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposing)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteStringToListener
void System::Diagnostics::Tracing::EventSource::WriteStringToListener(System::Diagnostics::Tracing::EventListener* listener, ::Il2CppString* msg, System::Diagnostics::Tracing::SessionMask m) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::WriteStringToListener");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteStringToListener", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(listener, msg, m)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, listener, msg, m);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteEventRaw
void System::Diagnostics::Tracing::EventSource::WriteEventRaw(::Il2CppString* eventName, System::Diagnostics::Tracing::EventDescriptor& eventDescriptor, System::Guid* activityID, System::Guid* relatedActivityID, int dataCount, System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::WriteEventRaw");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteEventRaw", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventName, eventDescriptor, activityID, relatedActivityID, dataCount, data)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventName, eventDescriptor, activityID, relatedActivityID, dataCount, data);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.Initialize
void System::Diagnostics::Tracing::EventSource::Initialize(System::Guid eventSourceGuid, ::Il2CppString* eventSourceName, ::Array<::Il2CppString*>* traits) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::Initialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventSourceGuid, eventSourceName, traits)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventSourceGuid, eventSourceName, traits);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.GetName
::Il2CppString* System::Diagnostics::Tracing::EventSource::GetName(System::Type* eventSourceType, System::Diagnostics::Tracing::EventManifestOptions flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::GetName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "GetName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventSourceType, flags)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, eventSourceType, flags);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.GenerateGuidFromName
System::Guid System::Diagnostics::Tracing::EventSource::GenerateGuidFromName(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::GenerateGuidFromName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "GenerateGuidFromName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  return ::il2cpp_utils::RunMethodThrow<System::Guid, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.DecodeObject
::Il2CppObject* System::Diagnostics::Tracing::EventSource::DecodeObject(int eventId, int parameterId, System::Diagnostics::Tracing::EventSource::EventData*& data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::DecodeObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DecodeObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventId, parameterId, data)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, eventId, parameterId, data);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.GetDispatcher
System::Diagnostics::Tracing::EventDispatcher* System::Diagnostics::Tracing::EventSource::GetDispatcher(System::Diagnostics::Tracing::EventListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::GetDispatcher");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDispatcher", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(listener)));
  return ::il2cpp_utils::RunMethodThrow<System::Diagnostics::Tracing::EventDispatcher*, false>(this, ___internal__method, listener);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteEventVarargs
void System::Diagnostics::Tracing::EventSource::WriteEventVarargs(int eventId, System::Guid* childActivityID, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::WriteEventVarargs");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteEventVarargs", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventId, childActivityID, args)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventId, childActivityID, args);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.SerializeEventArgs
::Array<::Il2CppObject*>* System::Diagnostics::Tracing::EventSource::SerializeEventArgs(int eventId, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::SerializeEventArgs");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SerializeEventArgs", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventId, args)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppObject*>*, false>(this, ___internal__method, eventId, args);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.LogEventArgsMismatches
void System::Diagnostics::Tracing::EventSource::LogEventArgsMismatches(::Array<System::Reflection::ParameterInfo*>* infos, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::LogEventArgsMismatches");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LogEventArgsMismatches", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(infos, args)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, infos, args);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.GetParamLengthIncludingByteArray
int System::Diagnostics::Tracing::EventSource::GetParamLengthIncludingByteArray(::Array<System::Reflection::ParameterInfo*>* parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::GetParamLengthIncludingByteArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetParamLengthIncludingByteArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(parameters)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, parameters);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteToAllListeners
void System::Diagnostics::Tracing::EventSource::WriteToAllListeners(int eventId, System::Guid* childActivityID, int eventDataCount, System::Diagnostics::Tracing::EventSource::EventData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::WriteToAllListeners");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteToAllListeners", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventId, childActivityID, eventDataCount, data)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventId, childActivityID, eventDataCount, data);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteToAllListeners
void System::Diagnostics::Tracing::EventSource::WriteToAllListeners(int eventId, System::Guid* childActivityID, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::WriteToAllListeners");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteToAllListeners", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventId, childActivityID, args)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventId, childActivityID, args);
}
// Creating initializer_list -> params proxy for: System.Void WriteToAllListeners(System.Int32 eventId, System.Guid* childActivityID, params System.Object[] args)
void System::Diagnostics::Tracing::EventSource::WriteToAllListeners(int eventId, System::Guid* childActivityID, std::initializer_list<::Il2CppObject*> args) {
  System::Diagnostics::Tracing::EventSource::WriteToAllListeners(eventId, childActivityID, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.DispatchToAllListeners
void System::Diagnostics::Tracing::EventSource::DispatchToAllListeners(int eventId, System::Guid* childActivityID, System::Diagnostics::Tracing::EventWrittenEventArgs* eventCallbackArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::DispatchToAllListeners");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DispatchToAllListeners", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventId, childActivityID, eventCallbackArgs)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventId, childActivityID, eventCallbackArgs);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteEventString
void System::Diagnostics::Tracing::EventSource::WriteEventString(System::Diagnostics::Tracing::EventLevel level, int64_t keywords, ::Il2CppString* msgString) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::WriteEventString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteEventString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(level, keywords, msgString)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, level, keywords, msgString);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.WriteStringToAllListeners
void System::Diagnostics::Tracing::EventSource::WriteStringToAllListeners(::Il2CppString* eventName, ::Il2CppString* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::WriteStringToAllListeners");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteStringToAllListeners", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventName, msg)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventName, msg);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.GetEtwSessionMask
System::Diagnostics::Tracing::SessionMask System::Diagnostics::Tracing::EventSource::GetEtwSessionMask(int eventId, System::Guid* childActivityID) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::GetEtwSessionMask");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEtwSessionMask", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventId, childActivityID)));
  return ::il2cpp_utils::RunMethodThrow<System::Diagnostics::Tracing::SessionMask, false>(this, ___internal__method, eventId, childActivityID);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.IsEnabledByDefault
bool System::Diagnostics::Tracing::EventSource::IsEnabledByDefault(int eventNum, bool enable, System::Diagnostics::Tracing::EventLevel currentLevel, System::Diagnostics::Tracing::EventKeywords currentMatchAnyKeyword) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::IsEnabledByDefault");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsEnabledByDefault", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventNum, enable, currentLevel, currentMatchAnyKeyword)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, eventNum, enable, currentLevel, currentMatchAnyKeyword);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.IsEnabledCommon
bool System::Diagnostics::Tracing::EventSource::IsEnabledCommon(bool enabled, System::Diagnostics::Tracing::EventLevel currentLevel, System::Diagnostics::Tracing::EventKeywords currentMatchAnyKeyword, System::Diagnostics::Tracing::EventLevel eventLevel, System::Diagnostics::Tracing::EventKeywords eventKeywords, System::Diagnostics::Tracing::EventChannel eventChannel) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::IsEnabledCommon");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsEnabledCommon", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(enabled, currentLevel, currentMatchAnyKeyword, eventLevel, eventKeywords, eventChannel)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, enabled, currentLevel, currentMatchAnyKeyword, eventLevel, eventKeywords, eventChannel);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.ThrowEventSourceException
void System::Diagnostics::Tracing::EventSource::ThrowEventSourceException(::Il2CppString* eventName, System::Exception* innerEx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::ThrowEventSourceException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ThrowEventSourceException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventName, innerEx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventName, innerEx);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.ValidateEventOpcodeForTransfer
void System::Diagnostics::Tracing::EventSource::ValidateEventOpcodeForTransfer(System::Diagnostics::Tracing::EventSource::EventMetadata& eventData, ::Il2CppString* eventName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::ValidateEventOpcodeForTransfer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ValidateEventOpcodeForTransfer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventData, eventName)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, eventData, eventName);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.GetOpcodeWithDefault
System::Diagnostics::Tracing::EventOpcode System::Diagnostics::Tracing::EventSource::GetOpcodeWithDefault(System::Diagnostics::Tracing::EventOpcode opcode, ::Il2CppString* eventName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::GetOpcodeWithDefault");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "GetOpcodeWithDefault", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(opcode, eventName)));
  return ::il2cpp_utils::RunMethodThrow<System::Diagnostics::Tracing::EventOpcode, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, opcode, eventName);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.SendCommand
void System::Diagnostics::Tracing::EventSource::SendCommand(System::Diagnostics::Tracing::EventListener* listener, int perEventSourceSessionId, int etwSessionId, System::Diagnostics::Tracing::EventCommand command, bool enable, System::Diagnostics::Tracing::EventLevel level, System::Diagnostics::Tracing::EventKeywords matchAnyKeyword, System::Collections::Generic::IDictionary_2<::Il2CppString*, ::Il2CppString*>* commandArguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::SendCommand");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendCommand", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(listener, perEventSourceSessionId, etwSessionId, command, enable, level, matchAnyKeyword, commandArguments)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, listener, perEventSourceSessionId, etwSessionId, command, enable, level, matchAnyKeyword, commandArguments);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.DoCommand
void System::Diagnostics::Tracing::EventSource::DoCommand(System::Diagnostics::Tracing::EventCommandEventArgs* commandArgs) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::DoCommand");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DoCommand", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(commandArgs)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, commandArgs);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.UpdateEtwSession
void System::Diagnostics::Tracing::EventSource::UpdateEtwSession(int sessionIdBit, int etwSessionId, bool bEnable, ::Il2CppString* activityFilters, bool participateInSampling) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::UpdateEtwSession");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateEtwSession", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sessionIdBit, etwSessionId, bEnable, activityFilters, participateInSampling)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sessionIdBit, etwSessionId, bEnable, activityFilters, participateInSampling);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.ParseCommandArgs
bool System::Diagnostics::Tracing::EventSource::ParseCommandArgs(System::Collections::Generic::IDictionary_2<::Il2CppString*, ::Il2CppString*>* commandArguments, bool& participateInSampling, ::Il2CppString*& activityFilters, int& sessionIdBit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::ParseCommandArgs");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "ParseCommandArgs", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(commandArguments, participateInSampling, activityFilters, sessionIdBit)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, commandArguments, participateInSampling, activityFilters, sessionIdBit);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.UpdateKwdTriggers
void System::Diagnostics::Tracing::EventSource::UpdateKwdTriggers(bool enable) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::UpdateKwdTriggers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateKwdTriggers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(enable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, enable);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.EnableEventForDispatcher
bool System::Diagnostics::Tracing::EventSource::EnableEventForDispatcher(System::Diagnostics::Tracing::EventDispatcher* dispatcher, int eventId, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::EnableEventForDispatcher");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EnableEventForDispatcher", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dispatcher, eventId, value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, dispatcher, eventId, value);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.AnyEventEnabled
bool System::Diagnostics::Tracing::EventSource::AnyEventEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::AnyEventEnabled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AnyEventEnabled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.get_IsDisposed
bool System::Diagnostics::Tracing::EventSource::get_IsDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::get_IsDisposed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsDisposed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.EnsureDescriptorsInitialized
void System::Diagnostics::Tracing::EventSource::EnsureDescriptorsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::EnsureDescriptorsInitialized");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EnsureDescriptorsInitialized", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.SendManifest
bool System::Diagnostics::Tracing::EventSource::SendManifest(::Array<uint8_t>* rawManifest) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::SendManifest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendManifest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rawManifest)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, rawManifest);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.GetCustomAttributeHelper
System::Attribute* System::Diagnostics::Tracing::EventSource::GetCustomAttributeHelper(System::Reflection::MemberInfo* member, System::Type* attributeType, System::Diagnostics::Tracing::EventManifestOptions flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::GetCustomAttributeHelper");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "GetCustomAttributeHelper", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(member, attributeType, flags)));
  return ::il2cpp_utils::RunMethodThrow<System::Attribute*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, member, attributeType, flags);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.AttributeTypeNamesMatch
bool System::Diagnostics::Tracing::EventSource::AttributeTypeNamesMatch(System::Type* attributeType, System::Type* reflectedAttributeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::AttributeTypeNamesMatch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "AttributeTypeNamesMatch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(attributeType, reflectedAttributeType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, attributeType, reflectedAttributeType);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.GetEventSourceBaseType
System::Type* System::Diagnostics::Tracing::EventSource::GetEventSourceBaseType(System::Type* eventSourceType, bool allowEventSourceOverride, bool reflectionOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::GetEventSourceBaseType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "GetEventSourceBaseType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventSourceType, allowEventSourceOverride, reflectionOnly)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, eventSourceType, allowEventSourceOverride, reflectionOnly);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.CreateManifestAndDescriptors
::Array<uint8_t>* System::Diagnostics::Tracing::EventSource::CreateManifestAndDescriptors(System::Type* eventSourceType, ::Il2CppString* eventSourceDllName, System::Diagnostics::Tracing::EventSource* source, System::Diagnostics::Tracing::EventManifestOptions flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::CreateManifestAndDescriptors");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "CreateManifestAndDescriptors", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventSourceType, eventSourceDllName, source, flags)));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, eventSourceType, eventSourceDllName, source, flags);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.RemoveFirstArgIfRelatedActivityId
bool System::Diagnostics::Tracing::EventSource::RemoveFirstArgIfRelatedActivityId(::Array<System::Reflection::ParameterInfo*>*& args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::RemoveFirstArgIfRelatedActivityId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "RemoveFirstArgIfRelatedActivityId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, args);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.AddProviderEnumKind
void System::Diagnostics::Tracing::EventSource::AddProviderEnumKind(System::Diagnostics::Tracing::ManifestBuilder* manifest, System::Reflection::FieldInfo* staticField, ::Il2CppString* providerEnumKind) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::AddProviderEnumKind");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "AddProviderEnumKind", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(manifest, staticField, providerEnumKind)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, manifest, staticField, providerEnumKind);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.AddEventDescriptor
void System::Diagnostics::Tracing::EventSource::AddEventDescriptor(::Array<System::Diagnostics::Tracing::EventSource::EventMetadata>*& eventData, ::Il2CppString* eventName, System::Diagnostics::Tracing::EventAttribute* eventAttribute, ::Array<System::Reflection::ParameterInfo*>* eventParameters, bool hasRelatedActivityID) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::AddEventDescriptor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "AddEventDescriptor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventData, eventName, eventAttribute, eventParameters, hasRelatedActivityID)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, eventData, eventName, eventAttribute, eventParameters, hasRelatedActivityID);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.TrimEventDescriptors
void System::Diagnostics::Tracing::EventSource::TrimEventDescriptors(::Array<System::Diagnostics::Tracing::EventSource::EventMetadata>*& eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::TrimEventDescriptors");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "TrimEventDescriptors", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, eventData);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.AddListener
void System::Diagnostics::Tracing::EventSource::AddListener(System::Diagnostics::Tracing::EventListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::AddListener");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddListener", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(listener)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, listener);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.DebugCheckEvent
void System::Diagnostics::Tracing::EventSource::DebugCheckEvent(System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>*& eventsByName, ::Array<System::Diagnostics::Tracing::EventSource::EventMetadata>* eventData, System::Reflection::MethodInfo* method, System::Diagnostics::Tracing::EventAttribute* eventAttribute, System::Diagnostics::Tracing::ManifestBuilder* manifest, System::Diagnostics::Tracing::EventManifestOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::DebugCheckEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "DebugCheckEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(eventsByName, eventData, method, eventAttribute, manifest, options)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, eventsByName, eventData, method, eventAttribute, manifest, options);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.GetHelperCallFirstArg
int System::Diagnostics::Tracing::EventSource::GetHelperCallFirstArg(System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::GetHelperCallFirstArg");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", "GetHelperCallFirstArg", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(method)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.ReportOutOfBandMessage
void System::Diagnostics::Tracing::EventSource::ReportOutOfBandMessage(::Il2CppString* msg, bool flush) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::ReportOutOfBandMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReportOutOfBandMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(msg, flush)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, msg, flush);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.ValidateSettings
System::Diagnostics::Tracing::EventSourceSettings System::Diagnostics::Tracing::EventSource::ValidateSettings(System::Diagnostics::Tracing::EventSourceSettings settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::ValidateSettings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ValidateSettings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(settings)));
  return ::il2cpp_utils::RunMethodThrow<System::Diagnostics::Tracing::EventSourceSettings, false>(this, ___internal__method, settings);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.get_ThrowOnEventWriteErrors
bool System::Diagnostics::Tracing::EventSource::get_ThrowOnEventWriteErrors() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::get_ThrowOnEventWriteErrors");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ThrowOnEventWriteErrors", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.get_SelfDescribingEvents
bool System::Diagnostics::Tracing::EventSource::get_SelfDescribingEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::get_SelfDescribingEvents");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SelfDescribingEvents", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.ReportActivitySamplingInfo
void System::Diagnostics::Tracing::EventSource::ReportActivitySamplingInfo(System::Diagnostics::Tracing::EventListener* listener, System::Diagnostics::Tracing::SessionMask sessions) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::ReportActivitySamplingInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReportActivitySamplingInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(listener, sessions)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, listener, sessions);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource..cctor
void System::Diagnostics::Tracing::EventSource::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.ToString
::Il2CppString* System::Diagnostics::Tracing::EventSource::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.Dispose
void System::Diagnostics::Tracing::EventSource::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void System::Diagnostics::Tracing::EventSource::System_IDisposable_Dispose() {
  System::Diagnostics::Tracing::EventSource::Dispose();
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource.Finalize
void System::Diagnostics::Tracing::EventSource::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::Finalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Diagnostics.Tracing.EventSource/EventData
#include "System/Diagnostics/Tracing/EventSource_EventData.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.EventSource/EventData.get_DataPointer
System::IntPtr System::Diagnostics::Tracing::EventSource::EventData::get_DataPointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::EventData::get_DataPointer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_DataPointer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(*this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource/EventData.set_DataPointer
void System::Diagnostics::Tracing::EventSource::EventData::set_DataPointer(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::EventData::set_DataPointer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_DataPointer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource/EventData.set_Size
void System::Diagnostics::Tracing::EventSource::EventData::set_Size(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::EventData::set_Size");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "set_Size", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource/EventData.SetMetadata
void System::Diagnostics::Tracing::EventSource::EventData::SetMetadata(uint8_t* pointer, int size, int reserved) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::EventData::SetMetadata");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetMetadata", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pointer, size, reserved)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, pointer, size, reserved);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.EventSource/Sha1ForNonSecretPurposes
#include "System/Diagnostics/Tracing/EventSource_Sha1ForNonSecretPurposes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.EventSource/Sha1ForNonSecretPurposes.Start
void System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource/Sha1ForNonSecretPurposes.Append
void System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::Append(uint8_t input) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::Append");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, input);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource/Sha1ForNonSecretPurposes.Append
void System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::Append(::Array<uint8_t>* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::Append");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Append", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, input);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource/Sha1ForNonSecretPurposes.Finish
void System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::Finish(::Array<uint8_t>* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::Finish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Finish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(output)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, output);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource/Sha1ForNonSecretPurposes.Drain
void System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::Drain() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::Drain");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Drain", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource/Sha1ForNonSecretPurposes.Rol1
uint System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::Rol1(uint input) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::Rol1");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource/Sha1ForNonSecretPurposes", "Rol1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource/Sha1ForNonSecretPurposes.Rol5
uint System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::Rol5(uint input) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::Rol5");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource/Sha1ForNonSecretPurposes", "Rol5", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input);
}
// Autogenerated method: System.Diagnostics.Tracing.EventSource/Sha1ForNonSecretPurposes.Rol30
uint System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::Rol30(uint input) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::Sha1ForNonSecretPurposes::Rol30");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System.Diagnostics.Tracing", "EventSource/Sha1ForNonSecretPurposes", "Rol30", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.Tracing.EventSource/OverideEventProvider
#include "System/Diagnostics/Tracing/EventSource_OverideEventProvider.hpp"
// Including type: System.Diagnostics.Tracing.ControllerCommand
#include "System/Diagnostics/Tracing/ControllerCommand.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.Tracing.EventSource/OverideEventProvider.OnControllerCommand
void System::Diagnostics::Tracing::EventSource::OverideEventProvider::OnControllerCommand(System::Diagnostics::Tracing::ControllerCommand command, System::Collections::Generic::IDictionary_2<::Il2CppString*, ::Il2CppString*>* arguments, int perEventSourceSessionId, int etwSessionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::Tracing::EventSource::OverideEventProvider::OnControllerCommand");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnControllerCommand", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(command, arguments, perEventSourceSessionId, etwSessionId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, command, arguments, perEventSourceSessionId, etwSessionId);
}
