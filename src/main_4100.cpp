// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GoodCutScoringElement/Pool
#include "GlobalNamespace/GoodCutScoringElement_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BadCutScoringElement
#include "GlobalNamespace/BadCutScoringElement.hpp"
// Including type: BadCutScoringElement/Pool
#include "GlobalNamespace/BadCutScoringElement_Pool.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: ScoreMultiplierCounter/MultiplierEventType
#include "GlobalNamespace/ScoreMultiplierCounter_MultiplierEventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BadCutScoringElement.Init
void GlobalNamespace::BadCutScoringElement::Init(::GlobalNamespace::NoteData* noteData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BadCutScoringElement::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteData);
}
// Autogenerated method: BadCutScoringElement.get_cutScore
int GlobalNamespace::BadCutScoringElement::get_cutScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BadCutScoringElement::get_cutScore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cutScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BadCutScoringElement.get_multiplierEventType
::GlobalNamespace::ScoreMultiplierCounter::MultiplierEventType GlobalNamespace::BadCutScoringElement::get_multiplierEventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BadCutScoringElement::get_multiplierEventType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplierEventType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ScoreMultiplierCounter::MultiplierEventType, false>(this, ___internal__method);
}
// Autogenerated method: BadCutScoringElement.get_executionOrder
int GlobalNamespace::BadCutScoringElement::get_executionOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BadCutScoringElement::get_executionOrder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_executionOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BadCutScoringElement/Pool
#include "GlobalNamespace/BadCutScoringElement_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissScoringElement
#include "GlobalNamespace/MissScoringElement.hpp"
// Including type: MissScoringElement/Pool
#include "GlobalNamespace/MissScoringElement_Pool.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ScoreMultiplierCounter/MultiplierEventType _multiplierEventType
::GlobalNamespace::ScoreMultiplierCounter::MultiplierEventType& GlobalNamespace::MissScoringElement::dyn__multiplierEventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissScoringElement::dyn__multiplierEventType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplierEventType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ScoreMultiplierCounter::MultiplierEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissScoringElement.Init
void GlobalNamespace::MissScoringElement::Init(::GlobalNamespace::NoteData* noteData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissScoringElement::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteData);
}
// Autogenerated method: MissScoringElement.get_cutScore
int GlobalNamespace::MissScoringElement::get_cutScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissScoringElement::get_cutScore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cutScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MissScoringElement.get_multiplierEventType
::GlobalNamespace::ScoreMultiplierCounter::MultiplierEventType GlobalNamespace::MissScoringElement::get_multiplierEventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissScoringElement::get_multiplierEventType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplierEventType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ScoreMultiplierCounter::MultiplierEventType, false>(this, ___internal__method);
}
// Autogenerated method: MissScoringElement.get_executionOrder
int GlobalNamespace::MissScoringElement::get_executionOrder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissScoringElement::get_executionOrder");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_executionOrder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissScoringElement/Pool
#include "GlobalNamespace/MissScoringElement_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SmoothCamera
#include "GlobalNamespace/SmoothCamera.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: MainCamera
#include "GlobalNamespace/MainCamera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _camera
::UnityEngine::Camera*& GlobalNamespace::SmoothCamera::dyn__camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothCamera::dyn__camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_camera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MainCamera _mainCamera
::GlobalNamespace::MainCamera*& GlobalNamespace::SmoothCamera::dyn__mainCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothCamera::dyn__mainCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainCamera"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainCamera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _thirdPersonPosition
::UnityEngine::Vector3& GlobalNamespace::SmoothCamera::dyn__thirdPersonPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothCamera::dyn__thirdPersonPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_thirdPersonPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _thirdPersonEulerAngles
::UnityEngine::Vector3& GlobalNamespace::SmoothCamera::dyn__thirdPersonEulerAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothCamera::dyn__thirdPersonEulerAngles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_thirdPersonEulerAngles"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _thirdPersonEnabled
bool& GlobalNamespace::SmoothCamera::dyn__thirdPersonEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothCamera::dyn__thirdPersonEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_thirdPersonEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rotationSmooth
float& GlobalNamespace::SmoothCamera::dyn__rotationSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothCamera::dyn__rotationSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationSmooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _positionSmooth
float& GlobalNamespace::SmoothCamera::dyn__positionSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothCamera::dyn__positionSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionSmooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SmoothCamera.Init
void GlobalNamespace::SmoothCamera::Init(float fieldOfView, float positionSmooth, float rotationSmooth, bool thirdPersonEnabled, ::UnityEngine::Vector3 thirdPersonPosition, ::UnityEngine::Vector3 thirdPersonEulerAngles) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothCamera::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fieldOfView), ::il2cpp_utils::ExtractType(positionSmooth), ::il2cpp_utils::ExtractType(rotationSmooth), ::il2cpp_utils::ExtractType(thirdPersonEnabled), ::il2cpp_utils::ExtractType(thirdPersonPosition), ::il2cpp_utils::ExtractType(thirdPersonEulerAngles)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fieldOfView, positionSmooth, rotationSmooth, thirdPersonEnabled, thirdPersonPosition, thirdPersonEulerAngles);
}
// Autogenerated method: SmoothCamera.OnEnable
void GlobalNamespace::SmoothCamera::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothCamera::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SmoothCamera.OnDisable
void GlobalNamespace::SmoothCamera::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothCamera::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SmoothCamera.LateUpdate
void GlobalNamespace::SmoothCamera::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothCamera::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SmoothCameraController
#include "GlobalNamespace/SmoothCameraController.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: SmoothCamera
#include "GlobalNamespace/SmoothCamera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MainSettingsModelSO _mainSettingsModel
::GlobalNamespace::MainSettingsModelSO*& GlobalNamespace::SmoothCameraController::dyn__mainSettingsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothCameraController::dyn__mainSettingsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainSettingsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainSettingsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SmoothCamera _smoothCamera
::GlobalNamespace::SmoothCamera*& GlobalNamespace::SmoothCameraController::dyn__smoothCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothCameraController::dyn__smoothCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smoothCamera"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SmoothCamera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SmoothCameraController.Start
void GlobalNamespace::SmoothCameraController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothCameraController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SmoothCameraController.OnDestroy
void GlobalNamespace::SmoothCameraController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothCameraController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SmoothCameraController.HandleDidActivate
void GlobalNamespace::SmoothCameraController::HandleDidActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothCameraController::HandleDidActivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SmoothCameraController.HandleDidDeactivate
void GlobalNamespace::SmoothCameraController::HandleDidDeactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothCameraController::HandleDidDeactivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SmoothCameraController.ActivateSmoothCameraIfNeeded
void GlobalNamespace::SmoothCameraController::ActivateSmoothCameraIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothCameraController::ActivateSmoothCameraIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateSmoothCameraIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameSongController
#include "GlobalNamespace/GameSongController.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: AudioPitchGainEffect
#include "GlobalNamespace/AudioPitchGainEffect.hpp"
// Including type: BeatmapCallbacksController
#include "GlobalNamespace/BeatmapCallbacksController.hpp"
// Including type: BeatmapCallbacksUpdater
#include "GlobalNamespace/BeatmapCallbacksUpdater.hpp"
// Including type: UnityEngine.WaitUntil
#include "UnityEngine/WaitUntil.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AudioTimeSyncController _audioTimeSyncController
::GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::GameSongController::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameSongController::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AudioPitchGainEffect _failAudioPitchGainEffect
::GlobalNamespace::AudioPitchGainEffect*& GlobalNamespace::GameSongController::dyn__failAudioPitchGainEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameSongController::dyn__failAudioPitchGainEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_failAudioPitchGainEffect"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioPitchGainEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCallbacksController _beatmapCallbacksController
::GlobalNamespace::BeatmapCallbacksController*& GlobalNamespace::GameSongController::dyn__beatmapCallbacksController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameSongController::dyn__beatmapCallbacksController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCallbacksController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCallbacksController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCallbacksUpdater _beatmapCallbacksUpdater
::GlobalNamespace::BeatmapCallbacksUpdater*& GlobalNamespace::GameSongController::dyn__beatmapCallbacksUpdater() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameSongController::dyn__beatmapCallbacksUpdater");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCallbacksUpdater"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCallbacksUpdater**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _songDidFinish
bool& GlobalNamespace::GameSongController::dyn__songDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameSongController::dyn__songDidFinish");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songDidFinish"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameSongController.get_songLength
float GlobalNamespace::GameSongController::get_songLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameSongController::get_songLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GameSongController.get_waitUntilIsReadyToStartTheSong
::UnityEngine::WaitUntil* GlobalNamespace::GameSongController::get_waitUntilIsReadyToStartTheSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameSongController::get_waitUntilIsReadyToStartTheSong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_waitUntilIsReadyToStartTheSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::WaitUntil*, false>(this, ___internal__method);
}
// Autogenerated method: GameSongController.LateUpdate
void GlobalNamespace::GameSongController::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameSongController::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameSongController.StartSong
void GlobalNamespace::GameSongController::StartSong(float songTimeOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameSongController::StartSong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songTimeOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, songTimeOffset);
}
// Autogenerated method: GameSongController.FailStopSong
void GlobalNamespace::GameSongController::FailStopSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameSongController::FailStopSong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FailStopSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameSongController.SeekTo
void GlobalNamespace::GameSongController::SeekTo(float songTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameSongController::SeekTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SeekTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, songTime);
}
// Autogenerated method: GameSongController.<FailStopSong>b__14_0
void GlobalNamespace::GameSongController::$FailStopSong$b__14_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameSongController::<FailStopSong>b__14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FailStopSong>b__14_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameSongController.StopSong
void GlobalNamespace::GameSongController::StopSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameSongController::StopSong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameSongController.PauseSong
void GlobalNamespace::GameSongController::PauseSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameSongController::PauseSong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PauseSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameSongController.ResumeSong
void GlobalNamespace::GameSongController::ResumeSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameSongController::ResumeSong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResumeSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IStartSeekSongController
#include "GlobalNamespace/IStartSeekSongController.hpp"
// Including type: UnityEngine.WaitUntil
#include "UnityEngine/WaitUntil.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IStartSeekSongController.get_waitUntilIsReadyToStartTheSong
::UnityEngine::WaitUntil* GlobalNamespace::IStartSeekSongController::get_waitUntilIsReadyToStartTheSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IStartSeekSongController::get_waitUntilIsReadyToStartTheSong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_waitUntilIsReadyToStartTheSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::WaitUntil*, false>(this, ___internal__method);
}
// Autogenerated method: IStartSeekSongController.StartSong
void GlobalNamespace::IStartSeekSongController::StartSong(float offsetTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IStartSeekSongController::StartSong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offsetTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, offsetTime);
}
// Autogenerated method: IStartSeekSongController.SeekTo
void GlobalNamespace::IStartSeekSongController::SeekTo(float songTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IStartSeekSongController::SeekTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SeekTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, songTime);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PatternFightSongController
#include "GlobalNamespace/PatternFightSongController.hpp"
// Including type: PatternFightSongController/InitData
#include "GlobalNamespace/PatternFightSongController_InitData.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: BeatmapData
#include "GlobalNamespace/BeatmapData.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kBPM
float GlobalNamespace::PatternFightSongController::_get_kBPM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSongController::_get_kBPM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "PatternFightSongController", "kBPM"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kBPM
void GlobalNamespace::PatternFightSongController::_set_kBPM(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSongController::_set_kBPM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PatternFightSongController", "kBPM", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kPhaseLengthInBeats
float GlobalNamespace::PatternFightSongController::_get_kPhaseLengthInBeats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSongController::_get_kPhaseLengthInBeats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "PatternFightSongController", "kPhaseLengthInBeats"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kPhaseLengthInBeats
void GlobalNamespace::PatternFightSongController::_set_kPhaseLengthInBeats(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSongController::_set_kPhaseLengthInBeats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PatternFightSongController", "kPhaseLengthInBeats", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly AudioTimeSyncController _audioTimeSyncController
::GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::PatternFightSongController::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSongController::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectManager _beatmapObjectManager
::GlobalNamespace::BeatmapObjectManager*& GlobalNamespace::PatternFightSongController::dyn__beatmapObjectManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSongController::dyn__beatmapObjectManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapObjectManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PatternFightSongController/InitData _initData
::GlobalNamespace::PatternFightSongController::InitData*& GlobalNamespace::PatternFightSongController::dyn__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSongController::dyn__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PatternFightSongController::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapData _beatmapData
::GlobalNamespace::BeatmapData*& GlobalNamespace::PatternFightSongController::dyn__beatmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSongController::dyn__beatmapData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PatternFightSongController/GameplayPhase _gameplayPhase
::GlobalNamespace::PatternFightSongController::GameplayPhase& GlobalNamespace::PatternFightSongController::dyn__gameplayPhase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSongController::dyn__gameplayPhase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayPhase"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PatternFightSongController::GameplayPhase*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _gameplayPhaseNumber
int& GlobalNamespace::PatternFightSongController::dyn__gameplayPhaseNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSongController::dyn__gameplayPhaseNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayPhaseNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<NoteData> _thisPlayerSourcePatternNoteData
::System::Collections::Generic::HashSet_1<::GlobalNamespace::NoteData*>*& GlobalNamespace::PatternFightSongController::dyn__thisPlayerSourcePatternNoteData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSongController::dyn__thisPlayerSourcePatternNoteData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_thisPlayerSourcePatternNoteData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::GlobalNamespace::NoteData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<NoteData> _thisPlayerDefinedPatternNoteData
::System::Collections::Generic::HashSet_1<::GlobalNamespace::NoteData*>*& GlobalNamespace::PatternFightSongController::dyn__thisPlayerDefinedPatternNoteData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSongController::dyn__thisPlayerDefinedPatternNoteData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_thisPlayerDefinedPatternNoteData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::GlobalNamespace::NoteData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PatternFightSongController.Start
void GlobalNamespace::PatternFightSongController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSongController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PatternFightSongController.OnDestroy
void GlobalNamespace::PatternFightSongController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSongController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PatternFightSongController.Update
void GlobalNamespace::PatternFightSongController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSongController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PatternFightSongController.HandleNoteWasCut
void GlobalNamespace::PatternFightSongController::HandleNoteWasCut(::GlobalNamespace::NoteController* noteController, ByRef<::GlobalNamespace::NoteCutInfo> noteCutInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSongController::HandleNoteWasCut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteWasCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController), ::il2cpp_utils::ExtractType(noteCutInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteController, byref(noteCutInfo));
}
// Autogenerated method: PatternFightSongController.NoteWasMissed
void GlobalNamespace::PatternFightSongController::NoteWasMissed(::GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSongController::NoteWasMissed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteWasMissed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: PatternFightSongController.CreatePattern
void GlobalNamespace::PatternFightSongController::CreatePattern(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSongController::CreatePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: PatternFightSongController.StartSong
void GlobalNamespace::PatternFightSongController::StartSong(float startTimeOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSongController::StartSong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startTimeOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startTimeOffset);
}
// Autogenerated method: PatternFightSongController.StopSong
void GlobalNamespace::PatternFightSongController::StopSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSongController::StopSong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PatternFightSongController.PauseSong
void GlobalNamespace::PatternFightSongController::PauseSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSongController::PauseSong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PauseSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PatternFightSongController.ResumeSong
void GlobalNamespace::PatternFightSongController::ResumeSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSongController::ResumeSong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResumeSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PatternFightSongController/InitData
#include "GlobalNamespace/PatternFightSongController_InitData.hpp"
// Including type: BeatmapData
#include "GlobalNamespace/BeatmapData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly BeatmapData beatmapData
::GlobalNamespace::BeatmapData*& GlobalNamespace::PatternFightSongController::InitData::dyn_beatmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSongController::InitData::dyn_beatmapData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PatternFightSongController/GameplayPhase
#include "GlobalNamespace/PatternFightSongController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PatternFightSongController/GameplayPhase Undefined
::GlobalNamespace::PatternFightSongController::GameplayPhase GlobalNamespace::PatternFightSongController::GameplayPhase::_get_Undefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSongController::GameplayPhase::_get_Undefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PatternFightSongController::GameplayPhase>("", "PatternFightSongController/GameplayPhase", "Undefined"));
}
// Autogenerated static field setter
// Set static field: static public PatternFightSongController/GameplayPhase Undefined
void GlobalNamespace::PatternFightSongController::GameplayPhase::_set_Undefined(::GlobalNamespace::PatternFightSongController::GameplayPhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSongController::GameplayPhase::_set_Undefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PatternFightSongController/GameplayPhase", "Undefined", value));
}
// Autogenerated static field getter
// Get static field: static public PatternFightSongController/GameplayPhase Start
::GlobalNamespace::PatternFightSongController::GameplayPhase GlobalNamespace::PatternFightSongController::GameplayPhase::_get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSongController::GameplayPhase::_get_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PatternFightSongController::GameplayPhase>("", "PatternFightSongController/GameplayPhase", "Start"));
}
// Autogenerated static field setter
// Set static field: static public PatternFightSongController/GameplayPhase Start
void GlobalNamespace::PatternFightSongController::GameplayPhase::_set_Start(::GlobalNamespace::PatternFightSongController::GameplayPhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSongController::GameplayPhase::_set_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PatternFightSongController/GameplayPhase", "Start", value));
}
// Autogenerated static field getter
// Get static field: static public PatternFightSongController/GameplayPhase DefineThisPlayerPattern
::GlobalNamespace::PatternFightSongController::GameplayPhase GlobalNamespace::PatternFightSongController::GameplayPhase::_get_DefineThisPlayerPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSongController::GameplayPhase::_get_DefineThisPlayerPattern");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PatternFightSongController::GameplayPhase>("", "PatternFightSongController/GameplayPhase", "DefineThisPlayerPattern"));
}
// Autogenerated static field setter
// Set static field: static public PatternFightSongController/GameplayPhase DefineThisPlayerPattern
void GlobalNamespace::PatternFightSongController::GameplayPhase::_set_DefineThisPlayerPattern(::GlobalNamespace::PatternFightSongController::GameplayPhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSongController::GameplayPhase::_set_DefineThisPlayerPattern");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PatternFightSongController/GameplayPhase", "DefineThisPlayerPattern", value));
}
// Autogenerated static field getter
// Get static field: static public PatternFightSongController/GameplayPhase ReplayThisPlayerPattern
::GlobalNamespace::PatternFightSongController::GameplayPhase GlobalNamespace::PatternFightSongController::GameplayPhase::_get_ReplayThisPlayerPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSongController::GameplayPhase::_get_ReplayThisPlayerPattern");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::PatternFightSongController::GameplayPhase>("", "PatternFightSongController/GameplayPhase", "ReplayThisPlayerPattern"));
}
// Autogenerated static field setter
// Set static field: static public PatternFightSongController/GameplayPhase ReplayThisPlayerPattern
void GlobalNamespace::PatternFightSongController::GameplayPhase::_set_ReplayThisPlayerPattern(::GlobalNamespace::PatternFightSongController::GameplayPhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSongController::GameplayPhase::_set_ReplayThisPlayerPattern");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PatternFightSongController/GameplayPhase", "ReplayThisPlayerPattern", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::PatternFightSongController::GameplayPhase::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PatternFightSongController::GameplayPhase::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongController
#include "GlobalNamespace/SongController.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action songDidFinishEvent
::System::Action*& GlobalNamespace::SongController::dyn_songDidFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongController::dyn_songDidFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songDidFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SongController.add_songDidFinishEvent
void GlobalNamespace::SongController::add_songDidFinishEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongController::add_songDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_songDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SongController.remove_songDidFinishEvent
void GlobalNamespace::SongController::remove_songDidFinishEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongController::remove_songDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_songDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SongController.SendSongDidFinishEvent
void GlobalNamespace::SongController::SendSongDidFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongController::SendSongDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendSongDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongController.StopSong
void GlobalNamespace::SongController::StopSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongController::StopSong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongController.PauseSong
void GlobalNamespace::SongController::PauseSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongController::PauseSong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PauseSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongController.ResumeSong
void GlobalNamespace::SongController::ResumeSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongController::ResumeSong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResumeSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IntroTutorialController
#include "GlobalNamespace/IntroTutorialController.hpp"
// Including type: IntroTutorialController/<ShowFinishAnimationCoroutine>d__22
#include "GlobalNamespace/IntroTutorialController_-ShowFinishAnimationCoroutine-d__22.hpp"
// Including type: IntroTutorialRing
#include "GlobalNamespace/IntroTutorialRing.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: BloomFogEnvironmentParams
#include "GlobalNamespace/BloomFogEnvironmentParams.hpp"
// Including type: BloomFogParamsAnimator
#include "GlobalNamespace/BloomFogParamsAnimator.hpp"
// Including type: IGamePause
#include "GlobalNamespace/IGamePause.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private IntroTutorialRing _redRing
::GlobalNamespace::IntroTutorialRing*& GlobalNamespace::IntroTutorialController::dyn__redRing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialController::dyn__redRing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_redRing"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IntroTutorialRing**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IntroTutorialRing _blueRing
::GlobalNamespace::IntroTutorialRing*& GlobalNamespace::IntroTutorialController::dyn__blueRing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialController::dyn__blueRing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blueRing"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IntroTutorialRing**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _redRingWrapper
::UnityEngine::GameObject*& GlobalNamespace::IntroTutorialController::dyn__redRingWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialController::dyn__redRingWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_redRingWrapper"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _blueRingWrapper
::UnityEngine::GameObject*& GlobalNamespace::IntroTutorialController::dyn__blueRingWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialController::dyn__blueRingWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blueRingWrapper"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CanvasGroup _textCanvasGroup
::UnityEngine::CanvasGroup*& GlobalNamespace::IntroTutorialController::dyn__textCanvasGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialController::dyn__textCanvasGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textCanvasGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::CanvasGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _shockWavePS
::UnityEngine::ParticleSystem*& GlobalNamespace::IntroTutorialController::dyn__shockWavePS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialController::dyn__shockWavePS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shockWavePS"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomFogEnvironmentParams _finishForParams
::GlobalNamespace::BloomFogEnvironmentParams*& GlobalNamespace::IntroTutorialController::dyn__finishForParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialController::dyn__finishForParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finishForParams"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BloomFogEnvironmentParams**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BloomFogParamsAnimator _bloomFogAnimator
::GlobalNamespace::BloomFogParamsAnimator*& GlobalNamespace::IntroTutorialController::dyn__bloomFogAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialController::dyn__bloomFogAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomFogAnimator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BloomFogParamsAnimator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IGamePause _gamePause
::GlobalNamespace::IGamePause*& GlobalNamespace::IntroTutorialController::dyn__gamePause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialController::dyn__gamePause");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gamePause"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IGamePause**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action introTutorialDidFinishEvent
::System::Action*& GlobalNamespace::IntroTutorialController::dyn_introTutorialDidFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialController::dyn_introTutorialDidFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "introTutorialDidFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _showingFinishAnimation
bool& GlobalNamespace::IntroTutorialController::dyn__showingFinishAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialController::dyn__showingFinishAnimation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_showingFinishAnimation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _redRingWrapperActive
bool& GlobalNamespace::IntroTutorialController::dyn__redRingWrapperActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialController::dyn__redRingWrapperActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_redRingWrapperActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _blueRingWrapperActive
bool& GlobalNamespace::IntroTutorialController::dyn__blueRingWrapperActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialController::dyn__blueRingWrapperActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blueRingWrapperActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: IntroTutorialController.add_introTutorialDidFinishEvent
void GlobalNamespace::IntroTutorialController::add_introTutorialDidFinishEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialController::add_introTutorialDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_introTutorialDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IntroTutorialController.remove_introTutorialDidFinishEvent
void GlobalNamespace::IntroTutorialController::remove_introTutorialDidFinishEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialController::remove_introTutorialDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_introTutorialDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IntroTutorialController.Start
void GlobalNamespace::IntroTutorialController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IntroTutorialController.OnDestroy
void GlobalNamespace::IntroTutorialController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IntroTutorialController.Update
void GlobalNamespace::IntroTutorialController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IntroTutorialController.CleanUp
void GlobalNamespace::IntroTutorialController::CleanUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialController::CleanUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IntroTutorialController.HandleGameDidPause
void GlobalNamespace::IntroTutorialController::HandleGameDidPause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialController::HandleGameDidPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameDidPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IntroTutorialController.HandlegameDidResume
void GlobalNamespace::IntroTutorialController::HandlegameDidResume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialController::HandlegameDidResume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlegameDidResume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IntroTutorialController.ShowFinishAnimation
void GlobalNamespace::IntroTutorialController::ShowFinishAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialController::ShowFinishAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowFinishAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IntroTutorialController.ShowFinishAnimationCoroutine
::System::Collections::IEnumerator* GlobalNamespace::IntroTutorialController::ShowFinishAnimationCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialController::ShowFinishAnimationCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowFinishAnimationCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: IntroTutorialController.SetFinishAnimationParams
void GlobalNamespace::IntroTutorialController::SetFinishAnimationParams(float progress) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialController::SetFinishAnimationParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFinishAnimationParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(progress)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, progress);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: IntroTutorialController/<ShowFinishAnimationCoroutine>d__22
#include "GlobalNamespace/IntroTutorialController_-ShowFinishAnimationCoroutine-d__22.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public IntroTutorialController <>4__this
::GlobalNamespace::IntroTutorialController*& GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IntroTutorialController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <elapsedTime>5__2
float& GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::dyn_$elapsedTime$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::dyn_$elapsedTime$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<elapsedTime>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <duration>5__3
float& GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::dyn_$duration$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::dyn_$duration$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<duration>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: IntroTutorialController/<ShowFinishAnimationCoroutine>d__22.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: IntroTutorialController/<ShowFinishAnimationCoroutine>d__22.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: IntroTutorialController/<ShowFinishAnimationCoroutine>d__22.System.IDisposable.Dispose
void GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IntroTutorialController/<ShowFinishAnimationCoroutine>d__22.MoveNext
bool GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IntroTutorialController/<ShowFinishAnimationCoroutine>d__22.System.Collections.IEnumerator.Reset
void GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IntroTutorialRing
#include "GlobalNamespace/IntroTutorialRing.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: ColorManager
#include "GlobalNamespace/ColorManager.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image[] _progressImages
::ArrayW<::UnityEngine::UI::Image*>& GlobalNamespace::IntroTutorialRing::dyn__progressImages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialRing::dyn__progressImages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_progressImages"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::UI::Image*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SaberType _saberType
::GlobalNamespace::SaberType& GlobalNamespace::IntroTutorialRing::dyn__saberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialRing::dyn__saberType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SaberType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _particleSystem
::UnityEngine::ParticleSystem*& GlobalNamespace::IntroTutorialRing::dyn__particleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialRing::dyn__particleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particleSystem"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CanvasGroup _canvasGroup
::UnityEngine::CanvasGroup*& GlobalNamespace::IntroTutorialRing::dyn__canvasGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialRing::dyn__canvasGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvasGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::CanvasGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _activationDuration
float& GlobalNamespace::IntroTutorialRing::dyn__activationDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialRing::dyn__activationDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activationDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image[] _ringGLowImages
::ArrayW<::UnityEngine::UI::Image*>& GlobalNamespace::IntroTutorialRing::dyn__ringGLowImages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialRing::dyn__ringGLowImages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ringGLowImages"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::UI::Image*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ColorManager _colorManager
::GlobalNamespace::ColorManager*& GlobalNamespace::IntroTutorialRing::dyn__colorManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialRing::dyn__colorManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _highlighted
bool& GlobalNamespace::IntroTutorialRing::dyn__highlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialRing::dyn__highlighted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlighted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _emitNextParticleTimer
float& GlobalNamespace::IntroTutorialRing::dyn__emitNextParticleTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialRing::dyn__emitNextParticleTimer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_emitNextParticleTimer"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _activationProgress
float& GlobalNamespace::IntroTutorialRing::dyn__activationProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialRing::dyn__activationProgress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activationProgress"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<SaberType> _sabersInside
::System::Collections::Generic::HashSet_1<::GlobalNamespace::SaberType>*& GlobalNamespace::IntroTutorialRing::dyn__sabersInside() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialRing::dyn__sabersInside");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sabersInside"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<::GlobalNamespace::SaberType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sabersInsideAfterOnEnable
bool& GlobalNamespace::IntroTutorialRing::dyn__sabersInsideAfterOnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialRing::dyn__sabersInsideAfterOnEnable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sabersInsideAfterOnEnable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: IntroTutorialRing.set_alpha
void GlobalNamespace::IntroTutorialRing::set_alpha(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialRing::set_alpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_alpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IntroTutorialRing.get_fullyActivated
bool GlobalNamespace::IntroTutorialRing::get_fullyActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialRing::get_fullyActivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fullyActivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IntroTutorialRing.get_saberType
::GlobalNamespace::SaberType GlobalNamespace::IntroTutorialRing::get_saberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialRing::get_saberType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_saberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::SaberType, false>(this, ___internal__method);
}
// Autogenerated method: IntroTutorialRing.set_saberType
void GlobalNamespace::IntroTutorialRing::set_saberType(::GlobalNamespace::SaberType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialRing::set_saberType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_saberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IntroTutorialRing.Start
void GlobalNamespace::IntroTutorialRing::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialRing::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IntroTutorialRing.OnEnable
void GlobalNamespace::IntroTutorialRing::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialRing::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IntroTutorialRing.Update
void GlobalNamespace::IntroTutorialRing::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialRing::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IntroTutorialRing.SetProgressImagesfillAmount
void GlobalNamespace::IntroTutorialRing::SetProgressImagesfillAmount(float fillAmount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialRing::SetProgressImagesfillAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetProgressImagesfillAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fillAmount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fillAmount);
}
// Autogenerated method: IntroTutorialRing.OnTriggerEnter
void GlobalNamespace::IntroTutorialRing::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialRing::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: IntroTutorialRing.OnTriggerExit
void GlobalNamespace::IntroTutorialRing::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialRing::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: IntroTutorialRing.OnTriggerStay
void GlobalNamespace::IntroTutorialRing::OnTriggerStay(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IntroTutorialRing::OnTriggerStay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerStay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TextFadeTransitions
#include "GlobalNamespace/TextFadeTransitions.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _textLabel
::TMPro::TextMeshProUGUI*& GlobalNamespace::TextFadeTransitions::dyn__textLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TextFadeTransitions::dyn__textLabel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textLabel"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CanvasGroup _canvasGroup
::UnityEngine::CanvasGroup*& GlobalNamespace::TextFadeTransitions::dyn__canvasGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TextFadeTransitions::dyn__canvasGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvasGroup"))->offset;
  return *reinterpret_cast<::UnityEngine::CanvasGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _fadeDuration
float& GlobalNamespace::TextFadeTransitions::dyn__fadeDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TextFadeTransitions::dyn__fadeDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TextFadeTransitions/State _state
::GlobalNamespace::TextFadeTransitions::State& GlobalNamespace::TextFadeTransitions::dyn__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TextFadeTransitions::dyn__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TextFadeTransitions::State*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _nextText
::StringW& GlobalNamespace::TextFadeTransitions::dyn__nextText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TextFadeTransitions::dyn__nextText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nextText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _fade
float& GlobalNamespace::TextFadeTransitions::dyn__fade() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TextFadeTransitions::dyn__fade");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fade"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TextFadeTransitions.Awake
void GlobalNamespace::TextFadeTransitions::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TextFadeTransitions::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TextFadeTransitions.Update
void GlobalNamespace::TextFadeTransitions::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TextFadeTransitions::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TextFadeTransitions.RefreshState
void GlobalNamespace::TextFadeTransitions::RefreshState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TextFadeTransitions::RefreshState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TextFadeTransitions.RefreshTextAlpha
void GlobalNamespace::TextFadeTransitions::RefreshTextAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TextFadeTransitions::RefreshTextAlpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshTextAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TextFadeTransitions.ShowText
void GlobalNamespace::TextFadeTransitions::ShowText(::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TextFadeTransitions::ShowText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TextFadeTransitions/State
#include "GlobalNamespace/TextFadeTransitions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TextFadeTransitions/State NotInTransition
::GlobalNamespace::TextFadeTransitions::State GlobalNamespace::TextFadeTransitions::State::_get_NotInTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TextFadeTransitions::State::_get_NotInTransition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TextFadeTransitions::State>("", "TextFadeTransitions/State", "NotInTransition"));
}
// Autogenerated static field setter
// Set static field: static public TextFadeTransitions/State NotInTransition
void GlobalNamespace::TextFadeTransitions::State::_set_NotInTransition(::GlobalNamespace::TextFadeTransitions::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TextFadeTransitions::State::_set_NotInTransition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TextFadeTransitions/State", "NotInTransition", value));
}
// Autogenerated static field getter
// Get static field: static public TextFadeTransitions/State FadingOut
::GlobalNamespace::TextFadeTransitions::State GlobalNamespace::TextFadeTransitions::State::_get_FadingOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TextFadeTransitions::State::_get_FadingOut");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TextFadeTransitions::State>("", "TextFadeTransitions/State", "FadingOut"));
}
// Autogenerated static field setter
// Set static field: static public TextFadeTransitions/State FadingOut
void GlobalNamespace::TextFadeTransitions::State::_set_FadingOut(::GlobalNamespace::TextFadeTransitions::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TextFadeTransitions::State::_set_FadingOut");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TextFadeTransitions/State", "FadingOut", value));
}
// Autogenerated static field getter
// Get static field: static public TextFadeTransitions/State FadingIn
::GlobalNamespace::TextFadeTransitions::State GlobalNamespace::TextFadeTransitions::State::_get_FadingIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TextFadeTransitions::State::_get_FadingIn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::TextFadeTransitions::State>("", "TextFadeTransitions/State", "FadingIn"));
}
// Autogenerated static field setter
// Set static field: static public TextFadeTransitions/State FadingIn
void GlobalNamespace::TextFadeTransitions::State::_set_FadingIn(::GlobalNamespace::TextFadeTransitions::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TextFadeTransitions::State::_set_FadingIn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TextFadeTransitions/State", "FadingIn", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::TextFadeTransitions::State::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TextFadeTransitions::State::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialController
#include "GlobalNamespace/TutorialController.hpp"
// Including type: TutorialController/<OutroCoroutine>d__13
#include "GlobalNamespace/TutorialController_-OutroCoroutine-d__13.hpp"
// Including type: TutorialSongController
#include "GlobalNamespace/TutorialSongController.hpp"
// Including type: IntroTutorialController
#include "GlobalNamespace/IntroTutorialController.hpp"
// Including type: AudioFading
#include "GlobalNamespace/AudioFading.hpp"
// Including type: TutorialScenesTransitionSetupDataSO
#include "GlobalNamespace/TutorialScenesTransitionSetupDataSO.hpp"
// Including type: Signal
#include "GlobalNamespace/Signal.hpp"
// Including type: PauseController
#include "GlobalNamespace/PauseController.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TutorialSongController _tutorialSongController
::GlobalNamespace::TutorialSongController*& GlobalNamespace::TutorialController::dyn__tutorialSongController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialController::dyn__tutorialSongController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tutorialSongController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TutorialSongController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IntroTutorialController _introTutorialController
::GlobalNamespace::IntroTutorialController*& GlobalNamespace::TutorialController::dyn__introTutorialController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialController::dyn__introTutorialController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_introTutorialController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IntroTutorialController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AudioFading _audioFading
::GlobalNamespace::AudioFading*& GlobalNamespace::TutorialController::dyn__audioFading() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialController::dyn__audioFading");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioFading"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioFading**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TutorialScenesTransitionSetupDataSO _tutorialSceneSetupData
::GlobalNamespace::TutorialScenesTransitionSetupDataSO*& GlobalNamespace::TutorialController::dyn__tutorialSceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialController::dyn__tutorialSceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tutorialSceneSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TutorialScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Signal _tutorialIntroStartedSignal
::GlobalNamespace::Signal*& GlobalNamespace::TutorialController::dyn__tutorialIntroStartedSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialController::dyn__tutorialIntroStartedSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tutorialIntroStartedSignal"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Signal _tutorialFinishedSignal
::GlobalNamespace::Signal*& GlobalNamespace::TutorialController::dyn__tutorialFinishedSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialController::dyn__tutorialFinishedSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tutorialFinishedSignal"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PauseController _pauseController
::GlobalNamespace::PauseController*& GlobalNamespace::TutorialController::dyn__pauseController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialController::dyn__pauseController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pauseController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PauseController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _paused
bool& GlobalNamespace::TutorialController::dyn__paused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialController::dyn__paused");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_paused"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _doingOutroTransition
bool& GlobalNamespace::TutorialController::dyn__doingOutroTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialController::dyn__doingOutroTransition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_doingOutroTransition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TutorialController.Start
void GlobalNamespace::TutorialController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialController.OnDestroy
void GlobalNamespace::TutorialController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialController.HandleIntroTutorialDidFinishEvent
void GlobalNamespace::TutorialController::HandleIntroTutorialDidFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialController::HandleIntroTutorialDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleIntroTutorialDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialController.HandleTutorialSongControllerSongDidFinishEvent
void GlobalNamespace::TutorialController::HandleTutorialSongControllerSongDidFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialController::HandleTutorialSongControllerSongDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleTutorialSongControllerSongDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialController.OutroCoroutine
::System::Collections::IEnumerator* GlobalNamespace::TutorialController::OutroCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialController::OutroCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OutroCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialController.HandlePauseControllerCanPause
void GlobalNamespace::TutorialController::HandlePauseControllerCanPause(::System::Action_1<bool>* canPause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialController::HandlePauseControllerCanPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePauseControllerCanPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(canPause)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, canPause);
}
// Autogenerated method: TutorialController.HandlePauseControllerDidPause
void GlobalNamespace::TutorialController::HandlePauseControllerDidPause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialController::HandlePauseControllerDidPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePauseControllerDidPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialController.HandlePauseControllerDidResume
void GlobalNamespace::TutorialController::HandlePauseControllerDidResume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialController::HandlePauseControllerDidResume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePauseControllerDidResume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TutorialController/<OutroCoroutine>d__13
#include "GlobalNamespace/TutorialController_-OutroCoroutine-d__13.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::TutorialController::$OutroCoroutine$d__13::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialController::$OutroCoroutine$d__13::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::TutorialController::$OutroCoroutine$d__13::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialController::$OutroCoroutine$d__13::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TutorialController <>4__this
::GlobalNamespace::TutorialController*& GlobalNamespace::TutorialController::$OutroCoroutine$d__13::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialController::$OutroCoroutine$d__13::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TutorialController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TutorialController/<OutroCoroutine>d__13.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TutorialController::$OutroCoroutine$d__13::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialController::$OutroCoroutine$d__13::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialController/<OutroCoroutine>d__13.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TutorialController::$OutroCoroutine$d__13::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialController::$OutroCoroutine$d__13::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialController/<OutroCoroutine>d__13.System.IDisposable.Dispose
void GlobalNamespace::TutorialController::$OutroCoroutine$d__13::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialController::$OutroCoroutine$d__13::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialController/<OutroCoroutine>d__13.MoveNext
bool GlobalNamespace::TutorialController::$OutroCoroutine$d__13::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialController::$OutroCoroutine$d__13::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TutorialController/<OutroCoroutine>d__13.System.Collections.IEnumerator.Reset
void GlobalNamespace::TutorialController::$OutroCoroutine$d__13::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialController::$OutroCoroutine$d__13::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialNoteCutEffectSpawner
#include "GlobalNamespace/TutorialNoteCutEffectSpawner.hpp"
// Including type: FlyingTextSpawner
#include "GlobalNamespace/FlyingTextSpawner.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private FlyingTextSpawner _failFlyingTextSpawner
::GlobalNamespace::FlyingTextSpawner*& GlobalNamespace::TutorialNoteCutEffectSpawner::dyn__failFlyingTextSpawner() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialNoteCutEffectSpawner::dyn__failFlyingTextSpawner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_failFlyingTextSpawner"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FlyingTextSpawner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectManager _beatmapObjectManager
::GlobalNamespace::BeatmapObjectManager*& GlobalNamespace::TutorialNoteCutEffectSpawner::dyn__beatmapObjectManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialNoteCutEffectSpawner::dyn__beatmapObjectManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapObjectManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TutorialNoteCutEffectSpawner.Start
void GlobalNamespace::TutorialNoteCutEffectSpawner::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialNoteCutEffectSpawner::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialNoteCutEffectSpawner.OnDestroy
void GlobalNamespace::TutorialNoteCutEffectSpawner::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialNoteCutEffectSpawner::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialNoteCutEffectSpawner.HandleNoteWasCut
void GlobalNamespace::TutorialNoteCutEffectSpawner::HandleNoteWasCut(::GlobalNamespace::NoteController* noteController, ByRef<::GlobalNamespace::NoteCutInfo> noteCutInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialNoteCutEffectSpawner::HandleNoteWasCut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteWasCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController), ::il2cpp_utils::ExtractType(noteCutInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteController, byref(noteCutInfo));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialPause
#include "GlobalNamespace/TutorialPause.hpp"
// Including type: TutorialSongController
#include "GlobalNamespace/TutorialSongController.hpp"
// Including type: SaberManager
#include "GlobalNamespace/SaberManager.hpp"
// Including type: AudioListenerController
#include "GlobalNamespace/AudioListenerController.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly TutorialSongController _tutorialSongController
::GlobalNamespace::TutorialSongController*& GlobalNamespace::TutorialPause::dyn__tutorialSongController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialPause::dyn__tutorialSongController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tutorialSongController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TutorialSongController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SaberManager _saberManager
::GlobalNamespace::SaberManager*& GlobalNamespace::TutorialPause::dyn__saberManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialPause::dyn__saberManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SaberManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AudioListenerController _audioListenerController
::GlobalNamespace::AudioListenerController*& GlobalNamespace::TutorialPause::dyn__audioListenerController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialPause::dyn__audioListenerController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioListenerController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioListenerController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action didPauseEvent
::System::Action*& GlobalNamespace::TutorialPause::dyn_didPauseEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialPause::dyn_didPauseEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didPauseEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action willResumeEvent
::System::Action*& GlobalNamespace::TutorialPause::dyn_willResumeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialPause::dyn_willResumeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "willResumeEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action didResumeEvent
::System::Action*& GlobalNamespace::TutorialPause::dyn_didResumeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialPause::dyn_didResumeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didResumeEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _pause
bool& GlobalNamespace::TutorialPause::dyn__pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialPause::dyn__pause");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pause"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TutorialPause.get_isPaused
bool GlobalNamespace::TutorialPause::get_isPaused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialPause::get_isPaused");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPaused", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TutorialPause.add_didPauseEvent
void GlobalNamespace::TutorialPause::add_didPauseEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialPause::add_didPauseEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didPauseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TutorialPause.remove_didPauseEvent
void GlobalNamespace::TutorialPause::remove_didPauseEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialPause::remove_didPauseEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didPauseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TutorialPause.add_willResumeEvent
void GlobalNamespace::TutorialPause::add_willResumeEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialPause::add_willResumeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_willResumeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TutorialPause.remove_willResumeEvent
void GlobalNamespace::TutorialPause::remove_willResumeEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialPause::remove_willResumeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_willResumeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TutorialPause.add_didResumeEvent
void GlobalNamespace::TutorialPause::add_didResumeEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialPause::add_didResumeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didResumeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TutorialPause.remove_didResumeEvent
void GlobalNamespace::TutorialPause::remove_didResumeEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialPause::remove_didResumeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didResumeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TutorialPause.Pause
void GlobalNamespace::TutorialPause::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialPause::Pause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialPause.WillResume
void GlobalNamespace::TutorialPause::WillResume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialPause::WillResume");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WillResume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialPause.Resume
void GlobalNamespace::TutorialPause::Resume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialPause::Resume");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Resume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialSongController
#include "GlobalNamespace/TutorialSongController.hpp"
// Including type: TutorialSongController/InitData
#include "GlobalNamespace/TutorialSongController_InitData.hpp"
// Including type: TutorialSongController/TutorialObjectSpawnData
#include "GlobalNamespace/TutorialSongController_TutorialObjectSpawnData.hpp"
// Including type: TutorialSongController/TutorialJumpingNoteSpawnData
#include "GlobalNamespace/TutorialSongController_TutorialJumpingNoteSpawnData.hpp"
// Including type: TutorialSongController/TutorialBasicNoteSpawnData
#include "GlobalNamespace/TutorialSongController_TutorialBasicNoteSpawnData.hpp"
// Including type: TutorialSongController/TutorialBombNoteSpawnData
#include "GlobalNamespace/TutorialSongController_TutorialBombNoteSpawnData.hpp"
// Including type: TutorialSongController/TutorialObstacleSpawnData
#include "GlobalNamespace/TutorialSongController_TutorialObstacleSpawnData.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: Signal
#include "GlobalNamespace/Signal.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: BeatmapData
#include "GlobalNamespace/BeatmapData.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
// Including type: ObstacleController
#include "GlobalNamespace/ObstacleController.hpp"
// Including type: ObstacleData
#include "GlobalNamespace/ObstacleData.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AudioTimeSyncController _audioTimeSyncController
::GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::TutorialSongController::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _startWaitTimeInBeats
int& GlobalNamespace::TutorialSongController::dyn__startWaitTimeInBeats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::dyn__startWaitTimeInBeats");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startWaitTimeInBeats"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _numberOfBeatsToSnap
int& GlobalNamespace::TutorialSongController::dyn__numberOfBeatsToSnap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::dyn__numberOfBeatsToSnap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberOfBeatsToSnap"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _obstacleDurationInBeats
int& GlobalNamespace::TutorialSongController::dyn__obstacleDurationInBeats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::dyn__obstacleDurationInBeats");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obstacleDurationInBeats"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Signal _noteCuttingTutorialPartDidStartSignal
::GlobalNamespace::Signal*& GlobalNamespace::TutorialSongController::dyn__noteCuttingTutorialPartDidStartSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::dyn__noteCuttingTutorialPartDidStartSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteCuttingTutorialPartDidStartSignal"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Signal _noteCuttingInAnyDirectionDidStartSignal
::GlobalNamespace::Signal*& GlobalNamespace::TutorialSongController::dyn__noteCuttingInAnyDirectionDidStartSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::dyn__noteCuttingInAnyDirectionDidStartSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteCuttingInAnyDirectionDidStartSignal"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Signal _bombCuttingTutorialPartDidStartSignal
::GlobalNamespace::Signal*& GlobalNamespace::TutorialSongController::dyn__bombCuttingTutorialPartDidStartSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::dyn__bombCuttingTutorialPartDidStartSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bombCuttingTutorialPartDidStartSignal"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Signal _leftObstacleTutorialPartDidStartSignal
::GlobalNamespace::Signal*& GlobalNamespace::TutorialSongController::dyn__leftObstacleTutorialPartDidStartSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::dyn__leftObstacleTutorialPartDidStartSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftObstacleTutorialPartDidStartSignal"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Signal _rightObstacleTutorialPartDidStartSignal
::GlobalNamespace::Signal*& GlobalNamespace::TutorialSongController::dyn__rightObstacleTutorialPartDidStartSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::dyn__rightObstacleTutorialPartDidStartSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightObstacleTutorialPartDidStartSignal"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Signal _topObstacleTutorialPartDidStartSignal
::GlobalNamespace::Signal*& GlobalNamespace::TutorialSongController::dyn__topObstacleTutorialPartDidStartSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::dyn__topObstacleTutorialPartDidStartSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_topObstacleTutorialPartDidStartSignal"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Signal _noteWasCutOKSignal
::GlobalNamespace::Signal*& GlobalNamespace::TutorialSongController::dyn__noteWasCutOKSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::dyn__noteWasCutOKSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteWasCutOKSignal"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Signal _noteWasCutTooSoonSignal
::GlobalNamespace::Signal*& GlobalNamespace::TutorialSongController::dyn__noteWasCutTooSoonSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::dyn__noteWasCutTooSoonSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteWasCutTooSoonSignal"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Signal _noteWasCutWithWrongColorSignal
::GlobalNamespace::Signal*& GlobalNamespace::TutorialSongController::dyn__noteWasCutWithWrongColorSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::dyn__noteWasCutWithWrongColorSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteWasCutWithWrongColorSignal"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Signal _noteWasCutFromDifferentDirectionSignal
::GlobalNamespace::Signal*& GlobalNamespace::TutorialSongController::dyn__noteWasCutFromDifferentDirectionSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::dyn__noteWasCutFromDifferentDirectionSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteWasCutFromDifferentDirectionSignal"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Signal _noteWasCutWithSlowSpeedSignal
::GlobalNamespace::Signal*& GlobalNamespace::TutorialSongController::dyn__noteWasCutWithSlowSpeedSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::dyn__noteWasCutWithSlowSpeedSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteWasCutWithSlowSpeedSignal"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Signal _bombWasCutSignal
::GlobalNamespace::Signal*& GlobalNamespace::TutorialSongController::dyn__bombWasCutSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::dyn__bombWasCutSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bombWasCutSignal"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly TutorialSongController/InitData _initData
::GlobalNamespace::TutorialSongController::InitData*& GlobalNamespace::TutorialSongController::dyn__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::dyn__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TutorialSongController::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectManager _beatmapObjectManager
::GlobalNamespace::BeatmapObjectManager*& GlobalNamespace::TutorialSongController::dyn__beatmapObjectManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::dyn__beatmapObjectManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapObjectManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _tutorialBeatmapObjectIndex
int& GlobalNamespace::TutorialSongController::dyn__tutorialBeatmapObjectIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::dyn__tutorialBeatmapObjectIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tutorialBeatmapObjectIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _prevSpawnedBeatmapObjectIndex
int& GlobalNamespace::TutorialSongController::dyn__prevSpawnedBeatmapObjectIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::dyn__prevSpawnedBeatmapObjectIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevSpawnedBeatmapObjectIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _songBpm
float& GlobalNamespace::TutorialSongController::dyn__songBpm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::dyn__songBpm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songBpm"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapData _beatmapData
::GlobalNamespace::BeatmapData*& GlobalNamespace::TutorialSongController::dyn__beatmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::dyn__beatmapData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TutorialSongController/TutorialObjectSpawnData[] _normalModeTutorialObjectsSpawnData
::ArrayW<::GlobalNamespace::TutorialSongController::TutorialObjectSpawnData*>& GlobalNamespace::TutorialSongController::dyn__normalModeTutorialObjectsSpawnData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::dyn__normalModeTutorialObjectsSpawnData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalModeTutorialObjectsSpawnData"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::TutorialSongController::TutorialObjectSpawnData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TutorialSongController.Awake
void GlobalNamespace::TutorialSongController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialSongController.Start
void GlobalNamespace::TutorialSongController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialSongController.OnDestroy
void GlobalNamespace::TutorialSongController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialSongController.StartSong
void GlobalNamespace::TutorialSongController::StartSong(float startTimeOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::StartSong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startTimeOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startTimeOffset);
}
// Autogenerated method: TutorialSongController.HandleNoteWasCut
void GlobalNamespace::TutorialSongController::HandleNoteWasCut(::GlobalNamespace::NoteController* noteController, ByRef<::GlobalNamespace::NoteCutInfo> noteCutInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::HandleNoteWasCut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteWasCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController), ::il2cpp_utils::ExtractType(noteCutInfo)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteController, byref(noteCutInfo));
}
// Autogenerated method: TutorialSongController.HandleNoteWasMissed
void GlobalNamespace::TutorialSongController::HandleNoteWasMissed(::GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::HandleNoteWasMissed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteWasMissed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: TutorialSongController.HandleObstacleDidPassThreeQuartersOfMove2
void GlobalNamespace::TutorialSongController::HandleObstacleDidPassThreeQuartersOfMove2(::GlobalNamespace::ObstacleController* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::HandleObstacleDidPassThreeQuartersOfMove2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleObstacleDidPassThreeQuartersOfMove2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obstacleController);
}
// Autogenerated method: TutorialSongController.UpdateBeatmapData
void GlobalNamespace::TutorialSongController::UpdateBeatmapData(float noteTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::UpdateBeatmapData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBeatmapData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, noteTime);
}
// Autogenerated method: TutorialSongController.GetNextBeatmapObjectTime
float GlobalNamespace::TutorialSongController::GetNextBeatmapObjectTime(int beatOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::GetNextBeatmapObjectTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextBeatmapObjectTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatOffset)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, beatOffset);
}
// Autogenerated method: TutorialSongController.CreateObstacleData
::GlobalNamespace::ObstacleData* GlobalNamespace::TutorialSongController::CreateObstacleData(float time, ::GlobalNamespace::TutorialSongController::TutorialObstacleSpawnData* tutorialObstacleSpawnData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::CreateObstacleData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateObstacleData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(tutorialObstacleSpawnData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ObstacleData*, false>(this, ___internal__method, time, tutorialObstacleSpawnData);
}
// Autogenerated method: TutorialSongController.CreateBasicNoteData
::GlobalNamespace::NoteData* GlobalNamespace::TutorialSongController::CreateBasicNoteData(float time, ::GlobalNamespace::TutorialSongController::TutorialBasicNoteSpawnData* tutorialBasicNoteSpawnData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::CreateBasicNoteData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateBasicNoteData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(tutorialBasicNoteSpawnData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteData*, false>(this, ___internal__method, time, tutorialBasicNoteSpawnData);
}
// Autogenerated method: TutorialSongController.CreateBombNoteData
::GlobalNamespace::NoteData* GlobalNamespace::TutorialSongController::CreateBombNoteData(float time, ::GlobalNamespace::TutorialSongController::TutorialBombNoteSpawnData* tutorialBombNoteSpawnData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::CreateBombNoteData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateBombNoteData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(tutorialBombNoteSpawnData)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::NoteData*, false>(this, ___internal__method, time, tutorialBombNoteSpawnData);
}
// Autogenerated method: TutorialSongController.StopSong
void GlobalNamespace::TutorialSongController::StopSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::StopSong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialSongController.PauseSong
void GlobalNamespace::TutorialSongController::PauseSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::PauseSong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PauseSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialSongController.ResumeSong
void GlobalNamespace::TutorialSongController::ResumeSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::ResumeSong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResumeSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialSongController/InitData
#include "GlobalNamespace/TutorialSongController_InitData.hpp"
// Including type: BeatmapData
#include "GlobalNamespace/BeatmapData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single songBpm
float& GlobalNamespace::TutorialSongController::InitData::dyn_songBpm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::InitData::dyn_songBpm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songBpm"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly BeatmapData beatmapData
::GlobalNamespace::BeatmapData*& GlobalNamespace::TutorialSongController::InitData::dyn_beatmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::InitData::dyn_beatmapData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatmapData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialSongController/TutorialObjectSpawnData
#include "GlobalNamespace/TutorialSongController_TutorialObjectSpawnData.hpp"
// Including type: Signal
#include "GlobalNamespace/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Signal signal
::GlobalNamespace::Signal*& GlobalNamespace::TutorialSongController::TutorialObjectSpawnData::dyn_signal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::TutorialObjectSpawnData::dyn_signal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "signal"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 beatOffset
int& GlobalNamespace::TutorialSongController::TutorialObjectSpawnData::dyn_beatOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::TutorialObjectSpawnData::dyn_beatOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 firstTimeBeatOffset
int& GlobalNamespace::TutorialSongController::TutorialObjectSpawnData::dyn_firstTimeBeatOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::TutorialObjectSpawnData::dyn_firstTimeBeatOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstTimeBeatOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 lineIndex
int& GlobalNamespace::TutorialSongController::TutorialObjectSpawnData::dyn_lineIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::TutorialObjectSpawnData::dyn_lineIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialSongController/TutorialJumpingNoteSpawnData
#include "GlobalNamespace/TutorialSongController_TutorialJumpingNoteSpawnData.hpp"
// Including type: Signal
#include "GlobalNamespace/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly NoteLineLayer noteLineLayer
::GlobalNamespace::NoteLineLayer& GlobalNamespace::TutorialSongController::TutorialJumpingNoteSpawnData::dyn_noteLineLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::TutorialJumpingNoteSpawnData::dyn_noteLineLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteLineLayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteLineLayer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialSongController/TutorialBasicNoteSpawnData
#include "GlobalNamespace/TutorialSongController_TutorialBasicNoteSpawnData.hpp"
// Including type: Signal
#include "GlobalNamespace/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly NoteCutDirection cutDirection
::GlobalNamespace::NoteCutDirection& GlobalNamespace::TutorialSongController::TutorialBasicNoteSpawnData::dyn_cutDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::TutorialBasicNoteSpawnData::dyn_cutDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cutDirection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteCutDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ColorType colorType
::GlobalNamespace::ColorType& GlobalNamespace::TutorialSongController::TutorialBasicNoteSpawnData::dyn_colorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::TutorialBasicNoteSpawnData::dyn_colorType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialSongController/TutorialBombNoteSpawnData
#include "GlobalNamespace/TutorialSongController_TutorialBombNoteSpawnData.hpp"
// Including type: Signal
#include "GlobalNamespace/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialSongController/TutorialObstacleSpawnData
#include "GlobalNamespace/TutorialSongController_TutorialObstacleSpawnData.hpp"
// Including type: Signal
#include "GlobalNamespace/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly NoteLineLayer noteLineLayer
::GlobalNamespace::NoteLineLayer& GlobalNamespace::TutorialSongController::TutorialObstacleSpawnData::dyn_noteLineLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::TutorialObstacleSpawnData::dyn_noteLineLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteLineLayer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteLineLayer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 width
int& GlobalNamespace::TutorialSongController::TutorialObstacleSpawnData::dyn_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::TutorialObstacleSpawnData::dyn_width");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "width"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 height
int& GlobalNamespace::TutorialSongController::TutorialObstacleSpawnData::dyn_height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialSongController::TutorialObstacleSpawnData::dyn_height");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "height"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AnchorIntoParent
#include "GlobalNamespace/AnchorIntoParent.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _parentTransform
::UnityEngine::Transform*& GlobalNamespace::AnchorIntoParent::dyn__parentTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorIntoParent::dyn__parentTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _positionOffset
::UnityEngine::Vector3& GlobalNamespace::AnchorIntoParent::dyn__positionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorIntoParent::dyn__positionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AnchorIntoParent.Start
void GlobalNamespace::AnchorIntoParent::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnchorIntoParent::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConditionalActivation
#include "GlobalNamespace/ConditionalActivation.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BoolSO _value
::GlobalNamespace::BoolSO*& GlobalNamespace::ConditionalActivation::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConditionalActivation::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _activateOnFalse
bool& GlobalNamespace::ConditionalActivation::dyn__activateOnFalse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConditionalActivation::dyn__activateOnFalse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activateOnFalse"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ConditionalActivation.Awake
void GlobalNamespace::ConditionalActivation::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConditionalActivation::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConditionalImageMaterialSwitcher
#include "GlobalNamespace/ConditionalImageMaterialSwitcher.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _material0
::UnityEngine::Material*& GlobalNamespace::ConditionalImageMaterialSwitcher::dyn__material0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConditionalImageMaterialSwitcher::dyn__material0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_material0"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _material1
::UnityEngine::Material*& GlobalNamespace::ConditionalImageMaterialSwitcher::dyn__material1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConditionalImageMaterialSwitcher::dyn__material1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_material1"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BoolSO _value
::GlobalNamespace::BoolSO*& GlobalNamespace::ConditionalImageMaterialSwitcher::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConditionalImageMaterialSwitcher::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _image
::UnityEngine::UI::Image*& GlobalNamespace::ConditionalImageMaterialSwitcher::dyn__image() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConditionalImageMaterialSwitcher::dyn__image");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_image"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ConditionalImageMaterialSwitcher.Awake
void GlobalNamespace::ConditionalImageMaterialSwitcher::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConditionalImageMaterialSwitcher::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConditionalMaterialSwitcher
#include "GlobalNamespace/ConditionalMaterialSwitcher.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _material0
::UnityEngine::Material*& GlobalNamespace::ConditionalMaterialSwitcher::dyn__material0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConditionalMaterialSwitcher::dyn__material0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_material0"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _material1
::UnityEngine::Material*& GlobalNamespace::ConditionalMaterialSwitcher::dyn__material1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConditionalMaterialSwitcher::dyn__material1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_material1"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BoolSO _value
::GlobalNamespace::BoolSO*& GlobalNamespace::ConditionalMaterialSwitcher::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConditionalMaterialSwitcher::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _renderer
::UnityEngine::Renderer*& GlobalNamespace::ConditionalMaterialSwitcher::dyn__renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConditionalMaterialSwitcher::dyn__renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderer"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ConditionalMaterialSwitcher.Awake
void GlobalNamespace::ConditionalMaterialSwitcher::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConditionalMaterialSwitcher::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConditionalMove
#include "GlobalNamespace/ConditionalMove.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _offset
::UnityEngine::Vector3& GlobalNamespace::ConditionalMove::dyn__offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConditionalMove::dyn__offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BoolSO _value
::GlobalNamespace::BoolSO*& GlobalNamespace::ConditionalMove::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConditionalMove::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _activateOnFalse
bool& GlobalNamespace::ConditionalMove::dyn__activateOnFalse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConditionalMove::dyn__activateOnFalse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activateOnFalse"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ConditionalMove.Awake
void GlobalNamespace::ConditionalMove::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConditionalMove::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConditionalSpriteSwitcher
#include "GlobalNamespace/ConditionalSpriteSwitcher.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
// Including type: UnityEngine.SpriteRenderer
#include "UnityEngine/SpriteRenderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _sprite0
::UnityEngine::Sprite*& GlobalNamespace::ConditionalSpriteSwitcher::dyn__sprite0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConditionalSpriteSwitcher::dyn__sprite0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sprite0"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _material0
::UnityEngine::Material*& GlobalNamespace::ConditionalSpriteSwitcher::dyn__material0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConditionalSpriteSwitcher::dyn__material0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_material0"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _sprite1
::UnityEngine::Sprite*& GlobalNamespace::ConditionalSpriteSwitcher::dyn__sprite1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConditionalSpriteSwitcher::dyn__sprite1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sprite1"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _material1
::UnityEngine::Material*& GlobalNamespace::ConditionalSpriteSwitcher::dyn__material1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConditionalSpriteSwitcher::dyn__material1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_material1"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BoolSO _value
::GlobalNamespace::BoolSO*& GlobalNamespace::ConditionalSpriteSwitcher::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConditionalSpriteSwitcher::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SpriteRenderer _spriteRenderer
::UnityEngine::SpriteRenderer*& GlobalNamespace::ConditionalSpriteSwitcher::dyn__spriteRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConditionalSpriteSwitcher::dyn__spriteRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spriteRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::SpriteRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ConditionalSpriteSwitcher.get_falseSprite
::UnityEngine::Sprite* GlobalNamespace::ConditionalSpriteSwitcher::get_falseSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConditionalSpriteSwitcher::get_falseSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_falseSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: ConditionalSpriteSwitcher.set_falseSprite
void GlobalNamespace::ConditionalSpriteSwitcher::set_falseSprite(::UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConditionalSpriteSwitcher::set_falseSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_falseSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConditionalSpriteSwitcher.get_trueSprite
::UnityEngine::Sprite* GlobalNamespace::ConditionalSpriteSwitcher::get_trueSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConditionalSpriteSwitcher::get_trueSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trueSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: ConditionalSpriteSwitcher.set_trueSprite
void GlobalNamespace::ConditionalSpriteSwitcher::set_trueSprite(::UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConditionalSpriteSwitcher::set_trueSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trueSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConditionalSpriteSwitcher.Awake
void GlobalNamespace::ConditionalSpriteSwitcher::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConditionalSpriteSwitcher::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ConditionalSpriteSwitcher.Apply
void GlobalNamespace::ConditionalSpriteSwitcher::Apply() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ConditionalSpriteSwitcher::Apply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Apply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DateConditionalSpriteSwitcher
#include "GlobalNamespace/DateConditionalSpriteSwitcher.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: ConditionalSpriteSwitcher
#include "GlobalNamespace/ConditionalSpriteSwitcher.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _day
int& GlobalNamespace::DateConditionalSpriteSwitcher::dyn__day() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DateConditionalSpriteSwitcher::dyn__day");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_day"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _month
int& GlobalNamespace::DateConditionalSpriteSwitcher::dyn__month() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DateConditionalSpriteSwitcher::dyn__month");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_month"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _falseSprite
::UnityEngine::Sprite*& GlobalNamespace::DateConditionalSpriteSwitcher::dyn__falseSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DateConditionalSpriteSwitcher::dyn__falseSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_falseSprite"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _trueSprite
::UnityEngine::Sprite*& GlobalNamespace::DateConditionalSpriteSwitcher::dyn__trueSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DateConditionalSpriteSwitcher::dyn__trueSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trueSprite"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ConditionalSpriteSwitcher _conditionalSpriteSwitcher
::GlobalNamespace::ConditionalSpriteSwitcher*& GlobalNamespace::DateConditionalSpriteSwitcher::dyn__conditionalSpriteSwitcher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DateConditionalSpriteSwitcher::dyn__conditionalSpriteSwitcher");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_conditionalSpriteSwitcher"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ConditionalSpriteSwitcher**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DateConditionalSpriteSwitcher.Awake
void GlobalNamespace::DateConditionalSpriteSwitcher::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DateConditionalSpriteSwitcher::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DeactivateAfterFirstFrame
#include "GlobalNamespace/DeactivateAfterFirstFrame.hpp"
// Including type: DeactivateAfterFirstFrame/<Start>d__0
#include "GlobalNamespace/DeactivateAfterFirstFrame_-Start-d__0.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DeactivateAfterFirstFrame.Start
::System::Collections::IEnumerator* GlobalNamespace::DeactivateAfterFirstFrame::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeactivateAfterFirstFrame::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: DeactivateAfterFirstFrame/<Start>d__0
#include "GlobalNamespace/DeactivateAfterFirstFrame_-Start-d__0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::DeactivateAfterFirstFrame::$Start$d__0::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeactivateAfterFirstFrame::$Start$d__0::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::DeactivateAfterFirstFrame::$Start$d__0::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeactivateAfterFirstFrame::$Start$d__0::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DeactivateAfterFirstFrame <>4__this
::GlobalNamespace::DeactivateAfterFirstFrame*& GlobalNamespace::DeactivateAfterFirstFrame::$Start$d__0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeactivateAfterFirstFrame::$Start$d__0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DeactivateAfterFirstFrame**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DeactivateAfterFirstFrame/<Start>d__0.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::DeactivateAfterFirstFrame::$Start$d__0::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeactivateAfterFirstFrame::$Start$d__0::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: DeactivateAfterFirstFrame/<Start>d__0.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::DeactivateAfterFirstFrame::$Start$d__0::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeactivateAfterFirstFrame::$Start$d__0::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: DeactivateAfterFirstFrame/<Start>d__0.System.IDisposable.Dispose
void GlobalNamespace::DeactivateAfterFirstFrame::$Start$d__0::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeactivateAfterFirstFrame::$Start$d__0::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DeactivateAfterFirstFrame/<Start>d__0.MoveNext
bool GlobalNamespace::DeactivateAfterFirstFrame::$Start$d__0::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeactivateAfterFirstFrame::$Start$d__0::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: DeactivateAfterFirstFrame/<Start>d__0.System.Collections.IEnumerator.Reset
void GlobalNamespace::DeactivateAfterFirstFrame::$Start$d__0::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DeactivateAfterFirstFrame::$Start$d__0::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DisableComponentOnNonSteam
#include "GlobalNamespace/DisableComponentOnNonSteam.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MonoBehaviour _component
::UnityEngine::MonoBehaviour*& GlobalNamespace::DisableComponentOnNonSteam::dyn__component() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisableComponentOnNonSteam::dyn__component");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_component"))->offset;
  return *reinterpret_cast<::UnityEngine::MonoBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DisableComponentOnNonSteam.Awake
void GlobalNamespace::DisableComponentOnNonSteam::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisableComponentOnNonSteam::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DisableOnNonOculus
#include "GlobalNamespace/DisableOnNonOculus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DisableOnNonQuest
#include "GlobalNamespace/DisableOnNonQuest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DisableOnNonSteam
#include "GlobalNamespace/DisableOnNonSteam.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DisableOnNonSteam.Awake
void GlobalNamespace::DisableOnNonSteam::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DisableOnNonSteam::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FPSCounter
#include "GlobalNamespace/FPSCounter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <currentFPS>k__BackingField
int& GlobalNamespace::FPSCounter::dyn_$currentFPS$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounter::dyn_$currentFPS$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<currentFPS>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <lowestFPS>k__BackingField
int& GlobalNamespace::FPSCounter::dyn_$lowestFPS$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounter::dyn_$lowestFPS$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<lowestFPS>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <highestFPS>k__BackingField
int& GlobalNamespace::FPSCounter::dyn_$highestFPS$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounter::dyn_$highestFPS$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<highestFPS>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <droppedFrames>k__BackingField
int& GlobalNamespace::FPSCounter::dyn_$droppedFrames$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounter::dyn_$droppedFrames$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<droppedFrames>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _timeBuffer
float& GlobalNamespace::FPSCounter::dyn__timeBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounter::dyn__timeBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeBuffer"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _frameCounter
int& GlobalNamespace::FPSCounter::dyn__frameCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounter::dyn__frameCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_frameCounter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minDeltaTime
float& GlobalNamespace::FPSCounter::dyn__minDeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounter::dyn__minDeltaTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minDeltaTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FPSCounter.get_currentFPS
int GlobalNamespace::FPSCounter::get_currentFPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounter::get_currentFPS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentFPS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: FPSCounter.set_currentFPS
void GlobalNamespace::FPSCounter::set_currentFPS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounter::set_currentFPS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_currentFPS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FPSCounter.get_lowestFPS
int GlobalNamespace::FPSCounter::get_lowestFPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounter::get_lowestFPS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lowestFPS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: FPSCounter.set_lowestFPS
void GlobalNamespace::FPSCounter::set_lowestFPS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounter::set_lowestFPS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lowestFPS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FPSCounter.get_highestFPS
int GlobalNamespace::FPSCounter::get_highestFPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounter::get_highestFPS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_highestFPS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: FPSCounter.set_highestFPS
void GlobalNamespace::FPSCounter::set_highestFPS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounter::set_highestFPS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_highestFPS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FPSCounter.get_droppedFrames
int GlobalNamespace::FPSCounter::get_droppedFrames() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounter::get_droppedFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_droppedFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: FPSCounter.set_droppedFrames
void GlobalNamespace::FPSCounter::set_droppedFrames(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounter::set_droppedFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_droppedFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FPSCounter.Awake
void GlobalNamespace::FPSCounter::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounter::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FPSCounter.Update
void GlobalNamespace::FPSCounter::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounter::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FPSCounterUIController
#include "GlobalNamespace/FPSCounterUIController.hpp"
// Including type: FPSCounterUIController/<Start>d__9
#include "GlobalNamespace/FPSCounterUIController_-Start-d__9.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: FPSCounter
#include "GlobalNamespace/FPSCounter.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _uiUpdateTimeInterval
float& GlobalNamespace::FPSCounterUIController::dyn__uiUpdateTimeInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounterUIController::dyn__uiUpdateTimeInterval");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uiUpdateTimeInterval"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _currentFPSText
::TMPro::TextMeshProUGUI*& GlobalNamespace::FPSCounterUIController::dyn__currentFPSText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounterUIController::dyn__currentFPSText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentFPSText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _lowestFPSText
::TMPro::TextMeshProUGUI*& GlobalNamespace::FPSCounterUIController::dyn__lowestFPSText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounterUIController::dyn__lowestFPSText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lowestFPSText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _highestFPSText
::TMPro::TextMeshProUGUI*& GlobalNamespace::FPSCounterUIController::dyn__highestFPSText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounterUIController::dyn__highestFPSText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highestFPSText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _droppedFramesText
::TMPro::TextMeshProUGUI*& GlobalNamespace::FPSCounterUIController::dyn__droppedFramesText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounterUIController::dyn__droppedFramesText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_droppedFramesText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameScenesManager _gameScenesManager
::GlobalNamespace::GameScenesManager*& GlobalNamespace::FPSCounterUIController::dyn__gameScenesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounterUIController::dyn__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FPSCounter _fpsCounter
::GlobalNamespace::FPSCounter*& GlobalNamespace::FPSCounterUIController::dyn__fpsCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounterUIController::dyn__fpsCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fpsCounter"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FPSCounter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _timeToUpdateUI
float& GlobalNamespace::FPSCounterUIController::dyn__timeToUpdateUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounterUIController::dyn__timeToUpdateUI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeToUpdateUI"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FPSCounterUIController.Awake
void GlobalNamespace::FPSCounterUIController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounterUIController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FPSCounterUIController.Start
::System::Collections::IEnumerator* GlobalNamespace::FPSCounterUIController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounterUIController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: FPSCounterUIController.LateUpdate
void GlobalNamespace::FPSCounterUIController::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounterUIController::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FPSCounterUIController/<Start>d__9
#include "GlobalNamespace/FPSCounterUIController_-Start-d__9.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::FPSCounterUIController::$Start$d__9::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounterUIController::$Start$d__9::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::FPSCounterUIController::$Start$d__9::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounterUIController::$Start$d__9::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FPSCounterUIController <>4__this
::GlobalNamespace::FPSCounterUIController*& GlobalNamespace::FPSCounterUIController::$Start$d__9::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounterUIController::$Start$d__9::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FPSCounterUIController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FPSCounterUIController/<Start>d__9.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::FPSCounterUIController::$Start$d__9::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounterUIController::$Start$d__9::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: FPSCounterUIController/<Start>d__9.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::FPSCounterUIController::$Start$d__9::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounterUIController::$Start$d__9::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: FPSCounterUIController/<Start>d__9.System.IDisposable.Dispose
void GlobalNamespace::FPSCounterUIController::$Start$d__9::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounterUIController::$Start$d__9::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FPSCounterUIController/<Start>d__9.MoveNext
bool GlobalNamespace::FPSCounterUIController::$Start$d__9::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounterUIController::$Start$d__9::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FPSCounterUIController/<Start>d__9.System.Collections.IEnumerator.Reset
void GlobalNamespace::FPSCounterUIController::$Start$d__9::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FPSCounterUIController::$Start$d__9::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IPAPluginsDirDeleter
#include "GlobalNamespace/IPAPluginsDirDeleter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SavWav
#include "GlobalNamespace/SavWav.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.UInt32 HeaderSize
uint GlobalNamespace::SavWav::_get_HeaderSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SavWav::_get_HeaderSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "SavWav", "HeaderSize"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 HeaderSize
void GlobalNamespace::SavWav::_set_HeaderSize(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SavWav::_set_HeaderSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SavWav", "HeaderSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single RescaleFactor
float GlobalNamespace::SavWav::_get_RescaleFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SavWav::_get_RescaleFactor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SavWav", "RescaleFactor"));
}
// Autogenerated static field setter
// Set static field: static private System.Single RescaleFactor
void GlobalNamespace::SavWav::_set_RescaleFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SavWav::_set_RescaleFactor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SavWav", "RescaleFactor", value));
}
// Autogenerated method: SavWav.Save
void GlobalNamespace::SavWav::Save(::StringW filepath, ::UnityEngine::AudioClip* clip, float start, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SavWav::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SavWav", "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filepath), ::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(duration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filepath, clip, start, duration);
}
// Autogenerated method: SavWav.GetWav
::ArrayW<uint8_t> GlobalNamespace::SavWav::GetWav(::UnityEngine::AudioClip* clip, ByRef<uint> length, float start, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SavWav::GetWav");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SavWav", "GetWav", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(duration)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip, byref(length), start, duration);
}
// Autogenerated method: SavWav.ConvertAndWrite
::ArrayW<uint8_t> GlobalNamespace::SavWav::ConvertAndWrite(::UnityEngine::AudioClip* clip, ByRef<uint> length, ByRef<uint> samplesAfterTrimming, float start, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SavWav::ConvertAndWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SavWav", "ConvertAndWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(duration)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, clip, byref(length), byref(samplesAfterTrimming), start, duration);
}
// Autogenerated method: SavWav.AddDataToBuffer
void GlobalNamespace::SavWav::AddDataToBuffer(::ArrayW<uint8_t> buffer, ByRef<uint> offset, ::ArrayW<uint8_t> addBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SavWav::AddDataToBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SavWav", "AddDataToBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(addBytes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, buffer, byref(offset), addBytes);
}
// Autogenerated method: SavWav.WriteHeader
void GlobalNamespace::SavWav::WriteHeader(::ArrayW<uint8_t> stream, ::UnityEngine::AudioClip* clip, uint length, uint samples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SavWav::WriteHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SavWav", "WriteHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(clip), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(samples)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, clip, length, samples);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SimpleTextureLoader
#include "GlobalNamespace/SimpleTextureLoader.hpp"
// Including type: SimpleTextureLoader/<LoadTextureCoroutine>d__2
#include "GlobalNamespace/SimpleTextureLoader_-LoadTextureCoroutine-d__2.hpp"
// Including type: HMCache`2
#include "GlobalNamespace/HMCache_2.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private HMCache`2<System.String,UnityEngine.Texture2D> _cache
::GlobalNamespace::HMCache_2<::StringW, ::UnityEngine::Texture2D*>* GlobalNamespace::SimpleTextureLoader::_get__cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleTextureLoader::_get__cache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::HMCache_2<::StringW, ::UnityEngine::Texture2D*>*>("", "SimpleTextureLoader", "_cache")));
}
// Autogenerated static field setter
// Set static field: static private HMCache`2<System.String,UnityEngine.Texture2D> _cache
void GlobalNamespace::SimpleTextureLoader::_set__cache(::GlobalNamespace::HMCache_2<::StringW, ::UnityEngine::Texture2D*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleTextureLoader::_set__cache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SimpleTextureLoader", "_cache", value));
}
// Autogenerated method: SimpleTextureLoader..cctor
void GlobalNamespace::SimpleTextureLoader::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleTextureLoader::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SimpleTextureLoader", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: SimpleTextureLoader.LoadTexture
void GlobalNamespace::SimpleTextureLoader::LoadTexture(::StringW filePath, bool useCache, ::System::Action_1<::UnityEngine::Texture2D*>* finishedCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleTextureLoader::LoadTexture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SimpleTextureLoader", "LoadTexture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(useCache), ::il2cpp_utils::ExtractType(finishedCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath, useCache, finishedCallback);
}
// Autogenerated method: SimpleTextureLoader.LoadTextureCoroutine
::System::Collections::IEnumerator* GlobalNamespace::SimpleTextureLoader::LoadTextureCoroutine(::StringW filePath, bool useCache, ::System::Action_1<::UnityEngine::Texture2D*>* finishedCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleTextureLoader::LoadTextureCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SimpleTextureLoader", "LoadTextureCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(useCache), ::il2cpp_utils::ExtractType(finishedCallback)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filePath, useCache, finishedCallback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: SimpleTextureLoader/<LoadTextureCoroutine>d__2
#include "GlobalNamespace/SimpleTextureLoader_-LoadTextureCoroutine-d__2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean useCache
bool& GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::dyn_useCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::dyn_useCache");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useCache"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String filePath
::StringW& GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::dyn_filePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::dyn_filePath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "filePath"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<UnityEngine.Texture2D> finishedCallback
::System::Action_1<::UnityEngine::Texture2D*>*& GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::dyn_finishedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::dyn_finishedCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finishedCallback"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::Texture2D*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Networking.UnityWebRequest <uwr>5__2
::UnityEngine::Networking::UnityWebRequest*& GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::dyn_$uwr$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::dyn_$uwr$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<uwr>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::UnityWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SimpleTextureLoader/<LoadTextureCoroutine>d__2.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: SimpleTextureLoader/<LoadTextureCoroutine>d__2.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: SimpleTextureLoader/<LoadTextureCoroutine>d__2.System.IDisposable.Dispose
void GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleTextureLoader/<LoadTextureCoroutine>d__2.MoveNext
bool GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SimpleTextureLoader/<LoadTextureCoroutine>d__2.<>m__Finally1
void GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleTextureLoader/<LoadTextureCoroutine>d__2.System.Collections.IEnumerator.Reset
void GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SimpleTextureLoader::$LoadTextureCoroutine$d__2::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongTimeAnimationPlayer
#include "GlobalNamespace/SongTimeAnimationPlayer.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationClip _animationClip
::UnityEngine::AnimationClip*& GlobalNamespace::SongTimeAnimationPlayer::dyn__animationClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeAnimationPlayer::dyn__animationClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animationClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AudioTimeSyncController _audioTimeSyncController
::GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::SongTimeAnimationPlayer::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeAnimationPlayer::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SongTimeAnimationPlayer.Update
void GlobalNamespace::SongTimeAnimationPlayer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SongTimeAnimationPlayer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ITimeProvider
#include "GlobalNamespace/ITimeProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ITimeProvider.get_time
float GlobalNamespace::ITimeProvider::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ITimeProvider::get_time");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SyncTimeProvider
#include "GlobalNamespace/SyncTimeProvider.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
::GlobalNamespace::IMultiplayerSessionManager*& GlobalNamespace::SyncTimeProvider::dyn__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SyncTimeProvider::dyn__multiplayerSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSessionManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SyncTimeProvider.get_time
float GlobalNamespace::SyncTimeProvider::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SyncTimeProvider::get_time");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BaseViewControllersInstaller
#include "GlobalNamespace/BaseViewControllersInstaller.hpp"
// Including type: SimpleDialogPromptViewController
#include "GlobalNamespace/SimpleDialogPromptViewController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private SimpleDialogPromptViewController _simpleDialogPromptViewControllerPrefab
::GlobalNamespace::SimpleDialogPromptViewController*& GlobalNamespace::BaseViewControllersInstaller::dyn__simpleDialogPromptViewControllerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseViewControllersInstaller::dyn__simpleDialogPromptViewControllerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_simpleDialogPromptViewControllerPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SimpleDialogPromptViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BaseViewControllersInstaller.InstallBindings
void GlobalNamespace::BaseViewControllersInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BaseViewControllersInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectsInstaller
#include "GlobalNamespace/BeatmapObjectsInstaller.hpp"
// Including type: GameNoteController
#include "GlobalNamespace/GameNoteController.hpp"
// Including type: BurstSliderGameNoteController
#include "GlobalNamespace/BurstSliderGameNoteController.hpp"
// Including type: BombNoteController
#include "GlobalNamespace/BombNoteController.hpp"
// Including type: ObstacleController
#include "GlobalNamespace/ObstacleController.hpp"
// Including type: SliderController
#include "GlobalNamespace/SliderController.hpp"
// Including type: NoteLineConnectionController
#include "GlobalNamespace/NoteLineConnectionController.hpp"
// Including type: BeatLine
#include "GlobalNamespace/BeatLine.hpp"
// Including type: GameplayCoreSceneSetupData
#include "GlobalNamespace/GameplayCoreSceneSetupData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private GameNoteController _normalBasicNotePrefab
::GlobalNamespace::GameNoteController*& GlobalNamespace::BeatmapObjectsInstaller::dyn__normalBasicNotePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInstaller::dyn__normalBasicNotePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalBasicNotePrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameNoteController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameNoteController _proModeNotePrefab
::GlobalNamespace::GameNoteController*& GlobalNamespace::BeatmapObjectsInstaller::dyn__proModeNotePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInstaller::dyn__proModeNotePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_proModeNotePrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameNoteController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameNoteController _burstSliderHeadNotePrefab
::GlobalNamespace::GameNoteController*& GlobalNamespace::BeatmapObjectsInstaller::dyn__burstSliderHeadNotePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInstaller::dyn__burstSliderHeadNotePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_burstSliderHeadNotePrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameNoteController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BurstSliderGameNoteController _burstSliderNotePrefab
::GlobalNamespace::BurstSliderGameNoteController*& GlobalNamespace::BeatmapObjectsInstaller::dyn__burstSliderNotePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInstaller::dyn__burstSliderNotePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_burstSliderNotePrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BurstSliderGameNoteController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BurstSliderGameNoteController _burstSliderFillPrefab
::GlobalNamespace::BurstSliderGameNoteController*& GlobalNamespace::BeatmapObjectsInstaller::dyn__burstSliderFillPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInstaller::dyn__burstSliderFillPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_burstSliderFillPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BurstSliderGameNoteController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BombNoteController _bombNotePrefab
::GlobalNamespace::BombNoteController*& GlobalNamespace::BeatmapObjectsInstaller::dyn__bombNotePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInstaller::dyn__bombNotePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bombNotePrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BombNoteController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ObstacleController _obstaclePrefab
::GlobalNamespace::ObstacleController*& GlobalNamespace::BeatmapObjectsInstaller::dyn__obstaclePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInstaller::dyn__obstaclePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obstaclePrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ObstacleController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SliderController _sliderShortPrefab
::GlobalNamespace::SliderController*& GlobalNamespace::BeatmapObjectsInstaller::dyn__sliderShortPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInstaller::dyn__sliderShortPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sliderShortPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SliderController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SliderController _sliderMediumPrefab
::GlobalNamespace::SliderController*& GlobalNamespace::BeatmapObjectsInstaller::dyn__sliderMediumPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInstaller::dyn__sliderMediumPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sliderMediumPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SliderController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SliderController _sliderLongPrefab
::GlobalNamespace::SliderController*& GlobalNamespace::BeatmapObjectsInstaller::dyn__sliderLongPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInstaller::dyn__sliderLongPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sliderLongPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SliderController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteLineConnectionController _noteLineConnectionControllerPrefab
::GlobalNamespace::NoteLineConnectionController*& GlobalNamespace::BeatmapObjectsInstaller::dyn__noteLineConnectionControllerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInstaller::dyn__noteLineConnectionControllerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteLineConnectionControllerPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteLineConnectionController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatLine _beatLinePrefab
::GlobalNamespace::BeatLine*& GlobalNamespace::BeatmapObjectsInstaller::dyn__beatLinePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInstaller::dyn__beatLinePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatLinePrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatLine**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameplayCoreSceneSetupData _sceneSetupData
::GlobalNamespace::GameplayCoreSceneSetupData*& GlobalNamespace::BeatmapObjectsInstaller::dyn__sceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInstaller::dyn__sceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayCoreSceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapObjectsInstaller.InstallBindings
void GlobalNamespace::BeatmapObjectsInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapObjectsInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorManagerInstaller
#include "GlobalNamespace/ColorManagerInstaller.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ColorSchemeSO _menuColorScheme
::GlobalNamespace::ColorSchemeSO*& GlobalNamespace::ColorManagerInstaller::dyn__menuColorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorManagerInstaller::dyn__menuColorScheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_menuColorScheme"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSchemeSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorManagerInstaller.InstallBindings
void GlobalNamespace::ColorManagerInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorManagerInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EffectPoolsManualInstaller
#include "GlobalNamespace/EffectPoolsManualInstaller.hpp"
// Including type: FlyingTextEffect
#include "GlobalNamespace/FlyingTextEffect.hpp"
// Including type: FlyingScoreEffect
#include "GlobalNamespace/FlyingScoreEffect.hpp"
// Including type: BeatEffect
#include "GlobalNamespace/BeatEffect.hpp"
// Including type: NoteCutSoundEffect
#include "GlobalNamespace/NoteCutSoundEffect.hpp"
// Including type: BombCutSoundEffect
#include "GlobalNamespace/BombCutSoundEffect.hpp"
// Including type: FlyingSpriteEffect
#include "GlobalNamespace/FlyingSpriteEffect.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private FlyingTextEffect _flyingTextEffectPrefab
::GlobalNamespace::FlyingTextEffect*& GlobalNamespace::EffectPoolsManualInstaller::dyn__flyingTextEffectPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EffectPoolsManualInstaller::dyn__flyingTextEffectPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flyingTextEffectPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FlyingTextEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FlyingScoreEffect _flyingScoreEffectPrefab
::GlobalNamespace::FlyingScoreEffect*& GlobalNamespace::EffectPoolsManualInstaller::dyn__flyingScoreEffectPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EffectPoolsManualInstaller::dyn__flyingScoreEffectPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flyingScoreEffectPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FlyingScoreEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatEffect _beatEffectPrefab
::GlobalNamespace::BeatEffect*& GlobalNamespace::EffectPoolsManualInstaller::dyn__beatEffectPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EffectPoolsManualInstaller::dyn__beatEffectPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatEffectPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatEffect _shortBeatEffectPrefab
::GlobalNamespace::BeatEffect*& GlobalNamespace::EffectPoolsManualInstaller::dyn__shortBeatEffectPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EffectPoolsManualInstaller::dyn__shortBeatEffectPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shortBeatEffectPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteCutSoundEffect _noteCutSoundEffectPrefab
::GlobalNamespace::NoteCutSoundEffect*& GlobalNamespace::EffectPoolsManualInstaller::dyn__noteCutSoundEffectPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EffectPoolsManualInstaller::dyn__noteCutSoundEffectPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteCutSoundEffectPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteCutSoundEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BombCutSoundEffect _bombCutSoundEffectPrefab
::GlobalNamespace::BombCutSoundEffect*& GlobalNamespace::EffectPoolsManualInstaller::dyn__bombCutSoundEffectPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EffectPoolsManualInstaller::dyn__bombCutSoundEffectPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bombCutSoundEffectPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BombCutSoundEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FlyingSpriteEffect _flyingSpriteEffectPrefab
::GlobalNamespace::FlyingSpriteEffect*& GlobalNamespace::EffectPoolsManualInstaller::dyn__flyingSpriteEffectPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EffectPoolsManualInstaller::dyn__flyingSpriteEffectPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flyingSpriteEffectPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FlyingSpriteEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EffectPoolsManualInstaller.ManualInstallBindings
void GlobalNamespace::EffectPoolsManualInstaller::ManualInstallBindings(::Zenject::DiContainer* container, bool shortBeatEffect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EffectPoolsManualInstaller::ManualInstallBindings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ManualInstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container), ::il2cpp_utils::ExtractType(shortBeatEffect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, container, shortBeatEffect);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FakeMirrorObjectsInstaller
#include "GlobalNamespace/FakeMirrorObjectsInstaller.hpp"
// Including type: FakeMirrorObjectsInstaller/<>c
#include "GlobalNamespace/FakeMirrorObjectsInstaller_--c.hpp"
// Including type: MirroredGameNoteController
#include "GlobalNamespace/MirroredGameNoteController.hpp"
// Including type: MirroredBombNoteController
#include "GlobalNamespace/MirroredBombNoteController.hpp"
// Including type: MirroredObstacleController
#include "GlobalNamespace/MirroredObstacleController.hpp"
// Including type: MirroredSliderController
#include "GlobalNamespace/MirroredSliderController.hpp"
// Including type: IntSO
#include "GlobalNamespace/IntSO.hpp"
// Including type: MirrorRendererGraphicsSettingsPresets
#include "GlobalNamespace/MirrorRendererGraphicsSettingsPresets.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MirroredGameNoteController _mirroredGameNoteControllerPrefab
::GlobalNamespace::MirroredGameNoteController*& GlobalNamespace::FakeMirrorObjectsInstaller::dyn__mirroredGameNoteControllerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorObjectsInstaller::dyn__mirroredGameNoteControllerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirroredGameNoteControllerPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MirroredGameNoteController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MirroredGameNoteController _mirroredBurstSliderHeadGameNoteControllerPrefab
::GlobalNamespace::MirroredGameNoteController*& GlobalNamespace::FakeMirrorObjectsInstaller::dyn__mirroredBurstSliderHeadGameNoteControllerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorObjectsInstaller::dyn__mirroredBurstSliderHeadGameNoteControllerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirroredBurstSliderHeadGameNoteControllerPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MirroredGameNoteController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MirroredGameNoteController _mirroredBurstSliderGameNoteControllerPrefab
::GlobalNamespace::MirroredGameNoteController*& GlobalNamespace::FakeMirrorObjectsInstaller::dyn__mirroredBurstSliderGameNoteControllerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorObjectsInstaller::dyn__mirroredBurstSliderGameNoteControllerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirroredBurstSliderGameNoteControllerPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MirroredGameNoteController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MirroredGameNoteController _mirroredBurstSliderFillControllerPrefab
::GlobalNamespace::MirroredGameNoteController*& GlobalNamespace::FakeMirrorObjectsInstaller::dyn__mirroredBurstSliderFillControllerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorObjectsInstaller::dyn__mirroredBurstSliderFillControllerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirroredBurstSliderFillControllerPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MirroredGameNoteController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MirroredBombNoteController _mirroredBombNoteControllerPrefab
::GlobalNamespace::MirroredBombNoteController*& GlobalNamespace::FakeMirrorObjectsInstaller::dyn__mirroredBombNoteControllerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorObjectsInstaller::dyn__mirroredBombNoteControllerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirroredBombNoteControllerPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MirroredBombNoteController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MirroredObstacleController _mirroredObstacleControllerPrefab
::GlobalNamespace::MirroredObstacleController*& GlobalNamespace::FakeMirrorObjectsInstaller::dyn__mirroredObstacleControllerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorObjectsInstaller::dyn__mirroredObstacleControllerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirroredObstacleControllerPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MirroredObstacleController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MirroredSliderController _mirroredSliderControllerPrefab
::GlobalNamespace::MirroredSliderController*& GlobalNamespace::FakeMirrorObjectsInstaller::dyn__mirroredSliderControllerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorObjectsInstaller::dyn__mirroredSliderControllerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirroredSliderControllerPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MirroredSliderController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IntSO _mirrorGraphicsSettings
::GlobalNamespace::IntSO*& GlobalNamespace::FakeMirrorObjectsInstaller::dyn__mirrorGraphicsSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorObjectsInstaller::dyn__mirrorGraphicsSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirrorGraphicsSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IntSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MirrorRendererGraphicsSettingsPresets _mirrorRendererGraphicsSettingsPresets
::GlobalNamespace::MirrorRendererGraphicsSettingsPresets*& GlobalNamespace::FakeMirrorObjectsInstaller::dyn__mirrorRendererGraphicsSettingsPresets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorObjectsInstaller::dyn__mirrorRendererGraphicsSettingsPresets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirrorRendererGraphicsSettingsPresets"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MirrorRendererGraphicsSettingsPresets**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FakeMirrorObjectsInstaller.get_mirroredGameNoteControllerPrefab
::GlobalNamespace::MirroredGameNoteController* GlobalNamespace::FakeMirrorObjectsInstaller::get_mirroredGameNoteControllerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorObjectsInstaller::get_mirroredGameNoteControllerPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mirroredGameNoteControllerPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::MirroredGameNoteController*, false>(this, ___internal__method);
}
// Autogenerated method: FakeMirrorObjectsInstaller.InstallBindings
void GlobalNamespace::FakeMirrorObjectsInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorObjectsInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FakeMirrorObjectsInstaller/<>c
#include "GlobalNamespace/FakeMirrorObjectsInstaller_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly FakeMirrorObjectsInstaller/<>c <>9
::GlobalNamespace::FakeMirrorObjectsInstaller::$$c* GlobalNamespace::FakeMirrorObjectsInstaller::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorObjectsInstaller::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::FakeMirrorObjectsInstaller::$$c*>("", "FakeMirrorObjectsInstaller/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly FakeMirrorObjectsInstaller/<>c <>9
void GlobalNamespace::FakeMirrorObjectsInstaller::$$c::_set_$$9(::GlobalNamespace::FakeMirrorObjectsInstaller::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorObjectsInstaller::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "FakeMirrorObjectsInstaller/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Zenject.BindingId,System.Boolean> <>9__11_0
::System::Func_2<::Zenject::BindingId, bool>* GlobalNamespace::FakeMirrorObjectsInstaller::$$c::_get_$$9__11_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorObjectsInstaller::$$c::_get_$$9__11_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Zenject::BindingId, bool>*>("", "FakeMirrorObjectsInstaller/<>c", "<>9__11_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Zenject.BindingId,System.Boolean> <>9__11_0
void GlobalNamespace::FakeMirrorObjectsInstaller::$$c::_set_$$9__11_0(::System::Func_2<::Zenject::BindingId, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorObjectsInstaller::$$c::_set_$$9__11_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "FakeMirrorObjectsInstaller/<>c", "<>9__11_0", value)));
}
// Autogenerated method: FakeMirrorObjectsInstaller/<>c..cctor
void GlobalNamespace::FakeMirrorObjectsInstaller::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorObjectsInstaller::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "FakeMirrorObjectsInstaller/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: FakeMirrorObjectsInstaller/<>c.<InstallBindings>b__11_0
bool GlobalNamespace::FakeMirrorObjectsInstaller::$$c::$InstallBindings$b__11_0(::Zenject::BindingId t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FakeMirrorObjectsInstaller::$$c::<InstallBindings>b__11_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InstallBindings>b__11_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayCoreInstaller
#include "GlobalNamespace/GameplayCoreInstaller.hpp"
// Including type: BeatLineManager
#include "GlobalNamespace/BeatLineManager.hpp"
// Including type: Tweening.SongTimeTweeningManager
#include "Tweening/SongTimeTweeningManager.hpp"
// Including type: AudioManagerSO
#include "GlobalNamespace/AudioManagerSO.hpp"
// Including type: PlayerHeightDetector
#include "GlobalNamespace/PlayerHeightDetector.hpp"
// Including type: NoteCutScoreSpawner
#include "GlobalNamespace/NoteCutScoreSpawner.hpp"
// Including type: BadNoteCutEffectSpawner
#include "GlobalNamespace/BadNoteCutEffectSpawner.hpp"
// Including type: MissedNoteEffectSpawner
#include "GlobalNamespace/MissedNoteEffectSpawner.hpp"
// Including type: EffectPoolsManualInstaller
#include "GlobalNamespace/EffectPoolsManualInstaller.hpp"
// Including type: GameplayCoreSceneSetupData
#include "GlobalNamespace/GameplayCoreSceneSetupData.hpp"
// Including type: PerceivedLoudnessPerLevelModel
#include "GlobalNamespace/PerceivedLoudnessPerLevelModel.hpp"
// Including type: RelativeSfxVolumePerLevelModel
#include "GlobalNamespace/RelativeSfxVolumePerLevelModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatLineManager _beatLineManagerPrefab
::GlobalNamespace::BeatLineManager*& GlobalNamespace::GameplayCoreInstaller::dyn__beatLineManagerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreInstaller::dyn__beatLineManagerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatLineManagerPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatLineManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.SongTimeTweeningManager _songTimeTweeningManager
::Tweening::SongTimeTweeningManager*& GlobalNamespace::GameplayCoreInstaller::dyn__songTimeTweeningManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreInstaller::dyn__songTimeTweeningManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songTimeTweeningManager"))->offset;
  return *reinterpret_cast<::Tweening::SongTimeTweeningManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AudioManagerSO _audioManager
::GlobalNamespace::AudioManagerSO*& GlobalNamespace::GameplayCoreInstaller::dyn__audioManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreInstaller::dyn__audioManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AudioManagerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayerHeightDetector _playerHeightDetectorPrefab
::GlobalNamespace::PlayerHeightDetector*& GlobalNamespace::GameplayCoreInstaller::dyn__playerHeightDetectorPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreInstaller::dyn__playerHeightDetectorPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerHeightDetectorPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerHeightDetector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteCutScoreSpawner _noteCutScoreSpawnerPrefab
::GlobalNamespace::NoteCutScoreSpawner*& GlobalNamespace::GameplayCoreInstaller::dyn__noteCutScoreSpawnerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreInstaller::dyn__noteCutScoreSpawnerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteCutScoreSpawnerPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteCutScoreSpawner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BadNoteCutEffectSpawner _badNoteCutEffectSpawnerPrefab
::GlobalNamespace::BadNoteCutEffectSpawner*& GlobalNamespace::GameplayCoreInstaller::dyn__badNoteCutEffectSpawnerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreInstaller::dyn__badNoteCutEffectSpawnerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_badNoteCutEffectSpawnerPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BadNoteCutEffectSpawner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissedNoteEffectSpawner _missedNoteEffectSpawnerPrefab
::GlobalNamespace::MissedNoteEffectSpawner*& GlobalNamespace::GameplayCoreInstaller::dyn__missedNoteEffectSpawnerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreInstaller::dyn__missedNoteEffectSpawnerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missedNoteEffectSpawnerPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissedNoteEffectSpawner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EffectPoolsManualInstaller _effectPoolsManualInstaller
::GlobalNamespace::EffectPoolsManualInstaller*& GlobalNamespace::GameplayCoreInstaller::dyn__effectPoolsManualInstaller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreInstaller::dyn__effectPoolsManualInstaller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_effectPoolsManualInstaller"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EffectPoolsManualInstaller**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameplayCoreSceneSetupData _sceneSetupData
::GlobalNamespace::GameplayCoreSceneSetupData*& GlobalNamespace::GameplayCoreInstaller::dyn__sceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreInstaller::dyn__sceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayCoreSceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PerceivedLoudnessPerLevelModel _perceivedLoudnessPerLevelModel
::GlobalNamespace::PerceivedLoudnessPerLevelModel*& GlobalNamespace::GameplayCoreInstaller::dyn__perceivedLoudnessPerLevelModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreInstaller::dyn__perceivedLoudnessPerLevelModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_perceivedLoudnessPerLevelModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PerceivedLoudnessPerLevelModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly RelativeSfxVolumePerLevelModel _relativeSfxVolumePerLevelModel
::GlobalNamespace::RelativeSfxVolumePerLevelModel*& GlobalNamespace::GameplayCoreInstaller::dyn__relativeSfxVolumePerLevelModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreInstaller::dyn__relativeSfxVolumePerLevelModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_relativeSfxVolumePerLevelModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RelativeSfxVolumePerLevelModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameplayCoreInstaller.InstallBindings
void GlobalNamespace::GameplayCoreInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayCoreInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LobbyDataModelInstaller
#include "GlobalNamespace/LobbyDataModelInstaller.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LobbyDataModelInstaller.InstallBindings
void GlobalNamespace::LobbyDataModelInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LobbyDataModelInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainSettingsMenuViewControllersInstaller
#include "GlobalNamespace/MainSettingsMenuViewControllersInstaller.hpp"
// Including type: MainSettingsMenuViewController
#include "GlobalNamespace/MainSettingsMenuViewController.hpp"
// Including type: TabBarViewController
#include "GlobalNamespace/TabBarViewController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MainSettingsMenuViewController _defaultSettingsMenuViewController
::GlobalNamespace::MainSettingsMenuViewController*& GlobalNamespace::MainSettingsMenuViewControllersInstaller::dyn__defaultSettingsMenuViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsMenuViewControllersInstaller::dyn__defaultSettingsMenuViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultSettingsMenuViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainSettingsMenuViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MainSettingsMenuViewController _oculusPCSettingsMenuViewController
::GlobalNamespace::MainSettingsMenuViewController*& GlobalNamespace::MainSettingsMenuViewControllersInstaller::dyn__oculusPCSettingsMenuViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsMenuViewControllersInstaller::dyn__oculusPCSettingsMenuViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oculusPCSettingsMenuViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainSettingsMenuViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MainSettingsMenuViewController _questSettingsMenuViewController
::GlobalNamespace::MainSettingsMenuViewController*& GlobalNamespace::MainSettingsMenuViewControllersInstaller::dyn__questSettingsMenuViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsMenuViewControllersInstaller::dyn__questSettingsMenuViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_questSettingsMenuViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainSettingsMenuViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MainSettingsMenuViewController _psvrSettingsMenuViewController
::GlobalNamespace::MainSettingsMenuViewController*& GlobalNamespace::MainSettingsMenuViewControllersInstaller::dyn__psvrSettingsMenuViewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsMenuViewControllersInstaller::dyn__psvrSettingsMenuViewController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_psvrSettingsMenuViewController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainSettingsMenuViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TabBarViewController _tabBarViewControllerPrefab
::GlobalNamespace::TabBarViewController*& GlobalNamespace::MainSettingsMenuViewControllersInstaller::dyn__tabBarViewControllerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsMenuViewControllersInstaller::dyn__tabBarViewControllerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tabBarViewControllerPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TabBarViewController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MainSettingsMenuViewControllersInstaller.InstallBindings
void GlobalNamespace::MainSettingsMenuViewControllersInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MainSettingsMenuViewControllersInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionGameplayInstaller
#include "GlobalNamespace/MissionGameplayInstaller.hpp"
// Including type: MissionGameplaySceneSetupData
#include "GlobalNamespace/MissionGameplaySceneSetupData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly MissionGameplaySceneSetupData _sceneSetupData
::GlobalNamespace::MissionGameplaySceneSetupData*& GlobalNamespace::MissionGameplayInstaller::dyn__sceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionGameplayInstaller::dyn__sceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionGameplaySceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionGameplayInstaller.InstallBindings
void GlobalNamespace::MissionGameplayInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionGameplayInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerCoreInstaller
#include "GlobalNamespace/MultiplayerCoreInstaller.hpp"
// Including type: ScoreSyncStateManager
#include "GlobalNamespace/ScoreSyncStateManager.hpp"
// Including type: MultiplayerBadgesModelSO
#include "GlobalNamespace/MultiplayerBadgesModelSO.hpp"
// Including type: GameplayCoreSceneSetupData
#include "GlobalNamespace/GameplayCoreSceneSetupData.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ScoreSyncStateManager _scoreSyncStateManagerPrefab
::GlobalNamespace::ScoreSyncStateManager*& GlobalNamespace::MultiplayerCoreInstaller::dyn__scoreSyncStateManagerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerCoreInstaller::dyn__scoreSyncStateManagerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreSyncStateManagerPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ScoreSyncStateManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerBadgesModelSO _multiplayerBadgesModel
::GlobalNamespace::MultiplayerBadgesModelSO*& GlobalNamespace::MultiplayerCoreInstaller::dyn__multiplayerBadgesModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerCoreInstaller::dyn__multiplayerBadgesModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerBadgesModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerBadgesModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameplayCoreSceneSetupData _sceneSetupData
::GlobalNamespace::GameplayCoreSceneSetupData*& GlobalNamespace::MultiplayerCoreInstaller::dyn__sceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerCoreInstaller::dyn__sceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayCoreSceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
::GlobalNamespace::IMultiplayerSessionManager*& GlobalNamespace::MultiplayerCoreInstaller::dyn__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerCoreInstaller::dyn__multiplayerSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSessionManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerCoreInstaller.InstallBindings
void GlobalNamespace::MultiplayerCoreInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerCoreInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyInstaller
#include "GlobalNamespace/MultiplayerLobbyInstaller.hpp"
// Including type: MultiplayerLobbyAvatarController
#include "GlobalNamespace/MultiplayerLobbyAvatarController.hpp"
// Including type: MultiplayerLobbyAvatarPlace
#include "GlobalNamespace/MultiplayerLobbyAvatarPlace.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MultiplayerLobbyAvatarController _multiplayerLobbyAvatarControllerPrefab
::GlobalNamespace::MultiplayerLobbyAvatarController*& GlobalNamespace::MultiplayerLobbyInstaller::dyn__multiplayerLobbyAvatarControllerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyInstaller::dyn__multiplayerLobbyAvatarControllerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerLobbyAvatarControllerPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLobbyAvatarController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerLobbyAvatarPlace _multiplayerAvatarPlacePrefab
::GlobalNamespace::MultiplayerLobbyAvatarPlace*& GlobalNamespace::MultiplayerLobbyInstaller::dyn__multiplayerAvatarPlacePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyInstaller::dyn__multiplayerAvatarPlacePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerAvatarPlacePrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLobbyAvatarPlace**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLobbyInstaller.InstallBindings
void GlobalNamespace::MultiplayerLobbyInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLobbyInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLocalPlayerInstaller
#include "GlobalNamespace/MultiplayerLocalPlayerInstaller.hpp"
// Including type: MultiplayerLevelSceneSetupData
#include "GlobalNamespace/MultiplayerLevelSceneSetupData.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerLevelSceneSetupData _levelSceneSetupData
::GlobalNamespace::MultiplayerLevelSceneSetupData*& GlobalNamespace::MultiplayerLocalPlayerInstaller::dyn__levelSceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLocalPlayerInstaller::dyn__levelSceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelSceneSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerLevelSceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
::GlobalNamespace::IMultiplayerSessionManager*& GlobalNamespace::MultiplayerLocalPlayerInstaller::dyn__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLocalPlayerInstaller::dyn__multiplayerSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSessionManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerPlayerStartState _startState
::GlobalNamespace::MultiplayerPlayerStartState& GlobalNamespace::MultiplayerLocalPlayerInstaller::dyn__startState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLocalPlayerInstaller::dyn__startState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startState"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MultiplayerPlayerStartState*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLocalPlayerInstaller.InstallBindings
void GlobalNamespace::MultiplayerLocalPlayerInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerLocalPlayerInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerMenuInstaller
#include "GlobalNamespace/MultiplayerMenuInstaller.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerMenuInstaller.InstallBindings
void GlobalNamespace::MultiplayerMenuInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MultiplayerMenuInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteDebrisPoolInstaller
#include "GlobalNamespace/NoteDebrisPoolInstaller.hpp"
// Including type: NoteDebris
#include "GlobalNamespace/NoteDebris.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private NoteDebris _normalNoteDebrisHDPrefab
::GlobalNamespace::NoteDebris*& GlobalNamespace::NoteDebrisPoolInstaller::dyn__normalNoteDebrisHDPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteDebrisPoolInstaller::dyn__normalNoteDebrisHDPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalNoteDebrisHDPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteDebris**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteDebris _normalNoteDebrisLWPrefab
::GlobalNamespace::NoteDebris*& GlobalNamespace::NoteDebrisPoolInstaller::dyn__normalNoteDebrisLWPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteDebrisPoolInstaller::dyn__normalNoteDebrisLWPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalNoteDebrisLWPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteDebris**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteDebris _burstSliderHeadNoteDebrisHDPrefab
::GlobalNamespace::NoteDebris*& GlobalNamespace::NoteDebrisPoolInstaller::dyn__burstSliderHeadNoteDebrisHDPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteDebrisPoolInstaller::dyn__burstSliderHeadNoteDebrisHDPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_burstSliderHeadNoteDebrisHDPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteDebris**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteDebris _burstSliderHeadNoteDebrisLWPrefab
::GlobalNamespace::NoteDebris*& GlobalNamespace::NoteDebrisPoolInstaller::dyn__burstSliderHeadNoteDebrisLWPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteDebrisPoolInstaller::dyn__burstSliderHeadNoteDebrisLWPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_burstSliderHeadNoteDebrisLWPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteDebris**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteDebris _burstSliderElementNoteHDPrefab
::GlobalNamespace::NoteDebris*& GlobalNamespace::NoteDebrisPoolInstaller::dyn__burstSliderElementNoteHDPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteDebrisPoolInstaller::dyn__burstSliderElementNoteHDPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_burstSliderElementNoteHDPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteDebris**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteDebris _burstSliderElementNoteLWPrefab
::GlobalNamespace::NoteDebris*& GlobalNamespace::NoteDebrisPoolInstaller::dyn__burstSliderElementNoteLWPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteDebrisPoolInstaller::dyn__burstSliderElementNoteLWPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_burstSliderElementNoteLWPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteDebris**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BoolSO _noteDebrisHDConditionVariable
::GlobalNamespace::BoolSO*& GlobalNamespace::NoteDebrisPoolInstaller::dyn__noteDebrisHDConditionVariable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteDebrisPoolInstaller::dyn__noteDebrisHDConditionVariable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteDebrisHDConditionVariable"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NoteDebrisPoolInstaller.InstallBindings
void GlobalNamespace::NoteDebrisPoolInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteDebrisPoolInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardGameplayInstaller
#include "GlobalNamespace/StandardGameplayInstaller.hpp"
// Including type: StandardGameplaySceneSetupData
#include "GlobalNamespace/StandardGameplaySceneSetupData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly StandardGameplaySceneSetupData _standardSceneSetupData
::GlobalNamespace::StandardGameplaySceneSetupData*& GlobalNamespace::StandardGameplayInstaller::dyn__standardSceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardGameplayInstaller::dyn__standardSceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_standardSceneSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::StandardGameplaySceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StandardGameplayInstaller.InstallBindings
void GlobalNamespace::StandardGameplayInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StandardGameplayInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialBeatmapObjectPoolsInstaller
#include "GlobalNamespace/TutorialBeatmapObjectPoolsInstaller.hpp"
// Including type: TutorialNoteController
#include "GlobalNamespace/TutorialNoteController.hpp"
// Including type: BombNoteController
#include "GlobalNamespace/BombNoteController.hpp"
// Including type: ObstacleController
#include "GlobalNamespace/ObstacleController.hpp"
// Including type: NoteLineConnectionController
#include "GlobalNamespace/NoteLineConnectionController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TutorialNoteController _basicNotePrefab
::GlobalNamespace::TutorialNoteController*& GlobalNamespace::TutorialBeatmapObjectPoolsInstaller::dyn__basicNotePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialBeatmapObjectPoolsInstaller::dyn__basicNotePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_basicNotePrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TutorialNoteController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BombNoteController _bombNotePrefab
::GlobalNamespace::BombNoteController*& GlobalNamespace::TutorialBeatmapObjectPoolsInstaller::dyn__bombNotePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialBeatmapObjectPoolsInstaller::dyn__bombNotePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bombNotePrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BombNoteController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ObstacleController _obstaclePrefab
::GlobalNamespace::ObstacleController*& GlobalNamespace::TutorialBeatmapObjectPoolsInstaller::dyn__obstaclePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialBeatmapObjectPoolsInstaller::dyn__obstaclePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obstaclePrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ObstacleController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteLineConnectionController _noteLineConnectionControllerPrefab
::GlobalNamespace::NoteLineConnectionController*& GlobalNamespace::TutorialBeatmapObjectPoolsInstaller::dyn__noteLineConnectionControllerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialBeatmapObjectPoolsInstaller::dyn__noteLineConnectionControllerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteLineConnectionControllerPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteLineConnectionController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TutorialBeatmapObjectPoolsInstaller.InstallBindings
void GlobalNamespace::TutorialBeatmapObjectPoolsInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialBeatmapObjectPoolsInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialInstaller
#include "GlobalNamespace/TutorialInstaller.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: PlayerHeightDetector
#include "GlobalNamespace/PlayerHeightDetector.hpp"
// Including type: EffectPoolsManualInstaller
#include "GlobalNamespace/EffectPoolsManualInstaller.hpp"
// Including type: TutorialSceneSetupData
#include "GlobalNamespace/TutorialSceneSetupData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip _audioClip
::UnityEngine::AudioClip*& GlobalNamespace::TutorialInstaller::dyn__audioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialInstaller::dyn__audioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _songBPM
float& GlobalNamespace::TutorialInstaller::dyn__songBPM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialInstaller::dyn__songBPM");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songBPM"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayerHeightDetector _playerHeightDetectorPrefab
::GlobalNamespace::PlayerHeightDetector*& GlobalNamespace::TutorialInstaller::dyn__playerHeightDetectorPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialInstaller::dyn__playerHeightDetectorPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerHeightDetectorPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerHeightDetector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EffectPoolsManualInstaller _effectPoolsManualInstaller
::GlobalNamespace::EffectPoolsManualInstaller*& GlobalNamespace::TutorialInstaller::dyn__effectPoolsManualInstaller() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialInstaller::dyn__effectPoolsManualInstaller");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_effectPoolsManualInstaller"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EffectPoolsManualInstaller**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly TutorialSceneSetupData _sceneSetupData
::GlobalNamespace::TutorialSceneSetupData*& GlobalNamespace::TutorialInstaller::dyn__sceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialInstaller::dyn__sceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sceneSetupData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TutorialSceneSetupData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TutorialInstaller.InstallBindings
void GlobalNamespace::TutorialInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TutorialInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BasicUIAudioManager
#include "GlobalNamespace/BasicUIAudioManager.hpp"
// Including type: Signal
#include "GlobalNamespace/Signal.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: RandomObjectPicker`1
#include "GlobalNamespace/RandomObjectPicker_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Signal[] _buttonClickEvents
::ArrayW<::GlobalNamespace::Signal*>& GlobalNamespace::BasicUIAudioManager::dyn__buttonClickEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicUIAudioManager::dyn__buttonClickEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonClickEvents"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::Signal*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
::UnityEngine::AudioSource*& GlobalNamespace::BasicUIAudioManager::dyn__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicUIAudioManager::dyn__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip[] _clickSounds
::ArrayW<::UnityEngine::AudioClip*>& GlobalNamespace::BasicUIAudioManager::dyn__clickSounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicUIAudioManager::dyn__clickSounds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clickSounds"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minPitch
float& GlobalNamespace::BasicUIAudioManager::dyn__minPitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicUIAudioManager::dyn__minPitch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minPitch"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxPitch
float& GlobalNamespace::BasicUIAudioManager::dyn__maxPitch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicUIAudioManager::dyn__maxPitch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxPitch"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RandomObjectPicker`1<UnityEngine.AudioClip> _randomSoundPicker
::GlobalNamespace::RandomObjectPicker_1<::UnityEngine::AudioClip*>*& GlobalNamespace::BasicUIAudioManager::dyn__randomSoundPicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicUIAudioManager::dyn__randomSoundPicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomSoundPicker"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RandomObjectPicker_1<::UnityEngine::AudioClip*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BasicUIAudioManager.Start
void GlobalNamespace::BasicUIAudioManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicUIAudioManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BasicUIAudioManager.OnEnable
void GlobalNamespace::BasicUIAudioManager::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicUIAudioManager::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BasicUIAudioManager.OnDisable
void GlobalNamespace::BasicUIAudioManager::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicUIAudioManager::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BasicUIAudioManager.HandleButtonClickEvent
void GlobalNamespace::BasicUIAudioManager::HandleButtonClickEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicUIAudioManager::HandleButtonClickEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleButtonClickEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VisualMetronome
#include "GlobalNamespace/VisualMetronome.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
::UnityEngine::AudioSource*& GlobalNamespace::VisualMetronome::dyn__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VisualMetronome::dyn__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _leftPadding
float& GlobalNamespace::VisualMetronome::dyn__leftPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VisualMetronome::dyn__leftPadding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftPadding"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rightPadding
float& GlobalNamespace::VisualMetronome::dyn__rightPadding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VisualMetronome::dyn__rightPadding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightPadding"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _ticker
::UnityEngine::RectTransform*& GlobalNamespace::VisualMetronome::dyn__ticker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VisualMetronome::dyn__ticker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ticker"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RectTransform _movingTicker
::UnityEngine::RectTransform*& GlobalNamespace::VisualMetronome::dyn__movingTicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VisualMetronome::dyn__movingTicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_movingTicker"))->offset;
  return *reinterpret_cast<::UnityEngine::RectTransform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _tickerImage
::UnityEngine::UI::Image*& GlobalNamespace::VisualMetronome::dyn__tickerImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VisualMetronome::dyn__tickerImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tickerImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _movingTickerImage
::UnityEngine::UI::Image*& GlobalNamespace::VisualMetronome::dyn__movingTickerImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VisualMetronome::dyn__movingTickerImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_movingTickerImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _metronomeInterval
float& GlobalNamespace::VisualMetronome::dyn__metronomeInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VisualMetronome::dyn__metronomeInterval");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_metronomeInterval"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _normalTickerSize
::UnityEngine::Vector2& GlobalNamespace::VisualMetronome::dyn__normalTickerSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VisualMetronome::dyn__normalTickerSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalTickerSize"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _tickTickerSize0
::UnityEngine::Vector2& GlobalNamespace::VisualMetronome::dyn__tickTickerSize0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VisualMetronome::dyn__tickTickerSize0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tickTickerSize0"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _tickTickerSize1
::UnityEngine::Vector2& GlobalNamespace::VisualMetronome::dyn__tickTickerSize1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VisualMetronome::dyn__tickTickerSize1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tickTickerSize1"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _smooth
float& GlobalNamespace::VisualMetronome::dyn__smooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VisualMetronome::dyn__smooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _prevAudioTime
float& GlobalNamespace::VisualMetronome::dyn__prevAudioTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VisualMetronome::dyn__prevAudioTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevAudioTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _zeroOffset
float& GlobalNamespace::VisualMetronome::dyn__zeroOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VisualMetronome::dyn__zeroOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zeroOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _direction
float& GlobalNamespace::VisualMetronome::dyn__direction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VisualMetronome::dyn__direction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_direction"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _dontTickThisFrame
bool& GlobalNamespace::VisualMetronome::dyn__dontTickThisFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VisualMetronome::dyn__dontTickThisFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dontTickThisFrame"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VisualMetronome.set_tickerColor
void GlobalNamespace::VisualMetronome::set_tickerColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VisualMetronome::set_tickerColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_tickerColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VisualMetronome.set_movingTickerColor
void GlobalNamespace::VisualMetronome::set_movingTickerColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VisualMetronome::set_movingTickerColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_movingTickerColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VisualMetronome.get_zeroOffset
float GlobalNamespace::VisualMetronome::get_zeroOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VisualMetronome::get_zeroOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_zeroOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VisualMetronome.set_zeroOffset
void GlobalNamespace::VisualMetronome::set_zeroOffset(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VisualMetronome::set_zeroOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_zeroOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VisualMetronome.Awake
void GlobalNamespace::VisualMetronome::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VisualMetronome::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VisualMetronome.OnEnable
void GlobalNamespace::VisualMetronome::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VisualMetronome::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VisualMetronome.OnDisable
void GlobalNamespace::VisualMetronome::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VisualMetronome::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VisualMetronome.Update
void GlobalNamespace::VisualMetronome::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VisualMetronome::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VisualMetronome.SetMovingTickerNormalizedPosition
void GlobalNamespace::VisualMetronome::SetMovingTickerNormalizedPosition(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VisualMetronome::SetMovingTickerNormalizedPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMovingTickerNormalizedPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorHueSlider
#include "GlobalNamespace/ColorHueSlider.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _darkColor
::UnityEngine::Color& GlobalNamespace::ColorHueSlider::dyn__darkColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorHueSlider::dyn__darkColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_darkColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _lightColor
::UnityEngine::Color& GlobalNamespace::ColorHueSlider::dyn__lightColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorHueSlider::dyn__lightColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`3<ColorHueSlider,System.Single,ColorChangeUIEventType> colorHueDidChangeEvent
::System::Action_3<::GlobalNamespace::ColorHueSlider*, float, ::GlobalNamespace::ColorChangeUIEventType>*& GlobalNamespace::ColorHueSlider::dyn_colorHueDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorHueSlider::dyn_colorHueDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorHueDidChangeEvent"))->offset;
  return *reinterpret_cast<::System::Action_3<::GlobalNamespace::ColorHueSlider*, float, ::GlobalNamespace::ColorChangeUIEventType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorHueSlider.add_colorHueDidChangeEvent
void GlobalNamespace::ColorHueSlider::add_colorHueDidChangeEvent(::System::Action_3<::GlobalNamespace::ColorHueSlider*, float, ::GlobalNamespace::ColorChangeUIEventType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorHueSlider::add_colorHueDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_colorHueDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorHueSlider.remove_colorHueDidChangeEvent
void GlobalNamespace::ColorHueSlider::remove_colorHueDidChangeEvent(::System::Action_3<::GlobalNamespace::ColorHueSlider*, float, ::GlobalNamespace::ColorChangeUIEventType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorHueSlider::remove_colorHueDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_colorHueDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorHueSlider.HandleNormalizedValueDidChange
void GlobalNamespace::ColorHueSlider::HandleNormalizedValueDidChange(::HMUI::CircleSlider* slider, float normalizedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorHueSlider::HandleNormalizedValueDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNormalizedValueDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slider), ::il2cpp_utils::ExtractType(normalizedValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, slider, normalizedValue);
}
// Autogenerated method: ColorHueSlider.Awake
void GlobalNamespace::ColorHueSlider::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorHueSlider::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorHueSlider.OnDestroy
void GlobalNamespace::ColorHueSlider::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorHueSlider::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorHueSlider.UpdateVisuals
void GlobalNamespace::ColorHueSlider::UpdateVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorHueSlider::UpdateVisuals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorHueSlider.OnPointerUp
void GlobalNamespace::ColorHueSlider::OnPointerUp(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorHueSlider::OnPointerUp");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorSaturationValueSlider
#include "GlobalNamespace/ColorSaturationValueSlider.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: UnityEngine.EventSystems.PointerEventData
#include "UnityEngine/EventSystems/PointerEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _hue
float& GlobalNamespace::ColorSaturationValueSlider::dyn__hue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSaturationValueSlider::dyn__hue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Graphic[] _graphics
::ArrayW<::UnityEngine::UI::Graphic*>& GlobalNamespace::ColorSaturationValueSlider::dyn__graphics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSaturationValueSlider::dyn__graphics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_graphics"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::UI::Graphic*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _darkColor
::UnityEngine::Color& GlobalNamespace::ColorSaturationValueSlider::dyn__darkColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSaturationValueSlider::dyn__darkColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_darkColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _lightColor
::UnityEngine::Color& GlobalNamespace::ColorSaturationValueSlider::dyn__lightColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSaturationValueSlider::dyn__lightColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`3<ColorSaturationValueSlider,UnityEngine.Vector2,ColorChangeUIEventType> colorSaturationOrValueDidChangeEvent
::System::Action_3<::GlobalNamespace::ColorSaturationValueSlider*, ::UnityEngine::Vector2, ::GlobalNamespace::ColorChangeUIEventType>*& GlobalNamespace::ColorSaturationValueSlider::dyn_colorSaturationOrValueDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSaturationValueSlider::dyn_colorSaturationOrValueDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorSaturationOrValueDidChangeEvent"))->offset;
  return *reinterpret_cast<::System::Action_3<::GlobalNamespace::ColorSaturationValueSlider*, ::UnityEngine::Vector2, ::GlobalNamespace::ColorChangeUIEventType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorSaturationValueSlider.add_colorSaturationOrValueDidChangeEvent
void GlobalNamespace::ColorSaturationValueSlider::add_colorSaturationOrValueDidChangeEvent(::System::Action_3<::GlobalNamespace::ColorSaturationValueSlider*, ::UnityEngine::Vector2, ::GlobalNamespace::ColorChangeUIEventType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSaturationValueSlider::add_colorSaturationOrValueDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_colorSaturationOrValueDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorSaturationValueSlider.remove_colorSaturationOrValueDidChangeEvent
void GlobalNamespace::ColorSaturationValueSlider::remove_colorSaturationOrValueDidChangeEvent(::System::Action_3<::GlobalNamespace::ColorSaturationValueSlider*, ::UnityEngine::Vector2, ::GlobalNamespace::ColorChangeUIEventType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSaturationValueSlider::remove_colorSaturationOrValueDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_colorSaturationOrValueDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorSaturationValueSlider.SetHue
void GlobalNamespace::ColorSaturationValueSlider::SetHue(float hue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSaturationValueSlider::SetHue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, hue);
}
// Autogenerated method: ColorSaturationValueSlider.HandleNormalizedValueDidChange
void GlobalNamespace::ColorSaturationValueSlider::HandleNormalizedValueDidChange(::HMUI::Slider2D* slider, ::UnityEngine::Vector2 normalizedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSaturationValueSlider::HandleNormalizedValueDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNormalizedValueDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slider), ::il2cpp_utils::ExtractType(normalizedValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, slider, normalizedValue);
}
// Autogenerated method: ColorSaturationValueSlider.Awake
void GlobalNamespace::ColorSaturationValueSlider::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSaturationValueSlider::Awake");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorSaturationValueSlider.OnDestroy
void GlobalNamespace::ColorSaturationValueSlider::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSaturationValueSlider::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorSaturationValueSlider.UpdateVisuals
void GlobalNamespace::ColorSaturationValueSlider::UpdateVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSaturationValueSlider::UpdateVisuals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorSaturationValueSlider.OnPointerUp
void GlobalNamespace::ColorSaturationValueSlider::OnPointerUp(::UnityEngine::EventSystems::PointerEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSaturationValueSlider::OnPointerUp");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnPointerUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorSchemeColorToggleController
#include "GlobalNamespace/ColorSchemeColorToggleController.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Graphic[] _colorGraphics
::ArrayW<::UnityEngine::UI::Graphic*>& GlobalNamespace::ColorSchemeColorToggleController::dyn__colorGraphics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeColorToggleController::dyn__colorGraphics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorGraphics"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::UI::Graphic*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle _toggle
::UnityEngine::UI::Toggle*& GlobalNamespace::ColorSchemeColorToggleController::dyn__toggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeColorToggleController::dyn__toggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorSchemeColorToggleController.get_toggle
::UnityEngine::UI::Toggle* GlobalNamespace::ColorSchemeColorToggleController::get_toggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeColorToggleController::get_toggle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_toggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Toggle*, false>(this, ___internal__method);
}
// Autogenerated method: ColorSchemeColorToggleController.get_color
::UnityEngine::Color GlobalNamespace::ColorSchemeColorToggleController::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeColorToggleController::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: ColorSchemeColorToggleController.set_color
void GlobalNamespace::ColorSchemeColorToggleController::set_color(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeColorToggleController::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorSchemeColorsToggleGroup
#include "GlobalNamespace/ColorSchemeColorsToggleGroup.hpp"
// Including type: ColorSchemeColorToggleController
#include "GlobalNamespace/ColorSchemeColorToggleController.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: HMUI.ToggleBinder
#include "HMUI/ToggleBinder.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ColorSchemeColorToggleController _saberAColorToggleController
::GlobalNamespace::ColorSchemeColorToggleController*& GlobalNamespace::ColorSchemeColorsToggleGroup::dyn__saberAColorToggleController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeColorsToggleGroup::dyn__saberAColorToggleController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberAColorToggleController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSchemeColorToggleController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSchemeColorToggleController _saberBColorToggleController
::GlobalNamespace::ColorSchemeColorToggleController*& GlobalNamespace::ColorSchemeColorsToggleGroup::dyn__saberBColorToggleController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeColorsToggleGroup::dyn__saberBColorToggleController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberBColorToggleController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSchemeColorToggleController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSchemeColorToggleController _environmentColor0ToggleController
::GlobalNamespace::ColorSchemeColorToggleController*& GlobalNamespace::ColorSchemeColorsToggleGroup::dyn__environmentColor0ToggleController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeColorsToggleGroup::dyn__environmentColor0ToggleController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentColor0ToggleController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSchemeColorToggleController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSchemeColorToggleController _environmentColor1ToggleController
::GlobalNamespace::ColorSchemeColorToggleController*& GlobalNamespace::ColorSchemeColorsToggleGroup::dyn__environmentColor1ToggleController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeColorsToggleGroup::dyn__environmentColor1ToggleController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentColor1ToggleController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSchemeColorToggleController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSchemeColorToggleController _obstaclesColorToggleController
::GlobalNamespace::ColorSchemeColorToggleController*& GlobalNamespace::ColorSchemeColorsToggleGroup::dyn__obstaclesColorToggleController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeColorsToggleGroup::dyn__obstaclesColorToggleController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obstaclesColorToggleController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSchemeColorToggleController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.Color> selectedColorDidChangeEvent
::System::Action_1<::UnityEngine::Color>*& GlobalNamespace::ColorSchemeColorsToggleGroup::dyn_selectedColorDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeColorsToggleGroup::dyn_selectedColorDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selectedColorDidChangeEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::Color>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ToggleBinder _toggleBinder
::HMUI::ToggleBinder*& GlobalNamespace::ColorSchemeColorsToggleGroup::dyn__toggleBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeColorsToggleGroup::dyn__toggleBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toggleBinder"))->offset;
  return *reinterpret_cast<::HMUI::ToggleBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSchemeColorToggleController _selectedColorToggleController
::GlobalNamespace::ColorSchemeColorToggleController*& GlobalNamespace::ColorSchemeColorsToggleGroup::dyn__selectedColorToggleController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeColorsToggleGroup::dyn__selectedColorToggleController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedColorToggleController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSchemeColorToggleController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorScheme _colorScheme
::GlobalNamespace::ColorScheme*& GlobalNamespace::ColorSchemeColorsToggleGroup::dyn__colorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeColorsToggleGroup::dyn__colorScheme");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorScheme"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorScheme**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.get_color
::UnityEngine::Color GlobalNamespace::ColorSchemeColorsToggleGroup::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeColorsToggleGroup::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.set_color
void GlobalNamespace::ColorSchemeColorsToggleGroup::set_color(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeColorsToggleGroup::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.add_selectedColorDidChangeEvent
void GlobalNamespace::ColorSchemeColorsToggleGroup::add_selectedColorDidChangeEvent(::System::Action_1<::UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeColorsToggleGroup::add_selectedColorDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_selectedColorDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.remove_selectedColorDidChangeEvent
void GlobalNamespace::ColorSchemeColorsToggleGroup::remove_selectedColorDidChangeEvent(::System::Action_1<::UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeColorsToggleGroup::remove_selectedColorDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_selectedColorDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.SetColorScheme
void GlobalNamespace::ColorSchemeColorsToggleGroup::SetColorScheme(::GlobalNamespace::ColorScheme* colorScheme) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeColorsToggleGroup::SetColorScheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColorScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorScheme)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, colorScheme);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.Awake
void GlobalNamespace::ColorSchemeColorsToggleGroup::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeColorsToggleGroup::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.OnDestroy
void GlobalNamespace::ColorSchemeColorsToggleGroup::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeColorsToggleGroup::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.HandleToggleWasSelected
void GlobalNamespace::ColorSchemeColorsToggleGroup::HandleToggleWasSelected(::GlobalNamespace::ColorSchemeColorToggleController* toggleController, bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeColorsToggleGroup::HandleToggleWasSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleToggleWasSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(toggleController), ::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, toggleController, isOn);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.CreateColorSchemeFromEditedColors
::GlobalNamespace::ColorScheme* GlobalNamespace::ColorSchemeColorsToggleGroup::CreateColorSchemeFromEditedColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeColorsToggleGroup::CreateColorSchemeFromEditedColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateColorSchemeFromEditedColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ColorScheme*, false>(this, ___internal__method);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.<Awake>b__15_0
void GlobalNamespace::ColorSchemeColorsToggleGroup::$Awake$b__15_0(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeColorsToggleGroup::<Awake>b__15_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__15_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.<Awake>b__15_1
void GlobalNamespace::ColorSchemeColorsToggleGroup::$Awake$b__15_1(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeColorsToggleGroup::<Awake>b__15_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__15_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.<Awake>b__15_2
void GlobalNamespace::ColorSchemeColorsToggleGroup::$Awake$b__15_2(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeColorsToggleGroup::<Awake>b__15_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__15_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.<Awake>b__15_3
void GlobalNamespace::ColorSchemeColorsToggleGroup::$Awake$b__15_3(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeColorsToggleGroup::<Awake>b__15_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__15_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: ColorSchemeColorsToggleGroup.<Awake>b__15_4
void GlobalNamespace::ColorSchemeColorsToggleGroup::$Awake$b__15_4(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeColorsToggleGroup::<Awake>b__15_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__15_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorSchemeDropdown
#include "GlobalNamespace/ColorSchemeDropdown.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: ColorSchemeView
#include "GlobalNamespace/ColorSchemeView.hpp"
// Including type: ColorSchemeTableCell
#include "GlobalNamespace/ColorSchemeTableCell.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _text
::TMPro::TextMeshProUGUI*& GlobalNamespace::ColorSchemeDropdown::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeDropdown::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSchemeView _colorSchemeView
::GlobalNamespace::ColorSchemeView*& GlobalNamespace::ColorSchemeDropdown::dyn__colorSchemeView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeDropdown::dyn__colorSchemeView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorSchemeView"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSchemeView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSchemeTableCell _cellPrefab
::GlobalNamespace::ColorSchemeTableCell*& GlobalNamespace::ColorSchemeDropdown::dyn__cellPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeDropdown::dyn__cellPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSchemeTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _cellReuseIdentifier
::StringW& GlobalNamespace::ColorSchemeDropdown::dyn__cellReuseIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeDropdown::dyn__cellReuseIdentifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellReuseIdentifier"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cellSize
float& GlobalNamespace::ColorSchemeDropdown::dyn__cellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeDropdown::dyn__cellSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cellSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IReadOnlyList`1<ColorScheme> _colorSchemes
::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::ColorScheme*>*& GlobalNamespace::ColorSchemeDropdown::dyn__colorSchemes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeDropdown::dyn__colorSchemes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorSchemes"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::ColorScheme*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
bool& GlobalNamespace::ColorSchemeDropdown::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeDropdown::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorSchemeDropdown.LazyInit
void GlobalNamespace::ColorSchemeDropdown::LazyInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeDropdown::LazyInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LazyInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorSchemeDropdown.SetData
void GlobalNamespace::ColorSchemeDropdown::SetData(::System::Collections::Generic::IReadOnlyList_1<::GlobalNamespace::ColorScheme*>* colorSchemes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeDropdown::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorSchemes)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, colorSchemes);
}
// Autogenerated method: ColorSchemeDropdown.CellSize
float GlobalNamespace::ColorSchemeDropdown::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeDropdown::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ColorSchemeDropdown.NumberOfCells
int GlobalNamespace::ColorSchemeDropdown::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeDropdown::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ColorSchemeDropdown.CellForIdx
::HMUI::TableCell* GlobalNamespace::ColorSchemeDropdown::CellForIdx(::HMUI::TableView* tableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeDropdown::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodRethrow<::HMUI::TableCell*, false>(this, ___internal__method, tableView, idx);
}
// Autogenerated method: ColorSchemeDropdown.HandleDidSelectCellWithIdx
void GlobalNamespace::ColorSchemeDropdown::HandleDidSelectCellWithIdx(::HMUI::DropdownWithTableView* dropdownWithTableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeDropdown::HandleDidSelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDidSelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dropdownWithTableView), ::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dropdownWithTableView, idx);
}
// Autogenerated method: ColorSchemeDropdown.RefreshUI
void GlobalNamespace::ColorSchemeDropdown::RefreshUI(::GlobalNamespace::ColorScheme* colorScheme) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeDropdown::RefreshUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorScheme)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, colorScheme);
}
// Autogenerated method: ColorSchemeDropdown.OnDestroy
void GlobalNamespace::ColorSchemeDropdown::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeDropdown::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorSchemeDropdown.Init
void GlobalNamespace::ColorSchemeDropdown::Init(::HMUI::TableView::IDataSource* initTableViewDataSource) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeDropdown::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(initTableViewDataSource)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, initTableViewDataSource);
}
// Autogenerated method: ColorSchemeDropdown.SelectCellWithIdx
void GlobalNamespace::ColorSchemeDropdown::SelectCellWithIdx(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeDropdown::SelectCellWithIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorSchemeTableCell
#include "GlobalNamespace/ColorSchemeTableCell.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: ColorSchemeView
#include "GlobalNamespace/ColorSchemeView.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _text
::TMPro::TextMeshProUGUI*& GlobalNamespace::ColorSchemeTableCell::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeTableCell::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSchemeView _colorSchemeView
::GlobalNamespace::ColorSchemeView*& GlobalNamespace::ColorSchemeTableCell::dyn__colorSchemeView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeTableCell::dyn__colorSchemeView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorSchemeView"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSchemeView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _editIcon
::UnityEngine::UI::Image*& GlobalNamespace::ColorSchemeTableCell::dyn__editIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeTableCell::dyn__editIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editIcon"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorSchemeTableCell.get_text
::StringW GlobalNamespace::ColorSchemeTableCell::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeTableCell::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: ColorSchemeTableCell.set_text
void GlobalNamespace::ColorSchemeTableCell::set_text(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeTableCell::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorSchemeTableCell.set_showEditIcon
void GlobalNamespace::ColorSchemeTableCell::set_showEditIcon(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeTableCell::set_showEditIcon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_showEditIcon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorSchemeTableCell.SetColors
void GlobalNamespace::ColorSchemeTableCell::SetColors(::UnityEngine::Color saberAColor, ::UnityEngine::Color saberBColor, ::UnityEngine::Color environment0Color, ::UnityEngine::Color environment1Color, ::UnityEngine::Color obstacleColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeTableCell::SetColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saberAColor), ::il2cpp_utils::ExtractType(saberBColor), ::il2cpp_utils::ExtractType(environment0Color), ::il2cpp_utils::ExtractType(environment1Color), ::il2cpp_utils::ExtractType(obstacleColor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, saberAColor, saberBColor, environment0Color, environment1Color, obstacleColor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorSchemeView
#include "GlobalNamespace/ColorSchemeView.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _saberAColorImage
::UnityEngine::UI::Image*& GlobalNamespace::ColorSchemeView::dyn__saberAColorImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeView::dyn__saberAColorImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberAColorImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _saberBColorImage
::UnityEngine::UI::Image*& GlobalNamespace::ColorSchemeView::dyn__saberBColorImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeView::dyn__saberBColorImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberBColorImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _environment0ColorImage
::UnityEngine::UI::Image*& GlobalNamespace::ColorSchemeView::dyn__environment0ColorImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeView::dyn__environment0ColorImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environment0ColorImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _environment1ColorImage
::UnityEngine::UI::Image*& GlobalNamespace::ColorSchemeView::dyn__environment1ColorImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeView::dyn__environment1ColorImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environment1ColorImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _obstacleColorImage
::UnityEngine::UI::Image*& GlobalNamespace::ColorSchemeView::dyn__obstacleColorImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeView::dyn__obstacleColorImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obstacleColorImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorSchemeView.SetColors
void GlobalNamespace::ColorSchemeView::SetColors(::UnityEngine::Color saberAColor, ::UnityEngine::Color saberBColor, ::UnityEngine::Color environment0Color, ::UnityEngine::Color environment1Color, ::UnityEngine::Color obstacleColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorSchemeView::SetColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saberAColor), ::il2cpp_utils::ExtractType(saberBColor), ::il2cpp_utils::ExtractType(environment0Color), ::il2cpp_utils::ExtractType(environment1Color), ::il2cpp_utils::ExtractType(obstacleColor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, saberAColor, saberBColor, environment0Color, environment1Color, obstacleColor);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorsOverrideSettingsPanelController
#include "GlobalNamespace/ColorsOverrideSettingsPanelController.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: ColorSchemeDropdown
#include "GlobalNamespace/ColorSchemeDropdown.hpp"
// Including type: EditColorSchemeController
#include "GlobalNamespace/EditColorSchemeController.hpp"
// Including type: HMUI.ModalView
#include "HMUI/ModalView.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: HMUI.PanelAnimationSO
#include "HMUI/PanelAnimationSO.hpp"
// Including type: IAnalyticsModel
#include "GlobalNamespace/IAnalyticsModel.hpp"
// Including type: ColorSchemesSettings
#include "GlobalNamespace/ColorSchemesSettings.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: HMUI.DropdownWithTableView
#include "HMUI/DropdownWithTableView.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Toggle _overrideColorsToggle
::UnityEngine::UI::Toggle*& GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__overrideColorsToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__overrideColorsToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideColorsToggle"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Toggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _detailsPanelGO
::UnityEngine::GameObject*& GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__detailsPanelGO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__detailsPanelGO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_detailsPanelGO"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSchemeDropdown _colorSchemeDropDown
::GlobalNamespace::ColorSchemeDropdown*& GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__colorSchemeDropDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__colorSchemeDropDown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorSchemeDropDown"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSchemeDropdown**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private EditColorSchemeController _editColorSchemeController
::GlobalNamespace::EditColorSchemeController*& GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__editColorSchemeController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__editColorSchemeController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editColorSchemeController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EditColorSchemeController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ModalView _editColorSchemeModalView
::HMUI::ModalView*& GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__editColorSchemeModalView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__editColorSchemeModalView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editColorSchemeModalView"))->offset;
  return *reinterpret_cast<::HMUI::ModalView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _editColorSchemeButton
::UnityEngine::UI::Button*& GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__editColorSchemeButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__editColorSchemeButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editColorSchemeButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.PanelAnimationSO _presentPanelAnimation
::HMUI::PanelAnimationSO*& GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__presentPanelAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__presentPanelAnimation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_presentPanelAnimation"))->offset;
  return *reinterpret_cast<::HMUI::PanelAnimationSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.PanelAnimationSO _dismissPanelAnimation
::HMUI::PanelAnimationSO*& GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__dismissPanelAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__dismissPanelAnimation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dismissPanelAnimation"))->offset;
  return *reinterpret_cast<::HMUI::PanelAnimationSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAnalyticsModel _analyticsModel
::GlobalNamespace::IAnalyticsModel*& GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__analyticsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__analyticsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_analyticsModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAnalyticsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSchemesSettings _colorSchemesSettings
::GlobalNamespace::ColorSchemesSettings*& GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__colorSchemesSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__colorSchemesSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorSchemesSettings"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSchemesSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
bool& GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ButtonBinder _buttonBinder
::HMUI::ButtonBinder*& GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorsOverrideSettingsPanelController::dyn__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  return *reinterpret_cast<::HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorsOverrideSettingsPanelController.get_colorSchemesSettings
::GlobalNamespace::ColorSchemesSettings* GlobalNamespace::ColorsOverrideSettingsPanelController::get_colorSchemesSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorsOverrideSettingsPanelController::get_colorSchemesSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorSchemesSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ColorSchemesSettings*, false>(this, ___internal__method);
}
// Autogenerated method: ColorsOverrideSettingsPanelController.SetData
void GlobalNamespace::ColorsOverrideSettingsPanelController::SetData(::GlobalNamespace::ColorSchemesSettings* colorSchemesSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorsOverrideSettingsPanelController::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorSchemesSettings)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, colorSchemesSettings);
}
// Autogenerated method: ColorsOverrideSettingsPanelController.OnDestroy
void GlobalNamespace::ColorsOverrideSettingsPanelController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorsOverrideSettingsPanelController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorsOverrideSettingsPanelController.OnDisable
void GlobalNamespace::ColorsOverrideSettingsPanelController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorsOverrideSettingsPanelController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorsOverrideSettingsPanelController.Refresh
void GlobalNamespace::ColorsOverrideSettingsPanelController::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorsOverrideSettingsPanelController::Refresh");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorsOverrideSettingsPanelController.HandleDropDownDidSelectCellWithIdx
void GlobalNamespace::ColorsOverrideSettingsPanelController::HandleDropDownDidSelectCellWithIdx(::HMUI::DropdownWithTableView* dropDownWithTableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorsOverrideSettingsPanelController::HandleDropDownDidSelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDropDownDidSelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dropDownWithTableView), ::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, dropDownWithTableView, idx);
}
// Autogenerated method: ColorsOverrideSettingsPanelController.HandleOverrideColorsToggleValueChanged
void GlobalNamespace::ColorsOverrideSettingsPanelController::HandleOverrideColorsToggleValueChanged(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorsOverrideSettingsPanelController::HandleOverrideColorsToggleValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleOverrideColorsToggleValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: ColorsOverrideSettingsPanelController.HandleEditColorSchemeButtonWasPressed
void GlobalNamespace::ColorsOverrideSettingsPanelController::HandleEditColorSchemeButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorsOverrideSettingsPanelController::HandleEditColorSchemeButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEditColorSchemeButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorsOverrideSettingsPanelController.HandleEditColorSchemeControllerDidFinish
void GlobalNamespace::ColorsOverrideSettingsPanelController::HandleEditColorSchemeControllerDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorsOverrideSettingsPanelController::HandleEditColorSchemeControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEditColorSchemeControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorsOverrideSettingsPanelController.HandleEditColorSchemeControllerDidChangeColorScheme
void GlobalNamespace::ColorsOverrideSettingsPanelController::HandleEditColorSchemeControllerDidChangeColorScheme(::GlobalNamespace::ColorScheme* colorScheme) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorsOverrideSettingsPanelController::HandleEditColorSchemeControllerDidChangeColorScheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEditColorSchemeControllerDidChangeColorScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorScheme)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, colorScheme);
}
// Autogenerated method: ColorsOverrideSettingsPanelController.<HandleOverrideColorsToggleValueChanged>b__19_0
void GlobalNamespace::ColorsOverrideSettingsPanelController::$HandleOverrideColorsToggleValueChanged$b__19_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorsOverrideSettingsPanelController::<HandleOverrideColorsToggleValueChanged>b__19_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleOverrideColorsToggleValueChanged>b__19_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EditColorController
#include "GlobalNamespace/EditColorController.hpp"
// Including type: HSVPanelController
#include "GlobalNamespace/HSVPanelController.hpp"
// Including type: PreviousColorPanelController
#include "GlobalNamespace/PreviousColorPanelController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: ColorChangeUIEventType
#include "GlobalNamespace/ColorChangeUIEventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HSVPanelController _hsvPanelController
::GlobalNamespace::HSVPanelController*& GlobalNamespace::EditColorController::dyn__hsvPanelController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorController::dyn__hsvPanelController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hsvPanelController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HSVPanelController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PreviousColorPanelController _previousColorPanelController
::GlobalNamespace::PreviousColorPanelController*& GlobalNamespace::EditColorController::dyn__previousColorPanelController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorController::dyn__previousColorPanelController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousColorPanelController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PreviousColorPanelController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _cancelButton
::UnityEngine::UI::Button*& GlobalNamespace::EditColorController::dyn__cancelButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorController::dyn__cancelButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancelButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _applyButton
::UnityEngine::UI::Button*& GlobalNamespace::EditColorController::dyn__applyButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorController::dyn__applyButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_applyButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.Color> didChangeColorEvent
::System::Action_1<::UnityEngine::Color>*& GlobalNamespace::EditColorController::dyn_didChangeColorEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorController::dyn_didChangeColorEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didChangeColorEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::Color>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Boolean> didFinishEvent
::System::Action_1<bool>*& GlobalNamespace::EditColorController::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorController::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.Color> _colorCallback
::System::Action_1<::UnityEngine::Color>*& GlobalNamespace::EditColorController::dyn__colorCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorController::dyn__colorCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorCallback"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::Color>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _initialColor
::UnityEngine::Color& GlobalNamespace::EditColorController::dyn__initialColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorController::dyn__initialColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _colorChanged
bool& GlobalNamespace::EditColorController::dyn__colorChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorController::dyn__colorChanged");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorChanged"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EditColorController.add_didChangeColorEvent
void GlobalNamespace::EditColorController::add_didChangeColorEvent(::System::Action_1<::UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorController::add_didChangeColorEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didChangeColorEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditColorController.remove_didChangeColorEvent
void GlobalNamespace::EditColorController::remove_didChangeColorEvent(::System::Action_1<::UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorController::remove_didChangeColorEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didChangeColorEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditColorController.add_didFinishEvent
void GlobalNamespace::EditColorController::add_didFinishEvent(::System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditColorController.remove_didFinishEvent
void GlobalNamespace::EditColorController::remove_didFinishEvent(::System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditColorController.SetColorCallback
void GlobalNamespace::EditColorController::SetColorCallback(::System::Action_1<::UnityEngine::Color>* colorCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorController::SetColorCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColorCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, colorCallback);
}
// Autogenerated method: EditColorController.SetColor
void GlobalNamespace::EditColorController::SetColor(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorController::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: EditColorController.HandleHSVPanelControllerColorDidChange
void GlobalNamespace::EditColorController::HandleHSVPanelControllerColorDidChange(::UnityEngine::Color color, ::GlobalNamespace::ColorChangeUIEventType colorChangeUIEventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorController::HandleHSVPanelControllerColorDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHSVPanelControllerColorDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(colorChangeUIEventType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color, colorChangeUIEventType);
}
// Autogenerated method: EditColorController.HandlePreviousColorPanelControllerColorWasSelected
void GlobalNamespace::EditColorController::HandlePreviousColorPanelControllerColorWasSelected(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorController::HandlePreviousColorPanelControllerColorWasSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePreviousColorPanelControllerColorWasSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: EditColorController.HandleCancelButtonWasPressed
void GlobalNamespace::EditColorController::HandleCancelButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorController::HandleCancelButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCancelButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditColorController.HandleApplyButtonWasPressed
void GlobalNamespace::EditColorController::HandleApplyButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorController::HandleApplyButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleApplyButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditColorController.ChangeColor
void GlobalNamespace::EditColorController::ChangeColor(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorController::ChangeColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: EditColorController.DidActivate
void GlobalNamespace::EditColorController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: EditColorController.DidDeactivate
void GlobalNamespace::EditColorController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EditColorSchemeController
#include "GlobalNamespace/EditColorSchemeController.hpp"
// Including type: ColorSchemeColorsToggleGroup
#include "GlobalNamespace/ColorSchemeColorsToggleGroup.hpp"
// Including type: RGBPanelController
#include "GlobalNamespace/RGBPanelController.hpp"
// Including type: HSVPanelController
#include "GlobalNamespace/HSVPanelController.hpp"
// Including type: PreviousColorPanelController
#include "GlobalNamespace/PreviousColorPanelController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: ColorChangeUIEventType
#include "GlobalNamespace/ColorChangeUIEventType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ColorSchemeColorsToggleGroup _colorSchemeColorsToggleGroup
::GlobalNamespace::ColorSchemeColorsToggleGroup*& GlobalNamespace::EditColorSchemeController::dyn__colorSchemeColorsToggleGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorSchemeController::dyn__colorSchemeColorsToggleGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorSchemeColorsToggleGroup"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSchemeColorsToggleGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RGBPanelController _rgbPanelController
::GlobalNamespace::RGBPanelController*& GlobalNamespace::EditColorSchemeController::dyn__rgbPanelController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorSchemeController::dyn__rgbPanelController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rgbPanelController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RGBPanelController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HSVPanelController _hsvPanelController
::GlobalNamespace::HSVPanelController*& GlobalNamespace::EditColorSchemeController::dyn__hsvPanelController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorSchemeController::dyn__hsvPanelController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hsvPanelController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HSVPanelController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PreviousColorPanelController _previousColorPanelController
::GlobalNamespace::PreviousColorPanelController*& GlobalNamespace::EditColorSchemeController::dyn__previousColorPanelController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorSchemeController::dyn__previousColorPanelController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_previousColorPanelController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PreviousColorPanelController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _closeButton
::UnityEngine::UI::Button*& GlobalNamespace::EditColorSchemeController::dyn__closeButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorSchemeController::dyn__closeButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_closeButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action didFinishEvent
::System::Action*& GlobalNamespace::EditColorSchemeController::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorSchemeController::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<ColorScheme> didChangeColorSchemeEvent
::System::Action_1<::GlobalNamespace::ColorScheme*>*& GlobalNamespace::EditColorSchemeController::dyn_didChangeColorSchemeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorSchemeController::dyn_didChangeColorSchemeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didChangeColorSchemeEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::ColorScheme*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ButtonBinder _buttonBinder
::HMUI::ButtonBinder*& GlobalNamespace::EditColorSchemeController::dyn__buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorSchemeController::dyn__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  return *reinterpret_cast<::HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EditColorSchemeController.add_didFinishEvent
void GlobalNamespace::EditColorSchemeController::add_didFinishEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorSchemeController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditColorSchemeController.remove_didFinishEvent
void GlobalNamespace::EditColorSchemeController::remove_didFinishEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorSchemeController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditColorSchemeController.add_didChangeColorSchemeEvent
void GlobalNamespace::EditColorSchemeController::add_didChangeColorSchemeEvent(::System::Action_1<::GlobalNamespace::ColorScheme*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorSchemeController::add_didChangeColorSchemeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didChangeColorSchemeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditColorSchemeController.remove_didChangeColorSchemeEvent
void GlobalNamespace::EditColorSchemeController::remove_didChangeColorSchemeEvent(::System::Action_1<::GlobalNamespace::ColorScheme*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorSchemeController::remove_didChangeColorSchemeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didChangeColorSchemeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditColorSchemeController.SetColorScheme
void GlobalNamespace::EditColorSchemeController::SetColorScheme(::GlobalNamespace::ColorScheme* colorScheme) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorSchemeController::SetColorScheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColorScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorScheme)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, colorScheme);
}
// Autogenerated method: EditColorSchemeController.Start
void GlobalNamespace::EditColorSchemeController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorSchemeController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditColorSchemeController.OnDestroy
void GlobalNamespace::EditColorSchemeController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorSchemeController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EditColorSchemeController.HandleColorSchemeColorsToggleGroupSelectedColorDidChange
void GlobalNamespace::EditColorSchemeController::HandleColorSchemeColorsToggleGroupSelectedColorDidChange(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorSchemeController::HandleColorSchemeColorsToggleGroupSelectedColorDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleColorSchemeColorsToggleGroupSelectedColorDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: EditColorSchemeController.HandleRGBPanelControllerColorDidChange
void GlobalNamespace::EditColorSchemeController::HandleRGBPanelControllerColorDidChange(::UnityEngine::Color color, ::GlobalNamespace::ColorChangeUIEventType colorChangeUIEventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorSchemeController::HandleRGBPanelControllerColorDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRGBPanelControllerColorDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(colorChangeUIEventType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color, colorChangeUIEventType);
}
// Autogenerated method: EditColorSchemeController.HandleHSVPanelControllerColorDidChange
void GlobalNamespace::EditColorSchemeController::HandleHSVPanelControllerColorDidChange(::UnityEngine::Color color, ::GlobalNamespace::ColorChangeUIEventType colorChangeUIEventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorSchemeController::HandleHSVPanelControllerColorDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleHSVPanelControllerColorDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(colorChangeUIEventType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color, colorChangeUIEventType);
}
// Autogenerated method: EditColorSchemeController.HandlePreviousColorPanelControllerColorWasSelected
void GlobalNamespace::EditColorSchemeController::HandlePreviousColorPanelControllerColorWasSelected(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorSchemeController::HandlePreviousColorPanelControllerColorWasSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePreviousColorPanelControllerColorWasSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: EditColorSchemeController.<Start>b__13_0
void GlobalNamespace::EditColorSchemeController::$Start$b__13_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EditColorSchemeController::<Start>b__13_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__13_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HSVPanelController
#include "GlobalNamespace/HSVPanelController.hpp"
// Including type: ColorSaturationValueSlider
#include "GlobalNamespace/ColorSaturationValueSlider.hpp"
// Including type: ColorHueSlider
#include "GlobalNamespace/ColorHueSlider.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ColorSaturationValueSlider _colorSaturationValueSlider
::GlobalNamespace::ColorSaturationValueSlider*& GlobalNamespace::HSVPanelController::dyn__colorSaturationValueSlider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HSVPanelController::dyn__colorSaturationValueSlider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorSaturationValueSlider"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSaturationValueSlider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorHueSlider _colorHueSlider
::GlobalNamespace::ColorHueSlider*& GlobalNamespace::HSVPanelController::dyn__colorHueSlider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HSVPanelController::dyn__colorHueSlider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorHueSlider"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorHueSlider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<UnityEngine.Color,ColorChangeUIEventType> colorDidChangeEvent
::System::Action_2<::UnityEngine::Color, ::GlobalNamespace::ColorChangeUIEventType>*& GlobalNamespace::HSVPanelController::dyn_colorDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HSVPanelController::dyn_colorDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorDidChangeEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::UnityEngine::Color, ::GlobalNamespace::ColorChangeUIEventType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _hsvColor
::UnityEngine::Vector3& GlobalNamespace::HSVPanelController::dyn__hsvColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HSVPanelController::dyn__hsvColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hsvColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HSVPanelController.get_color
::UnityEngine::Color GlobalNamespace::HSVPanelController::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HSVPanelController::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: HSVPanelController.set_color
void GlobalNamespace::HSVPanelController::set_color(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HSVPanelController::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HSVPanelController.add_colorDidChangeEvent
void GlobalNamespace::HSVPanelController::add_colorDidChangeEvent(::System::Action_2<::UnityEngine::Color, ::GlobalNamespace::ColorChangeUIEventType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HSVPanelController::add_colorDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_colorDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HSVPanelController.remove_colorDidChangeEvent
void GlobalNamespace::HSVPanelController::remove_colorDidChangeEvent(::System::Action_2<::UnityEngine::Color, ::GlobalNamespace::ColorChangeUIEventType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HSVPanelController::remove_colorDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_colorDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HSVPanelController.Awake
void GlobalNamespace::HSVPanelController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HSVPanelController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HSVPanelController.OnDestroy
void GlobalNamespace::HSVPanelController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HSVPanelController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HSVPanelController.HandleColorSaturationOrValueDidChange
void GlobalNamespace::HSVPanelController::HandleColorSaturationOrValueDidChange(::GlobalNamespace::ColorSaturationValueSlider* slider, ::UnityEngine::Vector2 colorSaturationAndValue, ::GlobalNamespace::ColorChangeUIEventType colorChangeUIEventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HSVPanelController::HandleColorSaturationOrValueDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleColorSaturationOrValueDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slider), ::il2cpp_utils::ExtractType(colorSaturationAndValue), ::il2cpp_utils::ExtractType(colorChangeUIEventType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, slider, colorSaturationAndValue, colorChangeUIEventType);
}
// Autogenerated method: HSVPanelController.HandleColorHueDidChange
void GlobalNamespace::HSVPanelController::HandleColorHueDidChange(::GlobalNamespace::ColorHueSlider* slider, float hue, ::GlobalNamespace::ColorChangeUIEventType colorChangeUIEventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HSVPanelController::HandleColorHueDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleColorHueDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slider), ::il2cpp_utils::ExtractType(hue), ::il2cpp_utils::ExtractType(colorChangeUIEventType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, slider, hue, colorChangeUIEventType);
}
// Autogenerated method: HSVPanelController.RefreshSlidersValues
void GlobalNamespace::HSVPanelController::RefreshSlidersValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HSVPanelController::RefreshSlidersValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshSlidersValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HSVPanelController.RefreshSlidersColors
void GlobalNamespace::HSVPanelController::RefreshSlidersColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HSVPanelController::RefreshSlidersColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshSlidersColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PreviousColorPanelController
#include "GlobalNamespace/PreviousColorPanelController.hpp"
// Including type: UnityEngine.UI.Graphic
#include "UnityEngine/UI/Graphic.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxColors
int GlobalNamespace::PreviousColorPanelController::_get_kMaxColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PreviousColorPanelController::_get_kMaxColors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "PreviousColorPanelController", "kMaxColors"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxColors
void GlobalNamespace::PreviousColorPanelController::_set_kMaxColors(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PreviousColorPanelController::_set_kMaxColors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PreviousColorPanelController", "kMaxColors", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Graphic[] _graphics
::ArrayW<::UnityEngine::UI::Graphic*>& GlobalNamespace::PreviousColorPanelController::dyn__graphics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PreviousColorPanelController::dyn__graphics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_graphics"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::UI::Graphic*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _button
::UnityEngine::UI::Button*& GlobalNamespace::PreviousColorPanelController::dyn__button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PreviousColorPanelController::dyn__button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_button"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.Color> colorWasSelectedEvent
::System::Action_1<::UnityEngine::Color>*& GlobalNamespace::PreviousColorPanelController::dyn_colorWasSelectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PreviousColorPanelController::dyn_colorWasSelectedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorWasSelectedEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::UnityEngine::Color>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ButtonBinder _buttonBinder
::HMUI::ButtonBinder*& GlobalNamespace::PreviousColorPanelController::dyn__buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PreviousColorPanelController::dyn__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  return *reinterpret_cast<::HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color
::UnityEngine::Color& GlobalNamespace::PreviousColorPanelController::dyn__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PreviousColorPanelController::dyn__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _graphicsColor
::UnityEngine::Color& GlobalNamespace::PreviousColorPanelController::dyn__graphicsColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PreviousColorPanelController::dyn__graphicsColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_graphicsColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PreviousColorPanelController.add_colorWasSelectedEvent
void GlobalNamespace::PreviousColorPanelController::add_colorWasSelectedEvent(::System::Action_1<::UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PreviousColorPanelController::add_colorWasSelectedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_colorWasSelectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PreviousColorPanelController.remove_colorWasSelectedEvent
void GlobalNamespace::PreviousColorPanelController::remove_colorWasSelectedEvent(::System::Action_1<::UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PreviousColorPanelController::remove_colorWasSelectedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_colorWasSelectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PreviousColorPanelController.Awake
void GlobalNamespace::PreviousColorPanelController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PreviousColorPanelController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PreviousColorPanelController.OnDestroy
void GlobalNamespace::PreviousColorPanelController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PreviousColorPanelController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PreviousColorPanelController.AddColor
void GlobalNamespace::PreviousColorPanelController::AddColor(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PreviousColorPanelController::AddColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated method: PreviousColorPanelController.DiscardUpcomingColor
void GlobalNamespace::PreviousColorPanelController::DiscardUpcomingColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PreviousColorPanelController::DiscardUpcomingColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DiscardUpcomingColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PreviousColorPanelController.<Awake>b__9_0
void GlobalNamespace::PreviousColorPanelController::$Awake$b__9_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PreviousColorPanelController::<Awake>b__9_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__9_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RGBPanelController
#include "GlobalNamespace/RGBPanelController.hpp"
// Including type: HMUI.ColorGradientSlider
#include "HMUI/ColorGradientSlider.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.ColorGradientSlider _redSlider
::HMUI::ColorGradientSlider*& GlobalNamespace::RGBPanelController::dyn__redSlider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RGBPanelController::dyn__redSlider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_redSlider"))->offset;
  return *reinterpret_cast<::HMUI::ColorGradientSlider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ColorGradientSlider _greenSlider
::HMUI::ColorGradientSlider*& GlobalNamespace::RGBPanelController::dyn__greenSlider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RGBPanelController::dyn__greenSlider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_greenSlider"))->offset;
  return *reinterpret_cast<::HMUI::ColorGradientSlider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ColorGradientSlider _blueSlider
::HMUI::ColorGradientSlider*& GlobalNamespace::RGBPanelController::dyn__blueSlider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RGBPanelController::dyn__blueSlider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blueSlider"))->offset;
  return *reinterpret_cast<::HMUI::ColorGradientSlider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<UnityEngine.Color,ColorChangeUIEventType> colorDidChangeEvent
::System::Action_2<::UnityEngine::Color, ::GlobalNamespace::ColorChangeUIEventType>*& GlobalNamespace::RGBPanelController::dyn_colorDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RGBPanelController::dyn_colorDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorDidChangeEvent"))->offset;
  return *reinterpret_cast<::System::Action_2<::UnityEngine::Color, ::GlobalNamespace::ColorChangeUIEventType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color
::UnityEngine::Color& GlobalNamespace::RGBPanelController::dyn__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RGBPanelController::dyn__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RGBPanelController.get_color
::UnityEngine::Color GlobalNamespace::RGBPanelController::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RGBPanelController::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: RGBPanelController.set_color
void GlobalNamespace::RGBPanelController::set_color(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RGBPanelController::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RGBPanelController.add_colorDidChangeEvent
void GlobalNamespace::RGBPanelController::add_colorDidChangeEvent(::System::Action_2<::UnityEngine::Color, ::GlobalNamespace::ColorChangeUIEventType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RGBPanelController::add_colorDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_colorDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RGBPanelController.remove_colorDidChangeEvent
void GlobalNamespace::RGBPanelController::remove_colorDidChangeEvent(::System::Action_2<::UnityEngine::Color, ::GlobalNamespace::ColorChangeUIEventType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RGBPanelController::remove_colorDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_colorDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RGBPanelController.Awake
void GlobalNamespace::RGBPanelController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RGBPanelController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RGBPanelController.OnDestroy
void GlobalNamespace::RGBPanelController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RGBPanelController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RGBPanelController.HandleSliderColorDidChange
void GlobalNamespace::RGBPanelController::HandleSliderColorDidChange(::HMUI::ColorGradientSlider* slider, ::UnityEngine::Color color, ::GlobalNamespace::ColorChangeUIEventType colorChangeUIEventType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RGBPanelController::HandleSliderColorDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSliderColorDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slider), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(colorChangeUIEventType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, slider, color, colorChangeUIEventType);
}
// Autogenerated method: RGBPanelController.RefreshSlidersValues
void GlobalNamespace::RGBPanelController::RefreshSlidersValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RGBPanelController::RefreshSlidersValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshSlidersValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RGBPanelController.RefreshSlidersColors
void GlobalNamespace::RGBPanelController::RefreshSlidersColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RGBPanelController::RefreshSlidersColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshSlidersColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AnnotatedBeatmapLevelCollectionCell
#include "GlobalNamespace/AnnotatedBeatmapLevelCollectionCell.hpp"
// Including type: AnnotatedBeatmapLevelCollectionCell/<RefreshAvailabilityAsync>d__23
#include "GlobalNamespace/AnnotatedBeatmapLevelCollectionCell_-RefreshAvailabilityAsync-d__23.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: IAnnotatedBeatmapLevelCollection
#include "GlobalNamespace/IAnnotatedBeatmapLevelCollection.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _infoText
::TMPro::TextMeshProUGUI*& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__infoText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__infoText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_infoText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView _coverImage
::HMUI::ImageView*& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__coverImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__coverImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_coverImage"))->offset;
  return *reinterpret_cast<::HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView _selectionImage
::HMUI::ImageView*& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__selectionImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__selectionImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectionImage"))->offset;
  return *reinterpret_cast<::HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _newPromoRibbonObjects
::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__newPromoRibbonObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__newPromoRibbonObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_newPromoRibbonObjects"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _downloadIconObject
::UnityEngine::GameObject*& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__downloadIconObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__downloadIconObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_downloadIconObject"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _selectedColor0
::UnityEngine::Color& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__selectedColor0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__selectedColor0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedColor0"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _selectedColor1
::UnityEngine::Color& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__selectedColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__selectedColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectedColor1"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _highlightedColor0
::UnityEngine::Color& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__highlightedColor0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__highlightedColor0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightedColor0"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _highlightedColor1
::UnityEngine::Color& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__highlightedColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__highlightedColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightedColor1"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <cellIndex>k__BackingField
int& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn_$cellIndex$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn_$cellIndex$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cellIndex>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IAnnotatedBeatmapLevelCollection _annotatedBeatmapLevelCollection
::GlobalNamespace::IAnnotatedBeatmapLevelCollection*& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__annotatedBeatmapLevelCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__annotatedBeatmapLevelCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_annotatedBeatmapLevelCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAnnotatedBeatmapLevelCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource _cancellationTokenSource
::System::Threading::CancellationTokenSource*& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__cancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::dyn__cancellationTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cancellationTokenSource"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionCell.get_cellIndex
int GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::get_cellIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::get_cellIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cellIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionCell.set_cellIndex
void GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::set_cellIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::set_cellIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cellIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionCell.set_showNewRibbon
void GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::set_showNewRibbon(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::set_showNewRibbon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_showNewRibbon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionCell.SetData
void GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::SetData(::GlobalNamespace::IAnnotatedBeatmapLevelCollection* annotatedBeatmapLevelCollection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(annotatedBeatmapLevelCollection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, annotatedBeatmapLevelCollection);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionCell.RefreshVisuals
void GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::RefreshVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::RefreshVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionCell.GetInfoText
::StringW GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::GetInfoText(::StringW name, int songs, int purchased) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::GetInfoText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInfoText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(songs), ::il2cpp_utils::ExtractType(purchased)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, name, songs, purchased);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionCell.RefreshAvailabilityAsync
void GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::RefreshAvailabilityAsync(::GlobalNamespace::AdditionalContentModel* contentModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::RefreshAvailabilityAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshAvailabilityAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contentModel)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, contentModel);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionCell.SetDownloadIconVisible
void GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::SetDownloadIconVisible(bool visible) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::SetDownloadIconVisible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDownloadIconVisible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(visible)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, visible);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionCell.CancelAsyncOperations
void GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::CancelAsyncOperations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::CancelAsyncOperations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelAsyncOperations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionCell.InternalToggle
void GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::InternalToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::InternalToggle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalToggle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionCell.SelectionDidChange
void GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::SelectionDidChange(::HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::SelectionDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transitionType);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionCell.HighlightDidChange
void GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::HighlightDidChange(::HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::HighlightDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighlightDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transitionType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AnnotatedBeatmapLevelCollectionCell/<RefreshAvailabilityAsync>d__23
#include "GlobalNamespace/AnnotatedBeatmapLevelCollectionCell_-RefreshAvailabilityAsync-d__23.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AnnotatedBeatmapLevelCollectionCell <>4__this
::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell*& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AdditionalContentModel contentModel
::GlobalNamespace::AdditionalContentModel*& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_contentModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_contentModel");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "contentModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::AdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationToken <cancellationToken>5__2
::System::Threading::CancellationToken& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$cancellationToken$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$cancellationToken$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cancellationToken>5__2"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <numberOfOwnedLevels>5__3
int& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$numberOfOwnedLevels$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$numberOfOwnedLevels$5__3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<numberOfOwnedLevels>5__3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <error>5__4
bool& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$error$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$error$5__4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<error>5__4"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<IPreviewBeatmapLevel> <>7__wrap4
::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::IPreviewBeatmapLevel*>*& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$$7__wrap4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$$7__wrap4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>7__wrap4"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::GlobalNamespace::IPreviewBeatmapLevel*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/EntitlementStatus> <>u__1
::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionCell/<RefreshAvailabilityAsync>d__23.MoveNext
void GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionCell/<RefreshAvailabilityAsync>d__23.SetStateMachine
void GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AnnotatedBeatmapLevelCollectionCell::$RefreshAvailabilityAsync$d__23::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapCharacteristicTableCell
#include "GlobalNamespace/BeatmapCharacteristicTableCell.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _nameText
::TMPro::TextMeshProUGUI*& GlobalNamespace::BeatmapCharacteristicTableCell::dyn__nameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicTableCell::dyn__nameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nameText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _iconImage
::UnityEngine::UI::Image*& GlobalNamespace::BeatmapCharacteristicTableCell::dyn__iconImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicTableCell::dyn__iconImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_iconImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _bgImage
::UnityEngine::UI::Image*& GlobalNamespace::BeatmapCharacteristicTableCell::dyn__bgImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicTableCell::dyn__bgImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bgImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _selectionImage
::UnityEngine::UI::Image*& GlobalNamespace::BeatmapCharacteristicTableCell::dyn__selectionImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicTableCell::dyn__selectionImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_selectionImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _bgNormalColor
::UnityEngine::Color& GlobalNamespace::BeatmapCharacteristicTableCell::dyn__bgNormalColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicTableCell::dyn__bgNormalColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bgNormalColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _bgHighlightColor
::UnityEngine::Color& GlobalNamespace::BeatmapCharacteristicTableCell::dyn__bgHighlightColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicTableCell::dyn__bgHighlightColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bgHighlightColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapCharacteristicTableCell.SetData
void GlobalNamespace::BeatmapCharacteristicTableCell::SetData(::GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicTableCell::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapCharacteristic)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapCharacteristic);
}
// Autogenerated method: BeatmapCharacteristicTableCell.RefreshVisuals
void GlobalNamespace::BeatmapCharacteristicTableCell::RefreshVisuals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicTableCell::RefreshVisuals");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshVisuals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicTableCell.SelectionDidChange
void GlobalNamespace::BeatmapCharacteristicTableCell::SelectionDidChange(::HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicTableCell::SelectionDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transitionType);
}
// Autogenerated method: BeatmapCharacteristicTableCell.HighlightDidChange
void GlobalNamespace::BeatmapCharacteristicTableCell::HighlightDidChange(::HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BeatmapCharacteristicTableCell::HighlightDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighlightDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transitionType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorPickerButtonController
#include "GlobalNamespace/ColorPickerButtonController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _button
::UnityEngine::UI::Button*& GlobalNamespace::ColorPickerButtonController::dyn__button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorPickerButtonController::dyn__button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_button"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _colorImage
::UnityEngine::UI::Image*& GlobalNamespace::ColorPickerButtonController::dyn__colorImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorPickerButtonController::dyn__colorImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorPickerButtonController.get_button
::UnityEngine::UI::Button* GlobalNamespace::ColorPickerButtonController::get_button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorPickerButtonController::get_button");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_button", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::UI::Button*, false>(this, ___internal__method);
}
// Autogenerated method: ColorPickerButtonController.SetColor
void GlobalNamespace::ColorPickerButtonController::SetColor(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorPickerButtonController::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorStepValuePicker
#include "GlobalNamespace/ColorStepValuePicker.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _decButton
::UnityEngine::UI::Button*& GlobalNamespace::ColorStepValuePicker::dyn__decButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorStepValuePicker::dyn__decButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_decButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _incButton
::UnityEngine::UI::Button*& GlobalNamespace::ColorStepValuePicker::dyn__incButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorStepValuePicker::dyn__incButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_incButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView _valueImage
::HMUI::ImageView*& GlobalNamespace::ColorStepValuePicker::dyn__valueImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorStepValuePicker::dyn__valueImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_valueImage"))->offset;
  return *reinterpret_cast<::HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action decButtonWasPressedEvent
::System::Action*& GlobalNamespace::ColorStepValuePicker::dyn_decButtonWasPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorStepValuePicker::dyn_decButtonWasPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "decButtonWasPressedEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action incButtonWasPressedEvent
::System::Action*& GlobalNamespace::ColorStepValuePicker::dyn_incButtonWasPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorStepValuePicker::dyn_incButtonWasPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "incButtonWasPressedEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ColorStepValuePicker.get_color
::UnityEngine::Color GlobalNamespace::ColorStepValuePicker::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorStepValuePicker::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: ColorStepValuePicker.set_color
void GlobalNamespace::ColorStepValuePicker::set_color(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorStepValuePicker::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorStepValuePicker.set_decButtonInteractable
void GlobalNamespace::ColorStepValuePicker::set_decButtonInteractable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorStepValuePicker::set_decButtonInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_decButtonInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorStepValuePicker.set_incButtonInteractable
void GlobalNamespace::ColorStepValuePicker::set_incButtonInteractable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorStepValuePicker::set_incButtonInteractable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_incButtonInteractable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorStepValuePicker.add_decButtonWasPressedEvent
void GlobalNamespace::ColorStepValuePicker::add_decButtonWasPressedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorStepValuePicker::add_decButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_decButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorStepValuePicker.remove_decButtonWasPressedEvent
void GlobalNamespace::ColorStepValuePicker::remove_decButtonWasPressedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorStepValuePicker::remove_decButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_decButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorStepValuePicker.add_incButtonWasPressedEvent
void GlobalNamespace::ColorStepValuePicker::add_incButtonWasPressedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorStepValuePicker::add_incButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_incButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorStepValuePicker.remove_incButtonWasPressedEvent
void GlobalNamespace::ColorStepValuePicker::remove_incButtonWasPressedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorStepValuePicker::remove_incButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_incButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ColorStepValuePicker.OnEnable
void GlobalNamespace::ColorStepValuePicker::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorStepValuePicker::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorStepValuePicker.OnDisable
void GlobalNamespace::ColorStepValuePicker::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorStepValuePicker::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorStepValuePicker.IncButtonPressed
void GlobalNamespace::ColorStepValuePicker::IncButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorStepValuePicker::IncButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ColorStepValuePicker.DecButtonPressed
void GlobalNamespace::ColorStepValuePicker::DecButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ColorStepValuePicker::DecButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DifficultyTableCell
#include "GlobalNamespace/DifficultyTableCell.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: FillIndicator
#include "GlobalNamespace/FillIndicator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _difficultyText
::TMPro::TextMeshProUGUI*& GlobalNamespace::DifficultyTableCell::dyn__difficultyText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableCell::dyn__difficultyText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultyText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _bgImage
::UnityEngine::UI::Image*& GlobalNamespace::DifficultyTableCell::dyn__bgImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableCell::dyn__bgImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bgImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _highlightImage
::UnityEngine::UI::Image*& GlobalNamespace::DifficultyTableCell::dyn__highlightImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableCell::dyn__highlightImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FillIndicator _fillIndicator
::GlobalNamespace::FillIndicator*& GlobalNamespace::DifficultyTableCell::dyn__fillIndicator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableCell::dyn__fillIndicator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fillIndicator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FillIndicator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DifficultyTableCell.get_difficultyText
::StringW GlobalNamespace::DifficultyTableCell::get_difficultyText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableCell::get_difficultyText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_difficultyText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: DifficultyTableCell.set_difficultyText
void GlobalNamespace::DifficultyTableCell::set_difficultyText(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableCell::set_difficultyText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_difficultyText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DifficultyTableCell.set_difficultyValue
void GlobalNamespace::DifficultyTableCell::set_difficultyValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableCell::set_difficultyValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_difficultyValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DifficultyTableCell.SelectionDidChange
void GlobalNamespace::DifficultyTableCell::SelectionDidChange(::HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableCell::SelectionDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectionDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transitionType);
}
// Autogenerated method: DifficultyTableCell.HighlightDidChange
void GlobalNamespace::DifficultyTableCell::HighlightDidChange(::HMUI::SelectableCell::TransitionType transitionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DifficultyTableCell::HighlightDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighlightDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transitionType)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transitionType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FillIndicator
#include "GlobalNamespace/FillIndicator.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _bgImage
::UnityEngine::UI::Image*& GlobalNamespace::FillIndicator::dyn__bgImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FillIndicator::dyn__bgImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bgImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _image
::UnityEngine::UI::Image*& GlobalNamespace::FillIndicator::dyn__image() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FillIndicator::dyn__image");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_image"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FillIndicator.get_fillAmount
float GlobalNamespace::FillIndicator::get_fillAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FillIndicator::get_fillAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fillAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: FillIndicator.set_fillAmount
void GlobalNamespace::FillIndicator::set_fillAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FillIndicator::set_fillAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fillAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerListDetailTableCell
#include "GlobalNamespace/GameServerListDetailTableCell.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _joinServerButton
::UnityEngine::UI::Button*& GlobalNamespace::GameServerListDetailTableCell::dyn__joinServerButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerListDetailTableCell::dyn__joinServerButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_joinServerButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action joinServerButtonWasPressedEvent
::System::Action*& GlobalNamespace::GameServerListDetailTableCell::dyn_joinServerButtonWasPressedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerListDetailTableCell::dyn_joinServerButtonWasPressedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "joinServerButtonWasPressedEvent"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly HMUI.ButtonBinder _buttonBinder
::HMUI::ButtonBinder*& GlobalNamespace::GameServerListDetailTableCell::dyn__buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerListDetailTableCell::dyn__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  return *reinterpret_cast<::HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameServerListDetailTableCell.add_joinServerButtonWasPressedEvent
void GlobalNamespace::GameServerListDetailTableCell::add_joinServerButtonWasPressedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerListDetailTableCell::add_joinServerButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_joinServerButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerListDetailTableCell.remove_joinServerButtonWasPressedEvent
void GlobalNamespace::GameServerListDetailTableCell::remove_joinServerButtonWasPressedEvent(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerListDetailTableCell::remove_joinServerButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_joinServerButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerListDetailTableCell.<Start>b__5_0
void GlobalNamespace::GameServerListDetailTableCell::$Start$b__5_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerListDetailTableCell::<Start>b__5_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Start>b__5_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerListDetailTableCell.Start
void GlobalNamespace::GameServerListDetailTableCell::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerListDetailTableCell::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerListTableCell
#include "GlobalNamespace/GameServerListTableCell.hpp"
// Including type: HMUI.CurvedTextMeshPro
#include "HMUI/CurvedTextMeshPro.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: SongPackMasksModel
#include "GlobalNamespace/SongPackMasksModel.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.CurvedTextMeshPro _serverName
::HMUI::CurvedTextMeshPro*& GlobalNamespace::GameServerListTableCell::dyn__serverName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerListTableCell::dyn__serverName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_serverName"))->offset;
  return *reinterpret_cast<::HMUI::CurvedTextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.CurvedTextMeshPro _difficultiesText
::HMUI::CurvedTextMeshPro*& GlobalNamespace::GameServerListTableCell::dyn__difficultiesText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerListTableCell::dyn__difficultiesText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_difficultiesText"))->offset;
  return *reinterpret_cast<::HMUI::CurvedTextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.CurvedTextMeshPro _musicPackText
::HMUI::CurvedTextMeshPro*& GlobalNamespace::GameServerListTableCell::dyn__musicPackText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerListTableCell::dyn__musicPackText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_musicPackText"))->offset;
  return *reinterpret_cast<::HMUI::CurvedTextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.CurvedTextMeshPro _playerCount
::HMUI::CurvedTextMeshPro*& GlobalNamespace::GameServerListTableCell::dyn__playerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerListTableCell::dyn__playerCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerCount"))->offset;
  return *reinterpret_cast<::HMUI::CurvedTextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _passwordProtected
::UnityEngine::GameObject*& GlobalNamespace::GameServerListTableCell::dyn__passwordProtected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerListTableCell::dyn__passwordProtected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_passwordProtected"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SongPackMasksModel _songPackMasksModel
::GlobalNamespace::SongPackMasksModel*& GlobalNamespace::GameServerListTableCell::dyn__songPackMasksModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerListTableCell::dyn__songPackMasksModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPackMasksModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongPackMasksModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameServerListTableCell.SetData
void GlobalNamespace::GameServerListTableCell::SetData(::GlobalNamespace::INetworkPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerListTableCell::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerPlayerTableCell
#include "GlobalNamespace/GameServerPlayerTableCell.hpp"
// Including type: GameServerPlayerTableCell/<>c__DisplayClass29_0
#include "GlobalNamespace/GameServerPlayerTableCell_--c__DisplayClass29_0.hpp"
// Including type: GameServerPlayerTableCell/<SetBeatmapUseButtonEnabledAsync>d__35
#include "GlobalNamespace/GameServerPlayerTableCell_-SetBeatmapUseButtonEnabledAsync-d__35.hpp"
// Including type: HMUI.CurvedTextMeshPro
#include "HMUI/CurvedTextMeshPro.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: GameplayModifierInfoListItemsList
#include "GlobalNamespace/GameplayModifierInfoListItemsList.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: HMUI.HoverHint
#include "HMUI/HoverHint.hpp"
// Including type: HMUI.ButtonSpriteSwapToggle
#include "HMUI/ButtonSpriteSwapToggle.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: ILobbyPlayerData
#include "GlobalNamespace/ILobbyPlayerData.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.CurvedTextMeshPro _playerNameText
::HMUI::CurvedTextMeshPro*& GlobalNamespace::GameServerPlayerTableCell::dyn__playerNameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::dyn__playerNameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerNameText"))->offset;
  return *reinterpret_cast<::HMUI::CurvedTextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _localPlayerBackgroundImage
::UnityEngine::UI::Image*& GlobalNamespace::GameServerPlayerTableCell::dyn__localPlayerBackgroundImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::dyn__localPlayerBackgroundImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPlayerBackgroundImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.CurvedTextMeshPro _suggestedLevelText
::HMUI::CurvedTextMeshPro*& GlobalNamespace::GameServerPlayerTableCell::dyn__suggestedLevelText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::dyn__suggestedLevelText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_suggestedLevelText"))->offset;
  return *reinterpret_cast<::HMUI::CurvedTextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView _suggestedCharacteristicIcon
::HMUI::ImageView*& GlobalNamespace::GameServerPlayerTableCell::dyn__suggestedCharacteristicIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::dyn__suggestedCharacteristicIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_suggestedCharacteristicIcon"))->offset;
  return *reinterpret_cast<::HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _suggestedDifficultyText
::TMPro::TextMeshProUGUI*& GlobalNamespace::GameServerPlayerTableCell::dyn__suggestedDifficultyText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::dyn__suggestedDifficultyText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_suggestedDifficultyText"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.CurvedTextMeshPro _emptySuggestedLevelText
::HMUI::CurvedTextMeshPro*& GlobalNamespace::GameServerPlayerTableCell::dyn__emptySuggestedLevelText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::dyn__emptySuggestedLevelText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_emptySuggestedLevelText"))->offset;
  return *reinterpret_cast<::HMUI::CurvedTextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifierInfoListItemsList _suggestedModifiersList
::GlobalNamespace::GameplayModifierInfoListItemsList*& GlobalNamespace::GameServerPlayerTableCell::dyn__suggestedModifiersList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::dyn__suggestedModifiersList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_suggestedModifiersList"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifierInfoListItemsList**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.CurvedTextMeshPro _emptySuggestedModifiersText
::HMUI::CurvedTextMeshPro*& GlobalNamespace::GameServerPlayerTableCell::dyn__emptySuggestedModifiersText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::dyn__emptySuggestedModifiersText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_emptySuggestedModifiersText"))->offset;
  return *reinterpret_cast<::HMUI::CurvedTextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _mutePlayerButton
::UnityEngine::UI::Button*& GlobalNamespace::GameServerPlayerTableCell::dyn__mutePlayerButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::dyn__mutePlayerButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mutePlayerButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _kickPlayerButton
::UnityEngine::UI::Button*& GlobalNamespace::GameServerPlayerTableCell::dyn__kickPlayerButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::dyn__kickPlayerButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_kickPlayerButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _useBeatmapButton
::UnityEngine::UI::Button*& GlobalNamespace::GameServerPlayerTableCell::dyn__useBeatmapButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::dyn__useBeatmapButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useBeatmapButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Button _useModifiersButton
::UnityEngine::UI::Button*& GlobalNamespace::GameServerPlayerTableCell::dyn__useModifiersButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::dyn__useModifiersButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useModifiersButton"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Button**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.HoverHint _useBeatmapButtonHoverHint
::HMUI::HoverHint*& GlobalNamespace::GameServerPlayerTableCell::dyn__useBeatmapButtonHoverHint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::dyn__useBeatmapButtonHoverHint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useBeatmapButtonHoverHint"))->offset;
  return *reinterpret_cast<::HMUI::HoverHint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ButtonSpriteSwapToggle _muteToggle
::HMUI::ButtonSpriteSwapToggle*& GlobalNamespace::GameServerPlayerTableCell::dyn__muteToggle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::dyn__muteToggle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_muteToggle"))->offset;
  return *reinterpret_cast<::HMUI::ButtonSpriteSwapToggle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HMUI.ImageView _statusImageView
::HMUI::ImageView*& GlobalNamespace::GameServerPlayerTableCell::dyn__statusImageView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::dyn__statusImageView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_statusImageView"))->offset;
  return *reinterpret_cast<::HMUI::ImageView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _readyIcon
::UnityEngine::Sprite*& GlobalNamespace::GameServerPlayerTableCell::dyn__readyIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::dyn__readyIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_readyIcon"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _spectatingIcon
::UnityEngine::Sprite*& GlobalNamespace::GameServerPlayerTableCell::dyn__spectatingIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::dyn__spectatingIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spectatingIcon"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _hostIcon
::UnityEngine::Sprite*& GlobalNamespace::GameServerPlayerTableCell::dyn__hostIcon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::dyn__hostIcon");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hostIcon"))->offset;
  return *reinterpret_cast<::UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifiersModelSO _gameplayModifiers
::GlobalNamespace::GameplayModifiersModelSO*& GlobalNamespace::GameServerPlayerTableCell::dyn__gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::dyn__gameplayModifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiers"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameplayModifiersModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Int32> kickPlayerEvent
::System::Action_1<int>*& GlobalNamespace::GameServerPlayerTableCell::dyn_kickPlayerEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::dyn_kickPlayerEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "kickPlayerEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Int32> useBeatmapEvent
::System::Action_1<int>*& GlobalNamespace::GameServerPlayerTableCell::dyn_useBeatmapEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::dyn_useBeatmapEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useBeatmapEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Int32> useModifiersEvent
::System::Action_1<int>*& GlobalNamespace::GameServerPlayerTableCell::dyn_useModifiersEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::dyn_useModifiersEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useModifiersEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly HMUI.ButtonBinder _buttonBinder
::HMUI::ButtonBinder*& GlobalNamespace::GameServerPlayerTableCell::dyn__buttonBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::dyn__buttonBinder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buttonBinder"))->offset;
  return *reinterpret_cast<::HMUI::ButtonBinder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationTokenSource _getLevelEntitlementCancellationTokenSource
::System::Threading::CancellationTokenSource*& GlobalNamespace::GameServerPlayerTableCell::dyn__getLevelEntitlementCancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::dyn__getLevelEntitlementCancellationTokenSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_getLevelEntitlementCancellationTokenSource"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationTokenSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameServerPlayerTableCell.add_kickPlayerEvent
void GlobalNamespace::GameServerPlayerTableCell::add_kickPlayerEvent(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::add_kickPlayerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_kickPlayerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayerTableCell.remove_kickPlayerEvent
void GlobalNamespace::GameServerPlayerTableCell::remove_kickPlayerEvent(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::remove_kickPlayerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_kickPlayerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayerTableCell.add_useBeatmapEvent
void GlobalNamespace::GameServerPlayerTableCell::add_useBeatmapEvent(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::add_useBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_useBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayerTableCell.remove_useBeatmapEvent
void GlobalNamespace::GameServerPlayerTableCell::remove_useBeatmapEvent(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::remove_useBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_useBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayerTableCell.add_useModifiersEvent
void GlobalNamespace::GameServerPlayerTableCell::add_useModifiersEvent(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::add_useModifiersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_useModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayerTableCell.remove_useModifiersEvent
void GlobalNamespace::GameServerPlayerTableCell::remove_useModifiersEvent(::System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::remove_useModifiersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_useModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayerTableCell.SetData
void GlobalNamespace::GameServerPlayerTableCell::SetData(::GlobalNamespace::IConnectedPlayer* connectedPlayer, ::GlobalNamespace::ILobbyPlayerData* playerData, bool hasKickPermissions, bool allowSelection, ::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>* getLevelEntitlementTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer), ::il2cpp_utils::ExtractType(playerData), ::il2cpp_utils::ExtractType(hasKickPermissions), ::il2cpp_utils::ExtractType(allowSelection), ::il2cpp_utils::ExtractType(getLevelEntitlementTask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, connectedPlayer, playerData, hasKickPermissions, allowSelection, getLevelEntitlementTask);
}
// Autogenerated method: GameServerPlayerTableCell.Awake
void GlobalNamespace::GameServerPlayerTableCell::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerPlayerTableCell.HandleKickPlayerButtonPressed
void GlobalNamespace::GameServerPlayerTableCell::HandleKickPlayerButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::HandleKickPlayerButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleKickPlayerButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerPlayerTableCell.HandleUseBeatmapButtonPressed
void GlobalNamespace::GameServerPlayerTableCell::HandleUseBeatmapButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::HandleUseBeatmapButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUseBeatmapButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerPlayerTableCell.HandleUseModifiersButtonPressed
void GlobalNamespace::GameServerPlayerTableCell::HandleUseModifiersButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::HandleUseModifiersButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUseModifiersButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerPlayerTableCell.SetBeatmapUseButtonEnabledAsync
void GlobalNamespace::GameServerPlayerTableCell::SetBeatmapUseButtonEnabledAsync(::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>* getLevelEntitlementTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::SetBeatmapUseButtonEnabledAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBeatmapUseButtonEnabledAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(getLevelEntitlementTask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, getLevelEntitlementTask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerPlayerTableCell/<>c__DisplayClass29_0
#include "GlobalNamespace/GameServerPlayerTableCell_--c__DisplayClass29_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GameplayModifierParamsSO
#include "GlobalNamespace/GameplayModifierParamsSO.hpp"
// Including type: GameplayModifierInfoListItem
#include "GlobalNamespace/GameplayModifierInfoListItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<GameplayModifierParamsSO> modifiersList
::System::Collections::Generic::List_1<::GlobalNamespace::GameplayModifierParamsSO*>*& GlobalNamespace::GameServerPlayerTableCell::$$c__DisplayClass29_0::dyn_modifiersList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::$$c__DisplayClass29_0::dyn_modifiersList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "modifiersList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::GameplayModifierParamsSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameServerPlayerTableCell/<>c__DisplayClass29_0.<SetData>b__0
void GlobalNamespace::GameServerPlayerTableCell::$$c__DisplayClass29_0::$SetData$b__0(int id, ::GlobalNamespace::GameplayModifierInfoListItem* listItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::$$c__DisplayClass29_0::<SetData>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetData>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(listItem)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, id, listItem);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerPlayerTableCell/<SetBeatmapUseButtonEnabledAsync>d__35
#include "GlobalNamespace/GameServerPlayerTableCell_-SetBeatmapUseButtonEnabledAsync-d__35.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__35::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__35::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
::System::Runtime::CompilerServices::AsyncVoidMethodBuilder& GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__35::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__35::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::AsyncVoidMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GameServerPlayerTableCell <>4__this
::GlobalNamespace::GameServerPlayerTableCell*& GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__35::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__35::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GameServerPlayerTableCell**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.Task`1<AdditionalContentModel/EntitlementStatus> getLevelEntitlementTask
::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*& GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__35::dyn_getLevelEntitlementTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__35::dyn_getLevelEntitlementTask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getLevelEntitlementTask"))->offset;
  return *reinterpret_cast<::System::Threading::Tasks::Task_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.CancellationToken <cancellationToken>5__2
::System::Threading::CancellationToken& GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__35::dyn_$cancellationToken$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__35::dyn_$cancellationToken$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cancellationToken>5__2"))->offset;
  return *reinterpret_cast<::System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/EntitlementStatus> <>u__1
::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__35::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__35::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<::System::Runtime::CompilerServices::TaskAwaiter_1<::GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameServerPlayerTableCell/<SetBeatmapUseButtonEnabledAsync>d__35.MoveNext
void GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__35::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__35::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServerPlayerTableCell/<SetBeatmapUseButtonEnabledAsync>d__35.SetStateMachine
void GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__35::SetStateMachine(::System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameServerPlayerTableCell::$SetBeatmapUseButtonEnabledAsync$d__35::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifierInfoListItem
#include "GlobalNamespace/GameplayModifierInfoListItem.hpp"
// Including type: HMUI.HoverHint
#include "HMUI/HoverHint.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: GameplayModifierParamsSO
#include "GlobalNamespace/GameplayModifierParamsSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private HMUI.HoverHint _hoverHint
::HMUI::HoverHint*& GlobalNamespace::GameplayModifierInfoListItem::dyn__hoverHint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierInfoListItem::dyn__hoverHint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hoverHint"))->offset;
  return *reinterpret_cast<::HMUI::HoverHint**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _iconImage
::UnityEngine::UI::Image*& GlobalNamespace::GameplayModifierInfoListItem::dyn__iconImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierInfoListItem::dyn__iconImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_iconImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameplayModifierInfoListItem.SetModifier
void GlobalNamespace::GameplayModifierInfoListItem::SetModifier(::GlobalNamespace::GameplayModifierParamsSO* modifierParam, bool showName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameplayModifierInfoListItem::SetModifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetModifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(modifierParam), ::il2cpp_utils::ExtractType(showName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, modifierParam, showName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayModifierInfoListItemsList
#include "GlobalNamespace/GameplayModifierInfoListItemsList.hpp"
// Including type: GameplayModifierInfoListItem
#include "GlobalNamespace/GameplayModifierInfoListItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ImageWithHintItemsList
#include "GlobalNamespace/ImageWithHintItemsList.hpp"
// Including type: HMUI.ImageWithHint
#include "HMUI/ImageWithHint.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
