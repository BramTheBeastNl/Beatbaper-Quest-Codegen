// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.MissingMemberException
#include "System/MissingMemberException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.MissingMemberException.FormatSignature
::Il2CppString* System::MissingMemberException::FormatSignature(::Array<uint8_t>* signature) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::MissingMemberException::FormatSignature");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "MissingMemberException", "FormatSignature", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(signature)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, signature);
}
// Autogenerated method: System.MissingMemberException.get_Message
::Il2CppString* System::MissingMemberException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::MissingMemberException::get_Message");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.MissingMemberException.GetObjectData
void System::MissingMemberException::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::MissingMemberException::GetObjectData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(info, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
void System::MissingMemberException::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  System::MissingMemberException::GetObjectData(info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.MissingMethodException
#include "System/MissingMethodException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.MissingMethodException.get_Message
::Il2CppString* System::MissingMethodException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::MissingMethodException::get_Message");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.MulticastNotSupportedException
#include "System/MulticastNotSupportedException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.NonSerializedAttribute
#include "System/NonSerializedAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.NotImplementedException
#include "System/NotImplementedException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.NotSupportedException
#include "System/NotSupportedException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.NullReferenceException
#include "System/NullReferenceException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Number
#include "System/Number.hpp"
// Including type: System.Number/NumberBuffer
#include "System/Number_NumberBuffer.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Number.NumberBufferToDecimal
bool System::Number::NumberBufferToDecimal(uint8_t* number, System::Decimal& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::NumberBufferToDecimal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "NumberBufferToDecimal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(number, value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, number, value);
}
// Autogenerated method: System.Number.NumberBufferToDouble
bool System::Number::NumberBufferToDouble(uint8_t* number, double& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::NumberBufferToDouble");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "NumberBufferToDouble", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(number, value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, number, value);
}
// Autogenerated method: System.Number.FormatDecimal
::Il2CppString* System::Number::FormatDecimal(System::Decimal value, ::Il2CppString* format, System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::FormatDecimal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "FormatDecimal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, format, info)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, format, info);
}
// Autogenerated method: System.Number.FormatDouble
::Il2CppString* System::Number::FormatDouble(double value, ::Il2CppString* format, System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::FormatDouble");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "FormatDouble", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, format, info)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, format, info);
}
// Autogenerated method: System.Number.FormatInt32
::Il2CppString* System::Number::FormatInt32(int value, ::Il2CppString* format, System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::FormatInt32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "FormatInt32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, format, info)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, format, info);
}
// Autogenerated method: System.Number.FormatUInt32
::Il2CppString* System::Number::FormatUInt32(uint value, ::Il2CppString* format, System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::FormatUInt32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "FormatUInt32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, format, info)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, format, info);
}
// Autogenerated method: System.Number.FormatInt64
::Il2CppString* System::Number::FormatInt64(int64_t value, ::Il2CppString* format, System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::FormatInt64");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "FormatInt64", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, format, info)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, format, info);
}
// Autogenerated method: System.Number.FormatUInt64
::Il2CppString* System::Number::FormatUInt64(uint64_t value, ::Il2CppString* format, System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::FormatUInt64");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "FormatUInt64", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, format, info)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, format, info);
}
// Autogenerated method: System.Number.FormatSingle
::Il2CppString* System::Number::FormatSingle(float value, ::Il2CppString* format, System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::FormatSingle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "FormatSingle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, format, info)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, format, info);
}
// Autogenerated method: System.Number.HexNumberToInt32
bool System::Number::HexNumberToInt32(System::Number::NumberBuffer& number, int& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::HexNumberToInt32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "HexNumberToInt32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(number, value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, number, value);
}
// Autogenerated method: System.Number.HexNumberToInt64
bool System::Number::HexNumberToInt64(System::Number::NumberBuffer& number, int64_t& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::HexNumberToInt64");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "HexNumberToInt64", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(number, value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, number, value);
}
// Autogenerated method: System.Number.HexNumberToUInt32
bool System::Number::HexNumberToUInt32(System::Number::NumberBuffer& number, uint& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::HexNumberToUInt32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "HexNumberToUInt32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(number, value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, number, value);
}
// Autogenerated method: System.Number.HexNumberToUInt64
bool System::Number::HexNumberToUInt64(System::Number::NumberBuffer& number, uint64_t& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::HexNumberToUInt64");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "HexNumberToUInt64", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(number, value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, number, value);
}
// Autogenerated method: System.Number.IsWhite
bool System::Number::IsWhite(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::IsWhite");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "IsWhite", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Number.NumberToInt32
bool System::Number::NumberToInt32(System::Number::NumberBuffer& number, int& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::NumberToInt32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "NumberToInt32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(number, value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, number, value);
}
// Autogenerated method: System.Number.NumberToInt64
bool System::Number::NumberToInt64(System::Number::NumberBuffer& number, int64_t& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::NumberToInt64");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "NumberToInt64", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(number, value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, number, value);
}
// Autogenerated method: System.Number.NumberToUInt32
bool System::Number::NumberToUInt32(System::Number::NumberBuffer& number, uint& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::NumberToUInt32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "NumberToUInt32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(number, value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, number, value);
}
// Autogenerated method: System.Number.NumberToUInt64
bool System::Number::NumberToUInt64(System::Number::NumberBuffer& number, uint64_t& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::NumberToUInt64");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "NumberToUInt64", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(number, value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, number, value);
}
// Autogenerated method: System.Number.MatchChars
::Il2CppChar* System::Number::MatchChars(::Il2CppChar* p, ::Il2CppString* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::MatchChars");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "MatchChars", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(p, str)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, p, str);
}
// Autogenerated method: System.Number.MatchChars
::Il2CppChar* System::Number::MatchChars(::Il2CppChar* p, ::Il2CppChar* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::MatchChars");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "MatchChars", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(p, str)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, p, str);
}
// Autogenerated method: System.Number.ParseDecimal
System::Decimal System::Number::ParseDecimal(::Il2CppString* value, System::Globalization::NumberStyles options, System::Globalization::NumberFormatInfo* numfmt) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::ParseDecimal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "ParseDecimal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, options, numfmt)));
  return ::il2cpp_utils::RunMethodThrow<System::Decimal, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, options, numfmt);
}
// Autogenerated method: System.Number.ParseDouble
double System::Number::ParseDouble(::Il2CppString* value, System::Globalization::NumberStyles options, System::Globalization::NumberFormatInfo* numfmt) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::ParseDouble");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "ParseDouble", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, options, numfmt)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, options, numfmt);
}
// Autogenerated method: System.Number.ParseInt32
int System::Number::ParseInt32(::Il2CppString* s, System::Globalization::NumberStyles style, System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::ParseInt32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "ParseInt32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, style, info)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, info);
}
// Autogenerated method: System.Number.ParseInt64
int64_t System::Number::ParseInt64(::Il2CppString* value, System::Globalization::NumberStyles options, System::Globalization::NumberFormatInfo* numfmt) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::ParseInt64");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "ParseInt64", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, options, numfmt)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, options, numfmt);
}
// Autogenerated method: System.Number.ParseNumber
bool System::Number::ParseNumber(::Il2CppChar*& str, System::Globalization::NumberStyles options, System::Number::NumberBuffer& number, System::Text::StringBuilder* sb, System::Globalization::NumberFormatInfo* numfmt, bool parseDecimal) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::ParseNumber");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "ParseNumber", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, options, number, sb, numfmt, parseDecimal)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, options, number, sb, numfmt, parseDecimal);
}
// Autogenerated method: System.Number.ParseSingle
float System::Number::ParseSingle(::Il2CppString* value, System::Globalization::NumberStyles options, System::Globalization::NumberFormatInfo* numfmt) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::ParseSingle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "ParseSingle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, options, numfmt)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, options, numfmt);
}
// Autogenerated method: System.Number.ParseUInt32
uint System::Number::ParseUInt32(::Il2CppString* value, System::Globalization::NumberStyles options, System::Globalization::NumberFormatInfo* numfmt) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::ParseUInt32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "ParseUInt32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, options, numfmt)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, options, numfmt);
}
// Autogenerated method: System.Number.ParseUInt64
uint64_t System::Number::ParseUInt64(::Il2CppString* value, System::Globalization::NumberStyles options, System::Globalization::NumberFormatInfo* numfmt) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::ParseUInt64");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "ParseUInt64", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, options, numfmt)));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, options, numfmt);
}
// Autogenerated method: System.Number.StringToNumber
void System::Number::StringToNumber(::Il2CppString* str, System::Globalization::NumberStyles options, System::Number::NumberBuffer& number, System::Globalization::NumberFormatInfo* info, bool parseDecimal) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::StringToNumber");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "StringToNumber", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, options, number, info, parseDecimal)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, options, number, info, parseDecimal);
}
// Autogenerated method: System.Number.TrailingZeros
bool System::Number::TrailingZeros(::Il2CppString* s, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::TrailingZeros");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "TrailingZeros", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, index)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, index);
}
// Autogenerated method: System.Number.TryParseDouble
bool System::Number::TryParseDouble(::Il2CppString* value, System::Globalization::NumberStyles options, System::Globalization::NumberFormatInfo* numfmt, double& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::TryParseDouble");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "TryParseDouble", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, options, numfmt, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, options, numfmt, result);
}
// Autogenerated method: System.Number.TryParseInt32
bool System::Number::TryParseInt32(::Il2CppString* s, System::Globalization::NumberStyles style, System::Globalization::NumberFormatInfo* info, int& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::TryParseInt32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "TryParseInt32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, style, info, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, info, result);
}
// Autogenerated method: System.Number.TryParseInt64
bool System::Number::TryParseInt64(::Il2CppString* s, System::Globalization::NumberStyles style, System::Globalization::NumberFormatInfo* info, int64_t& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::TryParseInt64");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "TryParseInt64", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, style, info, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, info, result);
}
// Autogenerated method: System.Number.TryParseSingle
bool System::Number::TryParseSingle(::Il2CppString* value, System::Globalization::NumberStyles options, System::Globalization::NumberFormatInfo* numfmt, float& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::TryParseSingle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "TryParseSingle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, options, numfmt, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, options, numfmt, result);
}
// Autogenerated method: System.Number.TryParseUInt32
bool System::Number::TryParseUInt32(::Il2CppString* s, System::Globalization::NumberStyles style, System::Globalization::NumberFormatInfo* info, uint& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::TryParseUInt32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "TryParseUInt32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, style, info, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, info, result);
}
// Autogenerated method: System.Number.TryStringToNumber
bool System::Number::TryStringToNumber(::Il2CppString* str, System::Globalization::NumberStyles options, System::Number::NumberBuffer& number, System::Globalization::NumberFormatInfo* numfmt, bool parseDecimal) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::TryStringToNumber");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "TryStringToNumber", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, options, number, numfmt, parseDecimal)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, options, number, numfmt, parseDecimal);
}
// Autogenerated method: System.Number.TryStringToNumber
bool System::Number::TryStringToNumber(::Il2CppString* str, System::Globalization::NumberStyles options, System::Number::NumberBuffer& number, System::Text::StringBuilder* sb, System::Globalization::NumberFormatInfo* numfmt, bool parseDecimal) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::TryStringToNumber");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number", "TryStringToNumber", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, options, number, sb, numfmt, parseDecimal)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, options, number, sb, numfmt, parseDecimal);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Number/NumberBuffer
#include "System/Number_NumberBuffer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 NumberBufferBytes
int System::Number::NumberBuffer::_get_NumberBufferBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::NumberBuffer::_get_NumberBufferBytes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Number/NumberBuffer", "NumberBufferBytes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 NumberBufferBytes
void System::Number::NumberBuffer::_set_NumberBufferBytes(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::NumberBuffer::_set_NumberBufferBytes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Number/NumberBuffer", "NumberBufferBytes", value));
}
// Autogenerated method: System.Number/NumberBuffer.PackForNative
uint8_t* System::Number::NumberBuffer::PackForNative() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::NumberBuffer::PackForNative");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "PackForNative", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint8_t*, false>(*this, ___internal__method);
}
// Autogenerated method: System.Number/NumberBuffer..cctor
void System::Number::NumberBuffer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Number::NumberBuffer::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Number/NumberBuffer", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ObjectDisposedException
#include "System/ObjectDisposedException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ObjectDisposedException.get_ObjectName
::Il2CppString* System::ObjectDisposedException::get_ObjectName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ObjectDisposedException::get_ObjectName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ObjectName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.ObjectDisposedException.get_Message
::Il2CppString* System::ObjectDisposedException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ObjectDisposedException::get_Message");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.ObjectDisposedException.GetObjectData
void System::ObjectDisposedException::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ObjectDisposedException::GetObjectData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(info, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
void System::ObjectDisposedException::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  System::ObjectDisposedException::GetObjectData(info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ObsoleteAttribute
#include "System/ObsoleteAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ObsoleteAttribute.get_Message
::Il2CppString* System::ObsoleteAttribute::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ObsoleteAttribute::get_Message");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.OperationCanceledException
#include "System/OperationCanceledException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.OperationCanceledException.get_CancellationToken
System::Threading::CancellationToken System::OperationCanceledException::get_CancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::OperationCanceledException::get_CancellationToken");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CancellationToken", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::CancellationToken, false>(this, ___internal__method);
}
// Autogenerated method: System.OperationCanceledException.set_CancellationToken
void System::OperationCanceledException::set_CancellationToken(System::Threading::CancellationToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::OperationCanceledException::set_CancellationToken");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_CancellationToken", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.OutOfMemoryException
#include "System/OutOfMemoryException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.OverflowException
#include "System/OverflowException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ParamArrayAttribute
#include "System/ParamArrayAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ParamsArray
#include "System/ParamsArray.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Object[] oneArgArray
::Array<::Il2CppObject*>* System::ParamsArray::_get_oneArgArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParamsArray::_get_oneArgArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppObject*>*>("System", "ParamsArray", "oneArgArray"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object[] oneArgArray
void System::ParamsArray::_set_oneArgArray(::Array<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParamsArray::_set_oneArgArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParamsArray", "oneArgArray", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object[] twoArgArray
::Array<::Il2CppObject*>* System::ParamsArray::_get_twoArgArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParamsArray::_get_twoArgArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppObject*>*>("System", "ParamsArray", "twoArgArray"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object[] twoArgArray
void System::ParamsArray::_set_twoArgArray(::Array<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParamsArray::_set_twoArgArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParamsArray", "twoArgArray", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object[] threeArgArray
::Array<::Il2CppObject*>* System::ParamsArray::_get_threeArgArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParamsArray::_get_threeArgArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppObject*>*>("System", "ParamsArray", "threeArgArray"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object[] threeArgArray
void System::ParamsArray::_set_threeArgArray(::Array<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParamsArray::_set_threeArgArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParamsArray", "threeArgArray", value));
}
// Autogenerated method: System.ParamsArray.get_Length
int System::ParamsArray::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParamsArray::get_Length");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_Length", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.ParamsArray.get_Item
::Il2CppObject* System::ParamsArray::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParamsArray::get_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(*this, ___internal__method, index);
}
// Autogenerated method: System.ParamsArray.GetAtSlow
::Il2CppObject* System::ParamsArray::GetAtSlow(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParamsArray::GetAtSlow");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetAtSlow", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(*this, ___internal__method, index);
}
// Autogenerated method: System.ParamsArray..cctor
void System::ParamsArray::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParamsArray::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "ParamsArray", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.PlatformNotSupportedException
#include "System/PlatformNotSupportedException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Random
#include "System/Random.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 MBIG
int System::Random::_get_MBIG() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Random::_get_MBIG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Random", "MBIG"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MBIG
void System::Random::_set_MBIG(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Random::_set_MBIG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Random", "MBIG", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MSEED
int System::Random::_get_MSEED() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Random::_get_MSEED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Random", "MSEED"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MSEED
void System::Random::_set_MSEED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Random::_set_MSEED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Random", "MSEED", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 MZ
int System::Random::_get_MZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Random::_get_MZ");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Random", "MZ"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MZ
void System::Random::_set_MZ(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Random::_set_MZ");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Random", "MZ", value));
}
// Autogenerated method: System.Random.Sample
double System::Random::Sample() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Random::Sample");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Sample", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: System.Random.InternalSample
int System::Random::InternalSample() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Random::InternalSample");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalSample", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Random.Next
int System::Random::Next() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Random::Next");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Next", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Random.GetSampleForLargeRange
double System::Random::GetSampleForLargeRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Random::GetSampleForLargeRange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSampleForLargeRange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method);
}
// Autogenerated method: System.Random.Next
int System::Random::Next(int minValue, int maxValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Random::Next");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Next", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(minValue, maxValue)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, minValue, maxValue);
}
// Autogenerated method: System.Random.Next
int System::Random::Next(int maxValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Random::Next");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Next", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(maxValue)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, maxValue);
}
// Autogenerated method: System.Random.NextBytes
void System::Random::NextBytes(::Array<uint8_t>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Random::NextBytes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "NextBytes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.RankException
#include "System/RankException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.TypeNameFormatFlags
#include "System/TypeNameFormatFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.TypeNameFormatFlags FormatBasic
System::TypeNameFormatFlags System::TypeNameFormatFlags::_get_FormatBasic() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_get_FormatBasic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TypeNameFormatFlags>("System", "TypeNameFormatFlags", "FormatBasic"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameFormatFlags FormatBasic
void System::TypeNameFormatFlags::_set_FormatBasic(System::TypeNameFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_set_FormatBasic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameFormatFlags", "FormatBasic", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameFormatFlags FormatNamespace
System::TypeNameFormatFlags System::TypeNameFormatFlags::_get_FormatNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_get_FormatNamespace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TypeNameFormatFlags>("System", "TypeNameFormatFlags", "FormatNamespace"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameFormatFlags FormatNamespace
void System::TypeNameFormatFlags::_set_FormatNamespace(System::TypeNameFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_set_FormatNamespace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameFormatFlags", "FormatNamespace", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameFormatFlags FormatFullInst
System::TypeNameFormatFlags System::TypeNameFormatFlags::_get_FormatFullInst() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_get_FormatFullInst");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TypeNameFormatFlags>("System", "TypeNameFormatFlags", "FormatFullInst"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameFormatFlags FormatFullInst
void System::TypeNameFormatFlags::_set_FormatFullInst(System::TypeNameFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_set_FormatFullInst");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameFormatFlags", "FormatFullInst", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameFormatFlags FormatAssembly
System::TypeNameFormatFlags System::TypeNameFormatFlags::_get_FormatAssembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_get_FormatAssembly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TypeNameFormatFlags>("System", "TypeNameFormatFlags", "FormatAssembly"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameFormatFlags FormatAssembly
void System::TypeNameFormatFlags::_set_FormatAssembly(System::TypeNameFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_set_FormatAssembly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameFormatFlags", "FormatAssembly", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameFormatFlags FormatSignature
System::TypeNameFormatFlags System::TypeNameFormatFlags::_get_FormatSignature() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_get_FormatSignature");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TypeNameFormatFlags>("System", "TypeNameFormatFlags", "FormatSignature"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameFormatFlags FormatSignature
void System::TypeNameFormatFlags::_set_FormatSignature(System::TypeNameFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_set_FormatSignature");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameFormatFlags", "FormatSignature", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameFormatFlags FormatNoVersion
System::TypeNameFormatFlags System::TypeNameFormatFlags::_get_FormatNoVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_get_FormatNoVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TypeNameFormatFlags>("System", "TypeNameFormatFlags", "FormatNoVersion"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameFormatFlags FormatNoVersion
void System::TypeNameFormatFlags::_set_FormatNoVersion(System::TypeNameFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_set_FormatNoVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameFormatFlags", "FormatNoVersion", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameFormatFlags FormatAngleBrackets
System::TypeNameFormatFlags System::TypeNameFormatFlags::_get_FormatAngleBrackets() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_get_FormatAngleBrackets");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TypeNameFormatFlags>("System", "TypeNameFormatFlags", "FormatAngleBrackets"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameFormatFlags FormatAngleBrackets
void System::TypeNameFormatFlags::_set_FormatAngleBrackets(System::TypeNameFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_set_FormatAngleBrackets");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameFormatFlags", "FormatAngleBrackets", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameFormatFlags FormatStubInfo
System::TypeNameFormatFlags System::TypeNameFormatFlags::_get_FormatStubInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_get_FormatStubInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TypeNameFormatFlags>("System", "TypeNameFormatFlags", "FormatStubInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameFormatFlags FormatStubInfo
void System::TypeNameFormatFlags::_set_FormatStubInfo(System::TypeNameFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_set_FormatStubInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameFormatFlags", "FormatStubInfo", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameFormatFlags FormatGenericParam
System::TypeNameFormatFlags System::TypeNameFormatFlags::_get_FormatGenericParam() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_get_FormatGenericParam");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TypeNameFormatFlags>("System", "TypeNameFormatFlags", "FormatGenericParam"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameFormatFlags FormatGenericParam
void System::TypeNameFormatFlags::_set_FormatGenericParam(System::TypeNameFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_set_FormatGenericParam");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameFormatFlags", "FormatGenericParam", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameFormatFlags FormatSerialization
System::TypeNameFormatFlags System::TypeNameFormatFlags::_get_FormatSerialization() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_get_FormatSerialization");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TypeNameFormatFlags>("System", "TypeNameFormatFlags", "FormatSerialization"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameFormatFlags FormatSerialization
void System::TypeNameFormatFlags::_set_FormatSerialization(System::TypeNameFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameFormatFlags::_set_FormatSerialization");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameFormatFlags", "FormatSerialization", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.TypeNameKind
#include "System/TypeNameKind.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.TypeNameKind Name
System::TypeNameKind System::TypeNameKind::_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameKind::_get_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TypeNameKind>("System", "TypeNameKind", "Name"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameKind Name
void System::TypeNameKind::_set_Name(System::TypeNameKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameKind::_set_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameKind", "Name", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameKind ToString
System::TypeNameKind System::TypeNameKind::_get_ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameKind::_get_ToString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TypeNameKind>("System", "TypeNameKind", "ToString"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameKind ToString
void System::TypeNameKind::_set_ToString(System::TypeNameKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameKind::_set_ToString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameKind", "ToString", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameKind SerializationName
System::TypeNameKind System::TypeNameKind::_get_SerializationName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameKind::_get_SerializationName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TypeNameKind>("System", "TypeNameKind", "SerializationName"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameKind SerializationName
void System::TypeNameKind::_set_SerializationName(System::TypeNameKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameKind::_set_SerializationName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameKind", "SerializationName", value));
}
// Autogenerated static field getter
// Get static field: static public System.TypeNameKind FullName
System::TypeNameKind System::TypeNameKind::_get_FullName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameKind::_get_FullName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TypeNameKind>("System", "TypeNameKind", "FullName"));
}
// Autogenerated static field setter
// Set static field: static public System.TypeNameKind FullName
void System::TypeNameKind::_set_FullName(System::TypeNameKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameKind::_set_FullName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TypeNameKind", "FullName", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.RuntimeType
#include "System/RuntimeType.hpp"
// Including type: System.RuntimeType/MemberListType
#include "System/RuntimeType_MemberListType.hpp"
// Including type: System.RuntimeType/ListBuilder`1
#include "System/RuntimeType_ListBuilder_1.hpp"
// Including type: System.MonoTypeInfo
#include "System/MonoTypeInfo.hpp"
// Including type: System.Reflection.RuntimeConstructorInfo
#include "System/Reflection/RuntimeConstructorInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.Reflection.RuntimeMethodInfo
#include "System/Reflection/RuntimeMethodInfo.hpp"
// Including type: System.Reflection.CallingConventions
#include "System/Reflection/CallingConventions.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Reflection.EventInfo
#include "System/Reflection/EventInfo.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: System.Reflection.RuntimeModule
#include "System/Reflection/RuntimeModule.hpp"
// Including type: System.Reflection.RuntimeAssembly
#include "System/Reflection/RuntimeAssembly.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Threading.StackCrawlMark
#include "System/Threading/StackCrawlMark.hpp"
// Including type: System.Reflection.MonoCMethod
#include "System/Reflection/MonoCMethod.hpp"
// Including type: System.TypeNameKind
#include "System/TypeNameKind.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Reflection.RuntimePropertyInfo
#include "System/Reflection/RuntimePropertyInfo.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Reflection.GenericParameterAttributes
#include "System/Reflection/GenericParameterAttributes.hpp"
// Including type: System.Reflection.RuntimeFieldInfo
#include "System/Reflection/RuntimeFieldInfo.hpp"
// Including type: System.Reflection.RuntimeEventInfo
#include "System/Reflection/RuntimeEventInfo.hpp"
// Including type: System.Reflection.MemberTypes
#include "System/Reflection/MemberTypes.hpp"
// Including type: System.Reflection.Module
#include "System/Reflection/Module.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.RuntimeTypeHandle
#include "System/RuntimeTypeHandle.hpp"
// Including type: System.Reflection.TypeAttributes
#include "System/Reflection/TypeAttributes.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Reflection.CustomAttributeData
#include "System/Reflection/CustomAttributeData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.RuntimeType ValueType
System::RuntimeType* System::RuntimeType::_get_ValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_get_ValueType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::RuntimeType*>("System", "RuntimeType", "ValueType"));
}
// Autogenerated static field setter
// Set static field: static readonly System.RuntimeType ValueType
void System::RuntimeType::_set_ValueType(System::RuntimeType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_set_ValueType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "ValueType", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.RuntimeType EnumType
System::RuntimeType* System::RuntimeType::_get_EnumType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_get_EnumType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::RuntimeType*>("System", "RuntimeType", "EnumType"));
}
// Autogenerated static field setter
// Set static field: static readonly System.RuntimeType EnumType
void System::RuntimeType::_set_EnumType(System::RuntimeType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_set_EnumType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "EnumType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.RuntimeType ObjectType
System::RuntimeType* System::RuntimeType::_get_ObjectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_get_ObjectType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::RuntimeType*>("System", "RuntimeType", "ObjectType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.RuntimeType ObjectType
void System::RuntimeType::_set_ObjectType(System::RuntimeType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_set_ObjectType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "ObjectType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.RuntimeType StringType
System::RuntimeType* System::RuntimeType::_get_StringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_get_StringType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::RuntimeType*>("System", "RuntimeType", "StringType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.RuntimeType StringType
void System::RuntimeType::_set_StringType(System::RuntimeType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_set_StringType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "StringType", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.RuntimeType DelegateType
System::RuntimeType* System::RuntimeType::_get_DelegateType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_get_DelegateType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::RuntimeType*>("System", "RuntimeType", "DelegateType"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.RuntimeType DelegateType
void System::RuntimeType::_set_DelegateType(System::RuntimeType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_set_DelegateType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "DelegateType", value));
}
// Autogenerated static field getter
// Get static field: static private System.Type[] s_SICtorParamTypes
::Array<System::Type*>* System::RuntimeType::_get_s_SICtorParamTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_get_s_SICtorParamTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<System::Type*>*>("System", "RuntimeType", "s_SICtorParamTypes"));
}
// Autogenerated static field setter
// Set static field: static private System.Type[] s_SICtorParamTypes
void System::RuntimeType::_set_s_SICtorParamTypes(::Array<System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_set_s_SICtorParamTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "s_SICtorParamTypes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags MemberBindingMask
System::Reflection::BindingFlags System::RuntimeType::_get_MemberBindingMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_get_MemberBindingMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System", "RuntimeType", "MemberBindingMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags MemberBindingMask
void System::RuntimeType::_set_MemberBindingMask(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_set_MemberBindingMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "MemberBindingMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags InvocationMask
System::Reflection::BindingFlags System::RuntimeType::_get_InvocationMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_get_InvocationMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System", "RuntimeType", "InvocationMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags InvocationMask
void System::RuntimeType::_set_InvocationMask(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_set_InvocationMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "InvocationMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags BinderNonCreateInstance
System::Reflection::BindingFlags System::RuntimeType::_get_BinderNonCreateInstance() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_get_BinderNonCreateInstance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System", "RuntimeType", "BinderNonCreateInstance"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags BinderNonCreateInstance
void System::RuntimeType::_set_BinderNonCreateInstance(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_set_BinderNonCreateInstance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "BinderNonCreateInstance", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags BinderGetSetProperty
System::Reflection::BindingFlags System::RuntimeType::_get_BinderGetSetProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_get_BinderGetSetProperty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System", "RuntimeType", "BinderGetSetProperty"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags BinderGetSetProperty
void System::RuntimeType::_set_BinderGetSetProperty(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_set_BinderGetSetProperty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "BinderGetSetProperty", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags BinderSetInvokeProperty
System::Reflection::BindingFlags System::RuntimeType::_get_BinderSetInvokeProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_get_BinderSetInvokeProperty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System", "RuntimeType", "BinderSetInvokeProperty"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags BinderSetInvokeProperty
void System::RuntimeType::_set_BinderSetInvokeProperty(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_set_BinderSetInvokeProperty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "BinderSetInvokeProperty", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags BinderGetSetField
System::Reflection::BindingFlags System::RuntimeType::_get_BinderGetSetField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_get_BinderGetSetField");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System", "RuntimeType", "BinderGetSetField"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags BinderGetSetField
void System::RuntimeType::_set_BinderGetSetField(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_set_BinderGetSetField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "BinderGetSetField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags BinderSetInvokeField
System::Reflection::BindingFlags System::RuntimeType::_get_BinderSetInvokeField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_get_BinderSetInvokeField");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System", "RuntimeType", "BinderSetInvokeField"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags BinderSetInvokeField
void System::RuntimeType::_set_BinderSetInvokeField(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_set_BinderSetInvokeField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "BinderSetInvokeField", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags BinderNonFieldGetSet
System::Reflection::BindingFlags System::RuntimeType::_get_BinderNonFieldGetSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_get_BinderNonFieldGetSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System", "RuntimeType", "BinderNonFieldGetSet"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags BinderNonFieldGetSet
void System::RuntimeType::_set_BinderNonFieldGetSet(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_set_BinderNonFieldGetSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "BinderNonFieldGetSet", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags ClassicBindingMask
System::Reflection::BindingFlags System::RuntimeType::_get_ClassicBindingMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_get_ClassicBindingMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System", "RuntimeType", "ClassicBindingMask"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags ClassicBindingMask
void System::RuntimeType::_set_ClassicBindingMask(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_set_ClassicBindingMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "ClassicBindingMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.RuntimeType s_typedRef
System::RuntimeType* System::RuntimeType::_get_s_typedRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_get_s_typedRef");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::RuntimeType*>("System", "RuntimeType", "s_typedRef"));
}
// Autogenerated static field setter
// Set static field: static private System.RuntimeType s_typedRef
void System::RuntimeType::_set_s_typedRef(System::RuntimeType* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::_set_s_typedRef");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType", "s_typedRef", value));
}
// Autogenerated method: System.RuntimeType.ThrowIfTypeNeverValidGenericArgument
void System::RuntimeType::ThrowIfTypeNeverValidGenericArgument(System::RuntimeType* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::ThrowIfTypeNeverValidGenericArgument");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "ThrowIfTypeNeverValidGenericArgument", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.RuntimeType.SanityCheckGenericArguments
void System::RuntimeType::SanityCheckGenericArguments(::Array<System::RuntimeType*>* genericArguments, ::Array<System::RuntimeType*>* genericParamters) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::SanityCheckGenericArguments");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "SanityCheckGenericArguments", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(genericArguments, genericParamters)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, genericArguments, genericParamters);
}
// Autogenerated method: System.RuntimeType.SplitName
void System::RuntimeType::SplitName(::Il2CppString* fullname, ::Il2CppString*& name, ::Il2CppString*& ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::SplitName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "SplitName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(fullname, name, ns)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, fullname, name, ns);
}
// Autogenerated method: System.RuntimeType.FilterHelper
void System::RuntimeType::FilterHelper(System::Reflection::BindingFlags bindingFlags, ::Il2CppString*& name, bool allowPrefixLookup, bool& prefixLookup, bool& ignoreCase, System::RuntimeType::MemberListType& listType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::FilterHelper");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "FilterHelper", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bindingFlags, name, allowPrefixLookup, prefixLookup, ignoreCase, listType)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bindingFlags, name, allowPrefixLookup, prefixLookup, ignoreCase, listType);
}
// Autogenerated method: System.RuntimeType.FilterHelper
void System::RuntimeType::FilterHelper(System::Reflection::BindingFlags bindingFlags, ::Il2CppString*& name, bool& ignoreCase, System::RuntimeType::MemberListType& listType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::FilterHelper");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "FilterHelper", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bindingFlags, name, ignoreCase, listType)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bindingFlags, name, ignoreCase, listType);
}
// Autogenerated method: System.RuntimeType.FilterApplyPrefixLookup
bool System::RuntimeType::FilterApplyPrefixLookup(System::Reflection::MemberInfo* memberInfo, ::Il2CppString* name, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::FilterApplyPrefixLookup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "FilterApplyPrefixLookup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(memberInfo, name, ignoreCase)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, memberInfo, name, ignoreCase);
}
// Autogenerated method: System.RuntimeType.FilterApplyBase
bool System::RuntimeType::FilterApplyBase(System::Reflection::MemberInfo* memberInfo, System::Reflection::BindingFlags bindingFlags, bool isPublic, bool isNonProtectedInternal, bool isStatic, ::Il2CppString* name, bool prefixLookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::FilterApplyBase");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "FilterApplyBase", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(memberInfo, bindingFlags, isPublic, isNonProtectedInternal, isStatic, name, prefixLookup)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, memberInfo, bindingFlags, isPublic, isNonProtectedInternal, isStatic, name, prefixLookup);
}
// Autogenerated method: System.RuntimeType.FilterApplyType
bool System::RuntimeType::FilterApplyType(System::Type* type, System::Reflection::BindingFlags bindingFlags, ::Il2CppString* name, bool prefixLookup, ::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::FilterApplyType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "FilterApplyType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, bindingFlags, name, prefixLookup, ns)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, bindingFlags, name, prefixLookup, ns);
}
// Autogenerated method: System.RuntimeType.FilterApplyMethodInfo
bool System::RuntimeType::FilterApplyMethodInfo(System::Reflection::RuntimeMethodInfo* method, System::Reflection::BindingFlags bindingFlags, System::Reflection::CallingConventions callConv, ::Array<System::Type*>* argumentTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::FilterApplyMethodInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "FilterApplyMethodInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(method, bindingFlags, callConv, argumentTypes)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, method, bindingFlags, callConv, argumentTypes);
}
// Autogenerated method: System.RuntimeType.FilterApplyConstructorInfo
bool System::RuntimeType::FilterApplyConstructorInfo(System::Reflection::RuntimeConstructorInfo* constructor, System::Reflection::BindingFlags bindingFlags, System::Reflection::CallingConventions callConv, ::Array<System::Type*>* argumentTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::FilterApplyConstructorInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "FilterApplyConstructorInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(constructor, bindingFlags, callConv, argumentTypes)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, constructor, bindingFlags, callConv, argumentTypes);
}
// Autogenerated method: System.RuntimeType.FilterApplyMethodBase
bool System::RuntimeType::FilterApplyMethodBase(System::Reflection::MethodBase* methodBase, System::Reflection::BindingFlags methodFlags, System::Reflection::BindingFlags bindingFlags, System::Reflection::CallingConventions callConv, ::Array<System::Type*>* argumentTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::FilterApplyMethodBase");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "FilterApplyMethodBase", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(methodBase, methodFlags, bindingFlags, callConv, argumentTypes)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, methodBase, methodFlags, bindingFlags, callConv, argumentTypes);
}
// Autogenerated method: System.RuntimeType.IsSpecialSerializableType
bool System::RuntimeType::IsSpecialSerializableType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::IsSpecialSerializableType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsSpecialSerializableType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetMethodCandidates
System::RuntimeType::ListBuilder_1<System::Reflection::MethodInfo*> System::RuntimeType::GetMethodCandidates(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, System::Reflection::CallingConventions callConv, ::Array<System::Type*>* types, bool allowPrefixLookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetMethodCandidates");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMethodCandidates", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr, callConv, types, allowPrefixLookup)));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeType::ListBuilder_1<System::Reflection::MethodInfo*>, false>(this, ___internal__method, name, bindingAttr, callConv, types, allowPrefixLookup);
}
// Autogenerated method: System.RuntimeType.GetConstructorCandidates
System::RuntimeType::ListBuilder_1<System::Reflection::ConstructorInfo*> System::RuntimeType::GetConstructorCandidates(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, System::Reflection::CallingConventions callConv, ::Array<System::Type*>* types, bool allowPrefixLookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetConstructorCandidates");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetConstructorCandidates", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr, callConv, types, allowPrefixLookup)));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeType::ListBuilder_1<System::Reflection::ConstructorInfo*>, false>(this, ___internal__method, name, bindingAttr, callConv, types, allowPrefixLookup);
}
// Autogenerated method: System.RuntimeType.GetPropertyCandidates
System::RuntimeType::ListBuilder_1<System::Reflection::PropertyInfo*> System::RuntimeType::GetPropertyCandidates(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, ::Array<System::Type*>* types, bool allowPrefixLookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetPropertyCandidates");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPropertyCandidates", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr, types, allowPrefixLookup)));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeType::ListBuilder_1<System::Reflection::PropertyInfo*>, false>(this, ___internal__method, name, bindingAttr, types, allowPrefixLookup);
}
// Autogenerated method: System.RuntimeType.GetEventCandidates
System::RuntimeType::ListBuilder_1<System::Reflection::EventInfo*> System::RuntimeType::GetEventCandidates(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, bool allowPrefixLookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetEventCandidates");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEventCandidates", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr, allowPrefixLookup)));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeType::ListBuilder_1<System::Reflection::EventInfo*>, false>(this, ___internal__method, name, bindingAttr, allowPrefixLookup);
}
// Autogenerated method: System.RuntimeType.GetFieldCandidates
System::RuntimeType::ListBuilder_1<System::Reflection::FieldInfo*> System::RuntimeType::GetFieldCandidates(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, bool allowPrefixLookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetFieldCandidates");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetFieldCandidates", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr, allowPrefixLookup)));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeType::ListBuilder_1<System::Reflection::FieldInfo*>, false>(this, ___internal__method, name, bindingAttr, allowPrefixLookup);
}
// Autogenerated method: System.RuntimeType.GetNestedTypeCandidates
System::RuntimeType::ListBuilder_1<System::Type*> System::RuntimeType::GetNestedTypeCandidates(::Il2CppString* fullname, System::Reflection::BindingFlags bindingAttr, bool allowPrefixLookup) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetNestedTypeCandidates");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetNestedTypeCandidates", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(fullname, bindingAttr, allowPrefixLookup)));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeType::ListBuilder_1<System::Type*>, false>(this, ___internal__method, fullname, bindingAttr, allowPrefixLookup);
}
// Autogenerated method: System.RuntimeType.GetRuntimeModule
System::Reflection::RuntimeModule* System::RuntimeType::GetRuntimeModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetRuntimeModule");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRuntimeModule", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::RuntimeModule*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetRuntimeAssembly
System::Reflection::RuntimeAssembly* System::RuntimeType::GetRuntimeAssembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetRuntimeAssembly");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRuntimeAssembly", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::RuntimeAssembly*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetBaseType
System::RuntimeType* System::RuntimeType::GetBaseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetBaseType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetBaseType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeType*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetGenericArgumentsInternal
::Array<System::RuntimeType*>* System::RuntimeType::GetGenericArgumentsInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetGenericArgumentsInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetGenericArgumentsInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::RuntimeType*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.CreateInstanceCheckThis
void System::RuntimeType::CreateInstanceCheckThis() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::CreateInstanceCheckThis");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateInstanceCheckThis", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.CreateInstanceImpl
::Il2CppObject* System::RuntimeType::CreateInstanceImpl(System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder* binder, ::Array<::Il2CppObject*>* args, System::Globalization::CultureInfo* culture, ::Array<::Il2CppObject*>* activationAttributes, System::Threading::StackCrawlMark& stackMark) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::CreateInstanceImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateInstanceImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bindingAttr, binder, args, culture, activationAttributes, stackMark)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, bindingAttr, binder, args, culture, activationAttributes, stackMark);
}
// Autogenerated method: System.RuntimeType.CreateInstanceDefaultCtor
::Il2CppObject* System::RuntimeType::CreateInstanceDefaultCtor(bool publicOnly, bool skipCheckThis, bool fillCache, System::Threading::StackCrawlMark& stackMark) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::CreateInstanceDefaultCtor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateInstanceDefaultCtor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(publicOnly, skipCheckThis, fillCache, stackMark)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, publicOnly, skipCheckThis, fillCache, stackMark);
}
// Autogenerated method: System.RuntimeType.GetDefaultConstructor
System::Reflection::MonoCMethod* System::RuntimeType::GetDefaultConstructor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetDefaultConstructor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDefaultConstructor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MonoCMethod*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetDefaultMemberName
::Il2CppString* System::RuntimeType::GetDefaultMemberName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetDefaultMemberName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetDefaultMemberName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetSerializationCtor
System::Reflection::RuntimeConstructorInfo* System::RuntimeType::GetSerializationCtor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetSerializationCtor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSerializationCtor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::RuntimeConstructorInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.CreateInstanceSlow
::Il2CppObject* System::RuntimeType::CreateInstanceSlow(bool publicOnly, bool skipCheckThis, bool fillCache, System::Threading::StackCrawlMark& stackMark) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::CreateInstanceSlow");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateInstanceSlow", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(publicOnly, skipCheckThis, fillCache, stackMark)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, publicOnly, skipCheckThis, fillCache, stackMark);
}
// Autogenerated method: System.RuntimeType.CreateInstanceMono
::Il2CppObject* System::RuntimeType::CreateInstanceMono(bool nonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::CreateInstanceMono");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateInstanceMono", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(nonPublic)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, nonPublic);
}
// Autogenerated method: System.RuntimeType.CheckValue
::Il2CppObject* System::RuntimeType::CheckValue(::Il2CppObject* value, System::Reflection::Binder* binder, System::Globalization::CultureInfo* culture, System::Reflection::BindingFlags invokeAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::CheckValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, binder, culture, invokeAttr)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, value, binder, culture, invokeAttr);
}
// Autogenerated method: System.RuntimeType.TryConvertToType
::Il2CppObject* System::RuntimeType::TryConvertToType(::Il2CppObject* value, bool& failed) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::TryConvertToType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryConvertToType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, failed)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, value, failed);
}
// Autogenerated method: System.RuntimeType.IsConvertibleToPrimitiveType
::Il2CppObject* System::RuntimeType::IsConvertibleToPrimitiveType(::Il2CppObject* value, System::Type* targetType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::IsConvertibleToPrimitiveType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "IsConvertibleToPrimitiveType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, targetType)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, targetType);
}
// Autogenerated method: System.RuntimeType.GetCachedName
::Il2CppString* System::RuntimeType::GetCachedName(System::TypeNameKind kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetCachedName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCachedName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(kind)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, kind);
}
// Autogenerated method: System.RuntimeType.make_array_type
System::Type* System::RuntimeType::make_array_type(int rank) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::make_array_type");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "make_array_type", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rank)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, rank);
}
// Autogenerated method: System.RuntimeType.make_byref_type
System::Type* System::RuntimeType::make_byref_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::make_byref_type");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "make_byref_type", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.MakePointerType
System::Type* System::RuntimeType::MakePointerType(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::MakePointerType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "MakePointerType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.RuntimeType.CreateInstanceForAnotherGenericParameter
::Il2CppObject* System::RuntimeType::CreateInstanceForAnotherGenericParameter(System::Type* genericType, System::RuntimeType* genericArgument) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::CreateInstanceForAnotherGenericParameter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "CreateInstanceForAnotherGenericParameter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(genericType, genericArgument)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, genericType, genericArgument);
}
// Autogenerated method: System.RuntimeType.MakeGenericType
System::Type* System::RuntimeType::MakeGenericType(System::Type* gt, ::Array<System::Type*>* types) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::MakeGenericType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "MakeGenericType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(gt, types)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, gt, types);
}
// Autogenerated method: System.RuntimeType.GetMethodsByName_native
System::IntPtr System::RuntimeType::GetMethodsByName_native(System::IntPtr namePtr, System::Reflection::BindingFlags bindingAttr, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetMethodsByName_native");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMethodsByName_native", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(namePtr, bindingAttr, ignoreCase)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, namePtr, bindingAttr, ignoreCase);
}
// Autogenerated method: System.RuntimeType.GetMethodsByName
::Array<System::Reflection::RuntimeMethodInfo*>* System::RuntimeType::GetMethodsByName(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, bool ignoreCase, System::RuntimeType* reflectedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetMethodsByName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMethodsByName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr, ignoreCase, reflectedType)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::RuntimeMethodInfo*>*, false>(this, ___internal__method, name, bindingAttr, ignoreCase, reflectedType);
}
// Autogenerated method: System.RuntimeType.GetPropertiesByName_native
System::IntPtr System::RuntimeType::GetPropertiesByName_native(System::IntPtr name, System::Reflection::BindingFlags bindingAttr, bool icase) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetPropertiesByName_native");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPropertiesByName_native", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr, icase)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, name, bindingAttr, icase);
}
// Autogenerated method: System.RuntimeType.GetConstructors_native
System::IntPtr System::RuntimeType::GetConstructors_native(System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetConstructors_native");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetConstructors_native", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetConstructors_internal
::Array<System::Reflection::RuntimeConstructorInfo*>* System::RuntimeType::GetConstructors_internal(System::Reflection::BindingFlags bindingAttr, System::RuntimeType* reflectedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetConstructors_internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetConstructors_internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bindingAttr, reflectedType)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::RuntimeConstructorInfo*>*, false>(this, ___internal__method, bindingAttr, reflectedType);
}
// Autogenerated method: System.RuntimeType.GetPropertiesByName
::Array<System::Reflection::RuntimePropertyInfo*>* System::RuntimeType::GetPropertiesByName(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, bool icase, System::RuntimeType* reflectedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetPropertiesByName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPropertiesByName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr, icase, reflectedType)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::RuntimePropertyInfo*>*, false>(this, ___internal__method, name, bindingAttr, icase, reflectedType);
}
// Autogenerated method: System.RuntimeType.GetTypeCodeImplInternal
System::TypeCode System::RuntimeType::GetTypeCodeImplInternal(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetTypeCodeImplInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "GetTypeCodeImplInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<System::TypeCode, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.RuntimeType.IsGenericCOMObjectImpl
bool System::RuntimeType::IsGenericCOMObjectImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::IsGenericCOMObjectImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsGenericCOMObjectImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.CreateInstanceInternal
::Il2CppObject* System::RuntimeType::CreateInstanceInternal(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::CreateInstanceInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "CreateInstanceInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.RuntimeType.getFullName
::Il2CppString* System::RuntimeType::getFullName(bool full_name, bool assembly_qualified) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::getFullName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "getFullName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(full_name, assembly_qualified)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, full_name, assembly_qualified);
}
// Autogenerated method: System.RuntimeType.GetGenericArgumentsInternal
::Array<System::Type*>* System::RuntimeType::GetGenericArgumentsInternal(bool runtimeArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetGenericArgumentsInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetGenericArgumentsInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(runtimeArray)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Type*>*, false>(this, ___internal__method, runtimeArray);
}
// Autogenerated method: System.RuntimeType.GetGenericParameterAttributes
System::Reflection::GenericParameterAttributes System::RuntimeType::GetGenericParameterAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetGenericParameterAttributes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetGenericParameterAttributes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::GenericParameterAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetGenericParameterPosition
int System::RuntimeType::GetGenericParameterPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetGenericParameterPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetGenericParameterPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetEvents_native
System::IntPtr System::RuntimeType::GetEvents_native(System::IntPtr name, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetEvents_native");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEvents_native", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetFields_native
System::IntPtr System::RuntimeType::GetFields_native(System::IntPtr name, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetFields_native");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetFields_native", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetFields_internal
::Array<System::Reflection::RuntimeFieldInfo*>* System::RuntimeType::GetFields_internal(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, System::RuntimeType* reflectedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetFields_internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetFields_internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr, reflectedType)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::RuntimeFieldInfo*>*, false>(this, ___internal__method, name, bindingAttr, reflectedType);
}
// Autogenerated method: System.RuntimeType.GetEvents_internal
::Array<System::Reflection::RuntimeEventInfo*>* System::RuntimeType::GetEvents_internal(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, System::RuntimeType* reflectedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetEvents_internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEvents_internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr, reflectedType)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::RuntimeEventInfo*>*, false>(this, ___internal__method, name, bindingAttr, reflectedType);
}
// Autogenerated method: System.RuntimeType.GetNestedTypes_native
System::IntPtr System::RuntimeType::GetNestedTypes_native(System::IntPtr name, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetNestedTypes_native");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetNestedTypes_native", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetNestedTypes_internal
::Array<System::RuntimeType*>* System::RuntimeType::GetNestedTypes_internal(::Il2CppString* displayName, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetNestedTypes_internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetNestedTypes_internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(displayName, bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::RuntimeType*>*, false>(this, ___internal__method, displayName, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetMethods
::Array<System::Reflection::MethodInfo*>* System::RuntimeType::GetMethods(System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetMethods");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMethods", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::MethodInfo*>*, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetConstructors
::Array<System::Reflection::ConstructorInfo*>* System::RuntimeType::GetConstructors(System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetConstructors");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetConstructors", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::ConstructorInfo*>*, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetProperties
::Array<System::Reflection::PropertyInfo*>* System::RuntimeType::GetProperties(System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetProperties");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetProperties", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::PropertyInfo*>*, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetFields
::Array<System::Reflection::FieldInfo*>* System::RuntimeType::GetFields(System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetFields");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetFields", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::FieldInfo*>*, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetMethodImpl
System::Reflection::MethodInfo* System::RuntimeType::GetMethodImpl(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder* binder, System::Reflection::CallingConventions callConv, ::Array<System::Type*>* types, ::Array<System::Reflection::ParameterModifier>* modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetMethodImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMethodImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr, binder, callConv, types, modifiers)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(this, ___internal__method, name, bindingAttr, binder, callConv, types, modifiers);
}
// Autogenerated method: System.RuntimeType.GetConstructorImpl
System::Reflection::ConstructorInfo* System::RuntimeType::GetConstructorImpl(System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder* binder, System::Reflection::CallingConventions callConvention, ::Array<System::Type*>* types, ::Array<System::Reflection::ParameterModifier>* modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetConstructorImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetConstructorImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bindingAttr, binder, callConvention, types, modifiers)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::ConstructorInfo*, false>(this, ___internal__method, bindingAttr, binder, callConvention, types, modifiers);
}
// Autogenerated method: System.RuntimeType.GetPropertyImpl
System::Reflection::PropertyInfo* System::RuntimeType::GetPropertyImpl(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder* binder, System::Type* returnType, ::Array<System::Type*>* types, ::Array<System::Reflection::ParameterModifier>* modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetPropertyImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPropertyImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr, binder, returnType, types, modifiers)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::PropertyInfo*, false>(this, ___internal__method, name, bindingAttr, binder, returnType, types, modifiers);
}
// Autogenerated method: System.RuntimeType.GetEvent
System::Reflection::EventInfo* System::RuntimeType::GetEvent(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::EventInfo*, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetField
System::Reflection::FieldInfo* System::RuntimeType::GetField(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::FieldInfo*, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetNestedType
System::Type* System::RuntimeType::GetNestedType(::Il2CppString* fullname, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetNestedType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetNestedType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(fullname, bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, fullname, bindingAttr);
}
// Autogenerated method: System.RuntimeType.GetMember
::Array<System::Reflection::MemberInfo*>* System::RuntimeType::GetMember(::Il2CppString* name, System::Reflection::MemberTypes type, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetMember");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMember", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, type, bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::MemberInfo*>*, false>(this, ___internal__method, name, type, bindingAttr);
}
// Autogenerated method: System.RuntimeType.get_Module
System::Reflection::Module* System::RuntimeType::get_Module() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_Module");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Module", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Module*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_Assembly
System::Reflection::Assembly* System::RuntimeType::get_Assembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_Assembly");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Assembly", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Assembly*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_TypeHandle
System::RuntimeTypeHandle System::RuntimeType::get_TypeHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_TypeHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeTypeHandle, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.IsInstanceOfType
bool System::RuntimeType::IsInstanceOfType(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::IsInstanceOfType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsInstanceOfType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(o)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated method: System.RuntimeType.IsSubclassOf
bool System::RuntimeType::IsSubclassOf(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::IsSubclassOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsSubclassOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated method: System.RuntimeType.IsAssignableFrom
bool System::RuntimeType::IsAssignableFrom(System::Type* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::IsAssignableFrom");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsAssignableFrom", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: System.RuntimeType.IsEquivalentTo
bool System::RuntimeType::IsEquivalentTo(System::Type* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::IsEquivalentTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsEquivalentTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.RuntimeType.get_BaseType
System::Type* System::RuntimeType::get_BaseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_BaseType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_BaseType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_UnderlyingSystemType
System::Type* System::RuntimeType::get_UnderlyingSystemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_UnderlyingSystemType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_UnderlyingSystemType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetAttributeFlagsImpl
System::Reflection::TypeAttributes System::RuntimeType::GetAttributeFlagsImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetAttributeFlagsImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAttributeFlagsImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::TypeAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.IsContextfulImpl
bool System::RuntimeType::IsContextfulImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::IsContextfulImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsContextfulImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.IsByRefImpl
bool System::RuntimeType::IsByRefImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::IsByRefImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsByRefImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.IsPrimitiveImpl
bool System::RuntimeType::IsPrimitiveImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::IsPrimitiveImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsPrimitiveImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.IsPointerImpl
bool System::RuntimeType::IsPointerImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::IsPointerImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsPointerImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.IsCOMObjectImpl
bool System::RuntimeType::IsCOMObjectImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::IsCOMObjectImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsCOMObjectImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.IsValueTypeImpl
bool System::RuntimeType::IsValueTypeImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::IsValueTypeImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsValueTypeImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_IsEnum
bool System::RuntimeType::get_IsEnum() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_IsEnum");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsEnum", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.HasElementTypeImpl
bool System::RuntimeType::HasElementTypeImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::HasElementTypeImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HasElementTypeImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_GenericParameterAttributes
System::Reflection::GenericParameterAttributes System::RuntimeType::get_GenericParameterAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_GenericParameterAttributes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_GenericParameterAttributes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::GenericParameterAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_IsSzArray
bool System::RuntimeType::get_IsSzArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_IsSzArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsSzArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.IsArrayImpl
bool System::RuntimeType::IsArrayImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::IsArrayImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsArrayImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetArrayRank
int System::RuntimeType::GetArrayRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetArrayRank");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetArrayRank", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetElementType
System::Type* System::RuntimeType::GetElementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetElementType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetElementType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetEnumNames
::Array<::Il2CppString*>* System::RuntimeType::GetEnumNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetEnumNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEnumNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetEnumValues
System::Array* System::RuntimeType::GetEnumValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetEnumValues");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEnumValues", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Array*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetEnumUnderlyingType
System::Type* System::RuntimeType::GetEnumUnderlyingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetEnumUnderlyingType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEnumUnderlyingType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.IsEnumDefined
bool System::RuntimeType::IsEnumDefined(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::IsEnumDefined");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsEnumDefined", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.RuntimeType.GetEnumName
::Il2CppString* System::RuntimeType::GetEnumName(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetEnumName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEnumName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.RuntimeType.GetGenericArguments
::Array<System::Type*>* System::RuntimeType::GetGenericArguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetGenericArguments");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetGenericArguments", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.MakeGenericType
System::Type* System::RuntimeType::MakeGenericType(::Array<System::Type*>* instantiation) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::MakeGenericType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MakeGenericType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(instantiation)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, instantiation);
}
// Creating initializer_list -> params proxy for: System.Type MakeGenericType(params System.Type[] instantiation)
System::Type* System::RuntimeType::MakeGenericType(std::initializer_list<System::Type*> instantiation) {
  return System::RuntimeType::MakeGenericType(::Array<System::Type*>::New(instantiation));
}
// Autogenerated method: System.RuntimeType.get_IsGenericTypeDefinition
bool System::RuntimeType::get_IsGenericTypeDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_IsGenericTypeDefinition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsGenericTypeDefinition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_IsGenericParameter
bool System::RuntimeType::get_IsGenericParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_IsGenericParameter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsGenericParameter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_GenericParameterPosition
int System::RuntimeType::get_GenericParameterPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_GenericParameterPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_GenericParameterPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetGenericTypeDefinition
System::Type* System::RuntimeType::GetGenericTypeDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetGenericTypeDefinition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetGenericTypeDefinition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_IsGenericType
bool System::RuntimeType::get_IsGenericType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_IsGenericType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsGenericType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.InvokeMember
::Il2CppObject* System::RuntimeType::InvokeMember(::Il2CppString* name, System::Reflection::BindingFlags bindingFlags, System::Reflection::Binder* binder, ::Il2CppObject* target, ::Array<::Il2CppObject*>* providedArgs, ::Array<System::Reflection::ParameterModifier>* modifiers, System::Globalization::CultureInfo* culture, ::Array<::Il2CppString*>* namedParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::InvokeMember");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InvokeMember", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingFlags, binder, target, providedArgs, modifiers, culture, namedParams)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, name, bindingFlags, binder, target, providedArgs, modifiers, culture, namedParams);
}
// Autogenerated method: System.RuntimeType.Equals
bool System::RuntimeType::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.RuntimeType.Clone
::Il2CppObject* System::RuntimeType::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::Clone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* System::RuntimeType::System_ICloneable_Clone() {
  return System::RuntimeType::Clone();
}
// Autogenerated method: System.RuntimeType.GetObjectData
void System::RuntimeType::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetObjectData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(info, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
void System::RuntimeType::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  System::RuntimeType::GetObjectData(info, context);
}
// Autogenerated method: System.RuntimeType.GetCustomAttributes
::Array<::Il2CppObject*>* System::RuntimeType::GetCustomAttributes(bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(inherit)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppObject*>*, false>(this, ___internal__method, inherit);
}
// Autogenerated method: System.RuntimeType.GetCustomAttributes
::Array<::Il2CppObject*>* System::RuntimeType::GetCustomAttributes(System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetCustomAttributes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(attributeType, inherit)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppObject*>*, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.RuntimeType.IsDefined
bool System::RuntimeType::IsDefined(System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::IsDefined");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsDefined", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(attributeType, inherit)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.RuntimeType.GetCustomAttributesData
System::Collections::Generic::IList_1<System::Reflection::CustomAttributeData*>* System::RuntimeType::GetCustomAttributesData() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetCustomAttributesData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCustomAttributesData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IList_1<System::Reflection::CustomAttributeData*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.FormatTypeName
::Il2CppString* System::RuntimeType::FormatTypeName(bool serialization) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::FormatTypeName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FormatTypeName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(serialization)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, serialization);
}
// Autogenerated method: System.RuntimeType.get_MemberType
System::Reflection::MemberTypes System::RuntimeType::get_MemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_MemberType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_MemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MemberTypes, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_ReflectedType
System::Type* System::RuntimeType::get_ReflectedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_ReflectedType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ReflectedType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_MetadataToken
int System::RuntimeType::get_MetadataToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_MetadataToken");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_MetadataToken", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.MakeArrayType
System::Type* System::RuntimeType::MakeArrayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::MakeArrayType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MakeArrayType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.MakeArrayType
System::Type* System::RuntimeType::MakeArrayType(int rank) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::MakeArrayType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MakeArrayType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rank)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, rank);
}
// Autogenerated method: System.RuntimeType.MakeByRefType
System::Type* System::RuntimeType::MakeByRefType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::MakeByRefType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MakeByRefType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.MakePointerType
System::Type* System::RuntimeType::MakePointerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::MakePointerType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MakePointerType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_ContainsGenericParameters
bool System::RuntimeType::get_ContainsGenericParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_ContainsGenericParameters");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ContainsGenericParameters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetGenericParameterConstraints
::Array<System::Type*>* System::RuntimeType::GetGenericParameterConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetGenericParameterConstraints");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetGenericParameterConstraints", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetTypeCodeImpl
System::TypeCode System::RuntimeType::GetTypeCodeImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetTypeCodeImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTypeCodeImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::TypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.ToString
::Il2CppString* System::RuntimeType::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_DeclaringMethod
System::Reflection::MethodBase* System::RuntimeType::get_DeclaringMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_DeclaringMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DeclaringMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodBase*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetInterfaces
::Array<System::Type*>* System::RuntimeType::GetInterfaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetInterfaces");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInterfaces", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_AssemblyQualifiedName
::Il2CppString* System::RuntimeType::get_AssemblyQualifiedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_AssemblyQualifiedName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AssemblyQualifiedName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_DeclaringType
System::Type* System::RuntimeType::get_DeclaringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_DeclaringType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DeclaringType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_Name
::Il2CppString* System::RuntimeType::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_Name");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_Namespace
::Il2CppString* System::RuntimeType::get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_Namespace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Namespace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.GetHashCode
int System::RuntimeType::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType.get_FullName
::Il2CppString* System::RuntimeType::get_FullName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::get_FullName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_FullName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.RuntimeType..cctor
void System::RuntimeType::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.RuntimeType.op_Equality
bool System::operator ==(System::RuntimeType* left, System::RuntimeType& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::op_Equality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "op_Equality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(left, &right)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated method: System.RuntimeType.op_Inequality
bool System::operator !=(System::RuntimeType* left, System::RuntimeType& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "RuntimeType", "op_Inequality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(left, &right)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.RuntimeType/MemberListType
#include "System/RuntimeType_MemberListType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.RuntimeType/MemberListType All
System::RuntimeType::MemberListType System::RuntimeType::MemberListType::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::MemberListType::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::RuntimeType::MemberListType>("System", "RuntimeType/MemberListType", "All"));
}
// Autogenerated static field setter
// Set static field: static public System.RuntimeType/MemberListType All
void System::RuntimeType::MemberListType::_set_All(System::RuntimeType::MemberListType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::MemberListType::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType/MemberListType", "All", value));
}
// Autogenerated static field getter
// Get static field: static public System.RuntimeType/MemberListType CaseSensitive
System::RuntimeType::MemberListType System::RuntimeType::MemberListType::_get_CaseSensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::MemberListType::_get_CaseSensitive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::RuntimeType::MemberListType>("System", "RuntimeType/MemberListType", "CaseSensitive"));
}
// Autogenerated static field setter
// Set static field: static public System.RuntimeType/MemberListType CaseSensitive
void System::RuntimeType::MemberListType::_set_CaseSensitive(System::RuntimeType::MemberListType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::MemberListType::_set_CaseSensitive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType/MemberListType", "CaseSensitive", value));
}
// Autogenerated static field getter
// Get static field: static public System.RuntimeType/MemberListType CaseInsensitive
System::RuntimeType::MemberListType System::RuntimeType::MemberListType::_get_CaseInsensitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::MemberListType::_get_CaseInsensitive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::RuntimeType::MemberListType>("System", "RuntimeType/MemberListType", "CaseInsensitive"));
}
// Autogenerated static field setter
// Set static field: static public System.RuntimeType/MemberListType CaseInsensitive
void System::RuntimeType::MemberListType::_set_CaseInsensitive(System::RuntimeType::MemberListType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::MemberListType::_set_CaseInsensitive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType/MemberListType", "CaseInsensitive", value));
}
// Autogenerated static field getter
// Get static field: static public System.RuntimeType/MemberListType HandleToInfo
System::RuntimeType::MemberListType System::RuntimeType::MemberListType::_get_HandleToInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::MemberListType::_get_HandleToInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::RuntimeType::MemberListType>("System", "RuntimeType/MemberListType", "HandleToInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.RuntimeType/MemberListType HandleToInfo
void System::RuntimeType::MemberListType::_set_HandleToInfo(System::RuntimeType::MemberListType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::RuntimeType::MemberListType::_set_HandleToInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "RuntimeType/MemberListType", "HandleToInfo", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ReflectionOnlyType
#include "System/ReflectionOnlyType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ReflectionOnlyType.get_TypeHandle
System::RuntimeTypeHandle System::ReflectionOnlyType::get_TypeHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ReflectionOnlyType::get_TypeHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeTypeHandle, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.SByte
#include "System/SByte.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.SByte MaxValue
int8_t System::SByte::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int8_t>("System", "SByte", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public System.SByte MaxValue
void System::SByte::_set_MaxValue(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "SByte", "MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.SByte MinValue
int8_t System::SByte::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int8_t>("System", "SByte", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public System.SByte MinValue
void System::SByte::_set_MinValue(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "SByte", "MinValue", value));
}
// Autogenerated method: System.SByte.ToString
::Il2CppString* System::SByte::ToString(::Il2CppString* format, System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, info)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, format, info);
}
// Autogenerated method: System.SByte.Parse
int8_t System::SByte::Parse(::Il2CppString* s, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::Parse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "SByte", "Parse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, provider)));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, provider);
}
// Autogenerated method: System.SByte.Parse
int8_t System::SByte::Parse(::Il2CppString* s, System::Globalization::NumberStyles style, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::Parse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "SByte", "Parse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, style, provider)));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, provider);
}
// Autogenerated method: System.SByte.Parse
int8_t System::SByte::Parse(::Il2CppString* s, System::Globalization::NumberStyles style, System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::Parse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "SByte", "Parse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, style, info)));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, info);
}
// Autogenerated method: System.SByte.CompareTo
int System::SByte::CompareTo(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::CompareTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, obj);
}
int System::SByte::System_IComparable_CompareTo(::Il2CppObject* obj) {
  return System::SByte::CompareTo(obj);
}
// Autogenerated method: System.SByte.CompareTo
int System::SByte::CompareTo(int8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::CompareTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, value);
}
// Autogenerated method: System.SByte.Equals
bool System::SByte::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.SByte.Equals
bool System::SByte::Equals(int8_t obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.SByte.GetHashCode
int System::SByte::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.SByte.ToString
::Il2CppString* System::SByte::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: System.SByte.ToString
::Il2CppString* System::SByte::ToString(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.ToString
::Il2CppString* System::SByte::ToString(::Il2CppString* format, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, provider)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, format, provider);
}
// Autogenerated method: System.SByte.GetTypeCode
System::TypeCode System::SByte::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::GetTypeCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetTypeCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::TypeCode, false>(*this, ___internal__method);
}
// Autogenerated method: System.SByte.System.IConvertible.ToBoolean
bool System::SByte::System_IConvertible_ToBoolean(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::System.IConvertible.ToBoolean");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToBoolean", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToChar
::Il2CppChar System::SByte::System_IConvertible_ToChar(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::System.IConvertible.ToChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToSByte
int8_t System::SByte::System_IConvertible_ToSByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::System.IConvertible.ToSByte");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSByte", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToByte
uint8_t System::SByte::System_IConvertible_ToByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::System.IConvertible.ToByte");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToByte", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToInt16
int16_t System::SByte::System_IConvertible_ToInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::System.IConvertible.ToInt16");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt16", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToUInt16
uint16_t System::SByte::System_IConvertible_ToUInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::System.IConvertible.ToUInt16");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt16", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToInt32
int System::SByte::System_IConvertible_ToInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::System.IConvertible.ToInt32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToUInt32
uint System::SByte::System_IConvertible_ToUInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::System.IConvertible.ToUInt32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToInt64
int64_t System::SByte::System_IConvertible_ToInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::System.IConvertible.ToInt64");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt64", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToUInt64
uint64_t System::SByte::System_IConvertible_ToUInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::System.IConvertible.ToUInt64");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt64", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToSingle
float System::SByte::System_IConvertible_ToSingle(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::System.IConvertible.ToSingle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSingle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToDouble
double System::SByte::System_IConvertible_ToDouble(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::System.IConvertible.ToDouble");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDouble", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToDecimal
System::Decimal System::SByte::System_IConvertible_ToDecimal(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::System.IConvertible.ToDecimal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDecimal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<System::Decimal, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToDateTime
System::DateTime System::SByte::System_IConvertible_ToDateTime(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::System.IConvertible.ToDateTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDateTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.SByte.System.IConvertible.ToType
::Il2CppObject* System::SByte::System_IConvertible_ToType(System::Type* type, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SByte::System.IConvertible.ToType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, provider)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(*this, ___internal__method, type, provider);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.SerializableAttribute
#include "System/SerializableAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.SharedStatics
#include "System/SharedStatics.hpp"
// Including type: System.Security.Util.Tokenizer/StringMaker
#include "System/Security/Util/Tokenizer_StringMaker.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.SharedStatics _sharedStatics
System::SharedStatics* System::SharedStatics::_get__sharedStatics() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SharedStatics::_get__sharedStatics");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::SharedStatics*>("System", "SharedStatics", "_sharedStatics"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.SharedStatics _sharedStatics
void System::SharedStatics::_set__sharedStatics(System::SharedStatics* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SharedStatics::_set__sharedStatics");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "SharedStatics", "_sharedStatics", value));
}
// Autogenerated method: System.SharedStatics.GetSharedStringMaker
System::Security::Util::Tokenizer::StringMaker* System::SharedStatics::GetSharedStringMaker() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SharedStatics::GetSharedStringMaker");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "SharedStatics", "GetSharedStringMaker", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Util::Tokenizer::StringMaker*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.SharedStatics.ReleaseSharedStringMaker
void System::SharedStatics::ReleaseSharedStringMaker(System::Security::Util::Tokenizer::StringMaker*& maker) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SharedStatics::ReleaseSharedStringMaker");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "SharedStatics", "ReleaseSharedStringMaker", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(maker)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, maker);
}
// Autogenerated method: System.SharedStatics..cctor
void System::SharedStatics::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::SharedStatics::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "SharedStatics", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Single
#include "System/Single.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single MinValue
float System::Single::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("System", "Single", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Single MinValue
void System::Single::_set_MinValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Single", "MinValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single Epsilon
float System::Single::_get_Epsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::_get_Epsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("System", "Single", "Epsilon"));
}
// Autogenerated static field setter
// Set static field: static public System.Single Epsilon
void System::Single::_set_Epsilon(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::_set_Epsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Single", "Epsilon", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single MaxValue
float System::Single::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("System", "Single", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public System.Single MaxValue
void System::Single::_set_MaxValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Single", "MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single PositiveInfinity
float System::Single::_get_PositiveInfinity() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::_get_PositiveInfinity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("System", "Single", "PositiveInfinity"));
}
// Autogenerated static field setter
// Set static field: static public System.Single PositiveInfinity
void System::Single::_set_PositiveInfinity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::_set_PositiveInfinity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Single", "PositiveInfinity", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single NegativeInfinity
float System::Single::_get_NegativeInfinity() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::_get_NegativeInfinity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("System", "Single", "NegativeInfinity"));
}
// Autogenerated static field setter
// Set static field: static public System.Single NegativeInfinity
void System::Single::_set_NegativeInfinity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::_set_NegativeInfinity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Single", "NegativeInfinity", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single NaN
float System::Single::_get_NaN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::_get_NaN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("System", "Single", "NaN"));
}
// Autogenerated static field setter
// Set static field: static public System.Single NaN
void System::Single::_set_NaN(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::_set_NaN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Single", "NaN", value));
}
// Autogenerated method: System.Single.IsInfinity
bool System::Single::IsInfinity(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::IsInfinity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Single", "IsInfinity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(f)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, f);
}
// Autogenerated method: System.Single.IsPositiveInfinity
bool System::Single::IsPositiveInfinity(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::IsPositiveInfinity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Single", "IsPositiveInfinity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(f)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, f);
}
// Autogenerated method: System.Single.IsNegativeInfinity
bool System::Single::IsNegativeInfinity(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::IsNegativeInfinity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Single", "IsNegativeInfinity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(f)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, f);
}
// Autogenerated method: System.Single.IsNaN
bool System::Single::IsNaN(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::IsNaN");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Single", "IsNaN", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(f)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, f);
}
// Autogenerated method: System.Single.ToString
::Il2CppString* System::Single::ToString(::Il2CppString* format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, format);
}
// Autogenerated method: System.Single.Parse
float System::Single::Parse(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::Parse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Single", "Parse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.Single.Parse
float System::Single::Parse(::Il2CppString* s, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::Parse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Single", "Parse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, provider)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, provider);
}
// Autogenerated method: System.Single.Parse
float System::Single::Parse(::Il2CppString* s, System::Globalization::NumberStyles style, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::Parse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Single", "Parse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, style, provider)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, provider);
}
// Autogenerated method: System.Single.Parse
float System::Single::Parse(::Il2CppString* s, System::Globalization::NumberStyles style, System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::Parse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Single", "Parse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, style, info)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, info);
}
// Autogenerated method: System.Single.TryParse
bool System::Single::TryParse(::Il2CppString* s, float& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::TryParse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Single", "TryParse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, result);
}
// Autogenerated method: System.Single.TryParse
bool System::Single::TryParse(::Il2CppString* s, System::Globalization::NumberStyles style, System::IFormatProvider* provider, float& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::TryParse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Single", "TryParse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, style, provider, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, provider, result);
}
// Autogenerated method: System.Single.TryParse
bool System::Single::TryParse(::Il2CppString* s, System::Globalization::NumberStyles style, System::Globalization::NumberFormatInfo* info, float& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::TryParse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Single", "TryParse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, style, info, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, info, result);
}
// Autogenerated method: System.Single.CompareTo
int System::Single::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::CompareTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, value);
}
int System::Single::System_IComparable_CompareTo(::Il2CppObject* value) {
  return System::Single::CompareTo(value);
}
// Autogenerated method: System.Single.CompareTo
int System::Single::CompareTo(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::CompareTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, value);
}
// Autogenerated method: System.Single.Equals
bool System::Single::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.Single.Equals
bool System::Single::Equals(float obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.Single.GetHashCode
int System::Single::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.Single.ToString
::Il2CppString* System::Single::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: System.Single.ToString
::Il2CppString* System::Single::ToString(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.ToString
::Il2CppString* System::Single::ToString(::Il2CppString* format, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, provider)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, format, provider);
}
// Autogenerated method: System.Single.GetTypeCode
System::TypeCode System::Single::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::GetTypeCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetTypeCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::TypeCode, false>(*this, ___internal__method);
}
// Autogenerated method: System.Single.System.IConvertible.ToBoolean
bool System::Single::System_IConvertible_ToBoolean(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::System.IConvertible.ToBoolean");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToBoolean", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToChar
::Il2CppChar System::Single::System_IConvertible_ToChar(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::System.IConvertible.ToChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToSByte
int8_t System::Single::System_IConvertible_ToSByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::System.IConvertible.ToSByte");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSByte", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToByte
uint8_t System::Single::System_IConvertible_ToByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::System.IConvertible.ToByte");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToByte", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToInt16
int16_t System::Single::System_IConvertible_ToInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::System.IConvertible.ToInt16");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt16", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToUInt16
uint16_t System::Single::System_IConvertible_ToUInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::System.IConvertible.ToUInt16");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt16", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToInt32
int System::Single::System_IConvertible_ToInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::System.IConvertible.ToInt32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToUInt32
uint System::Single::System_IConvertible_ToUInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::System.IConvertible.ToUInt32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToInt64
int64_t System::Single::System_IConvertible_ToInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::System.IConvertible.ToInt64");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt64", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToUInt64
uint64_t System::Single::System_IConvertible_ToUInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::System.IConvertible.ToUInt64");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt64", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToSingle
float System::Single::System_IConvertible_ToSingle(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::System.IConvertible.ToSingle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSingle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToDouble
double System::Single::System_IConvertible_ToDouble(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::System.IConvertible.ToDouble");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDouble", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToDecimal
System::Decimal System::Single::System_IConvertible_ToDecimal(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::System.IConvertible.ToDecimal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDecimal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<System::Decimal, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToDateTime
System::DateTime System::Single::System_IConvertible_ToDateTime(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::System.IConvertible.ToDateTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDateTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.Single.System.IConvertible.ToType
::Il2CppObject* System::Single::System_IConvertible_ToType(System::Type* type, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Single::System.IConvertible.ToType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, provider)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(*this, ___internal__method, type, provider);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.StackOverflowException
#include "System/StackOverflowException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.StringComparison
#include "System/StringComparison.hpp"
// Including type: System.StringSplitOptions
#include "System/StringSplitOptions.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Text.NormalizationForm
#include "System/Text/NormalizationForm.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Globalization.CompareOptions
#include "System/Globalization/CompareOptions.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.ParamsArray
#include "System/ParamsArray.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 TrimHead
int System::String::_get_TrimHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::_get_TrimHead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "String", "TrimHead"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 TrimHead
void System::String::_set_TrimHead(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::_set_TrimHead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "String", "TrimHead", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 TrimTail
int System::String::_get_TrimTail() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::_get_TrimTail");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "String", "TrimTail"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 TrimTail
void System::String::_set_TrimTail(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::_set_TrimTail");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "String", "TrimTail", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 TrimBoth
int System::String::_get_TrimBoth() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::_get_TrimBoth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "String", "TrimBoth"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 TrimBoth
void System::String::_set_TrimBoth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::_set_TrimBoth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "String", "TrimBoth", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String Empty
::Il2CppString* System::String::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "String", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String Empty
void System::String::_set_Empty(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "String", "Empty", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 charPtrAlignConst
int System::String::_get_charPtrAlignConst() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::_get_charPtrAlignConst");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "String", "charPtrAlignConst"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 charPtrAlignConst
void System::String::_set_charPtrAlignConst(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::_set_charPtrAlignConst");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "String", "charPtrAlignConst", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 alignConst
int System::String::_get_alignConst() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::_get_alignConst");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "String", "alignConst"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 alignConst
void System::String::_set_alignConst(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::_set_alignConst");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "String", "alignConst", value));
}
// Autogenerated method: System.String.Join
::Il2CppString* System::String::Join(::Il2CppString* separator, ::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Join");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "Join", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(separator, value)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, separator, value);
}
// Creating initializer_list -> params proxy for: System.String Join(System.String separator, params System.String[] value)
::Il2CppString* System::String::Join(::Il2CppString* separator, std::initializer_list<::Il2CppString*> value) {
  return System::String::Join(separator, ::Array<::Il2CppString*>::New(value));
}
// Autogenerated method: System.String.Join
::Il2CppString* System::String::Join(::Il2CppString* separator, System::Collections::Generic::IEnumerable_1<::Il2CppString*>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Join");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "Join", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(separator, values)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, separator, values);
}
// Autogenerated method: System.String.Join
::Il2CppString* System::String::Join(::Il2CppString* separator, ::Array<::Il2CppString*>* value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Join");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "Join", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(separator, value, startIndex, count)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, separator, value, startIndex, count);
}
// Autogenerated method: System.String.CompareOrdinalIgnoreCaseHelper
int System::String::CompareOrdinalIgnoreCaseHelper(::Il2CppString* strA, ::Il2CppString* strB) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CompareOrdinalIgnoreCaseHelper");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "CompareOrdinalIgnoreCaseHelper", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(strA, strB)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, strA, strB);
}
// Autogenerated method: System.String.EqualsHelper
bool System::String::EqualsHelper(::Il2CppString* strA, ::Il2CppString* strB) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::EqualsHelper");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "EqualsHelper", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(strA, strB)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, strA, strB);
}
// Autogenerated method: System.String.CompareOrdinalHelper
int System::String::CompareOrdinalHelper(::Il2CppString* strA, ::Il2CppString* strB) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CompareOrdinalHelper");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "CompareOrdinalHelper", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(strA, strB)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, strA, strB);
}
// Autogenerated method: System.String.Equals
bool System::String::Equals(::Il2CppString* value, System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, comparisonType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value, comparisonType);
}
// Autogenerated method: System.String.Equals
bool System::String::Equals(::Il2CppString* a, ::Il2CppString* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: System.String.Equals
bool System::String::Equals(::Il2CppString* a, ::Il2CppString* b, System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b, comparisonType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b, comparisonType);
}
// Autogenerated method: System.String.get_Chars
::Il2CppChar System::String::get_Chars(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::get_Chars");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Chars", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(this, ___internal__method, index);
}
// Autogenerated method: System.String.CopyTo
void System::String::CopyTo(int sourceIndex, ::Array<::Il2CppChar>* destination, int destinationIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CopyTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sourceIndex, destination, destinationIndex, count)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sourceIndex, destination, destinationIndex, count);
}
// Autogenerated method: System.String.ToCharArray
::Array<::Il2CppChar>* System::String::ToCharArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::ToCharArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToCharArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppChar>*, false>(this, ___internal__method);
}
// Autogenerated method: System.String.IsNullOrEmpty
bool System::String::IsNullOrEmpty(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IsNullOrEmpty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "IsNullOrEmpty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.String.IsNullOrWhiteSpace
bool System::String::IsNullOrWhiteSpace(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IsNullOrWhiteSpace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "IsNullOrWhiteSpace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.String.GetLegacyNonRandomizedHashCode
int System::String::GetLegacyNonRandomizedHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::GetLegacyNonRandomizedHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLegacyNonRandomizedHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.String.Split
::Array<::Il2CppString*>* System::String::Split(::Array<::Il2CppChar>* separator) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Split");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Split", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(separator)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, separator);
}
// Creating initializer_list -> params proxy for: System.String[] Split(params System.Char[] separator)
::Array<::Il2CppString*>* System::String::Split(std::initializer_list<::Il2CppChar> separator) {
  return System::String::Split(::Array<::Il2CppChar>::New(separator));
}
// Autogenerated method: System.String.Split
::Array<::Il2CppString*>* System::String::Split(::Array<::Il2CppChar>* separator, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Split");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Split", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(separator, count)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, separator, count);
}
// Autogenerated method: System.String.Split
::Array<::Il2CppString*>* System::String::Split(::Array<::Il2CppChar>* separator, System::StringSplitOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Split");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Split", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(separator, options)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, separator, options);
}
// Autogenerated method: System.String.SplitInternal
::Array<::Il2CppString*>* System::String::SplitInternal(::Array<::Il2CppChar>* separator, int count, System::StringSplitOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::SplitInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SplitInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(separator, count, options)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, separator, count, options);
}
// Autogenerated method: System.String.Split
::Array<::Il2CppString*>* System::String::Split(::Array<::Il2CppString*>* separator, System::StringSplitOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Split");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Split", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(separator, options)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, separator, options);
}
// Autogenerated method: System.String.Split
::Array<::Il2CppString*>* System::String::Split(::Array<::Il2CppString*>* separator, int count, System::StringSplitOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Split");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Split", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(separator, count, options)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, separator, count, options);
}
// Autogenerated method: System.String.InternalSplitKeepEmptyEntries
::Array<::Il2CppString*>* System::String::InternalSplitKeepEmptyEntries(::Array<int>* sepList, ::Array<int>* lengthList, int numReplaces, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::InternalSplitKeepEmptyEntries");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalSplitKeepEmptyEntries", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sepList, lengthList, numReplaces, count)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, sepList, lengthList, numReplaces, count);
}
// Autogenerated method: System.String.InternalSplitOmitEmptyEntries
::Array<::Il2CppString*>* System::String::InternalSplitOmitEmptyEntries(::Array<int>* sepList, ::Array<int>* lengthList, int numReplaces, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::InternalSplitOmitEmptyEntries");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalSplitOmitEmptyEntries", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sepList, lengthList, numReplaces, count)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, sepList, lengthList, numReplaces, count);
}
// Autogenerated method: System.String.MakeSeparatorList
int System::String::MakeSeparatorList(::Array<::Il2CppChar>* separator, ::Array<int>*& sepList) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::MakeSeparatorList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MakeSeparatorList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(separator, sepList)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, separator, sepList);
}
// Autogenerated method: System.String.MakeSeparatorList
int System::String::MakeSeparatorList(::Array<::Il2CppString*>* separators, ::Array<int>*& sepList, ::Array<int>*& lengthList) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::MakeSeparatorList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MakeSeparatorList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(separators, sepList, lengthList)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, separators, sepList, lengthList);
}
// Autogenerated method: System.String.Substring
::Il2CppString* System::String::Substring(int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Substring");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Substring", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(startIndex)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, startIndex);
}
// Autogenerated method: System.String.Substring
::Il2CppString* System::String::Substring(int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Substring");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Substring", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(startIndex, length)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, startIndex, length);
}
// Autogenerated method: System.String.InternalSubString
::Il2CppString* System::String::InternalSubString(int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::InternalSubString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalSubString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(startIndex, length)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, startIndex, length);
}
// Autogenerated method: System.String.Trim
::Il2CppString* System::String::Trim(::Array<::Il2CppChar>* trimChars) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Trim");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Trim", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(trimChars)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, trimChars);
}
// Creating initializer_list -> params proxy for: System.String Trim(params System.Char[] trimChars)
::Il2CppString* System::String::Trim(std::initializer_list<::Il2CppChar> trimChars) {
  return System::String::Trim(::Array<::Il2CppChar>::New(trimChars));
}
// Autogenerated method: System.String.TrimStart
::Il2CppString* System::String::TrimStart(::Array<::Il2CppChar>* trimChars) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::TrimStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TrimStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(trimChars)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, trimChars);
}
// Creating initializer_list -> params proxy for: System.String TrimStart(params System.Char[] trimChars)
::Il2CppString* System::String::TrimStart(std::initializer_list<::Il2CppChar> trimChars) {
  return System::String::TrimStart(::Array<::Il2CppChar>::New(trimChars));
}
// Autogenerated method: System.String.TrimEnd
::Il2CppString* System::String::TrimEnd(::Array<::Il2CppChar>* trimChars) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::TrimEnd");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TrimEnd", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(trimChars)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, trimChars);
}
// Creating initializer_list -> params proxy for: System.String TrimEnd(params System.Char[] trimChars)
::Il2CppString* System::String::TrimEnd(std::initializer_list<::Il2CppChar> trimChars) {
  return System::String::TrimEnd(::Array<::Il2CppChar>::New(trimChars));
}
// Autogenerated method: System.String.CreateStringFromEncoding
::Il2CppString* System::String::CreateStringFromEncoding(uint8_t* bytes, int byteLength, System::Text::Encoding* encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CreateStringFromEncoding");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "CreateStringFromEncoding", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bytes, byteLength, encoding)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bytes, byteLength, encoding);
}
// Autogenerated method: System.String.Normalize
::Il2CppString* System::String::Normalize(System::Text::NormalizationForm normalizationForm) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Normalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Normalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(normalizationForm)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, normalizationForm);
}
// Autogenerated method: System.String.FastAllocateString
::Il2CppString* System::String::FastAllocateString(int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::FastAllocateString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "FastAllocateString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(length)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, length);
}
// Autogenerated method: System.String.FillStringChecked
void System::String::FillStringChecked(::Il2CppString* dest, int destPos, ::Il2CppString* src) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::FillStringChecked");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "FillStringChecked", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dest, destPos, src)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dest, destPos, src);
}
// Autogenerated method: System.String.wstrcpy
void System::String::wstrcpy(::Il2CppChar* dmem, ::Il2CppChar* smem, int charCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::wstrcpy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "wstrcpy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dmem, smem, charCount)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dmem, smem, charCount);
}
// Autogenerated method: System.String.CtorCharArray
::Il2CppString* System::String::CtorCharArray(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CtorCharArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CtorCharArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.CtorCharArrayStartLength
::Il2CppString* System::String::CtorCharArrayStartLength(::Array<::Il2CppChar>* value, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CtorCharArrayStartLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CtorCharArrayStartLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, startIndex, length)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, value, startIndex, length);
}
// Autogenerated method: System.String.wcslen
int System::String::wcslen(::Il2CppChar* ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::wcslen");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "wcslen", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ptr)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: System.String.CtorCharPtr
::Il2CppString* System::String::CtorCharPtr(::Il2CppChar* ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CtorCharPtr");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CtorCharPtr", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ptr)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, ptr);
}
// Autogenerated method: System.String.CtorCharPtrStartLength
::Il2CppString* System::String::CtorCharPtrStartLength(::Il2CppChar* ptr, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CtorCharPtrStartLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CtorCharPtrStartLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ptr, startIndex, length)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, ptr, startIndex, length);
}
// Autogenerated method: System.String.Compare
int System::String::Compare(::Il2CppString* strA, ::Il2CppString* strB) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Compare");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "Compare", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(strA, strB)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, strA, strB);
}
// Autogenerated method: System.String.Compare
int System::String::Compare(::Il2CppString* strA, ::Il2CppString* strB, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Compare");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "Compare", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(strA, strB, ignoreCase)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, strA, strB, ignoreCase);
}
// Autogenerated method: System.String.Compare
int System::String::Compare(::Il2CppString* strA, ::Il2CppString* strB, System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Compare");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "Compare", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(strA, strB, comparisonType)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, strA, strB, comparisonType);
}
// Autogenerated method: System.String.Compare
int System::String::Compare(::Il2CppString* strA, ::Il2CppString* strB, bool ignoreCase, System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Compare");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "Compare", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(strA, strB, ignoreCase, culture)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, strA, strB, ignoreCase, culture);
}
// Autogenerated method: System.String.Compare
int System::String::Compare(::Il2CppString* strA, int indexA, ::Il2CppString* strB, int indexB, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Compare");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "Compare", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(strA, indexA, strB, indexB, length)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, strA, indexA, strB, indexB, length);
}
// Autogenerated method: System.String.Compare
int System::String::Compare(::Il2CppString* strA, int indexA, ::Il2CppString* strB, int indexB, int length, System::Globalization::CultureInfo* culture, System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Compare");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "Compare", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(strA, indexA, strB, indexB, length, culture, options)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, strA, indexA, strB, indexB, length, culture, options);
}
// Autogenerated method: System.String.Compare
int System::String::Compare(::Il2CppString* strA, int indexA, ::Il2CppString* strB, int indexB, int length, System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Compare");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "Compare", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(strA, indexA, strB, indexB, length, comparisonType)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, strA, indexA, strB, indexB, length, comparisonType);
}
// Autogenerated method: System.String.CompareOrdinal
int System::String::CompareOrdinal(::Il2CppString* strA, ::Il2CppString* strB) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CompareOrdinal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "CompareOrdinal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(strA, strB)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, strA, strB);
}
// Autogenerated method: System.String.CompareOrdinal
int System::String::CompareOrdinal(::Il2CppString* strA, int indexA, ::Il2CppString* strB, int indexB, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CompareOrdinal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "CompareOrdinal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(strA, indexA, strB, indexB, length)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, strA, indexA, strB, indexB, length);
}
// Autogenerated method: System.String.Contains
bool System::String::Contains(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Contains");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.EndsWith
bool System::String::EndsWith(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::EndsWith");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndsWith", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.EndsWith
bool System::String::EndsWith(::Il2CppString* value, System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::EndsWith");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndsWith", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, comparisonType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value, comparisonType);
}
// Autogenerated method: System.String.EndsWith
bool System::String::EndsWith(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::EndsWith");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndsWith", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.IndexOf
int System::String::IndexOf(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IndexOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.IndexOf
int System::String::IndexOf(::Il2CppChar value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IndexOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, startIndex)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value, startIndex);
}
// Autogenerated method: System.String.IndexOfAny
int System::String::IndexOfAny(::Array<::Il2CppChar>* anyOf) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IndexOfAny");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IndexOfAny", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(anyOf)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, anyOf);
}
// Autogenerated method: System.String.IndexOfAny
int System::String::IndexOfAny(::Array<::Il2CppChar>* anyOf, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IndexOfAny");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IndexOfAny", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(anyOf, startIndex)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, anyOf, startIndex);
}
// Autogenerated method: System.String.IndexOf
int System::String::IndexOf(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IndexOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.IndexOf
int System::String::IndexOf(::Il2CppString* value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IndexOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, startIndex)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value, startIndex);
}
// Autogenerated method: System.String.IndexOf
int System::String::IndexOf(::Il2CppString* value, System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IndexOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, comparisonType)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value, comparisonType);
}
// Autogenerated method: System.String.IndexOf
int System::String::IndexOf(::Il2CppString* value, int startIndex, System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IndexOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, startIndex, comparisonType)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value, startIndex, comparisonType);
}
// Autogenerated method: System.String.IndexOf
int System::String::IndexOf(::Il2CppString* value, int startIndex, int count, System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IndexOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, startIndex, count, comparisonType)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value, startIndex, count, comparisonType);
}
// Autogenerated method: System.String.LastIndexOf
int System::String::LastIndexOf(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.LastIndexOf
int System::String::LastIndexOf(::Il2CppChar value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, startIndex)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value, startIndex);
}
// Autogenerated method: System.String.LastIndexOfAny
int System::String::LastIndexOfAny(::Array<::Il2CppChar>* anyOf) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::LastIndexOfAny");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LastIndexOfAny", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(anyOf)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, anyOf);
}
// Autogenerated method: System.String.LastIndexOfAny
int System::String::LastIndexOfAny(::Array<::Il2CppChar>* anyOf, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::LastIndexOfAny");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LastIndexOfAny", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(anyOf, startIndex)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, anyOf, startIndex);
}
// Autogenerated method: System.String.LastIndexOf
int System::String::LastIndexOf(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.LastIndexOf
int System::String::LastIndexOf(::Il2CppString* value, System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, comparisonType)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value, comparisonType);
}
// Autogenerated method: System.String.LastIndexOf
int System::String::LastIndexOf(::Il2CppString* value, int startIndex, int count, System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, startIndex, count, comparisonType)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value, startIndex, count, comparisonType);
}
// Autogenerated method: System.String.PadLeft
::Il2CppString* System::String::PadLeft(int totalWidth, ::Il2CppChar paddingChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::PadLeft");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PadLeft", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(totalWidth, paddingChar)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, totalWidth, paddingChar);
}
// Autogenerated method: System.String.PadRight
::Il2CppString* System::String::PadRight(int totalWidth, ::Il2CppChar paddingChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::PadRight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PadRight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(totalWidth, paddingChar)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, totalWidth, paddingChar);
}
// Autogenerated method: System.String.StartsWith
bool System::String::StartsWith(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::StartsWith");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartsWith", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.StartsWith
bool System::String::StartsWith(::Il2CppString* value, System::StringComparison comparisonType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::StartsWith");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartsWith", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, comparisonType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value, comparisonType);
}
// Autogenerated method: System.String.ToLower
::Il2CppString* System::String::ToLower() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::ToLower");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToLower", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.String.ToLower
::Il2CppString* System::String::ToLower(System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::ToLower");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToLower", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(culture)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, culture);
}
// Autogenerated method: System.String.ToLowerInvariant
::Il2CppString* System::String::ToLowerInvariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::ToLowerInvariant");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToLowerInvariant", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.String.ToUpper
::Il2CppString* System::String::ToUpper() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::ToUpper");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToUpper", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.String.ToUpper
::Il2CppString* System::String::ToUpper(System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::ToUpper");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToUpper", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(culture)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, culture);
}
// Autogenerated method: System.String.ToUpperInvariant
::Il2CppString* System::String::ToUpperInvariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::ToUpperInvariant");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToUpperInvariant", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.String.IsBOMWhitespace
bool System::String::IsBOMWhitespace(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IsBOMWhitespace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "IsBOMWhitespace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.String.Trim
::Il2CppString* System::String::Trim() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Trim");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Trim", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.String.TrimHelper
::Il2CppString* System::String::TrimHelper(int trimType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::TrimHelper");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TrimHelper", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(trimType)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, trimType);
}
// Autogenerated method: System.String.TrimHelper
::Il2CppString* System::String::TrimHelper(::Array<::Il2CppChar>* trimChars, int trimType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::TrimHelper");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TrimHelper", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(trimChars, trimType)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, trimChars, trimType);
}
// Autogenerated method: System.String.CreateTrimmedString
::Il2CppString* System::String::CreateTrimmedString(int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CreateTrimmedString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateTrimmedString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(start, end)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, start, end);
}
// Autogenerated method: System.String.Insert
::Il2CppString* System::String::Insert(int startIndex, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Insert");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(startIndex, value)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, startIndex, value);
}
// Autogenerated method: System.String.Replace
::Il2CppString* System::String::Replace(::Il2CppChar oldChar, ::Il2CppChar newChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Replace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(oldChar, newChar)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, oldChar, newChar);
}
// Autogenerated method: System.String.Replace
::Il2CppString* System::String::Replace(::Il2CppString* oldValue, ::Il2CppString* newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Replace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Replace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(oldValue, newValue)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, oldValue, newValue);
}
// Autogenerated method: System.String.Remove
::Il2CppString* System::String::Remove(int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Remove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(startIndex, count)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, startIndex, count);
}
// Autogenerated method: System.String.Remove
::Il2CppString* System::String::Remove(int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Remove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(startIndex)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, startIndex);
}
// Autogenerated method: System.String.Format
::Il2CppString* System::String::Format(::Il2CppString* format, ::Il2CppObject* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Format");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "Format", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, arg0)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, arg0);
}
// Autogenerated method: System.String.Format
::Il2CppString* System::String::Format(::Il2CppString* format, ::Il2CppObject* arg0, ::Il2CppObject* arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Format");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "Format", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, arg0, arg1)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, arg0, arg1);
}
// Autogenerated method: System.String.Format
::Il2CppString* System::String::Format(::Il2CppString* format, ::Il2CppObject* arg0, ::Il2CppObject* arg1, ::Il2CppObject* arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Format");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "Format", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, arg0, arg1, arg2)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, arg0, arg1, arg2);
}
// Autogenerated method: System.String.Format
::Il2CppString* System::String::Format(::Il2CppString* format, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Format");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "Format", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, args)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, format, args);
}
// Creating initializer_list -> params proxy for: System.String Format(System.String format, params System.Object[] args)
::Il2CppString* System::String::Format(::Il2CppString* format, std::initializer_list<::Il2CppObject*> args) {
  return System::String::Format(format, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: System.String.Format
::Il2CppString* System::String::Format(System::IFormatProvider* provider, ::Il2CppString* format, ::Il2CppObject* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Format");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "Format", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider, format, arg0)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, provider, format, arg0);
}
// Autogenerated method: System.String.Format
::Il2CppString* System::String::Format(System::IFormatProvider* provider, ::Il2CppString* format, ::Il2CppObject* arg0, ::Il2CppObject* arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Format");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "Format", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider, format, arg0, arg1)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, provider, format, arg0, arg1);
}
// Autogenerated method: System.String.Format
::Il2CppString* System::String::Format(System::IFormatProvider* provider, ::Il2CppString* format, ::Il2CppObject* arg0, ::Il2CppObject* arg1, ::Il2CppObject* arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Format");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "Format", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider, format, arg0, arg1, arg2)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, provider, format, arg0, arg1, arg2);
}
// Autogenerated method: System.String.Format
::Il2CppString* System::String::Format(System::IFormatProvider* provider, ::Il2CppString* format, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Format");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "Format", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider, format, args)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, provider, format, args);
}
// Creating initializer_list -> params proxy for: System.String Format(System.IFormatProvider provider, System.String format, params System.Object[] args)
::Il2CppString* System::String::Format(System::IFormatProvider* provider, ::Il2CppString* format, std::initializer_list<::Il2CppObject*> args) {
  return System::String::Format(provider, format, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: System.String.FormatHelper
::Il2CppString* System::String::FormatHelper(System::IFormatProvider* provider, ::Il2CppString* format, System::ParamsArray args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::FormatHelper");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "FormatHelper", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider, format, args)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, provider, format, args);
}
// Autogenerated method: System.String.Copy
::Il2CppString* System::String::Copy(::Il2CppString* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Copy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "Copy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.String.Concat
::Il2CppString* System::String::Concat(::Il2CppObject* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Concat");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "Concat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(arg0)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, arg0);
}
// Autogenerated method: System.String.Concat
::Il2CppString* System::String::Concat(::Il2CppObject* arg0, ::Il2CppObject* arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Concat");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "Concat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(arg0, arg1)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, arg0, arg1);
}
// Autogenerated method: System.String.Concat
::Il2CppString* System::String::Concat(::Il2CppObject* arg0, ::Il2CppObject* arg1, ::Il2CppObject* arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Concat");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "Concat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(arg0, arg1, arg2)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, arg0, arg1, arg2);
}
// Autogenerated method: System.String.Concat
::Il2CppString* System::String::Concat(::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Concat");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "Concat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(args)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, args);
}
// Creating initializer_list -> params proxy for: System.String Concat(params System.Object[] args)
::Il2CppString* System::String::Concat(std::initializer_list<::Il2CppObject*> args) {
  return System::String::Concat(::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: System.String.Concat
::Il2CppString* System::String::Concat(::Il2CppString* str0, ::Il2CppString* str1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Concat");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "Concat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str0, str1)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str0, str1);
}
// Autogenerated method: System.String.Concat
::Il2CppString* System::String::Concat(::Il2CppString* str0, ::Il2CppString* str1, ::Il2CppString* str2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Concat");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "Concat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str0, str1, str2)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str0, str1, str2);
}
// Autogenerated method: System.String.Concat
::Il2CppString* System::String::Concat(::Il2CppString* str0, ::Il2CppString* str1, ::Il2CppString* str2, ::Il2CppString* str3) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Concat");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "Concat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str0, str1, str2, str3)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str0, str1, str2, str3);
}
// Autogenerated method: System.String.ConcatArray
::Il2CppString* System::String::ConcatArray(::Array<::Il2CppString*>* values, int totalLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::ConcatArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "ConcatArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(values, totalLength)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, values, totalLength);
}
// Autogenerated method: System.String.Concat
::Il2CppString* System::String::Concat(::Array<::Il2CppString*>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Concat");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "Concat", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(values)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, values);
}
// Creating initializer_list -> params proxy for: System.String Concat(params System.String[] values)
::Il2CppString* System::String::Concat(std::initializer_list<::Il2CppString*> values) {
  return System::String::Concat(::Array<::Il2CppString*>::New(values));
}
// Autogenerated method: System.String.IsInterned
::Il2CppString* System::String::IsInterned(::Il2CppString* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IsInterned");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "IsInterned", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.String.get_Length
int System::String::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::get_Length");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.String.CompareOrdinalUnchecked
int System::String::CompareOrdinalUnchecked(::Il2CppString* strA, int indexA, int lenA, ::Il2CppString* strB, int indexB, int lenB) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CompareOrdinalUnchecked");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "CompareOrdinalUnchecked", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(strA, indexA, lenA, strB, indexB, lenB)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, strA, indexA, lenA, strB, indexB, lenB);
}
// Autogenerated method: System.String.IndexOf
int System::String::IndexOf(::Il2CppChar value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IndexOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, startIndex, count)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value, startIndex, count);
}
// Autogenerated method: System.String.IndexOfUnchecked
int System::String::IndexOfUnchecked(::Il2CppChar value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IndexOfUnchecked");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IndexOfUnchecked", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, startIndex, count)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value, startIndex, count);
}
// Autogenerated method: System.String.IndexOfUnchecked
int System::String::IndexOfUnchecked(::Il2CppString* value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IndexOfUnchecked");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IndexOfUnchecked", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, startIndex, count)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value, startIndex, count);
}
// Autogenerated method: System.String.IndexOfAny
int System::String::IndexOfAny(::Array<::Il2CppChar>* anyOf, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IndexOfAny");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IndexOfAny", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(anyOf, startIndex, count)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, anyOf, startIndex, count);
}
// Autogenerated method: System.String.IndexOfAnyUnchecked
int System::String::IndexOfAnyUnchecked(::Array<::Il2CppChar>* anyOf, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IndexOfAnyUnchecked");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IndexOfAnyUnchecked", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(anyOf, startIndex, count)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, anyOf, startIndex, count);
}
// Autogenerated method: System.String.LastIndexOf
int System::String::LastIndexOf(::Il2CppChar value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::LastIndexOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, startIndex, count)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value, startIndex, count);
}
// Autogenerated method: System.String.LastIndexOfUnchecked
int System::String::LastIndexOfUnchecked(::Il2CppChar value, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::LastIndexOfUnchecked");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LastIndexOfUnchecked", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, startIndex, count)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value, startIndex, count);
}
// Autogenerated method: System.String.LastIndexOfAny
int System::String::LastIndexOfAny(::Array<::Il2CppChar>* anyOf, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::LastIndexOfAny");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LastIndexOfAny", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(anyOf, startIndex, count)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, anyOf, startIndex, count);
}
// Autogenerated method: System.String.LastIndexOfAnyUnchecked
int System::String::LastIndexOfAnyUnchecked(::Array<::Il2CppChar>* anyOf, int startIndex, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::LastIndexOfAnyUnchecked");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LastIndexOfAnyUnchecked", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(anyOf, startIndex, count)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, anyOf, startIndex, count);
}
// Autogenerated method: System.String.nativeCompareOrdinalEx
int System::String::nativeCompareOrdinalEx(::Il2CppString* strA, int indexA, ::Il2CppString* strB, int indexB, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::nativeCompareOrdinalEx");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "nativeCompareOrdinalEx", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(strA, indexA, strB, indexB, count)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, strA, indexA, strB, indexB, count);
}
// Autogenerated method: System.String.ReplaceInternal
::Il2CppString* System::String::ReplaceInternal(::Il2CppChar oldChar, ::Il2CppChar newChar) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::ReplaceInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReplaceInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(oldChar, newChar)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, oldChar, newChar);
}
// Autogenerated method: System.String.ReplaceInternal
::Il2CppString* System::String::ReplaceInternal(::Il2CppString* oldValue, ::Il2CppString* newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::ReplaceInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReplaceInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(oldValue, newValue)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, oldValue, newValue);
}
// Autogenerated method: System.String.ReplaceUnchecked
::Il2CppString* System::String::ReplaceUnchecked(::Il2CppString* oldValue, ::Il2CppString* newValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::ReplaceUnchecked");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReplaceUnchecked", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(oldValue, newValue)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, oldValue, newValue);
}
// Autogenerated method: System.String.ReplaceFallback
::Il2CppString* System::String::ReplaceFallback(::Il2CppString* oldValue, ::Il2CppString* newValue, int testedCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::ReplaceFallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReplaceFallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(oldValue, newValue, testedCount)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, oldValue, newValue, testedCount);
}
// Autogenerated method: System.String.PadHelper
::Il2CppString* System::String::PadHelper(int totalWidth, ::Il2CppChar paddingChar, bool isRightPadded) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::PadHelper");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PadHelper", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(totalWidth, paddingChar, isRightPadded)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, totalWidth, paddingChar, isRightPadded);
}
// Autogenerated method: System.String.StartsWithOrdinalUnchecked
bool System::String::StartsWithOrdinalUnchecked(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::StartsWithOrdinalUnchecked");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartsWithOrdinalUnchecked", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.IsAscii
bool System::String::IsAscii() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::IsAscii");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsAscii", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.String.InternalIsInterned
::Il2CppString* System::String::InternalIsInterned(::Il2CppString* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::InternalIsInterned");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "InternalIsInterned", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.String.CharCopy
void System::String::CharCopy(::Il2CppChar* dest, ::Il2CppChar* src, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CharCopy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "CharCopy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dest, src, count)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dest, src, count);
}
// Autogenerated method: System.String.memset
void System::String::memset(uint8_t* dest, int val, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::memset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "memset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dest, val, len)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dest, val, len);
}
// Autogenerated method: System.String.memcpy
void System::String::memcpy(uint8_t* dest, uint8_t* src, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::memcpy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "memcpy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dest, src, size)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dest, src, size);
}
// Autogenerated method: System.String.bzero
void System::String::bzero_(uint8_t* dest, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::bzero");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "bzero", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dest, len)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dest, len);
}
// Autogenerated method: System.String.bzero_aligned_1
void System::String::bzero_aligned_1(uint8_t* dest, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::bzero_aligned_1");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "bzero_aligned_1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dest, len)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dest, len);
}
// Autogenerated method: System.String.bzero_aligned_2
void System::String::bzero_aligned_2(uint8_t* dest, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::bzero_aligned_2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "bzero_aligned_2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dest, len)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dest, len);
}
// Autogenerated method: System.String.bzero_aligned_4
void System::String::bzero_aligned_4(uint8_t* dest, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::bzero_aligned_4");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "bzero_aligned_4", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dest, len)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dest, len);
}
// Autogenerated method: System.String.bzero_aligned_8
void System::String::bzero_aligned_8(uint8_t* dest, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::bzero_aligned_8");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "bzero_aligned_8", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dest, len)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dest, len);
}
// Autogenerated method: System.String.memcpy_aligned_1
void System::String::memcpy_aligned_1(uint8_t* dest, uint8_t* src, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::memcpy_aligned_1");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "memcpy_aligned_1", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dest, src, size)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dest, src, size);
}
// Autogenerated method: System.String.memcpy_aligned_2
void System::String::memcpy_aligned_2(uint8_t* dest, uint8_t* src, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::memcpy_aligned_2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "memcpy_aligned_2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dest, src, size)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dest, src, size);
}
// Autogenerated method: System.String.memcpy_aligned_4
void System::String::memcpy_aligned_4(uint8_t* dest, uint8_t* src, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::memcpy_aligned_4");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "memcpy_aligned_4", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dest, src, size)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dest, src, size);
}
// Autogenerated method: System.String.memcpy_aligned_8
void System::String::memcpy_aligned_8(uint8_t* dest, uint8_t* src, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::memcpy_aligned_8");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "memcpy_aligned_8", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dest, src, size)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dest, src, size);
}
// Autogenerated method: System.String.CreateString
::Il2CppString* System::String::CreateString(int8_t* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CreateString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.CreateString
::Il2CppString* System::String::CreateString(int8_t* value, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CreateString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, startIndex, length)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, value, startIndex, length);
}
// Autogenerated method: System.String.CreateString
::Il2CppString* System::String::CreateString(::Il2CppChar* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CreateString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.CreateString
::Il2CppString* System::String::CreateString(::Il2CppChar* value, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CreateString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, startIndex, length)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, value, startIndex, length);
}
// Autogenerated method: System.String.CreateString
::Il2CppString* System::String::CreateString(::Array<::Il2CppChar>* val, int startIndex, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CreateString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(val, startIndex, length)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, val, startIndex, length);
}
// Autogenerated method: System.String.CreateString
::Il2CppString* System::String::CreateString(::Array<::Il2CppChar>* val) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CreateString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(val)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, val);
}
// Autogenerated method: System.String.CreateString
::Il2CppString* System::String::CreateString(::Il2CppChar c, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CreateString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c, count)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, c, count);
}
// Autogenerated method: System.String.CreateString
::Il2CppString* System::String::CreateString(int8_t* value, int startIndex, int length, System::Text::Encoding* enc) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CreateString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, startIndex, length, enc)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, value, startIndex, length, enc);
}
// Autogenerated method: System.String.Equals
bool System::String::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.String.Equals
bool System::String::Equals(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.String.GetHashCode
int System::String::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.String.CompareTo
int System::String::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CompareTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CompareTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value);
}
int System::String::System_IComparable_CompareTo(::Il2CppObject* value) {
  return System::String::CompareTo(value);
}
// Autogenerated method: System.String.CompareTo
int System::String::CompareTo(::Il2CppString* strB) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::CompareTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CompareTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(strB)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, strB);
}
// Autogenerated method: System.String.ToString
::Il2CppString* System::String::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.String.ToString
::Il2CppString* System::String::ToString(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.Clone
::Il2CppObject* System::String::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::Clone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* System::String::System_ICloneable_Clone() {
  return System::String::Clone();
}
// Autogenerated method: System.String.GetTypeCode
System::TypeCode System::String::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::GetTypeCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTypeCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::TypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.String.System.IConvertible.ToBoolean
bool System::String::System_IConvertible_ToBoolean(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::System.IConvertible.ToBoolean");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IConvertible.ToBoolean", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToChar
::Il2CppChar System::String::System_IConvertible_ToChar(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::System.IConvertible.ToChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IConvertible.ToChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToSByte
int8_t System::String::System_IConvertible_ToSByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::System.IConvertible.ToSByte");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IConvertible.ToSByte", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToByte
uint8_t System::String::System_IConvertible_ToByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::System.IConvertible.ToByte");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IConvertible.ToByte", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToInt16
int16_t System::String::System_IConvertible_ToInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::System.IConvertible.ToInt16");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IConvertible.ToInt16", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToUInt16
uint16_t System::String::System_IConvertible_ToUInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::System.IConvertible.ToUInt16");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IConvertible.ToUInt16", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToInt32
int System::String::System_IConvertible_ToInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::System.IConvertible.ToInt32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IConvertible.ToInt32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToUInt32
uint System::String::System_IConvertible_ToUInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::System.IConvertible.ToUInt32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IConvertible.ToUInt32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToInt64
int64_t System::String::System_IConvertible_ToInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::System.IConvertible.ToInt64");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IConvertible.ToInt64", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToUInt64
uint64_t System::String::System_IConvertible_ToUInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::System.IConvertible.ToUInt64");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IConvertible.ToUInt64", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToSingle
float System::String::System_IConvertible_ToSingle(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::System.IConvertible.ToSingle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IConvertible.ToSingle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToDouble
double System::String::System_IConvertible_ToDouble(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::System.IConvertible.ToDouble");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IConvertible.ToDouble", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToDecimal
System::Decimal System::String::System_IConvertible_ToDecimal(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::System.IConvertible.ToDecimal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IConvertible.ToDecimal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<System::Decimal, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToDateTime
System::DateTime System::String::System_IConvertible_ToDateTime(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::System.IConvertible.ToDateTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IConvertible.ToDateTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method, provider);
}
// Autogenerated method: System.String.System.IConvertible.ToType
::Il2CppObject* System::String::System_IConvertible_ToType(System::Type* type, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::System.IConvertible.ToType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IConvertible.ToType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, provider)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, type, provider);
}
// Autogenerated method: System.String.System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator
System::Collections::Generic::IEnumerator_1<::Il2CppChar>* System::String::System_Collections_Generic_IEnumerable_1_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<::Il2CppChar>*, false>(this, ___internal__method);
}
// Autogenerated method: System.String.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* System::String::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::System.Collections.IEnumerable.GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.String.op_Equality
bool System::operator ==(::Il2CppString* a, ::Il2CppString& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::op_Equality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "op_Equality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, &b)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, &b);
}
// Autogenerated method: System.String.op_Inequality
bool System::operator !=(::Il2CppString* a, ::Il2CppString& b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::String::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "String", "op_Inequality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, &b)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, &b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.StringSplitOptions
#include "System/StringSplitOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.StringSplitOptions None
System::StringSplitOptions System::StringSplitOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringSplitOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::StringSplitOptions>("System", "StringSplitOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.StringSplitOptions None
void System::StringSplitOptions::_set_None(System::StringSplitOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringSplitOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "StringSplitOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.StringSplitOptions RemoveEmptyEntries
System::StringSplitOptions System::StringSplitOptions::_get_RemoveEmptyEntries() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringSplitOptions::_get_RemoveEmptyEntries");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::StringSplitOptions>("System", "StringSplitOptions", "RemoveEmptyEntries"));
}
// Autogenerated static field setter
// Set static field: static public System.StringSplitOptions RemoveEmptyEntries
void System::StringSplitOptions::_set_RemoveEmptyEntries(System::StringSplitOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringSplitOptions::_set_RemoveEmptyEntries");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "StringSplitOptions", "RemoveEmptyEntries", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.StringComparer
#include "System/StringComparer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.StringComparer _invariantCulture
System::StringComparer* System::StringComparer::_get__invariantCulture() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::_get__invariantCulture");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::StringComparer*>("System", "StringComparer", "_invariantCulture"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.StringComparer _invariantCulture
void System::StringComparer::_set__invariantCulture(System::StringComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::_set__invariantCulture");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "StringComparer", "_invariantCulture", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.StringComparer _invariantCultureIgnoreCase
System::StringComparer* System::StringComparer::_get__invariantCultureIgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::_get__invariantCultureIgnoreCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::StringComparer*>("System", "StringComparer", "_invariantCultureIgnoreCase"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.StringComparer _invariantCultureIgnoreCase
void System::StringComparer::_set__invariantCultureIgnoreCase(System::StringComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::_set__invariantCultureIgnoreCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "StringComparer", "_invariantCultureIgnoreCase", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.StringComparer _ordinal
System::StringComparer* System::StringComparer::_get__ordinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::_get__ordinal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::StringComparer*>("System", "StringComparer", "_ordinal"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.StringComparer _ordinal
void System::StringComparer::_set__ordinal(System::StringComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::_set__ordinal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "StringComparer", "_ordinal", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.StringComparer _ordinalIgnoreCase
System::StringComparer* System::StringComparer::_get__ordinalIgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::_get__ordinalIgnoreCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::StringComparer*>("System", "StringComparer", "_ordinalIgnoreCase"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.StringComparer _ordinalIgnoreCase
void System::StringComparer::_set__ordinalIgnoreCase(System::StringComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::_set__ordinalIgnoreCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "StringComparer", "_ordinalIgnoreCase", value));
}
// Autogenerated method: System.StringComparer.get_InvariantCultureIgnoreCase
System::StringComparer* System::StringComparer::get_InvariantCultureIgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::get_InvariantCultureIgnoreCase");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "StringComparer", "get_InvariantCultureIgnoreCase", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::StringComparer*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.StringComparer.get_CurrentCultureIgnoreCase
System::StringComparer* System::StringComparer::get_CurrentCultureIgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::get_CurrentCultureIgnoreCase");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "StringComparer", "get_CurrentCultureIgnoreCase", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::StringComparer*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.StringComparer.get_Ordinal
System::StringComparer* System::StringComparer::get_Ordinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::get_Ordinal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "StringComparer", "get_Ordinal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::StringComparer*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.StringComparer.get_OrdinalIgnoreCase
System::StringComparer* System::StringComparer::get_OrdinalIgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::get_OrdinalIgnoreCase");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "StringComparer", "get_OrdinalIgnoreCase", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::StringComparer*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.StringComparer..cctor
void System::StringComparer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "StringComparer", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.StringComparer.Compare
int System::StringComparer::Compare(::Il2CppObject* x, ::Il2CppObject* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::Compare");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y);
}
int System::StringComparer::System_Collections_IComparer_Compare(::Il2CppObject* x, ::Il2CppObject* y) {
  return System::StringComparer::Compare(x, y);
}
// Autogenerated method: System.StringComparer.Equals
bool System::StringComparer::Equals(::Il2CppObject* x, ::Il2CppObject* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y);
}
bool System::StringComparer::System_Collections_IEqualityComparer_Equals(::Il2CppObject* x, ::Il2CppObject* y) {
  return System::StringComparer::Equals(x, y);
}
// Autogenerated method: System.StringComparer.GetHashCode
int System::StringComparer::GetHashCode(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, obj);
}
int System::StringComparer::System_Collections_IEqualityComparer_GetHashCode(::Il2CppObject* obj) {
  return System::StringComparer::GetHashCode(obj);
}
// Autogenerated method: System.StringComparer.Compare
int System::StringComparer::Compare(::Il2CppString* x, ::Il2CppString* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::Compare");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.StringComparer.Equals
bool System::StringComparer::Equals(::Il2CppString* x, ::Il2CppString* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.StringComparer.GetHashCode
int System::StringComparer::GetHashCode(::Il2CppString* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::StringComparer::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.CultureAwareComparer
#include "System/CultureAwareComparer.hpp"
// Including type: System.Globalization.CompareInfo
#include "System/Globalization/CompareInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.CultureAwareComparer.Compare
int System::CultureAwareComparer::Compare(::Il2CppString* x, ::Il2CppString* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::CultureAwareComparer::Compare");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.CultureAwareComparer.Equals
bool System::CultureAwareComparer::Equals(::Il2CppString* x, ::Il2CppString* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::CultureAwareComparer::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.CultureAwareComparer.GetHashCode
int System::CultureAwareComparer::GetHashCode(::Il2CppString* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::CultureAwareComparer::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.CultureAwareComparer.Equals
bool System::CultureAwareComparer::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::CultureAwareComparer::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.CultureAwareComparer.GetHashCode
int System::CultureAwareComparer::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::CultureAwareComparer::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.OrdinalComparer
#include "System/OrdinalComparer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.OrdinalComparer.Compare
int System::OrdinalComparer::Compare(::Il2CppString* x, ::Il2CppString* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::OrdinalComparer::Compare");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.OrdinalComparer.Equals
bool System::OrdinalComparer::Equals(::Il2CppString* x, ::Il2CppString* y) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::OrdinalComparer::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x, y)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, x, y);
}
// Autogenerated method: System.OrdinalComparer.GetHashCode
int System::OrdinalComparer::GetHashCode(::Il2CppString* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::OrdinalComparer::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.OrdinalComparer.Equals
bool System::OrdinalComparer::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::OrdinalComparer::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.OrdinalComparer.GetHashCode
int System::OrdinalComparer::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::OrdinalComparer::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.SystemException
#include "System/SystemException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.STAThreadAttribute
#include "System/STAThreadAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ThreadStaticAttribute
#include "System/ThreadStaticAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ExceptionArgument
#include "System/ExceptionArgument.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument obj
System::ExceptionArgument System::ExceptionArgument::_get_obj() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_obj");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "obj"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument obj
void System::ExceptionArgument::_set_obj(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_obj");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "obj", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument dictionary
System::ExceptionArgument System::ExceptionArgument::_get_dictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_dictionary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "dictionary"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument dictionary
void System::ExceptionArgument::_set_dictionary(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_dictionary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "dictionary", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument dictionaryCreationThreshold
System::ExceptionArgument System::ExceptionArgument::_get_dictionaryCreationThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_dictionaryCreationThreshold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "dictionaryCreationThreshold"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument dictionaryCreationThreshold
void System::ExceptionArgument::_set_dictionaryCreationThreshold(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_dictionaryCreationThreshold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "dictionaryCreationThreshold", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument array
System::ExceptionArgument System::ExceptionArgument::_get_array() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "array"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument array
void System::ExceptionArgument::_set_array(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "array", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument info
System::ExceptionArgument System::ExceptionArgument::_get_info() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_info");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "info"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument info
void System::ExceptionArgument::_set_info(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_info");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "info", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument key
System::ExceptionArgument System::ExceptionArgument::_get_key() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_key");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "key"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument key
void System::ExceptionArgument::_set_key(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_key");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "key", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument collection
System::ExceptionArgument System::ExceptionArgument::_get_collection() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_collection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "collection"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument collection
void System::ExceptionArgument::_set_collection(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_collection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "collection", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument list
System::ExceptionArgument System::ExceptionArgument::_get_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_list");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "list"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument list
void System::ExceptionArgument::_set_list(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_list");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "list", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument match
System::ExceptionArgument System::ExceptionArgument::_get_match() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_match");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "match"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument match
void System::ExceptionArgument::_set_match(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_match");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "match", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument converter
System::ExceptionArgument System::ExceptionArgument::_get_converter() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_converter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "converter"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument converter
void System::ExceptionArgument::_set_converter(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_converter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "converter", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument queue
System::ExceptionArgument System::ExceptionArgument::_get_queue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_queue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "queue"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument queue
void System::ExceptionArgument::_set_queue(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_queue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "queue", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument stack
System::ExceptionArgument System::ExceptionArgument::_get_stack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_stack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "stack"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument stack
void System::ExceptionArgument::_set_stack(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_stack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "stack", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument capacity
System::ExceptionArgument System::ExceptionArgument::_get_capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_capacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "capacity"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument capacity
void System::ExceptionArgument::_set_capacity(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_capacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "capacity", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument index
System::ExceptionArgument System::ExceptionArgument::_get_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_index");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "index"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument index
void System::ExceptionArgument::_set_index(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_index");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "index", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument startIndex
System::ExceptionArgument System::ExceptionArgument::_get_startIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_startIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "startIndex"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument startIndex
void System::ExceptionArgument::_set_startIndex(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_startIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "startIndex", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument value
System::ExceptionArgument System::ExceptionArgument::_get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_value");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "value"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument value
void System::ExceptionArgument::_set_value(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_value");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "value", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument count
System::ExceptionArgument System::ExceptionArgument::_get_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "count"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument count
void System::ExceptionArgument::_set_count(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "count", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument arrayIndex
System::ExceptionArgument System::ExceptionArgument::_get_arrayIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_arrayIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "arrayIndex"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument arrayIndex
void System::ExceptionArgument::_set_arrayIndex(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_arrayIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "arrayIndex", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument name
System::ExceptionArgument System::ExceptionArgument::_get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "name"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument name
void System::ExceptionArgument::_set_name(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "name", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument mode
System::ExceptionArgument System::ExceptionArgument::_get_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_mode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "mode"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument mode
void System::ExceptionArgument::_set_mode(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_mode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "mode", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument item
System::ExceptionArgument System::ExceptionArgument::_get_item() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_item");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "item"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument item
void System::ExceptionArgument::_set_item(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_item");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "item", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument options
System::ExceptionArgument System::ExceptionArgument::_get_options() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_options");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "options"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument options
void System::ExceptionArgument::_set_options(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_options");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "options", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument view
System::ExceptionArgument System::ExceptionArgument::_get_view() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_view");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "view"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument view
void System::ExceptionArgument::_set_view(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_view");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "view", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument sourceBytesToCopy
System::ExceptionArgument System::ExceptionArgument::_get_sourceBytesToCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_sourceBytesToCopy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "sourceBytesToCopy"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument sourceBytesToCopy
void System::ExceptionArgument::_set_sourceBytesToCopy(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_sourceBytesToCopy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "sourceBytesToCopy", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument start
System::ExceptionArgument System::ExceptionArgument::_get_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "start"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument start
void System::ExceptionArgument::_set_start(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "start", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument pointer
System::ExceptionArgument System::ExceptionArgument::_get_pointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_pointer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "pointer"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument pointer
void System::ExceptionArgument::_set_pointer(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_pointer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "pointer", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument ownedMemory
System::ExceptionArgument System::ExceptionArgument::_get_ownedMemory() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_ownedMemory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "ownedMemory"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument ownedMemory
void System::ExceptionArgument::_set_ownedMemory(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_ownedMemory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "ownedMemory", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionArgument text
System::ExceptionArgument System::ExceptionArgument::_get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_get_text");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionArgument>("System", "ExceptionArgument", "text"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionArgument text
void System::ExceptionArgument::_set_text(System::ExceptionArgument value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionArgument::_set_text");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionArgument", "text", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ExceptionResource
#include "System/ExceptionResource.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Argument_ImplementIComparable
System::ExceptionResource System::ExceptionResource::_get_Argument_ImplementIComparable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Argument_ImplementIComparable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Argument_ImplementIComparable"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Argument_ImplementIComparable
void System::ExceptionResource::_set_Argument_ImplementIComparable(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Argument_ImplementIComparable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Argument_ImplementIComparable", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Argument_InvalidType
System::ExceptionResource System::ExceptionResource::_get_Argument_InvalidType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Argument_InvalidType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Argument_InvalidType"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Argument_InvalidType
void System::ExceptionResource::_set_Argument_InvalidType(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Argument_InvalidType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Argument_InvalidType", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Argument_InvalidArgumentForComparison
System::ExceptionResource System::ExceptionResource::_get_Argument_InvalidArgumentForComparison() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Argument_InvalidArgumentForComparison");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Argument_InvalidArgumentForComparison"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Argument_InvalidArgumentForComparison
void System::ExceptionResource::_set_Argument_InvalidArgumentForComparison(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Argument_InvalidArgumentForComparison");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Argument_InvalidArgumentForComparison", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Argument_InvalidRegistryKeyPermissionCheck
System::ExceptionResource System::ExceptionResource::_get_Argument_InvalidRegistryKeyPermissionCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Argument_InvalidRegistryKeyPermissionCheck");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Argument_InvalidRegistryKeyPermissionCheck"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Argument_InvalidRegistryKeyPermissionCheck
void System::ExceptionResource::_set_Argument_InvalidRegistryKeyPermissionCheck(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Argument_InvalidRegistryKeyPermissionCheck");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Argument_InvalidRegistryKeyPermissionCheck", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource ArgumentOutOfRange_NeedNonNegNum
System::ExceptionResource System::ExceptionResource::_get_ArgumentOutOfRange_NeedNonNegNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_ArgumentOutOfRange_NeedNonNegNum");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "ArgumentOutOfRange_NeedNonNegNum"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource ArgumentOutOfRange_NeedNonNegNum
void System::ExceptionResource::_set_ArgumentOutOfRange_NeedNonNegNum(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_ArgumentOutOfRange_NeedNonNegNum");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "ArgumentOutOfRange_NeedNonNegNum", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Arg_ArrayPlusOffTooSmall
System::ExceptionResource System::ExceptionResource::_get_Arg_ArrayPlusOffTooSmall() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Arg_ArrayPlusOffTooSmall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Arg_ArrayPlusOffTooSmall"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Arg_ArrayPlusOffTooSmall
void System::ExceptionResource::_set_Arg_ArrayPlusOffTooSmall(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Arg_ArrayPlusOffTooSmall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Arg_ArrayPlusOffTooSmall", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Arg_NonZeroLowerBound
System::ExceptionResource System::ExceptionResource::_get_Arg_NonZeroLowerBound() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Arg_NonZeroLowerBound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Arg_NonZeroLowerBound"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Arg_NonZeroLowerBound
void System::ExceptionResource::_set_Arg_NonZeroLowerBound(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Arg_NonZeroLowerBound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Arg_NonZeroLowerBound", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Arg_RankMultiDimNotSupported
System::ExceptionResource System::ExceptionResource::_get_Arg_RankMultiDimNotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Arg_RankMultiDimNotSupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Arg_RankMultiDimNotSupported"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Arg_RankMultiDimNotSupported
void System::ExceptionResource::_set_Arg_RankMultiDimNotSupported(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Arg_RankMultiDimNotSupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Arg_RankMultiDimNotSupported", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Arg_RegKeyDelHive
System::ExceptionResource System::ExceptionResource::_get_Arg_RegKeyDelHive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Arg_RegKeyDelHive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Arg_RegKeyDelHive"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Arg_RegKeyDelHive
void System::ExceptionResource::_set_Arg_RegKeyDelHive(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Arg_RegKeyDelHive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Arg_RegKeyDelHive", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Arg_RegKeyStrLenBug
System::ExceptionResource System::ExceptionResource::_get_Arg_RegKeyStrLenBug() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Arg_RegKeyStrLenBug");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Arg_RegKeyStrLenBug"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Arg_RegKeyStrLenBug
void System::ExceptionResource::_set_Arg_RegKeyStrLenBug(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Arg_RegKeyStrLenBug");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Arg_RegKeyStrLenBug", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Arg_RegSetStrArrNull
System::ExceptionResource System::ExceptionResource::_get_Arg_RegSetStrArrNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Arg_RegSetStrArrNull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Arg_RegSetStrArrNull"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Arg_RegSetStrArrNull
void System::ExceptionResource::_set_Arg_RegSetStrArrNull(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Arg_RegSetStrArrNull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Arg_RegSetStrArrNull", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Arg_RegSetMismatchedKind
System::ExceptionResource System::ExceptionResource::_get_Arg_RegSetMismatchedKind() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Arg_RegSetMismatchedKind");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Arg_RegSetMismatchedKind"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Arg_RegSetMismatchedKind
void System::ExceptionResource::_set_Arg_RegSetMismatchedKind(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Arg_RegSetMismatchedKind");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Arg_RegSetMismatchedKind", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Arg_RegSubKeyAbsent
System::ExceptionResource System::ExceptionResource::_get_Arg_RegSubKeyAbsent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Arg_RegSubKeyAbsent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Arg_RegSubKeyAbsent"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Arg_RegSubKeyAbsent
void System::ExceptionResource::_set_Arg_RegSubKeyAbsent(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Arg_RegSubKeyAbsent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Arg_RegSubKeyAbsent", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Arg_RegSubKeyValueAbsent
System::ExceptionResource System::ExceptionResource::_get_Arg_RegSubKeyValueAbsent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Arg_RegSubKeyValueAbsent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Arg_RegSubKeyValueAbsent"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Arg_RegSubKeyValueAbsent
void System::ExceptionResource::_set_Arg_RegSubKeyValueAbsent(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Arg_RegSubKeyValueAbsent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Arg_RegSubKeyValueAbsent", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Argument_AddingDuplicate
System::ExceptionResource System::ExceptionResource::_get_Argument_AddingDuplicate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Argument_AddingDuplicate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Argument_AddingDuplicate"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Argument_AddingDuplicate
void System::ExceptionResource::_set_Argument_AddingDuplicate(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Argument_AddingDuplicate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Argument_AddingDuplicate", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Serialization_InvalidOnDeser
System::ExceptionResource System::ExceptionResource::_get_Serialization_InvalidOnDeser() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Serialization_InvalidOnDeser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Serialization_InvalidOnDeser"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Serialization_InvalidOnDeser
void System::ExceptionResource::_set_Serialization_InvalidOnDeser(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Serialization_InvalidOnDeser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Serialization_InvalidOnDeser", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Serialization_MissingKeys
System::ExceptionResource System::ExceptionResource::_get_Serialization_MissingKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Serialization_MissingKeys");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Serialization_MissingKeys"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Serialization_MissingKeys
void System::ExceptionResource::_set_Serialization_MissingKeys(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Serialization_MissingKeys");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Serialization_MissingKeys", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Serialization_NullKey
System::ExceptionResource System::ExceptionResource::_get_Serialization_NullKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Serialization_NullKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Serialization_NullKey"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Serialization_NullKey
void System::ExceptionResource::_set_Serialization_NullKey(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Serialization_NullKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Serialization_NullKey", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Argument_InvalidArrayType
System::ExceptionResource System::ExceptionResource::_get_Argument_InvalidArrayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Argument_InvalidArrayType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Argument_InvalidArrayType"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Argument_InvalidArrayType
void System::ExceptionResource::_set_Argument_InvalidArrayType(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Argument_InvalidArrayType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Argument_InvalidArrayType", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource NotSupported_KeyCollectionSet
System::ExceptionResource System::ExceptionResource::_get_NotSupported_KeyCollectionSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_NotSupported_KeyCollectionSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "NotSupported_KeyCollectionSet"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource NotSupported_KeyCollectionSet
void System::ExceptionResource::_set_NotSupported_KeyCollectionSet(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_NotSupported_KeyCollectionSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "NotSupported_KeyCollectionSet", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource NotSupported_ValueCollectionSet
System::ExceptionResource System::ExceptionResource::_get_NotSupported_ValueCollectionSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_NotSupported_ValueCollectionSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "NotSupported_ValueCollectionSet"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource NotSupported_ValueCollectionSet
void System::ExceptionResource::_set_NotSupported_ValueCollectionSet(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_NotSupported_ValueCollectionSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "NotSupported_ValueCollectionSet", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource ArgumentOutOfRange_SmallCapacity
System::ExceptionResource System::ExceptionResource::_get_ArgumentOutOfRange_SmallCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_ArgumentOutOfRange_SmallCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "ArgumentOutOfRange_SmallCapacity"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource ArgumentOutOfRange_SmallCapacity
void System::ExceptionResource::_set_ArgumentOutOfRange_SmallCapacity(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_ArgumentOutOfRange_SmallCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "ArgumentOutOfRange_SmallCapacity", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource ArgumentOutOfRange_Index
System::ExceptionResource System::ExceptionResource::_get_ArgumentOutOfRange_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_ArgumentOutOfRange_Index");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "ArgumentOutOfRange_Index"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource ArgumentOutOfRange_Index
void System::ExceptionResource::_set_ArgumentOutOfRange_Index(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_ArgumentOutOfRange_Index");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "ArgumentOutOfRange_Index", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Argument_InvalidOffLen
System::ExceptionResource System::ExceptionResource::_get_Argument_InvalidOffLen() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Argument_InvalidOffLen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Argument_InvalidOffLen"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Argument_InvalidOffLen
void System::ExceptionResource::_set_Argument_InvalidOffLen(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Argument_InvalidOffLen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Argument_InvalidOffLen", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Argument_ItemNotExist
System::ExceptionResource System::ExceptionResource::_get_Argument_ItemNotExist() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Argument_ItemNotExist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Argument_ItemNotExist"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Argument_ItemNotExist
void System::ExceptionResource::_set_Argument_ItemNotExist(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Argument_ItemNotExist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Argument_ItemNotExist", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource ArgumentOutOfRange_Count
System::ExceptionResource System::ExceptionResource::_get_ArgumentOutOfRange_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_ArgumentOutOfRange_Count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "ArgumentOutOfRange_Count"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource ArgumentOutOfRange_Count
void System::ExceptionResource::_set_ArgumentOutOfRange_Count(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_ArgumentOutOfRange_Count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "ArgumentOutOfRange_Count", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource ArgumentOutOfRange_InvalidThreshold
System::ExceptionResource System::ExceptionResource::_get_ArgumentOutOfRange_InvalidThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_ArgumentOutOfRange_InvalidThreshold");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "ArgumentOutOfRange_InvalidThreshold"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource ArgumentOutOfRange_InvalidThreshold
void System::ExceptionResource::_set_ArgumentOutOfRange_InvalidThreshold(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_ArgumentOutOfRange_InvalidThreshold");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "ArgumentOutOfRange_InvalidThreshold", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource ArgumentOutOfRange_ListInsert
System::ExceptionResource System::ExceptionResource::_get_ArgumentOutOfRange_ListInsert() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_ArgumentOutOfRange_ListInsert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "ArgumentOutOfRange_ListInsert"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource ArgumentOutOfRange_ListInsert
void System::ExceptionResource::_set_ArgumentOutOfRange_ListInsert(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_ArgumentOutOfRange_ListInsert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "ArgumentOutOfRange_ListInsert", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource NotSupported_ReadOnlyCollection
System::ExceptionResource System::ExceptionResource::_get_NotSupported_ReadOnlyCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_NotSupported_ReadOnlyCollection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "NotSupported_ReadOnlyCollection"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource NotSupported_ReadOnlyCollection
void System::ExceptionResource::_set_NotSupported_ReadOnlyCollection(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_NotSupported_ReadOnlyCollection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "NotSupported_ReadOnlyCollection", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource InvalidOperation_CannotRemoveFromStackOrQueue
System::ExceptionResource System::ExceptionResource::_get_InvalidOperation_CannotRemoveFromStackOrQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_InvalidOperation_CannotRemoveFromStackOrQueue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "InvalidOperation_CannotRemoveFromStackOrQueue"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource InvalidOperation_CannotRemoveFromStackOrQueue
void System::ExceptionResource::_set_InvalidOperation_CannotRemoveFromStackOrQueue(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_InvalidOperation_CannotRemoveFromStackOrQueue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "InvalidOperation_CannotRemoveFromStackOrQueue", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource InvalidOperation_EmptyQueue
System::ExceptionResource System::ExceptionResource::_get_InvalidOperation_EmptyQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_InvalidOperation_EmptyQueue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "InvalidOperation_EmptyQueue"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource InvalidOperation_EmptyQueue
void System::ExceptionResource::_set_InvalidOperation_EmptyQueue(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_InvalidOperation_EmptyQueue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "InvalidOperation_EmptyQueue", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource InvalidOperation_EnumOpCantHappen
System::ExceptionResource System::ExceptionResource::_get_InvalidOperation_EnumOpCantHappen() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_InvalidOperation_EnumOpCantHappen");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "InvalidOperation_EnumOpCantHappen"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource InvalidOperation_EnumOpCantHappen
void System::ExceptionResource::_set_InvalidOperation_EnumOpCantHappen(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_InvalidOperation_EnumOpCantHappen");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "InvalidOperation_EnumOpCantHappen", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource InvalidOperation_EnumFailedVersion
System::ExceptionResource System::ExceptionResource::_get_InvalidOperation_EnumFailedVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_InvalidOperation_EnumFailedVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "InvalidOperation_EnumFailedVersion"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource InvalidOperation_EnumFailedVersion
void System::ExceptionResource::_set_InvalidOperation_EnumFailedVersion(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_InvalidOperation_EnumFailedVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "InvalidOperation_EnumFailedVersion", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource InvalidOperation_EmptyStack
System::ExceptionResource System::ExceptionResource::_get_InvalidOperation_EmptyStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_InvalidOperation_EmptyStack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "InvalidOperation_EmptyStack"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource InvalidOperation_EmptyStack
void System::ExceptionResource::_set_InvalidOperation_EmptyStack(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_InvalidOperation_EmptyStack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "InvalidOperation_EmptyStack", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource ArgumentOutOfRange_BiggerThanCollection
System::ExceptionResource System::ExceptionResource::_get_ArgumentOutOfRange_BiggerThanCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_ArgumentOutOfRange_BiggerThanCollection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "ArgumentOutOfRange_BiggerThanCollection"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource ArgumentOutOfRange_BiggerThanCollection
void System::ExceptionResource::_set_ArgumentOutOfRange_BiggerThanCollection(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_ArgumentOutOfRange_BiggerThanCollection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "ArgumentOutOfRange_BiggerThanCollection", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource InvalidOperation_EnumNotStarted
System::ExceptionResource System::ExceptionResource::_get_InvalidOperation_EnumNotStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_InvalidOperation_EnumNotStarted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "InvalidOperation_EnumNotStarted"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource InvalidOperation_EnumNotStarted
void System::ExceptionResource::_set_InvalidOperation_EnumNotStarted(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_InvalidOperation_EnumNotStarted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "InvalidOperation_EnumNotStarted", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource InvalidOperation_EnumEnded
System::ExceptionResource System::ExceptionResource::_get_InvalidOperation_EnumEnded() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_InvalidOperation_EnumEnded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "InvalidOperation_EnumEnded"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource InvalidOperation_EnumEnded
void System::ExceptionResource::_set_InvalidOperation_EnumEnded(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_InvalidOperation_EnumEnded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "InvalidOperation_EnumEnded", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource NotSupported_SortedListNestedWrite
System::ExceptionResource System::ExceptionResource::_get_NotSupported_SortedListNestedWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_NotSupported_SortedListNestedWrite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "NotSupported_SortedListNestedWrite"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource NotSupported_SortedListNestedWrite
void System::ExceptionResource::_set_NotSupported_SortedListNestedWrite(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_NotSupported_SortedListNestedWrite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "NotSupported_SortedListNestedWrite", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource InvalidOperation_NoValue
System::ExceptionResource System::ExceptionResource::_get_InvalidOperation_NoValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_InvalidOperation_NoValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "InvalidOperation_NoValue"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource InvalidOperation_NoValue
void System::ExceptionResource::_set_InvalidOperation_NoValue(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_InvalidOperation_NoValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "InvalidOperation_NoValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource InvalidOperation_RegRemoveSubKey
System::ExceptionResource System::ExceptionResource::_get_InvalidOperation_RegRemoveSubKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_InvalidOperation_RegRemoveSubKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "InvalidOperation_RegRemoveSubKey"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource InvalidOperation_RegRemoveSubKey
void System::ExceptionResource::_set_InvalidOperation_RegRemoveSubKey(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_InvalidOperation_RegRemoveSubKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "InvalidOperation_RegRemoveSubKey", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Security_RegistryPermission
System::ExceptionResource System::ExceptionResource::_get_Security_RegistryPermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Security_RegistryPermission");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Security_RegistryPermission"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Security_RegistryPermission
void System::ExceptionResource::_set_Security_RegistryPermission(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Security_RegistryPermission");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Security_RegistryPermission", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource UnauthorizedAccess_RegistryNoWrite
System::ExceptionResource System::ExceptionResource::_get_UnauthorizedAccess_RegistryNoWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_UnauthorizedAccess_RegistryNoWrite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "UnauthorizedAccess_RegistryNoWrite"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource UnauthorizedAccess_RegistryNoWrite
void System::ExceptionResource::_set_UnauthorizedAccess_RegistryNoWrite(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_UnauthorizedAccess_RegistryNoWrite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "UnauthorizedAccess_RegistryNoWrite", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource ObjectDisposed_RegKeyClosed
System::ExceptionResource System::ExceptionResource::_get_ObjectDisposed_RegKeyClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_ObjectDisposed_RegKeyClosed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "ObjectDisposed_RegKeyClosed"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource ObjectDisposed_RegKeyClosed
void System::ExceptionResource::_set_ObjectDisposed_RegKeyClosed(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_ObjectDisposed_RegKeyClosed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "ObjectDisposed_RegKeyClosed", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource NotSupported_InComparableType
System::ExceptionResource System::ExceptionResource::_get_NotSupported_InComparableType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_NotSupported_InComparableType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "NotSupported_InComparableType"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource NotSupported_InComparableType
void System::ExceptionResource::_set_NotSupported_InComparableType(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_NotSupported_InComparableType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "NotSupported_InComparableType", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Argument_InvalidRegistryOptionsCheck
System::ExceptionResource System::ExceptionResource::_get_Argument_InvalidRegistryOptionsCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Argument_InvalidRegistryOptionsCheck");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Argument_InvalidRegistryOptionsCheck"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Argument_InvalidRegistryOptionsCheck
void System::ExceptionResource::_set_Argument_InvalidRegistryOptionsCheck(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Argument_InvalidRegistryOptionsCheck");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Argument_InvalidRegistryOptionsCheck", value));
}
// Autogenerated static field getter
// Get static field: static public System.ExceptionResource Argument_InvalidRegistryViewCheck
System::ExceptionResource System::ExceptionResource::_get_Argument_InvalidRegistryViewCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_get_Argument_InvalidRegistryViewCheck");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ExceptionResource>("System", "ExceptionResource", "Argument_InvalidRegistryViewCheck"));
}
// Autogenerated static field setter
// Set static field: static public System.ExceptionResource Argument_InvalidRegistryViewCheck
void System::ExceptionResource::_set_Argument_InvalidRegistryViewCheck(System::ExceptionResource value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ExceptionResource::_set_Argument_InvalidRegistryViewCheck");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ExceptionResource", "Argument_InvalidRegistryViewCheck", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.TimeoutException
#include "System/TimeoutException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.TimeSpan Zero
System::TimeSpan System::TimeSpan::_get_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::_get_Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TimeSpan>("System", "TimeSpan", "Zero"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.TimeSpan Zero
void System::TimeSpan::_set_Zero(System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::_set_Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeSpan", "Zero", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.TimeSpan MaxValue
System::TimeSpan System::TimeSpan::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TimeSpan>("System", "TimeSpan", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.TimeSpan MaxValue
void System::TimeSpan::_set_MaxValue(System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeSpan", "MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.TimeSpan MinValue
System::TimeSpan System::TimeSpan::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TimeSpan>("System", "TimeSpan", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.TimeSpan MinValue
void System::TimeSpan::_set_MinValue(System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeSpan", "MinValue", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _legacyConfigChecked
bool System::TimeSpan::_get__legacyConfigChecked() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::_get__legacyConfigChecked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "TimeSpan", "_legacyConfigChecked"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _legacyConfigChecked
void System::TimeSpan::_set__legacyConfigChecked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::_set__legacyConfigChecked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeSpan", "_legacyConfigChecked", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _legacyMode
bool System::TimeSpan::_get__legacyMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::_get__legacyMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "TimeSpan", "_legacyMode"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _legacyMode
void System::TimeSpan::_set__legacyMode(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::_set__legacyMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeSpan", "_legacyMode", value));
}
// Autogenerated method: System.TimeSpan.get_Ticks
int64_t System::TimeSpan::get_Ticks() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::get_Ticks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_Ticks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(*this, ___internal__method);
}
// Autogenerated method: System.TimeSpan.get_Hours
int System::TimeSpan::get_Hours() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::get_Hours");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_Hours", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.TimeSpan.get_Minutes
int System::TimeSpan::get_Minutes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::get_Minutes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_Minutes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.TimeSpan.get_Seconds
int System::TimeSpan::get_Seconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::get_Seconds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_Seconds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.TimeSpan.get_TotalHours
double System::TimeSpan::get_TotalHours() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::get_TotalHours");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_TotalHours", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(*this, ___internal__method);
}
// Autogenerated method: System.TimeSpan.get_TotalMilliseconds
double System::TimeSpan::get_TotalMilliseconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::get_TotalMilliseconds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_TotalMilliseconds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(*this, ___internal__method);
}
// Autogenerated method: System.TimeSpan.get_TotalMinutes
double System::TimeSpan::get_TotalMinutes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::get_TotalMinutes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_TotalMinutes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(*this, ___internal__method);
}
// Autogenerated method: System.TimeSpan.get_TotalSeconds
double System::TimeSpan::get_TotalSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::get_TotalSeconds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_TotalSeconds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<double, false>(*this, ___internal__method);
}
// Autogenerated method: System.TimeSpan.Add
System::TimeSpan System::TimeSpan::Add(System::TimeSpan ts) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::Add");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Add", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ts)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(*this, ___internal__method, ts);
}
// Autogenerated method: System.TimeSpan.FromDays
System::TimeSpan System::TimeSpan::FromDays(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::FromDays");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeSpan", "FromDays", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.TimeSpan.Duration
System::TimeSpan System::TimeSpan::Duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::Duration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Duration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(*this, ___internal__method);
}
// Autogenerated method: System.TimeSpan.FromHours
System::TimeSpan System::TimeSpan::FromHours(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::FromHours");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeSpan", "FromHours", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.TimeSpan.Interval
System::TimeSpan System::TimeSpan::Interval(double value, int scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::Interval");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeSpan", "Interval", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, scale)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, scale);
}
// Autogenerated method: System.TimeSpan.FromMilliseconds
System::TimeSpan System::TimeSpan::FromMilliseconds(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::FromMilliseconds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeSpan", "FromMilliseconds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.TimeSpan.FromMinutes
System::TimeSpan System::TimeSpan::FromMinutes(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::FromMinutes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeSpan", "FromMinutes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.TimeSpan.Negate
System::TimeSpan System::TimeSpan::Negate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::Negate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Negate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(*this, ___internal__method);
}
// Autogenerated method: System.TimeSpan.FromSeconds
System::TimeSpan System::TimeSpan::FromSeconds(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::FromSeconds");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeSpan", "FromSeconds", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.TimeSpan.Subtract
System::TimeSpan System::TimeSpan::Subtract(System::TimeSpan ts) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::Subtract");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Subtract", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ts)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(*this, ___internal__method, ts);
}
// Autogenerated method: System.TimeSpan.FromTicks
System::TimeSpan System::TimeSpan::FromTicks(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::FromTicks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeSpan", "FromTicks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.TimeSpan.TimeToTicks
int64_t System::TimeSpan::TimeToTicks(int hour, int minute, int second) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::TimeToTicks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeSpan", "TimeToTicks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hour, minute, second)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hour, minute, second);
}
// Autogenerated method: System.TimeSpan.ToString
::Il2CppString* System::TimeSpan::ToString(::Il2CppString* format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, format);
}
// Autogenerated method: System.TimeSpan.GetLegacyFormatMode
bool System::TimeSpan::GetLegacyFormatMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::GetLegacyFormatMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeSpan", "GetLegacyFormatMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeSpan.get_LegacyMode
bool System::TimeSpan::get_LegacyMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::get_LegacyMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeSpan", "get_LegacyMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeSpan..cctor
void System::TimeSpan::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeSpan", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeSpan.CompareTo
int System::TimeSpan::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::CompareTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, value);
}
int System::TimeSpan::System_IComparable_CompareTo(::Il2CppObject* value) {
  return System::TimeSpan::CompareTo(value);
}
// Autogenerated method: System.TimeSpan.CompareTo
int System::TimeSpan::CompareTo(System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::CompareTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, value);
}
// Autogenerated method: System.TimeSpan.Equals
bool System::TimeSpan::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, value);
}
// Autogenerated method: System.TimeSpan.Equals
bool System::TimeSpan::Equals(System::TimeSpan obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.TimeSpan.GetHashCode
int System::TimeSpan::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.TimeSpan.ToString
::Il2CppString* System::TimeSpan::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: System.TimeSpan.ToString
::Il2CppString* System::TimeSpan::ToString(::Il2CppString* format, System::IFormatProvider* formatProvider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, formatProvider)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, format, formatProvider);
}
// Autogenerated method: System.TimeSpan.op_Subtraction
System::TimeSpan System::operator-(const System::TimeSpan& t1, const System::TimeSpan& t2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeSpan", "op_Subtraction", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t1, t2)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t1, t2);
}
// Autogenerated method: System.TimeSpan.op_Addition
System::TimeSpan System::operator+(const System::TimeSpan& t1, const System::TimeSpan& t2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::op_Addition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeSpan", "op_Addition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t1, t2)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t1, t2);
}
// Autogenerated method: System.TimeSpan.op_Equality
bool System::operator ==(const System::TimeSpan& t1, const System::TimeSpan& t2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::op_Equality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeSpan", "op_Equality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t1, t2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t1, t2);
}
// Autogenerated method: System.TimeSpan.op_Inequality
bool System::operator !=(const System::TimeSpan& t1, const System::TimeSpan& t2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeSpan", "op_Inequality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t1, t2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t1, t2);
}
// Autogenerated method: System.TimeSpan.op_LessThan
bool System::operator <(const System::TimeSpan& t1, const System::TimeSpan& t2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeSpan", "op_LessThan", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t1, t2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t1, t2);
}
// Autogenerated method: System.TimeSpan.op_LessThanOrEqual
bool System::operator <=(const System::TimeSpan& t1, const System::TimeSpan& t2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::op_LessThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeSpan", "op_LessThanOrEqual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t1, t2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t1, t2);
}
// Autogenerated method: System.TimeSpan.op_GreaterThan
bool System::operator >(const System::TimeSpan& t1, const System::TimeSpan& t2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::op_GreaterThan");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeSpan", "op_GreaterThan", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t1, t2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t1, t2);
}
// Autogenerated method: System.TimeSpan.op_GreaterThanOrEqual
bool System::operator >=(const System::TimeSpan& t1, const System::TimeSpan& t2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeSpan::op_GreaterThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeSpan", "op_GreaterThanOrEqual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t1, t2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t1, t2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.TimeZoneInfoOptions
#include "System/TimeZoneInfoOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.TimeZoneInfoOptions None
System::TimeZoneInfoOptions System::TimeZoneInfoOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfoOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TimeZoneInfoOptions>("System", "TimeZoneInfoOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.TimeZoneInfoOptions None
void System::TimeZoneInfoOptions::_set_None(System::TimeZoneInfoOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfoOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeZoneInfoOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.TimeZoneInfoOptions NoThrowOnInvalidTime
System::TimeZoneInfoOptions System::TimeZoneInfoOptions::_get_NoThrowOnInvalidTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfoOptions::_get_NoThrowOnInvalidTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TimeZoneInfoOptions>("System", "TimeZoneInfoOptions", "NoThrowOnInvalidTime"));
}
// Autogenerated static field setter
// Set static field: static public System.TimeZoneInfoOptions NoThrowOnInvalidTime
void System::TimeZoneInfoOptions::_set_NoThrowOnInvalidTime(System::TimeZoneInfoOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfoOptions::_set_NoThrowOnInvalidTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeZoneInfoOptions", "NoThrowOnInvalidTime", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.TimeZoneInfo
#include "System/TimeZoneInfo.hpp"
// Including type: System.TimeZoneInfo/AdjustmentRule
#include "System/TimeZoneInfo_AdjustmentRule.hpp"
// Including type: System.TimeZoneInfo/TransitionTime
#include "System/TimeZoneInfo_TransitionTime.hpp"
// Including type: System.TimeZoneInfo/SYSTEMTIME
#include "System/TimeZoneInfo_SYSTEMTIME.hpp"
// Including type: System.TimeZoneInfo/TIME_ZONE_INFORMATION
#include "System/TimeZoneInfo_TIME_ZONE_INFORMATION.hpp"
// Including type: System.TimeZoneInfo/DYNAMIC_TIME_ZONE_INFORMATION
#include "System/TimeZoneInfo_DYNAMIC_TIME_ZONE_INFORMATION.hpp"
// Including type: System.TimeZoneInfo/<>c
#include "System/TimeZoneInfo_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.TimeType
#include "System/TimeType.hpp"
// Including type: Microsoft.Win32.RegistryKey
#include "Microsoft/Win32/RegistryKey.hpp"
// Including type: System.Collections.ObjectModel.ReadOnlyCollection`1
#include "System/Collections/ObjectModel/ReadOnlyCollection_1.hpp"
// Including type: System.TimeZoneInfoOptions
#include "System/TimeZoneInfoOptions.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.TimeZoneInfo local
System::TimeZoneInfo* System::TimeZoneInfo::_get_local() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::_get_local");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TimeZoneInfo*>("System", "TimeZoneInfo", "local"));
}
// Autogenerated static field setter
// Set static field: static private System.TimeZoneInfo local
void System::TimeZoneInfo::_set_local(System::TimeZoneInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::_set_local");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeZoneInfo", "local", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean readlinkNotFound
bool System::TimeZoneInfo::_get_readlinkNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::_get_readlinkNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "TimeZoneInfo", "readlinkNotFound"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean readlinkNotFound
void System::TimeZoneInfo::_set_readlinkNotFound(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::_set_readlinkNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeZoneInfo", "readlinkNotFound", value));
}
// Autogenerated static field getter
// Get static field: static private System.TimeZoneInfo utc
System::TimeZoneInfo* System::TimeZoneInfo::_get_utc() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::_get_utc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TimeZoneInfo*>("System", "TimeZoneInfo", "utc"));
}
// Autogenerated static field setter
// Set static field: static private System.TimeZoneInfo utc
void System::TimeZoneInfo::_set_utc(System::TimeZoneInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::_set_utc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeZoneInfo", "utc", value));
}
// Autogenerated static field getter
// Get static field: static private System.String timeZoneDirectory
::Il2CppString* System::TimeZoneInfo::_get_timeZoneDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::_get_timeZoneDirectory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "TimeZoneInfo", "timeZoneDirectory"));
}
// Autogenerated static field setter
// Set static field: static private System.String timeZoneDirectory
void System::TimeZoneInfo::_set_timeZoneDirectory(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::_set_timeZoneDirectory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeZoneInfo", "timeZoneDirectory", value));
}
// Autogenerated static field getter
// Get static field: static private Microsoft.Win32.RegistryKey timeZoneKey
Microsoft::Win32::RegistryKey* System::TimeZoneInfo::_get_timeZoneKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::_get_timeZoneKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryKey*>("System", "TimeZoneInfo", "timeZoneKey"));
}
// Autogenerated static field setter
// Set static field: static private Microsoft.Win32.RegistryKey timeZoneKey
void System::TimeZoneInfo::_set_timeZoneKey(Microsoft::Win32::RegistryKey* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::_set_timeZoneKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeZoneInfo", "timeZoneKey", value));
}
// Autogenerated static field getter
// Get static field: static private Microsoft.Win32.RegistryKey localZoneKey
Microsoft::Win32::RegistryKey* System::TimeZoneInfo::_get_localZoneKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::_get_localZoneKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::RegistryKey*>("System", "TimeZoneInfo", "localZoneKey"));
}
// Autogenerated static field setter
// Set static field: static private Microsoft.Win32.RegistryKey localZoneKey
void System::TimeZoneInfo::_set_localZoneKey(Microsoft::Win32::RegistryKey* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::_set_localZoneKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeZoneInfo", "localZoneKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.ObjectModel.ReadOnlyCollection`1<System.TimeZoneInfo> systemTimeZones
System::Collections::ObjectModel::ReadOnlyCollection_1<System::TimeZoneInfo*>* System::TimeZoneInfo::_get_systemTimeZones() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::_get_systemTimeZones");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::ObjectModel::ReadOnlyCollection_1<System::TimeZoneInfo*>*>("System", "TimeZoneInfo", "systemTimeZones"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.ObjectModel.ReadOnlyCollection`1<System.TimeZoneInfo> systemTimeZones
void System::TimeZoneInfo::_set_systemTimeZones(System::Collections::ObjectModel::ReadOnlyCollection_1<System::TimeZoneInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::_set_systemTimeZones");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "TimeZoneInfo", "systemTimeZones", value));
}
// Autogenerated method: System.TimeZoneInfo.UtcOffsetOutOfRange
bool System::TimeZoneInfo::UtcOffsetOutOfRange(System::TimeSpan offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::UtcOffsetOutOfRange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "UtcOffsetOutOfRange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(offset)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, offset);
}
// Autogenerated method: System.TimeZoneInfo.CreateAdjustmentRule
System::Collections::Generic::List_1<System::TimeZoneInfo::AdjustmentRule*>* System::TimeZoneInfo::CreateAdjustmentRule(int year, ::Array<int64_t>*& data, ::Array<::Il2CppString*>*& names, ::Il2CppString* standardNameCurrentYear, ::Il2CppString* daylightNameCurrentYear) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::CreateAdjustmentRule");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "CreateAdjustmentRule", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(year, data, names, standardNameCurrentYear, daylightNameCurrentYear)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<System::TimeZoneInfo::AdjustmentRule*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, year, data, names, standardNameCurrentYear, daylightNameCurrentYear);
}
// Autogenerated method: System.TimeZoneInfo.CreateLocalUnity
System::TimeZoneInfo* System::TimeZoneInfo::CreateLocalUnity() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::CreateLocalUnity");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "CreateLocalUnity", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::TimeZoneInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.EnumDynamicTimeZoneInformation
uint System::TimeZoneInfo::EnumDynamicTimeZoneInformation(uint dwIndex, System::TimeZoneInfo::DYNAMIC_TIME_ZONE_INFORMATION& lpTimeZoneInformation) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::EnumDynamicTimeZoneInformation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "EnumDynamicTimeZoneInformation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dwIndex, lpTimeZoneInformation)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dwIndex, lpTimeZoneInformation);
}
// Autogenerated method: System.TimeZoneInfo.GetDynamicTimeZoneInformation
uint System::TimeZoneInfo::GetDynamicTimeZoneInformation(System::TimeZoneInfo::DYNAMIC_TIME_ZONE_INFORMATION& pTimeZoneInformation) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::GetDynamicTimeZoneInformation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetDynamicTimeZoneInformation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pTimeZoneInformation)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pTimeZoneInformation);
}
// Autogenerated method: System.TimeZoneInfo.GetDynamicTimeZoneInformationWin32
uint System::TimeZoneInfo::GetDynamicTimeZoneInformationWin32(System::TimeZoneInfo::DYNAMIC_TIME_ZONE_INFORMATION& pTimeZoneInformation) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::GetDynamicTimeZoneInformationWin32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetDynamicTimeZoneInformationWin32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pTimeZoneInformation)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pTimeZoneInformation);
}
// Autogenerated method: System.TimeZoneInfo.GetDynamicTimeZoneInformationEffectiveYears
uint System::TimeZoneInfo::GetDynamicTimeZoneInformationEffectiveYears(System::TimeZoneInfo::DYNAMIC_TIME_ZONE_INFORMATION& lpTimeZoneInformation, uint& FirstYear, uint& LastYear) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::GetDynamicTimeZoneInformationEffectiveYears");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetDynamicTimeZoneInformationEffectiveYears", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lpTimeZoneInformation, FirstYear, LastYear)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lpTimeZoneInformation, FirstYear, LastYear);
}
// Autogenerated method: System.TimeZoneInfo.GetTimeZoneInformationForYear
bool System::TimeZoneInfo::GetTimeZoneInformationForYear(uint16_t wYear, System::TimeZoneInfo::DYNAMIC_TIME_ZONE_INFORMATION& pdtzi, System::TimeZoneInfo::TIME_ZONE_INFORMATION& ptzi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::GetTimeZoneInformationForYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetTimeZoneInformationForYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(wYear, pdtzi, ptzi)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, wYear, pdtzi, ptzi);
}
// Autogenerated method: System.TimeZoneInfo.CreateAdjustmentRuleFromTimeZoneInformation
System::TimeZoneInfo::AdjustmentRule* System::TimeZoneInfo::CreateAdjustmentRuleFromTimeZoneInformation(System::TimeZoneInfo::DYNAMIC_TIME_ZONE_INFORMATION& timeZoneInformation, System::DateTime startDate, System::DateTime endDate, int defaultBaseUtcOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::CreateAdjustmentRuleFromTimeZoneInformation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "CreateAdjustmentRuleFromTimeZoneInformation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timeZoneInformation, startDate, endDate, defaultBaseUtcOffset)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeZoneInfo::AdjustmentRule*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, timeZoneInformation, startDate, endDate, defaultBaseUtcOffset);
}
// Autogenerated method: System.TimeZoneInfo.TransitionTimeFromTimeZoneInformation
bool System::TimeZoneInfo::TransitionTimeFromTimeZoneInformation(System::TimeZoneInfo::DYNAMIC_TIME_ZONE_INFORMATION timeZoneInformation, System::TimeZoneInfo::TransitionTime& transitionTime, bool readStartDate) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::TransitionTimeFromTimeZoneInformation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TransitionTimeFromTimeZoneInformation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timeZoneInformation, transitionTime, readStartDate)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, timeZoneInformation, transitionTime, readStartDate);
}
// Autogenerated method: System.TimeZoneInfo.TryCreateTimeZone
System::TimeZoneInfo* System::TimeZoneInfo::TryCreateTimeZone(System::TimeZoneInfo::DYNAMIC_TIME_ZONE_INFORMATION timeZoneInformation) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::TryCreateTimeZone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TryCreateTimeZone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timeZoneInformation)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeZoneInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, timeZoneInformation);
}
// Autogenerated method: System.TimeZoneInfo.GetLocalTimeZoneInfoWinRTFallback
System::TimeZoneInfo* System::TimeZoneInfo::GetLocalTimeZoneInfoWinRTFallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::GetLocalTimeZoneInfoWinRTFallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetLocalTimeZoneInfoWinRTFallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::TimeZoneInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.GetLocalTimeZoneKeyNameWin32Fallback
::Il2CppString* System::TimeZoneInfo::GetLocalTimeZoneKeyNameWin32Fallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::GetLocalTimeZoneKeyNameWin32Fallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetLocalTimeZoneKeyNameWin32Fallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.FindSystemTimeZoneByIdWinRTFallback
System::TimeZoneInfo* System::TimeZoneInfo::FindSystemTimeZoneByIdWinRTFallback(::Il2CppString* id) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::FindSystemTimeZoneByIdWinRTFallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "FindSystemTimeZoneByIdWinRTFallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(id)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeZoneInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, id);
}
// Autogenerated method: System.TimeZoneInfo.GetSystemTimeZonesWinRTFallback
System::Collections::Generic::List_1<System::TimeZoneInfo*>* System::TimeZoneInfo::GetSystemTimeZonesWinRTFallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::GetSystemTimeZonesWinRTFallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetSystemTimeZonesWinRTFallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<System::TimeZoneInfo*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.get_BaseUtcOffset
System::TimeSpan System::TimeZoneInfo::get_BaseUtcOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::get_BaseUtcOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_BaseUtcOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.get_DisplayName
::Il2CppString* System::TimeZoneInfo::get_DisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::get_DisplayName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DisplayName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.get_Id
::Il2CppString* System::TimeZoneInfo::get_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::get_Id");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Id", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.get_Local
System::TimeZoneInfo* System::TimeZoneInfo::get_Local() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::get_Local");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "get_Local", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::TimeZoneInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.readlink
int System::TimeZoneInfo::readlink(::Il2CppString* path, ::Array<uint8_t>* buffer, int buflen) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::readlink");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "readlink", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, buffer, buflen)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, buffer, buflen);
}
// Autogenerated method: System.TimeZoneInfo.readlink
::Il2CppString* System::TimeZoneInfo::readlink(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::readlink");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "readlink", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.TimeZoneInfo.TryGetNameFromPath
bool System::TimeZoneInfo::TryGetNameFromPath(::Il2CppString* path, ::Il2CppString*& name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::TryGetNameFromPath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TryGetNameFromPath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, name)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, name);
}
// Autogenerated method: System.TimeZoneInfo.CreateLocal
System::TimeZoneInfo* System::TimeZoneInfo::CreateLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::CreateLocal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "CreateLocal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::TimeZoneInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.FindSystemTimeZoneByIdCore
System::TimeZoneInfo* System::TimeZoneInfo::FindSystemTimeZoneByIdCore(::Il2CppString* id) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::FindSystemTimeZoneByIdCore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "FindSystemTimeZoneByIdCore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(id)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeZoneInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, id);
}
// Autogenerated method: System.TimeZoneInfo.GetSystemTimeZonesCore
void System::TimeZoneInfo::GetSystemTimeZonesCore(System::Collections::Generic::List_1<System::TimeZoneInfo*>* systemTimeZones) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::GetSystemTimeZonesCore");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetSystemTimeZonesCore", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(systemTimeZones)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, systemTimeZones);
}
// Autogenerated method: System.TimeZoneInfo.get_SupportsDaylightSavingTime
bool System::TimeZoneInfo::get_SupportsDaylightSavingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::get_SupportsDaylightSavingTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SupportsDaylightSavingTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.get_Utc
System::TimeZoneInfo* System::TimeZoneInfo::get_Utc() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::get_Utc");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "get_Utc", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::TimeZoneInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.get_TimeZoneDirectory
::Il2CppString* System::TimeZoneInfo::get_TimeZoneDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::get_TimeZoneDirectory");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "get_TimeZoneDirectory", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.get_IsWindows
bool System::TimeZoneInfo::get_IsWindows() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::get_IsWindows");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "get_IsWindows", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.TrimSpecial
::Il2CppString* System::TimeZoneInfo::TrimSpecial(::Il2CppString* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::TrimSpecial");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TrimSpecial", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.TimeZoneInfo.get_TimeZoneKey
Microsoft::Win32::RegistryKey* System::TimeZoneInfo::get_TimeZoneKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::get_TimeZoneKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "get_TimeZoneKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::RegistryKey*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.get_LocalZoneKey
Microsoft::Win32::RegistryKey* System::TimeZoneInfo::get_LocalZoneKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::get_LocalZoneKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "get_LocalZoneKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::RegistryKey*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.TryAddTicks
bool System::TimeZoneInfo::TryAddTicks(System::DateTime date, int64_t ticks, System::DateTime& result, System::DateTimeKind kind) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::TryAddTicks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TryAddTicks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(date, ticks, result, kind)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, date, ticks, result, kind);
}
// Autogenerated method: System.TimeZoneInfo.ConvertTime
System::DateTime System::TimeZoneInfo::ConvertTime(System::DateTime dateTime, System::TimeZoneInfo* sourceTimeZone, System::TimeZoneInfo* destinationTimeZone) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::ConvertTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "ConvertTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dateTime, sourceTimeZone, destinationTimeZone)));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dateTime, sourceTimeZone, destinationTimeZone);
}
// Autogenerated method: System.TimeZoneInfo.ConvertTimeFromUtc
System::DateTime System::TimeZoneInfo::ConvertTimeFromUtc(System::DateTime dateTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::ConvertTimeFromUtc");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ConvertTimeFromUtc", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dateTime)));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method, dateTime);
}
// Autogenerated method: System.TimeZoneInfo.ConvertTimeFromUtc
System::DateTime System::TimeZoneInfo::ConvertTimeFromUtc(System::DateTime dateTime, System::TimeZoneInfo* destinationTimeZone) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::ConvertTimeFromUtc");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "ConvertTimeFromUtc", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dateTime, destinationTimeZone)));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dateTime, destinationTimeZone);
}
// Autogenerated method: System.TimeZoneInfo.ConvertTimeToUtc
System::DateTime System::TimeZoneInfo::ConvertTimeToUtc(System::DateTime dateTime, System::TimeZoneInfoOptions flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::ConvertTimeToUtc");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "ConvertTimeToUtc", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dateTime, flags)));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dateTime, flags);
}
// Autogenerated method: System.TimeZoneInfo.ConvertTimeToUtc
System::DateTime System::TimeZoneInfo::ConvertTimeToUtc(System::DateTime dateTime, System::TimeZoneInfo* sourceTimeZone) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::ConvertTimeToUtc");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "ConvertTimeToUtc", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dateTime, sourceTimeZone)));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dateTime, sourceTimeZone);
}
// Autogenerated method: System.TimeZoneInfo.ConvertTimeToUtc
System::DateTime System::TimeZoneInfo::ConvertTimeToUtc(System::DateTime dateTime, System::TimeZoneInfo* sourceTimeZone, System::TimeZoneInfoOptions flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::ConvertTimeToUtc");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "ConvertTimeToUtc", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dateTime, sourceTimeZone, flags)));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dateTime, sourceTimeZone, flags);
}
// Autogenerated method: System.TimeZoneInfo.GetDateTimeNowUtcOffsetFromUtc
System::TimeSpan System::TimeZoneInfo::GetDateTimeNowUtcOffsetFromUtc(System::DateTime time, bool& isAmbiguousLocalDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::GetDateTimeNowUtcOffsetFromUtc");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetDateTimeNowUtcOffsetFromUtc", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time, isAmbiguousLocalDst)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time, isAmbiguousLocalDst);
}
// Autogenerated method: System.TimeZoneInfo.CreateCustomTimeZone
System::TimeZoneInfo* System::TimeZoneInfo::CreateCustomTimeZone(::Il2CppString* id, System::TimeSpan baseUtcOffset, ::Il2CppString* displayName, ::Il2CppString* standardDisplayName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::CreateCustomTimeZone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "CreateCustomTimeZone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(id, baseUtcOffset, displayName, standardDisplayName)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeZoneInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, id, baseUtcOffset, displayName, standardDisplayName);
}
// Autogenerated method: System.TimeZoneInfo.CreateCustomTimeZone
System::TimeZoneInfo* System::TimeZoneInfo::CreateCustomTimeZone(::Il2CppString* id, System::TimeSpan baseUtcOffset, ::Il2CppString* displayName, ::Il2CppString* standardDisplayName, ::Il2CppString* daylightDisplayName, ::Array<System::TimeZoneInfo::AdjustmentRule*>* adjustmentRules) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::CreateCustomTimeZone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "CreateCustomTimeZone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(id, baseUtcOffset, displayName, standardDisplayName, daylightDisplayName, adjustmentRules)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeZoneInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, id, baseUtcOffset, displayName, standardDisplayName, daylightDisplayName, adjustmentRules);
}
// Autogenerated method: System.TimeZoneInfo.CreateCustomTimeZone
System::TimeZoneInfo* System::TimeZoneInfo::CreateCustomTimeZone(::Il2CppString* id, System::TimeSpan baseUtcOffset, ::Il2CppString* displayName, ::Il2CppString* standardDisplayName, ::Il2CppString* daylightDisplayName, ::Array<System::TimeZoneInfo::AdjustmentRule*>* adjustmentRules, bool disableDaylightSavingTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::CreateCustomTimeZone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "CreateCustomTimeZone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(id, baseUtcOffset, displayName, standardDisplayName, daylightDisplayName, adjustmentRules, disableDaylightSavingTime)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeZoneInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, id, baseUtcOffset, displayName, standardDisplayName, daylightDisplayName, adjustmentRules, disableDaylightSavingTime);
}
// Autogenerated method: System.TimeZoneInfo.FindSystemTimeZoneById
System::TimeZoneInfo* System::TimeZoneInfo::FindSystemTimeZoneById(::Il2CppString* id) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::FindSystemTimeZoneById");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "FindSystemTimeZoneById", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(id)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeZoneInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, id);
}
// Autogenerated method: System.TimeZoneInfo.FindSystemTimeZoneByFileName
System::TimeZoneInfo* System::TimeZoneInfo::FindSystemTimeZoneByFileName(::Il2CppString* id, ::Il2CppString* filepath) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::FindSystemTimeZoneByFileName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "FindSystemTimeZoneByFileName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(id, filepath)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeZoneInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, id, filepath);
}
// Autogenerated method: System.TimeZoneInfo.FromRegistryKey
System::TimeZoneInfo* System::TimeZoneInfo::FromRegistryKey(::Il2CppString* id, Microsoft::Win32::RegistryKey* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::FromRegistryKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "FromRegistryKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(id, key)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeZoneInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, id, key);
}
// Autogenerated method: System.TimeZoneInfo.ParseRegTzi
void System::TimeZoneInfo::ParseRegTzi(System::Collections::Generic::List_1<System::TimeZoneInfo::AdjustmentRule*>* adjustmentRules, int start_year, int end_year, ::Array<uint8_t>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::ParseRegTzi");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "ParseRegTzi", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(adjustmentRules, start_year, end_year, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, adjustmentRules, start_year, end_year, buffer);
}
// Autogenerated method: System.TimeZoneInfo.GetAdjustmentRules
::Array<System::TimeZoneInfo::AdjustmentRule*>* System::TimeZoneInfo::GetAdjustmentRules() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::GetAdjustmentRules");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAdjustmentRules", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::TimeZoneInfo::AdjustmentRule*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.GetSystemTimeZones
System::Collections::ObjectModel::ReadOnlyCollection_1<System::TimeZoneInfo*>* System::TimeZoneInfo::GetSystemTimeZones() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::GetSystemTimeZones");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetSystemTimeZones", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::ObjectModel::ReadOnlyCollection_1<System::TimeZoneInfo*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.GetUtcOffset
System::TimeSpan System::TimeZoneInfo::GetUtcOffset(System::DateTime dateTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::GetUtcOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetUtcOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dateTime)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(this, ___internal__method, dateTime);
}
// Autogenerated method: System.TimeZoneInfo.GetUtcOffset
System::TimeSpan System::TimeZoneInfo::GetUtcOffset(System::DateTime dateTime, bool& isDST) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::GetUtcOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetUtcOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dateTime, isDST)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(this, ___internal__method, dateTime, isDST);
}
// Autogenerated method: System.TimeZoneInfo.GetUtcOffsetHelper
System::TimeSpan System::TimeZoneInfo::GetUtcOffsetHelper(System::DateTime dateTime, System::TimeZoneInfo* tz, bool& isDST) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::GetUtcOffsetHelper");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetUtcOffsetHelper", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dateTime, tz, isDST)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dateTime, tz, isDST);
}
// Autogenerated method: System.TimeZoneInfo.HasSameRules
bool System::TimeZoneInfo::HasSameRules(System::TimeZoneInfo* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::HasSameRules");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HasSameRules", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.TimeZoneInfo.IsAmbiguousTime
bool System::TimeZoneInfo::IsAmbiguousTime(System::DateTime dateTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::IsAmbiguousTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsAmbiguousTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dateTime)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, dateTime);
}
// Autogenerated method: System.TimeZoneInfo.IsInDST
bool System::TimeZoneInfo::IsInDST(System::TimeZoneInfo::AdjustmentRule* rule, System::DateTime dateTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::IsInDST");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsInDST", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rule, dateTime)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, rule, dateTime);
}
// Autogenerated method: System.TimeZoneInfo.IsInDSTForYear
bool System::TimeZoneInfo::IsInDSTForYear(System::TimeZoneInfo::AdjustmentRule* rule, System::DateTime dateTime, int year) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::IsInDSTForYear");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsInDSTForYear", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rule, dateTime, year)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, rule, dateTime, year);
}
// Autogenerated method: System.TimeZoneInfo.IsInvalidTime
bool System::TimeZoneInfo::IsInvalidTime(System::DateTime dateTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::IsInvalidTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsInvalidTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dateTime)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, dateTime);
}
// Autogenerated method: System.TimeZoneInfo.Validate
void System::TimeZoneInfo::Validate(::Il2CppString* id, System::TimeSpan baseUtcOffset, ::Array<System::TimeZoneInfo::AdjustmentRule*>* adjustmentRules) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::Validate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "Validate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(id, baseUtcOffset, adjustmentRules)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, id, baseUtcOffset, adjustmentRules);
}
// Autogenerated method: System.TimeZoneInfo.GetApplicableRule
System::TimeZoneInfo::AdjustmentRule* System::TimeZoneInfo::GetApplicableRule(System::DateTime dateTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::GetApplicableRule");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetApplicableRule", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dateTime)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeZoneInfo::AdjustmentRule*, false>(this, ___internal__method, dateTime);
}
// Autogenerated method: System.TimeZoneInfo.TryGetTransitionOffset
bool System::TimeZoneInfo::TryGetTransitionOffset(System::DateTime dateTime, System::TimeSpan& offset, bool& isDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::TryGetTransitionOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TryGetTransitionOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dateTime, offset, isDst)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, dateTime, offset, isDst);
}
// Autogenerated method: System.TimeZoneInfo.TransitionPoint
System::DateTime System::TimeZoneInfo::TransitionPoint(System::TimeZoneInfo::TransitionTime transition, int year) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::TransitionPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "TransitionPoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(transition, year)));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, transition, year);
}
// Autogenerated method: System.TimeZoneInfo.ValidateRules
::Array<System::TimeZoneInfo::AdjustmentRule*>* System::TimeZoneInfo::ValidateRules(System::Collections::Generic::List_1<System::TimeZoneInfo::AdjustmentRule*>* adjustmentRules) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::ValidateRules");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "ValidateRules", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(adjustmentRules)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::TimeZoneInfo::AdjustmentRule*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, adjustmentRules);
}
// Autogenerated method: System.TimeZoneInfo.BuildFromStream
System::TimeZoneInfo* System::TimeZoneInfo::BuildFromStream(::Il2CppString* id, System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::BuildFromStream");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "BuildFromStream", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(id, stream)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeZoneInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, id, stream);
}
// Autogenerated method: System.TimeZoneInfo.ValidTZFile
bool System::TimeZoneInfo::ValidTZFile(::Array<uint8_t>* buffer, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::ValidTZFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "ValidTZFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, length)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, buffer, length);
}
// Autogenerated method: System.TimeZoneInfo.SwapInt32
int System::TimeZoneInfo::SwapInt32(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::SwapInt32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "SwapInt32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(i)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, i);
}
// Autogenerated method: System.TimeZoneInfo.ReadBigEndianInt32
int System::TimeZoneInfo::ReadBigEndianInt32(::Array<uint8_t>* buffer, int start) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::ReadBigEndianInt32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "ReadBigEndianInt32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, start)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, buffer, start);
}
// Autogenerated method: System.TimeZoneInfo.ParseTZBuffer
System::TimeZoneInfo* System::TimeZoneInfo::ParseTZBuffer(::Il2CppString* id, ::Array<uint8_t>* buffer, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::ParseTZBuffer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "ParseTZBuffer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(id, buffer, length)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeZoneInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, id, buffer, length);
}
// Autogenerated method: System.TimeZoneInfo.ParseAbbreviations
System::Collections::Generic::Dictionary_2<int, ::Il2CppString*>* System::TimeZoneInfo::ParseAbbreviations(::Array<uint8_t>* buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::ParseAbbreviations");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "ParseAbbreviations", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, index, count)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::Dictionary_2<int, ::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, buffer, index, count);
}
// Autogenerated method: System.TimeZoneInfo.ParseTimesTypes
System::Collections::Generic::Dictionary_2<int, System::TimeType*>* System::TimeZoneInfo::ParseTimesTypes(::Array<uint8_t>* buffer, int index, int count, System::Collections::Generic::Dictionary_2<int, ::Il2CppString*>* abbreviations) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::ParseTimesTypes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "ParseTimesTypes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, index, count, abbreviations)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::Dictionary_2<int, System::TimeType*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, buffer, index, count, abbreviations);
}
// Autogenerated method: System.TimeZoneInfo.ParseTransitions
System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<System::DateTime, System::TimeType*>>* System::TimeZoneInfo::ParseTransitions(::Array<uint8_t>* buffer, int index, int count, System::Collections::Generic::Dictionary_2<int, System::TimeType*>* time_types) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::ParseTransitions");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "ParseTransitions", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, index, count, time_types)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<System::Collections::Generic::KeyValuePair_2<System::DateTime, System::TimeType*>>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, buffer, index, count, time_types);
}
// Autogenerated method: System.TimeZoneInfo.DateTimeFromUnixTime
System::DateTime System::TimeZoneInfo::DateTimeFromUnixTime(int64_t unix_time) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::DateTimeFromUnixTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "DateTimeFromUnixTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(unix_time)));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, unix_time);
}
// Autogenerated method: System.TimeZoneInfo.GetLocalUtcOffset
System::TimeSpan System::TimeZoneInfo::GetLocalUtcOffset(System::DateTime dateTime, System::TimeZoneInfoOptions flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::GetLocalUtcOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetLocalUtcOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dateTime, flags)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dateTime, flags);
}
// Autogenerated method: System.TimeZoneInfo.GetUtcOffset
System::TimeSpan System::TimeZoneInfo::GetUtcOffset(System::DateTime dateTime, System::TimeZoneInfoOptions flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::GetUtcOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetUtcOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dateTime, flags)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(this, ___internal__method, dateTime, flags);
}
// Autogenerated method: System.TimeZoneInfo.GetUtcOffsetFromUtc
System::TimeSpan System::TimeZoneInfo::GetUtcOffsetFromUtc(System::DateTime time, System::TimeZoneInfo* zone, bool& isDaylightSavings, bool& isAmbiguousLocalDst) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::GetUtcOffsetFromUtc");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo", "GetUtcOffsetFromUtc", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(time, zone, isDaylightSavings, isAmbiguousLocalDst)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time, zone, isDaylightSavings, isAmbiguousLocalDst);
}
// Autogenerated method: System.TimeZoneInfo.Equals
bool System::TimeZoneInfo::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.TimeZoneInfo.Equals
bool System::TimeZoneInfo::Equals(System::TimeZoneInfo* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.TimeZoneInfo.GetHashCode
int System::TimeZoneInfo::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo.System.Runtime.Serialization.ISerializable.GetObjectData
void System::TimeZoneInfo::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::System.Runtime.Serialization.ISerializable.GetObjectData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(info, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.TimeZoneInfo.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
void System::TimeZoneInfo::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::System.Runtime.Serialization.IDeserializationCallback.OnDeserialization");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.IDeserializationCallback.OnDeserialization", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sender)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: System.TimeZoneInfo.ToString
::Il2CppString* System::TimeZoneInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.TimeZoneInfo/AdjustmentRule
#include "System/TimeZoneInfo_AdjustmentRule.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.get_DateStart
System::DateTime System::TimeZoneInfo::AdjustmentRule::get_DateStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::AdjustmentRule::get_DateStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DateStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.get_DateEnd
System::DateTime System::TimeZoneInfo::AdjustmentRule::get_DateEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::AdjustmentRule::get_DateEnd");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DateEnd", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.get_DaylightDelta
System::TimeSpan System::TimeZoneInfo::AdjustmentRule::get_DaylightDelta() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::AdjustmentRule::get_DaylightDelta");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DaylightDelta", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.get_DaylightTransitionStart
System::TimeZoneInfo::TransitionTime System::TimeZoneInfo::AdjustmentRule::get_DaylightTransitionStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::AdjustmentRule::get_DaylightTransitionStart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DaylightTransitionStart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::TimeZoneInfo::TransitionTime, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.get_DaylightTransitionEnd
System::TimeZoneInfo::TransitionTime System::TimeZoneInfo::AdjustmentRule::get_DaylightTransitionEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::AdjustmentRule::get_DaylightTransitionEnd");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DaylightTransitionEnd", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::TimeZoneInfo::TransitionTime, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.CreateAdjustmentRule
System::TimeZoneInfo::AdjustmentRule* System::TimeZoneInfo::AdjustmentRule::CreateAdjustmentRule(System::DateTime dateStart, System::DateTime dateEnd, System::TimeSpan daylightDelta, System::TimeZoneInfo::TransitionTime daylightTransitionStart, System::TimeZoneInfo::TransitionTime daylightTransitionEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::AdjustmentRule::CreateAdjustmentRule");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo/AdjustmentRule", "CreateAdjustmentRule", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dateStart, dateEnd, daylightDelta, daylightTransitionStart, daylightTransitionEnd)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeZoneInfo::AdjustmentRule*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dateStart, dateEnd, daylightDelta, daylightTransitionStart, daylightTransitionEnd);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.CreateAdjustmentRule
System::TimeZoneInfo::AdjustmentRule* System::TimeZoneInfo::AdjustmentRule::CreateAdjustmentRule(System::DateTime dateStart, System::DateTime dateEnd, System::TimeSpan daylightDelta, System::TimeZoneInfo::TransitionTime daylightTransitionStart, System::TimeZoneInfo::TransitionTime daylightTransitionEnd, System::TimeSpan baseUtcOffsetDelta) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::AdjustmentRule::CreateAdjustmentRule");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo/AdjustmentRule", "CreateAdjustmentRule", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dateStart, dateEnd, daylightDelta, daylightTransitionStart, daylightTransitionEnd, baseUtcOffsetDelta)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeZoneInfo::AdjustmentRule*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dateStart, dateEnd, daylightDelta, daylightTransitionStart, daylightTransitionEnd, baseUtcOffsetDelta);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.ValidateAdjustmentRule
void System::TimeZoneInfo::AdjustmentRule::ValidateAdjustmentRule(System::DateTime dateStart, System::DateTime dateEnd, System::TimeSpan daylightDelta, System::TimeZoneInfo::TransitionTime daylightTransitionStart, System::TimeZoneInfo::TransitionTime daylightTransitionEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::AdjustmentRule::ValidateAdjustmentRule");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo/AdjustmentRule", "ValidateAdjustmentRule", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dateStart, dateEnd, daylightDelta, daylightTransitionStart, daylightTransitionEnd)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dateStart, dateEnd, daylightDelta, daylightTransitionStart, daylightTransitionEnd);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.Equals
bool System::TimeZoneInfo::AdjustmentRule::Equals(System::TimeZoneInfo::AdjustmentRule* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::AdjustmentRule::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.GetHashCode
int System::TimeZoneInfo::AdjustmentRule::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::AdjustmentRule::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
void System::TimeZoneInfo::AdjustmentRule::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::AdjustmentRule::System.Runtime.Serialization.IDeserializationCallback.OnDeserialization");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.IDeserializationCallback.OnDeserialization", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sender)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: System.TimeZoneInfo/AdjustmentRule.System.Runtime.Serialization.ISerializable.GetObjectData
void System::TimeZoneInfo::AdjustmentRule::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::AdjustmentRule::System.Runtime.Serialization.ISerializable.GetObjectData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(info, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.TimeZoneInfo/TransitionTime
#include "System/TimeZoneInfo_TransitionTime.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.TimeZoneInfo/TransitionTime.get_TimeOfDay
System::DateTime System::TimeZoneInfo::TransitionTime::get_TimeOfDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::TransitionTime::get_TimeOfDay");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_TimeOfDay", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(*this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.get_Month
int System::TimeZoneInfo::TransitionTime::get_Month() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::TransitionTime::get_Month");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_Month", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.get_Week
int System::TimeZoneInfo::TransitionTime::get_Week() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::TransitionTime::get_Week");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_Week", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.get_Day
int System::TimeZoneInfo::TransitionTime::get_Day() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::TransitionTime::get_Day");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_Day", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.get_DayOfWeek
System::DayOfWeek System::TimeZoneInfo::TransitionTime::get_DayOfWeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::TransitionTime::get_DayOfWeek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_DayOfWeek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::DayOfWeek, false>(*this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.get_IsFixedDateRule
bool System::TimeZoneInfo::TransitionTime::get_IsFixedDateRule() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::TransitionTime::get_IsFixedDateRule");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_IsFixedDateRule", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.CreateFixedDateRule
System::TimeZoneInfo::TransitionTime System::TimeZoneInfo::TransitionTime::CreateFixedDateRule(System::DateTime timeOfDay, int month, int day) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::TransitionTime::CreateFixedDateRule");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo/TransitionTime", "CreateFixedDateRule", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timeOfDay, month, day)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeZoneInfo::TransitionTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, timeOfDay, month, day);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.CreateFloatingDateRule
System::TimeZoneInfo::TransitionTime System::TimeZoneInfo::TransitionTime::CreateFloatingDateRule(System::DateTime timeOfDay, int month, int week, System::DayOfWeek dayOfWeek) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::TransitionTime::CreateFloatingDateRule");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo/TransitionTime", "CreateFloatingDateRule", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timeOfDay, month, week, dayOfWeek)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeZoneInfo::TransitionTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, timeOfDay, month, week, dayOfWeek);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.CreateTransitionTime
System::TimeZoneInfo::TransitionTime System::TimeZoneInfo::TransitionTime::CreateTransitionTime(System::DateTime timeOfDay, int month, int week, int day, System::DayOfWeek dayOfWeek, bool isFixedDateRule) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::TransitionTime::CreateTransitionTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo/TransitionTime", "CreateTransitionTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timeOfDay, month, week, day, dayOfWeek, isFixedDateRule)));
  return ::il2cpp_utils::RunMethodThrow<System::TimeZoneInfo::TransitionTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, timeOfDay, month, week, day, dayOfWeek, isFixedDateRule);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.ValidateTransitionTime
void System::TimeZoneInfo::TransitionTime::ValidateTransitionTime(System::DateTime timeOfDay, int month, int week, int day, System::DayOfWeek dayOfWeek) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::TransitionTime::ValidateTransitionTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo/TransitionTime", "ValidateTransitionTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(timeOfDay, month, week, day, dayOfWeek)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, timeOfDay, month, week, day, dayOfWeek);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.Equals
bool System::TimeZoneInfo::TransitionTime::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::TransitionTime::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.Equals
bool System::TimeZoneInfo::TransitionTime::Equals(System::TimeZoneInfo::TransitionTime other) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::TransitionTime::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, other);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.GetHashCode
int System::TimeZoneInfo::TransitionTime::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::TransitionTime::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
void System::TimeZoneInfo::TransitionTime::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::TransitionTime::System.Runtime.Serialization.IDeserializationCallback.OnDeserialization");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.Runtime.Serialization.IDeserializationCallback.OnDeserialization", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sender)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, sender);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.System.Runtime.Serialization.ISerializable.GetObjectData
void System::TimeZoneInfo::TransitionTime::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::TransitionTime::System.Runtime.Serialization.ISerializable.GetObjectData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(info, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, info, context);
}
// Autogenerated method: System.TimeZoneInfo/TransitionTime.op_Inequality
bool System::operator !=(const System::TimeZoneInfo::TransitionTime& t1, const System::TimeZoneInfo::TransitionTime& t2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::TransitionTime::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TimeZoneInfo/TransitionTime", "op_Inequality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t1, t2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t1, t2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.TimeZoneInfo/<>c
#include "System/TimeZoneInfo_--c.hpp"
// Including type: System.Comparison`1
#include "System/Comparison_1.hpp"
// Including type: System.TimeZoneInfo/AdjustmentRule
#include "System/TimeZoneInfo_AdjustmentRule.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.TimeZoneInfo/<>c <>9
System::TimeZoneInfo::$$c* System::TimeZoneInfo::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::TimeZoneInfo::$$c*>("System", "TimeZoneInfo/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.TimeZoneInfo/<>c <>9
void System::TimeZoneInfo::$$c::_set_$$9(System::TimeZoneInfo::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System", "TimeZoneInfo/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Comparison`1<System.TimeZoneInfo/AdjustmentRule> <>9__19_0
System::Comparison_1<System::TimeZoneInfo::AdjustmentRule*>* System::TimeZoneInfo::$$c::_get_$$9__19_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::$$c::_get_$$9__19_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Comparison_1<System::TimeZoneInfo::AdjustmentRule*>*>("System", "TimeZoneInfo/<>c", "<>9__19_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Comparison`1<System.TimeZoneInfo/AdjustmentRule> <>9__19_0
void System::TimeZoneInfo::$$c::_set_$$9__19_0(System::Comparison_1<System::TimeZoneInfo::AdjustmentRule*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::$$c::_set_$$9__19_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System", "TimeZoneInfo/<>c", "<>9__19_0", value)));
}
// Autogenerated method: System.TimeZoneInfo/<>c..cctor
void System::TimeZoneInfo::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System", "TimeZoneInfo/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.TimeZoneInfo/<>c.<CreateLocalUnity>b__19_0
int System::TimeZoneInfo::$$c::$CreateLocalUnity$b__19_0(System::TimeZoneInfo::AdjustmentRule* rule1, System::TimeZoneInfo::AdjustmentRule* rule2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TimeZoneInfo::$$c::<CreateLocalUnity>b__19_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateLocalUnity>b__19_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rule1, rule2))));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, rule1, rule2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.TimeZoneNotFoundException
#include "System/TimeZoneNotFoundException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MemberFilter
#include "System/Reflection/MemberFilter.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Reflection.AssemblyName
#include "System/Reflection/AssemblyName.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Func`4
#include "System/Func_4.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: System.Reflection.CallingConventions
#include "System/Reflection/CallingConventions.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: System.Reflection.TypeFilter
#include "System/Reflection/TypeFilter.hpp"
// Including type: System.Reflection.EventInfo
#include "System/Reflection/EventInfo.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Reflection.MemberTypes
#include "System/Reflection/MemberTypes.hpp"
// Including type: System.Reflection.TypeAttributes
#include "System/Reflection/TypeAttributes.hpp"
// Including type: System.Reflection.GenericParameterAttributes
#include "System/Reflection/GenericParameterAttributes.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Reflection.Module
#include "System/Reflection/Module.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Reflection.MemberFilter FilterAttribute
System::Reflection::MemberFilter* System::Type::_get_FilterAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::_get_FilterAttribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MemberFilter*>("System", "Type", "FilterAttribute"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Reflection.MemberFilter FilterAttribute
void System::Type::_set_FilterAttribute(System::Reflection::MemberFilter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::_set_FilterAttribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Type", "FilterAttribute", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Reflection.MemberFilter FilterName
System::Reflection::MemberFilter* System::Type::_get_FilterName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::_get_FilterName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MemberFilter*>("System", "Type", "FilterName"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Reflection.MemberFilter FilterName
void System::Type::_set_FilterName(System::Reflection::MemberFilter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::_set_FilterName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Type", "FilterName", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Reflection.MemberFilter FilterNameIgnoreCase
System::Reflection::MemberFilter* System::Type::_get_FilterNameIgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::_get_FilterNameIgnoreCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MemberFilter*>("System", "Type", "FilterNameIgnoreCase"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Reflection.MemberFilter FilterNameIgnoreCase
void System::Type::_set_FilterNameIgnoreCase(System::Reflection::MemberFilter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::_set_FilterNameIgnoreCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Type", "FilterNameIgnoreCase", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Object Missing
::Il2CppObject* System::Type::_get_Missing() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::_get_Missing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System", "Type", "Missing"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Object Missing
void System::Type::_set_Missing(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::_set_Missing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Type", "Missing", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char Delimiter
::Il2CppChar System::Type::_get_Delimiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::_get_Delimiter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System", "Type", "Delimiter"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char Delimiter
void System::Type::_set_Delimiter(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::_set_Delimiter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Type", "Delimiter", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Type[] EmptyTypes
::Array<System::Type*>* System::Type::_get_EmptyTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::_get_EmptyTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<System::Type*>*>("System", "Type", "EmptyTypes"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Type[] EmptyTypes
void System::Type::_set_EmptyTypes(::Array<System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::_set_EmptyTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Type", "EmptyTypes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.Binder defaultBinder
System::Reflection::Binder* System::Type::_get_defaultBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::_get_defaultBinder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::Binder*>("System", "Type", "defaultBinder"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.Binder defaultBinder
void System::Type::_set_defaultBinder(System::Reflection::Binder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::_set_defaultBinder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Type", "defaultBinder", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.BindingFlags DefaultLookup
System::Reflection::BindingFlags System::Type::_get_DefaultLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::_get_DefaultLookup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System", "Type", "DefaultLookup"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.BindingFlags DefaultLookup
void System::Type::_set_DefaultLookup(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::_set_DefaultLookup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Type", "DefaultLookup", value));
}
// Autogenerated static field getter
// Get static field: static System.Reflection.BindingFlags DeclaredOnlyLookup
System::Reflection::BindingFlags System::Type::_get_DeclaredOnlyLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::_get_DeclaredOnlyLookup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::BindingFlags>("System", "Type", "DeclaredOnlyLookup"));
}
// Autogenerated static field setter
// Set static field: static System.Reflection.BindingFlags DeclaredOnlyLookup
void System::Type::_set_DeclaredOnlyLookup(System::Reflection::BindingFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::_set_DeclaredOnlyLookup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Type", "DeclaredOnlyLookup", value));
}
// Autogenerated method: System.Type.get_DeclaringMethod
System::Reflection::MethodBase* System::Type::get_DeclaringMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_DeclaringMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DeclaringMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodBase*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.GetType
System::Type* System::Type::GetType(::Il2CppString* typeName, System::Func_2<System::Reflection::AssemblyName*, System::Reflection::Assembly*>* assemblyResolver, System::Func_4<System::Reflection::Assembly*, ::Il2CppString*, bool, System::Type*>* typeResolver, bool throwOnError) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Type", "GetType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(typeName, assemblyResolver, typeResolver, throwOnError)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, typeName, assemblyResolver, typeResolver, throwOnError);
}
// Autogenerated method: System.Type.MakePointerType
System::Type* System::Type::MakePointerType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::MakePointerType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MakePointerType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.MakeByRefType
System::Type* System::Type::MakeByRefType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::MakeByRefType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MakeByRefType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.MakeArrayType
System::Type* System::Type::MakeArrayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::MakeArrayType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MakeArrayType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.MakeArrayType
System::Type* System::Type::MakeArrayType(int rank) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::MakeArrayType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MakeArrayType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rank)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, rank);
}
// Autogenerated method: System.Type.GetTypeCode
System::TypeCode System::Type::GetTypeCode(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetTypeCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Type", "GetTypeCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<System::TypeCode, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Type.GetTypeCodeImpl
System::TypeCode System::Type::GetTypeCodeImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetTypeCodeImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTypeCodeImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::TypeCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_DefaultBinder
System::Reflection::Binder* System::Type::get_DefaultBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_DefaultBinder");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Type", "get_DefaultBinder", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Binder*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Type.CreateBinder
void System::Type::CreateBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::CreateBinder");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Type", "CreateBinder", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Type.InvokeMember
::Il2CppObject* System::Type::InvokeMember(::Il2CppString* name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder* binder, ::Il2CppObject* target, ::Array<::Il2CppObject*>* args, ::Array<System::Reflection::ParameterModifier>* modifiers, System::Globalization::CultureInfo* culture, ::Array<::Il2CppString*>* namedParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::InvokeMember");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InvokeMember", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, invokeAttr, binder, target, args, modifiers, culture, namedParameters)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, name, invokeAttr, binder, target, args, modifiers, culture, namedParameters);
}
// Autogenerated method: System.Type.get_Assembly
System::Reflection::Assembly* System::Type::get_Assembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_Assembly");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Assembly", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Assembly*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_TypeHandle
System::RuntimeTypeHandle System::Type::get_TypeHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_TypeHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeTypeHandle, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.GetTypeHandle
System::RuntimeTypeHandle System::Type::GetTypeHandle(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetTypeHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Type", "GetTypeHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(o)));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeTypeHandle, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, o);
}
// Autogenerated method: System.Type.get_FullName
::Il2CppString* System::Type::get_FullName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_FullName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_FullName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_Namespace
::Il2CppString* System::Type::get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_Namespace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Namespace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_AssemblyQualifiedName
::Il2CppString* System::Type::get_AssemblyQualifiedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_AssemblyQualifiedName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AssemblyQualifiedName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.GetArrayRank
int System::Type::GetArrayRank() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetArrayRank");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetArrayRank", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_BaseType
System::Type* System::Type::get_BaseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_BaseType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_BaseType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.GetConstructor
System::Reflection::ConstructorInfo* System::Type::GetConstructor(System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder* binder, System::Reflection::CallingConventions callConvention, ::Array<System::Type*>* types, ::Array<System::Reflection::ParameterModifier>* modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetConstructor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetConstructor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bindingAttr, binder, callConvention, types, modifiers)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::ConstructorInfo*, false>(this, ___internal__method, bindingAttr, binder, callConvention, types, modifiers);
}
// Autogenerated method: System.Type.GetConstructor
System::Reflection::ConstructorInfo* System::Type::GetConstructor(System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder* binder, ::Array<System::Type*>* types, ::Array<System::Reflection::ParameterModifier>* modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetConstructor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetConstructor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bindingAttr, binder, types, modifiers)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::ConstructorInfo*, false>(this, ___internal__method, bindingAttr, binder, types, modifiers);
}
// Autogenerated method: System.Type.GetConstructor
System::Reflection::ConstructorInfo* System::Type::GetConstructor(::Array<System::Type*>* types) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetConstructor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetConstructor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(types)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::ConstructorInfo*, false>(this, ___internal__method, types);
}
// Autogenerated method: System.Type.GetConstructorImpl
System::Reflection::ConstructorInfo* System::Type::GetConstructorImpl(System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder* binder, System::Reflection::CallingConventions callConvention, ::Array<System::Type*>* types, ::Array<System::Reflection::ParameterModifier>* modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetConstructorImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetConstructorImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bindingAttr, binder, callConvention, types, modifiers)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::ConstructorInfo*, false>(this, ___internal__method, bindingAttr, binder, callConvention, types, modifiers);
}
// Autogenerated method: System.Type.GetConstructors
::Array<System::Reflection::ConstructorInfo*>* System::Type::GetConstructors() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetConstructors");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetConstructors", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::ConstructorInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.GetConstructors
::Array<System::Reflection::ConstructorInfo*>* System::Type::GetConstructors(System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetConstructors");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetConstructors", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::ConstructorInfo*>*, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.Type.GetMethod
System::Reflection::MethodInfo* System::Type::GetMethod(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder* binder, ::Array<System::Type*>* types, ::Array<System::Reflection::ParameterModifier>* modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr, binder, types, modifiers)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(this, ___internal__method, name, bindingAttr, binder, types, modifiers);
}
// Autogenerated method: System.Type.GetMethod
System::Reflection::MethodInfo* System::Type::GetMethod(::Il2CppString* name, ::Array<System::Type*>* types) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, types)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(this, ___internal__method, name, types);
}
// Autogenerated method: System.Type.GetMethod
System::Reflection::MethodInfo* System::Type::GetMethod(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.Type.GetMethod
System::Reflection::MethodInfo* System::Type::GetMethod(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Type.GetMethodImpl
System::Reflection::MethodInfo* System::Type::GetMethodImpl(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder* binder, System::Reflection::CallingConventions callConvention, ::Array<System::Type*>* types, ::Array<System::Reflection::ParameterModifier>* modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetMethodImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMethodImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr, binder, callConvention, types, modifiers)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(this, ___internal__method, name, bindingAttr, binder, callConvention, types, modifiers);
}
// Autogenerated method: System.Type.GetMethods
::Array<System::Reflection::MethodInfo*>* System::Type::GetMethods() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetMethods");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMethods", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::MethodInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.GetMethods
::Array<System::Reflection::MethodInfo*>* System::Type::GetMethods(System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetMethods");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMethods", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::MethodInfo*>*, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.Type.GetField
System::Reflection::FieldInfo* System::Type::GetField(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::FieldInfo*, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.Type.GetField
System::Reflection::FieldInfo* System::Type::GetField(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::FieldInfo*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Type.GetFields
::Array<System::Reflection::FieldInfo*>* System::Type::GetFields() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetFields");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetFields", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::FieldInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.GetFields
::Array<System::Reflection::FieldInfo*>* System::Type::GetFields(System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetFields");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetFields", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::FieldInfo*>*, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.Type.GetInterfaces
::Array<System::Type*>* System::Type::GetInterfaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetInterfaces");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInterfaces", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.FindInterfaces
::Array<System::Type*>* System::Type::FindInterfaces(System::Reflection::TypeFilter* filter, ::Il2CppObject* filterCriteria) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::FindInterfaces");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FindInterfaces", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(filter, filterCriteria)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Type*>*, false>(this, ___internal__method, filter, filterCriteria);
}
// Autogenerated method: System.Type.GetEvent
System::Reflection::EventInfo* System::Type::GetEvent(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::EventInfo*, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.Type.GetProperty
System::Reflection::PropertyInfo* System::Type::GetProperty(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetProperty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetProperty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::PropertyInfo*, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.Type.GetProperty
System::Reflection::PropertyInfo* System::Type::GetProperty(::Il2CppString* name, System::Type* returnType, ::Array<System::Type*>* types) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetProperty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetProperty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, returnType, types)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::PropertyInfo*, false>(this, ___internal__method, name, returnType, types);
}
// Autogenerated method: System.Type.GetProperty
System::Reflection::PropertyInfo* System::Type::GetProperty(::Il2CppString* name, System::Type* returnType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetProperty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetProperty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, returnType)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::PropertyInfo*, false>(this, ___internal__method, name, returnType);
}
// Autogenerated method: System.Type.GetProperty
System::Reflection::PropertyInfo* System::Type::GetProperty(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetProperty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetProperty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::PropertyInfo*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Type.GetPropertyImpl
System::Reflection::PropertyInfo* System::Type::GetPropertyImpl(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder* binder, System::Type* returnType, ::Array<System::Type*>* types, ::Array<System::Reflection::ParameterModifier>* modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetPropertyImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPropertyImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr, binder, returnType, types, modifiers)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::PropertyInfo*, false>(this, ___internal__method, name, bindingAttr, binder, returnType, types, modifiers);
}
// Autogenerated method: System.Type.GetProperties
::Array<System::Reflection::PropertyInfo*>* System::Type::GetProperties(System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetProperties");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetProperties", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::PropertyInfo*>*, false>(this, ___internal__method, bindingAttr);
}
// Autogenerated method: System.Type.GetProperties
::Array<System::Reflection::PropertyInfo*>* System::Type::GetProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetProperties");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetProperties", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::PropertyInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.GetNestedType
System::Type* System::Type::GetNestedType(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetNestedType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetNestedType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Type.GetNestedType
System::Type* System::Type::GetNestedType(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetNestedType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetNestedType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.Type.GetMember
::Array<System::Reflection::MemberInfo*>* System::Type::GetMember(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetMember");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMember", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::MemberInfo*>*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Type.GetMember
::Array<System::Reflection::MemberInfo*>* System::Type::GetMember(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetMember");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMember", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::MemberInfo*>*, false>(this, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.Type.GetMember
::Array<System::Reflection::MemberInfo*>* System::Type::GetMember(::Il2CppString* name, System::Reflection::MemberTypes type, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetMember");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMember", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, type, bindingAttr)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::MemberInfo*>*, false>(this, ___internal__method, name, type, bindingAttr);
}
// Autogenerated method: System.Type.get_IsNested
bool System::Type::get_IsNested() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_IsNested");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsNested", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_Attributes
System::Reflection::TypeAttributes System::Type::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_Attributes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::TypeAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_GenericParameterAttributes
System::Reflection::GenericParameterAttributes System::Type::get_GenericParameterAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_GenericParameterAttributes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_GenericParameterAttributes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::GenericParameterAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsNotPublic
bool System::Type::get_IsNotPublic() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_IsNotPublic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsNotPublic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsPublic
bool System::Type::get_IsPublic() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_IsPublic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsPublic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsNestedPublic
bool System::Type::get_IsNestedPublic() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_IsNestedPublic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsNestedPublic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsNestedAssembly
bool System::Type::get_IsNestedAssembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_IsNestedAssembly");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsNestedAssembly", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsExplicitLayout
bool System::Type::get_IsExplicitLayout() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_IsExplicitLayout");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsExplicitLayout", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsClass
bool System::Type::get_IsClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_IsClass");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsClass", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsInterface
bool System::Type::get_IsInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_IsInterface");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsInterface", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsValueType
bool System::Type::get_IsValueType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_IsValueType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsValueType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsAbstract
bool System::Type::get_IsAbstract() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_IsAbstract");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsAbstract", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsSealed
bool System::Type::get_IsSealed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_IsSealed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsSealed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsEnum
bool System::Type::get_IsEnum() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_IsEnum");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsEnum", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsSerializable
bool System::Type::get_IsSerializable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_IsSerializable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsSerializable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsArray
bool System::Type::get_IsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_IsArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsSzArray
bool System::Type::get_IsSzArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_IsSzArray");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsSzArray", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsGenericType
bool System::Type::get_IsGenericType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_IsGenericType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsGenericType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsGenericTypeDefinition
bool System::Type::get_IsGenericTypeDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_IsGenericTypeDefinition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsGenericTypeDefinition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsGenericParameter
bool System::Type::get_IsGenericParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_IsGenericParameter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsGenericParameter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_GenericParameterPosition
int System::Type::get_GenericParameterPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_GenericParameterPosition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_GenericParameterPosition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_ContainsGenericParameters
bool System::Type::get_ContainsGenericParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_ContainsGenericParameters");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ContainsGenericParameters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.GetGenericParameterConstraints
::Array<System::Type*>* System::Type::GetGenericParameterConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetGenericParameterConstraints");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetGenericParameterConstraints", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsByRef
bool System::Type::get_IsByRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_IsByRef");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsByRef", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsPointer
bool System::Type::get_IsPointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_IsPointer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsPointer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsPrimitive
bool System::Type::get_IsPrimitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_IsPrimitive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsPrimitive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsCOMObject
bool System::Type::get_IsCOMObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_IsCOMObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsCOMObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_HasElementType
bool System::Type::get_HasElementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_HasElementType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_HasElementType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsContextful
bool System::Type::get_IsContextful() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_IsContextful");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsContextful", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_IsMarshalByRef
bool System::Type::get_IsMarshalByRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_IsMarshalByRef");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsMarshalByRef", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.IsValueTypeImpl
bool System::Type::IsValueTypeImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::IsValueTypeImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsValueTypeImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.GetAttributeFlagsImpl
System::Reflection::TypeAttributes System::Type::GetAttributeFlagsImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetAttributeFlagsImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAttributeFlagsImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::TypeAttributes, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.IsArrayImpl
bool System::Type::IsArrayImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::IsArrayImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsArrayImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.IsByRefImpl
bool System::Type::IsByRefImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::IsByRefImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsByRefImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.IsPointerImpl
bool System::Type::IsPointerImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::IsPointerImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsPointerImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.IsPrimitiveImpl
bool System::Type::IsPrimitiveImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::IsPrimitiveImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsPrimitiveImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.IsCOMObjectImpl
bool System::Type::IsCOMObjectImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::IsCOMObjectImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsCOMObjectImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.MakeGenericType
System::Type* System::Type::MakeGenericType(::Array<System::Type*>* typeArguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::MakeGenericType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MakeGenericType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(typeArguments)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, typeArguments);
}
// Creating initializer_list -> params proxy for: System.Type MakeGenericType(params System.Type[] typeArguments)
System::Type* System::Type::MakeGenericType(std::initializer_list<System::Type*> typeArguments) {
  return System::Type::MakeGenericType(::Array<System::Type*>::New(typeArguments));
}
// Autogenerated method: System.Type.IsContextfulImpl
bool System::Type::IsContextfulImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::IsContextfulImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsContextfulImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.IsMarshalByRefImpl
bool System::Type::IsMarshalByRefImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::IsMarshalByRefImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsMarshalByRefImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.GetElementType
System::Type* System::Type::GetElementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetElementType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetElementType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.GetGenericArguments
::Array<System::Type*>* System::Type::GetGenericArguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetGenericArguments");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetGenericArguments", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.GetGenericTypeDefinition
System::Type* System::Type::GetGenericTypeDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetGenericTypeDefinition");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetGenericTypeDefinition", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.HasElementTypeImpl
bool System::Type::HasElementTypeImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::HasElementTypeImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HasElementTypeImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.GetRootElementType
System::Type* System::Type::GetRootElementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetRootElementType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRootElementType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.GetEnumNames
::Array<::Il2CppString*>* System::Type::GetEnumNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetEnumNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEnumNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.GetEnumValues
System::Array* System::Type::GetEnumValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetEnumValues");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEnumValues", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Array*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.GetEnumRawConstantValues
System::Array* System::Type::GetEnumRawConstantValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetEnumRawConstantValues");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEnumRawConstantValues", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Array*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.GetEnumData
void System::Type::GetEnumData(::Array<::Il2CppString*>*& enumNames, System::Array*& enumValues) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetEnumData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEnumData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(enumNames, enumValues)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, enumNames, enumValues);
}
// Autogenerated method: System.Type.GetEnumUnderlyingType
System::Type* System::Type::GetEnumUnderlyingType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetEnumUnderlyingType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEnumUnderlyingType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.IsEnumDefined
bool System::Type::IsEnumDefined(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::IsEnumDefined");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsEnumDefined", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Type.GetEnumName
::Il2CppString* System::Type::GetEnumName(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetEnumName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEnumName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Type.BinarySearch
int System::Type::BinarySearch(System::Array* array, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::BinarySearch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Type", "BinarySearch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(array, value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, value);
}
// Autogenerated method: System.Type.IsIntegerType
bool System::Type::IsIntegerType(System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::IsIntegerType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Type", "IsIntegerType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: System.Type.get_UnderlyingSystemType
System::Type* System::Type::get_UnderlyingSystemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_UnderlyingSystemType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_UnderlyingSystemType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.IsSubclassOf
bool System::Type::IsSubclassOf(System::Type* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::IsSubclassOf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsSubclassOf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Type.IsInstanceOfType
bool System::Type::IsInstanceOfType(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::IsInstanceOfType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsInstanceOfType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(o)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated method: System.Type.IsAssignableFrom
bool System::Type::IsAssignableFrom(System::Type* c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::IsAssignableFrom");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsAssignableFrom", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated method: System.Type.IsEquivalentTo
bool System::Type::IsEquivalentTo(System::Type* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::IsEquivalentTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsEquivalentTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(other)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Type.ImplementInterface
bool System::Type::ImplementInterface(System::Type* ifaceType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::ImplementInterface");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ImplementInterface", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ifaceType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, ifaceType);
}
// Autogenerated method: System.Type.FormatTypeName
::Il2CppString* System::Type::FormatTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::FormatTypeName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FormatTypeName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.FormatTypeName
::Il2CppString* System::Type::FormatTypeName(bool serialization) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::FormatTypeName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FormatTypeName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(serialization)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, serialization);
}
// Autogenerated method: System.Type.Equals
bool System::Type::Equals(System::Type* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(o)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated method: System.Type.internal_from_name
System::Type* System::Type::internal_from_name(::Il2CppString* name, bool throwOnError, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::internal_from_name");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Type", "internal_from_name", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, throwOnError, ignoreCase)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, throwOnError, ignoreCase);
}
// Autogenerated method: System.Type.GetType
System::Type* System::Type::GetType(::Il2CppString* typeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Type", "GetType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(typeName)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, typeName);
}
// Autogenerated method: System.Type.GetType
System::Type* System::Type::GetType(::Il2CppString* typeName, bool throwOnError) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Type", "GetType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(typeName, throwOnError)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, typeName, throwOnError);
}
// Autogenerated method: System.Type.GetType
System::Type* System::Type::GetType(::Il2CppString* typeName, bool throwOnError, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Type", "GetType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(typeName, throwOnError, ignoreCase)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, typeName, throwOnError, ignoreCase);
}
// Autogenerated method: System.Type.GetTypeFromHandle
System::Type* System::Type::GetTypeFromHandle(System::RuntimeTypeHandle handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetTypeFromHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Type", "GetTypeFromHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Type.internal_from_handle
System::Type* System::Type::internal_from_handle(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::internal_from_handle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Type", "internal_from_handle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Type..cctor
void System::Type::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Type", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Type.get_MemberType
System::Reflection::MemberTypes System::Type::get_MemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_MemberType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_MemberType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MemberTypes, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_DeclaringType
System::Type* System::Type::get_DeclaringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_DeclaringType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DeclaringType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_ReflectedType
System::Type* System::Type::get_ReflectedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_ReflectedType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ReflectedType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.get_Module
System::Reflection::Module* System::Type::get_Module() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::get_Module");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Module", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Module*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.ToString
::Il2CppString* System::Type::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.Equals
bool System::Type::Equals(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(o)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated method: System.Type.GetHashCode
int System::Type::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.GetType
System::Type* System::Type::GetType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::GetType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Type.op_Equality
bool System::operator ==(System::Type* left, System::Type& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::op_Equality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Type", "op_Equality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(left, &right)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated method: System.Type.op_Inequality
bool System::operator !=(System::Type* left, System::Type& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Type::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Type", "op_Inequality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(left, &right)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.TypedReference
#include "System/TypedReference.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.TypedReference.MakeTypedReference
System::TypedReference System::TypedReference::MakeTypedReference(::Il2CppObject* target, ::Array<System::Reflection::FieldInfo*>* flds) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypedReference::MakeTypedReference");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TypedReference", "MakeTypedReference", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(target, flds)));
  return ::il2cpp_utils::RunMethodThrow<System::TypedReference, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, target, flds);
}
// Autogenerated method: System.TypedReference.MakeTypedReferenceInternal
System::TypedReference System::TypedReference::MakeTypedReferenceInternal(::Il2CppObject* target, ::Array<System::Reflection::FieldInfo*>* fields) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypedReference::MakeTypedReferenceInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TypedReference", "MakeTypedReferenceInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(target, fields)));
  return ::il2cpp_utils::RunMethodThrow<System::TypedReference, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, target, fields);
}
// Autogenerated method: System.TypedReference.get_IsNull
bool System::TypedReference::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypedReference::get_IsNull");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "get_IsNull", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: System.TypedReference.SetTypedReference
void System::TypedReference::SetTypedReference(System::TypedReference target, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypedReference::SetTypedReference");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TypedReference", "SetTypedReference", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(target, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, target, value);
}
// Autogenerated method: System.TypedReference.GetHashCode
int System::TypedReference::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypedReference::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.TypedReference.Equals
bool System::TypedReference::Equals(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypedReference::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(o)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, o);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.TypeInitializationException
#include "System/TypeInitializationException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.TypeInitializationException.get_TypeName
::Il2CppString* System::TypeInitializationException::get_TypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeInitializationException::get_TypeName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TypeName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.TypeInitializationException.GetObjectData
void System::TypeInitializationException::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeInitializationException::GetObjectData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(info, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
void System::TypeInitializationException::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  System::TypeInitializationException::GetObjectData(info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.TypeLoadException
#include "System/TypeLoadException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.TypeLoadException.SetMessageField
void System::TypeLoadException::SetMessageField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeLoadException::SetMessageField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetMessageField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.TypeLoadException.get_Message
::Il2CppString* System::TypeLoadException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeLoadException::get_Message");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.TypeLoadException.GetObjectData
void System::TypeLoadException::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeLoadException::GetObjectData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(info, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
void System::TypeLoadException::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  System::TypeLoadException::GetObjectData(info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.UInt16
#include "System/UInt16.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UInt16 MaxValue
uint16_t System::UInt16::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt16::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint16_t>("System", "UInt16", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt16 MaxValue
void System::UInt16::_set_MaxValue(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt16::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UInt16", "MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt16 MinValue
uint16_t System::UInt16::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt16::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint16_t>("System", "UInt16", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt16 MinValue
void System::UInt16::_set_MinValue(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt16::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UInt16", "MinValue", value));
}
// Autogenerated method: System.UInt16.ToString
::Il2CppString* System::UInt16::ToString(::Il2CppString* format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt16::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, format);
}
// Autogenerated method: System.UInt16.Parse
uint16_t System::UInt16::Parse(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt16::Parse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UInt16", "Parse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s)));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.UInt16.Parse
uint16_t System::UInt16::Parse(::Il2CppString* s, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt16::Parse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UInt16", "Parse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, provider)));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, provider);
}
// Autogenerated method: System.UInt16.Parse
uint16_t System::UInt16::Parse(::Il2CppString* s, System::Globalization::NumberStyles style, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt16::Parse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UInt16", "Parse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, style, provider)));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, provider);
}
// Autogenerated method: System.UInt16.Parse
uint16_t System::UInt16::Parse(::Il2CppString* s, System::Globalization::NumberStyles style, System::Globalization::NumberFormatInfo* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt16::Parse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UInt16", "Parse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, style, info)));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, info);
}
// Autogenerated method: System.UInt16.CompareTo
int System::UInt16::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt16::CompareTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, value);
}
int System::UInt16::System_IComparable_CompareTo(::Il2CppObject* value) {
  return System::UInt16::CompareTo(value);
}
// Autogenerated method: System.UInt16.CompareTo
int System::UInt16::CompareTo(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt16::CompareTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, value);
}
// Autogenerated method: System.UInt16.Equals
bool System::UInt16::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt16::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.UInt16.Equals
bool System::UInt16::Equals(uint16_t obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt16::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.UInt16.GetHashCode
int System::UInt16::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt16::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.UInt16.ToString
::Il2CppString* System::UInt16::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt16::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: System.UInt16.ToString
::Il2CppString* System::UInt16::ToString(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt16::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt16.ToString
::Il2CppString* System::UInt16::ToString(::Il2CppString* format, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt16::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, provider)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, format, provider);
}
// Autogenerated method: System.UInt16.GetTypeCode
System::TypeCode System::UInt16::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt16::GetTypeCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetTypeCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::TypeCode, false>(*this, ___internal__method);
}
// Autogenerated method: System.UInt16.System.IConvertible.ToBoolean
bool System::UInt16::System_IConvertible_ToBoolean(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt16::System.IConvertible.ToBoolean");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToBoolean", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt16.System.IConvertible.ToChar
::Il2CppChar System::UInt16::System_IConvertible_ToChar(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt16::System.IConvertible.ToChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt16.System.IConvertible.ToSByte
int8_t System::UInt16::System_IConvertible_ToSByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt16::System.IConvertible.ToSByte");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSByte", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt16.System.IConvertible.ToByte
uint8_t System::UInt16::System_IConvertible_ToByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt16::System.IConvertible.ToByte");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToByte", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt16.System.IConvertible.ToInt16
int16_t System::UInt16::System_IConvertible_ToInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt16::System.IConvertible.ToInt16");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt16", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt16.System.IConvertible.ToUInt16
uint16_t System::UInt16::System_IConvertible_ToUInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt16::System.IConvertible.ToUInt16");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt16", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt16.System.IConvertible.ToInt32
int System::UInt16::System_IConvertible_ToInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt16::System.IConvertible.ToInt32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt16.System.IConvertible.ToUInt32
uint System::UInt16::System_IConvertible_ToUInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt16::System.IConvertible.ToUInt32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt16.System.IConvertible.ToInt64
int64_t System::UInt16::System_IConvertible_ToInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt16::System.IConvertible.ToInt64");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt64", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt16.System.IConvertible.ToUInt64
uint64_t System::UInt16::System_IConvertible_ToUInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt16::System.IConvertible.ToUInt64");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt64", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt16.System.IConvertible.ToSingle
float System::UInt16::System_IConvertible_ToSingle(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt16::System.IConvertible.ToSingle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSingle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt16.System.IConvertible.ToDouble
double System::UInt16::System_IConvertible_ToDouble(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt16::System.IConvertible.ToDouble");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDouble", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt16.System.IConvertible.ToDecimal
System::Decimal System::UInt16::System_IConvertible_ToDecimal(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt16::System.IConvertible.ToDecimal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDecimal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<System::Decimal, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt16.System.IConvertible.ToDateTime
System::DateTime System::UInt16::System_IConvertible_ToDateTime(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt16::System.IConvertible.ToDateTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDateTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt16.System.IConvertible.ToType
::Il2CppObject* System::UInt16::System_IConvertible_ToType(System::Type* type, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt16::System.IConvertible.ToType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, provider)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(*this, ___internal__method, type, provider);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.UInt32
#include "System/UInt32.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UInt32 MaxValue
uint System::UInt32::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt32::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System", "UInt32", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 MaxValue
void System::UInt32::_set_MaxValue(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt32::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UInt32", "MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 MinValue
uint System::UInt32::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt32::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("System", "UInt32", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 MinValue
void System::UInt32::_set_MinValue(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt32::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UInt32", "MinValue", value));
}
// Autogenerated method: System.UInt32.Parse
uint System::UInt32::Parse(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt32::Parse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UInt32", "Parse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.UInt32.Parse
uint System::UInt32::Parse(::Il2CppString* s, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt32::Parse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UInt32", "Parse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, provider)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, provider);
}
// Autogenerated method: System.UInt32.Parse
uint System::UInt32::Parse(::Il2CppString* s, System::Globalization::NumberStyles style, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt32::Parse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UInt32", "Parse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, style, provider)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, provider);
}
// Autogenerated method: System.UInt32.TryParse
bool System::UInt32::TryParse(::Il2CppString* s, System::Globalization::NumberStyles style, System::IFormatProvider* provider, uint& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt32::TryParse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UInt32", "TryParse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, style, provider, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, provider, result);
}
// Autogenerated method: System.UInt32.CompareTo
int System::UInt32::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt32::CompareTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, value);
}
int System::UInt32::System_IComparable_CompareTo(::Il2CppObject* value) {
  return System::UInt32::CompareTo(value);
}
// Autogenerated method: System.UInt32.CompareTo
int System::UInt32::CompareTo(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt32::CompareTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, value);
}
// Autogenerated method: System.UInt32.Equals
bool System::UInt32::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt32::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.UInt32.Equals
bool System::UInt32::Equals(uint obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt32::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.UInt32.GetHashCode
int System::UInt32::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt32::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.UInt32.ToString
::Il2CppString* System::UInt32::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt32::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: System.UInt32.ToString
::Il2CppString* System::UInt32::ToString(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt32::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt32.ToString
::Il2CppString* System::UInt32::ToString(::Il2CppString* format, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt32::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, provider)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, format, provider);
}
// Autogenerated method: System.UInt32.GetTypeCode
System::TypeCode System::UInt32::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt32::GetTypeCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetTypeCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::TypeCode, false>(*this, ___internal__method);
}
// Autogenerated method: System.UInt32.System.IConvertible.ToBoolean
bool System::UInt32::System_IConvertible_ToBoolean(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt32::System.IConvertible.ToBoolean");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToBoolean", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt32.System.IConvertible.ToChar
::Il2CppChar System::UInt32::System_IConvertible_ToChar(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt32::System.IConvertible.ToChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt32.System.IConvertible.ToSByte
int8_t System::UInt32::System_IConvertible_ToSByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt32::System.IConvertible.ToSByte");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSByte", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt32.System.IConvertible.ToByte
uint8_t System::UInt32::System_IConvertible_ToByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt32::System.IConvertible.ToByte");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToByte", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt32.System.IConvertible.ToInt16
int16_t System::UInt32::System_IConvertible_ToInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt32::System.IConvertible.ToInt16");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt16", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt32.System.IConvertible.ToUInt16
uint16_t System::UInt32::System_IConvertible_ToUInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt32::System.IConvertible.ToUInt16");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt16", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt32.System.IConvertible.ToInt32
int System::UInt32::System_IConvertible_ToInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt32::System.IConvertible.ToInt32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt32.System.IConvertible.ToUInt32
uint System::UInt32::System_IConvertible_ToUInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt32::System.IConvertible.ToUInt32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt32.System.IConvertible.ToInt64
int64_t System::UInt32::System_IConvertible_ToInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt32::System.IConvertible.ToInt64");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt64", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt32.System.IConvertible.ToUInt64
uint64_t System::UInt32::System_IConvertible_ToUInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt32::System.IConvertible.ToUInt64");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt64", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt32.System.IConvertible.ToSingle
float System::UInt32::System_IConvertible_ToSingle(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt32::System.IConvertible.ToSingle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSingle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt32.System.IConvertible.ToDouble
double System::UInt32::System_IConvertible_ToDouble(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt32::System.IConvertible.ToDouble");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDouble", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt32.System.IConvertible.ToDecimal
System::Decimal System::UInt32::System_IConvertible_ToDecimal(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt32::System.IConvertible.ToDecimal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDecimal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<System::Decimal, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt32.System.IConvertible.ToDateTime
System::DateTime System::UInt32::System_IConvertible_ToDateTime(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt32::System.IConvertible.ToDateTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDateTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt32.System.IConvertible.ToType
::Il2CppObject* System::UInt32::System_IConvertible_ToType(System::Type* type, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt32::System.IConvertible.ToType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, provider)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(*this, ___internal__method, type, provider);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.UInt64
#include "System/UInt64.hpp"
// Including type: System.Globalization.NumberStyles
#include "System/Globalization/NumberStyles.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.TypeCode
#include "System/TypeCode.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UInt64 MaxValue
uint64_t System::UInt64::_get_MaxValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt64::_get_MaxValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System", "UInt64", "MaxValue"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 MaxValue
void System::UInt64::_set_MaxValue(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt64::_set_MaxValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UInt64", "MaxValue", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt64 MinValue
uint64_t System::UInt64::_get_MinValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt64::_get_MinValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>("System", "UInt64", "MinValue"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt64 MinValue
void System::UInt64::_set_MinValue(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt64::_set_MinValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UInt64", "MinValue", value));
}
// Autogenerated method: System.UInt64.ToString
::Il2CppString* System::UInt64::ToString(::Il2CppString* format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt64::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, format);
}
// Autogenerated method: System.UInt64.Parse
uint64_t System::UInt64::Parse(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt64::Parse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UInt64", "Parse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s)));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.UInt64.Parse
uint64_t System::UInt64::Parse(::Il2CppString* s, System::Globalization::NumberStyles style) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt64::Parse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UInt64", "Parse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, style)));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style);
}
// Autogenerated method: System.UInt64.Parse
uint64_t System::UInt64::Parse(::Il2CppString* s, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt64::Parse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UInt64", "Parse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, provider)));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, provider);
}
// Autogenerated method: System.UInt64.Parse
uint64_t System::UInt64::Parse(::Il2CppString* s, System::Globalization::NumberStyles style, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt64::Parse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UInt64", "Parse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(s, style, provider)));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, style, provider);
}
// Autogenerated method: System.UInt64.CompareTo
int System::UInt64::CompareTo(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt64::CompareTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, value);
}
int System::UInt64::System_IComparable_CompareTo(::Il2CppObject* value) {
  return System::UInt64::CompareTo(value);
}
// Autogenerated method: System.UInt64.CompareTo
int System::UInt64::CompareTo(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt64::CompareTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "CompareTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, value);
}
// Autogenerated method: System.UInt64.Equals
bool System::UInt64::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt64::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.UInt64.Equals
bool System::UInt64::Equals(uint64_t obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt64::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.UInt64.GetHashCode
int System::UInt64::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt64::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.UInt64.ToString
::Il2CppString* System::UInt64::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt64::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: System.UInt64.ToString
::Il2CppString* System::UInt64::ToString(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt64::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt64.ToString
::Il2CppString* System::UInt64::ToString(::Il2CppString* format, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt64::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format, provider)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, format, provider);
}
// Autogenerated method: System.UInt64.GetTypeCode
System::TypeCode System::UInt64::GetTypeCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt64::GetTypeCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetTypeCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::TypeCode, false>(*this, ___internal__method);
}
// Autogenerated method: System.UInt64.System.IConvertible.ToBoolean
bool System::UInt64::System_IConvertible_ToBoolean(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt64::System.IConvertible.ToBoolean");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToBoolean", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt64.System.IConvertible.ToChar
::Il2CppChar System::UInt64::System_IConvertible_ToChar(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt64::System.IConvertible.ToChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt64.System.IConvertible.ToSByte
int8_t System::UInt64::System_IConvertible_ToSByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt64::System.IConvertible.ToSByte");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSByte", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt64.System.IConvertible.ToByte
uint8_t System::UInt64::System_IConvertible_ToByte(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt64::System.IConvertible.ToByte");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToByte", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt64.System.IConvertible.ToInt16
int16_t System::UInt64::System_IConvertible_ToInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt64::System.IConvertible.ToInt16");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt16", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt64.System.IConvertible.ToUInt16
uint16_t System::UInt64::System_IConvertible_ToUInt16(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt64::System.IConvertible.ToUInt16");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt16", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt64.System.IConvertible.ToInt32
int System::UInt64::System_IConvertible_ToInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt64::System.IConvertible.ToInt32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt64.System.IConvertible.ToUInt32
uint System::UInt64::System_IConvertible_ToUInt32(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt64::System.IConvertible.ToUInt32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt64.System.IConvertible.ToInt64
int64_t System::UInt64::System_IConvertible_ToInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt64::System.IConvertible.ToInt64");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToInt64", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt64.System.IConvertible.ToUInt64
uint64_t System::UInt64::System_IConvertible_ToUInt64(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt64::System.IConvertible.ToUInt64");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToUInt64", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt64.System.IConvertible.ToSingle
float System::UInt64::System_IConvertible_ToSingle(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt64::System.IConvertible.ToSingle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToSingle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt64.System.IConvertible.ToDouble
double System::UInt64::System_IConvertible_ToDouble(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt64::System.IConvertible.ToDouble");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDouble", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<double, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt64.System.IConvertible.ToDecimal
System::Decimal System::UInt64::System_IConvertible_ToDecimal(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt64::System.IConvertible.ToDecimal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDecimal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<System::Decimal, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt64.System.IConvertible.ToDateTime
System::DateTime System::UInt64::System_IConvertible_ToDateTime(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt64::System.IConvertible.ToDateTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToDateTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider)));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(*this, ___internal__method, provider);
}
// Autogenerated method: System.UInt64.System.IConvertible.ToType
::Il2CppObject* System::UInt64::System_IConvertible_ToType(System::Type* type, System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UInt64::System.IConvertible.ToType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.IConvertible.ToType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, provider)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(*this, ___internal__method, type, provider);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.UnauthorizedAccessException
#include "System/UnauthorizedAccessException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.UnhandledExceptionEventArgs
#include "System/UnhandledExceptionEventArgs.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.UnhandledExceptionEventArgs.get_ExceptionObject
::Il2CppObject* System::UnhandledExceptionEventArgs::get_ExceptionObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UnhandledExceptionEventArgs::get_ExceptionObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ExceptionObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.UnhandledExceptionEventArgs.get_IsTerminating
bool System::UnhandledExceptionEventArgs::get_IsTerminating() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UnhandledExceptionEventArgs::get_IsTerminating");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsTerminating", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.UnhandledExceptionEventHandler
#include "System/UnhandledExceptionEventHandler.hpp"
// Including type: System.UnhandledExceptionEventArgs
#include "System/UnhandledExceptionEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.UnhandledExceptionEventHandler.Invoke
void System::UnhandledExceptionEventHandler::Invoke(::Il2CppObject* sender, System::UnhandledExceptionEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UnhandledExceptionEventHandler::Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sender, e)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.UnhandledExceptionEventHandler.BeginInvoke
System::IAsyncResult* System::UnhandledExceptionEventHandler::BeginInvoke(::Il2CppObject* sender, System::UnhandledExceptionEventArgs* e, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UnhandledExceptionEventHandler::BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sender, e, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: System.UnhandledExceptionEventHandler.EndInvoke
void System::UnhandledExceptionEventHandler::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UnhandledExceptionEventHandler::EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.UnitySerializationHolder
#include "System/UnitySerializationHolder.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Reflection.Missing
#include "System/Reflection/Missing.hpp"
// Including type: System.RuntimeType
#include "System/RuntimeType.hpp"
// Including type: System.Reflection.RuntimeAssembly
#include "System/Reflection/RuntimeAssembly.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.UnitySerializationHolder.GetUnitySerializationInfo
void System::UnitySerializationHolder::GetUnitySerializationInfo(System::Runtime::Serialization::SerializationInfo* info, System::Reflection::Missing* missing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UnitySerializationHolder::GetUnitySerializationInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UnitySerializationHolder", "GetUnitySerializationInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(info, missing)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, info, missing);
}
// Autogenerated method: System.UnitySerializationHolder.AddElementTypes
System::RuntimeType* System::UnitySerializationHolder::AddElementTypes(System::Runtime::Serialization::SerializationInfo* info, System::RuntimeType* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UnitySerializationHolder::AddElementTypes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UnitySerializationHolder", "AddElementTypes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(info, type)));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeType*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, info, type);
}
// Autogenerated method: System.UnitySerializationHolder.MakeElementTypes
System::Type* System::UnitySerializationHolder::MakeElementTypes(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UnitySerializationHolder::MakeElementTypes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MakeElementTypes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, type);
}
// Autogenerated method: System.UnitySerializationHolder.GetUnitySerializationInfo
void System::UnitySerializationHolder::GetUnitySerializationInfo(System::Runtime::Serialization::SerializationInfo* info, System::RuntimeType* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UnitySerializationHolder::GetUnitySerializationInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UnitySerializationHolder", "GetUnitySerializationInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(info, type)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, info, type);
}
// Autogenerated method: System.UnitySerializationHolder.GetUnitySerializationInfo
void System::UnitySerializationHolder::GetUnitySerializationInfo(System::Runtime::Serialization::SerializationInfo* info, int unityType, ::Il2CppString* data, System::Reflection::RuntimeAssembly* assembly) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UnitySerializationHolder::GetUnitySerializationInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UnitySerializationHolder", "GetUnitySerializationInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(info, unityType, data, assembly)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, info, unityType, data, assembly);
}
// Autogenerated method: System.UnitySerializationHolder.ThrowInsufficientInformation
void System::UnitySerializationHolder::ThrowInsufficientInformation(::Il2CppString* field) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UnitySerializationHolder::ThrowInsufficientInformation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ThrowInsufficientInformation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(field)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, field);
}
// Autogenerated method: System.UnitySerializationHolder.GetObjectData
void System::UnitySerializationHolder::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UnitySerializationHolder::GetObjectData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(info, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
void System::UnitySerializationHolder::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  System::UnitySerializationHolder::GetObjectData(info, context);
}
// Autogenerated method: System.UnitySerializationHolder.GetRealObject
::Il2CppObject* System::UnitySerializationHolder::GetRealObject(System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UnitySerializationHolder::GetRealObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRealObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, context);
}
::Il2CppObject* System::UnitySerializationHolder::System_Runtime_Serialization_IObjectReference_GetRealObject(System::Runtime::Serialization::StreamingContext context) {
  return System::UnitySerializationHolder::GetRealObject(context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.UnSafeCharBuffer
#include "System/UnSafeCharBuffer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.UnSafeCharBuffer.AppendString
void System::UnSafeCharBuffer::AppendString(::Il2CppString* stringToAppend) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::UnSafeCharBuffer::AppendString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "AppendString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stringToAppend)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stringToAppend);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.Version/ParseFailureKind
#include "System/Version_ParseFailureKind.hpp"
// Including type: System.Version/VersionResult
#include "System/Version_VersionResult.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] SeparatorsArray
::Array<::Il2CppChar>* System::Version::_get_SeparatorsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::_get_SeparatorsArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System", "Version", "SeparatorsArray"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] SeparatorsArray
void System::Version::_set_SeparatorsArray(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::_set_SeparatorsArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Version", "SeparatorsArray", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 ZERO_CHAR_VALUE
int System::Version::_get_ZERO_CHAR_VALUE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::_get_ZERO_CHAR_VALUE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Version", "ZERO_CHAR_VALUE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ZERO_CHAR_VALUE
void System::Version::_set_ZERO_CHAR_VALUE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::_set_ZERO_CHAR_VALUE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Version", "ZERO_CHAR_VALUE", value));
}
// Autogenerated method: System.Version.get_Major
int System::Version::get_Major() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::get_Major");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Major", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Version.get_Minor
int System::Version::get_Minor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::get_Minor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Minor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Version.get_Build
int System::Version::get_Build() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::get_Build");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Build", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Version.get_Revision
int System::Version::get_Revision() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::get_Revision");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Revision", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Version.ToString
::Il2CppString* System::Version::ToString(int fieldCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(fieldCount)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, fieldCount);
}
// Autogenerated method: System.Version.AppendPositiveNumber
void System::Version::AppendPositiveNumber(int num, System::Text::StringBuilder* sb) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::AppendPositiveNumber");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Version", "AppendPositiveNumber", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(num, sb)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, num, sb);
}
// Autogenerated method: System.Version.Parse
System::Version* System::Version::Parse(::Il2CppString* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::Parse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Version", "Parse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input)));
  return ::il2cpp_utils::RunMethodThrow<System::Version*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input);
}
// Autogenerated method: System.Version.TryParseVersion
bool System::Version::TryParseVersion(::Il2CppString* version, System::Version::VersionResult& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::TryParseVersion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Version", "TryParseVersion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(version, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, version, result);
}
// Autogenerated method: System.Version.TryParseComponent
bool System::Version::TryParseComponent(::Il2CppString* component, ::Il2CppString* componentName, System::Version::VersionResult& result, int& parsedComponent) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::TryParseComponent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Version", "TryParseComponent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(component, componentName, result, parsedComponent)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, component, componentName, result, parsedComponent);
}
// Autogenerated method: System.Version..cctor
void System::Version::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Version", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Version.Clone
::Il2CppObject* System::Version::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::Clone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* System::Version::System_ICloneable_Clone() {
  return System::Version::Clone();
}
// Autogenerated method: System.Version.CompareTo
int System::Version::CompareTo(::Il2CppObject* version) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::CompareTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CompareTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(version)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, version);
}
int System::Version::System_IComparable_CompareTo(::Il2CppObject* version) {
  return System::Version::CompareTo(version);
}
// Autogenerated method: System.Version.CompareTo
int System::Version::CompareTo(System::Version* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::CompareTo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CompareTo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Version.Equals
bool System::Version::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Version.Equals
bool System::Version::Equals(System::Version* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Version.GetHashCode
int System::Version::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Version.ToString
::Il2CppString* System::Version::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Version.op_Equality
bool System::operator ==(System::Version* v1, System::Version& v2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::op_Equality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Version", "op_Equality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(v1, &v2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v1, &v2);
}
// Autogenerated method: System.Version.op_Inequality
bool System::operator !=(System::Version* v1, System::Version& v2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Version", "op_Inequality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(v1, &v2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v1, &v2);
}
// Autogenerated method: System.Version.op_LessThan
bool System::operator <(System::Version* v1, System::Version& v2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Version", "op_LessThan", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(v1, &v2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v1, &v2);
}
// Autogenerated method: System.Version.op_LessThanOrEqual
bool System::operator <=(System::Version* v1, System::Version& v2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::op_LessThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Version", "op_LessThanOrEqual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(v1, &v2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v1, &v2);
}
// Autogenerated method: System.Version.op_GreaterThan
bool System::operator >(System::Version* v1, System::Version& v2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::op_GreaterThan");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Version", "op_GreaterThan", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(v1, &v2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v1, &v2);
}
// Autogenerated method: System.Version.op_GreaterThanOrEqual
bool System::operator >=(System::Version* v1, System::Version& v2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::op_GreaterThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Version", "op_GreaterThanOrEqual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(v1, &v2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, v1, &v2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Version/ParseFailureKind
#include "System/Version_ParseFailureKind.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Version/ParseFailureKind ArgumentNullException
System::Version::ParseFailureKind System::Version::ParseFailureKind::_get_ArgumentNullException() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::ParseFailureKind::_get_ArgumentNullException");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version::ParseFailureKind>("System", "Version/ParseFailureKind", "ArgumentNullException"));
}
// Autogenerated static field setter
// Set static field: static public System.Version/ParseFailureKind ArgumentNullException
void System::Version::ParseFailureKind::_set_ArgumentNullException(System::Version::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::ParseFailureKind::_set_ArgumentNullException");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Version/ParseFailureKind", "ArgumentNullException", value));
}
// Autogenerated static field getter
// Get static field: static public System.Version/ParseFailureKind ArgumentException
System::Version::ParseFailureKind System::Version::ParseFailureKind::_get_ArgumentException() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::ParseFailureKind::_get_ArgumentException");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version::ParseFailureKind>("System", "Version/ParseFailureKind", "ArgumentException"));
}
// Autogenerated static field setter
// Set static field: static public System.Version/ParseFailureKind ArgumentException
void System::Version::ParseFailureKind::_set_ArgumentException(System::Version::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::ParseFailureKind::_set_ArgumentException");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Version/ParseFailureKind", "ArgumentException", value));
}
// Autogenerated static field getter
// Get static field: static public System.Version/ParseFailureKind ArgumentOutOfRangeException
System::Version::ParseFailureKind System::Version::ParseFailureKind::_get_ArgumentOutOfRangeException() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::ParseFailureKind::_get_ArgumentOutOfRangeException");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version::ParseFailureKind>("System", "Version/ParseFailureKind", "ArgumentOutOfRangeException"));
}
// Autogenerated static field setter
// Set static field: static public System.Version/ParseFailureKind ArgumentOutOfRangeException
void System::Version::ParseFailureKind::_set_ArgumentOutOfRangeException(System::Version::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::ParseFailureKind::_set_ArgumentOutOfRangeException");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Version/ParseFailureKind", "ArgumentOutOfRangeException", value));
}
// Autogenerated static field getter
// Get static field: static public System.Version/ParseFailureKind FormatException
System::Version::ParseFailureKind System::Version::ParseFailureKind::_get_FormatException() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::ParseFailureKind::_get_FormatException");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Version::ParseFailureKind>("System", "Version/ParseFailureKind", "FormatException"));
}
// Autogenerated static field setter
// Set static field: static public System.Version/ParseFailureKind FormatException
void System::Version::ParseFailureKind::_set_FormatException(System::Version::ParseFailureKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::ParseFailureKind::_set_FormatException");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Version/ParseFailureKind", "FormatException", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Version/VersionResult
#include "System/Version_VersionResult.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Version/VersionResult.Init
void System::Version::VersionResult::Init(::Il2CppString* argumentName, bool canThrow) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::VersionResult::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(argumentName, canThrow)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, argumentName, canThrow);
}
// Autogenerated method: System.Version/VersionResult.SetFailure
void System::Version::VersionResult::SetFailure(System::Version::ParseFailureKind failure) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::VersionResult::SetFailure");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetFailure", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(failure)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, failure);
}
// Autogenerated method: System.Version/VersionResult.SetFailure
void System::Version::VersionResult::SetFailure(System::Version::ParseFailureKind failure, ::Il2CppString* argument) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::VersionResult::SetFailure");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetFailure", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(failure, argument)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, failure, argument);
}
// Autogenerated method: System.Version/VersionResult.GetVersionParseException
System::Exception* System::Version::VersionResult::GetVersionParseException() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Version::VersionResult::GetVersionParseException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetVersionParseException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.AppDomain
#include "System/AppDomain.hpp"
// Including type: System.AssemblyLoadEventHandler
#include "System/AssemblyLoadEventHandler.hpp"
// Including type: System.ResolveEventHandler
#include "System/ResolveEventHandler.hpp"
// Including type: System.EventHandler
#include "System/EventHandler.hpp"
// Including type: System.UnhandledExceptionEventHandler
#include "System/UnhandledExceptionEventHandler.hpp"
// Including type: System.EventHandler`1
#include "System/EventHandler_1.hpp"
// Including type: System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs
#include "System/Runtime/ExceptionServices/FirstChanceExceptionEventArgs.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Security.Principal.IPrincipal
#include "System/Security/Principal/IPrincipal.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Security.Policy.Evidence
#include "System/Security/Policy/Evidence.hpp"
// Including type: System.Reflection.AssemblyName
#include "System/Reflection/AssemblyName.hpp"
// Including type: System.Runtime.Remoting.Contexts.Context
#include "System/Runtime/Remoting/Contexts/Context.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Runtime.Remoting.Messaging.CADMethodCallMessage
#include "System/Runtime/Remoting/Messaging/CADMethodCallMessage.hpp"
// Including type: System.Runtime.Remoting.Messaging.CADMethodReturnMessage
#include "System/Runtime/Remoting/Messaging/CADMethodReturnMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String _process_guid
::Il2CppString* System::AppDomain::_get__process_guid() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::_get__process_guid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "AppDomain", "_process_guid"));
}
// Autogenerated static field setter
// Set static field: static private System.String _process_guid
void System::AppDomain::_set__process_guid(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::_set__process_guid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AppDomain", "_process_guid", value));
}
// [ThreadStaticAttribute] Offset: 0xD3DEBC
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Object> type_resolve_in_progress
System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppObject*>* System::AppDomain::_get_type_resolve_in_progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::_get_type_resolve_in_progress");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppObject*>*>("System", "AppDomain", "type_resolve_in_progress")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Object> type_resolve_in_progress
void System::AppDomain::_set_type_resolve_in_progress(System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::_set_type_resolve_in_progress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AppDomain", "type_resolve_in_progress", value));
}
// [ThreadStaticAttribute] Offset: 0xD3DECC
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Object> assembly_resolve_in_progress
System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppObject*>* System::AppDomain::_get_assembly_resolve_in_progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::_get_assembly_resolve_in_progress");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppObject*>*>("System", "AppDomain", "assembly_resolve_in_progress")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Object> assembly_resolve_in_progress
void System::AppDomain::_set_assembly_resolve_in_progress(System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::_set_assembly_resolve_in_progress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AppDomain", "assembly_resolve_in_progress", value));
}
// [ThreadStaticAttribute] Offset: 0xD3DEDC
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Object> assembly_resolve_in_progress_refonly
System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppObject*>* System::AppDomain::_get_assembly_resolve_in_progress_refonly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::_get_assembly_resolve_in_progress_refonly");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppObject*>*>("System", "AppDomain", "assembly_resolve_in_progress_refonly")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Object> assembly_resolve_in_progress_refonly
void System::AppDomain::_set_assembly_resolve_in_progress_refonly(System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::_set_assembly_resolve_in_progress_refonly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AppDomain", "assembly_resolve_in_progress_refonly", value));
}
// [ThreadStaticAttribute] Offset: 0xD3DEEC
// Autogenerated static field getter
// Get static field: static private System.Object _principal
::Il2CppObject* System::AppDomain::_get__principal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::_get__principal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System", "AppDomain", "_principal"));
}
// Autogenerated static field setter
// Set static field: static private System.Object _principal
void System::AppDomain::_set__principal(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::_set__principal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AppDomain", "_principal", value));
}
// Autogenerated static field getter
// Get static field: static private System.AppDomain default_domain
System::AppDomain* System::AppDomain::_get_default_domain() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::_get_default_domain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::AppDomain*>("System", "AppDomain", "default_domain"));
}
// Autogenerated static field setter
// Set static field: static private System.AppDomain default_domain
void System::AppDomain::_set_default_domain(System::AppDomain* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::_set_default_domain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "AppDomain", "default_domain", value));
}
// Autogenerated method: System.AppDomain.getFriendlyName
::Il2CppString* System::AppDomain::getFriendlyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::getFriendlyName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "getFriendlyName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.AppDomain.get_FriendlyName
::Il2CppString* System::AppDomain::get_FriendlyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::get_FriendlyName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_FriendlyName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.AppDomain.get_DefaultPrincipal
System::Security::Principal::IPrincipal* System::AppDomain::get_DefaultPrincipal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::get_DefaultPrincipal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DefaultPrincipal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Principal::IPrincipal*, false>(this, ___internal__method);
}
// Autogenerated method: System.AppDomain.getCurDomain
System::AppDomain* System::AppDomain::getCurDomain() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::getCurDomain");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "AppDomain", "getCurDomain", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::AppDomain*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.AppDomain.get_CurrentDomain
System::AppDomain* System::AppDomain::get_CurrentDomain() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::get_CurrentDomain");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "AppDomain", "get_CurrentDomain", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::AppDomain*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.AppDomain.GetAssemblies
::Array<System::Reflection::Assembly*>* System::AppDomain::GetAssemblies(bool refOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::GetAssemblies");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAssemblies", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(refOnly)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::Assembly*>*, false>(this, ___internal__method, refOnly);
}
// Autogenerated method: System.AppDomain.GetAssemblies
::Array<System::Reflection::Assembly*>* System::AppDomain::GetAssemblies() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::GetAssemblies");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAssemblies", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::Assembly*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.AppDomain.GetData
::Il2CppObject* System::AppDomain::GetData(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::GetData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.AppDomain.LoadAssembly
System::Reflection::Assembly* System::AppDomain::LoadAssembly(::Il2CppString* assemblyRef, System::Security::Policy::Evidence* securityEvidence, bool refOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::LoadAssembly");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LoadAssembly", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(assemblyRef, securityEvidence, refOnly)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Assembly*, false>(this, ___internal__method, assemblyRef, securityEvidence, refOnly);
}
// Autogenerated method: System.AppDomain.LoadSatellite
System::Reflection::Assembly* System::AppDomain::LoadSatellite(System::Reflection::AssemblyName* assemblyRef, bool throwOnError) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::LoadSatellite");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LoadSatellite", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(assemblyRef, throwOnError)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Assembly*, false>(this, ___internal__method, assemblyRef, throwOnError);
}
// Autogenerated method: System.AppDomain.Load
System::Reflection::Assembly* System::AppDomain::Load(::Il2CppString* assemblyString) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::Load");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(assemblyString)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Assembly*, false>(this, ___internal__method, assemblyString);
}
// Autogenerated method: System.AppDomain.Load
System::Reflection::Assembly* System::AppDomain::Load(::Il2CppString* assemblyString, System::Security::Policy::Evidence* assemblySecurity, bool refonly) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::Load");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(assemblyString, assemblySecurity, refonly)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Assembly*, false>(this, ___internal__method, assemblyString, assemblySecurity, refonly);
}
// Autogenerated method: System.AppDomain.InternalSetDomainByID
System::AppDomain* System::AppDomain::InternalSetDomainByID(int domain_id) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::InternalSetDomainByID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "AppDomain", "InternalSetDomainByID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(domain_id)));
  return ::il2cpp_utils::RunMethodThrow<System::AppDomain*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, domain_id);
}
// Autogenerated method: System.AppDomain.InternalSetDomain
System::AppDomain* System::AppDomain::InternalSetDomain(System::AppDomain* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::InternalSetDomain");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "AppDomain", "InternalSetDomain", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::AppDomain*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, context);
}
// Autogenerated method: System.AppDomain.InternalPushDomainRefByID
void System::AppDomain::InternalPushDomainRefByID(int domain_id) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::InternalPushDomainRefByID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "AppDomain", "InternalPushDomainRefByID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(domain_id)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, domain_id);
}
// Autogenerated method: System.AppDomain.InternalPopDomainRef
void System::AppDomain::InternalPopDomainRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::InternalPopDomainRef");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "AppDomain", "InternalPopDomainRef", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.AppDomain.InternalSetContext
System::Runtime::Remoting::Contexts::Context* System::AppDomain::InternalSetContext(System::Runtime::Remoting::Contexts::Context* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::InternalSetContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "AppDomain", "InternalSetContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Contexts::Context*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, context);
}
// Autogenerated method: System.AppDomain.InternalGetContext
System::Runtime::Remoting::Contexts::Context* System::AppDomain::InternalGetContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::InternalGetContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "AppDomain", "InternalGetContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Contexts::Context*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.AppDomain.InternalGetDefaultContext
System::Runtime::Remoting::Contexts::Context* System::AppDomain::InternalGetDefaultContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::InternalGetDefaultContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "AppDomain", "InternalGetDefaultContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Contexts::Context*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.AppDomain.InternalGetProcessGuid
::Il2CppString* System::AppDomain::InternalGetProcessGuid(::Il2CppString* newguid) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::InternalGetProcessGuid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "AppDomain", "InternalGetProcessGuid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(newguid)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, newguid);
}
// Autogenerated method: System.AppDomain.InvokeInDomainByID
::Il2CppObject* System::AppDomain::InvokeInDomainByID(int domain_id, System::Reflection::MethodInfo* method, ::Il2CppObject* obj, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::InvokeInDomainByID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "AppDomain", "InvokeInDomainByID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(domain_id, method, obj, args)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, domain_id, method, obj, args);
}
// Autogenerated method: System.AppDomain.GetProcessGuid
::Il2CppString* System::AppDomain::GetProcessGuid() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::GetProcessGuid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "AppDomain", "GetProcessGuid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.AppDomain.InternalIsFinalizingForUnload
bool System::AppDomain::InternalIsFinalizingForUnload(int domain_id) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::InternalIsFinalizingForUnload");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "AppDomain", "InternalIsFinalizingForUnload", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(domain_id)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, domain_id);
}
// Autogenerated method: System.AppDomain.IsFinalizingForUnload
bool System::AppDomain::IsFinalizingForUnload() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::IsFinalizingForUnload");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsFinalizingForUnload", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.AppDomain.getDomainID
int System::AppDomain::getDomainID() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::getDomainID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "getDomainID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.AppDomain.GetCurrentThreadId
int System::AppDomain::GetCurrentThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::GetCurrentThreadId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "AppDomain", "GetCurrentThreadId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.AppDomain.DoAssemblyLoad
void System::AppDomain::DoAssemblyLoad(System::Reflection::Assembly* assembly) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::DoAssemblyLoad");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DoAssemblyLoad", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(assembly)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, assembly);
}
// Autogenerated method: System.AppDomain.DoAssemblyResolve
System::Reflection::Assembly* System::AppDomain::DoAssemblyResolve(::Il2CppString* name, System::Reflection::Assembly* requestingAssembly, bool refonly) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::DoAssemblyResolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DoAssemblyResolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, requestingAssembly, refonly)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Assembly*, false>(this, ___internal__method, name, requestingAssembly, refonly);
}
// Autogenerated method: System.AppDomain.DoTypeResolve
System::Reflection::Assembly* System::AppDomain::DoTypeResolve(::Il2CppObject* name_or_tb) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::DoTypeResolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DoTypeResolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name_or_tb)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Assembly*, false>(this, ___internal__method, name_or_tb);
}
// Autogenerated method: System.AppDomain.DoResourceResolve
System::Reflection::Assembly* System::AppDomain::DoResourceResolve(::Il2CppString* name, System::Reflection::Assembly* requesting) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::DoResourceResolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DoResourceResolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, requesting)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Assembly*, false>(this, ___internal__method, name, requesting);
}
// Autogenerated method: System.AppDomain.DoDomainUnload
void System::AppDomain::DoDomainUnload() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::DoDomainUnload");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DoDomainUnload", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.AppDomain.GetMarshalledDomainObjRef
::Array<uint8_t>* System::AppDomain::GetMarshalledDomainObjRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::GetMarshalledDomainObjRef");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMarshalledDomainObjRef", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: System.AppDomain.ProcessMessageInDomain
void System::AppDomain::ProcessMessageInDomain(::Array<uint8_t>* arrRequest, System::Runtime::Remoting::Messaging::CADMethodCallMessage* cadMsg, ::Array<uint8_t>*& arrResponse, System::Runtime::Remoting::Messaging::CADMethodReturnMessage*& cadMrm) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::ProcessMessageInDomain");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessMessageInDomain", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(arrRequest, cadMsg, arrResponse, cadMrm)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, arrRequest, cadMsg, arrResponse, cadMrm);
}
// Autogenerated method: System.AppDomain.add_DomainUnload
void System::AppDomain::add_DomainUnload(System::EventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::add_DomainUnload");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_DomainUnload", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.AppDomain.remove_DomainUnload
void System::AppDomain::remove_DomainUnload(System::EventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::remove_DomainUnload");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_DomainUnload", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.AppDomain.add_ProcessExit
void System::AppDomain::add_ProcessExit(System::EventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::add_ProcessExit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_ProcessExit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.AppDomain.remove_ProcessExit
void System::AppDomain::remove_ProcessExit(System::EventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::remove_ProcessExit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_ProcessExit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.AppDomain.add_UnhandledException
void System::AppDomain::add_UnhandledException(System::UnhandledExceptionEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::add_UnhandledException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_UnhandledException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.AppDomain.remove_UnhandledException
void System::AppDomain::remove_UnhandledException(System::UnhandledExceptionEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::remove_UnhandledException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_UnhandledException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.AppDomain.InitializeLifetimeService
::Il2CppObject* System::AppDomain::InitializeLifetimeService() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::InitializeLifetimeService");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitializeLifetimeService", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.AppDomain.ToString
::Il2CppString* System::AppDomain::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AppDomain::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.CLRConfig
#include "System/CLRConfig.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.CLRConfig.CheckThrowUnobservedTaskExceptions
bool System::CLRConfig::CheckThrowUnobservedTaskExceptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::CLRConfig::CheckThrowUnobservedTaskExceptions");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "CLRConfig", "CheckThrowUnobservedTaskExceptions", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.CompatibilitySwitches
#include "System/CompatibilitySwitches.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Boolean IsAppEarlierThanSilverlight4
bool System::CompatibilitySwitches::_get_IsAppEarlierThanSilverlight4() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::CompatibilitySwitches::_get_IsAppEarlierThanSilverlight4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "CompatibilitySwitches", "IsAppEarlierThanSilverlight4"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Boolean IsAppEarlierThanSilverlight4
void System::CompatibilitySwitches::_set_IsAppEarlierThanSilverlight4(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::CompatibilitySwitches::_set_IsAppEarlierThanSilverlight4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "CompatibilitySwitches", "IsAppEarlierThanSilverlight4", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Boolean IsAppEarlierThanWindowsPhone8
bool System::CompatibilitySwitches::_get_IsAppEarlierThanWindowsPhone8() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::CompatibilitySwitches::_get_IsAppEarlierThanWindowsPhone8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "CompatibilitySwitches", "IsAppEarlierThanWindowsPhone8"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Boolean IsAppEarlierThanWindowsPhone8
void System::CompatibilitySwitches::_set_IsAppEarlierThanWindowsPhone8(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::CompatibilitySwitches::_set_IsAppEarlierThanWindowsPhone8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "CompatibilitySwitches", "IsAppEarlierThanWindowsPhone8", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Environment
#include "System/Environment.hpp"
// Including type: System.Environment/SpecialFolder
#include "System/Environment_SpecialFolder.hpp"
// Including type: System.Environment/SpecialFolderOption
#include "System/Environment_SpecialFolderOption.hpp"
// Including type: System.OperatingSystem
#include "System/OperatingSystem.hpp"
// Including type: System.PlatformID
#include "System/PlatformID.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 mono_corlib_version
int System::Environment::_get_mono_corlib_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::_get_mono_corlib_version");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System", "Environment", "mono_corlib_version"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 mono_corlib_version
void System::Environment::_set_mono_corlib_version(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::_set_mono_corlib_version");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment", "mono_corlib_version", value));
}
// Autogenerated static field getter
// Get static field: static private System.String nl
::Il2CppString* System::Environment::_get_nl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::_get_nl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "Environment", "nl"));
}
// Autogenerated static field setter
// Set static field: static private System.String nl
void System::Environment::_set_nl(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::_set_nl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment", "nl", value));
}
// Autogenerated static field getter
// Get static field: static private System.OperatingSystem os
System::OperatingSystem* System::Environment::_get_os() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::_get_os");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::OperatingSystem*>("System", "Environment", "os"));
}
// Autogenerated static field setter
// Set static field: static private System.OperatingSystem os
void System::Environment::_set_os(System::OperatingSystem* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::_set_os");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment", "os", value));
}
// Autogenerated method: System.Environment.GetResourceString
::Il2CppString* System::Environment::GetResourceString(::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::GetResourceString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "GetResourceString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, key);
}
// Autogenerated method: System.Environment.GetResourceString
::Il2CppString* System::Environment::GetResourceString(::Il2CppString* key, ::Array<::Il2CppObject*>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::GetResourceString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "GetResourceString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key, values)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, key, values);
}
// Creating initializer_list -> params proxy for: System.String GetResourceString(System.String key, params System.Object[] values)
::Il2CppString* System::Environment::GetResourceString(::Il2CppString* key, std::initializer_list<::Il2CppObject*> values) {
  return System::Environment::GetResourceString(key, ::Array<::Il2CppObject*>::New(values));
}
// Autogenerated method: System.Environment.GetResourceStringEncodingName
::Il2CppString* System::Environment::GetResourceStringEncodingName(int codePage) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::GetResourceStringEncodingName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "GetResourceStringEncodingName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(codePage)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, codePage);
}
// Autogenerated method: System.Environment.get_CurrentDirectory
::Il2CppString* System::Environment::get_CurrentDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::get_CurrentDirectory");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "get_CurrentDirectory", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.get_CurrentManagedThreadId
int System::Environment::get_CurrentManagedThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::get_CurrentManagedThreadId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "get_CurrentManagedThreadId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.get_HasShutdownStarted
bool System::Environment::get_HasShutdownStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::get_HasShutdownStarted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "get_HasShutdownStarted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.get_MachineName
::Il2CppString* System::Environment::get_MachineName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::get_MachineName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "get_MachineName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.GetNewLine
::Il2CppString* System::Environment::GetNewLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::GetNewLine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "GetNewLine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.get_NewLine
::Il2CppString* System::Environment::get_NewLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::get_NewLine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "get_NewLine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.get_Platform
System::PlatformID System::Environment::get_Platform() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::get_Platform");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "get_Platform", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::PlatformID, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.GetOSVersionString
::Il2CppString* System::Environment::GetOSVersionString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::GetOSVersionString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "GetOSVersionString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.get_OSVersion
System::OperatingSystem* System::Environment::get_OSVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::get_OSVersion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "get_OSVersion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::OperatingSystem*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.CreateVersionFromString
System::Version* System::Environment::CreateVersionFromString(::Il2CppString* info) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::CreateVersionFromString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "CreateVersionFromString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(info)));
  return ::il2cpp_utils::RunMethodThrow<System::Version*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, info);
}
// Autogenerated method: System.Environment.get_StackTrace
::Il2CppString* System::Environment::get_StackTrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::get_StackTrace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "get_StackTrace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.get_TickCount
int System::Environment::get_TickCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::get_TickCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "get_TickCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.get_UserDomainName
::Il2CppString* System::Environment::get_UserDomainName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::get_UserDomainName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "get_UserDomainName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.get_UserName
::Il2CppString* System::Environment::get_UserName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::get_UserName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "get_UserName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.Exit
void System::Environment::Exit(int exitCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::Exit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "Exit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(exitCode)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, exitCode);
}
// Autogenerated method: System.Environment.ExpandEnvironmentVariables
::Il2CppString* System::Environment::ExpandEnvironmentVariables(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::ExpandEnvironmentVariables");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "ExpandEnvironmentVariables", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Environment.GetCommandLineArgs
::Array<::Il2CppString*>* System::Environment::GetCommandLineArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::GetCommandLineArgs");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "GetCommandLineArgs", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.internalGetEnvironmentVariable_native
::Il2CppString* System::Environment::internalGetEnvironmentVariable_native(System::IntPtr variable) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::internalGetEnvironmentVariable_native");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "internalGetEnvironmentVariable_native", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(variable)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, variable);
}
// Autogenerated method: System.Environment.internalGetEnvironmentVariable
::Il2CppString* System::Environment::internalGetEnvironmentVariable(::Il2CppString* variable) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::internalGetEnvironmentVariable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "internalGetEnvironmentVariable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(variable)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, variable);
}
// Autogenerated method: System.Environment.GetEnvironmentVariable
::Il2CppString* System::Environment::GetEnvironmentVariable(::Il2CppString* variable) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::GetEnvironmentVariable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "GetEnvironmentVariable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(variable)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, variable);
}
// Autogenerated method: System.Environment.GetEnvironmentVariablesNoCase
System::Collections::Hashtable* System::Environment::GetEnvironmentVariablesNoCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::GetEnvironmentVariablesNoCase");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "GetEnvironmentVariablesNoCase", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Hashtable*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.GetFolderPath
::Il2CppString* System::Environment::GetFolderPath(System::Environment::SpecialFolder folder) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::GetFolderPath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "GetFolderPath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(folder)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, folder);
}
// Autogenerated method: System.Environment.GetWindowsFolderPath
::Il2CppString* System::Environment::GetWindowsFolderPath(int folder) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::GetWindowsFolderPath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "GetWindowsFolderPath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(folder)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, folder);
}
// Autogenerated method: System.Environment.GetFolderPath
::Il2CppString* System::Environment::GetFolderPath(System::Environment::SpecialFolder folder, System::Environment::SpecialFolderOption option) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::GetFolderPath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "GetFolderPath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(folder, option)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, folder, option);
}
// Autogenerated method: System.Environment.ReadXdgUserDir
::Il2CppString* System::Environment::ReadXdgUserDir(::Il2CppString* config_dir, ::Il2CppString* home_dir, ::Il2CppString* key, ::Il2CppString* fallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::ReadXdgUserDir");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "ReadXdgUserDir", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(config_dir, home_dir, key, fallback)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, config_dir, home_dir, key, fallback);
}
// Autogenerated method: System.Environment.UnixGetFolderPath
::Il2CppString* System::Environment::UnixGetFolderPath(System::Environment::SpecialFolder folder, System::Environment::SpecialFolderOption option) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::UnixGetFolderPath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "UnixGetFolderPath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(folder, option)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, folder, option);
}
// Autogenerated method: System.Environment.GetLogicalDrives
::Array<::Il2CppString*>* System::Environment::GetLogicalDrives() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::GetLogicalDrives");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "GetLogicalDrives", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.FailFast
void System::Environment::FailFast(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::FailFast");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "FailFast", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message);
}
// Autogenerated method: System.Environment.FailFast
void System::Environment::FailFast(::Il2CppString* message, System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::FailFast");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "FailFast", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(message, exception)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message, exception);
}
// Autogenerated method: System.Environment.get_Is64BitProcess
bool System::Environment::get_Is64BitProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::get_Is64BitProcess");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "get_Is64BitProcess", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.get_ProcessorCount
int System::Environment::get_ProcessorCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::get_ProcessorCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "get_ProcessorCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.get_IsRunningOnWindows
bool System::Environment::get_IsRunningOnWindows() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::get_IsRunningOnWindows");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "get_IsRunningOnWindows", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.GetLogicalDrivesInternal
::Array<::Il2CppString*>* System::Environment::GetLogicalDrivesInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::GetLogicalDrivesInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "GetLogicalDrivesInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.GetEnvironmentVariableNames
::Array<::Il2CppString*>* System::Environment::GetEnvironmentVariableNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::GetEnvironmentVariableNames");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "GetEnvironmentVariableNames", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.GetMachineConfigPath
::Il2CppString* System::Environment::GetMachineConfigPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::GetMachineConfigPath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "GetMachineConfigPath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.internalGetHome
::Il2CppString* System::Environment::internalGetHome() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::internalGetHome");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "internalGetHome", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.GetPageSize
int System::Environment::GetPageSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::GetPageSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "GetPageSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.get_IsUnix
bool System::Environment::get_IsUnix() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::get_IsUnix");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "get_IsUnix", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Environment.GetStackTrace
::Il2CppString* System::Environment::GetStackTrace(System::Exception* e, bool needFileInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::GetStackTrace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Environment", "GetStackTrace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(e, needFileInfo)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, e, needFileInfo);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Environment/SpecialFolder
#include "System/Environment_SpecialFolder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder MyDocuments
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_MyDocuments() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_MyDocuments");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "MyDocuments"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder MyDocuments
void System::Environment::SpecialFolder::_set_MyDocuments(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_MyDocuments");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "MyDocuments", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder Desktop
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_Desktop() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_Desktop");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "Desktop"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder Desktop
void System::Environment::SpecialFolder::_set_Desktop(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_Desktop");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "Desktop", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder MyComputer
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_MyComputer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_MyComputer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "MyComputer"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder MyComputer
void System::Environment::SpecialFolder::_set_MyComputer(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_MyComputer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "MyComputer", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder Programs
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_Programs() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_Programs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "Programs"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder Programs
void System::Environment::SpecialFolder::_set_Programs(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_Programs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "Programs", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder Personal
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_Personal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_Personal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "Personal"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder Personal
void System::Environment::SpecialFolder::_set_Personal(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_Personal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "Personal", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder Favorites
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_Favorites() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_Favorites");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "Favorites"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder Favorites
void System::Environment::SpecialFolder::_set_Favorites(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_Favorites");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "Favorites", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder Startup
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_Startup() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_Startup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "Startup"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder Startup
void System::Environment::SpecialFolder::_set_Startup(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_Startup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "Startup", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder Recent
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_Recent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_Recent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "Recent"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder Recent
void System::Environment::SpecialFolder::_set_Recent(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_Recent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "Recent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder SendTo
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_SendTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_SendTo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "SendTo"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder SendTo
void System::Environment::SpecialFolder::_set_SendTo(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_SendTo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "SendTo", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder StartMenu
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_StartMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_StartMenu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "StartMenu"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder StartMenu
void System::Environment::SpecialFolder::_set_StartMenu(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_StartMenu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "StartMenu", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder MyMusic
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_MyMusic() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_MyMusic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "MyMusic"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder MyMusic
void System::Environment::SpecialFolder::_set_MyMusic(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_MyMusic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "MyMusic", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder DesktopDirectory
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_DesktopDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_DesktopDirectory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "DesktopDirectory"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder DesktopDirectory
void System::Environment::SpecialFolder::_set_DesktopDirectory(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_DesktopDirectory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "DesktopDirectory", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder Templates
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_Templates() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_Templates");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "Templates"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder Templates
void System::Environment::SpecialFolder::_set_Templates(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_Templates");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "Templates", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder ApplicationData
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_ApplicationData() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_ApplicationData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "ApplicationData"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder ApplicationData
void System::Environment::SpecialFolder::_set_ApplicationData(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_ApplicationData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "ApplicationData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder LocalApplicationData
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_LocalApplicationData() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_LocalApplicationData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "LocalApplicationData"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder LocalApplicationData
void System::Environment::SpecialFolder::_set_LocalApplicationData(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_LocalApplicationData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "LocalApplicationData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder InternetCache
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_InternetCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_InternetCache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "InternetCache"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder InternetCache
void System::Environment::SpecialFolder::_set_InternetCache(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_InternetCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "InternetCache", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder Cookies
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_Cookies() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_Cookies");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "Cookies"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder Cookies
void System::Environment::SpecialFolder::_set_Cookies(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_Cookies");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "Cookies", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder History
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_History() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_History");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "History"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder History
void System::Environment::SpecialFolder::_set_History(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_History");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "History", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder CommonApplicationData
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_CommonApplicationData() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_CommonApplicationData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "CommonApplicationData"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder CommonApplicationData
void System::Environment::SpecialFolder::_set_CommonApplicationData(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_CommonApplicationData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "CommonApplicationData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder System
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_System");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "System"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder System
void System::Environment::SpecialFolder::_set_System(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_System");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "System", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder ProgramFiles
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_ProgramFiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_ProgramFiles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "ProgramFiles"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder ProgramFiles
void System::Environment::SpecialFolder::_set_ProgramFiles(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_ProgramFiles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "ProgramFiles", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder MyPictures
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_MyPictures() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_MyPictures");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "MyPictures"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder MyPictures
void System::Environment::SpecialFolder::_set_MyPictures(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_MyPictures");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "MyPictures", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder CommonProgramFiles
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_CommonProgramFiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_CommonProgramFiles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "CommonProgramFiles"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder CommonProgramFiles
void System::Environment::SpecialFolder::_set_CommonProgramFiles(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_CommonProgramFiles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "CommonProgramFiles", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder MyVideos
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_MyVideos() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_MyVideos");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "MyVideos"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder MyVideos
void System::Environment::SpecialFolder::_set_MyVideos(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_MyVideos");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "MyVideos", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder NetworkShortcuts
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_NetworkShortcuts() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_NetworkShortcuts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "NetworkShortcuts"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder NetworkShortcuts
void System::Environment::SpecialFolder::_set_NetworkShortcuts(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_NetworkShortcuts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "NetworkShortcuts", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder Fonts
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_Fonts() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_Fonts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "Fonts"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder Fonts
void System::Environment::SpecialFolder::_set_Fonts(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_Fonts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "Fonts", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder CommonStartMenu
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_CommonStartMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_CommonStartMenu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "CommonStartMenu"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder CommonStartMenu
void System::Environment::SpecialFolder::_set_CommonStartMenu(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_CommonStartMenu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "CommonStartMenu", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder CommonPrograms
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_CommonPrograms() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_CommonPrograms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "CommonPrograms"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder CommonPrograms
void System::Environment::SpecialFolder::_set_CommonPrograms(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_CommonPrograms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "CommonPrograms", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder CommonStartup
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_CommonStartup() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_CommonStartup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "CommonStartup"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder CommonStartup
void System::Environment::SpecialFolder::_set_CommonStartup(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_CommonStartup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "CommonStartup", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder CommonDesktopDirectory
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_CommonDesktopDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_CommonDesktopDirectory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "CommonDesktopDirectory"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder CommonDesktopDirectory
void System::Environment::SpecialFolder::_set_CommonDesktopDirectory(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_CommonDesktopDirectory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "CommonDesktopDirectory", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder PrinterShortcuts
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_PrinterShortcuts() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_PrinterShortcuts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "PrinterShortcuts"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder PrinterShortcuts
void System::Environment::SpecialFolder::_set_PrinterShortcuts(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_PrinterShortcuts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "PrinterShortcuts", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder Windows
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_Windows() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_Windows");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "Windows"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder Windows
void System::Environment::SpecialFolder::_set_Windows(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_Windows");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "Windows", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder UserProfile
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_UserProfile() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_UserProfile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "UserProfile"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder UserProfile
void System::Environment::SpecialFolder::_set_UserProfile(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_UserProfile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "UserProfile", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder SystemX86
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_SystemX86() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_SystemX86");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "SystemX86"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder SystemX86
void System::Environment::SpecialFolder::_set_SystemX86(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_SystemX86");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "SystemX86", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder ProgramFilesX86
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_ProgramFilesX86() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_ProgramFilesX86");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "ProgramFilesX86"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder ProgramFilesX86
void System::Environment::SpecialFolder::_set_ProgramFilesX86(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_ProgramFilesX86");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "ProgramFilesX86", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder CommonProgramFilesX86
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_CommonProgramFilesX86() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_CommonProgramFilesX86");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "CommonProgramFilesX86"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder CommonProgramFilesX86
void System::Environment::SpecialFolder::_set_CommonProgramFilesX86(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_CommonProgramFilesX86");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "CommonProgramFilesX86", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder CommonTemplates
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_CommonTemplates() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_CommonTemplates");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "CommonTemplates"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder CommonTemplates
void System::Environment::SpecialFolder::_set_CommonTemplates(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_CommonTemplates");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "CommonTemplates", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder CommonDocuments
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_CommonDocuments() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_CommonDocuments");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "CommonDocuments"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder CommonDocuments
void System::Environment::SpecialFolder::_set_CommonDocuments(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_CommonDocuments");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "CommonDocuments", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder CommonAdminTools
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_CommonAdminTools() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_CommonAdminTools");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "CommonAdminTools"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder CommonAdminTools
void System::Environment::SpecialFolder::_set_CommonAdminTools(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_CommonAdminTools");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "CommonAdminTools", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder AdminTools
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_AdminTools() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_AdminTools");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "AdminTools"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder AdminTools
void System::Environment::SpecialFolder::_set_AdminTools(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_AdminTools");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "AdminTools", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder CommonMusic
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_CommonMusic() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_CommonMusic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "CommonMusic"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder CommonMusic
void System::Environment::SpecialFolder::_set_CommonMusic(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_CommonMusic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "CommonMusic", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder CommonPictures
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_CommonPictures() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_CommonPictures");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "CommonPictures"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder CommonPictures
void System::Environment::SpecialFolder::_set_CommonPictures(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_CommonPictures");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "CommonPictures", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder CommonVideos
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_CommonVideos() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_CommonVideos");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "CommonVideos"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder CommonVideos
void System::Environment::SpecialFolder::_set_CommonVideos(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_CommonVideos");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "CommonVideos", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder Resources
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_Resources() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_Resources");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "Resources"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder Resources
void System::Environment::SpecialFolder::_set_Resources(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_Resources");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "Resources", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder LocalizedResources
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_LocalizedResources() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_LocalizedResources");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "LocalizedResources"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder LocalizedResources
void System::Environment::SpecialFolder::_set_LocalizedResources(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_LocalizedResources");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "LocalizedResources", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder CommonOemLinks
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_CommonOemLinks() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_CommonOemLinks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "CommonOemLinks"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder CommonOemLinks
void System::Environment::SpecialFolder::_set_CommonOemLinks(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_CommonOemLinks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "CommonOemLinks", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolder CDBurning
System::Environment::SpecialFolder System::Environment::SpecialFolder::_get_CDBurning() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_get_CDBurning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolder>("System", "Environment/SpecialFolder", "CDBurning"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolder CDBurning
void System::Environment::SpecialFolder::_set_CDBurning(System::Environment::SpecialFolder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolder::_set_CDBurning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolder", "CDBurning", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Environment/SpecialFolderOption
#include "System/Environment_SpecialFolderOption.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolderOption None
System::Environment::SpecialFolderOption System::Environment::SpecialFolderOption::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolderOption::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolderOption>("System", "Environment/SpecialFolderOption", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolderOption None
void System::Environment::SpecialFolderOption::_set_None(System::Environment::SpecialFolderOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolderOption::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolderOption", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolderOption DoNotVerify
System::Environment::SpecialFolderOption System::Environment::SpecialFolderOption::_get_DoNotVerify() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolderOption::_get_DoNotVerify");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolderOption>("System", "Environment/SpecialFolderOption", "DoNotVerify"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolderOption DoNotVerify
void System::Environment::SpecialFolderOption::_set_DoNotVerify(System::Environment::SpecialFolderOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolderOption::_set_DoNotVerify");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolderOption", "DoNotVerify", value));
}
// Autogenerated static field getter
// Get static field: static public System.Environment/SpecialFolderOption Create
System::Environment::SpecialFolderOption System::Environment::SpecialFolderOption::_get_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolderOption::_get_Create");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Environment::SpecialFolderOption>("System", "Environment/SpecialFolderOption", "Create"));
}
// Autogenerated static field setter
// Set static field: static public System.Environment/SpecialFolderOption Create
void System::Environment::SpecialFolderOption::_set_Create(System::Environment::SpecialFolderOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Environment::SpecialFolderOption::_set_Create");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Environment/SpecialFolderOption", "Create", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ParseNumbers
#include "System/ParseNumbers.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ParseNumbers.StringToInt
int System::ParseNumbers::StringToInt(::Il2CppString* value, int fromBase, int flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseNumbers::StringToInt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "ParseNumbers", "StringToInt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, fromBase, flags)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, fromBase, flags);
}
// Autogenerated method: System.ParseNumbers.StringToInt
int System::ParseNumbers::StringToInt(::Il2CppString* value, int fromBase, int flags, int* parsePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseNumbers::StringToInt");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "ParseNumbers", "StringToInt", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, fromBase, flags, parsePos)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, fromBase, flags, parsePos);
}
// Autogenerated method: System.ParseNumbers.LongToString
::Il2CppString* System::ParseNumbers::LongToString(int64_t value, int toBase, int width, ::Il2CppChar paddingChar, int flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseNumbers::LongToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "ParseNumbers", "LongToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, toBase, width, paddingChar, flags)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, toBase, width, paddingChar, flags);
}
// Autogenerated method: System.ParseNumbers.StringToLong
int64_t System::ParseNumbers::StringToLong(::Il2CppString* value, int fromBase, int flags, int* parsePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseNumbers::StringToLong");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "ParseNumbers", "StringToLong", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, fromBase, flags, parsePos)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, fromBase, flags, parsePos);
}
// Autogenerated method: System.ParseNumbers.IntToString
::Il2CppString* System::ParseNumbers::IntToString(int value, int toBase, int width, ::Il2CppChar paddingChar, int flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseNumbers::IntToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "ParseNumbers", "IntToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value, toBase, width, paddingChar, flags)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, toBase, width, paddingChar, flags);
}
// Autogenerated method: System.ParseNumbers.EndianSwap
void System::ParseNumbers::EndianSwap(::Array<uint8_t>*& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseNumbers::EndianSwap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "ParseNumbers", "EndianSwap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.ParseNumbers.ConvertToBase2
System::Text::StringBuilder* System::ParseNumbers::ConvertToBase2(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseNumbers::ConvertToBase2");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "ParseNumbers", "ConvertToBase2", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.ParseNumbers.ConvertToBase8
System::Text::StringBuilder* System::ParseNumbers::ConvertToBase8(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseNumbers::ConvertToBase8");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "ParseNumbers", "ConvertToBase8", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.ParseNumbers.ConvertToBase16
System::Text::StringBuilder* System::ParseNumbers::ConvertToBase16(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ParseNumbers::ConvertToBase16");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "ParseNumbers", "ConvertToBase16", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<System::Text::StringBuilder*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.MonoTypeInfo
#include "System/MonoTypeInfo.hpp"
// Including type: System.Reflection.MonoCMethod
#include "System/Reflection/MonoCMethod.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.TypeNameParser
#include "System/TypeNameParser.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Reflection.AssemblyName
#include "System/Reflection/AssemblyName.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Func`4
#include "System/Func_4.hpp"
// Including type: System.Threading.StackCrawlMark
#include "System/Threading/StackCrawlMark.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.TypeNameParser.GetType
System::Type* System::TypeNameParser::GetType(::Il2CppString* typeName, System::Func_2<System::Reflection::AssemblyName*, System::Reflection::Assembly*>* assemblyResolver, System::Func_4<System::Reflection::Assembly*, ::Il2CppString*, bool, System::Type*>* typeResolver, bool throwOnError, bool ignoreCase, System::Threading::StackCrawlMark& stackMark) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::TypeNameParser::GetType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "TypeNameParser", "GetType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(typeName, assemblyResolver, typeResolver, throwOnError, ignoreCase, stackMark)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, typeName, assemblyResolver, typeResolver, throwOnError, ignoreCase, stackMark);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.AppDomainSetup
#include "System/AppDomainSetup.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ArgIterator
#include "System/ArgIterator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.ArgIterator.Equals
bool System::ArgIterator::Equals(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ArgIterator::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(o)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, o);
}
// Autogenerated method: System.ArgIterator.GetHashCode
int System::ArgIterator::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ArgIterator::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.AssemblyLoadEventArgs
#include "System/AssemblyLoadEventArgs.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.AssemblyLoadEventHandler
#include "System/AssemblyLoadEventHandler.hpp"
// Including type: System.AssemblyLoadEventArgs
#include "System/AssemblyLoadEventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.AssemblyLoadEventHandler.Invoke
void System::AssemblyLoadEventHandler::Invoke(::Il2CppObject* sender, System::AssemblyLoadEventArgs* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AssemblyLoadEventHandler::Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sender, args)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sender, args);
}
// Autogenerated method: System.AssemblyLoadEventHandler.BeginInvoke
System::IAsyncResult* System::AssemblyLoadEventHandler::BeginInvoke(::Il2CppObject* sender, System::AssemblyLoadEventArgs* args, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AssemblyLoadEventHandler::BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sender, args, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, sender, args, callback, object);
}
// Autogenerated method: System.AssemblyLoadEventHandler.EndInvoke
void System::AssemblyLoadEventHandler::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::AssemblyLoadEventHandler::EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Console
#include "System/Console.hpp"
// Including type: System.Console/WindowsConsole
#include "System/Console_WindowsConsole.hpp"
// Including type: System.Console/InternalCancelHandler
#include "System/Console_InternalCancelHandler.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: System.IO.TextReader
#include "System/IO/TextReader.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.ConsoleCancelEventHandler
#include "System/ConsoleCancelEventHandler.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.IO.FileAccess
#include "System/IO/FileAccess.hpp"
// Including type: System.ConsoleKeyInfo
#include "System/ConsoleKeyInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.IO.TextWriter stdout
System::IO::TextWriter* System::Console::_get_stdout() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::_get_stdout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::TextWriter*>("System", "Console", "stdout"));
}
// Autogenerated static field setter
// Set static field: static System.IO.TextWriter stdout
void System::Console::_set_stdout(System::IO::TextWriter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::_set_stdout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Console", "stdout", value));
}
// Autogenerated static field getter
// Get static field: static private System.IO.TextWriter stderr
System::IO::TextWriter* System::Console::_get_stderr() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::_get_stderr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::TextWriter*>("System", "Console", "stderr"));
}
// Autogenerated static field setter
// Set static field: static private System.IO.TextWriter stderr
void System::Console::_set_stderr(System::IO::TextWriter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::_set_stderr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Console", "stderr", value));
}
// Autogenerated static field getter
// Get static field: static private System.IO.TextReader stdin
System::IO::TextReader* System::Console::_get_stdin() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::_get_stdin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::TextReader*>("System", "Console", "stdin"));
}
// Autogenerated static field setter
// Set static field: static private System.IO.TextReader stdin
void System::Console::_set_stdin(System::IO::TextReader* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::_set_stdin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Console", "stdin", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.Encoding inputEncoding
System::Text::Encoding* System::Console::_get_inputEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::_get_inputEncoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Text::Encoding*>("System", "Console", "inputEncoding"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.Encoding inputEncoding
void System::Console::_set_inputEncoding(System::Text::Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::_set_inputEncoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Console", "inputEncoding", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.Encoding outputEncoding
System::Text::Encoding* System::Console::_get_outputEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::_get_outputEncoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Text::Encoding*>("System", "Console", "outputEncoding"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.Encoding outputEncoding
void System::Console::_set_outputEncoding(System::Text::Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::_set_outputEncoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Console", "outputEncoding", value));
}
// Autogenerated static field getter
// Get static field: static private System.ConsoleCancelEventHandler cancel_event
System::ConsoleCancelEventHandler* System::Console::_get_cancel_event() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::_get_cancel_event");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ConsoleCancelEventHandler*>("System", "Console", "cancel_event"));
}
// Autogenerated static field setter
// Set static field: static private System.ConsoleCancelEventHandler cancel_event
void System::Console::_set_cancel_event(System::ConsoleCancelEventHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::_set_cancel_event");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Console", "cancel_event", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Console/InternalCancelHandler cancel_handler
System::Console::InternalCancelHandler* System::Console::_get_cancel_handler() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::_get_cancel_handler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Console::InternalCancelHandler*>("System", "Console", "cancel_handler"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Console/InternalCancelHandler cancel_handler
void System::Console::_set_cancel_handler(System::Console::InternalCancelHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::_set_cancel_handler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Console", "cancel_handler", value));
}
// Autogenerated method: System.Console..cctor
void System::Console::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Console", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Console.SetupStreams
void System::Console::SetupStreams(System::Text::Encoding* inputEncoding, System::Text::Encoding* outputEncoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::SetupStreams");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Console", "SetupStreams", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(inputEncoding, outputEncoding)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, inputEncoding, outputEncoding);
}
// Autogenerated method: System.Console.get_Error
System::IO::TextWriter* System::Console::get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::get_Error");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Console", "get_Error", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IO::TextWriter*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Console.get_Out
System::IO::TextWriter* System::Console::get_Out() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::get_Out");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Console", "get_Out", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IO::TextWriter*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Console.Open
System::IO::Stream* System::Console::Open(System::IntPtr handle, System::IO::FileAccess access, int bufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::Open");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Console", "Open", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle, access, bufferSize)));
  return ::il2cpp_utils::RunMethodThrow<System::IO::Stream*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, access, bufferSize);
}
// Autogenerated method: System.Console.OpenStandardError
System::IO::Stream* System::Console::OpenStandardError(int bufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::OpenStandardError");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Console", "OpenStandardError", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bufferSize)));
  return ::il2cpp_utils::RunMethodThrow<System::IO::Stream*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bufferSize);
}
// Autogenerated method: System.Console.OpenStandardInput
System::IO::Stream* System::Console::OpenStandardInput(int bufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::OpenStandardInput");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Console", "OpenStandardInput", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bufferSize)));
  return ::il2cpp_utils::RunMethodThrow<System::IO::Stream*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bufferSize);
}
// Autogenerated method: System.Console.OpenStandardOutput
System::IO::Stream* System::Console::OpenStandardOutput(int bufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::OpenStandardOutput");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Console", "OpenStandardOutput", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bufferSize)));
  return ::il2cpp_utils::RunMethodThrow<System::IO::Stream*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bufferSize);
}
// Autogenerated method: System.Console.SetOut
void System::Console::SetOut(System::IO::TextWriter* newOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::SetOut");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Console", "SetOut", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(newOut)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, newOut);
}
// Autogenerated method: System.Console.WriteLine
void System::Console::WriteLine(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::WriteLine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Console", "WriteLine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Console.get_InputEncoding
System::Text::Encoding* System::Console::get_InputEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::get_InputEncoding");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Console", "get_InputEncoding", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Text::Encoding*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Console.get_OutputEncoding
System::Text::Encoding* System::Console::get_OutputEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::get_OutputEncoding");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Console", "get_OutputEncoding", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Text::Encoding*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Console.ReadKey
System::ConsoleKeyInfo System::Console::ReadKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::ReadKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Console", "ReadKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::ConsoleKeyInfo, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Console.ReadKey
System::ConsoleKeyInfo System::Console::ReadKey(bool intercept) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::ReadKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Console", "ReadKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(intercept)));
  return ::il2cpp_utils::RunMethodThrow<System::ConsoleKeyInfo, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, intercept);
}
// Autogenerated method: System.Console.DoConsoleCancelEvent
void System::Console::DoConsoleCancelEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::DoConsoleCancelEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Console", "DoConsoleCancelEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Console/WindowsConsole
#include "System/Console_WindowsConsole.hpp"
// Including type: System.Console/WindowsConsole/WindowsCancelHandler
#include "System/Console_WindowsConsole_WindowsCancelHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Boolean ctrlHandlerAdded
bool System::Console::WindowsConsole::_get_ctrlHandlerAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::WindowsConsole::_get_ctrlHandlerAdded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Console/WindowsConsole", "ctrlHandlerAdded"));
}
// Autogenerated static field setter
// Set static field: static public System.Boolean ctrlHandlerAdded
void System::Console::WindowsConsole::_set_ctrlHandlerAdded(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::WindowsConsole::_set_ctrlHandlerAdded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Console/WindowsConsole", "ctrlHandlerAdded", value));
}
// Autogenerated static field getter
// Get static field: static private System.Console/WindowsConsole/WindowsCancelHandler cancelHandler
System::Console::WindowsConsole::WindowsCancelHandler* System::Console::WindowsConsole::_get_cancelHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::WindowsConsole::_get_cancelHandler");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Console::WindowsConsole::WindowsCancelHandler*>("System", "Console/WindowsConsole", "cancelHandler"));
}
// Autogenerated static field setter
// Set static field: static private System.Console/WindowsConsole/WindowsCancelHandler cancelHandler
void System::Console::WindowsConsole::_set_cancelHandler(System::Console::WindowsConsole::WindowsCancelHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::WindowsConsole::_set_cancelHandler");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Console/WindowsConsole", "cancelHandler", value));
}
// Autogenerated method: System.Console/WindowsConsole.GetConsoleCP
int System::Console::WindowsConsole::GetConsoleCP() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::WindowsConsole::GetConsoleCP");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Console/WindowsConsole", "GetConsoleCP", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Console/WindowsConsole.GetConsoleOutputCP
int System::Console::WindowsConsole::GetConsoleOutputCP() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::WindowsConsole::GetConsoleOutputCP");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Console/WindowsConsole", "GetConsoleOutputCP", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Console/WindowsConsole.DoWindowsConsoleCancelEvent
bool System::Console::WindowsConsole::DoWindowsConsoleCancelEvent(int keyCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::WindowsConsole::DoWindowsConsoleCancelEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Console/WindowsConsole", "DoWindowsConsoleCancelEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(keyCode)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keyCode);
}
// Autogenerated method: System.Console/WindowsConsole.GetInputCodePage
int System::Console::WindowsConsole::GetInputCodePage() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::WindowsConsole::GetInputCodePage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Console/WindowsConsole", "GetInputCodePage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Console/WindowsConsole.GetOutputCodePage
int System::Console::WindowsConsole::GetOutputCodePage() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::WindowsConsole::GetOutputCodePage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Console/WindowsConsole", "GetOutputCodePage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Console/WindowsConsole..cctor
void System::Console::WindowsConsole::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::WindowsConsole::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Console/WindowsConsole", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Console/WindowsConsole/WindowsCancelHandler
#include "System/Console_WindowsConsole_WindowsCancelHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Console/WindowsConsole/WindowsCancelHandler.Invoke
bool System::Console::WindowsConsole::WindowsCancelHandler::Invoke(int keyCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::WindowsConsole::WindowsCancelHandler::Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(keyCode)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, keyCode);
}
// Autogenerated method: System.Console/WindowsConsole/WindowsCancelHandler.BeginInvoke
System::IAsyncResult* System::Console::WindowsConsole::WindowsCancelHandler::BeginInvoke(int keyCode, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::WindowsConsole::WindowsCancelHandler::BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(keyCode, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, keyCode, callback, object);
}
// Autogenerated method: System.Console/WindowsConsole/WindowsCancelHandler.EndInvoke
bool System::Console::WindowsConsole::WindowsCancelHandler::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::WindowsConsole::WindowsCancelHandler::EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Console/InternalCancelHandler
#include "System/Console_InternalCancelHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Console/InternalCancelHandler.Invoke
void System::Console::InternalCancelHandler::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::InternalCancelHandler::Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Console/InternalCancelHandler.BeginInvoke
System::IAsyncResult* System::Console::InternalCancelHandler::BeginInvoke(System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::InternalCancelHandler::BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: System.Console/InternalCancelHandler.EndInvoke
void System::Console::InternalCancelHandler::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Console::InternalCancelHandler::EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.ConsoleDriver
#include "System/ConsoleDriver.hpp"
// Including type: System.IConsoleDriver
#include "System/IConsoleDriver.hpp"
// Including type: System.ConsoleKeyInfo
#include "System/ConsoleKeyInfo.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.IConsoleDriver driver
System::IConsoleDriver* System::ConsoleDriver::_get_driver() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleDriver::_get_driver");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IConsoleDriver*>("System", "ConsoleDriver", "driver"));
}
// Autogenerated static field setter
// Set static field: static System.IConsoleDriver driver
void System::ConsoleDriver::_set_driver(System::IConsoleDriver* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleDriver::_set_driver");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ConsoleDriver", "driver", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean is_console
bool System::ConsoleDriver::_get_is_console() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleDriver::_get_is_console");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "ConsoleDriver", "is_console"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean is_console
void System::ConsoleDriver::_set_is_console(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleDriver::_set_is_console");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ConsoleDriver", "is_console", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean called_isatty
bool System::ConsoleDriver::_get_called_isatty() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleDriver::_get_called_isatty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "ConsoleDriver", "called_isatty"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean called_isatty
void System::ConsoleDriver::_set_called_isatty(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleDriver::_set_called_isatty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ConsoleDriver", "called_isatty", value));
}
// Autogenerated method: System.ConsoleDriver..cctor
void System::ConsoleDriver::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleDriver::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "ConsoleDriver", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ConsoleDriver.CreateNullConsoleDriver
System::IConsoleDriver* System::ConsoleDriver::CreateNullConsoleDriver() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleDriver::CreateNullConsoleDriver");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "ConsoleDriver", "CreateNullConsoleDriver", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IConsoleDriver*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ConsoleDriver.CreateWindowsConsoleDriver
System::IConsoleDriver* System::ConsoleDriver::CreateWindowsConsoleDriver() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleDriver::CreateWindowsConsoleDriver");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "ConsoleDriver", "CreateWindowsConsoleDriver", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IConsoleDriver*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ConsoleDriver.CreateTermInfoDriver
System::IConsoleDriver* System::ConsoleDriver::CreateTermInfoDriver(::Il2CppString* term) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleDriver::CreateTermInfoDriver");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "ConsoleDriver", "CreateTermInfoDriver", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(term)));
  return ::il2cpp_utils::RunMethodThrow<System::IConsoleDriver*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, term);
}
// Autogenerated method: System.ConsoleDriver.ReadKey
System::ConsoleKeyInfo System::ConsoleDriver::ReadKey(bool intercept) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleDriver::ReadKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "ConsoleDriver", "ReadKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(intercept)));
  return ::il2cpp_utils::RunMethodThrow<System::ConsoleKeyInfo, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, intercept);
}
// Autogenerated method: System.ConsoleDriver.get_IsConsole
bool System::ConsoleDriver::get_IsConsole() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleDriver::get_IsConsole");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "ConsoleDriver", "get_IsConsole", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.ConsoleDriver.Isatty
bool System::ConsoleDriver::Isatty(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleDriver::Isatty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "ConsoleDriver", "Isatty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.ConsoleDriver.InternalKeyAvailable
int System::ConsoleDriver::InternalKeyAvailable(int ms_timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleDriver::InternalKeyAvailable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "ConsoleDriver", "InternalKeyAvailable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ms_timeout)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ms_timeout);
}
// Autogenerated method: System.ConsoleDriver.TtySetup
bool System::ConsoleDriver::TtySetup(::Il2CppString* keypadXmit, ::Il2CppString* teardown, ::Array<uint8_t>*& control_characters, int*& address) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleDriver::TtySetup");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "ConsoleDriver", "TtySetup", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(keypadXmit, teardown, control_characters, address)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keypadXmit, teardown, control_characters, address);
}
// Autogenerated method: System.ConsoleDriver.SetEcho
bool System::ConsoleDriver::SetEcho(bool wantEcho) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::ConsoleDriver::SetEcho");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "ConsoleDriver", "SetEcho", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(wantEcho)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, wantEcho);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.DelegateData
#include "System/DelegateData.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Delegate
#include "System/Delegate.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.DelegateData
#include "System/DelegateData.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.RuntimeType
#include "System/RuntimeType.hpp"
// Including type: System.MulticastDelegate
#include "System/MulticastDelegate.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Delegate.get_Method
System::Reflection::MethodInfo* System::Delegate::get_Method() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Delegate::get_Method");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Method", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Delegate.GetVirtualMethod_internal
System::Reflection::MethodInfo* System::Delegate::GetVirtualMethod_internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Delegate::GetVirtualMethod_internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetVirtualMethod_internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Delegate.get_Target
::Il2CppObject* System::Delegate::get_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Delegate::get_Target");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Target", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Delegate.CreateDelegate_internal
System::Delegate* System::Delegate::CreateDelegate_internal(System::Type* type, ::Il2CppObject* target, System::Reflection::MethodInfo* info, bool throwOnBindFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Delegate::CreateDelegate_internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Delegate", "CreateDelegate_internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, target, info, throwOnBindFailure)));
  return ::il2cpp_utils::RunMethodThrow<System::Delegate*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, target, info, throwOnBindFailure);
}
// Autogenerated method: System.Delegate.arg_type_match
bool System::Delegate::arg_type_match(System::Type* delArgType, System::Type* argType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Delegate::arg_type_match");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Delegate", "arg_type_match", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(delArgType, argType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, delArgType, argType);
}
// Autogenerated method: System.Delegate.arg_type_match_this
bool System::Delegate::arg_type_match_this(System::Type* delArgType, System::Type* argType, bool boxedThis) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Delegate::arg_type_match_this");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Delegate", "arg_type_match_this", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(delArgType, argType, boxedThis)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, delArgType, argType, boxedThis);
}
// Autogenerated method: System.Delegate.return_type_match
bool System::Delegate::return_type_match(System::Type* delReturnType, System::Type* returnType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Delegate::return_type_match");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Delegate", "return_type_match", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(delReturnType, returnType)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, delReturnType, returnType);
}
// Autogenerated method: System.Delegate.CreateDelegate
System::Delegate* System::Delegate::CreateDelegate(System::Type* type, ::Il2CppObject* firstArgument, System::Reflection::MethodInfo* method, bool throwOnBindFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Delegate::CreateDelegate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Delegate", "CreateDelegate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, firstArgument, method, throwOnBindFailure)));
  return ::il2cpp_utils::RunMethodThrow<System::Delegate*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, firstArgument, method, throwOnBindFailure);
}
// Autogenerated method: System.Delegate.CreateDelegate
System::Delegate* System::Delegate::CreateDelegate(System::Type* type, ::Il2CppObject* firstArgument, System::Reflection::MethodInfo* method, bool throwOnBindFailure, bool allowClosed) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Delegate::CreateDelegate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Delegate", "CreateDelegate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, firstArgument, method, throwOnBindFailure, allowClosed)));
  return ::il2cpp_utils::RunMethodThrow<System::Delegate*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, firstArgument, method, throwOnBindFailure, allowClosed);
}
// Autogenerated method: System.Delegate.CreateDelegate
System::Delegate* System::Delegate::CreateDelegate(System::Type* type, ::Il2CppObject* firstArgument, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Delegate::CreateDelegate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Delegate", "CreateDelegate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, firstArgument, method)));
  return ::il2cpp_utils::RunMethodThrow<System::Delegate*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, firstArgument, method);
}
// Autogenerated method: System.Delegate.CreateDelegate
System::Delegate* System::Delegate::CreateDelegate(System::Type* type, System::Reflection::MethodInfo* method, bool throwOnBindFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Delegate::CreateDelegate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Delegate", "CreateDelegate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, method, throwOnBindFailure)));
  return ::il2cpp_utils::RunMethodThrow<System::Delegate*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, method, throwOnBindFailure);
}
// Autogenerated method: System.Delegate.CreateDelegate
System::Delegate* System::Delegate::CreateDelegate(System::Type* type, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Delegate::CreateDelegate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Delegate", "CreateDelegate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, method)));
  return ::il2cpp_utils::RunMethodThrow<System::Delegate*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, method);
}
// Autogenerated method: System.Delegate.CreateDelegate
System::Delegate* System::Delegate::CreateDelegate(System::Type* type, ::Il2CppObject* target, ::Il2CppString* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Delegate::CreateDelegate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Delegate", "CreateDelegate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, target, method)));
  return ::il2cpp_utils::RunMethodThrow<System::Delegate*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, target, method);
}
// Autogenerated method: System.Delegate.GetCandidateMethod
System::Reflection::MethodInfo* System::Delegate::GetCandidateMethod(System::Type* type, System::Type* target, ::Il2CppString* method, System::Reflection::BindingFlags bflags, bool ignoreCase, bool throwOnBindFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Delegate::GetCandidateMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Delegate", "GetCandidateMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, target, method, bflags, ignoreCase, throwOnBindFailure)));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, target, method, bflags, ignoreCase, throwOnBindFailure);
}
// Autogenerated method: System.Delegate.CreateDelegate
System::Delegate* System::Delegate::CreateDelegate(System::Type* type, System::Type* target, ::Il2CppString* method, bool ignoreCase, bool throwOnBindFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Delegate::CreateDelegate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Delegate", "CreateDelegate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, target, method, ignoreCase, throwOnBindFailure)));
  return ::il2cpp_utils::RunMethodThrow<System::Delegate*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, target, method, ignoreCase, throwOnBindFailure);
}
// Autogenerated method: System.Delegate.CreateDelegate
System::Delegate* System::Delegate::CreateDelegate(System::Type* type, System::Type* target, ::Il2CppString* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Delegate::CreateDelegate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Delegate", "CreateDelegate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, target, method)));
  return ::il2cpp_utils::RunMethodThrow<System::Delegate*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, target, method);
}
// Autogenerated method: System.Delegate.CreateDelegate
System::Delegate* System::Delegate::CreateDelegate(System::Type* type, ::Il2CppObject* target, ::Il2CppString* method, bool ignoreCase, bool throwOnBindFailure) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Delegate::CreateDelegate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Delegate", "CreateDelegate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, target, method, ignoreCase, throwOnBindFailure)));
  return ::il2cpp_utils::RunMethodThrow<System::Delegate*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, target, method, ignoreCase, throwOnBindFailure);
}
// Autogenerated method: System.Delegate.CreateDelegate
System::Delegate* System::Delegate::CreateDelegate(System::Type* type, ::Il2CppObject* target, ::Il2CppString* method, bool ignoreCase) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Delegate::CreateDelegate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Delegate", "CreateDelegate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, target, method, ignoreCase)));
  return ::il2cpp_utils::RunMethodThrow<System::Delegate*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, target, method, ignoreCase);
}
// Autogenerated method: System.Delegate.GetMethodImpl
System::Reflection::MethodInfo* System::Delegate::GetMethodImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Delegate::GetMethodImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetMethodImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Delegate.GetInvocationList
::Array<System::Delegate*>* System::Delegate::GetInvocationList() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Delegate::GetInvocationList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetInvocationList", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Delegate*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Delegate.Combine
System::Delegate* System::Delegate::Combine(System::Delegate* a, System::Delegate* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Delegate::Combine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Delegate", "Combine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b)));
  return ::il2cpp_utils::RunMethodThrow<System::Delegate*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: System.Delegate.Combine
System::Delegate* System::Delegate::Combine(::Array<System::Delegate*>* delegates) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Delegate::Combine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Delegate", "Combine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(delegates)));
  return ::il2cpp_utils::RunMethodThrow<System::Delegate*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, delegates);
}
// Creating initializer_list -> params proxy for: System.Delegate Combine(params System.Delegate[] delegates)
System::Delegate* System::Delegate::Combine(std::initializer_list<System::Delegate*> delegates) {
  return System::Delegate::Combine(::Array<System::Delegate*>::New(delegates));
}
// Autogenerated method: System.Delegate.CombineImpl
System::Delegate* System::Delegate::CombineImpl(System::Delegate* d) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Delegate::CombineImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CombineImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(d)));
  return ::il2cpp_utils::RunMethodThrow<System::Delegate*, false>(this, ___internal__method, d);
}
// Autogenerated method: System.Delegate.Remove
System::Delegate* System::Delegate::Remove(System::Delegate* source, System::Delegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Delegate::Remove");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Delegate", "Remove", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(source, value)));
  return ::il2cpp_utils::RunMethodThrow<System::Delegate*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source, value);
}
// Autogenerated method: System.Delegate.RemoveImpl
System::Delegate* System::Delegate::RemoveImpl(System::Delegate* d) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Delegate::RemoveImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(d)));
  return ::il2cpp_utils::RunMethodThrow<System::Delegate*, false>(this, ___internal__method, d);
}
// Autogenerated method: System.Delegate.CreateDelegateNoSecurityCheck
System::Delegate* System::Delegate::CreateDelegateNoSecurityCheck(System::RuntimeType* type, ::Il2CppObject* firstArgument, System::Reflection::MethodInfo* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Delegate::CreateDelegateNoSecurityCheck");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Delegate", "CreateDelegateNoSecurityCheck", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, firstArgument, method)));
  return ::il2cpp_utils::RunMethodThrow<System::Delegate*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, firstArgument, method);
}
// Autogenerated method: System.Delegate.AllocDelegateLike_internal
System::MulticastDelegate* System::Delegate::AllocDelegateLike_internal(System::Delegate* d) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Delegate::AllocDelegateLike_internal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Delegate", "AllocDelegateLike_internal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(d)));
  return ::il2cpp_utils::RunMethodThrow<System::MulticastDelegate*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, d);
}
// Autogenerated method: System.Delegate.Clone
::Il2CppObject* System::Delegate::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Delegate::Clone");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
::Il2CppObject* System::Delegate::System_ICloneable_Clone() {
  return System::Delegate::Clone();
}
// Autogenerated method: System.Delegate.Equals
bool System::Delegate::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Delegate::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Delegate.GetHashCode
int System::Delegate::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Delegate::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Delegate.GetObjectData
void System::Delegate::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Delegate::GetObjectData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(info, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
void System::Delegate::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  System::Delegate::GetObjectData(info, context);
}
// Autogenerated method: System.Delegate.op_Equality
bool System::operator ==(System::Delegate* d1, System::Delegate& d2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Delegate::op_Equality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Delegate", "op_Equality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(d1, &d2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, d1, &d2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.DelegateSerializationHolder
#include "System/DelegateSerializationHolder.hpp"
// Including type: System.DelegateSerializationHolder/DelegateEntry
#include "System/DelegateSerializationHolder_DelegateEntry.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.DelegateSerializationHolder.GetDelegateData
void System::DelegateSerializationHolder::GetDelegateData(System::Delegate* instance, System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DelegateSerializationHolder::GetDelegateData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DelegateSerializationHolder", "GetDelegateData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(instance, info, ctx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, instance, info, ctx);
}
// Autogenerated method: System.DelegateSerializationHolder.GetObjectData
void System::DelegateSerializationHolder::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DelegateSerializationHolder::GetObjectData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(info, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
void System::DelegateSerializationHolder::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  System::DelegateSerializationHolder::GetObjectData(info, context);
}
// Autogenerated method: System.DelegateSerializationHolder.GetRealObject
::Il2CppObject* System::DelegateSerializationHolder::GetRealObject(System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DelegateSerializationHolder::GetRealObject");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRealObject", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, context);
}
::Il2CppObject* System::DelegateSerializationHolder::System_Runtime_Serialization_IObjectReference_GetRealObject(System::Runtime::Serialization::StreamingContext context) {
  return System::DelegateSerializationHolder::GetRealObject(context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.DelegateSerializationHolder/DelegateEntry
#include "System/DelegateSerializationHolder_DelegateEntry.hpp"
// Including type: System.Delegate
#include "System/Delegate.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.DelegateSerializationHolder/DelegateEntry.DeserializeDelegate
System::Delegate* System::DelegateSerializationHolder::DelegateEntry::DeserializeDelegate(System::Runtime::Serialization::SerializationInfo* info, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::DelegateSerializationHolder::DelegateEntry::DeserializeDelegate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DeserializeDelegate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(info, index)));
  return ::il2cpp_utils::RunMethodThrow<System::Delegate*, false>(this, ___internal__method, info, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IConsoleDriver
#include "System/IConsoleDriver.hpp"
// Including type: System.ConsoleKeyInfo
#include "System/ConsoleKeyInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IConsoleDriver.ReadKey
System::ConsoleKeyInfo System::IConsoleDriver::ReadKey(bool intercept) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IConsoleDriver::ReadKey");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadKey", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(intercept)));
  return ::il2cpp_utils::RunMethodThrow<System::ConsoleKeyInfo, false>(this, ___internal__method, intercept);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IntPtr Zero
System::IntPtr System::IntPtr::_get_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IntPtr::_get_Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("System", "IntPtr", "Zero"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IntPtr Zero
void System::IntPtr::_set_Zero(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IntPtr::_set_Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "IntPtr", "Zero", value));
}
// Autogenerated method: System.IntPtr.get_Size
int System::IntPtr::get_Size() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IntPtr::get_Size");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "IntPtr", "get_Size", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IntPtr.ToInt64
int64_t System::IntPtr::ToInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IntPtr::ToInt64");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToInt64", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(*this, ___internal__method);
}
// Autogenerated method: System.IntPtr.ToPointer
void* System::IntPtr::ToPointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IntPtr::ToPointer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToPointer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<void*, false>(*this, ___internal__method);
}
// Autogenerated method: System.IntPtr.ToString
::Il2CppString* System::IntPtr::ToString(::Il2CppString* format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IntPtr::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method, format);
}
// Autogenerated method: System.IntPtr.op_Explicit
System::IntPtr::IntPtr(int& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IntPtr::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "IntPtr", "op_Explicit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  *this = ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.IntPtr.op_Explicit
System::IntPtr::IntPtr(int64_t& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IntPtr::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "IntPtr", "op_Explicit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  *this = ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.IntPtr.op_Explicit
// ABORTED elsewhere.  System::IntPtr::IntPtr(void* value)
// Autogenerated method: System.IntPtr.op_Explicit
System::IntPtr::operator int() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IntPtr::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "IntPtr", "op_Explicit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IntPtr.op_Explicit
System::IntPtr::operator int64_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IntPtr::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "IntPtr", "op_Explicit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IntPtr.op_Explicit
// ABORTED elsewhere.  System::IntPtr::operator void*()
// Autogenerated method: System.IntPtr.IsNull
bool System::IntPtr::IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IntPtr::IsNull");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "IsNull", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: System.IntPtr.System.Runtime.Serialization.ISerializable.GetObjectData
void System::IntPtr::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IntPtr::System.Runtime.Serialization.ISerializable.GetObjectData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(info, context)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, info, context);
}
// Autogenerated method: System.IntPtr.Equals
bool System::IntPtr::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IntPtr::Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(obj)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.IntPtr.GetHashCode
int System::IntPtr::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IntPtr::GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.IntPtr.ToString
::Il2CppString* System::IntPtr::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IntPtr::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: System.IntPtr.op_Equality
bool System::operator ==(const System::IntPtr& value1, const System::IntPtr& value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IntPtr::op_Equality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "IntPtr", "op_Equality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value1, value2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value1, value2);
}
// Autogenerated method: System.IntPtr.op_Inequality
bool System::operator !=(const System::IntPtr& value1, const System::IntPtr& value2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IntPtr::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "IntPtr", "op_Inequality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value1, value2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value1, value2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.KnownTerminals
#include "System/KnownTerminals.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.KnownTerminals.get_linux
::Array<uint8_t>* System::KnownTerminals::get_linux() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::KnownTerminals::get_linux");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "KnownTerminals", "get_linux", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.KnownTerminals.get_xterm
::Array<uint8_t>* System::KnownTerminals::get_xterm() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::KnownTerminals::get_xterm");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "KnownTerminals", "get_xterm", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.KnownTerminals.get_ansi
::Array<uint8_t>* System::KnownTerminals::get_ansi() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::KnownTerminals::get_ansi");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "KnownTerminals", "get_ansi", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
