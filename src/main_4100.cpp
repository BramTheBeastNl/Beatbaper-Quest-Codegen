// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MediaAsyncLoader/<LoadWebpage>d__0
#include "GlobalNamespace/MediaAsyncLoader_-LoadWebpage-d__0.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MediaAsyncLoader/<LoadWebpage>d__0.MoveNext
void GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MediaAsyncLoader/<LoadWebpage>d__0.SetStateMachine
void GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadWebpage$d__0::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: MediaAsyncLoader::$LoadWebpage$d__0::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MediaAsyncLoader::$LoadWebpage$d__0::*)()>(&MediaAsyncLoader::$LoadWebpage$d__0::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MediaAsyncLoader::$LoadWebpage$d__0), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MediaAsyncLoader::$LoadWebpage$d__0::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MediaAsyncLoader::$LoadWebpage$d__0::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&MediaAsyncLoader::$LoadWebpage$d__0::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MediaAsyncLoader::$LoadWebpage$d__0), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MediaAsyncLoader/<LoadAudioClipAsync>d__1
#include "GlobalNamespace/MediaAsyncLoader_-LoadAudioClipAsync-d__1.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MediaAsyncLoader/<LoadAudioClipAsync>d__1.MoveNext
void GlobalNamespace::MediaAsyncLoader::$LoadAudioClipAsync$d__1::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadAudioClipAsync$d__1::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MediaAsyncLoader/<LoadAudioClipAsync>d__1.SetStateMachine
void GlobalNamespace::MediaAsyncLoader::$LoadAudioClipAsync$d__1::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadAudioClipAsync$d__1::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: MediaAsyncLoader::$LoadAudioClipAsync$d__1::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MediaAsyncLoader::$LoadAudioClipAsync$d__1::*)()>(&MediaAsyncLoader::$LoadAudioClipAsync$d__1::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MediaAsyncLoader::$LoadAudioClipAsync$d__1), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MediaAsyncLoader::$LoadAudioClipAsync$d__1::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MediaAsyncLoader::$LoadAudioClipAsync$d__1::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&MediaAsyncLoader::$LoadAudioClipAsync$d__1::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MediaAsyncLoader::$LoadAudioClipAsync$d__1), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MediaAsyncLoader/<LoadTextureAsync>d__2
#include "GlobalNamespace/MediaAsyncLoader_-LoadTextureAsync-d__2.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MediaAsyncLoader/<LoadTextureAsync>d__2.MoveNext
void GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MediaAsyncLoader/<LoadTextureAsync>d__2.SetStateMachine
void GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadTextureAsync$d__2::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: MediaAsyncLoader::$LoadTextureAsync$d__2::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MediaAsyncLoader::$LoadTextureAsync$d__2::*)()>(&MediaAsyncLoader::$LoadTextureAsync$d__2::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MediaAsyncLoader::$LoadTextureAsync$d__2), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MediaAsyncLoader::$LoadTextureAsync$d__2::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MediaAsyncLoader::$LoadTextureAsync$d__2::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&MediaAsyncLoader::$LoadTextureAsync$d__2::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MediaAsyncLoader::$LoadTextureAsync$d__2), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MediaAsyncLoader/<LoadSpriteAsync>d__3
#include "GlobalNamespace/MediaAsyncLoader_-LoadSpriteAsync-d__3.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
// Including type: UnityEngine.AsyncOperation
#include "UnityEngine/AsyncOperation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MediaAsyncLoader/<LoadSpriteAsync>d__3.MoveNext
void GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MediaAsyncLoader/<LoadSpriteAsync>d__3.SetStateMachine
void GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MediaAsyncLoader::$LoadSpriteAsync$d__3::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: MediaAsyncLoader::$LoadSpriteAsync$d__3::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MediaAsyncLoader::$LoadSpriteAsync$d__3::*)()>(&MediaAsyncLoader::$LoadSpriteAsync$d__3::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MediaAsyncLoader::$LoadSpriteAsync$d__3), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MediaAsyncLoader::$LoadSpriteAsync$d__3::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MediaAsyncLoader::$LoadSpriteAsync$d__3::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&MediaAsyncLoader::$LoadSpriteAsync$d__3::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MediaAsyncLoader::$LoadSpriteAsync$d__3), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BasicMockPlayerScoreCalculator
#include "GlobalNamespace/BasicMockPlayerScoreCalculator.hpp"
// Including type: System.Random
#include "System/Random.hpp"
// Including type: MockNoteData
#include "GlobalNamespace/MockNoteData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BasicMockPlayerScoreCalculator.GetScoreForNote
int GlobalNamespace::BasicMockPlayerScoreCalculator::GetScoreForNote(GlobalNamespace::MockNoteData* noteData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicMockPlayerScoreCalculator::GetScoreForNote");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScoreForNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteData)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, noteData);
}
// Writing MetadataGetter for method: BasicMockPlayerScoreCalculator::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BasicMockPlayerScoreCalculator::*)(float, int, int)>(&BasicMockPlayerScoreCalculator::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BasicMockPlayerScoreCalculator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BasicMockPlayerScoreCalculator::*)(float, int, int)>(&BasicMockPlayerScoreCalculator::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BasicMockPlayerScoreCalculator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BasicMockPlayerScoreCalculator::GetScoreForNote
// Il2CppName: GetScoreForNote
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (BasicMockPlayerScoreCalculator::*)(GlobalNamespace::MockNoteData*)>(&BasicMockPlayerScoreCalculator::GetScoreForNote)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BasicMockPlayerScoreCalculator*), "GetScoreForNote", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MockNoteData*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IMockBeatmapDataProvider
#include "GlobalNamespace/IMockBeatmapDataProvider.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: MockBeatmapData
#include "GlobalNamespace/MockBeatmapData.hpp"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IMockBeatmapDataProvider.GetBeatmapData
System::Threading::Tasks::Task_1<GlobalNamespace::MockBeatmapData*>* GlobalNamespace::IMockBeatmapDataProvider::GetBeatmapData(GlobalNamespace::BeatmapIdentifierNetSerializable* beatmap, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMockBeatmapDataProvider::GetBeatmapData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBeatmapData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmap), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::MockBeatmapData*>*, false>(this, ___internal__method, beatmap, cancellationToken);
}
// Writing MetadataGetter for method: IMockBeatmapDataProvider::GetBeatmapData
// Il2CppName: GetBeatmapData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<GlobalNamespace::MockBeatmapData*>* (IMockBeatmapDataProvider::*)(GlobalNamespace::BeatmapIdentifierNetSerializable*, System::Threading::CancellationToken)>(&IMockBeatmapDataProvider::GetBeatmapData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMockBeatmapDataProvider*), "GetBeatmapData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapIdentifierNetSerializable*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IMockPlayerScoreCalculator
#include "GlobalNamespace/IMockPlayerScoreCalculator.hpp"
// Including type: MockNoteData
#include "GlobalNamespace/MockNoteData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IMockPlayerScoreCalculator.GetScoreForNote
int GlobalNamespace::IMockPlayerScoreCalculator::GetScoreForNote(GlobalNamespace::MockNoteData* noteData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMockPlayerScoreCalculator::GetScoreForNote");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetScoreForNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteData)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, noteData);
}
// Writing MetadataGetter for method: IMockPlayerScoreCalculator::GetScoreForNote
// Il2CppName: GetScoreForNote
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (IMockPlayerScoreCalculator::*)(GlobalNamespace::MockNoteData*)>(&IMockPlayerScoreCalculator::GetScoreForNote)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMockPlayerScoreCalculator*), "GetScoreForNote", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MockNoteData*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MockBeatmapData
#include "GlobalNamespace/MockBeatmapData.hpp"
// Including type: MockNoteData
#include "GlobalNamespace/MockNoteData.hpp"
// Including type: MockObstacleData
#include "GlobalNamespace/MockObstacleData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MockBeatmapData.get_numberOfLines
int GlobalNamespace::MockBeatmapData::get_numberOfLines() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockBeatmapData::get_numberOfLines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_numberOfLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MockBeatmapData.set_numberOfLines
void GlobalNamespace::MockBeatmapData::set_numberOfLines(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockBeatmapData::set_numberOfLines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_numberOfLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MockBeatmapData.get_songEndTime
float GlobalNamespace::MockBeatmapData::get_songEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockBeatmapData::get_songEndTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: MockBeatmapData.set_songEndTime
void GlobalNamespace::MockBeatmapData::set_songEndTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockBeatmapData::set_songEndTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_songEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MockBeatmapData.get_leftNotes
::Array<GlobalNamespace::MockNoteData*>* GlobalNamespace::MockBeatmapData::get_leftNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockBeatmapData::get_leftNotes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftNotes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::MockNoteData*>*, false>(this, ___internal__method);
}
// Autogenerated method: MockBeatmapData.set_leftNotes
void GlobalNamespace::MockBeatmapData::set_leftNotes(::Array<GlobalNamespace::MockNoteData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockBeatmapData::set_leftNotes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_leftNotes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MockBeatmapData.get_rightNotes
::Array<GlobalNamespace::MockNoteData*>* GlobalNamespace::MockBeatmapData::get_rightNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockBeatmapData::get_rightNotes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightNotes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::MockNoteData*>*, false>(this, ___internal__method);
}
// Autogenerated method: MockBeatmapData.set_rightNotes
void GlobalNamespace::MockBeatmapData::set_rightNotes(::Array<GlobalNamespace::MockNoteData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockBeatmapData::set_rightNotes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rightNotes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MockBeatmapData.get_bombNotes
::Array<GlobalNamespace::MockNoteData*>* GlobalNamespace::MockBeatmapData::get_bombNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockBeatmapData::get_bombNotes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bombNotes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::MockNoteData*>*, false>(this, ___internal__method);
}
// Autogenerated method: MockBeatmapData.set_bombNotes
void GlobalNamespace::MockBeatmapData::set_bombNotes(::Array<GlobalNamespace::MockNoteData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockBeatmapData::set_bombNotes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bombNotes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MockBeatmapData.get_obstacles
::Array<GlobalNamespace::MockObstacleData*>* GlobalNamespace::MockBeatmapData::get_obstacles() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockBeatmapData::get_obstacles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_obstacles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::MockObstacleData*>*, false>(this, ___internal__method);
}
// Autogenerated method: MockBeatmapData.set_obstacles
void GlobalNamespace::MockBeatmapData::set_obstacles(::Array<GlobalNamespace::MockObstacleData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockBeatmapData::set_obstacles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_obstacles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: MockBeatmapData::get_numberOfLines
// Il2CppName: get_numberOfLines
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MockBeatmapData::*)()>(&MockBeatmapData::get_numberOfLines)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockBeatmapData*), "get_numberOfLines", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MockBeatmapData::set_numberOfLines
// Il2CppName: set_numberOfLines
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockBeatmapData::*)(int)>(&MockBeatmapData::set_numberOfLines)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockBeatmapData*), "set_numberOfLines", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MockBeatmapData::get_songEndTime
// Il2CppName: get_songEndTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MockBeatmapData::*)()>(&MockBeatmapData::get_songEndTime)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockBeatmapData*), "get_songEndTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MockBeatmapData::set_songEndTime
// Il2CppName: set_songEndTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockBeatmapData::*)(float)>(&MockBeatmapData::set_songEndTime)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockBeatmapData*), "set_songEndTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: MockBeatmapData::get_leftNotes
// Il2CppName: get_leftNotes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<GlobalNamespace::MockNoteData*>* (MockBeatmapData::*)()>(&MockBeatmapData::get_leftNotes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockBeatmapData*), "get_leftNotes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MockBeatmapData::set_leftNotes
// Il2CppName: set_leftNotes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockBeatmapData::*)(::Array<GlobalNamespace::MockNoteData*>*)>(&MockBeatmapData::set_leftNotes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockBeatmapData*), "set_leftNotes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::MockNoteData*>*>()});
  }
};
// Writing MetadataGetter for method: MockBeatmapData::get_rightNotes
// Il2CppName: get_rightNotes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<GlobalNamespace::MockNoteData*>* (MockBeatmapData::*)()>(&MockBeatmapData::get_rightNotes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockBeatmapData*), "get_rightNotes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MockBeatmapData::set_rightNotes
// Il2CppName: set_rightNotes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockBeatmapData::*)(::Array<GlobalNamespace::MockNoteData*>*)>(&MockBeatmapData::set_rightNotes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockBeatmapData*), "set_rightNotes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::MockNoteData*>*>()});
  }
};
// Writing MetadataGetter for method: MockBeatmapData::get_bombNotes
// Il2CppName: get_bombNotes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<GlobalNamespace::MockNoteData*>* (MockBeatmapData::*)()>(&MockBeatmapData::get_bombNotes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockBeatmapData*), "get_bombNotes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MockBeatmapData::set_bombNotes
// Il2CppName: set_bombNotes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockBeatmapData::*)(::Array<GlobalNamespace::MockNoteData*>*)>(&MockBeatmapData::set_bombNotes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockBeatmapData*), "set_bombNotes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::MockNoteData*>*>()});
  }
};
// Writing MetadataGetter for method: MockBeatmapData::get_obstacles
// Il2CppName: get_obstacles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<GlobalNamespace::MockObstacleData*>* (MockBeatmapData::*)()>(&MockBeatmapData::get_obstacles)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockBeatmapData*), "get_obstacles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MockBeatmapData::set_obstacles
// Il2CppName: set_obstacles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockBeatmapData::*)(::Array<GlobalNamespace::MockObstacleData*>*)>(&MockBeatmapData::set_obstacles)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockBeatmapData*), "set_obstacles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::MockObstacleData*>*>()});
  }
};
// Writing MetadataGetter for method: MockBeatmapData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockBeatmapData::*)()>(&MockBeatmapData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockBeatmapData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockBeatmapData::*)()>(&MockBeatmapData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockBeatmapData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MockNodePoseSyncStateSender
#include "GlobalNamespace/MockNodePoseSyncStateSender.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: PoseSerializable
#include "GlobalNamespace/PoseSerializable.hpp"
// Including type: NodePoseSyncStateNetSerializable
#include "GlobalNamespace/NodePoseSyncStateNetSerializable.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MockNodePoseSyncStateSender.Dispose
void GlobalNamespace::MockNodePoseSyncStateSender::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockNodePoseSyncStateSender::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MockNodePoseSyncStateSender.SendPose
void GlobalNamespace::MockNodePoseSyncStateSender::SendPose(GlobalNamespace::PoseSerializable headPose, GlobalNamespace::PoseSerializable leftHandPose, GlobalNamespace::PoseSerializable rightHandPose) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockNodePoseSyncStateSender::SendPose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendPose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headPose), ::il2cpp_utils::ExtractType(leftHandPose), ::il2cpp_utils::ExtractType(rightHandPose)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, headPose, leftHandPose, rightHandPose);
}
// Autogenerated method: MockNodePoseSyncStateSender.HandleNodePoseSyncStateUpdate
void GlobalNamespace::MockNodePoseSyncStateSender::HandleNodePoseSyncStateUpdate(GlobalNamespace::NodePoseSyncStateNetSerializable* nodePose, GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockNodePoseSyncStateSender::HandleNodePoseSyncStateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNodePoseSyncStateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodePose), ::il2cpp_utils::ExtractType(connectedPlayer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nodePose, connectedPlayer);
}
// Writing MetadataGetter for method: MockNodePoseSyncStateSender::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockNodePoseSyncStateSender::*)(GlobalNamespace::IMultiplayerSessionManager*)>(&MockNodePoseSyncStateSender::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockNodePoseSyncStateSender*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IMultiplayerSessionManager*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockNodePoseSyncStateSender::*)(GlobalNamespace::IMultiplayerSessionManager*)>(&MockNodePoseSyncStateSender::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockNodePoseSyncStateSender*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IMultiplayerSessionManager*>()});
  }
};
// Writing MetadataGetter for method: MockNodePoseSyncStateSender::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockNodePoseSyncStateSender::*)()>(&MockNodePoseSyncStateSender::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockNodePoseSyncStateSender*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MockNodePoseSyncStateSender::SendPose
// Il2CppName: SendPose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockNodePoseSyncStateSender::*)(GlobalNamespace::PoseSerializable, GlobalNamespace::PoseSerializable, GlobalNamespace::PoseSerializable)>(&MockNodePoseSyncStateSender::SendPose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockNodePoseSyncStateSender*), "SendPose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PoseSerializable>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PoseSerializable>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PoseSerializable>()});
  }
};
// Writing MetadataGetter for method: MockNodePoseSyncStateSender::HandleNodePoseSyncStateUpdate
// Il2CppName: HandleNodePoseSyncStateUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockNodePoseSyncStateSender::*)(GlobalNamespace::NodePoseSyncStateNetSerializable*, GlobalNamespace::IConnectedPlayer*)>(&MockNodePoseSyncStateSender::HandleNodePoseSyncStateUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockNodePoseSyncStateSender*), "HandleNodePoseSyncStateUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::NodePoseSyncStateNetSerializable*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IConnectedPlayer*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MockNoteData
#include "GlobalNamespace/MockNoteData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MockNoteData.get_time
float GlobalNamespace::MockNoteData::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockNoteData::get_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: MockNoteData.set_time
void GlobalNamespace::MockNoteData::set_time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockNoteData::set_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MockNoteData.get_lineIndex
int GlobalNamespace::MockNoteData::get_lineIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockNoteData::get_lineIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MockNoteData.set_lineIndex
void GlobalNamespace::MockNoteData::set_lineIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockNoteData::set_lineIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lineIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MockNoteData.get_colorType
GlobalNamespace::ColorType GlobalNamespace::MockNoteData::get_colorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockNoteData::get_colorType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colorType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ColorType, false>(this, ___internal__method);
}
// Autogenerated method: MockNoteData.set_colorType
void GlobalNamespace::MockNoteData::set_colorType(GlobalNamespace::ColorType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockNoteData::set_colorType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colorType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MockNoteData.get_cutDirection
GlobalNamespace::NoteCutDirection GlobalNamespace::MockNoteData::get_cutDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockNoteData::get_cutDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cutDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NoteCutDirection, false>(this, ___internal__method);
}
// Autogenerated method: MockNoteData.set_cutDirection
void GlobalNamespace::MockNoteData::set_cutDirection(GlobalNamespace::NoteCutDirection value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockNoteData::set_cutDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cutDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MockNoteData.get_noteLineLayer
GlobalNamespace::NoteLineLayer GlobalNamespace::MockNoteData::get_noteLineLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockNoteData::get_noteLineLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noteLineLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NoteLineLayer, false>(this, ___internal__method);
}
// Autogenerated method: MockNoteData.set_noteLineLayer
void GlobalNamespace::MockNoteData::set_noteLineLayer(GlobalNamespace::NoteLineLayer value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockNoteData::set_noteLineLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_noteLineLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MockNoteData.get_duration
float GlobalNamespace::MockNoteData::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockNoteData::get_duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: MockNoteData.set_duration
void GlobalNamespace::MockNoteData::set_duration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockNoteData::set_duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MockNoteData.Mirror
void GlobalNamespace::MockNoteData::Mirror(int lineCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockNoteData::Mirror");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Mirror", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineCount)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lineCount);
}
// Writing MetadataGetter for method: MockNoteData::get_time
// Il2CppName: get_time
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MockNoteData::*)()>(&MockNoteData::get_time)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockNoteData*), "get_time", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MockNoteData::set_time
// Il2CppName: set_time
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockNoteData::*)(float)>(&MockNoteData::set_time)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockNoteData*), "set_time", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: MockNoteData::get_lineIndex
// Il2CppName: get_lineIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MockNoteData::*)()>(&MockNoteData::get_lineIndex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockNoteData*), "get_lineIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MockNoteData::set_lineIndex
// Il2CppName: set_lineIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockNoteData::*)(int)>(&MockNoteData::set_lineIndex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockNoteData*), "set_lineIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MockNoteData::get_colorType
// Il2CppName: get_colorType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::ColorType (MockNoteData::*)()>(&MockNoteData::get_colorType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockNoteData*), "get_colorType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MockNoteData::set_colorType
// Il2CppName: set_colorType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockNoteData::*)(GlobalNamespace::ColorType)>(&MockNoteData::set_colorType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockNoteData*), "set_colorType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ColorType>()});
  }
};
// Writing MetadataGetter for method: MockNoteData::get_cutDirection
// Il2CppName: get_cutDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::NoteCutDirection (MockNoteData::*)()>(&MockNoteData::get_cutDirection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockNoteData*), "get_cutDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MockNoteData::set_cutDirection
// Il2CppName: set_cutDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockNoteData::*)(GlobalNamespace::NoteCutDirection)>(&MockNoteData::set_cutDirection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockNoteData*), "set_cutDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::NoteCutDirection>()});
  }
};
// Writing MetadataGetter for method: MockNoteData::get_noteLineLayer
// Il2CppName: get_noteLineLayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::NoteLineLayer (MockNoteData::*)()>(&MockNoteData::get_noteLineLayer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockNoteData*), "get_noteLineLayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MockNoteData::set_noteLineLayer
// Il2CppName: set_noteLineLayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockNoteData::*)(GlobalNamespace::NoteLineLayer)>(&MockNoteData::set_noteLineLayer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockNoteData*), "set_noteLineLayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::NoteLineLayer>()});
  }
};
// Writing MetadataGetter for method: MockNoteData::get_duration
// Il2CppName: get_duration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MockNoteData::*)()>(&MockNoteData::get_duration)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockNoteData*), "get_duration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MockNoteData::set_duration
// Il2CppName: set_duration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockNoteData::*)(float)>(&MockNoteData::set_duration)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockNoteData*), "set_duration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: MockNoteData::Mirror
// Il2CppName: Mirror
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockNoteData::*)(int)>(&MockNoteData::Mirror)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockNoteData*), "Mirror", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MockNoteData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockNoteData::*)()>(&MockNoteData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockNoteData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockNoteData::*)()>(&MockNoteData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockNoteData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MockObstacleData
#include "GlobalNamespace/MockObstacleData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MockObstacleData.get_time
float GlobalNamespace::MockObstacleData::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockObstacleData::get_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: MockObstacleData.set_time
void GlobalNamespace::MockObstacleData::set_time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockObstacleData::set_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MockObstacleData.get_lineIndex
int GlobalNamespace::MockObstacleData::get_lineIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockObstacleData::get_lineIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lineIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MockObstacleData.set_lineIndex
void GlobalNamespace::MockObstacleData::set_lineIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockObstacleData::set_lineIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lineIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MockObstacleData.get_obstacleType
GlobalNamespace::ObstacleType GlobalNamespace::MockObstacleData::get_obstacleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockObstacleData::get_obstacleType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_obstacleType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ObstacleType, false>(this, ___internal__method);
}
// Autogenerated method: MockObstacleData.set_obstacleType
void GlobalNamespace::MockObstacleData::set_obstacleType(GlobalNamespace::ObstacleType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockObstacleData::set_obstacleType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_obstacleType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MockObstacleData.get_duration
float GlobalNamespace::MockObstacleData::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockObstacleData::get_duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: MockObstacleData.set_duration
void GlobalNamespace::MockObstacleData::set_duration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockObstacleData::set_duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MockObstacleData.get_width
int GlobalNamespace::MockObstacleData::get_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockObstacleData::get_width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MockObstacleData.set_width
void GlobalNamespace::MockObstacleData::set_width(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockObstacleData::set_width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: MockObstacleData::get_time
// Il2CppName: get_time
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MockObstacleData::*)()>(&MockObstacleData::get_time)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockObstacleData*), "get_time", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MockObstacleData::set_time
// Il2CppName: set_time
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockObstacleData::*)(float)>(&MockObstacleData::set_time)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockObstacleData*), "set_time", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: MockObstacleData::get_lineIndex
// Il2CppName: get_lineIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MockObstacleData::*)()>(&MockObstacleData::get_lineIndex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockObstacleData*), "get_lineIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MockObstacleData::set_lineIndex
// Il2CppName: set_lineIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockObstacleData::*)(int)>(&MockObstacleData::set_lineIndex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockObstacleData*), "set_lineIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MockObstacleData::get_obstacleType
// Il2CppName: get_obstacleType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::ObstacleType (MockObstacleData::*)()>(&MockObstacleData::get_obstacleType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockObstacleData*), "get_obstacleType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MockObstacleData::set_obstacleType
// Il2CppName: set_obstacleType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockObstacleData::*)(GlobalNamespace::ObstacleType)>(&MockObstacleData::set_obstacleType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockObstacleData*), "set_obstacleType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ObstacleType>()});
  }
};
// Writing MetadataGetter for method: MockObstacleData::get_duration
// Il2CppName: get_duration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (MockObstacleData::*)()>(&MockObstacleData::get_duration)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockObstacleData*), "get_duration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MockObstacleData::set_duration
// Il2CppName: set_duration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockObstacleData::*)(float)>(&MockObstacleData::set_duration)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockObstacleData*), "set_duration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: MockObstacleData::get_width
// Il2CppName: get_width
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MockObstacleData::*)()>(&MockObstacleData::get_width)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockObstacleData*), "get_width", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MockObstacleData::set_width
// Il2CppName: set_width
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockObstacleData::*)(int)>(&MockObstacleData::set_width)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockObstacleData*), "set_width", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MockObstacleData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockObstacleData::*)()>(&MockObstacleData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockObstacleData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockObstacleData::*)()>(&MockObstacleData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockObstacleData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MockPlayerFiniteStateMachine
#include "GlobalNamespace/MockPlayerFiniteStateMachine.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: IGameplayRpcManager
#include "GlobalNamespace/IGameplayRpcManager.hpp"
// Including type: IMenuRpcManager
#include "GlobalNamespace/IMenuRpcManager.hpp"
// Including type: IMockBeatmapDataProvider
#include "GlobalNamespace/IMockBeatmapDataProvider.hpp"
// Including type: MockPlayerLobbyPoseGenerator
#include "GlobalNamespace/MockPlayerLobbyPoseGenerator.hpp"
// Including type: MockPlayerGamePoseGenerator
#include "GlobalNamespace/MockPlayerGamePoseGenerator.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MockPlayerFiniteStateMachine.get_saberAColor
UnityEngine::Color GlobalNamespace::MockPlayerFiniteStateMachine::get_saberAColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPlayerFiniteStateMachine::get_saberAColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_saberAColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: MockPlayerFiniteStateMachine.set_saberAColor
void GlobalNamespace::MockPlayerFiniteStateMachine::set_saberAColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPlayerFiniteStateMachine::set_saberAColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_saberAColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MockPlayerFiniteStateMachine.get_saberBColor
UnityEngine::Color GlobalNamespace::MockPlayerFiniteStateMachine::get_saberBColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPlayerFiniteStateMachine::get_saberBColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_saberBColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: MockPlayerFiniteStateMachine.set_saberBColor
void GlobalNamespace::MockPlayerFiniteStateMachine::set_saberBColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPlayerFiniteStateMachine::set_saberBColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_saberBColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MockPlayerFiniteStateMachine.get_obstaclesColor
UnityEngine::Color GlobalNamespace::MockPlayerFiniteStateMachine::get_obstaclesColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPlayerFiniteStateMachine::get_obstaclesColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_obstaclesColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: MockPlayerFiniteStateMachine.set_obstaclesColor
void GlobalNamespace::MockPlayerFiniteStateMachine::set_obstaclesColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPlayerFiniteStateMachine::set_obstaclesColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_obstaclesColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MockPlayerFiniteStateMachine.get_leftHanded
bool GlobalNamespace::MockPlayerFiniteStateMachine::get_leftHanded() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPlayerFiniteStateMachine::get_leftHanded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftHanded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MockPlayerFiniteStateMachine.set_leftHanded
void GlobalNamespace::MockPlayerFiniteStateMachine::set_leftHanded(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPlayerFiniteStateMachine::set_leftHanded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_leftHanded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MockPlayerFiniteStateMachine.get_inactiveByDefault
bool GlobalNamespace::MockPlayerFiniteStateMachine::get_inactiveByDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPlayerFiniteStateMachine::get_inactiveByDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_inactiveByDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MockPlayerFiniteStateMachine.set_inactiveByDefault
void GlobalNamespace::MockPlayerFiniteStateMachine::set_inactiveByDefault(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPlayerFiniteStateMachine::set_inactiveByDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_inactiveByDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MockPlayerFiniteStateMachine.get_gamePoseGenerator
GlobalNamespace::MockPlayerGamePoseGenerator* GlobalNamespace::MockPlayerFiniteStateMachine::get_gamePoseGenerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPlayerFiniteStateMachine::get_gamePoseGenerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gamePoseGenerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MockPlayerGamePoseGenerator*, false>(this, ___internal__method);
}
// Autogenerated method: MockPlayerFiniteStateMachine.Dispose
void GlobalNamespace::MockPlayerFiniteStateMachine::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPlayerFiniteStateMachine::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MockPlayerFiniteStateMachine.SetIsReady
void GlobalNamespace::MockPlayerFiniteStateMachine::SetIsReady(bool isReady) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPlayerFiniteStateMachine::SetIsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isReady)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isReady);
}
// Writing MetadataGetter for method: MockPlayerFiniteStateMachine::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockPlayerFiniteStateMachine::*)(GlobalNamespace::IMultiplayerSessionManager*, GlobalNamespace::IGameplayRpcManager*, GlobalNamespace::IMenuRpcManager*, GlobalNamespace::IMockBeatmapDataProvider*, GlobalNamespace::MockPlayerLobbyPoseGenerator*, GlobalNamespace::MockPlayerGamePoseGenerator*)>(&MockPlayerFiniteStateMachine::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerFiniteStateMachine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IMultiplayerSessionManager*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IGameplayRpcManager*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IMenuRpcManager*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IMockBeatmapDataProvider*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MockPlayerLobbyPoseGenerator*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MockPlayerGamePoseGenerator*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockPlayerFiniteStateMachine::*)(GlobalNamespace::IMultiplayerSessionManager*, GlobalNamespace::IGameplayRpcManager*, GlobalNamespace::IMenuRpcManager*, GlobalNamespace::IMockBeatmapDataProvider*, GlobalNamespace::MockPlayerLobbyPoseGenerator*, GlobalNamespace::MockPlayerGamePoseGenerator*)>(&MockPlayerFiniteStateMachine::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerFiniteStateMachine*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IMultiplayerSessionManager*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IGameplayRpcManager*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IMenuRpcManager*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IMockBeatmapDataProvider*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MockPlayerLobbyPoseGenerator*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MockPlayerGamePoseGenerator*>()});
  }
};
// Writing MetadataGetter for method: MockPlayerFiniteStateMachine::get_saberAColor
// Il2CppName: get_saberAColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (MockPlayerFiniteStateMachine::*)()>(&MockPlayerFiniteStateMachine::get_saberAColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerFiniteStateMachine*), "get_saberAColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MockPlayerFiniteStateMachine::set_saberAColor
// Il2CppName: set_saberAColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockPlayerFiniteStateMachine::*)(UnityEngine::Color)>(&MockPlayerFiniteStateMachine::set_saberAColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerFiniteStateMachine*), "set_saberAColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: MockPlayerFiniteStateMachine::get_saberBColor
// Il2CppName: get_saberBColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (MockPlayerFiniteStateMachine::*)()>(&MockPlayerFiniteStateMachine::get_saberBColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerFiniteStateMachine*), "get_saberBColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MockPlayerFiniteStateMachine::set_saberBColor
// Il2CppName: set_saberBColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockPlayerFiniteStateMachine::*)(UnityEngine::Color)>(&MockPlayerFiniteStateMachine::set_saberBColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerFiniteStateMachine*), "set_saberBColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: MockPlayerFiniteStateMachine::get_obstaclesColor
// Il2CppName: get_obstaclesColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Color (MockPlayerFiniteStateMachine::*)()>(&MockPlayerFiniteStateMachine::get_obstaclesColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerFiniteStateMachine*), "get_obstaclesColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MockPlayerFiniteStateMachine::set_obstaclesColor
// Il2CppName: set_obstaclesColor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockPlayerFiniteStateMachine::*)(UnityEngine::Color)>(&MockPlayerFiniteStateMachine::set_obstaclesColor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerFiniteStateMachine*), "set_obstaclesColor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Color>()});
  }
};
// Writing MetadataGetter for method: MockPlayerFiniteStateMachine::get_leftHanded
// Il2CppName: get_leftHanded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MockPlayerFiniteStateMachine::*)()>(&MockPlayerFiniteStateMachine::get_leftHanded)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerFiniteStateMachine*), "get_leftHanded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MockPlayerFiniteStateMachine::set_leftHanded
// Il2CppName: set_leftHanded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockPlayerFiniteStateMachine::*)(bool)>(&MockPlayerFiniteStateMachine::set_leftHanded)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerFiniteStateMachine*), "set_leftHanded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MockPlayerFiniteStateMachine::get_inactiveByDefault
// Il2CppName: get_inactiveByDefault
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MockPlayerFiniteStateMachine::*)()>(&MockPlayerFiniteStateMachine::get_inactiveByDefault)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerFiniteStateMachine*), "get_inactiveByDefault", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MockPlayerFiniteStateMachine::set_inactiveByDefault
// Il2CppName: set_inactiveByDefault
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockPlayerFiniteStateMachine::*)(bool)>(&MockPlayerFiniteStateMachine::set_inactiveByDefault)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerFiniteStateMachine*), "set_inactiveByDefault", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MockPlayerFiniteStateMachine::get_gamePoseGenerator
// Il2CppName: get_gamePoseGenerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::MockPlayerGamePoseGenerator* (MockPlayerFiniteStateMachine::*)()>(&MockPlayerFiniteStateMachine::get_gamePoseGenerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerFiniteStateMachine*), "get_gamePoseGenerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MockPlayerFiniteStateMachine::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockPlayerFiniteStateMachine::*)()>(&MockPlayerFiniteStateMachine::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerFiniteStateMachine*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MockPlayerFiniteStateMachine::SetIsReady
// Il2CppName: SetIsReady
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockPlayerFiniteStateMachine::*)(bool)>(&MockPlayerFiniteStateMachine::SetIsReady)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerFiniteStateMachine*), "SetIsReady", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MockPlayerGamePoseGenerator
#include "GlobalNamespace/MockPlayerGamePoseGenerator.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: IGameplayRpcManager
#include "GlobalNamespace/IGameplayRpcManager.hpp"
// Including type: MockNodePoseSyncStateSender
#include "GlobalNamespace/MockNodePoseSyncStateSender.hpp"
// Including type: MockScoreSyncStateSender
#include "GlobalNamespace/MockScoreSyncStateSender.hpp"
// Including type: MockBeatmapData
#include "GlobalNamespace/MockBeatmapData.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MockPlayerGamePoseGenerator.Dispose
void GlobalNamespace::MockPlayerGamePoseGenerator::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPlayerGamePoseGenerator::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MockPlayerGamePoseGenerator.SendPoses
void GlobalNamespace::MockPlayerGamePoseGenerator::SendPoses(float introStartTime, GlobalNamespace::MockBeatmapData* beatmapData, GlobalNamespace::GameplayModifiers* gameplayModifiers, System::Threading::CancellationToken cancellationToken, System::Action* onSongFinished) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPlayerGamePoseGenerator::SendPoses");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendPoses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(introStartTime), ::il2cpp_utils::ExtractType(beatmapData), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(cancellationToken), ::il2cpp_utils::ExtractType(onSongFinished)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, introStartTime, beatmapData, gameplayModifiers, cancellationToken, onSongFinished);
}
// Autogenerated method: MockPlayerGamePoseGenerator.SimulateFail
void GlobalNamespace::MockPlayerGamePoseGenerator::SimulateFail() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPlayerGamePoseGenerator::SimulateFail");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SimulateFail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MockPlayerGamePoseGenerator.SimulateGiveUp
void GlobalNamespace::MockPlayerGamePoseGenerator::SimulateGiveUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPlayerGamePoseGenerator::SimulateGiveUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SimulateGiveUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MockPlayerGamePoseGenerator::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockPlayerGamePoseGenerator::*)(GlobalNamespace::IMultiplayerSessionManager*, GlobalNamespace::IGameplayRpcManager*, bool)>(&MockPlayerGamePoseGenerator::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerGamePoseGenerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IMultiplayerSessionManager*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IGameplayRpcManager*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockPlayerGamePoseGenerator::*)(GlobalNamespace::IMultiplayerSessionManager*, GlobalNamespace::IGameplayRpcManager*, bool)>(&MockPlayerGamePoseGenerator::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerGamePoseGenerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IMultiplayerSessionManager*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IGameplayRpcManager*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MockPlayerGamePoseGenerator::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockPlayerGamePoseGenerator::*)()>(&MockPlayerGamePoseGenerator::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerGamePoseGenerator*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MockPlayerGamePoseGenerator::SendPoses
// Il2CppName: SendPoses
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockPlayerGamePoseGenerator::*)(float, GlobalNamespace::MockBeatmapData*, GlobalNamespace::GameplayModifiers*, System::Threading::CancellationToken, System::Action*)>(&MockPlayerGamePoseGenerator::SendPoses)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerGamePoseGenerator*), "SendPoses", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MockBeatmapData*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifiers*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>(), ::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: MockPlayerGamePoseGenerator::SimulateFail
// Il2CppName: SimulateFail
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockPlayerGamePoseGenerator::*)()>(&MockPlayerGamePoseGenerator::SimulateFail)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerGamePoseGenerator*), "SimulateFail", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MockPlayerGamePoseGenerator::SimulateGiveUp
// Il2CppName: SimulateGiveUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockPlayerGamePoseGenerator::*)()>(&MockPlayerGamePoseGenerator::SimulateGiveUp)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerGamePoseGenerator*), "SimulateGiveUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MockPlayerGamePoseGeneratorAI
#include "GlobalNamespace/MockPlayerGamePoseGeneratorAI.hpp"
// Including type: MockPlayerGamePoseGeneratorAI/<SendPoses>d__3
#include "GlobalNamespace/MockPlayerGamePoseGeneratorAI_-SendPoses-d__3.hpp"
// Including type: IMockPlayerScoreCalculator
#include "GlobalNamespace/IMockPlayerScoreCalculator.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: IGameplayRpcManager
#include "GlobalNamespace/IGameplayRpcManager.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: NoteCutDirection
#include "GlobalNamespace/NoteCutDirection.hpp"
// Including type: MockNoteData
#include "GlobalNamespace/MockNoteData.hpp"
// Including type: UnityEngine.Pose
#include "UnityEngine/Pose.hpp"
// Including type: MockObstacleData
#include "GlobalNamespace/MockObstacleData.hpp"
// Including type: MockBeatmapData
#include "GlobalNamespace/MockBeatmapData.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MockPlayerGamePoseGeneratorAI.GetCutDirection
UnityEngine::Vector3 GlobalNamespace::MockPlayerGamePoseGeneratorAI::GetCutDirection(GlobalNamespace::NoteCutDirection cutDirection) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPlayerGamePoseGeneratorAI::GetCutDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MockPlayerGamePoseGeneratorAI", "GetCutDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cutDirection)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cutDirection);
}
// Autogenerated method: MockPlayerGamePoseGeneratorAI.GetNotePosition
UnityEngine::Vector3 GlobalNamespace::MockPlayerGamePoseGeneratorAI::GetNotePosition(int lineCount, GlobalNamespace::MockNoteData* noteData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPlayerGamePoseGeneratorAI::GetNotePosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MockPlayerGamePoseGeneratorAI", "GetNotePosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lineCount), ::il2cpp_utils::ExtractType(noteData)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lineCount, noteData);
}
// Autogenerated method: MockPlayerGamePoseGeneratorAI.Blerp
UnityEngine::Vector3 GlobalNamespace::MockPlayerGamePoseGeneratorAI::Blerp(UnityEngine::Vector3 prevStart, UnityEngine::Vector3 prevEnd, UnityEngine::Vector3 currStart, UnityEngine::Vector3 currEnd, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPlayerGamePoseGeneratorAI::Blerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MockPlayerGamePoseGeneratorAI", "Blerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prevStart), ::il2cpp_utils::ExtractType(prevEnd), ::il2cpp_utils::ExtractType(currStart), ::il2cpp_utils::ExtractType(currEnd), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, prevStart, prevEnd, currStart, currEnd, t);
}
// Autogenerated method: MockPlayerGamePoseGeneratorAI.ProcessNotes
UnityEngine::Pose GlobalNamespace::MockPlayerGamePoseGeneratorAI::ProcessNotes(::Array<GlobalNamespace::MockNoteData*>* notes, UnityEngine::Vector3 handDirection, int& noteIndex, int& prevHitScore, int& nextHitScore, ::Array<GlobalNamespace::MockNoteData*>* bombs, int& bombIndex, int lineCount, float songTime, bool& wasHitOrMiss) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPlayerGamePoseGeneratorAI::ProcessNotes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessNotes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(notes), ::il2cpp_utils::ExtractType(handDirection), ::il2cpp_utils::ExtractType(noteIndex), ::il2cpp_utils::ExtractType(prevHitScore), ::il2cpp_utils::ExtractType(nextHitScore), ::il2cpp_utils::ExtractType(bombs), ::il2cpp_utils::ExtractType(bombIndex), ::il2cpp_utils::ExtractType(lineCount), ::il2cpp_utils::ExtractType(songTime), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Pose, false>(this, ___internal__method, notes, handDirection, noteIndex, prevHitScore, nextHitScore, bombs, bombIndex, lineCount, songTime, wasHitOrMiss);
}
// Autogenerated method: MockPlayerGamePoseGeneratorAI.ProcessObstacles
UnityEngine::Pose GlobalNamespace::MockPlayerGamePoseGeneratorAI::ProcessObstacles(::Array<GlobalNamespace::MockObstacleData*>* obstacles, int& obstacleIndex, int lineCount, UnityEngine::Pose prevHeadPose, UnityEngine::Pose leftHandPose, UnityEngine::Pose rightHandPose, float songTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPlayerGamePoseGeneratorAI::ProcessObstacles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessObstacles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacles), ::il2cpp_utils::ExtractType(obstacleIndex), ::il2cpp_utils::ExtractType(lineCount), ::il2cpp_utils::ExtractType(prevHeadPose), ::il2cpp_utils::ExtractType(leftHandPose), ::il2cpp_utils::ExtractType(rightHandPose), ::il2cpp_utils::ExtractType(songTime)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Pose, false>(this, ___internal__method, obstacles, obstacleIndex, lineCount, prevHeadPose, leftHandPose, rightHandPose, songTime);
}
// Autogenerated method: MockPlayerGamePoseGeneratorAI.UpdateScore
void GlobalNamespace::MockPlayerGamePoseGeneratorAI::UpdateScore(int& currentScore, int& currentCombo, int& currentMultiplier, int hitScore, int lineCount, UnityEngine::Pose lastPose, UnityEngine::Pose currentPose, float lastSongTime, float songTime, GlobalNamespace::MockNoteData* noteData, GlobalNamespace::MockNoteData* nextNoteData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPlayerGamePoseGeneratorAI::UpdateScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentScore), ::il2cpp_utils::ExtractType(currentCombo), ::il2cpp_utils::ExtractType(currentMultiplier), ::il2cpp_utils::ExtractType(hitScore), ::il2cpp_utils::ExtractType(lineCount), ::il2cpp_utils::ExtractType(lastPose), ::il2cpp_utils::ExtractType(currentPose), ::il2cpp_utils::ExtractType(lastSongTime), ::il2cpp_utils::ExtractType(songTime), ::il2cpp_utils::ExtractType(noteData), ::il2cpp_utils::ExtractType(nextNoteData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, currentScore, currentCombo, currentMultiplier, hitScore, lineCount, lastPose, currentPose, lastSongTime, songTime, noteData, nextNoteData);
}
// Autogenerated method: MockPlayerGamePoseGeneratorAI.SendPoses
void GlobalNamespace::MockPlayerGamePoseGeneratorAI::SendPoses(float introStartTime, GlobalNamespace::MockBeatmapData* beatmapData, GlobalNamespace::GameplayModifiers* gameplayModifiers, System::Threading::CancellationToken cancellationToken, System::Action* onSongFinished) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPlayerGamePoseGeneratorAI::SendPoses");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendPoses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(introStartTime), ::il2cpp_utils::ExtractType(beatmapData), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(cancellationToken), ::il2cpp_utils::ExtractType(onSongFinished)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, introStartTime, beatmapData, gameplayModifiers, cancellationToken, onSongFinished);
}
// Autogenerated method: MockPlayerGamePoseGeneratorAI.SimulateFail
void GlobalNamespace::MockPlayerGamePoseGeneratorAI::SimulateFail() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPlayerGamePoseGeneratorAI::SimulateFail");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SimulateFail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MockPlayerGamePoseGeneratorAI::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockPlayerGamePoseGeneratorAI::*)(GlobalNamespace::IMultiplayerSessionManager*, GlobalNamespace::IGameplayRpcManager*, GlobalNamespace::IMockPlayerScoreCalculator*, bool)>(&MockPlayerGamePoseGeneratorAI::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerGamePoseGeneratorAI*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IMultiplayerSessionManager*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IGameplayRpcManager*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IMockPlayerScoreCalculator*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockPlayerGamePoseGeneratorAI::*)(GlobalNamespace::IMultiplayerSessionManager*, GlobalNamespace::IGameplayRpcManager*, GlobalNamespace::IMockPlayerScoreCalculator*, bool)>(&MockPlayerGamePoseGeneratorAI::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerGamePoseGeneratorAI*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IMultiplayerSessionManager*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IGameplayRpcManager*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IMockPlayerScoreCalculator*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MockPlayerGamePoseGeneratorAI::GetCutDirection
// Il2CppName: GetCutDirection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (*)(GlobalNamespace::NoteCutDirection)>(&MockPlayerGamePoseGeneratorAI::GetCutDirection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerGamePoseGeneratorAI*), "GetCutDirection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::NoteCutDirection>()});
  }
};
// Writing MetadataGetter for method: MockPlayerGamePoseGeneratorAI::GetNotePosition
// Il2CppName: GetNotePosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (*)(int, GlobalNamespace::MockNoteData*)>(&MockPlayerGamePoseGeneratorAI::GetNotePosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerGamePoseGeneratorAI*), "GetNotePosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MockNoteData*>()});
  }
};
// Writing MetadataGetter for method: MockPlayerGamePoseGeneratorAI::Blerp
// Il2CppName: Blerp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Vector3 (*)(UnityEngine::Vector3, UnityEngine::Vector3, UnityEngine::Vector3, UnityEngine::Vector3, float)>(&MockPlayerGamePoseGeneratorAI::Blerp)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerGamePoseGeneratorAI*), "Blerp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: MockPlayerGamePoseGeneratorAI::ProcessNotes
// Il2CppName: ProcessNotes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Pose (MockPlayerGamePoseGeneratorAI::*)(::Array<GlobalNamespace::MockNoteData*>*, UnityEngine::Vector3, int&, int&, int&, ::Array<GlobalNamespace::MockNoteData*>*, int&, int, float, bool&)>(&MockPlayerGamePoseGeneratorAI::ProcessNotes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerGamePoseGeneratorAI*), "ProcessNotes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::MockNoteData*>*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::MockNoteData*>*>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<bool&>()});
  }
};
// Writing MetadataGetter for method: MockPlayerGamePoseGeneratorAI::ProcessObstacles
// Il2CppName: ProcessObstacles
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::Pose (MockPlayerGamePoseGeneratorAI::*)(::Array<GlobalNamespace::MockObstacleData*>*, int&, int, UnityEngine::Pose, UnityEngine::Pose, UnityEngine::Pose, float)>(&MockPlayerGamePoseGeneratorAI::ProcessObstacles)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerGamePoseGeneratorAI*), "ProcessObstacles", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::MockObstacleData*>*>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Pose>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Pose>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Pose>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: MockPlayerGamePoseGeneratorAI::UpdateScore
// Il2CppName: UpdateScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockPlayerGamePoseGeneratorAI::*)(int&, int&, int&, int, int, UnityEngine::Pose, UnityEngine::Pose, float, float, GlobalNamespace::MockNoteData*, GlobalNamespace::MockNoteData*)>(&MockPlayerGamePoseGeneratorAI::UpdateScore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerGamePoseGeneratorAI*), "UpdateScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Pose>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Pose>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MockNoteData*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MockNoteData*>()});
  }
};
// Writing MetadataGetter for method: MockPlayerGamePoseGeneratorAI::SendPoses
// Il2CppName: SendPoses
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockPlayerGamePoseGeneratorAI::*)(float, GlobalNamespace::MockBeatmapData*, GlobalNamespace::GameplayModifiers*, System::Threading::CancellationToken, System::Action*)>(&MockPlayerGamePoseGeneratorAI::SendPoses)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerGamePoseGeneratorAI*), "SendPoses", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MockBeatmapData*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifiers*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>(), ::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: MockPlayerGamePoseGeneratorAI::SimulateFail
// Il2CppName: SimulateFail
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockPlayerGamePoseGeneratorAI::*)()>(&MockPlayerGamePoseGeneratorAI::SimulateFail)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerGamePoseGeneratorAI*), "SimulateFail", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MockPlayerGamePoseGeneratorAI/<SendPoses>d__3
#include "GlobalNamespace/MockPlayerGamePoseGeneratorAI_-SendPoses-d__3.hpp"
// Including type: MockBeatmapData
#include "GlobalNamespace/MockBeatmapData.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: MockNoteData
#include "GlobalNamespace/MockNoteData.hpp"
// Including type: MockObstacleData
#include "GlobalNamespace/MockObstacleData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MockPlayerGamePoseGeneratorAI/<SendPoses>d__3.MoveNext
void GlobalNamespace::MockPlayerGamePoseGeneratorAI::$SendPoses$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPlayerGamePoseGeneratorAI::$SendPoses$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MockPlayerGamePoseGeneratorAI/<SendPoses>d__3.SetStateMachine
void GlobalNamespace::MockPlayerGamePoseGeneratorAI::$SendPoses$d__3::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPlayerGamePoseGeneratorAI::$SendPoses$d__3::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: MockPlayerGamePoseGeneratorAI::$SendPoses$d__3::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockPlayerGamePoseGeneratorAI::$SendPoses$d__3::*)()>(&MockPlayerGamePoseGeneratorAI::$SendPoses$d__3::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerGamePoseGeneratorAI::$SendPoses$d__3), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MockPlayerGamePoseGeneratorAI::$SendPoses$d__3::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockPlayerGamePoseGeneratorAI::$SendPoses$d__3::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&MockPlayerGamePoseGeneratorAI::$SendPoses$d__3::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerGamePoseGeneratorAI::$SendPoses$d__3), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MockPlayerLobbyPoseGenerator
#include "GlobalNamespace/MockPlayerLobbyPoseGenerator.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: MockNodePoseSyncStateSender
#include "GlobalNamespace/MockNodePoseSyncStateSender.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MockPlayerLobbyPoseGenerator.Dispose
void GlobalNamespace::MockPlayerLobbyPoseGenerator::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPlayerLobbyPoseGenerator::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MockPlayerLobbyPoseGenerator.SendPoses
void GlobalNamespace::MockPlayerLobbyPoseGenerator::SendPoses(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPlayerLobbyPoseGenerator::SendPoses");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendPoses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cancellationToken);
}
// Writing MetadataGetter for method: MockPlayerLobbyPoseGenerator::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockPlayerLobbyPoseGenerator::*)(GlobalNamespace::IMultiplayerSessionManager*)>(&MockPlayerLobbyPoseGenerator::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerLobbyPoseGenerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IMultiplayerSessionManager*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockPlayerLobbyPoseGenerator::*)(GlobalNamespace::IMultiplayerSessionManager*)>(&MockPlayerLobbyPoseGenerator::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerLobbyPoseGenerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IMultiplayerSessionManager*>()});
  }
};
// Writing MetadataGetter for method: MockPlayerLobbyPoseGenerator::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockPlayerLobbyPoseGenerator::*)()>(&MockPlayerLobbyPoseGenerator::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerLobbyPoseGenerator*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MockPlayerLobbyPoseGenerator::SendPoses
// Il2CppName: SendPoses
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockPlayerLobbyPoseGenerator::*)(System::Threading::CancellationToken)>(&MockPlayerLobbyPoseGenerator::SendPoses)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerLobbyPoseGenerator*), "SendPoses", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MockPlayerLobbyPoseGeneratorAI
#include "GlobalNamespace/MockPlayerLobbyPoseGeneratorAI.hpp"
// Including type: MockPlayerLobbyPoseGeneratorAI/<SendPoses>d__1
#include "GlobalNamespace/MockPlayerLobbyPoseGeneratorAI_-SendPoses-d__1.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MockPlayerLobbyPoseGeneratorAI.SendPoses
void GlobalNamespace::MockPlayerLobbyPoseGeneratorAI::SendPoses(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPlayerLobbyPoseGeneratorAI::SendPoses");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendPoses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cancellationToken);
}
// Writing MetadataGetter for method: MockPlayerLobbyPoseGeneratorAI::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockPlayerLobbyPoseGeneratorAI::*)(GlobalNamespace::IMultiplayerSessionManager*)>(&MockPlayerLobbyPoseGeneratorAI::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerLobbyPoseGeneratorAI*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IMultiplayerSessionManager*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockPlayerLobbyPoseGeneratorAI::*)(GlobalNamespace::IMultiplayerSessionManager*)>(&MockPlayerLobbyPoseGeneratorAI::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerLobbyPoseGeneratorAI*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IMultiplayerSessionManager*>()});
  }
};
// Writing MetadataGetter for method: MockPlayerLobbyPoseGeneratorAI::SendPoses
// Il2CppName: SendPoses
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockPlayerLobbyPoseGeneratorAI::*)(System::Threading::CancellationToken)>(&MockPlayerLobbyPoseGeneratorAI::SendPoses)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerLobbyPoseGeneratorAI*), "SendPoses", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MockPlayerLobbyPoseGeneratorAI/<SendPoses>d__1
#include "GlobalNamespace/MockPlayerLobbyPoseGeneratorAI_-SendPoses-d__1.hpp"
// Including type: System.Random
#include "System/Random.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MockPlayerLobbyPoseGeneratorAI/<SendPoses>d__1.MoveNext
void GlobalNamespace::MockPlayerLobbyPoseGeneratorAI::$SendPoses$d__1::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPlayerLobbyPoseGeneratorAI::$SendPoses$d__1::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: MockPlayerLobbyPoseGeneratorAI/<SendPoses>d__1.SetStateMachine
void GlobalNamespace::MockPlayerLobbyPoseGeneratorAI::$SendPoses$d__1::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockPlayerLobbyPoseGeneratorAI::$SendPoses$d__1::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: MockPlayerLobbyPoseGeneratorAI::$SendPoses$d__1::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockPlayerLobbyPoseGeneratorAI::$SendPoses$d__1::*)()>(&MockPlayerLobbyPoseGeneratorAI::$SendPoses$d__1::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerLobbyPoseGeneratorAI::$SendPoses$d__1), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MockPlayerLobbyPoseGeneratorAI::$SendPoses$d__1::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockPlayerLobbyPoseGeneratorAI::$SendPoses$d__1::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&MockPlayerLobbyPoseGeneratorAI::$SendPoses$d__1::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockPlayerLobbyPoseGeneratorAI::$SendPoses$d__1), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MockScoreSyncStateSender
#include "GlobalNamespace/MockScoreSyncStateSender.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: StandardScoreSyncStateNetSerializable
#include "GlobalNamespace/StandardScoreSyncStateNetSerializable.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MockScoreSyncStateSender.Dispose
void GlobalNamespace::MockScoreSyncStateSender::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockScoreSyncStateSender::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MockScoreSyncStateSender.SendScore
void GlobalNamespace::MockScoreSyncStateSender::SendScore(int modifiedScore, int rawScore, int immediateMaxPossibleRawScore, int combo, int multiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockScoreSyncStateSender::SendScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(modifiedScore), ::il2cpp_utils::ExtractType(rawScore), ::il2cpp_utils::ExtractType(immediateMaxPossibleRawScore), ::il2cpp_utils::ExtractType(combo), ::il2cpp_utils::ExtractType(multiplier)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, modifiedScore, rawScore, immediateMaxPossibleRawScore, combo, multiplier);
}
// Autogenerated method: MockScoreSyncStateSender.HandleScoreSyncStateUpdate
void GlobalNamespace::MockScoreSyncStateSender::HandleScoreSyncStateUpdate(GlobalNamespace::StandardScoreSyncStateNetSerializable* nodePose, GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockScoreSyncStateSender::HandleScoreSyncStateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleScoreSyncStateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nodePose), ::il2cpp_utils::ExtractType(connectedPlayer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nodePose, connectedPlayer);
}
// Writing MetadataGetter for method: MockScoreSyncStateSender::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockScoreSyncStateSender::*)(GlobalNamespace::IMultiplayerSessionManager*)>(&MockScoreSyncStateSender::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockScoreSyncStateSender*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IMultiplayerSessionManager*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockScoreSyncStateSender::*)(GlobalNamespace::IMultiplayerSessionManager*)>(&MockScoreSyncStateSender::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockScoreSyncStateSender*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IMultiplayerSessionManager*>()});
  }
};
// Writing MetadataGetter for method: MockScoreSyncStateSender::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockScoreSyncStateSender::*)()>(&MockScoreSyncStateSender::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockScoreSyncStateSender*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MockScoreSyncStateSender::SendScore
// Il2CppName: SendScore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockScoreSyncStateSender::*)(int, int, int, int, int)>(&MockScoreSyncStateSender::SendScore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockScoreSyncStateSender*), "SendScore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MockScoreSyncStateSender::HandleScoreSyncStateUpdate
// Il2CppName: HandleScoreSyncStateUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MockScoreSyncStateSender::*)(GlobalNamespace::StandardScoreSyncStateNetSerializable*, GlobalNamespace::IConnectedPlayer*)>(&MockScoreSyncStateSender::HandleScoreSyncStateUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MockScoreSyncStateSender*), "HandleScoreSyncStateUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::StandardScoreSyncStateNetSerializable*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IConnectedPlayer*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Locale
#include "GlobalNamespace/Locale.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Locale.GetText
::Il2CppString* GlobalNamespace::Locale::GetText(::Il2CppString* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Locale::GetText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Locale", "GetText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, msg);
}
// Writing MetadataGetter for method: Locale::GetText
// Il2CppName: GetText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppString*)>(&Locale::GetText)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Locale*), "GetText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.ASN1.get_Count
int Mono::Security::ASN1::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::ASN1::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.ASN1.get_Tag
uint8_t Mono::Security::ASN1::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::ASN1::get_Tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.ASN1.get_Length
int Mono::Security::ASN1::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::ASN1::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.ASN1.get_Value
::Array<uint8_t>* Mono::Security::ASN1::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::ASN1::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.ASN1.set_Value
void Mono::Security::ASN1::set_Value(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::ASN1::set_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.ASN1.CompareArray
bool Mono::Security::ASN1::CompareArray(::Array<uint8_t>* array1, ::Array<uint8_t>* array2) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::ASN1::CompareArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array1), ::il2cpp_utils::ExtractType(array2)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, array1, array2);
}
// Autogenerated method: Mono.Security.ASN1.CompareValue
bool Mono::Security::ASN1::CompareValue(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::ASN1::CompareValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompareValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.ASN1.Add
Mono::Security::ASN1* Mono::Security::ASN1::Add(Mono::Security::ASN1* asn1) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::ASN1::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::ASN1*, false>(this, ___internal__method, asn1);
}
// Autogenerated method: Mono.Security.ASN1.GetBytes
::Array<uint8_t>* Mono::Security::ASN1::GetBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::ASN1::GetBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.ASN1.Decode
void Mono::Security::ASN1::Decode(::Array<uint8_t>* asn1, int& anPos, int anLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::ASN1::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1), ::il2cpp_utils::ExtractType(anPos), ::il2cpp_utils::ExtractType(anLength)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, asn1, anPos, anLength);
}
// Autogenerated method: Mono.Security.ASN1.DecodeTLV
void Mono::Security::ASN1::DecodeTLV(::Array<uint8_t>* asn1, int& pos, uint8_t& tag, int& length, ::Array<uint8_t>*& content) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::ASN1::DecodeTLV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecodeTLV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractIndependentType<uint8_t&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, asn1, pos, tag, length, content);
}
// Autogenerated method: Mono.Security.ASN1.get_Item
Mono::Security::ASN1* Mono::Security::ASN1::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::ASN1::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::ASN1*, false>(this, ___internal__method, index);
}
// Autogenerated method: Mono.Security.ASN1.Element
Mono::Security::ASN1* Mono::Security::ASN1::Element(int index, uint8_t anTag) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::ASN1::Element");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Element", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(anTag)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::ASN1*, false>(this, ___internal__method, index, anTag);
}
// Autogenerated method: Mono.Security.ASN1.ToString
::Il2CppString* Mono::Security::ASN1::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::ASN1::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ASN1::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ASN1::*)(uint8_t)>(&ASN1::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ASN1*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ASN1::*)(uint8_t)>(&ASN1::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ASN1*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t>()});
  }
};
// Writing MetadataGetter for method: ASN1::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ASN1::*)(uint8_t, ::Array<uint8_t>*)>(&ASN1::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ASN1*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ASN1::*)(uint8_t, ::Array<uint8_t>*)>(&ASN1::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ASN1*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: ASN1::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ASN1::*)(::Array<uint8_t>*)>(&ASN1::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ASN1*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ASN1::*)(::Array<uint8_t>*)>(&ASN1::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ASN1*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: ASN1::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ASN1::*)()>(&ASN1::get_Count)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ASN1*), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ASN1::get_Tag
// Il2CppName: get_Tag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint8_t (ASN1::*)()>(&ASN1::get_Tag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ASN1*), "get_Tag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ASN1::get_Length
// Il2CppName: get_Length
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ASN1::*)()>(&ASN1::get_Length)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ASN1*), "get_Length", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ASN1::get_Value
// Il2CppName: get_Value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (ASN1::*)()>(&ASN1::get_Value)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ASN1*), "get_Value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ASN1::set_Value
// Il2CppName: set_Value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ASN1::*)(::Array<uint8_t>*)>(&ASN1::set_Value)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ASN1*), "set_Value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: ASN1::CompareArray
// Il2CppName: CompareArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ASN1::*)(::Array<uint8_t>*, ::Array<uint8_t>*)>(&ASN1::CompareArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ASN1*), "CompareArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: ASN1::CompareValue
// Il2CppName: CompareValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ASN1::*)(::Array<uint8_t>*)>(&ASN1::CompareValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ASN1*), "CompareValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: ASN1::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::ASN1* (ASN1::*)(Mono::Security::ASN1*)>(&ASN1::Add)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ASN1*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::ASN1*>()});
  }
};
// Writing MetadataGetter for method: ASN1::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (ASN1::*)()>(&ASN1::GetBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ASN1*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ASN1::Decode
// Il2CppName: Decode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ASN1::*)(::Array<uint8_t>*, int&, int)>(&ASN1::Decode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ASN1*), "Decode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ASN1::DecodeTLV
// Il2CppName: DecodeTLV
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ASN1::*)(::Array<uint8_t>*, int&, uint8_t&, int&, ::Array<uint8_t>*&)>(&ASN1::DecodeTLV)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ASN1*), "DecodeTLV", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<uint8_t&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*&>()});
  }
};
// Writing MetadataGetter for method: ASN1::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::ASN1* (ASN1::*)(int)>(&ASN1::get_Item)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ASN1*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ASN1::Element
// Il2CppName: Element
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::ASN1* (ASN1::*)(int, uint8_t)>(&ASN1::Element)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ASN1*), "Element", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<uint8_t>()});
  }
};
// Writing MetadataGetter for method: ASN1::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (ASN1::*)()>(&ASN1::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ASN1*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.ASN1Convert
#include "Mono/Security/ASN1Convert.hpp"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.ASN1Convert.FromInt32
Mono::Security::ASN1* Mono::Security::ASN1Convert::FromInt32(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::ASN1Convert::FromInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "ASN1Convert", "FromInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::ASN1*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Mono.Security.ASN1Convert.FromOid
Mono::Security::ASN1* Mono::Security::ASN1Convert::FromOid(::Il2CppString* oid) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::ASN1Convert::FromOid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "ASN1Convert", "FromOid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oid)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::ASN1*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, oid);
}
// Autogenerated method: Mono.Security.ASN1Convert.FromUnsignedBigInteger
Mono::Security::ASN1* Mono::Security::ASN1Convert::FromUnsignedBigInteger(::Array<uint8_t>* big) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::ASN1Convert::FromUnsignedBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "ASN1Convert", "FromUnsignedBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(big)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::ASN1*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, big);
}
// Autogenerated method: Mono.Security.ASN1Convert.ToInt32
int Mono::Security::ASN1Convert::ToInt32(Mono::Security::ASN1* asn1) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::ASN1Convert::ToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "ASN1Convert", "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, asn1);
}
// Autogenerated method: Mono.Security.ASN1Convert.ToOid
::Il2CppString* Mono::Security::ASN1Convert::ToOid(Mono::Security::ASN1* asn1) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::ASN1Convert::ToOid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "ASN1Convert", "ToOid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asn1)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, asn1);
}
// Autogenerated method: Mono.Security.ASN1Convert.ToDateTime
System::DateTime Mono::Security::ASN1Convert::ToDateTime(Mono::Security::ASN1* time) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::ASN1Convert::ToDateTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "ASN1Convert", "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, time);
}
// Writing MetadataGetter for method: ASN1Convert::FromInt32
// Il2CppName: FromInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::ASN1* (*)(int)>(&ASN1Convert::FromInt32)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ASN1Convert*), "FromInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ASN1Convert::FromOid
// Il2CppName: FromOid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::ASN1* (*)(::Il2CppString*)>(&ASN1Convert::FromOid)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ASN1Convert*), "FromOid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: ASN1Convert::FromUnsignedBigInteger
// Il2CppName: FromUnsignedBigInteger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::ASN1* (*)(::Array<uint8_t>*)>(&ASN1Convert::FromUnsignedBigInteger)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ASN1Convert*), "FromUnsignedBigInteger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: ASN1Convert::ToInt32
// Il2CppName: ToInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(Mono::Security::ASN1*)>(&ASN1Convert::ToInt32)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ASN1Convert*), "ToInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::ASN1*>()});
  }
};
// Writing MetadataGetter for method: ASN1Convert::ToOid
// Il2CppName: ToOid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(Mono::Security::ASN1*)>(&ASN1Convert::ToOid)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ASN1Convert*), "ToOid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::ASN1*>()});
  }
};
// Writing MetadataGetter for method: ASN1Convert::ToDateTime
// Il2CppName: ToDateTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::DateTime (*)(Mono::Security::ASN1*)>(&ASN1Convert::ToDateTime)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ASN1Convert*), "ToDateTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::ASN1*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.BitConverterLE
#include "Mono/Security/BitConverterLE.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.BitConverterLE.GetUIntBytes
::Array<uint8_t>* Mono::Security::BitConverterLE::GetUIntBytes(uint8_t* bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::BitConverterLE::GetUIntBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "BitConverterLE", "GetUIntBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bytes);
}
// Autogenerated method: Mono.Security.BitConverterLE.GetULongBytes
::Array<uint8_t>* Mono::Security::BitConverterLE::GetULongBytes(uint8_t* bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::BitConverterLE::GetULongBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "BitConverterLE", "GetULongBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bytes);
}
// Autogenerated method: Mono.Security.BitConverterLE.GetBytes
::Array<uint8_t>* Mono::Security::BitConverterLE::GetBytes(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::BitConverterLE::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "BitConverterLE", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Mono.Security.BitConverterLE.GetBytes
::Array<uint8_t>* Mono::Security::BitConverterLE::GetBytes(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::BitConverterLE::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "BitConverterLE", "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Mono.Security.BitConverterLE.UShortFromBytes
void Mono::Security::BitConverterLE::UShortFromBytes(uint8_t* dst, ::Array<uint8_t>* src, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::BitConverterLE::UShortFromBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "BitConverterLE", "UShortFromBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(startIndex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dst, src, startIndex);
}
// Autogenerated method: Mono.Security.BitConverterLE.UIntFromBytes
void Mono::Security::BitConverterLE::UIntFromBytes(uint8_t* dst, ::Array<uint8_t>* src, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::BitConverterLE::UIntFromBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "BitConverterLE", "UIntFromBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dst), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(startIndex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dst, src, startIndex);
}
// Autogenerated method: Mono.Security.BitConverterLE.ToInt32
int Mono::Security::BitConverterLE::ToInt32(::Array<uint8_t>* value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::BitConverterLE::ToInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "BitConverterLE", "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, startIndex);
}
// Autogenerated method: Mono.Security.BitConverterLE.ToUInt16
uint16_t Mono::Security::BitConverterLE::ToUInt16(::Array<uint8_t>* value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::BitConverterLE::ToUInt16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "BitConverterLE", "ToUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, startIndex);
}
// Autogenerated method: Mono.Security.BitConverterLE.ToUInt32
uint Mono::Security::BitConverterLE::ToUInt32(::Array<uint8_t>* value, int startIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::BitConverterLE::ToUInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security", "BitConverterLE", "ToUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, startIndex);
}
// Writing MetadataGetter for method: BitConverterLE::GetUIntBytes
// Il2CppName: GetUIntBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(uint8_t*)>(&BitConverterLE::GetUIntBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BitConverterLE*), "GetUIntBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t*>()});
  }
};
// Writing MetadataGetter for method: BitConverterLE::GetULongBytes
// Il2CppName: GetULongBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(uint8_t*)>(&BitConverterLE::GetULongBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BitConverterLE*), "GetULongBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t*>()});
  }
};
// Writing MetadataGetter for method: BitConverterLE::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(int)>(&BitConverterLE::GetBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BitConverterLE*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BitConverterLE::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(int64_t)>(&BitConverterLE::GetBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BitConverterLE*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: BitConverterLE::UShortFromBytes
// Il2CppName: UShortFromBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint8_t*, ::Array<uint8_t>*, int)>(&BitConverterLE::UShortFromBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BitConverterLE*), "UShortFromBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BitConverterLE::UIntFromBytes
// Il2CppName: UIntFromBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint8_t*, ::Array<uint8_t>*, int)>(&BitConverterLE::UIntFromBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BitConverterLE*), "UIntFromBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BitConverterLE::ToInt32
// Il2CppName: ToInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Array<uint8_t>*, int)>(&BitConverterLE::ToInt32)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BitConverterLE*), "ToInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BitConverterLE::ToUInt16
// Il2CppName: ToUInt16
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint16_t (*)(::Array<uint8_t>*, int)>(&BitConverterLE::ToUInt16)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BitConverterLE*), "ToUInt16", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BitConverterLE::ToUInt32
// Il2CppName: ToUInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::Array<uint8_t>*, int)>(&BitConverterLE::ToUInt32)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BitConverterLE*), "ToUInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.PKCS7/ContentInfo
#include "Mono/Security/PKCS7_ContentInfo.hpp"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.PKCS7/ContentInfo.get_ASN1
Mono::Security::ASN1* Mono::Security::PKCS7::ContentInfo::get_ASN1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::PKCS7::ContentInfo::get_ASN1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ASN1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::ASN1*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.PKCS7/ContentInfo.get_Content
Mono::Security::ASN1* Mono::Security::PKCS7::ContentInfo::get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::PKCS7::ContentInfo::get_Content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::ASN1*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.PKCS7/ContentInfo.set_Content
void Mono::Security::PKCS7::ContentInfo::set_Content(Mono::Security::ASN1* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::PKCS7::ContentInfo::set_Content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.PKCS7/ContentInfo.get_ContentType
::Il2CppString* Mono::Security::PKCS7::ContentInfo::get_ContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::PKCS7::ContentInfo::get_ContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.PKCS7/ContentInfo.set_ContentType
void Mono::Security::PKCS7::ContentInfo::set_ContentType(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::PKCS7::ContentInfo::set_ContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.PKCS7/ContentInfo.GetASN1
Mono::Security::ASN1* Mono::Security::PKCS7::ContentInfo::GetASN1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::PKCS7::ContentInfo::GetASN1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetASN1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::ASN1*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: PKCS7::ContentInfo::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS7::ContentInfo::*)(::Il2CppString*)>(&PKCS7::ContentInfo::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS7::ContentInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS7::ContentInfo::*)(::Il2CppString*)>(&PKCS7::ContentInfo::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS7::ContentInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: PKCS7::ContentInfo::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS7::ContentInfo::*)(::Array<uint8_t>*)>(&PKCS7::ContentInfo::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS7::ContentInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS7::ContentInfo::*)(::Array<uint8_t>*)>(&PKCS7::ContentInfo::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS7::ContentInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: PKCS7::ContentInfo::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS7::ContentInfo::*)(Mono::Security::ASN1*)>(&PKCS7::ContentInfo::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS7::ContentInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::ASN1*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS7::ContentInfo::*)(Mono::Security::ASN1*)>(&PKCS7::ContentInfo::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS7::ContentInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::ASN1*>()});
  }
};
// Writing MetadataGetter for method: PKCS7::ContentInfo::get_ASN1
// Il2CppName: get_ASN1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::ASN1* (PKCS7::ContentInfo::*)()>(&PKCS7::ContentInfo::get_ASN1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS7::ContentInfo*), "get_ASN1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PKCS7::ContentInfo::get_Content
// Il2CppName: get_Content
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::ASN1* (PKCS7::ContentInfo::*)()>(&PKCS7::ContentInfo::get_Content)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS7::ContentInfo*), "get_Content", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PKCS7::ContentInfo::set_Content
// Il2CppName: set_Content
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS7::ContentInfo::*)(Mono::Security::ASN1*)>(&PKCS7::ContentInfo::set_Content)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS7::ContentInfo*), "set_Content", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::ASN1*>()});
  }
};
// Writing MetadataGetter for method: PKCS7::ContentInfo::get_ContentType
// Il2CppName: get_ContentType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (PKCS7::ContentInfo::*)()>(&PKCS7::ContentInfo::get_ContentType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS7::ContentInfo*), "get_ContentType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PKCS7::ContentInfo::set_ContentType
// Il2CppName: set_ContentType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS7::ContentInfo::*)(::Il2CppString*)>(&PKCS7::ContentInfo::set_ContentType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS7::ContentInfo*), "set_ContentType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: PKCS7::ContentInfo::GetASN1
// Il2CppName: GetASN1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::ASN1* (PKCS7::ContentInfo::*)()>(&PKCS7::ContentInfo::GetASN1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS7::ContentInfo*), "GetASN1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PKCS7::ContentInfo::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS7::ContentInfo::*)()>(&PKCS7::ContentInfo::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS7::ContentInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS7::ContentInfo::*)()>(&PKCS7::ContentInfo::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS7::ContentInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.PKCS7/EncryptedData
#include "Mono/Security/PKCS7_EncryptedData.hpp"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1.hpp"
// Including type: Mono.Security.PKCS7/ContentInfo
#include "Mono/Security/PKCS7_ContentInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.PKCS7/EncryptedData.get_EncryptionAlgorithm
Mono::Security::PKCS7::ContentInfo* Mono::Security::PKCS7::EncryptedData::get_EncryptionAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::PKCS7::EncryptedData::get_EncryptionAlgorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EncryptionAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::PKCS7::ContentInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.PKCS7/EncryptedData.get_EncryptedContent
::Array<uint8_t>* Mono::Security::PKCS7::EncryptedData::get_EncryptedContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::PKCS7::EncryptedData::get_EncryptedContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EncryptedContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: PKCS7::EncryptedData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS7::EncryptedData::*)(Mono::Security::ASN1*)>(&PKCS7::EncryptedData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS7::EncryptedData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::ASN1*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS7::EncryptedData::*)(Mono::Security::ASN1*)>(&PKCS7::EncryptedData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS7::EncryptedData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::ASN1*>()});
  }
};
// Writing MetadataGetter for method: PKCS7::EncryptedData::get_EncryptionAlgorithm
// Il2CppName: get_EncryptionAlgorithm
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::PKCS7::ContentInfo* (PKCS7::EncryptedData::*)()>(&PKCS7::EncryptedData::get_EncryptionAlgorithm)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS7::EncryptedData*), "get_EncryptionAlgorithm", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PKCS7::EncryptedData::get_EncryptedContent
// Il2CppName: get_EncryptedContent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (PKCS7::EncryptedData::*)()>(&PKCS7::EncryptedData::get_EncryptedContent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS7::EncryptedData*), "get_EncryptedContent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PKCS7::EncryptedData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS7::EncryptedData::*)()>(&PKCS7::EncryptedData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS7::EncryptedData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS7::EncryptedData::*)()>(&PKCS7::EncryptedData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS7::EncryptedData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.X509.SafeBag
#include "Mono/Security/X509/SafeBag.hpp"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.X509.SafeBag.get_BagOID
::Il2CppString* Mono::Security::X509::SafeBag::get_BagOID() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::SafeBag::get_BagOID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BagOID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.SafeBag.get_ASN1
Mono::Security::ASN1* Mono::Security::X509::SafeBag::get_ASN1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::SafeBag::get_ASN1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ASN1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::ASN1*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: SafeBag::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SafeBag::*)(::Il2CppString*, Mono::Security::ASN1*)>(&SafeBag::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SafeBag*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<Mono::Security::ASN1*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SafeBag::*)(::Il2CppString*, Mono::Security::ASN1*)>(&SafeBag::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SafeBag*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<Mono::Security::ASN1*>()});
  }
};
// Writing MetadataGetter for method: SafeBag::get_BagOID
// Il2CppName: get_BagOID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (SafeBag::*)()>(&SafeBag::get_BagOID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SafeBag*), "get_BagOID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SafeBag::get_ASN1
// Il2CppName: get_ASN1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::ASN1* (SafeBag::*)()>(&SafeBag::get_ASN1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SafeBag*), "get_ASN1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.X509.PKCS12
#include "Mono/Security/X509/PKCS12.hpp"
// Including type: Mono.Security.X509.PKCS12/DeriveBytes
#include "Mono/Security/X509/PKCS12_DeriveBytes.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: Mono.Security.X509.X509CertificateCollection
#include "Mono/Security/X509/X509CertificateCollection.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
// Including type: System.Security.Cryptography.SymmetricAlgorithm
#include "System/Security/Cryptography/SymmetricAlgorithm.hpp"
// Including type: System.Security.Cryptography.DSAParameters
#include "System/Security/Cryptography/DSAParameters.hpp"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1.hpp"
// Including type: Mono.Security.X509.X509Certificate
#include "Mono/Security/X509/X509Certificate.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: Mono.Security.PKCS7/EncryptedData
#include "Mono/Security/PKCS7_EncryptedData.hpp"
// Including type: Mono.Security.Cryptography.PKCS8/PrivateKeyInfo
#include "Mono/Security/Cryptography/PKCS8_PrivateKeyInfo.hpp"
// Including type: Mono.Security.PKCS7/ContentInfo
#include "Mono/Security/PKCS7_ContentInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 password_max_length
int Mono::Security::X509::PKCS12::_get_password_max_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::_get_password_max_length");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Mono.Security.X509", "PKCS12", "password_max_length"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 password_max_length
void Mono::Security::X509::PKCS12::_set_password_max_length(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::_set_password_max_length");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "PKCS12", "password_max_length", value));
}
// Autogenerated method: Mono.Security.X509.PKCS12.Decode
void Mono::Security::X509::PKCS12::Decode(::Array<uint8_t>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Mono.Security.X509.PKCS12.set_Password
void Mono::Security::X509::PKCS12::set_Password(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::set_Password");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Password", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.X509.PKCS12.get_IterationCount
int Mono::Security::X509::PKCS12::get_IterationCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::get_IterationCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IterationCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.PKCS12.set_IterationCount
void Mono::Security::X509::PKCS12::set_IterationCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::set_IterationCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IterationCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.X509.PKCS12.get_Keys
System::Collections::ArrayList* Mono::Security::X509::PKCS12::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::get_Keys");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::ArrayList*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.PKCS12.get_Certificates
Mono::Security::X509::X509CertificateCollection* Mono::Security::X509::PKCS12::get_Certificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::get_Certificates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Certificates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::X509::X509CertificateCollection*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.PKCS12.get_RNG
System::Security::Cryptography::RandomNumberGenerator* Mono::Security::X509::PKCS12::get_RNG() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::get_RNG");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RNG", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::RandomNumberGenerator*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.PKCS12.Compare
bool Mono::Security::X509::PKCS12::Compare(::Array<uint8_t>* expected, ::Array<uint8_t>* actual) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(expected), ::il2cpp_utils::ExtractType(actual)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, expected, actual);
}
// Autogenerated method: Mono.Security.X509.PKCS12.GetSymmetricAlgorithm
System::Security::Cryptography::SymmetricAlgorithm* Mono::Security::X509::PKCS12::GetSymmetricAlgorithm(::Il2CppString* algorithmOid, ::Array<uint8_t>* salt, int iterationCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::GetSymmetricAlgorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSymmetricAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algorithmOid), ::il2cpp_utils::ExtractType(salt), ::il2cpp_utils::ExtractType(iterationCount)})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::SymmetricAlgorithm*, false>(this, ___internal__method, algorithmOid, salt, iterationCount);
}
// Autogenerated method: Mono.Security.X509.PKCS12.Decrypt
::Array<uint8_t>* Mono::Security::X509::PKCS12::Decrypt(::Il2CppString* algorithmOid, ::Array<uint8_t>* salt, int iterationCount, ::Array<uint8_t>* encryptedData) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algorithmOid), ::il2cpp_utils::ExtractType(salt), ::il2cpp_utils::ExtractType(iterationCount), ::il2cpp_utils::ExtractType(encryptedData)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, algorithmOid, salt, iterationCount, encryptedData);
}
// Autogenerated method: Mono.Security.X509.PKCS12.Decrypt
::Array<uint8_t>* Mono::Security::X509::PKCS12::Decrypt(Mono::Security::PKCS7::EncryptedData* ed) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::Decrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ed)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, ed);
}
// Autogenerated method: Mono.Security.X509.PKCS12.Encrypt
::Array<uint8_t>* Mono::Security::X509::PKCS12::Encrypt(::Il2CppString* algorithmOid, ::Array<uint8_t>* salt, int iterationCount, ::Array<uint8_t>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algorithmOid), ::il2cpp_utils::ExtractType(salt), ::il2cpp_utils::ExtractType(iterationCount), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, algorithmOid, salt, iterationCount, data);
}
// Autogenerated method: Mono.Security.X509.PKCS12.GetExistingParameters
System::Security::Cryptography::DSAParameters Mono::Security::X509::PKCS12::GetExistingParameters(bool& found) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::GetExistingParameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetExistingParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::DSAParameters, false>(this, ___internal__method, found);
}
// Autogenerated method: Mono.Security.X509.PKCS12.AddPrivateKey
void Mono::Security::X509::PKCS12::AddPrivateKey(Mono::Security::Cryptography::PKCS8::PrivateKeyInfo* pki) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::AddPrivateKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPrivateKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pki)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pki);
}
// Autogenerated method: Mono.Security.X509.PKCS12.ReadSafeBag
void Mono::Security::X509::PKCS12::ReadSafeBag(Mono::Security::ASN1* safeBag) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::ReadSafeBag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadSafeBag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeBag)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, safeBag);
}
// Autogenerated method: Mono.Security.X509.PKCS12.CertificateSafeBag
Mono::Security::ASN1* Mono::Security::X509::PKCS12::CertificateSafeBag(Mono::Security::X509::X509Certificate* x509, System::Collections::IDictionary* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::CertificateSafeBag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CertificateSafeBag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x509), ::il2cpp_utils::ExtractType(attributes)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::ASN1*, false>(this, ___internal__method, x509, attributes);
}
// Autogenerated method: Mono.Security.X509.PKCS12.MAC
::Array<uint8_t>* Mono::Security::X509::PKCS12::MAC(::Array<uint8_t>* password, ::Array<uint8_t>* salt, int iterations, ::Array<uint8_t>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::MAC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MAC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(salt), ::il2cpp_utils::ExtractType(iterations), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, password, salt, iterations, data);
}
// Autogenerated method: Mono.Security.X509.PKCS12.GetBytes
::Array<uint8_t>* Mono::Security::X509::PKCS12::GetBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.PKCS12.EncryptedContentInfo
Mono::Security::PKCS7::ContentInfo* Mono::Security::X509::PKCS12::EncryptedContentInfo(Mono::Security::ASN1* safeBags, ::Il2CppString* algorithmOid) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::EncryptedContentInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncryptedContentInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeBags), ::il2cpp_utils::ExtractType(algorithmOid)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::PKCS7::ContentInfo*, false>(this, ___internal__method, safeBags, algorithmOid);
}
// Autogenerated method: Mono.Security.X509.PKCS12.AddCertificate
void Mono::Security::X509::PKCS12::AddCertificate(Mono::Security::X509::X509Certificate* cert) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::AddCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cert)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cert);
}
// Autogenerated method: Mono.Security.X509.PKCS12.AddCertificate
void Mono::Security::X509::PKCS12::AddCertificate(Mono::Security::X509::X509Certificate* cert, System::Collections::IDictionary* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::AddCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cert), ::il2cpp_utils::ExtractType(attributes)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cert, attributes);
}
// Autogenerated method: Mono.Security.X509.PKCS12.RemoveCertificate
void Mono::Security::X509::PKCS12::RemoveCertificate(Mono::Security::X509::X509Certificate* cert) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::RemoveCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cert)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cert);
}
// Autogenerated method: Mono.Security.X509.PKCS12.RemoveCertificate
void Mono::Security::X509::PKCS12::RemoveCertificate(Mono::Security::X509::X509Certificate* cert, System::Collections::IDictionary* attrs) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::RemoveCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cert), ::il2cpp_utils::ExtractType(attrs)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cert, attrs);
}
// Autogenerated method: Mono.Security.X509.PKCS12.Clone
::Il2CppObject* Mono::Security::X509::PKCS12::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.PKCS12.get_MaximumPasswordLength
int Mono::Security::X509::PKCS12::get_MaximumPasswordLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::get_MaximumPasswordLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.X509", "PKCS12", "get_MaximumPasswordLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.X509.PKCS12..cctor
void Mono::Security::X509::PKCS12::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.X509", "PKCS12", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.X509.PKCS12.Finalize
void Mono::Security::X509::PKCS12::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: PKCS12::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS12::*)(::Array<uint8_t>*)>(&PKCS12::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS12::*)(::Array<uint8_t>*)>(&PKCS12::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: PKCS12::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS12::*)(::Array<uint8_t>*, ::Il2CppString*)>(&PKCS12::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS12::*)(::Array<uint8_t>*, ::Il2CppString*)>(&PKCS12::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: PKCS12::Decode
// Il2CppName: Decode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS12::*)(::Array<uint8_t>*)>(&PKCS12::Decode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12*), "Decode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: PKCS12::set_Password
// Il2CppName: set_Password
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS12::*)(::Il2CppString*)>(&PKCS12::set_Password)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12*), "set_Password", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: PKCS12::get_IterationCount
// Il2CppName: get_IterationCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (PKCS12::*)()>(&PKCS12::get_IterationCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12*), "get_IterationCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PKCS12::set_IterationCount
// Il2CppName: set_IterationCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS12::*)(int)>(&PKCS12::set_IterationCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12*), "set_IterationCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PKCS12::get_Keys
// Il2CppName: get_Keys
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::ArrayList* (PKCS12::*)()>(&PKCS12::get_Keys)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12*), "get_Keys", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PKCS12::get_Certificates
// Il2CppName: get_Certificates
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::X509::X509CertificateCollection* (PKCS12::*)()>(&PKCS12::get_Certificates)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12*), "get_Certificates", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PKCS12::get_RNG
// Il2CppName: get_RNG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::RandomNumberGenerator* (PKCS12::*)()>(&PKCS12::get_RNG)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12*), "get_RNG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PKCS12::Compare
// Il2CppName: Compare
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PKCS12::*)(::Array<uint8_t>*, ::Array<uint8_t>*)>(&PKCS12::Compare)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12*), "Compare", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: PKCS12::GetSymmetricAlgorithm
// Il2CppName: GetSymmetricAlgorithm
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::SymmetricAlgorithm* (PKCS12::*)(::Il2CppString*, ::Array<uint8_t>*, int)>(&PKCS12::GetSymmetricAlgorithm)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12*), "GetSymmetricAlgorithm", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PKCS12::Decrypt
// Il2CppName: Decrypt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (PKCS12::*)(::Il2CppString*, ::Array<uint8_t>*, int, ::Array<uint8_t>*)>(&PKCS12::Decrypt)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12*), "Decrypt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: PKCS12::Decrypt
// Il2CppName: Decrypt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (PKCS12::*)(Mono::Security::PKCS7::EncryptedData*)>(&PKCS12::Decrypt)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12*), "Decrypt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::PKCS7::EncryptedData*>()});
  }
};
// Writing MetadataGetter for method: PKCS12::Encrypt
// Il2CppName: Encrypt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (PKCS12::*)(::Il2CppString*, ::Array<uint8_t>*, int, ::Array<uint8_t>*)>(&PKCS12::Encrypt)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12*), "Encrypt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: PKCS12::GetExistingParameters
// Il2CppName: GetExistingParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::DSAParameters (PKCS12::*)(bool&)>(&PKCS12::GetExistingParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12*), "GetExistingParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool&>()});
  }
};
// Writing MetadataGetter for method: PKCS12::AddPrivateKey
// Il2CppName: AddPrivateKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS12::*)(Mono::Security::Cryptography::PKCS8::PrivateKeyInfo*)>(&PKCS12::AddPrivateKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12*), "AddPrivateKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::Cryptography::PKCS8::PrivateKeyInfo*>()});
  }
};
// Writing MetadataGetter for method: PKCS12::ReadSafeBag
// Il2CppName: ReadSafeBag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS12::*)(Mono::Security::ASN1*)>(&PKCS12::ReadSafeBag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12*), "ReadSafeBag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::ASN1*>()});
  }
};
// Writing MetadataGetter for method: PKCS12::CertificateSafeBag
// Il2CppName: CertificateSafeBag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::ASN1* (PKCS12::*)(Mono::Security::X509::X509Certificate*, System::Collections::IDictionary*)>(&PKCS12::CertificateSafeBag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12*), "CertificateSafeBag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::X509::X509Certificate*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::IDictionary*>()});
  }
};
// Writing MetadataGetter for method: PKCS12::MAC
// Il2CppName: MAC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (PKCS12::*)(::Array<uint8_t>*, ::Array<uint8_t>*, int, ::Array<uint8_t>*)>(&PKCS12::MAC)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12*), "MAC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: PKCS12::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (PKCS12::*)()>(&PKCS12::GetBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PKCS12::EncryptedContentInfo
// Il2CppName: EncryptedContentInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::PKCS7::ContentInfo* (PKCS12::*)(Mono::Security::ASN1*, ::Il2CppString*)>(&PKCS12::EncryptedContentInfo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12*), "EncryptedContentInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::ASN1*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: PKCS12::AddCertificate
// Il2CppName: AddCertificate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS12::*)(Mono::Security::X509::X509Certificate*)>(&PKCS12::AddCertificate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12*), "AddCertificate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::X509::X509Certificate*>()});
  }
};
// Writing MetadataGetter for method: PKCS12::AddCertificate
// Il2CppName: AddCertificate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS12::*)(Mono::Security::X509::X509Certificate*, System::Collections::IDictionary*)>(&PKCS12::AddCertificate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12*), "AddCertificate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::X509::X509Certificate*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::IDictionary*>()});
  }
};
// Writing MetadataGetter for method: PKCS12::RemoveCertificate
// Il2CppName: RemoveCertificate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS12::*)(Mono::Security::X509::X509Certificate*)>(&PKCS12::RemoveCertificate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12*), "RemoveCertificate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::X509::X509Certificate*>()});
  }
};
// Writing MetadataGetter for method: PKCS12::RemoveCertificate
// Il2CppName: RemoveCertificate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS12::*)(Mono::Security::X509::X509Certificate*, System::Collections::IDictionary*)>(&PKCS12::RemoveCertificate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12*), "RemoveCertificate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::X509::X509Certificate*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::IDictionary*>()});
  }
};
// Writing MetadataGetter for method: PKCS12::Clone
// Il2CppName: Clone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (PKCS12::*)()>(&PKCS12::Clone)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12*), "Clone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PKCS12::get_MaximumPasswordLength
// Il2CppName: get_MaximumPasswordLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&PKCS12::get_MaximumPasswordLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12*), "get_MaximumPasswordLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PKCS12::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PKCS12::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PKCS12::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS12::*)()>(&PKCS12::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS12::*)()>(&PKCS12::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PKCS12::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS12::*)()>(&PKCS12::Finalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.X509.PKCS12/DeriveBytes
#include "Mono/Security/X509/PKCS12_DeriveBytes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] keyDiversifier
::Array<uint8_t>* Mono::Security::X509::PKCS12::DeriveBytes::_get_keyDiversifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::DeriveBytes::_get_keyDiversifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Mono.Security.X509", "PKCS12/DeriveBytes", "keyDiversifier"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] keyDiversifier
void Mono::Security::X509::PKCS12::DeriveBytes::_set_keyDiversifier(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::DeriveBytes::_set_keyDiversifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "PKCS12/DeriveBytes", "keyDiversifier", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] ivDiversifier
::Array<uint8_t>* Mono::Security::X509::PKCS12::DeriveBytes::_get_ivDiversifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::DeriveBytes::_get_ivDiversifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Mono.Security.X509", "PKCS12/DeriveBytes", "ivDiversifier"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] ivDiversifier
void Mono::Security::X509::PKCS12::DeriveBytes::_set_ivDiversifier(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::DeriveBytes::_set_ivDiversifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "PKCS12/DeriveBytes", "ivDiversifier", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] macDiversifier
::Array<uint8_t>* Mono::Security::X509::PKCS12::DeriveBytes::_get_macDiversifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::DeriveBytes::_get_macDiversifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Mono.Security.X509", "PKCS12/DeriveBytes", "macDiversifier"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] macDiversifier
void Mono::Security::X509::PKCS12::DeriveBytes::_set_macDiversifier(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::DeriveBytes::_set_macDiversifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "PKCS12/DeriveBytes", "macDiversifier", value));
}
// Autogenerated method: Mono.Security.X509.PKCS12/DeriveBytes.set_HashName
void Mono::Security::X509::PKCS12::DeriveBytes::set_HashName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::DeriveBytes::set_HashName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HashName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.X509.PKCS12/DeriveBytes.set_IterationCount
void Mono::Security::X509::PKCS12::DeriveBytes::set_IterationCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::DeriveBytes::set_IterationCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IterationCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.X509.PKCS12/DeriveBytes.set_Password
void Mono::Security::X509::PKCS12::DeriveBytes::set_Password(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::DeriveBytes::set_Password");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Password", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.X509.PKCS12/DeriveBytes.set_Salt
void Mono::Security::X509::PKCS12::DeriveBytes::set_Salt(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::DeriveBytes::set_Salt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Salt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.X509.PKCS12/DeriveBytes.Adjust
void Mono::Security::X509::PKCS12::DeriveBytes::Adjust(::Array<uint8_t>* a, int aOff, ::Array<uint8_t>* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::DeriveBytes::Adjust");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Adjust", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(aOff), ::il2cpp_utils::ExtractType(b)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, a, aOff, b);
}
// Autogenerated method: Mono.Security.X509.PKCS12/DeriveBytes.Derive
::Array<uint8_t>* Mono::Security::X509::PKCS12::DeriveBytes::Derive(::Array<uint8_t>* diversifier, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::DeriveBytes::Derive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Derive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(diversifier), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, diversifier, n);
}
// Autogenerated method: Mono.Security.X509.PKCS12/DeriveBytes.DeriveKey
::Array<uint8_t>* Mono::Security::X509::PKCS12::DeriveBytes::DeriveKey(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::DeriveBytes::DeriveKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeriveKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, size);
}
// Autogenerated method: Mono.Security.X509.PKCS12/DeriveBytes.DeriveIV
::Array<uint8_t>* Mono::Security::X509::PKCS12::DeriveBytes::DeriveIV(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::DeriveBytes::DeriveIV");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeriveIV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, size);
}
// Autogenerated method: Mono.Security.X509.PKCS12/DeriveBytes.DeriveMAC
::Array<uint8_t>* Mono::Security::X509::PKCS12::DeriveBytes::DeriveMAC(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::DeriveBytes::DeriveMAC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeriveMAC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, size);
}
// Autogenerated method: Mono.Security.X509.PKCS12/DeriveBytes..cctor
void Mono::Security::X509::PKCS12::DeriveBytes::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::PKCS12::DeriveBytes::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.X509", "PKCS12/DeriveBytes", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: PKCS12::DeriveBytes::set_HashName
// Il2CppName: set_HashName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS12::DeriveBytes::*)(::Il2CppString*)>(&PKCS12::DeriveBytes::set_HashName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12::DeriveBytes*), "set_HashName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: PKCS12::DeriveBytes::set_IterationCount
// Il2CppName: set_IterationCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS12::DeriveBytes::*)(int)>(&PKCS12::DeriveBytes::set_IterationCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12::DeriveBytes*), "set_IterationCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PKCS12::DeriveBytes::set_Password
// Il2CppName: set_Password
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS12::DeriveBytes::*)(::Array<uint8_t>*)>(&PKCS12::DeriveBytes::set_Password)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12::DeriveBytes*), "set_Password", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: PKCS12::DeriveBytes::set_Salt
// Il2CppName: set_Salt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS12::DeriveBytes::*)(::Array<uint8_t>*)>(&PKCS12::DeriveBytes::set_Salt)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12::DeriveBytes*), "set_Salt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: PKCS12::DeriveBytes::Adjust
// Il2CppName: Adjust
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS12::DeriveBytes::*)(::Array<uint8_t>*, int, ::Array<uint8_t>*)>(&PKCS12::DeriveBytes::Adjust)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12::DeriveBytes*), "Adjust", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: PKCS12::DeriveBytes::Derive
// Il2CppName: Derive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (PKCS12::DeriveBytes::*)(::Array<uint8_t>*, int)>(&PKCS12::DeriveBytes::Derive)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12::DeriveBytes*), "Derive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PKCS12::DeriveBytes::DeriveKey
// Il2CppName: DeriveKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (PKCS12::DeriveBytes::*)(int)>(&PKCS12::DeriveBytes::DeriveKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12::DeriveBytes*), "DeriveKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PKCS12::DeriveBytes::DeriveIV
// Il2CppName: DeriveIV
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (PKCS12::DeriveBytes::*)(int)>(&PKCS12::DeriveBytes::DeriveIV)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12::DeriveBytes*), "DeriveIV", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PKCS12::DeriveBytes::DeriveMAC
// Il2CppName: DeriveMAC
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (PKCS12::DeriveBytes::*)(int)>(&PKCS12::DeriveBytes::DeriveMAC)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12::DeriveBytes*), "DeriveMAC", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PKCS12::DeriveBytes::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PKCS12::DeriveBytes::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12::DeriveBytes*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PKCS12::DeriveBytes::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS12::DeriveBytes::*)()>(&PKCS12::DeriveBytes::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12::DeriveBytes*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS12::DeriveBytes::*)()>(&PKCS12::DeriveBytes::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS12::DeriveBytes*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.X509.X501
#include "Mono/Security/X509/X501.hpp"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] countryName
::Array<uint8_t>* Mono::Security::X509::X501::_get_countryName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X501::_get_countryName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Mono.Security.X509", "X501", "countryName"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] countryName
void Mono::Security::X509::X501::_set_countryName(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X501::_set_countryName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "countryName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] organizationName
::Array<uint8_t>* Mono::Security::X509::X501::_get_organizationName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X501::_get_organizationName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Mono.Security.X509", "X501", "organizationName"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] organizationName
void Mono::Security::X509::X501::_set_organizationName(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X501::_set_organizationName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "organizationName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] organizationalUnitName
::Array<uint8_t>* Mono::Security::X509::X501::_get_organizationalUnitName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X501::_get_organizationalUnitName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Mono.Security.X509", "X501", "organizationalUnitName"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] organizationalUnitName
void Mono::Security::X509::X501::_set_organizationalUnitName(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X501::_set_organizationalUnitName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "organizationalUnitName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] commonName
::Array<uint8_t>* Mono::Security::X509::X501::_get_commonName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X501::_get_commonName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Mono.Security.X509", "X501", "commonName"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] commonName
void Mono::Security::X509::X501::_set_commonName(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X501::_set_commonName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "commonName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] localityName
::Array<uint8_t>* Mono::Security::X509::X501::_get_localityName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X501::_get_localityName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Mono.Security.X509", "X501", "localityName"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] localityName
void Mono::Security::X509::X501::_set_localityName(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X501::_set_localityName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "localityName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] stateOrProvinceName
::Array<uint8_t>* Mono::Security::X509::X501::_get_stateOrProvinceName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X501::_get_stateOrProvinceName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Mono.Security.X509", "X501", "stateOrProvinceName"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] stateOrProvinceName
void Mono::Security::X509::X501::_set_stateOrProvinceName(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X501::_set_stateOrProvinceName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "stateOrProvinceName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] streetAddress
::Array<uint8_t>* Mono::Security::X509::X501::_get_streetAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X501::_get_streetAddress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Mono.Security.X509", "X501", "streetAddress"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] streetAddress
void Mono::Security::X509::X501::_set_streetAddress(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X501::_set_streetAddress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "streetAddress", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] domainComponent
::Array<uint8_t>* Mono::Security::X509::X501::_get_domainComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X501::_get_domainComponent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Mono.Security.X509", "X501", "domainComponent"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] domainComponent
void Mono::Security::X509::X501::_set_domainComponent(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X501::_set_domainComponent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "domainComponent", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] userid
::Array<uint8_t>* Mono::Security::X509::X501::_get_userid() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X501::_get_userid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Mono.Security.X509", "X501", "userid"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] userid
void Mono::Security::X509::X501::_set_userid(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X501::_set_userid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "userid", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] email
::Array<uint8_t>* Mono::Security::X509::X501::_get_email() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X501::_get_email");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Mono.Security.X509", "X501", "email"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] email
void Mono::Security::X509::X501::_set_email(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X501::_set_email");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "email", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] dnQualifier
::Array<uint8_t>* Mono::Security::X509::X501::_get_dnQualifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X501::_get_dnQualifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Mono.Security.X509", "X501", "dnQualifier"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] dnQualifier
void Mono::Security::X509::X501::_set_dnQualifier(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X501::_set_dnQualifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "dnQualifier", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] title
::Array<uint8_t>* Mono::Security::X509::X501::_get_title() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X501::_get_title");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Mono.Security.X509", "X501", "title"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] title
void Mono::Security::X509::X501::_set_title(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X501::_set_title");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "title", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] surname
::Array<uint8_t>* Mono::Security::X509::X501::_get_surname() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X501::_get_surname");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Mono.Security.X509", "X501", "surname"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] surname
void Mono::Security::X509::X501::_set_surname(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X501::_set_surname");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "surname", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] givenName
::Array<uint8_t>* Mono::Security::X509::X501::_get_givenName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X501::_get_givenName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Mono.Security.X509", "X501", "givenName"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] givenName
void Mono::Security::X509::X501::_set_givenName(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X501::_set_givenName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "givenName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] initial
::Array<uint8_t>* Mono::Security::X509::X501::_get_initial() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X501::_get_initial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Mono.Security.X509", "X501", "initial"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] initial
void Mono::Security::X509::X501::_set_initial(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X501::_set_initial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X501", "initial", value));
}
// Autogenerated method: Mono.Security.X509.X501.ToString
::Il2CppString* Mono::Security::X509::X501::ToString(Mono::Security::ASN1* seq) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X501::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.X509", "X501", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seq)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, seq);
}
// Autogenerated method: Mono.Security.X509.X501.ToString
::Il2CppString* Mono::Security::X509::X501::ToString(Mono::Security::ASN1* seq, bool reversed, ::Il2CppString* separator, bool quotes) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X501::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.X509", "X501", "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seq), ::il2cpp_utils::ExtractType(reversed), ::il2cpp_utils::ExtractType(separator), ::il2cpp_utils::ExtractType(quotes)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, seq, reversed, separator, quotes);
}
// Autogenerated method: Mono.Security.X509.X501.AppendEntry
void Mono::Security::X509::X501::AppendEntry(System::Text::StringBuilder* sb, Mono::Security::ASN1* entry, bool quotes) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X501::AppendEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.X509", "X501", "AppendEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(entry), ::il2cpp_utils::ExtractType(quotes)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sb, entry, quotes);
}
// Autogenerated method: Mono.Security.X509.X501..cctor
void Mono::Security::X509::X501::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X501::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.X509", "X501", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: X501::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(Mono::Security::ASN1*)>(&X501::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X501*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::ASN1*>()});
  }
};
// Writing MetadataGetter for method: X501::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(Mono::Security::ASN1*, bool, ::Il2CppString*, bool)>(&X501::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X501*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::ASN1*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: X501::AppendEntry
// Il2CppName: AppendEntry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Text::StringBuilder*, Mono::Security::ASN1*, bool)>(&X501::AppendEntry)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X501*), "AppendEntry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Text::StringBuilder*>(), ::il2cpp_utils::ExtractIndependentType<Mono::Security::ASN1*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: X501::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&X501::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X501*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.X509.X509Crl
#include "Mono/Security/X509/X509Crl.hpp"
// Including type: Mono.Security.X509.X509Crl/X509CrlEntry
#include "Mono/Security/X509/X509Crl_X509CrlEntry.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: Mono.Security.X509.X509ExtensionCollection
#include "Mono/Security/X509/X509ExtensionCollection.hpp"
// Including type: Mono.Security.X509.X509Certificate
#include "Mono/Security/X509/X509Certificate.hpp"
// Including type: System.Security.Cryptography.DSA
#include "System/Security/Cryptography/DSA.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.X509.X509Crl.Parse
void Mono::Security::X509::X509Crl::Parse(::Array<uint8_t>* crl) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Crl::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(crl)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, crl);
}
// Autogenerated method: Mono.Security.X509.X509Crl.get_Extensions
Mono::Security::X509::X509ExtensionCollection* Mono::Security::X509::X509Crl::get_Extensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Crl::get_Extensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Extensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::X509::X509ExtensionCollection*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Crl.get_Hash
::Array<uint8_t>* Mono::Security::X509::X509Crl::get_Hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Crl::get_Hash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Hash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Crl.get_IssuerName
::Il2CppString* Mono::Security::X509::X509Crl::get_IssuerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Crl::get_IssuerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IssuerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Crl.get_NextUpdate
System::DateTime Mono::Security::X509::X509Crl::get_NextUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Crl::get_NextUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NextUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Crl.Compare
bool Mono::Security::X509::X509Crl::Compare(::Array<uint8_t>* array1, ::Array<uint8_t>* array2) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Crl::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array1), ::il2cpp_utils::ExtractType(array2)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, array1, array2);
}
// Autogenerated method: Mono.Security.X509.X509Crl.GetCrlEntry
Mono::Security::X509::X509Crl::X509CrlEntry* Mono::Security::X509::X509Crl::GetCrlEntry(Mono::Security::X509::X509Certificate* x509) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Crl::GetCrlEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCrlEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x509)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::X509::X509Crl::X509CrlEntry*, false>(this, ___internal__method, x509);
}
// Autogenerated method: Mono.Security.X509.X509Crl.GetCrlEntry
Mono::Security::X509::X509Crl::X509CrlEntry* Mono::Security::X509::X509Crl::GetCrlEntry(::Array<uint8_t>* serialNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Crl::GetCrlEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCrlEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serialNumber)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::X509::X509Crl::X509CrlEntry*, false>(this, ___internal__method, serialNumber);
}
// Autogenerated method: Mono.Security.X509.X509Crl.VerifySignature
bool Mono::Security::X509::X509Crl::VerifySignature(System::Security::Cryptography::DSA* dsa) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Crl::VerifySignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifySignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dsa)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, dsa);
}
// Autogenerated method: Mono.Security.X509.X509Crl.VerifySignature
bool Mono::Security::X509::X509Crl::VerifySignature(System::Security::Cryptography::RSA* rsa) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Crl::VerifySignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifySignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rsa)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, rsa);
}
// Autogenerated method: Mono.Security.X509.X509Crl.VerifySignature
bool Mono::Security::X509::X509Crl::VerifySignature(System::Security::Cryptography::AsymmetricAlgorithm* aa) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Crl::VerifySignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifySignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aa)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, aa);
}
// Writing MetadataGetter for method: X509Crl::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Crl::*)(::Array<uint8_t>*)>(&X509Crl::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Crl*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Crl::*)(::Array<uint8_t>*)>(&X509Crl::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Crl*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: X509Crl::Parse
// Il2CppName: Parse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Crl::*)(::Array<uint8_t>*)>(&X509Crl::Parse)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Crl*), "Parse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: X509Crl::get_Extensions
// Il2CppName: get_Extensions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::X509::X509ExtensionCollection* (X509Crl::*)()>(&X509Crl::get_Extensions)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Crl*), "get_Extensions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Crl::get_Hash
// Il2CppName: get_Hash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (X509Crl::*)()>(&X509Crl::get_Hash)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Crl*), "get_Hash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Crl::get_IssuerName
// Il2CppName: get_IssuerName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (X509Crl::*)()>(&X509Crl::get_IssuerName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Crl*), "get_IssuerName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Crl::get_NextUpdate
// Il2CppName: get_NextUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::DateTime (X509Crl::*)()>(&X509Crl::get_NextUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Crl*), "get_NextUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Crl::Compare
// Il2CppName: Compare
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (X509Crl::*)(::Array<uint8_t>*, ::Array<uint8_t>*)>(&X509Crl::Compare)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Crl*), "Compare", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: X509Crl::GetCrlEntry
// Il2CppName: GetCrlEntry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::X509::X509Crl::X509CrlEntry* (X509Crl::*)(Mono::Security::X509::X509Certificate*)>(&X509Crl::GetCrlEntry)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Crl*), "GetCrlEntry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::X509::X509Certificate*>()});
  }
};
// Writing MetadataGetter for method: X509Crl::GetCrlEntry
// Il2CppName: GetCrlEntry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::X509::X509Crl::X509CrlEntry* (X509Crl::*)(::Array<uint8_t>*)>(&X509Crl::GetCrlEntry)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Crl*), "GetCrlEntry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: X509Crl::VerifySignature
// Il2CppName: VerifySignature
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (X509Crl::*)(System::Security::Cryptography::DSA*)>(&X509Crl::VerifySignature)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Crl*), "VerifySignature", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::DSA*>()});
  }
};
// Writing MetadataGetter for method: X509Crl::VerifySignature
// Il2CppName: VerifySignature
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (X509Crl::*)(System::Security::Cryptography::RSA*)>(&X509Crl::VerifySignature)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Crl*), "VerifySignature", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::RSA*>()});
  }
};
// Writing MetadataGetter for method: X509Crl::VerifySignature
// Il2CppName: VerifySignature
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (X509Crl::*)(System::Security::Cryptography::AsymmetricAlgorithm*)>(&X509Crl::VerifySignature)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Crl*), "VerifySignature", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::AsymmetricAlgorithm*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.X509.X509Crl/X509CrlEntry
#include "Mono/Security/X509/X509Crl_X509CrlEntry.hpp"
// Including type: Mono.Security.X509.X509ExtensionCollection
#include "Mono/Security/X509/X509ExtensionCollection.hpp"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.X509.X509Crl/X509CrlEntry.get_SerialNumber
::Array<uint8_t>* Mono::Security::X509::X509Crl::X509CrlEntry::get_SerialNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Crl::X509CrlEntry::get_SerialNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SerialNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Crl/X509CrlEntry.get_RevocationDate
System::DateTime Mono::Security::X509::X509Crl::X509CrlEntry::get_RevocationDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Crl::X509CrlEntry::get_RevocationDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RevocationDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Crl/X509CrlEntry.get_Extensions
Mono::Security::X509::X509ExtensionCollection* Mono::Security::X509::X509Crl::X509CrlEntry::get_Extensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Crl::X509CrlEntry::get_Extensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Extensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::X509::X509ExtensionCollection*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: X509Crl::X509CrlEntry::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Crl::X509CrlEntry::*)(Mono::Security::ASN1*)>(&X509Crl::X509CrlEntry::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Crl::X509CrlEntry*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::ASN1*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Crl::X509CrlEntry::*)(Mono::Security::ASN1*)>(&X509Crl::X509CrlEntry::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Crl::X509CrlEntry*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::ASN1*>()});
  }
};
// Writing MetadataGetter for method: X509Crl::X509CrlEntry::get_SerialNumber
// Il2CppName: get_SerialNumber
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (X509Crl::X509CrlEntry::*)()>(&X509Crl::X509CrlEntry::get_SerialNumber)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Crl::X509CrlEntry*), "get_SerialNumber", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Crl::X509CrlEntry::get_RevocationDate
// Il2CppName: get_RevocationDate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::DateTime (X509Crl::X509CrlEntry::*)()>(&X509Crl::X509CrlEntry::get_RevocationDate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Crl::X509CrlEntry*), "get_RevocationDate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Crl::X509CrlEntry::get_Extensions
// Il2CppName: get_Extensions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::X509::X509ExtensionCollection* (X509Crl::X509CrlEntry::*)()>(&X509Crl::X509CrlEntry::get_Extensions)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Crl::X509CrlEntry*), "get_Extensions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.X509.X509Certificate
#include "Mono/Security/X509/X509Certificate.hpp"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
// Including type: System.Security.Cryptography.DSA
#include "System/Security/Cryptography/DSA.hpp"
// Including type: Mono.Security.X509.X509ExtensionCollection
#include "Mono/Security/X509/X509ExtensionCollection.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String encoding_error
::Il2CppString* Mono::Security::X509::X509Certificate::_get_encoding_error() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Certificate::_get_encoding_error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Mono.Security.X509", "X509Certificate", "encoding_error"));
}
// Autogenerated static field setter
// Set static field: static private System.String encoding_error
void Mono::Security::X509::X509Certificate::_set_encoding_error(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Certificate::_set_encoding_error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X509Certificate", "encoding_error", value));
}
// Autogenerated method: Mono.Security.X509.X509Certificate.Parse
void Mono::Security::X509::X509Certificate::Parse(::Array<uint8_t>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Certificate::Parse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Parse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.GetUnsignedBigInteger
::Array<uint8_t>* Mono::Security::X509::X509Certificate::GetUnsignedBigInteger(::Array<uint8_t>* integer) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Certificate::GetUnsignedBigInteger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUnsignedBigInteger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(integer)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, integer);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_DSA
System::Security::Cryptography::DSA* Mono::Security::X509::X509Certificate::get_DSA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Certificate::get_DSA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DSA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::DSA*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.set_DSA
void Mono::Security::X509::X509Certificate::set_DSA(System::Security::Cryptography::DSA* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Certificate::set_DSA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DSA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_Extensions
Mono::Security::X509::X509ExtensionCollection* Mono::Security::X509::X509Certificate::get_Extensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Certificate::get_Extensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Extensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::X509::X509ExtensionCollection*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_Hash
::Array<uint8_t>* Mono::Security::X509::X509Certificate::get_Hash() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Certificate::get_Hash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Hash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_IssuerName
::Il2CppString* Mono::Security::X509::X509Certificate::get_IssuerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Certificate::get_IssuerName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IssuerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_KeyAlgorithm
::Il2CppString* Mono::Security::X509::X509Certificate::get_KeyAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Certificate::get_KeyAlgorithm");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeyAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_KeyAlgorithmParameters
::Array<uint8_t>* Mono::Security::X509::X509Certificate::get_KeyAlgorithmParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Certificate::get_KeyAlgorithmParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeyAlgorithmParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.set_KeyAlgorithmParameters
void Mono::Security::X509::X509Certificate::set_KeyAlgorithmParameters(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Certificate::set_KeyAlgorithmParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_KeyAlgorithmParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_PublicKey
::Array<uint8_t>* Mono::Security::X509::X509Certificate::get_PublicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Certificate::get_PublicKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PublicKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_RSA
System::Security::Cryptography::RSA* Mono::Security::X509::X509Certificate::get_RSA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Certificate::get_RSA");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RSA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::RSA*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.set_RSA
void Mono::Security::X509::X509Certificate::set_RSA(System::Security::Cryptography::RSA* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Certificate::set_RSA");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RSA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_RawData
::Array<uint8_t>* Mono::Security::X509::X509Certificate::get_RawData() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Certificate::get_RawData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RawData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_SerialNumber
::Array<uint8_t>* Mono::Security::X509::X509Certificate::get_SerialNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Certificate::get_SerialNumber");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SerialNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_Signature
::Array<uint8_t>* Mono::Security::X509::X509Certificate::get_Signature() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Certificate::get_Signature");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Signature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_SignatureAlgorithm
::Il2CppString* Mono::Security::X509::X509Certificate::get_SignatureAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Certificate::get_SignatureAlgorithm");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SignatureAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_SubjectName
::Il2CppString* Mono::Security::X509::X509Certificate::get_SubjectName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Certificate::get_SubjectName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SubjectName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_ValidFrom
System::DateTime Mono::Security::X509::X509Certificate::get_ValidFrom() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Certificate::get_ValidFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValidFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_ValidUntil
System::DateTime Mono::Security::X509::X509Certificate::get_ValidUntil() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Certificate::get_ValidUntil");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValidUntil", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.get_Version
int Mono::Security::X509::X509Certificate::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Certificate::get_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.VerifySignature
bool Mono::Security::X509::X509Certificate::VerifySignature(System::Security::Cryptography::DSA* dsa) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Certificate::VerifySignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifySignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dsa)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, dsa);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.VerifySignature
bool Mono::Security::X509::X509Certificate::VerifySignature(System::Security::Cryptography::RSA* rsa) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Certificate::VerifySignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifySignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rsa)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, rsa);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.VerifySignature
bool Mono::Security::X509::X509Certificate::VerifySignature(System::Security::Cryptography::AsymmetricAlgorithm* aa) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Certificate::VerifySignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifySignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aa)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, aa);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.GetIssuerName
Mono::Security::ASN1* Mono::Security::X509::X509Certificate::GetIssuerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Certificate::GetIssuerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIssuerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::ASN1*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.GetSubjectName
Mono::Security::ASN1* Mono::Security::X509::X509Certificate::GetSubjectName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Certificate::GetSubjectName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSubjectName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::ASN1*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.GetObjectData
void Mono::Security::X509::X509Certificate::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Certificate::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: Mono.Security.X509.X509Certificate.PEM
::Array<uint8_t>* Mono::Security::X509::X509Certificate::PEM(::Il2CppString* type, ::Array<uint8_t>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Certificate::PEM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.X509", "X509Certificate", "PEM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, data);
}
// Autogenerated method: Mono.Security.X509.X509Certificate..cctor
void Mono::Security::X509::X509Certificate::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Certificate::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.X509", "X509Certificate", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: X509Certificate::Parse
// Il2CppName: Parse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Certificate::*)(::Array<uint8_t>*)>(&X509Certificate::Parse)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "Parse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: X509Certificate::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Certificate::*)(::Array<uint8_t>*)>(&X509Certificate::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Certificate::*)(::Array<uint8_t>*)>(&X509Certificate::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: X509Certificate::GetUnsignedBigInteger
// Il2CppName: GetUnsignedBigInteger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (X509Certificate::*)(::Array<uint8_t>*)>(&X509Certificate::GetUnsignedBigInteger)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "GetUnsignedBigInteger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: X509Certificate::get_DSA
// Il2CppName: get_DSA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::DSA* (X509Certificate::*)()>(&X509Certificate::get_DSA)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "get_DSA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Certificate::set_DSA
// Il2CppName: set_DSA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Certificate::*)(System::Security::Cryptography::DSA*)>(&X509Certificate::set_DSA)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "set_DSA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::DSA*>()});
  }
};
// Writing MetadataGetter for method: X509Certificate::get_Extensions
// Il2CppName: get_Extensions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::X509::X509ExtensionCollection* (X509Certificate::*)()>(&X509Certificate::get_Extensions)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "get_Extensions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Certificate::get_Hash
// Il2CppName: get_Hash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (X509Certificate::*)()>(&X509Certificate::get_Hash)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "get_Hash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Certificate::get_IssuerName
// Il2CppName: get_IssuerName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (X509Certificate::*)()>(&X509Certificate::get_IssuerName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "get_IssuerName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Certificate::get_KeyAlgorithm
// Il2CppName: get_KeyAlgorithm
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (X509Certificate::*)()>(&X509Certificate::get_KeyAlgorithm)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "get_KeyAlgorithm", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Certificate::get_KeyAlgorithmParameters
// Il2CppName: get_KeyAlgorithmParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (X509Certificate::*)()>(&X509Certificate::get_KeyAlgorithmParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "get_KeyAlgorithmParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Certificate::set_KeyAlgorithmParameters
// Il2CppName: set_KeyAlgorithmParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Certificate::*)(::Array<uint8_t>*)>(&X509Certificate::set_KeyAlgorithmParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "set_KeyAlgorithmParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: X509Certificate::get_PublicKey
// Il2CppName: get_PublicKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (X509Certificate::*)()>(&X509Certificate::get_PublicKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "get_PublicKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Certificate::get_RSA
// Il2CppName: get_RSA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::RSA* (X509Certificate::*)()>(&X509Certificate::get_RSA)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "get_RSA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Certificate::set_RSA
// Il2CppName: set_RSA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Certificate::*)(System::Security::Cryptography::RSA*)>(&X509Certificate::set_RSA)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "set_RSA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::RSA*>()});
  }
};
// Writing MetadataGetter for method: X509Certificate::get_RawData
// Il2CppName: get_RawData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (X509Certificate::*)()>(&X509Certificate::get_RawData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "get_RawData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Certificate::get_SerialNumber
// Il2CppName: get_SerialNumber
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (X509Certificate::*)()>(&X509Certificate::get_SerialNumber)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "get_SerialNumber", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Certificate::get_Signature
// Il2CppName: get_Signature
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (X509Certificate::*)()>(&X509Certificate::get_Signature)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "get_Signature", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Certificate::get_SignatureAlgorithm
// Il2CppName: get_SignatureAlgorithm
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (X509Certificate::*)()>(&X509Certificate::get_SignatureAlgorithm)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "get_SignatureAlgorithm", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Certificate::get_SubjectName
// Il2CppName: get_SubjectName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (X509Certificate::*)()>(&X509Certificate::get_SubjectName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "get_SubjectName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Certificate::get_ValidFrom
// Il2CppName: get_ValidFrom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::DateTime (X509Certificate::*)()>(&X509Certificate::get_ValidFrom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "get_ValidFrom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Certificate::get_ValidUntil
// Il2CppName: get_ValidUntil
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::DateTime (X509Certificate::*)()>(&X509Certificate::get_ValidUntil)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "get_ValidUntil", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Certificate::get_Version
// Il2CppName: get_Version
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (X509Certificate::*)()>(&X509Certificate::get_Version)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "get_Version", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Certificate::VerifySignature
// Il2CppName: VerifySignature
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (X509Certificate::*)(System::Security::Cryptography::DSA*)>(&X509Certificate::VerifySignature)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "VerifySignature", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::DSA*>()});
  }
};
// Writing MetadataGetter for method: X509Certificate::VerifySignature
// Il2CppName: VerifySignature
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (X509Certificate::*)(System::Security::Cryptography::RSA*)>(&X509Certificate::VerifySignature)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "VerifySignature", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::RSA*>()});
  }
};
// Writing MetadataGetter for method: X509Certificate::VerifySignature
// Il2CppName: VerifySignature
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (X509Certificate::*)(System::Security::Cryptography::AsymmetricAlgorithm*)>(&X509Certificate::VerifySignature)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "VerifySignature", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::AsymmetricAlgorithm*>()});
  }
};
// Writing MetadataGetter for method: X509Certificate::GetIssuerName
// Il2CppName: GetIssuerName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::ASN1* (X509Certificate::*)()>(&X509Certificate::GetIssuerName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "GetIssuerName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Certificate::GetSubjectName
// Il2CppName: GetSubjectName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::ASN1* (X509Certificate::*)()>(&X509Certificate::GetSubjectName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "GetSubjectName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Certificate::GetObjectData
// Il2CppName: GetObjectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Certificate::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&X509Certificate::GetObjectData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "GetObjectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: X509Certificate::PEM
// Il2CppName: PEM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(::Il2CppString*, ::Array<uint8_t>*)>(&X509Certificate::PEM)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "PEM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: X509Certificate::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&X509Certificate::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.X509.X509CertificateCollection
#include "Mono/Security/X509/X509CertificateCollection.hpp"
// Including type: Mono.Security.X509.X509CertificateCollection/X509CertificateEnumerator
#include "Mono/Security/X509/X509CertificateCollection_X509CertificateEnumerator.hpp"
// Including type: Mono.Security.X509.X509Certificate
#include "Mono/Security/X509/X509Certificate.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.X509.X509CertificateCollection.get_Item
Mono::Security::X509::X509Certificate* Mono::Security::X509::X509CertificateCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509CertificateCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::X509::X509Certificate*, false>(this, ___internal__method, index);
}
// Autogenerated method: Mono.Security.X509.X509CertificateCollection.Add
int Mono::Security::X509::X509CertificateCollection::Add(Mono::Security::X509::X509Certificate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509CertificateCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.X509.X509CertificateCollection.GetEnumerator
Mono::Security::X509::X509CertificateCollection::X509CertificateEnumerator* Mono::Security::X509::X509CertificateCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509CertificateCollection::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::X509::X509CertificateCollection::X509CertificateEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509CertificateCollection.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* Mono::Security::X509::X509CertificateCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509CertificateCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509CertificateCollection.GetHashCode
int Mono::Security::X509::X509CertificateCollection::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509CertificateCollection::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: X509CertificateCollection::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::X509::X509Certificate* (X509CertificateCollection::*)(int)>(&X509CertificateCollection::get_Item)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateCollection*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: X509CertificateCollection::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (X509CertificateCollection::*)(Mono::Security::X509::X509Certificate*)>(&X509CertificateCollection::Add)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateCollection*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::X509::X509Certificate*>()});
  }
};
// Writing MetadataGetter for method: X509CertificateCollection::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::X509::X509CertificateCollection::X509CertificateEnumerator* (X509CertificateCollection::*)()>(&X509CertificateCollection::GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateCollection*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509CertificateCollection::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (X509CertificateCollection::*)()>(&X509CertificateCollection::System_Collections_IEnumerable_GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateCollection*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509CertificateCollection::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509CertificateCollection::*)()>(&X509CertificateCollection::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateCollection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509CertificateCollection::*)()>(&X509CertificateCollection::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateCollection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509CertificateCollection::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (X509CertificateCollection::*)()>(&X509CertificateCollection::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateCollection*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.X509.X509CertificateCollection/X509CertificateEnumerator
#include "Mono/Security/X509/X509CertificateCollection_X509CertificateEnumerator.hpp"
// Including type: Mono.Security.X509.X509Certificate
#include "Mono/Security/X509/X509Certificate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.X509.X509CertificateCollection/X509CertificateEnumerator.get_Current
Mono::Security::X509::X509Certificate* Mono::Security::X509::X509CertificateCollection::X509CertificateEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509CertificateCollection::X509CertificateEnumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::X509::X509Certificate*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509CertificateCollection/X509CertificateEnumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* Mono::Security::X509::X509CertificateCollection::X509CertificateEnumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509CertificateCollection::X509CertificateEnumerator::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509CertificateCollection/X509CertificateEnumerator.System.Collections.IEnumerator.MoveNext
bool Mono::Security::X509::X509CertificateCollection::X509CertificateEnumerator::System_Collections_IEnumerator_MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509CertificateCollection::X509CertificateEnumerator::System.Collections.IEnumerator.MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509CertificateCollection/X509CertificateEnumerator.System.Collections.IEnumerator.Reset
void Mono::Security::X509::X509CertificateCollection::X509CertificateEnumerator::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509CertificateCollection::X509CertificateEnumerator::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509CertificateCollection/X509CertificateEnumerator.MoveNext
bool Mono::Security::X509::X509CertificateCollection::X509CertificateEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509CertificateCollection::X509CertificateEnumerator::MoveNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: X509CertificateCollection::X509CertificateEnumerator::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509CertificateCollection::X509CertificateEnumerator::*)(Mono::Security::X509::X509CertificateCollection*)>(&X509CertificateCollection::X509CertificateEnumerator::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateCollection::X509CertificateEnumerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::X509::X509CertificateCollection*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509CertificateCollection::X509CertificateEnumerator::*)(Mono::Security::X509::X509CertificateCollection*)>(&X509CertificateCollection::X509CertificateEnumerator::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateCollection::X509CertificateEnumerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::X509::X509CertificateCollection*>()});
  }
};
// Writing MetadataGetter for method: X509CertificateCollection::X509CertificateEnumerator::get_Current
// Il2CppName: get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::X509::X509Certificate* (X509CertificateCollection::X509CertificateEnumerator::*)()>(&X509CertificateCollection::X509CertificateEnumerator::get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateCollection::X509CertificateEnumerator*), "get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509CertificateCollection::X509CertificateEnumerator::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (X509CertificateCollection::X509CertificateEnumerator::*)()>(&X509CertificateCollection::X509CertificateEnumerator::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateCollection::X509CertificateEnumerator*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509CertificateCollection::X509CertificateEnumerator::System_Collections_IEnumerator_MoveNext
// Il2CppName: System.Collections.IEnumerator.MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (X509CertificateCollection::X509CertificateEnumerator::*)()>(&X509CertificateCollection::X509CertificateEnumerator::System_Collections_IEnumerator_MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateCollection::X509CertificateEnumerator*), "System.Collections.IEnumerator.MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509CertificateCollection::X509CertificateEnumerator::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509CertificateCollection::X509CertificateEnumerator::*)()>(&X509CertificateCollection::X509CertificateEnumerator::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateCollection::X509CertificateEnumerator*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509CertificateCollection::X509CertificateEnumerator::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (X509CertificateCollection::X509CertificateEnumerator::*)()>(&X509CertificateCollection::X509CertificateEnumerator::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateCollection::X509CertificateEnumerator*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.X509.X509Extension
#include "Mono/Security/X509/X509Extension.hpp"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.X509.X509Extension.Decode
void Mono::Security::X509::X509Extension::Decode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Extension::Decode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Extension.Encode
void Mono::Security::X509::X509Extension::Encode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Extension::Encode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Extension.get_Oid
::Il2CppString* Mono::Security::X509::X509Extension::get_Oid() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Extension::get_Oid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Oid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Extension.get_Critical
bool Mono::Security::X509::X509Extension::get_Critical() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Extension::get_Critical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Critical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Extension.get_Value
Mono::Security::ASN1* Mono::Security::X509::X509Extension::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Extension::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::ASN1*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Extension.WriteLine
void Mono::Security::X509::X509Extension::WriteLine(System::Text::StringBuilder* sb, int n, int pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Extension::WriteLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sb), ::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sb, n, pos);
}
// Autogenerated method: Mono.Security.X509.X509Extension.Equals
bool Mono::Security::X509::X509Extension::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Extension::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Mono.Security.X509.X509Extension.GetHashCode
int Mono::Security::X509::X509Extension::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Extension::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Extension.ToString
::Il2CppString* Mono::Security::X509::X509Extension::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Extension::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: X509Extension::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Extension::*)(Mono::Security::ASN1*)>(&X509Extension::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Extension*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::ASN1*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Extension::*)(Mono::Security::ASN1*)>(&X509Extension::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Extension*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::ASN1*>()});
  }
};
// Writing MetadataGetter for method: X509Extension::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Extension::*)(Mono::Security::X509::X509Extension*)>(&X509Extension::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Extension*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::X509::X509Extension*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Extension::*)(Mono::Security::X509::X509Extension*)>(&X509Extension::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Extension*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::X509::X509Extension*>()});
  }
};
// Writing MetadataGetter for method: X509Extension::Decode
// Il2CppName: Decode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Extension::*)()>(&X509Extension::Decode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Extension*), "Decode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Extension::Encode
// Il2CppName: Encode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Extension::*)()>(&X509Extension::Encode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Extension*), "Encode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Extension::get_Oid
// Il2CppName: get_Oid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (X509Extension::*)()>(&X509Extension::get_Oid)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Extension*), "get_Oid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Extension::get_Critical
// Il2CppName: get_Critical
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (X509Extension::*)()>(&X509Extension::get_Critical)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Extension*), "get_Critical", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Extension::get_Value
// Il2CppName: get_Value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::ASN1* (X509Extension::*)()>(&X509Extension::get_Value)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Extension*), "get_Value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Extension::WriteLine
// Il2CppName: WriteLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Extension::*)(System::Text::StringBuilder*, int, int)>(&X509Extension::WriteLine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Extension*), "WriteLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Text::StringBuilder*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: X509Extension::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (X509Extension::*)(::Il2CppObject*)>(&X509Extension::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Extension*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: X509Extension::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (X509Extension::*)()>(&X509Extension::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Extension*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Extension::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (X509Extension::*)()>(&X509Extension::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Extension*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.X509.X509ExtensionCollection
#include "Mono/Security/X509/X509ExtensionCollection.hpp"
// Including type: Mono.Security.ASN1
#include "Mono/Security/ASN1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Mono.Security.X509.X509Extension
#include "Mono/Security/X509/X509Extension.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.X509.X509ExtensionCollection.IndexOf
int Mono::Security::X509::X509ExtensionCollection::IndexOf(::Il2CppString* oid) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509ExtensionCollection::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oid)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, oid);
}
// Autogenerated method: Mono.Security.X509.X509ExtensionCollection.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* Mono::Security::X509::X509ExtensionCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509ExtensionCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509ExtensionCollection.get_Item
Mono::Security::X509::X509Extension* Mono::Security::X509::X509ExtensionCollection::get_Item(::Il2CppString* oid) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509ExtensionCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oid)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::X509::X509Extension*, false>(this, ___internal__method, oid);
}
// Writing MetadataGetter for method: X509ExtensionCollection::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509ExtensionCollection::*)(Mono::Security::ASN1*)>(&X509ExtensionCollection::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509ExtensionCollection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::ASN1*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509ExtensionCollection::*)(Mono::Security::ASN1*)>(&X509ExtensionCollection::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509ExtensionCollection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::ASN1*>()});
  }
};
// Writing MetadataGetter for method: X509ExtensionCollection::IndexOf
// Il2CppName: IndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (X509ExtensionCollection::*)(::Il2CppString*)>(&X509ExtensionCollection::IndexOf)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509ExtensionCollection*), "IndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: X509ExtensionCollection::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (X509ExtensionCollection::*)()>(&X509ExtensionCollection::System_Collections_IEnumerable_GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509ExtensionCollection*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509ExtensionCollection::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::X509::X509Extension* (X509ExtensionCollection::*)(::Il2CppString*)>(&X509ExtensionCollection::get_Item)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509ExtensionCollection*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: X509ExtensionCollection::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509ExtensionCollection::*)()>(&X509ExtensionCollection::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509ExtensionCollection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509ExtensionCollection::*)()>(&X509ExtensionCollection::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509ExtensionCollection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.X509.X509Store
#include "Mono/Security/X509/X509Store.hpp"
// Including type: Mono.Security.X509.X509CertificateCollection
#include "Mono/Security/X509/X509CertificateCollection.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: Mono.Security.X509.X509Certificate
#include "Mono/Security/X509/X509Certificate.hpp"
// Including type: Mono.Security.X509.X509Crl
#include "Mono/Security/X509/X509Crl.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.X509.X509Store.get_Certificates
Mono::Security::X509::X509CertificateCollection* Mono::Security::X509::X509Store::get_Certificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Store::get_Certificates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Certificates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::X509::X509CertificateCollection*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Store.get_Crls
System::Collections::ArrayList* Mono::Security::X509::X509Store::get_Crls() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Store::get_Crls");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Crls", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::ArrayList*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509Store.Load
::Array<uint8_t>* Mono::Security::X509::X509Store::Load(::Il2CppString* filename) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Store::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filename)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, filename);
}
// Autogenerated method: Mono.Security.X509.X509Store.LoadCertificate
Mono::Security::X509::X509Certificate* Mono::Security::X509::X509Store::LoadCertificate(::Il2CppString* filename) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Store::LoadCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filename)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::X509::X509Certificate*, false>(this, ___internal__method, filename);
}
// Autogenerated method: Mono.Security.X509.X509Store.LoadCrl
Mono::Security::X509::X509Crl* Mono::Security::X509::X509Store::LoadCrl(::Il2CppString* filename) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Store::LoadCrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadCrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filename)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::X509::X509Crl*, false>(this, ___internal__method, filename);
}
// Autogenerated method: Mono.Security.X509.X509Store.CheckStore
bool Mono::Security::X509::X509Store::CheckStore(::Il2CppString* path, bool throwException) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Store::CheckStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(throwException)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, path, throwException);
}
// Autogenerated method: Mono.Security.X509.X509Store.BuildCertificatesCollection
Mono::Security::X509::X509CertificateCollection* Mono::Security::X509::X509Store::BuildCertificatesCollection(::Il2CppString* storeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Store::BuildCertificatesCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildCertificatesCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(storeName)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::X509::X509CertificateCollection*, false>(this, ___internal__method, storeName);
}
// Autogenerated method: Mono.Security.X509.X509Store.BuildCrlsCollection
System::Collections::ArrayList* Mono::Security::X509::X509Store::BuildCrlsCollection(::Il2CppString* storeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Store::BuildCrlsCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildCrlsCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(storeName)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::ArrayList*, false>(this, ___internal__method, storeName);
}
// Writing MetadataGetter for method: X509Store::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Store::*)(::Il2CppString*, bool, bool)>(&X509Store::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Store*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Store::*)(::Il2CppString*, bool, bool)>(&X509Store::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Store*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: X509Store::get_Certificates
// Il2CppName: get_Certificates
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::X509::X509CertificateCollection* (X509Store::*)()>(&X509Store::get_Certificates)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Store*), "get_Certificates", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Store::get_Crls
// Il2CppName: get_Crls
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::ArrayList* (X509Store::*)()>(&X509Store::get_Crls)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Store*), "get_Crls", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Store::Load
// Il2CppName: Load
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (X509Store::*)(::Il2CppString*)>(&X509Store::Load)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Store*), "Load", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: X509Store::LoadCertificate
// Il2CppName: LoadCertificate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::X509::X509Certificate* (X509Store::*)(::Il2CppString*)>(&X509Store::LoadCertificate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Store*), "LoadCertificate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: X509Store::LoadCrl
// Il2CppName: LoadCrl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::X509::X509Crl* (X509Store::*)(::Il2CppString*)>(&X509Store::LoadCrl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Store*), "LoadCrl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: X509Store::CheckStore
// Il2CppName: CheckStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (X509Store::*)(::Il2CppString*, bool)>(&X509Store::CheckStore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Store*), "CheckStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: X509Store::BuildCertificatesCollection
// Il2CppName: BuildCertificatesCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::X509::X509CertificateCollection* (X509Store::*)(::Il2CppString*)>(&X509Store::BuildCertificatesCollection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Store*), "BuildCertificatesCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: X509Store::BuildCrlsCollection
// Il2CppName: BuildCrlsCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::ArrayList* (X509Store::*)(::Il2CppString*)>(&X509Store::BuildCrlsCollection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Store*), "BuildCrlsCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.X509.X509StoreManager
#include "Mono/Security/X509/X509StoreManager.hpp"
// Including type: Mono.Security.X509.X509Stores
#include "Mono/Security/X509/X509Stores.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String _userPath
::Il2CppString* Mono::Security::X509::X509StoreManager::_get__userPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509StoreManager::_get__userPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Mono.Security.X509", "X509StoreManager", "_userPath"));
}
// Autogenerated static field setter
// Set static field: static private System.String _userPath
void Mono::Security::X509::X509StoreManager::_set__userPath(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509StoreManager::_set__userPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X509StoreManager", "_userPath", value));
}
// Autogenerated static field getter
// Get static field: static private System.String _localMachinePath
::Il2CppString* Mono::Security::X509::X509StoreManager::_get__localMachinePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509StoreManager::_get__localMachinePath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("Mono.Security.X509", "X509StoreManager", "_localMachinePath"));
}
// Autogenerated static field setter
// Set static field: static private System.String _localMachinePath
void Mono::Security::X509::X509StoreManager::_set__localMachinePath(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509StoreManager::_set__localMachinePath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X509StoreManager", "_localMachinePath", value));
}
// Autogenerated static field getter
// Get static field: static private Mono.Security.X509.X509Stores _userStore
Mono::Security::X509::X509Stores* Mono::Security::X509::X509StoreManager::_get__userStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509StoreManager::_get__userStore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::X509::X509Stores*>("Mono.Security.X509", "X509StoreManager", "_userStore"));
}
// Autogenerated static field setter
// Set static field: static private Mono.Security.X509.X509Stores _userStore
void Mono::Security::X509::X509StoreManager::_set__userStore(Mono::Security::X509::X509Stores* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509StoreManager::_set__userStore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X509StoreManager", "_userStore", value));
}
// Autogenerated static field getter
// Get static field: static private Mono.Security.X509.X509Stores _machineStore
Mono::Security::X509::X509Stores* Mono::Security::X509::X509StoreManager::_get__machineStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509StoreManager::_get__machineStore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::X509::X509Stores*>("Mono.Security.X509", "X509StoreManager", "_machineStore"));
}
// Autogenerated static field setter
// Set static field: static private Mono.Security.X509.X509Stores _machineStore
void Mono::Security::X509::X509StoreManager::_set__machineStore(Mono::Security::X509::X509Stores* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509StoreManager::_set__machineStore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.X509", "X509StoreManager", "_machineStore", value));
}
// Autogenerated method: Mono.Security.X509.X509StoreManager.get_CurrentUserPath
::Il2CppString* Mono::Security::X509::X509StoreManager::get_CurrentUserPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509StoreManager::get_CurrentUserPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.X509", "X509StoreManager", "get_CurrentUserPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509StoreManager.get_LocalMachinePath
::Il2CppString* Mono::Security::X509::X509StoreManager::get_LocalMachinePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509StoreManager::get_LocalMachinePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.X509", "X509StoreManager", "get_LocalMachinePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509StoreManager.get_CurrentUser
Mono::Security::X509::X509Stores* Mono::Security::X509::X509StoreManager::get_CurrentUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509StoreManager::get_CurrentUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.X509", "X509StoreManager", "get_CurrentUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::X509::X509Stores*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.X509.X509StoreManager.get_LocalMachine
Mono::Security::X509::X509Stores* Mono::Security::X509::X509StoreManager::get_LocalMachine() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509StoreManager::get_LocalMachine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.X509", "X509StoreManager", "get_LocalMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::X509::X509Stores*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: X509StoreManager::get_CurrentUserPath
// Il2CppName: get_CurrentUserPath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)()>(&X509StoreManager::get_CurrentUserPath)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509StoreManager*), "get_CurrentUserPath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509StoreManager::get_LocalMachinePath
// Il2CppName: get_LocalMachinePath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)()>(&X509StoreManager::get_LocalMachinePath)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509StoreManager*), "get_LocalMachinePath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509StoreManager::get_CurrentUser
// Il2CppName: get_CurrentUser
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::X509::X509Stores* (*)()>(&X509StoreManager::get_CurrentUser)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509StoreManager*), "get_CurrentUser", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509StoreManager::get_LocalMachine
// Il2CppName: get_LocalMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::X509::X509Stores* (*)()>(&X509StoreManager::get_LocalMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509StoreManager*), "get_LocalMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.X509.X509Stores
#include "Mono/Security/X509/X509Stores.hpp"
// Including type: Mono.Security.X509.X509Store
#include "Mono/Security/X509/X509Store.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.X509.X509Stores.Open
Mono::Security::X509::X509Store* Mono::Security::X509::X509Stores::Open(::Il2CppString* storeName, bool create) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::X509Stores::Open");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Open", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(storeName), ::il2cpp_utils::ExtractType(create)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::X509::X509Store*, false>(this, ___internal__method, storeName, create);
}
// Writing MetadataGetter for method: X509Stores::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Stores::*)(::Il2CppString*, bool)>(&X509Stores::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Stores*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Stores::*)(::Il2CppString*, bool)>(&X509Stores::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Stores*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: X509Stores::Open
// Il2CppName: Open
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::X509::X509Store* (X509Stores::*)(::Il2CppString*, bool)>(&X509Stores::Open)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Stores*), "Open", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.X509.Extensions.AuthorityKeyIdentifierExtension
#include "Mono/Security/X509/Extensions/AuthorityKeyIdentifierExtension.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.X509.Extensions.AuthorityKeyIdentifierExtension.get_Identifier
::Array<uint8_t>* Mono::Security::X509::Extensions::AuthorityKeyIdentifierExtension::get_Identifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::Extensions::AuthorityKeyIdentifierExtension::get_Identifier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Identifier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.Extensions.AuthorityKeyIdentifierExtension.Decode
void Mono::Security::X509::Extensions::AuthorityKeyIdentifierExtension::Decode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::Extensions::AuthorityKeyIdentifierExtension::Decode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.Extensions.AuthorityKeyIdentifierExtension.Encode
void Mono::Security::X509::Extensions::AuthorityKeyIdentifierExtension::Encode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::Extensions::AuthorityKeyIdentifierExtension::Encode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.X509.Extensions.AuthorityKeyIdentifierExtension.ToString
::Il2CppString* Mono::Security::X509::Extensions::AuthorityKeyIdentifierExtension::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::X509::Extensions::AuthorityKeyIdentifierExtension::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: AuthorityKeyIdentifierExtension::get_Identifier
// Il2CppName: get_Identifier
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (AuthorityKeyIdentifierExtension::*)()>(&AuthorityKeyIdentifierExtension::get_Identifier)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AuthorityKeyIdentifierExtension*), "get_Identifier", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AuthorityKeyIdentifierExtension::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AuthorityKeyIdentifierExtension::*)(Mono::Security::X509::X509Extension*)>(&AuthorityKeyIdentifierExtension::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AuthorityKeyIdentifierExtension*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::X509::X509Extension*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AuthorityKeyIdentifierExtension::*)(Mono::Security::X509::X509Extension*)>(&AuthorityKeyIdentifierExtension::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AuthorityKeyIdentifierExtension*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::X509::X509Extension*>()});
  }
};
// Writing MetadataGetter for method: AuthorityKeyIdentifierExtension::Decode
// Il2CppName: Decode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AuthorityKeyIdentifierExtension::*)()>(&AuthorityKeyIdentifierExtension::Decode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AuthorityKeyIdentifierExtension*), "Decode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AuthorityKeyIdentifierExtension::Encode
// Il2CppName: Encode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AuthorityKeyIdentifierExtension::*)()>(&AuthorityKeyIdentifierExtension::Encode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AuthorityKeyIdentifierExtension*), "Encode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AuthorityKeyIdentifierExtension::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (AuthorityKeyIdentifierExtension::*)()>(&AuthorityKeyIdentifierExtension::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AuthorityKeyIdentifierExtension*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Protocol.Ntlm.ChallengeResponse
#include "Mono/Security/Protocol/Ntlm/ChallengeResponse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] magic
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::ChallengeResponse::_get_magic() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::ChallengeResponse::_get_magic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Mono.Security.Protocol.Ntlm", "ChallengeResponse", "magic"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] magic
void Mono::Security::Protocol::Ntlm::ChallengeResponse::_set_magic(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::ChallengeResponse::_set_magic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "ChallengeResponse", "magic", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] nullEncMagic
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::ChallengeResponse::_get_nullEncMagic() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::ChallengeResponse::_get_nullEncMagic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Mono.Security.Protocol.Ntlm", "ChallengeResponse", "nullEncMagic"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] nullEncMagic
void Mono::Security::Protocol::Ntlm::ChallengeResponse::_set_nullEncMagic(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::ChallengeResponse::_set_nullEncMagic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "ChallengeResponse", "nullEncMagic", value));
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse.set_Password
void Mono::Security::Protocol::Ntlm::ChallengeResponse::set_Password(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::ChallengeResponse::set_Password");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Password", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse.set_Challenge
void Mono::Security::Protocol::Ntlm::ChallengeResponse::set_Challenge(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::ChallengeResponse::set_Challenge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Challenge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse.get_LM
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::ChallengeResponse::get_LM() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::ChallengeResponse::get_LM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse.get_NT
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::ChallengeResponse::get_NT() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::ChallengeResponse::get_NT");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NT", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse.Dispose
void Mono::Security::Protocol::Ntlm::ChallengeResponse::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::ChallengeResponse::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse.Dispose
void Mono::Security::Protocol::Ntlm::ChallengeResponse::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::ChallengeResponse::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse.GetResponse
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::ChallengeResponse::GetResponse(::Array<uint8_t>* pwd) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::ChallengeResponse::GetResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pwd)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, pwd);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse.PrepareDESKey
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::ChallengeResponse::PrepareDESKey(::Array<uint8_t>* key56bits, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::ChallengeResponse::PrepareDESKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareDESKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key56bits), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, key56bits, position);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse.PasswordToKey
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::ChallengeResponse::PasswordToKey(::Il2CppString* password, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::ChallengeResponse::PasswordToKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PasswordToKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, password, position);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse..cctor
void Mono::Security::Protocol::Ntlm::ChallengeResponse::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::ChallengeResponse::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "ChallengeResponse", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse.Finalize
void Mono::Security::Protocol::Ntlm::ChallengeResponse::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::ChallengeResponse::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ChallengeResponse::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChallengeResponse::*)(::Il2CppString*, ::Array<uint8_t>*)>(&ChallengeResponse::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeResponse*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChallengeResponse::*)(::Il2CppString*, ::Array<uint8_t>*)>(&ChallengeResponse::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeResponse*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: ChallengeResponse::set_Password
// Il2CppName: set_Password
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChallengeResponse::*)(::Il2CppString*)>(&ChallengeResponse::set_Password)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeResponse*), "set_Password", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: ChallengeResponse::set_Challenge
// Il2CppName: set_Challenge
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChallengeResponse::*)(::Array<uint8_t>*)>(&ChallengeResponse::set_Challenge)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeResponse*), "set_Challenge", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: ChallengeResponse::get_LM
// Il2CppName: get_LM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (ChallengeResponse::*)()>(&ChallengeResponse::get_LM)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeResponse*), "get_LM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ChallengeResponse::get_NT
// Il2CppName: get_NT
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (ChallengeResponse::*)()>(&ChallengeResponse::get_NT)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeResponse*), "get_NT", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ChallengeResponse::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChallengeResponse::*)()>(&ChallengeResponse::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeResponse*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ChallengeResponse::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChallengeResponse::*)(bool)>(&ChallengeResponse::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeResponse*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ChallengeResponse::GetResponse
// Il2CppName: GetResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (ChallengeResponse::*)(::Array<uint8_t>*)>(&ChallengeResponse::GetResponse)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeResponse*), "GetResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: ChallengeResponse::PrepareDESKey
// Il2CppName: PrepareDESKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (ChallengeResponse::*)(::Array<uint8_t>*, int)>(&ChallengeResponse::PrepareDESKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeResponse*), "PrepareDESKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ChallengeResponse::PasswordToKey
// Il2CppName: PasswordToKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (ChallengeResponse::*)(::Il2CppString*, int)>(&ChallengeResponse::PasswordToKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeResponse*), "PasswordToKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ChallengeResponse::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ChallengeResponse::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeResponse*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ChallengeResponse::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChallengeResponse::*)()>(&ChallengeResponse::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeResponse*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChallengeResponse::*)()>(&ChallengeResponse::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeResponse*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ChallengeResponse::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ChallengeResponse::*)()>(&ChallengeResponse::Finalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeResponse*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Protocol.Ntlm.ChallengeResponse2
#include "Mono/Security/Protocol/Ntlm/ChallengeResponse2.hpp"
// Including type: Mono.Security.Protocol.Ntlm.Type2Message
#include "Mono/Security/Protocol/Ntlm/Type2Message.hpp"
// Including type: Mono.Security.Protocol.Ntlm.NtlmAuthLevel
#include "Mono/Security/Protocol/Ntlm/NtlmAuthLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] magic
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::ChallengeResponse2::_get_magic() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::ChallengeResponse2::_get_magic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "magic"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] magic
void Mono::Security::Protocol::Ntlm::ChallengeResponse2::_set_magic(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::ChallengeResponse2::_set_magic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "magic", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] nullEncMagic
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::ChallengeResponse2::_get_nullEncMagic() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::ChallengeResponse2::_get_nullEncMagic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "nullEncMagic"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] nullEncMagic
void Mono::Security::Protocol::Ntlm::ChallengeResponse2::_set_nullEncMagic(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::ChallengeResponse2::_set_nullEncMagic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "nullEncMagic", value));
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse2.Compute_LM
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::ChallengeResponse2::Compute_LM(::Il2CppString* password, ::Array<uint8_t>* challenge) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::ChallengeResponse2::Compute_LM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "Compute_LM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(challenge)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, password, challenge);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse2.Compute_NTLM_Password
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::ChallengeResponse2::Compute_NTLM_Password(::Il2CppString* password) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::ChallengeResponse2::Compute_NTLM_Password");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "Compute_NTLM_Password", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, password);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse2.Compute_NTLM
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::ChallengeResponse2::Compute_NTLM(::Il2CppString* password, ::Array<uint8_t>* challenge) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::ChallengeResponse2::Compute_NTLM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "Compute_NTLM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(challenge)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, password, challenge);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse2.Compute_NTLMv2_Session
void Mono::Security::Protocol::Ntlm::ChallengeResponse2::Compute_NTLMv2_Session(::Il2CppString* password, ::Array<uint8_t>* challenge, ::Array<uint8_t>*& lm, ::Array<uint8_t>*& ntlm) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::ChallengeResponse2::Compute_NTLMv2_Session");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "Compute_NTLMv2_Session", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(challenge), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*&>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, password, challenge, lm, ntlm);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse2.Compute_NTLMv2
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::ChallengeResponse2::Compute_NTLMv2(Mono::Security::Protocol::Ntlm::Type2Message* type2, ::Il2CppString* username, ::Il2CppString* password, ::Il2CppString* domain) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::ChallengeResponse2::Compute_NTLMv2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "Compute_NTLMv2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type2), ::il2cpp_utils::ExtractType(username), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(domain)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type2, username, password, domain);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse2.Compute
void Mono::Security::Protocol::Ntlm::ChallengeResponse2::Compute(Mono::Security::Protocol::Ntlm::Type2Message* type2, Mono::Security::Protocol::Ntlm::NtlmAuthLevel level, ::Il2CppString* username, ::Il2CppString* password, ::Il2CppString* domain, ::Array<uint8_t>*& lm, ::Array<uint8_t>*& ntlm) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::ChallengeResponse2::Compute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "Compute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type2), ::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(username), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(domain), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*&>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type2, level, username, password, domain, lm, ntlm);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse2.GetResponse
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::ChallengeResponse2::GetResponse(::Array<uint8_t>* challenge, ::Array<uint8_t>* pwd) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::ChallengeResponse2::GetResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "GetResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(challenge), ::il2cpp_utils::ExtractType(pwd)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, challenge, pwd);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse2.PrepareDESKey
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::ChallengeResponse2::PrepareDESKey(::Array<uint8_t>* key56bits, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::ChallengeResponse2::PrepareDESKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "PrepareDESKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key56bits), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, key56bits, position);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse2.PasswordToKey
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::ChallengeResponse2::PasswordToKey(::Il2CppString* password, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::ChallengeResponse2::PasswordToKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", "PasswordToKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, password, position);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.ChallengeResponse2..cctor
void Mono::Security::Protocol::Ntlm::ChallengeResponse2::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::ChallengeResponse2::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "ChallengeResponse2", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: ChallengeResponse2::Compute_LM
// Il2CppName: Compute_LM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(::Il2CppString*, ::Array<uint8_t>*)>(&ChallengeResponse2::Compute_LM)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeResponse2*), "Compute_LM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: ChallengeResponse2::Compute_NTLM_Password
// Il2CppName: Compute_NTLM_Password
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(::Il2CppString*)>(&ChallengeResponse2::Compute_NTLM_Password)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeResponse2*), "Compute_NTLM_Password", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: ChallengeResponse2::Compute_NTLM
// Il2CppName: Compute_NTLM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(::Il2CppString*, ::Array<uint8_t>*)>(&ChallengeResponse2::Compute_NTLM)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeResponse2*), "Compute_NTLM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: ChallengeResponse2::Compute_NTLMv2_Session
// Il2CppName: Compute_NTLMv2_Session
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, ::Array<uint8_t>*, ::Array<uint8_t>*&, ::Array<uint8_t>*&)>(&ChallengeResponse2::Compute_NTLMv2_Session)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeResponse2*), "Compute_NTLMv2_Session", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*&>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*&>()});
  }
};
// Writing MetadataGetter for method: ChallengeResponse2::Compute_NTLMv2
// Il2CppName: Compute_NTLMv2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(Mono::Security::Protocol::Ntlm::Type2Message*, ::Il2CppString*, ::Il2CppString*, ::Il2CppString*)>(&ChallengeResponse2::Compute_NTLMv2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeResponse2*), "Compute_NTLMv2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::Protocol::Ntlm::Type2Message*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: ChallengeResponse2::Compute
// Il2CppName: Compute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(Mono::Security::Protocol::Ntlm::Type2Message*, Mono::Security::Protocol::Ntlm::NtlmAuthLevel, ::Il2CppString*, ::Il2CppString*, ::Il2CppString*, ::Array<uint8_t>*&, ::Array<uint8_t>*&)>(&ChallengeResponse2::Compute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeResponse2*), "Compute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::Protocol::Ntlm::Type2Message*>(), ::il2cpp_utils::ExtractIndependentType<Mono::Security::Protocol::Ntlm::NtlmAuthLevel>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*&>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*&>()});
  }
};
// Writing MetadataGetter for method: ChallengeResponse2::GetResponse
// Il2CppName: GetResponse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(::Array<uint8_t>*, ::Array<uint8_t>*)>(&ChallengeResponse2::GetResponse)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeResponse2*), "GetResponse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: ChallengeResponse2::PrepareDESKey
// Il2CppName: PrepareDESKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(::Array<uint8_t>*, int)>(&ChallengeResponse2::PrepareDESKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeResponse2*), "PrepareDESKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ChallengeResponse2::PasswordToKey
// Il2CppName: PasswordToKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(::Il2CppString*, int)>(&ChallengeResponse2::PasswordToKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeResponse2*), "PasswordToKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ChallengeResponse2::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ChallengeResponse2::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ChallengeResponse2*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Protocol.Ntlm.MessageBase
#include "Mono/Security/Protocol/Ntlm/MessageBase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] header
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::MessageBase::_get_header() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::MessageBase::_get_header");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Mono.Security.Protocol.Ntlm", "MessageBase", "header"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] header
void Mono::Security::Protocol::Ntlm::MessageBase::_set_header(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::MessageBase::_set_header");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "MessageBase", "header", value));
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.MessageBase.get_Flags
Mono::Security::Protocol::Ntlm::NtlmFlags Mono::Security::Protocol::Ntlm::MessageBase::get_Flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::MessageBase::get_Flags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Flags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Protocol::Ntlm::NtlmFlags, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.MessageBase.set_Flags
void Mono::Security::Protocol::Ntlm::MessageBase::set_Flags(Mono::Security::Protocol::Ntlm::NtlmFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::MessageBase::set_Flags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Flags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.MessageBase.get_Type
int Mono::Security::Protocol::Ntlm::MessageBase::get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::MessageBase::get_Type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.MessageBase.PrepareMessage
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::MessageBase::PrepareMessage(int messageSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::MessageBase::PrepareMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PrepareMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(messageSize)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, messageSize);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.MessageBase.Decode
void Mono::Security::Protocol::Ntlm::MessageBase::Decode(::Array<uint8_t>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::MessageBase::Decode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.MessageBase.CheckHeader
bool Mono::Security::Protocol::Ntlm::MessageBase::CheckHeader(::Array<uint8_t>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::MessageBase::CheckHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, message);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.MessageBase.GetBytes
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::MessageBase::GetBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::MessageBase::GetBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.MessageBase..cctor
void Mono::Security::Protocol::Ntlm::MessageBase::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::MessageBase::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "MessageBase", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: MessageBase::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageBase::*)(int)>(&MessageBase::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageBase*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageBase::*)(int)>(&MessageBase::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageBase*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MessageBase::get_Flags
// Il2CppName: get_Flags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::Protocol::Ntlm::NtlmFlags (MessageBase::*)()>(&MessageBase::get_Flags)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageBase*), "get_Flags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MessageBase::set_Flags
// Il2CppName: set_Flags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageBase::*)(Mono::Security::Protocol::Ntlm::NtlmFlags)>(&MessageBase::set_Flags)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageBase*), "set_Flags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::Protocol::Ntlm::NtlmFlags>()});
  }
};
// Writing MetadataGetter for method: MessageBase::get_Type
// Il2CppName: get_Type
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MessageBase::*)()>(&MessageBase::get_Type)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageBase*), "get_Type", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MessageBase::PrepareMessage
// Il2CppName: PrepareMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (MessageBase::*)(int)>(&MessageBase::PrepareMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageBase*), "PrepareMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MessageBase::Decode
// Il2CppName: Decode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageBase::*)(::Array<uint8_t>*)>(&MessageBase::Decode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageBase*), "Decode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: MessageBase::CheckHeader
// Il2CppName: CheckHeader
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MessageBase::*)(::Array<uint8_t>*)>(&MessageBase::CheckHeader)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageBase*), "CheckHeader", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: MessageBase::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (MessageBase::*)()>(&MessageBase::GetBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageBase*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MessageBase::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&MessageBase::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageBase*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Ntlm.NtlmAuthLevel
#include "Mono/Security/Protocol/Ntlm/NtlmAuthLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Ntlm.NtlmAuthLevel LM_and_NTLM
Mono::Security::Protocol::Ntlm::NtlmAuthLevel Mono::Security::Protocol::Ntlm::NtlmAuthLevel::_get_LM_and_NTLM() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::NtlmAuthLevel::_get_LM_and_NTLM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Protocol::Ntlm::NtlmAuthLevel>("Mono.Security.Protocol.Ntlm", "NtlmAuthLevel", "LM_and_NTLM"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Ntlm.NtlmAuthLevel LM_and_NTLM
void Mono::Security::Protocol::Ntlm::NtlmAuthLevel::_set_LM_and_NTLM(Mono::Security::Protocol::Ntlm::NtlmAuthLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::NtlmAuthLevel::_set_LM_and_NTLM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "NtlmAuthLevel", "LM_and_NTLM", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Ntlm.NtlmAuthLevel LM_and_NTLM_and_try_NTLMv2_Session
Mono::Security::Protocol::Ntlm::NtlmAuthLevel Mono::Security::Protocol::Ntlm::NtlmAuthLevel::_get_LM_and_NTLM_and_try_NTLMv2_Session() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::NtlmAuthLevel::_get_LM_and_NTLM_and_try_NTLMv2_Session");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Protocol::Ntlm::NtlmAuthLevel>("Mono.Security.Protocol.Ntlm", "NtlmAuthLevel", "LM_and_NTLM_and_try_NTLMv2_Session"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Ntlm.NtlmAuthLevel LM_and_NTLM_and_try_NTLMv2_Session
void Mono::Security::Protocol::Ntlm::NtlmAuthLevel::_set_LM_and_NTLM_and_try_NTLMv2_Session(Mono::Security::Protocol::Ntlm::NtlmAuthLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::NtlmAuthLevel::_set_LM_and_NTLM_and_try_NTLMv2_Session");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "NtlmAuthLevel", "LM_and_NTLM_and_try_NTLMv2_Session", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Ntlm.NtlmAuthLevel NTLM_only
Mono::Security::Protocol::Ntlm::NtlmAuthLevel Mono::Security::Protocol::Ntlm::NtlmAuthLevel::_get_NTLM_only() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::NtlmAuthLevel::_get_NTLM_only");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Protocol::Ntlm::NtlmAuthLevel>("Mono.Security.Protocol.Ntlm", "NtlmAuthLevel", "NTLM_only"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Ntlm.NtlmAuthLevel NTLM_only
void Mono::Security::Protocol::Ntlm::NtlmAuthLevel::_set_NTLM_only(Mono::Security::Protocol::Ntlm::NtlmAuthLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::NtlmAuthLevel::_set_NTLM_only");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "NtlmAuthLevel", "NTLM_only", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Ntlm.NtlmAuthLevel NTLMv2_only
Mono::Security::Protocol::Ntlm::NtlmAuthLevel Mono::Security::Protocol::Ntlm::NtlmAuthLevel::_get_NTLMv2_only() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::NtlmAuthLevel::_get_NTLMv2_only");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Protocol::Ntlm::NtlmAuthLevel>("Mono.Security.Protocol.Ntlm", "NtlmAuthLevel", "NTLMv2_only"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Ntlm.NtlmAuthLevel NTLMv2_only
void Mono::Security::Protocol::Ntlm::NtlmAuthLevel::_set_NTLMv2_only(Mono::Security::Protocol::Ntlm::NtlmAuthLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::NtlmAuthLevel::_set_NTLMv2_only");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "NtlmAuthLevel", "NTLMv2_only", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Ntlm.NtlmFlags
#include "Mono/Security/Protocol/Ntlm/NtlmFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags NegotiateUnicode
Mono::Security::Protocol::Ntlm::NtlmFlags Mono::Security::Protocol::Ntlm::NtlmFlags::_get_NegotiateUnicode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::NtlmFlags::_get_NegotiateUnicode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Protocol::Ntlm::NtlmFlags>("Mono.Security.Protocol.Ntlm", "NtlmFlags", "NegotiateUnicode"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags NegotiateUnicode
void Mono::Security::Protocol::Ntlm::NtlmFlags::_set_NegotiateUnicode(Mono::Security::Protocol::Ntlm::NtlmFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::NtlmFlags::_set_NegotiateUnicode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "NtlmFlags", "NegotiateUnicode", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags NegotiateOem
Mono::Security::Protocol::Ntlm::NtlmFlags Mono::Security::Protocol::Ntlm::NtlmFlags::_get_NegotiateOem() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::NtlmFlags::_get_NegotiateOem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Protocol::Ntlm::NtlmFlags>("Mono.Security.Protocol.Ntlm", "NtlmFlags", "NegotiateOem"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags NegotiateOem
void Mono::Security::Protocol::Ntlm::NtlmFlags::_set_NegotiateOem(Mono::Security::Protocol::Ntlm::NtlmFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::NtlmFlags::_set_NegotiateOem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "NtlmFlags", "NegotiateOem", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags RequestTarget
Mono::Security::Protocol::Ntlm::NtlmFlags Mono::Security::Protocol::Ntlm::NtlmFlags::_get_RequestTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::NtlmFlags::_get_RequestTarget");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Protocol::Ntlm::NtlmFlags>("Mono.Security.Protocol.Ntlm", "NtlmFlags", "RequestTarget"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags RequestTarget
void Mono::Security::Protocol::Ntlm::NtlmFlags::_set_RequestTarget(Mono::Security::Protocol::Ntlm::NtlmFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::NtlmFlags::_set_RequestTarget");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "NtlmFlags", "RequestTarget", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags NegotiateNtlm
Mono::Security::Protocol::Ntlm::NtlmFlags Mono::Security::Protocol::Ntlm::NtlmFlags::_get_NegotiateNtlm() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::NtlmFlags::_get_NegotiateNtlm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Protocol::Ntlm::NtlmFlags>("Mono.Security.Protocol.Ntlm", "NtlmFlags", "NegotiateNtlm"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags NegotiateNtlm
void Mono::Security::Protocol::Ntlm::NtlmFlags::_set_NegotiateNtlm(Mono::Security::Protocol::Ntlm::NtlmFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::NtlmFlags::_set_NegotiateNtlm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "NtlmFlags", "NegotiateNtlm", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags NegotiateDomainSupplied
Mono::Security::Protocol::Ntlm::NtlmFlags Mono::Security::Protocol::Ntlm::NtlmFlags::_get_NegotiateDomainSupplied() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::NtlmFlags::_get_NegotiateDomainSupplied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Protocol::Ntlm::NtlmFlags>("Mono.Security.Protocol.Ntlm", "NtlmFlags", "NegotiateDomainSupplied"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags NegotiateDomainSupplied
void Mono::Security::Protocol::Ntlm::NtlmFlags::_set_NegotiateDomainSupplied(Mono::Security::Protocol::Ntlm::NtlmFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::NtlmFlags::_set_NegotiateDomainSupplied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "NtlmFlags", "NegotiateDomainSupplied", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags NegotiateWorkstationSupplied
Mono::Security::Protocol::Ntlm::NtlmFlags Mono::Security::Protocol::Ntlm::NtlmFlags::_get_NegotiateWorkstationSupplied() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::NtlmFlags::_get_NegotiateWorkstationSupplied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Protocol::Ntlm::NtlmFlags>("Mono.Security.Protocol.Ntlm", "NtlmFlags", "NegotiateWorkstationSupplied"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags NegotiateWorkstationSupplied
void Mono::Security::Protocol::Ntlm::NtlmFlags::_set_NegotiateWorkstationSupplied(Mono::Security::Protocol::Ntlm::NtlmFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::NtlmFlags::_set_NegotiateWorkstationSupplied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "NtlmFlags", "NegotiateWorkstationSupplied", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags NegotiateAlwaysSign
Mono::Security::Protocol::Ntlm::NtlmFlags Mono::Security::Protocol::Ntlm::NtlmFlags::_get_NegotiateAlwaysSign() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::NtlmFlags::_get_NegotiateAlwaysSign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Protocol::Ntlm::NtlmFlags>("Mono.Security.Protocol.Ntlm", "NtlmFlags", "NegotiateAlwaysSign"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags NegotiateAlwaysSign
void Mono::Security::Protocol::Ntlm::NtlmFlags::_set_NegotiateAlwaysSign(Mono::Security::Protocol::Ntlm::NtlmFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::NtlmFlags::_set_NegotiateAlwaysSign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "NtlmFlags", "NegotiateAlwaysSign", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags NegotiateNtlm2Key
Mono::Security::Protocol::Ntlm::NtlmFlags Mono::Security::Protocol::Ntlm::NtlmFlags::_get_NegotiateNtlm2Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::NtlmFlags::_get_NegotiateNtlm2Key");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Protocol::Ntlm::NtlmFlags>("Mono.Security.Protocol.Ntlm", "NtlmFlags", "NegotiateNtlm2Key"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags NegotiateNtlm2Key
void Mono::Security::Protocol::Ntlm::NtlmFlags::_set_NegotiateNtlm2Key(Mono::Security::Protocol::Ntlm::NtlmFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::NtlmFlags::_set_NegotiateNtlm2Key");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "NtlmFlags", "NegotiateNtlm2Key", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags Negotiate128
Mono::Security::Protocol::Ntlm::NtlmFlags Mono::Security::Protocol::Ntlm::NtlmFlags::_get_Negotiate128() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::NtlmFlags::_get_Negotiate128");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Protocol::Ntlm::NtlmFlags>("Mono.Security.Protocol.Ntlm", "NtlmFlags", "Negotiate128"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags Negotiate128
void Mono::Security::Protocol::Ntlm::NtlmFlags::_set_Negotiate128(Mono::Security::Protocol::Ntlm::NtlmFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::NtlmFlags::_set_Negotiate128");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "NtlmFlags", "Negotiate128", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags Negotiate56
Mono::Security::Protocol::Ntlm::NtlmFlags Mono::Security::Protocol::Ntlm::NtlmFlags::_get_Negotiate56() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::NtlmFlags::_get_Negotiate56");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Protocol::Ntlm::NtlmFlags>("Mono.Security.Protocol.Ntlm", "NtlmFlags", "Negotiate56"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Protocol.Ntlm.NtlmFlags Negotiate56
void Mono::Security::Protocol::Ntlm::NtlmFlags::_set_Negotiate56(Mono::Security::Protocol::Ntlm::NtlmFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::NtlmFlags::_set_Negotiate56");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "NtlmFlags", "Negotiate56", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Protocol.Ntlm.NtlmSettings
#include "Mono/Security/Protocol/Ntlm/NtlmSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Mono.Security.Protocol.Ntlm.NtlmAuthLevel defaultAuthLevel
Mono::Security::Protocol::Ntlm::NtlmAuthLevel Mono::Security::Protocol::Ntlm::NtlmSettings::_get_defaultAuthLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::NtlmSettings::_get_defaultAuthLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Protocol::Ntlm::NtlmAuthLevel>("Mono.Security.Protocol.Ntlm", "NtlmSettings", "defaultAuthLevel"));
}
// Autogenerated static field setter
// Set static field: static private Mono.Security.Protocol.Ntlm.NtlmAuthLevel defaultAuthLevel
void Mono::Security::Protocol::Ntlm::NtlmSettings::_set_defaultAuthLevel(Mono::Security::Protocol::Ntlm::NtlmAuthLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::NtlmSettings::_set_defaultAuthLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Protocol.Ntlm", "NtlmSettings", "defaultAuthLevel", value));
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.NtlmSettings.get_DefaultAuthLevel
Mono::Security::Protocol::Ntlm::NtlmAuthLevel Mono::Security::Protocol::Ntlm::NtlmSettings::get_DefaultAuthLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::NtlmSettings::get_DefaultAuthLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "NtlmSettings", "get_DefaultAuthLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Protocol::Ntlm::NtlmAuthLevel, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.NtlmSettings..cctor
void Mono::Security::Protocol::Ntlm::NtlmSettings::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::NtlmSettings::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Protocol.Ntlm", "NtlmSettings", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: NtlmSettings::get_DefaultAuthLevel
// Il2CppName: get_DefaultAuthLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::Protocol::Ntlm::NtlmAuthLevel (*)()>(&NtlmSettings::get_DefaultAuthLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NtlmSettings*), "get_DefaultAuthLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NtlmSettings::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&NtlmSettings::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NtlmSettings*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Protocol.Ntlm.Type1Message
#include "Mono/Security/Protocol/Ntlm/Type1Message.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type1Message.set_Domain
void Mono::Security::Protocol::Ntlm::Type1Message::set_Domain(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::Type1Message::set_Domain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Domain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type1Message.set_Host
void Mono::Security::Protocol::Ntlm::Type1Message::set_Host(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::Type1Message::set_Host");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Host", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type1Message.Decode
void Mono::Security::Protocol::Ntlm::Type1Message::Decode(::Array<uint8_t>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::Type1Message::Decode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type1Message.GetBytes
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::Type1Message::GetBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::Type1Message::GetBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Type1Message::set_Domain
// Il2CppName: set_Domain
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Type1Message::*)(::Il2CppString*)>(&Type1Message::set_Domain)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Type1Message*), "set_Domain", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Type1Message::set_Host
// Il2CppName: set_Host
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Type1Message::*)(::Il2CppString*)>(&Type1Message::set_Host)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Type1Message*), "set_Host", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Type1Message::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Type1Message::*)()>(&Type1Message::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Type1Message*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Type1Message::*)()>(&Type1Message::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Type1Message*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Type1Message::Decode
// Il2CppName: Decode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Type1Message::*)(::Array<uint8_t>*)>(&Type1Message::Decode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Type1Message*), "Decode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Type1Message::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (Type1Message::*)()>(&Type1Message::GetBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Type1Message*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Protocol.Ntlm.Type2Message
#include "Mono/Security/Protocol/Ntlm/Type2Message.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type2Message.get_Nonce
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::Type2Message::get_Nonce() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::Type2Message::get_Nonce");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Nonce", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type2Message.get_TargetName
::Il2CppString* Mono::Security::Protocol::Ntlm::Type2Message::get_TargetName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::Type2Message::get_TargetName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type2Message.get_TargetInfo
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::Type2Message::get_TargetInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::Type2Message::get_TargetInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type2Message.Finalize
void Mono::Security::Protocol::Ntlm::Type2Message::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::Type2Message::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type2Message.Decode
void Mono::Security::Protocol::Ntlm::Type2Message::Decode(::Array<uint8_t>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::Type2Message::Decode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type2Message.GetBytes
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::Type2Message::GetBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::Type2Message::GetBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Type2Message::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Type2Message::*)(::Array<uint8_t>*)>(&Type2Message::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Type2Message*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Type2Message::*)(::Array<uint8_t>*)>(&Type2Message::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Type2Message*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Type2Message::get_Nonce
// Il2CppName: get_Nonce
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (Type2Message::*)()>(&Type2Message::get_Nonce)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Type2Message*), "get_Nonce", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Type2Message::get_TargetName
// Il2CppName: get_TargetName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Type2Message::*)()>(&Type2Message::get_TargetName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Type2Message*), "get_TargetName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Type2Message::get_TargetInfo
// Il2CppName: get_TargetInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (Type2Message::*)()>(&Type2Message::get_TargetInfo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Type2Message*), "get_TargetInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Type2Message::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Type2Message::*)()>(&Type2Message::Finalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Type2Message*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Type2Message::Decode
// Il2CppName: Decode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Type2Message::*)(::Array<uint8_t>*)>(&Type2Message::Decode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Type2Message*), "Decode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Type2Message::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (Type2Message::*)()>(&Type2Message::GetBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Type2Message*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Protocol.Ntlm.Type3Message
#include "Mono/Security/Protocol/Ntlm/Type3Message.hpp"
// Including type: Mono.Security.Protocol.Ntlm.Type2Message
#include "Mono/Security/Protocol/Ntlm/Type2Message.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type3Message.set_Domain
void Mono::Security::Protocol::Ntlm::Type3Message::set_Domain(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::Type3Message::set_Domain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Domain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type3Message.set_Password
void Mono::Security::Protocol::Ntlm::Type3Message::set_Password(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::Type3Message::set_Password");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Password", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type3Message.set_Username
void Mono::Security::Protocol::Ntlm::Type3Message::set_Username(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::Type3Message::set_Username");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Username", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type3Message.DecodeString
::Il2CppString* Mono::Security::Protocol::Ntlm::Type3Message::DecodeString(::Array<uint8_t>* buffer, int offset, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::Type3Message::DecodeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(len)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, buffer, offset, len);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type3Message.EncodeString
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::Type3Message::EncodeString(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::Type3Message::EncodeString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EncodeString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, text);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type3Message.Finalize
void Mono::Security::Protocol::Ntlm::Type3Message::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::Type3Message::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type3Message.Decode
void Mono::Security::Protocol::Ntlm::Type3Message::Decode(::Array<uint8_t>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::Type3Message::Decode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: Mono.Security.Protocol.Ntlm.Type3Message.GetBytes
::Array<uint8_t>* Mono::Security::Protocol::Ntlm::Type3Message::GetBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Protocol::Ntlm::Type3Message::GetBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Type3Message::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Type3Message::*)(Mono::Security::Protocol::Ntlm::Type2Message*)>(&Type3Message::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Type3Message*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::Protocol::Ntlm::Type2Message*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Type3Message::*)(Mono::Security::Protocol::Ntlm::Type2Message*)>(&Type3Message::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Type3Message*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::Protocol::Ntlm::Type2Message*>()});
  }
};
// Writing MetadataGetter for method: Type3Message::set_Domain
// Il2CppName: set_Domain
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Type3Message::*)(::Il2CppString*)>(&Type3Message::set_Domain)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Type3Message*), "set_Domain", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Type3Message::set_Password
// Il2CppName: set_Password
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Type3Message::*)(::Il2CppString*)>(&Type3Message::set_Password)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Type3Message*), "set_Password", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Type3Message::set_Username
// Il2CppName: set_Username
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Type3Message::*)(::Il2CppString*)>(&Type3Message::set_Username)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Type3Message*), "set_Username", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Type3Message::DecodeString
// Il2CppName: DecodeString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Type3Message::*)(::Array<uint8_t>*, int, int)>(&Type3Message::DecodeString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Type3Message*), "DecodeString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Type3Message::EncodeString
// Il2CppName: EncodeString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (Type3Message::*)(::Il2CppString*)>(&Type3Message::EncodeString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Type3Message*), "EncodeString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Type3Message::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Type3Message::*)()>(&Type3Message::Finalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Type3Message*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Type3Message::Decode
// Il2CppName: Decode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Type3Message::*)(::Array<uint8_t>*)>(&Type3Message::Decode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Type3Message*), "Decode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Type3Message::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (Type3Message::*)()>(&Type3Message::GetBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Type3Message*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Interface.AlertLevel
#include "Mono/Security/Interface/AlertLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.AlertLevel Warning
Mono::Security::Interface::AlertLevel Mono::Security::Interface::AlertLevel::_get_Warning() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertLevel::_get_Warning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::AlertLevel>("Mono.Security.Interface", "AlertLevel", "Warning"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.AlertLevel Warning
void Mono::Security::Interface::AlertLevel::_set_Warning(Mono::Security::Interface::AlertLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertLevel::_set_Warning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "AlertLevel", "Warning", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.AlertLevel Fatal
Mono::Security::Interface::AlertLevel Mono::Security::Interface::AlertLevel::_get_Fatal() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertLevel::_get_Fatal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::AlertLevel>("Mono.Security.Interface", "AlertLevel", "Fatal"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.AlertLevel Fatal
void Mono::Security::Interface::AlertLevel::_set_Fatal(Mono::Security::Interface::AlertLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertLevel::_set_Fatal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "AlertLevel", "Fatal", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Interface.AlertDescription
#include "Mono/Security/Interface/AlertDescription.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.AlertDescription CloseNotify
Mono::Security::Interface::AlertDescription Mono::Security::Interface::AlertDescription::_get_CloseNotify() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_get_CloseNotify");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::AlertDescription>("Mono.Security.Interface", "AlertDescription", "CloseNotify"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.AlertDescription CloseNotify
void Mono::Security::Interface::AlertDescription::_set_CloseNotify(Mono::Security::Interface::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_set_CloseNotify");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "AlertDescription", "CloseNotify", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.AlertDescription UnexpectedMessage
Mono::Security::Interface::AlertDescription Mono::Security::Interface::AlertDescription::_get_UnexpectedMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_get_UnexpectedMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::AlertDescription>("Mono.Security.Interface", "AlertDescription", "UnexpectedMessage"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.AlertDescription UnexpectedMessage
void Mono::Security::Interface::AlertDescription::_set_UnexpectedMessage(Mono::Security::Interface::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_set_UnexpectedMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "AlertDescription", "UnexpectedMessage", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.AlertDescription BadRecordMAC
Mono::Security::Interface::AlertDescription Mono::Security::Interface::AlertDescription::_get_BadRecordMAC() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_get_BadRecordMAC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::AlertDescription>("Mono.Security.Interface", "AlertDescription", "BadRecordMAC"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.AlertDescription BadRecordMAC
void Mono::Security::Interface::AlertDescription::_set_BadRecordMAC(Mono::Security::Interface::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_set_BadRecordMAC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "AlertDescription", "BadRecordMAC", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.AlertDescription DecryptionFailed_RESERVED
Mono::Security::Interface::AlertDescription Mono::Security::Interface::AlertDescription::_get_DecryptionFailed_RESERVED() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_get_DecryptionFailed_RESERVED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::AlertDescription>("Mono.Security.Interface", "AlertDescription", "DecryptionFailed_RESERVED"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.AlertDescription DecryptionFailed_RESERVED
void Mono::Security::Interface::AlertDescription::_set_DecryptionFailed_RESERVED(Mono::Security::Interface::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_set_DecryptionFailed_RESERVED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "AlertDescription", "DecryptionFailed_RESERVED", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.AlertDescription RecordOverflow
Mono::Security::Interface::AlertDescription Mono::Security::Interface::AlertDescription::_get_RecordOverflow() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_get_RecordOverflow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::AlertDescription>("Mono.Security.Interface", "AlertDescription", "RecordOverflow"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.AlertDescription RecordOverflow
void Mono::Security::Interface::AlertDescription::_set_RecordOverflow(Mono::Security::Interface::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_set_RecordOverflow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "AlertDescription", "RecordOverflow", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.AlertDescription DecompressionFailure
Mono::Security::Interface::AlertDescription Mono::Security::Interface::AlertDescription::_get_DecompressionFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_get_DecompressionFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::AlertDescription>("Mono.Security.Interface", "AlertDescription", "DecompressionFailure"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.AlertDescription DecompressionFailure
void Mono::Security::Interface::AlertDescription::_set_DecompressionFailure(Mono::Security::Interface::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_set_DecompressionFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "AlertDescription", "DecompressionFailure", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.AlertDescription HandshakeFailure
Mono::Security::Interface::AlertDescription Mono::Security::Interface::AlertDescription::_get_HandshakeFailure() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_get_HandshakeFailure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::AlertDescription>("Mono.Security.Interface", "AlertDescription", "HandshakeFailure"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.AlertDescription HandshakeFailure
void Mono::Security::Interface::AlertDescription::_set_HandshakeFailure(Mono::Security::Interface::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_set_HandshakeFailure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "AlertDescription", "HandshakeFailure", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.AlertDescription NoCertificate_RESERVED
Mono::Security::Interface::AlertDescription Mono::Security::Interface::AlertDescription::_get_NoCertificate_RESERVED() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_get_NoCertificate_RESERVED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::AlertDescription>("Mono.Security.Interface", "AlertDescription", "NoCertificate_RESERVED"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.AlertDescription NoCertificate_RESERVED
void Mono::Security::Interface::AlertDescription::_set_NoCertificate_RESERVED(Mono::Security::Interface::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_set_NoCertificate_RESERVED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "AlertDescription", "NoCertificate_RESERVED", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.AlertDescription BadCertificate
Mono::Security::Interface::AlertDescription Mono::Security::Interface::AlertDescription::_get_BadCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_get_BadCertificate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::AlertDescription>("Mono.Security.Interface", "AlertDescription", "BadCertificate"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.AlertDescription BadCertificate
void Mono::Security::Interface::AlertDescription::_set_BadCertificate(Mono::Security::Interface::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_set_BadCertificate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "AlertDescription", "BadCertificate", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.AlertDescription UnsupportedCertificate
Mono::Security::Interface::AlertDescription Mono::Security::Interface::AlertDescription::_get_UnsupportedCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_get_UnsupportedCertificate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::AlertDescription>("Mono.Security.Interface", "AlertDescription", "UnsupportedCertificate"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.AlertDescription UnsupportedCertificate
void Mono::Security::Interface::AlertDescription::_set_UnsupportedCertificate(Mono::Security::Interface::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_set_UnsupportedCertificate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "AlertDescription", "UnsupportedCertificate", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.AlertDescription CertificateRevoked
Mono::Security::Interface::AlertDescription Mono::Security::Interface::AlertDescription::_get_CertificateRevoked() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_get_CertificateRevoked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::AlertDescription>("Mono.Security.Interface", "AlertDescription", "CertificateRevoked"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.AlertDescription CertificateRevoked
void Mono::Security::Interface::AlertDescription::_set_CertificateRevoked(Mono::Security::Interface::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_set_CertificateRevoked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "AlertDescription", "CertificateRevoked", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.AlertDescription CertificateExpired
Mono::Security::Interface::AlertDescription Mono::Security::Interface::AlertDescription::_get_CertificateExpired() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_get_CertificateExpired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::AlertDescription>("Mono.Security.Interface", "AlertDescription", "CertificateExpired"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.AlertDescription CertificateExpired
void Mono::Security::Interface::AlertDescription::_set_CertificateExpired(Mono::Security::Interface::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_set_CertificateExpired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "AlertDescription", "CertificateExpired", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.AlertDescription CertificateUnknown
Mono::Security::Interface::AlertDescription Mono::Security::Interface::AlertDescription::_get_CertificateUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_get_CertificateUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::AlertDescription>("Mono.Security.Interface", "AlertDescription", "CertificateUnknown"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.AlertDescription CertificateUnknown
void Mono::Security::Interface::AlertDescription::_set_CertificateUnknown(Mono::Security::Interface::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_set_CertificateUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "AlertDescription", "CertificateUnknown", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.AlertDescription IlegalParameter
Mono::Security::Interface::AlertDescription Mono::Security::Interface::AlertDescription::_get_IlegalParameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_get_IlegalParameter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::AlertDescription>("Mono.Security.Interface", "AlertDescription", "IlegalParameter"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.AlertDescription IlegalParameter
void Mono::Security::Interface::AlertDescription::_set_IlegalParameter(Mono::Security::Interface::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_set_IlegalParameter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "AlertDescription", "IlegalParameter", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.AlertDescription UnknownCA
Mono::Security::Interface::AlertDescription Mono::Security::Interface::AlertDescription::_get_UnknownCA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_get_UnknownCA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::AlertDescription>("Mono.Security.Interface", "AlertDescription", "UnknownCA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.AlertDescription UnknownCA
void Mono::Security::Interface::AlertDescription::_set_UnknownCA(Mono::Security::Interface::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_set_UnknownCA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "AlertDescription", "UnknownCA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.AlertDescription AccessDenied
Mono::Security::Interface::AlertDescription Mono::Security::Interface::AlertDescription::_get_AccessDenied() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_get_AccessDenied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::AlertDescription>("Mono.Security.Interface", "AlertDescription", "AccessDenied"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.AlertDescription AccessDenied
void Mono::Security::Interface::AlertDescription::_set_AccessDenied(Mono::Security::Interface::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_set_AccessDenied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "AlertDescription", "AccessDenied", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.AlertDescription DecodeError
Mono::Security::Interface::AlertDescription Mono::Security::Interface::AlertDescription::_get_DecodeError() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_get_DecodeError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::AlertDescription>("Mono.Security.Interface", "AlertDescription", "DecodeError"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.AlertDescription DecodeError
void Mono::Security::Interface::AlertDescription::_set_DecodeError(Mono::Security::Interface::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_set_DecodeError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "AlertDescription", "DecodeError", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.AlertDescription DecryptError
Mono::Security::Interface::AlertDescription Mono::Security::Interface::AlertDescription::_get_DecryptError() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_get_DecryptError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::AlertDescription>("Mono.Security.Interface", "AlertDescription", "DecryptError"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.AlertDescription DecryptError
void Mono::Security::Interface::AlertDescription::_set_DecryptError(Mono::Security::Interface::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_set_DecryptError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "AlertDescription", "DecryptError", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.AlertDescription ExportRestriction
Mono::Security::Interface::AlertDescription Mono::Security::Interface::AlertDescription::_get_ExportRestriction() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_get_ExportRestriction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::AlertDescription>("Mono.Security.Interface", "AlertDescription", "ExportRestriction"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.AlertDescription ExportRestriction
void Mono::Security::Interface::AlertDescription::_set_ExportRestriction(Mono::Security::Interface::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_set_ExportRestriction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "AlertDescription", "ExportRestriction", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.AlertDescription ProtocolVersion
Mono::Security::Interface::AlertDescription Mono::Security::Interface::AlertDescription::_get_ProtocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_get_ProtocolVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::AlertDescription>("Mono.Security.Interface", "AlertDescription", "ProtocolVersion"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.AlertDescription ProtocolVersion
void Mono::Security::Interface::AlertDescription::_set_ProtocolVersion(Mono::Security::Interface::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_set_ProtocolVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "AlertDescription", "ProtocolVersion", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.AlertDescription InsuficientSecurity
Mono::Security::Interface::AlertDescription Mono::Security::Interface::AlertDescription::_get_InsuficientSecurity() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_get_InsuficientSecurity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::AlertDescription>("Mono.Security.Interface", "AlertDescription", "InsuficientSecurity"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.AlertDescription InsuficientSecurity
void Mono::Security::Interface::AlertDescription::_set_InsuficientSecurity(Mono::Security::Interface::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_set_InsuficientSecurity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "AlertDescription", "InsuficientSecurity", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.AlertDescription InternalError
Mono::Security::Interface::AlertDescription Mono::Security::Interface::AlertDescription::_get_InternalError() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_get_InternalError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::AlertDescription>("Mono.Security.Interface", "AlertDescription", "InternalError"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.AlertDescription InternalError
void Mono::Security::Interface::AlertDescription::_set_InternalError(Mono::Security::Interface::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_set_InternalError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "AlertDescription", "InternalError", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.AlertDescription UserCancelled
Mono::Security::Interface::AlertDescription Mono::Security::Interface::AlertDescription::_get_UserCancelled() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_get_UserCancelled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::AlertDescription>("Mono.Security.Interface", "AlertDescription", "UserCancelled"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.AlertDescription UserCancelled
void Mono::Security::Interface::AlertDescription::_set_UserCancelled(Mono::Security::Interface::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_set_UserCancelled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "AlertDescription", "UserCancelled", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.AlertDescription NoRenegotiation
Mono::Security::Interface::AlertDescription Mono::Security::Interface::AlertDescription::_get_NoRenegotiation() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_get_NoRenegotiation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::AlertDescription>("Mono.Security.Interface", "AlertDescription", "NoRenegotiation"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.AlertDescription NoRenegotiation
void Mono::Security::Interface::AlertDescription::_set_NoRenegotiation(Mono::Security::Interface::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_set_NoRenegotiation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "AlertDescription", "NoRenegotiation", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.AlertDescription UnsupportedExtension
Mono::Security::Interface::AlertDescription Mono::Security::Interface::AlertDescription::_get_UnsupportedExtension() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_get_UnsupportedExtension");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::AlertDescription>("Mono.Security.Interface", "AlertDescription", "UnsupportedExtension"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.AlertDescription UnsupportedExtension
void Mono::Security::Interface::AlertDescription::_set_UnsupportedExtension(Mono::Security::Interface::AlertDescription value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::AlertDescription::_set_UnsupportedExtension");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "AlertDescription", "UnsupportedExtension", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Interface.Alert
#include "Mono/Security/Interface/Alert.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Interface.Alert.get_Level
Mono::Security::Interface::AlertLevel Mono::Security::Interface::Alert::get_Level() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::Alert::get_Level");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Level", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::AlertLevel, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.Alert.get_Description
Mono::Security::Interface::AlertDescription Mono::Security::Interface::Alert::get_Description() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::Alert::get_Description");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Description", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::AlertDescription, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.Alert.inferAlertLevel
void Mono::Security::Interface::Alert::inferAlertLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::Alert::inferAlertLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "inferAlertLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.Alert.ToString
::Il2CppString* Mono::Security::Interface::Alert::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::Alert::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Alert::get_Level
// Il2CppName: get_Level
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::Interface::AlertLevel (Alert::*)()>(&Alert::get_Level)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Alert*), "get_Level", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Alert::get_Description
// Il2CppName: get_Description
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::Interface::AlertDescription (Alert::*)()>(&Alert::get_Description)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Alert*), "get_Description", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Alert::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Alert::*)(Mono::Security::Interface::AlertDescription)>(&Alert::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Alert*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::Interface::AlertDescription>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Alert::*)(Mono::Security::Interface::AlertDescription)>(&Alert::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Alert*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::Interface::AlertDescription>()});
  }
};
// Writing MetadataGetter for method: Alert::inferAlertLevel
// Il2CppName: inferAlertLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Alert::*)()>(&Alert::inferAlertLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Alert*), "inferAlertLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Alert::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Alert::*)()>(&Alert::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Alert*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Interface.ValidationResult
#include "Mono/Security/Interface/ValidationResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Interface.ValidationResult.get_Trusted
bool Mono::Security::Interface::ValidationResult::get_Trusted() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::ValidationResult::get_Trusted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Trusted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.ValidationResult.get_UserDenied
bool Mono::Security::Interface::ValidationResult::get_UserDenied() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::ValidationResult::get_UserDenied");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserDenied", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ValidationResult::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ValidationResult::*)(bool, bool, int, System::Nullable_1<Mono::Security::Interface::MonoSslPolicyErrors>)>(&ValidationResult::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ValidationResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Nullable_1<Mono::Security::Interface::MonoSslPolicyErrors>>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ValidationResult::*)(bool, bool, int, System::Nullable_1<Mono::Security::Interface::MonoSslPolicyErrors>)>(&ValidationResult::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ValidationResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Nullable_1<Mono::Security::Interface::MonoSslPolicyErrors>>()});
  }
};
// Writing MetadataGetter for method: ValidationResult::get_Trusted
// Il2CppName: get_Trusted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ValidationResult::*)()>(&ValidationResult::get_Trusted)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ValidationResult*), "get_Trusted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ValidationResult::get_UserDenied
// Il2CppName: get_UserDenied
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ValidationResult::*)()>(&ValidationResult::get_UserDenied)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ValidationResult*), "get_UserDenied", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Interface.ICertificateValidator
#include "Mono/Security/Interface/ICertificateValidator.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: Mono.Security.Interface.ValidationResult
#include "Mono/Security/Interface/ValidationResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Interface.ICertificateValidator.get_Settings
Mono::Security::Interface::MonoTlsSettings* Mono::Security::Interface::ICertificateValidator::get_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::ICertificateValidator::get_Settings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Settings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::MonoTlsSettings*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.ICertificateValidator.SelectClientCertificate
bool Mono::Security::Interface::ICertificateValidator::SelectClientCertificate(::Il2CppString* targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection* localCertificates, System::Security::Cryptography::X509Certificates::X509Certificate* remoteCertificate, ::Array<::Il2CppString*>* acceptableIssuers, System::Security::Cryptography::X509Certificates::X509Certificate*& clientCertificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::ICertificateValidator::SelectClientCertificate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectClientCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetHost), ::il2cpp_utils::ExtractType(localCertificates), ::il2cpp_utils::ExtractType(remoteCertificate), ::il2cpp_utils::ExtractType(acceptableIssuers), ::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509Certificate*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, targetHost, localCertificates, remoteCertificate, acceptableIssuers, clientCertificate);
}
// Autogenerated method: Mono.Security.Interface.ICertificateValidator.ValidateCertificate
Mono::Security::Interface::ValidationResult* Mono::Security::Interface::ICertificateValidator::ValidateCertificate(::Il2CppString* targetHost, bool serverMode, System::Security::Cryptography::X509Certificates::X509CertificateCollection* certificates) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::ICertificateValidator::ValidateCertificate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetHost), ::il2cpp_utils::ExtractType(serverMode), ::il2cpp_utils::ExtractType(certificates)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::ValidationResult*, false>(this, ___internal__method, targetHost, serverMode, certificates);
}
// Writing MetadataGetter for method: ICertificateValidator::get_Settings
// Il2CppName: get_Settings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::Interface::MonoTlsSettings* (ICertificateValidator::*)()>(&ICertificateValidator::get_Settings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ICertificateValidator*), "get_Settings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ICertificateValidator::SelectClientCertificate
// Il2CppName: SelectClientCertificate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ICertificateValidator::*)(::Il2CppString*, System::Security::Cryptography::X509Certificates::X509CertificateCollection*, System::Security::Cryptography::X509Certificates::X509Certificate*, ::Array<::Il2CppString*>*, System::Security::Cryptography::X509Certificates::X509Certificate*&)>(&ICertificateValidator::SelectClientCertificate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ICertificateValidator*), "SelectClientCertificate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509CertificateCollection*>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509Certificate*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509Certificate*&>()});
  }
};
// Writing MetadataGetter for method: ICertificateValidator::ValidateCertificate
// Il2CppName: ValidateCertificate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::Interface::ValidationResult* (ICertificateValidator::*)(::Il2CppString*, bool, System::Security::Cryptography::X509Certificates::X509CertificateCollection*)>(&ICertificateValidator::ValidateCertificate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ICertificateValidator*), "ValidateCertificate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509CertificateCollection*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Interface.ICertificateValidator2
#include "Mono/Security/Interface/ICertificateValidator2.hpp"
// Including type: Mono.Security.Interface.ValidationResult
#include "Mono/Security/Interface/ValidationResult.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Interface.ICertificateValidator2.ValidateCertificate
Mono::Security::Interface::ValidationResult* Mono::Security::Interface::ICertificateValidator2::ValidateCertificate(::Il2CppString* targetHost, bool serverMode, System::Security::Cryptography::X509Certificates::X509Certificate* leaf, System::Security::Cryptography::X509Certificates::X509Chain* chain) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::ICertificateValidator2::ValidateCertificate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetHost), ::il2cpp_utils::ExtractType(serverMode), ::il2cpp_utils::ExtractType(leaf), ::il2cpp_utils::ExtractType(chain)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::ValidationResult*, false>(this, ___internal__method, targetHost, serverMode, leaf, chain);
}
// Writing MetadataGetter for method: ICertificateValidator2::ValidateCertificate
// Il2CppName: ValidateCertificate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::Interface::ValidationResult* (ICertificateValidator2::*)(::Il2CppString*, bool, System::Security::Cryptography::X509Certificates::X509Certificate*, System::Security::Cryptography::X509Certificates::X509Chain*)>(&ICertificateValidator2::ValidateCertificate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ICertificateValidator2*), "ValidateCertificate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509Certificate*>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509Chain*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Interface.CertificateValidationHelper
#include "Mono/Security/Interface/CertificateValidationHelper.hpp"
// Including type: Mono.Security.Interface.ICertificateValidator2
#include "Mono/Security/Interface/ICertificateValidator2.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: Mono.Security.Interface.MonoTlsProvider
#include "Mono/Security/Interface/MonoTlsProvider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Boolean noX509Chain
bool Mono::Security::Interface::CertificateValidationHelper::_get_noX509Chain() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CertificateValidationHelper::_get_noX509Chain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Mono.Security.Interface", "CertificateValidationHelper", "noX509Chain"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Boolean noX509Chain
void Mono::Security::Interface::CertificateValidationHelper::_set_noX509Chain(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CertificateValidationHelper::_set_noX509Chain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CertificateValidationHelper", "noX509Chain", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Boolean supportsTrustAnchors
bool Mono::Security::Interface::CertificateValidationHelper::_get_supportsTrustAnchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CertificateValidationHelper::_get_supportsTrustAnchors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Mono.Security.Interface", "CertificateValidationHelper", "supportsTrustAnchors"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Boolean supportsTrustAnchors
void Mono::Security::Interface::CertificateValidationHelper::_set_supportsTrustAnchors(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CertificateValidationHelper::_set_supportsTrustAnchors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CertificateValidationHelper", "supportsTrustAnchors", value));
}
// Autogenerated method: Mono.Security.Interface.CertificateValidationHelper..cctor
void Mono::Security::Interface::CertificateValidationHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CertificateValidationHelper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Interface", "CertificateValidationHelper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.CertificateValidationHelper.GetInternalValidator
Mono::Security::Interface::ICertificateValidator2* Mono::Security::Interface::CertificateValidationHelper::GetInternalValidator(Mono::Security::Interface::MonoTlsSettings* settings, Mono::Security::Interface::MonoTlsProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CertificateValidationHelper::GetInternalValidator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Interface", "CertificateValidationHelper", "GetInternalValidator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(settings), ::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::ICertificateValidator2*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, settings, provider);
}
// Writing MetadataGetter for method: CertificateValidationHelper::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&CertificateValidationHelper::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CertificateValidationHelper*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CertificateValidationHelper::GetInternalValidator
// Il2CppName: GetInternalValidator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::Interface::ICertificateValidator2* (*)(Mono::Security::Interface::MonoTlsSettings*, Mono::Security::Interface::MonoTlsProvider*)>(&CertificateValidationHelper::GetInternalValidator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CertificateValidationHelper*), "GetInternalValidator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::Interface::MonoTlsSettings*>(), ::il2cpp_utils::ExtractIndependentType<Mono::Security::Interface::MonoTlsProvider*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Interface.CipherSuiteCode
#include "Mono/Security/Interface/CipherSuiteCode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_NULL_WITH_NULL_NULL
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_NULL_WITH_NULL_NULL() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_NULL_WITH_NULL_NULL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_NULL_WITH_NULL_NULL"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_NULL_WITH_NULL_NULL
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_NULL_WITH_NULL_NULL(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_NULL_WITH_NULL_NULL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_NULL_WITH_NULL_NULL", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_NULL_MD5
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_NULL_MD5() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_NULL_MD5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_NULL_MD5"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_NULL_MD5
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_NULL_MD5(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_NULL_MD5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_NULL_MD5", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_NULL_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_NULL_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_NULL_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_NULL_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_NULL_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_NULL_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_NULL_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_NULL_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_EXPORT_WITH_RC4_40_MD5
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_EXPORT_WITH_RC4_40_MD5() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_EXPORT_WITH_RC4_40_MD5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_EXPORT_WITH_RC4_40_MD5"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_EXPORT_WITH_RC4_40_MD5
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_EXPORT_WITH_RC4_40_MD5(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_EXPORT_WITH_RC4_40_MD5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_EXPORT_WITH_RC4_40_MD5", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_RC4_128_MD5
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_RC4_128_MD5() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_RC4_128_MD5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_RC4_128_MD5"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_RC4_128_MD5
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_RC4_128_MD5(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_RC4_128_MD5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_RC4_128_MD5", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_RC4_128_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_RC4_128_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_RC4_128_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_RC4_128_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_RC4_128_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_RC4_128_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_RC4_128_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_RC4_128_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_IDEA_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_IDEA_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_IDEA_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_IDEA_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_IDEA_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_IDEA_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_IDEA_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_IDEA_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_EXPORT_WITH_DES40_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_EXPORT_WITH_DES40_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_EXPORT_WITH_DES40_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_EXPORT_WITH_DES40_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_EXPORT_WITH_DES40_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_EXPORT_WITH_DES40_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_EXPORT_WITH_DES40_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_EXPORT_WITH_DES40_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_DES_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_DES_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_DES_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_DES_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_DES_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_DES_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_DES_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_DES_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_3DES_EDE_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_3DES_EDE_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_3DES_EDE_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_3DES_EDE_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_3DES_EDE_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_3DES_EDE_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_3DES_EDE_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_3DES_EDE_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_DSS_WITH_DES_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_DSS_WITH_DES_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_DSS_WITH_DES_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_DSS_WITH_DES_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_DSS_WITH_DES_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_DSS_WITH_DES_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_DSS_WITH_DES_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_DSS_WITH_DES_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_RSA_WITH_DES_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_RSA_WITH_DES_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_RSA_WITH_DES_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_RSA_WITH_DES_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_RSA_WITH_DES_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_RSA_WITH_DES_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_RSA_WITH_DES_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_RSA_WITH_DES_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_DSS_WITH_DES_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_DSS_WITH_DES_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_DSS_WITH_DES_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_DSS_WITH_DES_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_DSS_WITH_DES_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_DSS_WITH_DES_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_DSS_WITH_DES_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_DSS_WITH_DES_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_DES_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_DES_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_DES_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_DES_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_DES_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_DES_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_DES_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_DES_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_EXPORT_WITH_RC4_40_MD5
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_EXPORT_WITH_RC4_40_MD5() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_EXPORT_WITH_RC4_40_MD5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_EXPORT_WITH_RC4_40_MD5"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_EXPORT_WITH_RC4_40_MD5
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_EXPORT_WITH_RC4_40_MD5(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_EXPORT_WITH_RC4_40_MD5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_EXPORT_WITH_RC4_40_MD5", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_WITH_RC4_128_MD5
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_WITH_RC4_128_MD5() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_WITH_RC4_128_MD5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_WITH_RC4_128_MD5"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_WITH_RC4_128_MD5
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_WITH_RC4_128_MD5(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_WITH_RC4_128_MD5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_WITH_RC4_128_MD5", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_WITH_DES_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_WITH_DES_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_WITH_DES_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_WITH_DES_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_WITH_DES_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_WITH_DES_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_WITH_DES_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_WITH_DES_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_WITH_3DES_EDE_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_WITH_3DES_EDE_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_WITH_3DES_EDE_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_WITH_3DES_EDE_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_WITH_3DES_EDE_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_WITH_3DES_EDE_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_WITH_3DES_EDE_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_WITH_3DES_EDE_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_AES_128_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_AES_128_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_AES_128_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_AES_128_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_AES_128_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_AES_128_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_AES_128_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_AES_128_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_DSS_WITH_AES_128_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_DSS_WITH_AES_128_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_DSS_WITH_AES_128_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_DSS_WITH_AES_128_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_DSS_WITH_AES_128_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_DSS_WITH_AES_128_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_DSS_WITH_AES_128_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_DSS_WITH_AES_128_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_RSA_WITH_AES_128_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_RSA_WITH_AES_128_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_RSA_WITH_AES_128_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_RSA_WITH_AES_128_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_RSA_WITH_AES_128_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_RSA_WITH_AES_128_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_RSA_WITH_AES_128_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_RSA_WITH_AES_128_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_DSS_WITH_AES_128_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_DSS_WITH_AES_128_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_DSS_WITH_AES_128_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_DSS_WITH_AES_128_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_DSS_WITH_AES_128_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_DSS_WITH_AES_128_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_DSS_WITH_AES_128_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_DSS_WITH_AES_128_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_AES_128_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_AES_128_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_AES_128_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_AES_128_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_AES_128_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_AES_128_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_AES_128_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_AES_128_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_WITH_AES_128_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_WITH_AES_128_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_WITH_AES_128_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_WITH_AES_128_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_WITH_AES_128_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_WITH_AES_128_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_WITH_AES_128_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_WITH_AES_128_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_AES_256_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_AES_256_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_AES_256_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_AES_256_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_AES_256_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_AES_256_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_AES_256_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_AES_256_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_DSS_WITH_AES_256_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_DSS_WITH_AES_256_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_DSS_WITH_AES_256_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_DSS_WITH_AES_256_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_DSS_WITH_AES_256_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_DSS_WITH_AES_256_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_DSS_WITH_AES_256_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_DSS_WITH_AES_256_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_RSA_WITH_AES_256_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_RSA_WITH_AES_256_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_RSA_WITH_AES_256_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_RSA_WITH_AES_256_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_RSA_WITH_AES_256_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_RSA_WITH_AES_256_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_RSA_WITH_AES_256_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_RSA_WITH_AES_256_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_DSS_WITH_AES_256_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_DSS_WITH_AES_256_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_DSS_WITH_AES_256_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_DSS_WITH_AES_256_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_DSS_WITH_AES_256_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_DSS_WITH_AES_256_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_DSS_WITH_AES_256_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_DSS_WITH_AES_256_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_AES_256_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_AES_256_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_AES_256_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_AES_256_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_AES_256_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_AES_256_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_AES_256_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_AES_256_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_WITH_AES_256_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_WITH_AES_256_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_WITH_AES_256_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_WITH_AES_256_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_WITH_AES_256_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_WITH_AES_256_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_WITH_AES_256_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_WITH_AES_256_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_CAMELLIA_128_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_CAMELLIA_128_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_CAMELLIA_128_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_CAMELLIA_128_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_CAMELLIA_128_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_CAMELLIA_128_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_CAMELLIA_128_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_CAMELLIA_128_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_CAMELLIA_256_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_CAMELLIA_256_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_CAMELLIA_256_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_CAMELLIA_256_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_CAMELLIA_256_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_CAMELLIA_256_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_CAMELLIA_256_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_CAMELLIA_256_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_SEED_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_SEED_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_SEED_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_SEED_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_SEED_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_SEED_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_SEED_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_SEED_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_DSS_WITH_SEED_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_DSS_WITH_SEED_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_DSS_WITH_SEED_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_DSS_WITH_SEED_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_DSS_WITH_SEED_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_DSS_WITH_SEED_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_DSS_WITH_SEED_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_DSS_WITH_SEED_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_RSA_WITH_SEED_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_RSA_WITH_SEED_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_RSA_WITH_SEED_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_RSA_WITH_SEED_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_RSA_WITH_SEED_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_RSA_WITH_SEED_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_RSA_WITH_SEED_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_RSA_WITH_SEED_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_DSS_WITH_SEED_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_DSS_WITH_SEED_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_DSS_WITH_SEED_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_DSS_WITH_SEED_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_DSS_WITH_SEED_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_DSS_WITH_SEED_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_DSS_WITH_SEED_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_DSS_WITH_SEED_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_SEED_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_SEED_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_SEED_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_SEED_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_SEED_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_SEED_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_SEED_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_SEED_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_WITH_SEED_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_WITH_SEED_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_WITH_SEED_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_WITH_SEED_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_WITH_SEED_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_WITH_SEED_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_WITH_SEED_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_WITH_SEED_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_RC4_128_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_RC4_128_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_RC4_128_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_RC4_128_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_RC4_128_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_RC4_128_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_RC4_128_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_RC4_128_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_3DES_EDE_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_3DES_EDE_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_3DES_EDE_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_3DES_EDE_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_3DES_EDE_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_3DES_EDE_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_3DES_EDE_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_3DES_EDE_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_AES_128_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_AES_128_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_AES_128_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_AES_128_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_AES_128_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_AES_128_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_AES_128_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_AES_128_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_AES_256_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_AES_256_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_AES_256_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_AES_256_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_AES_256_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_AES_256_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_AES_256_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_AES_256_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_RC4_128_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_RC4_128_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_RC4_128_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_RC4_128_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_RC4_128_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_RC4_128_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_RC4_128_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_RC4_128_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_AES_128_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_AES_128_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_AES_128_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_AES_128_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_AES_128_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_AES_128_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_AES_128_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_AES_128_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_AES_256_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_AES_256_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_AES_256_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_AES_256_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_AES_256_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_AES_256_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_AES_256_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_AES_256_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_PSK_WITH_RC4_128_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_PSK_WITH_RC4_128_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_PSK_WITH_RC4_128_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_PSK_WITH_RC4_128_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_PSK_WITH_RC4_128_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_PSK_WITH_RC4_128_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_PSK_WITH_RC4_128_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_PSK_WITH_RC4_128_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_PSK_WITH_AES_128_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_PSK_WITH_AES_128_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_PSK_WITH_AES_128_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_PSK_WITH_AES_128_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_PSK_WITH_AES_128_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_PSK_WITH_AES_128_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_PSK_WITH_AES_128_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_PSK_WITH_AES_128_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_PSK_WITH_AES_256_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_PSK_WITH_AES_256_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_PSK_WITH_AES_256_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_PSK_WITH_AES_256_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_PSK_WITH_AES_256_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_PSK_WITH_AES_256_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_PSK_WITH_AES_256_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_PSK_WITH_AES_256_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_ECDSA_WITH_NULL_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_ECDSA_WITH_NULL_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_ECDSA_WITH_NULL_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_ECDSA_WITH_NULL_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_ECDSA_WITH_NULL_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_ECDSA_WITH_NULL_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_ECDSA_WITH_NULL_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_ECDSA_WITH_NULL_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_ECDSA_WITH_RC4_128_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_ECDSA_WITH_RC4_128_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_ECDSA_WITH_RC4_128_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_ECDSA_WITH_RC4_128_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_ECDSA_WITH_RC4_128_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_ECDSA_WITH_RC4_128_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_ECDSA_WITH_RC4_128_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_ECDSA_WITH_RC4_128_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_ECDSA_WITH_NULL_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_ECDSA_WITH_NULL_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_ECDSA_WITH_NULL_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_ECDSA_WITH_NULL_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_ECDSA_WITH_NULL_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_ECDSA_WITH_NULL_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_ECDSA_WITH_NULL_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_ECDSA_WITH_NULL_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_ECDSA_WITH_RC4_128_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_ECDSA_WITH_RC4_128_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_ECDSA_WITH_RC4_128_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_ECDSA_WITH_RC4_128_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_ECDSA_WITH_RC4_128_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_ECDSA_WITH_RC4_128_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_ECDSA_WITH_RC4_128_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_ECDSA_WITH_RC4_128_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_RSA_WITH_NULL_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_RSA_WITH_NULL_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_RSA_WITH_NULL_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_RSA_WITH_NULL_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_RSA_WITH_NULL_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_RSA_WITH_NULL_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_RSA_WITH_NULL_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_RSA_WITH_NULL_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_RSA_WITH_RC4_128_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_RSA_WITH_RC4_128_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_RSA_WITH_RC4_128_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_RSA_WITH_RC4_128_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_RSA_WITH_RC4_128_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_RSA_WITH_RC4_128_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_RSA_WITH_RC4_128_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_RSA_WITH_RC4_128_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_RSA_WITH_AES_128_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_RSA_WITH_AES_128_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_RSA_WITH_AES_128_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_RSA_WITH_AES_128_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_RSA_WITH_AES_128_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_RSA_WITH_AES_128_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_RSA_WITH_AES_128_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_RSA_WITH_AES_128_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_RSA_WITH_AES_256_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_RSA_WITH_AES_256_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_RSA_WITH_AES_256_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_RSA_WITH_AES_256_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_RSA_WITH_AES_256_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_RSA_WITH_AES_256_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_RSA_WITH_AES_256_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_RSA_WITH_AES_256_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_RSA_WITH_NULL_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_RSA_WITH_NULL_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_RSA_WITH_NULL_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_RSA_WITH_NULL_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_RSA_WITH_NULL_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_RSA_WITH_NULL_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_RSA_WITH_NULL_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_RSA_WITH_NULL_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_RSA_WITH_RC4_128_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_RSA_WITH_RC4_128_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_RSA_WITH_RC4_128_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_RSA_WITH_RC4_128_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_RSA_WITH_RC4_128_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_RSA_WITH_RC4_128_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_RSA_WITH_RC4_128_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_RSA_WITH_RC4_128_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_anon_WITH_NULL_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_anon_WITH_NULL_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_anon_WITH_NULL_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_anon_WITH_NULL_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_anon_WITH_NULL_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_anon_WITH_NULL_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_anon_WITH_NULL_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_anon_WITH_NULL_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_anon_WITH_RC4_128_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_anon_WITH_RC4_128_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_anon_WITH_RC4_128_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_anon_WITH_RC4_128_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_anon_WITH_RC4_128_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_anon_WITH_RC4_128_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_anon_WITH_RC4_128_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_anon_WITH_RC4_128_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_anon_WITH_AES_128_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_anon_WITH_AES_128_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_anon_WITH_AES_128_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_anon_WITH_AES_128_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_anon_WITH_AES_128_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_anon_WITH_AES_128_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_anon_WITH_AES_128_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_anon_WITH_AES_128_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_anon_WITH_AES_256_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_anon_WITH_AES_256_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_anon_WITH_AES_256_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_anon_WITH_AES_256_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_anon_WITH_AES_256_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_anon_WITH_AES_256_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_anon_WITH_AES_256_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_anon_WITH_AES_256_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_NULL_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_NULL_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_NULL_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_NULL_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_NULL_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_NULL_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_NULL_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_NULL_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_NULL_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_NULL_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_NULL_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_NULL_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_NULL_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_NULL_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_NULL_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_NULL_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_PSK_WITH_NULL_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_PSK_WITH_NULL_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_PSK_WITH_NULL_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_PSK_WITH_NULL_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_PSK_WITH_NULL_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_PSK_WITH_NULL_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_PSK_WITH_NULL_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_PSK_WITH_NULL_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_SRP_SHA_WITH_AES_128_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_SRP_SHA_WITH_AES_128_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_SRP_SHA_WITH_AES_128_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_SRP_SHA_WITH_AES_128_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_SRP_SHA_WITH_AES_128_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_SRP_SHA_WITH_AES_128_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_SRP_SHA_WITH_AES_128_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_SRP_SHA_WITH_AES_128_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_SRP_SHA_WITH_AES_256_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_SRP_SHA_WITH_AES_256_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_SRP_SHA_WITH_AES_256_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_SRP_SHA_WITH_AES_256_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_SRP_SHA_WITH_AES_256_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_SRP_SHA_WITH_AES_256_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_SRP_SHA_WITH_AES_256_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_SRP_SHA_WITH_AES_256_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_NULL_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_NULL_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_NULL_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_NULL_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_NULL_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_NULL_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_NULL_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_NULL_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_AES_128_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_AES_128_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_AES_128_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_AES_128_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_AES_128_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_AES_128_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_AES_128_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_AES_128_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_AES_256_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_AES_256_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_AES_256_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_AES_256_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_AES_256_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_AES_256_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_AES_256_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_AES_256_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_DSS_WITH_AES_128_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_DSS_WITH_AES_128_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_DSS_WITH_AES_128_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_DSS_WITH_AES_128_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_DSS_WITH_AES_128_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_DSS_WITH_AES_128_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_DSS_WITH_AES_128_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_DSS_WITH_AES_128_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_RSA_WITH_AES_128_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_RSA_WITH_AES_128_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_RSA_WITH_AES_128_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_RSA_WITH_AES_128_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_RSA_WITH_AES_128_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_RSA_WITH_AES_128_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_RSA_WITH_AES_128_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_RSA_WITH_AES_128_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_DSS_WITH_AES_128_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_DSS_WITH_AES_128_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_DSS_WITH_AES_128_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_DSS_WITH_AES_128_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_DSS_WITH_AES_128_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_DSS_WITH_AES_128_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_DSS_WITH_AES_128_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_DSS_WITH_AES_128_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_AES_128_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_AES_128_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_AES_128_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_AES_128_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_AES_128_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_AES_128_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_AES_128_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_AES_128_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_DSS_WITH_AES_256_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_DSS_WITH_AES_256_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_DSS_WITH_AES_256_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_DSS_WITH_AES_256_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_DSS_WITH_AES_256_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_DSS_WITH_AES_256_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_DSS_WITH_AES_256_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_DSS_WITH_AES_256_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_RSA_WITH_AES_256_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_RSA_WITH_AES_256_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_RSA_WITH_AES_256_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_RSA_WITH_AES_256_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_RSA_WITH_AES_256_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_RSA_WITH_AES_256_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_RSA_WITH_AES_256_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_RSA_WITH_AES_256_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_DSS_WITH_AES_256_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_DSS_WITH_AES_256_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_DSS_WITH_AES_256_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_DSS_WITH_AES_256_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_DSS_WITH_AES_256_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_DSS_WITH_AES_256_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_DSS_WITH_AES_256_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_DSS_WITH_AES_256_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_AES_256_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_AES_256_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_AES_256_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_AES_256_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_AES_256_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_AES_256_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_AES_256_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_AES_256_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_WITH_AES_128_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_WITH_AES_128_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_WITH_AES_128_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_WITH_AES_128_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_WITH_AES_128_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_WITH_AES_128_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_WITH_AES_128_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_WITH_AES_128_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_WITH_AES_256_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_WITH_AES_256_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_WITH_AES_256_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_WITH_AES_256_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_WITH_AES_256_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_WITH_AES_256_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_WITH_AES_256_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_WITH_AES_256_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_AES_128_GCM_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_AES_128_GCM_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_AES_128_GCM_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_AES_128_GCM_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_AES_128_GCM_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_AES_128_GCM_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_AES_128_GCM_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_AES_128_GCM_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_AES_256_GCM_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_AES_256_GCM_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_AES_256_GCM_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_AES_256_GCM_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_AES_256_GCM_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_AES_256_GCM_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_AES_256_GCM_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_AES_256_GCM_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_AES_128_GCM_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_AES_128_GCM_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_AES_128_GCM_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_AES_128_GCM_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_AES_128_GCM_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_AES_128_GCM_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_AES_256_GCM_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_AES_256_GCM_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_AES_256_GCM_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_AES_256_GCM_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_AES_256_GCM_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_AES_256_GCM_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_RSA_WITH_AES_128_GCM_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_RSA_WITH_AES_128_GCM_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_RSA_WITH_AES_128_GCM_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_RSA_WITH_AES_128_GCM_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_RSA_WITH_AES_128_GCM_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_RSA_WITH_AES_128_GCM_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_RSA_WITH_AES_128_GCM_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_RSA_WITH_AES_128_GCM_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_RSA_WITH_AES_256_GCM_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_RSA_WITH_AES_256_GCM_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_RSA_WITH_AES_256_GCM_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_RSA_WITH_AES_256_GCM_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_RSA_WITH_AES_256_GCM_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_RSA_WITH_AES_256_GCM_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_RSA_WITH_AES_256_GCM_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_RSA_WITH_AES_256_GCM_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_DSS_WITH_AES_128_GCM_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_DSS_WITH_AES_128_GCM_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_DSS_WITH_AES_128_GCM_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_DSS_WITH_AES_128_GCM_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_DSS_WITH_AES_128_GCM_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_DSS_WITH_AES_128_GCM_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_DSS_WITH_AES_128_GCM_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_DSS_WITH_AES_128_GCM_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_DSS_WITH_AES_256_GCM_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_DSS_WITH_AES_256_GCM_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_DSS_WITH_AES_256_GCM_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_DSS_WITH_AES_256_GCM_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_DSS_WITH_AES_256_GCM_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_DSS_WITH_AES_256_GCM_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_DSS_WITH_AES_256_GCM_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_DSS_WITH_AES_256_GCM_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_DSS_WITH_AES_128_GCM_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_DSS_WITH_AES_128_GCM_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_DSS_WITH_AES_128_GCM_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_DSS_WITH_AES_128_GCM_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_DSS_WITH_AES_128_GCM_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_DSS_WITH_AES_128_GCM_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_DSS_WITH_AES_128_GCM_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_DSS_WITH_AES_128_GCM_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_DSS_WITH_AES_256_GCM_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_DSS_WITH_AES_256_GCM_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_DSS_WITH_AES_256_GCM_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_DSS_WITH_AES_256_GCM_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_DSS_WITH_AES_256_GCM_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_DSS_WITH_AES_256_GCM_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_DSS_WITH_AES_256_GCM_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_DSS_WITH_AES_256_GCM_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_WITH_AES_128_GCM_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_WITH_AES_128_GCM_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_WITH_AES_128_GCM_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_WITH_AES_128_GCM_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_WITH_AES_128_GCM_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_WITH_AES_128_GCM_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_WITH_AES_128_GCM_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_WITH_AES_128_GCM_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_WITH_AES_256_GCM_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_WITH_AES_256_GCM_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_WITH_AES_256_GCM_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_WITH_AES_256_GCM_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_WITH_AES_256_GCM_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_WITH_AES_256_GCM_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_WITH_AES_256_GCM_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_WITH_AES_256_GCM_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_AES_128_GCM_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_AES_128_GCM_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_AES_128_GCM_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_AES_128_GCM_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_AES_128_GCM_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_AES_128_GCM_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_AES_128_GCM_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_AES_128_GCM_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_AES_256_GCM_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_AES_256_GCM_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_AES_256_GCM_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_AES_256_GCM_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_AES_256_GCM_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_AES_256_GCM_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_AES_256_GCM_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_AES_256_GCM_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_AES_128_GCM_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_AES_128_GCM_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_AES_128_GCM_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_AES_128_GCM_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_AES_128_GCM_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_AES_128_GCM_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_AES_128_GCM_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_AES_128_GCM_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_AES_256_GCM_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_AES_256_GCM_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_AES_256_GCM_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_AES_256_GCM_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_AES_256_GCM_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_AES_256_GCM_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_AES_256_GCM_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_AES_256_GCM_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_PSK_WITH_AES_128_GCM_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_PSK_WITH_AES_128_GCM_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_PSK_WITH_AES_128_GCM_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_PSK_WITH_AES_128_GCM_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_PSK_WITH_AES_128_GCM_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_PSK_WITH_AES_128_GCM_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_PSK_WITH_AES_128_GCM_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_PSK_WITH_AES_128_GCM_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_PSK_WITH_AES_256_GCM_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_PSK_WITH_AES_256_GCM_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_PSK_WITH_AES_256_GCM_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_PSK_WITH_AES_256_GCM_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_PSK_WITH_AES_256_GCM_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_PSK_WITH_AES_256_GCM_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_PSK_WITH_AES_256_GCM_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_PSK_WITH_AES_256_GCM_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_AES_128_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_AES_128_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_AES_128_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_AES_128_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_AES_128_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_AES_128_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_AES_128_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_AES_128_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_AES_256_CBC_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_AES_256_CBC_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_AES_256_CBC_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_AES_256_CBC_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_AES_256_CBC_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_AES_256_CBC_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_AES_256_CBC_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_AES_256_CBC_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_NULL_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_NULL_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_NULL_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_NULL_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_NULL_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_NULL_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_NULL_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_NULL_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_NULL_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_NULL_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_NULL_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_NULL_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_NULL_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_NULL_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_NULL_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_NULL_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_AES_128_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_AES_128_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_AES_128_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_AES_128_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_AES_128_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_AES_128_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_AES_128_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_AES_128_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_AES_256_CBC_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_AES_256_CBC_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_AES_256_CBC_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_AES_256_CBC_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_AES_256_CBC_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_AES_256_CBC_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_AES_256_CBC_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_AES_256_CBC_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_NULL_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_NULL_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_NULL_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_NULL_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_NULL_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_NULL_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_NULL_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_NULL_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_NULL_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_NULL_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_NULL_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_NULL_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_NULL_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_NULL_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_NULL_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_NULL_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_PSK_WITH_AES_128_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_PSK_WITH_AES_128_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_PSK_WITH_AES_128_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_PSK_WITH_AES_128_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_PSK_WITH_AES_128_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_PSK_WITH_AES_128_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_PSK_WITH_AES_128_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_PSK_WITH_AES_128_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_PSK_WITH_AES_256_CBC_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_PSK_WITH_AES_256_CBC_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_PSK_WITH_AES_256_CBC_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_PSK_WITH_AES_256_CBC_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_PSK_WITH_AES_256_CBC_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_PSK_WITH_AES_256_CBC_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_PSK_WITH_AES_256_CBC_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_PSK_WITH_AES_256_CBC_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_PSK_WITH_NULL_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_PSK_WITH_NULL_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_PSK_WITH_NULL_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_PSK_WITH_NULL_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_PSK_WITH_NULL_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_PSK_WITH_NULL_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_PSK_WITH_NULL_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_PSK_WITH_NULL_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_PSK_WITH_NULL_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_PSK_WITH_NULL_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_PSK_WITH_NULL_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_PSK_WITH_NULL_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_PSK_WITH_NULL_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_PSK_WITH_NULL_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_PSK_WITH_NULL_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_PSK_WITH_NULL_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_PSK_WITH_RC4_128_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_PSK_WITH_RC4_128_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_PSK_WITH_RC4_128_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_PSK_WITH_RC4_128_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_PSK_WITH_RC4_128_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_PSK_WITH_RC4_128_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_PSK_WITH_RC4_128_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_PSK_WITH_RC4_128_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_PSK_WITH_NULL_SHA
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_PSK_WITH_NULL_SHA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_PSK_WITH_NULL_SHA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_PSK_WITH_NULL_SHA"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_PSK_WITH_NULL_SHA
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_PSK_WITH_NULL_SHA(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_PSK_WITH_NULL_SHA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_PSK_WITH_NULL_SHA", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_PSK_WITH_NULL_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_PSK_WITH_NULL_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_PSK_WITH_NULL_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_PSK_WITH_NULL_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_PSK_WITH_NULL_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_PSK_WITH_NULL_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_PSK_WITH_NULL_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_PSK_WITH_NULL_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_PSK_WITH_NULL_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_PSK_WITH_NULL_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_PSK_WITH_NULL_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_PSK_WITH_NULL_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_PSK_WITH_NULL_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_PSK_WITH_NULL_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_PSK_WITH_NULL_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_PSK_WITH_NULL_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_EMPTY_RENEGOTIATION_INFO_SCSV
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_EMPTY_RENEGOTIATION_INFO_SCSV() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_EMPTY_RENEGOTIATION_INFO_SCSV");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_EMPTY_RENEGOTIATION_INFO_SCSV"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_EMPTY_RENEGOTIATION_INFO_SCSV
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_EMPTY_RENEGOTIATION_INFO_SCSV(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_EMPTY_RENEGOTIATION_INFO_SCSV");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_EMPTY_RENEGOTIATION_INFO_SCSV", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_AES_128_CCM
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_AES_128_CCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_AES_128_CCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_AES_128_CCM"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_AES_128_CCM
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_AES_128_CCM(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_AES_128_CCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_AES_128_CCM", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_AES_256_CCM
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_AES_256_CCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_AES_256_CCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_AES_256_CCM"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_AES_256_CCM
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_AES_256_CCM(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_AES_256_CCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_AES_256_CCM", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_AES_128_CCM
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_AES_128_CCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_AES_128_CCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_AES_128_CCM"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_AES_128_CCM
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_AES_128_CCM(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_AES_128_CCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_AES_128_CCM", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_AES_256_CCM
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_AES_256_CCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_AES_256_CCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_AES_256_CCM"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_AES_256_CCM
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_AES_256_CCM(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_AES_256_CCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_AES_256_CCM", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_AES_128_CCM_8
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_AES_128_CCM_8() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_AES_128_CCM_8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_AES_128_CCM_8"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_AES_128_CCM_8
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_AES_128_CCM_8(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_AES_128_CCM_8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_AES_128_CCM_8", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_AES_256_CCM_8
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_AES_256_CCM_8() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_AES_256_CCM_8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_AES_256_CCM_8"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_AES_256_CCM_8
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_AES_256_CCM_8(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_AES_256_CCM_8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_AES_256_CCM_8", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_AES_128_CCM_8
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_AES_128_CCM_8() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_AES_128_CCM_8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_AES_128_CCM_8"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_AES_128_CCM_8
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_AES_128_CCM_8(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_AES_128_CCM_8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_AES_128_CCM_8", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_AES_256_CCM_8
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_AES_256_CCM_8() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_AES_256_CCM_8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_AES_256_CCM_8"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_AES_256_CCM_8
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_AES_256_CCM_8(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_AES_256_CCM_8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_AES_256_CCM_8", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_AES_128_CCM
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_AES_128_CCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_AES_128_CCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_AES_128_CCM"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_AES_128_CCM
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_AES_128_CCM(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_AES_128_CCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_AES_128_CCM", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_AES_256_CCM
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_AES_256_CCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_AES_256_CCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_AES_256_CCM"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_AES_256_CCM
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_AES_256_CCM(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_AES_256_CCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_AES_256_CCM", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_AES_128_CCM
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_AES_128_CCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_AES_128_CCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_AES_128_CCM"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_AES_128_CCM
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_AES_128_CCM(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_AES_128_CCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_AES_128_CCM", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_AES_256_CCM
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_AES_256_CCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_AES_256_CCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_AES_256_CCM"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_AES_256_CCM
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_AES_256_CCM(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_AES_256_CCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_AES_256_CCM", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_AES_128_CCM_8
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_AES_128_CCM_8() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_AES_128_CCM_8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_AES_128_CCM_8"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_AES_128_CCM_8
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_AES_128_CCM_8(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_AES_128_CCM_8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_AES_128_CCM_8", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_AES_256_CCM_8
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_AES_256_CCM_8() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_AES_256_CCM_8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_AES_256_CCM_8"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_AES_256_CCM_8
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_AES_256_CCM_8(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_AES_256_CCM_8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_AES_256_CCM_8", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_DHE_WITH_AES_128_CCM_8
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_DHE_WITH_AES_128_CCM_8() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_DHE_WITH_AES_128_CCM_8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_DHE_WITH_AES_128_CCM_8"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_DHE_WITH_AES_128_CCM_8
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_DHE_WITH_AES_128_CCM_8(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_DHE_WITH_AES_128_CCM_8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_DHE_WITH_AES_128_CCM_8", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_DHE_WITH_AES_256_CCM_8
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_DHE_WITH_AES_256_CCM_8() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_DHE_WITH_AES_256_CCM_8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_DHE_WITH_AES_256_CCM_8"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_DHE_WITH_AES_256_CCM_8
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_DHE_WITH_AES_256_CCM_8(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_DHE_WITH_AES_256_CCM_8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_DHE_WITH_AES_256_CCM_8", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_ESTREAM_SALSA20_SHA1
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_ESTREAM_SALSA20_SHA1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_ESTREAM_SALSA20_SHA1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_ESTREAM_SALSA20_SHA1"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_ESTREAM_SALSA20_SHA1
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_ESTREAM_SALSA20_SHA1(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_ESTREAM_SALSA20_SHA1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_ESTREAM_SALSA20_SHA1", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_SALSA20_SHA1
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_SALSA20_SHA1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_WITH_SALSA20_SHA1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_SALSA20_SHA1"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_WITH_SALSA20_SHA1
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_SALSA20_SHA1(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_WITH_SALSA20_SHA1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_WITH_SALSA20_SHA1", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_RSA_WITH_ESTREAM_SALSA20_SHA1
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_RSA_WITH_ESTREAM_SALSA20_SHA1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_RSA_WITH_ESTREAM_SALSA20_SHA1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_RSA_WITH_ESTREAM_SALSA20_SHA1"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_RSA_WITH_ESTREAM_SALSA20_SHA1
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_RSA_WITH_ESTREAM_SALSA20_SHA1(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_RSA_WITH_ESTREAM_SALSA20_SHA1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_RSA_WITH_ESTREAM_SALSA20_SHA1", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_RSA_WITH_SALSA20_SHA1
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_RSA_WITH_SALSA20_SHA1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_RSA_WITH_SALSA20_SHA1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_RSA_WITH_SALSA20_SHA1"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_RSA_WITH_SALSA20_SHA1
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_RSA_WITH_SALSA20_SHA1(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_RSA_WITH_SALSA20_SHA1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_RSA_WITH_SALSA20_SHA1", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_ECDSA_WITH_ESTREAM_SALSA20_SHA1
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_ECDSA_WITH_ESTREAM_SALSA20_SHA1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_ECDSA_WITH_ESTREAM_SALSA20_SHA1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_ECDSA_WITH_ESTREAM_SALSA20_SHA1"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_ECDSA_WITH_ESTREAM_SALSA20_SHA1
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_ECDSA_WITH_ESTREAM_SALSA20_SHA1(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_ECDSA_WITH_ESTREAM_SALSA20_SHA1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_ECDSA_WITH_ESTREAM_SALSA20_SHA1", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_ECDSA_WITH_SALSA20_SHA1
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_ECDSA_WITH_SALSA20_SHA1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_ECDSA_WITH_SALSA20_SHA1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_ECDSA_WITH_SALSA20_SHA1"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_ECDSA_WITH_SALSA20_SHA1
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_ECDSA_WITH_SALSA20_SHA1(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_ECDSA_WITH_SALSA20_SHA1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_ECDSA_WITH_SALSA20_SHA1", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_ESTREAM_SALSA20_SHA1
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_ESTREAM_SALSA20_SHA1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_ESTREAM_SALSA20_SHA1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_ESTREAM_SALSA20_SHA1"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_ESTREAM_SALSA20_SHA1
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_ESTREAM_SALSA20_SHA1(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_ESTREAM_SALSA20_SHA1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_ESTREAM_SALSA20_SHA1", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_SALSA20_SHA1
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_SALSA20_SHA1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_PSK_WITH_SALSA20_SHA1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_SALSA20_SHA1"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_PSK_WITH_SALSA20_SHA1
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_SALSA20_SHA1(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_PSK_WITH_SALSA20_SHA1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_PSK_WITH_SALSA20_SHA1", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_PSK_WITH_ESTREAM_SALSA20_SHA1
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_PSK_WITH_ESTREAM_SALSA20_SHA1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_PSK_WITH_ESTREAM_SALSA20_SHA1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_PSK_WITH_ESTREAM_SALSA20_SHA1"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_PSK_WITH_ESTREAM_SALSA20_SHA1
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_PSK_WITH_ESTREAM_SALSA20_SHA1(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_PSK_WITH_ESTREAM_SALSA20_SHA1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_PSK_WITH_ESTREAM_SALSA20_SHA1", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_PSK_WITH_SALSA20_SHA1
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_PSK_WITH_SALSA20_SHA1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_ECDHE_PSK_WITH_SALSA20_SHA1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_PSK_WITH_SALSA20_SHA1"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_ECDHE_PSK_WITH_SALSA20_SHA1
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_PSK_WITH_SALSA20_SHA1(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_ECDHE_PSK_WITH_SALSA20_SHA1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_ECDHE_PSK_WITH_SALSA20_SHA1", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_PSK_WITH_ESTREAM_SALSA20_SHA1
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_PSK_WITH_ESTREAM_SALSA20_SHA1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_PSK_WITH_ESTREAM_SALSA20_SHA1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_PSK_WITH_ESTREAM_SALSA20_SHA1"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_PSK_WITH_ESTREAM_SALSA20_SHA1
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_PSK_WITH_ESTREAM_SALSA20_SHA1(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_PSK_WITH_ESTREAM_SALSA20_SHA1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_PSK_WITH_ESTREAM_SALSA20_SHA1", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_PSK_WITH_SALSA20_SHA1
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_PSK_WITH_SALSA20_SHA1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_RSA_PSK_WITH_SALSA20_SHA1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_PSK_WITH_SALSA20_SHA1"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_RSA_PSK_WITH_SALSA20_SHA1
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_PSK_WITH_SALSA20_SHA1(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_RSA_PSK_WITH_SALSA20_SHA1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_RSA_PSK_WITH_SALSA20_SHA1", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_ESTREAM_SALSA20_SHA1
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_ESTREAM_SALSA20_SHA1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_ESTREAM_SALSA20_SHA1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_ESTREAM_SALSA20_SHA1"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_ESTREAM_SALSA20_SHA1
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_ESTREAM_SALSA20_SHA1(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_ESTREAM_SALSA20_SHA1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_ESTREAM_SALSA20_SHA1", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_SALSA20_SHA1
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_SALSA20_SHA1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_PSK_WITH_SALSA20_SHA1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_SALSA20_SHA1"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_PSK_WITH_SALSA20_SHA1
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_SALSA20_SHA1(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_PSK_WITH_SALSA20_SHA1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_PSK_WITH_SALSA20_SHA1", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_ESTREAM_SALSA20_SHA1
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_ESTREAM_SALSA20_SHA1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_ESTREAM_SALSA20_SHA1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_ESTREAM_SALSA20_SHA1"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_ESTREAM_SALSA20_SHA1
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_ESTREAM_SALSA20_SHA1(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_ESTREAM_SALSA20_SHA1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_ESTREAM_SALSA20_SHA1", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_SALSA20_SHA1
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_SALSA20_SHA1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_DHE_RSA_WITH_SALSA20_SHA1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_SALSA20_SHA1"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_DHE_RSA_WITH_SALSA20_SHA1
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_SALSA20_SHA1(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_DHE_RSA_WITH_SALSA20_SHA1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_DHE_RSA_WITH_SALSA20_SHA1", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.CipherSuiteCode TLS_FALLBACK_SCSV
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::CipherSuiteCode::_get_TLS_FALLBACK_SCSV() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_get_TLS_FALLBACK_SCSV");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::CipherSuiteCode>("Mono.Security.Interface", "CipherSuiteCode", "TLS_FALLBACK_SCSV"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.CipherSuiteCode TLS_FALLBACK_SCSV
void Mono::Security::Interface::CipherSuiteCode::_set_TLS_FALLBACK_SCSV(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::CipherSuiteCode::_set_TLS_FALLBACK_SCSV");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "CipherSuiteCode", "TLS_FALLBACK_SCSV", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Interface.IMonoSslStream
#include "Mono/Security/Interface/IMonoSslStream.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.Security.Authentication.SslProtocols
#include "System/Security/Authentication/SslProtocols.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Net.Security.AuthenticatedStream
#include "System/Net/Security/AuthenticatedStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Interface.IMonoSslStream.AuthenticateAsClient
void Mono::Security::Interface::IMonoSslStream::AuthenticateAsClient(::Il2CppString* targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection* clientCertificates, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::IMonoSslStream::AuthenticateAsClient");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AuthenticateAsClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetHost), ::il2cpp_utils::ExtractType(clientCertificates), ::il2cpp_utils::ExtractType(enabledSslProtocols), ::il2cpp_utils::ExtractType(checkCertificateRevocation)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, targetHost, clientCertificates, enabledSslProtocols, checkCertificateRevocation);
}
// Autogenerated method: Mono.Security.Interface.IMonoSslStream.AuthenticateAsServer
void Mono::Security::Interface::IMonoSslStream::AuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate* serverCertificate, bool clientCertificateRequired, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::IMonoSslStream::AuthenticateAsServer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AuthenticateAsServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverCertificate), ::il2cpp_utils::ExtractType(clientCertificateRequired), ::il2cpp_utils::ExtractType(enabledSslProtocols), ::il2cpp_utils::ExtractType(checkCertificateRevocation)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serverCertificate, clientCertificateRequired, enabledSslProtocols, checkCertificateRevocation);
}
// Autogenerated method: Mono.Security.Interface.IMonoSslStream.Read
int Mono::Security::Interface::IMonoSslStream::Read(::Array<uint8_t>* buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::IMonoSslStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Mono.Security.Interface.IMonoSslStream.Write
void Mono::Security::Interface::IMonoSslStream::Write(::Array<uint8_t>* buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::IMonoSslStream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Mono.Security.Interface.IMonoSslStream.BeginRead
System::IAsyncResult* Mono::Security::Interface::IMonoSslStream::BeginRead(::Array<uint8_t>* buffer, int offset, int count, System::AsyncCallback* asyncCallback, ::Il2CppObject* asyncState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::IMonoSslStream::BeginRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(asyncCallback), ::il2cpp_utils::ExtractType(asyncState)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, asyncCallback, asyncState);
}
// Autogenerated method: Mono.Security.Interface.IMonoSslStream.EndRead
int Mono::Security::Interface::IMonoSslStream::EndRead(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::IMonoSslStream::EndRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: Mono.Security.Interface.IMonoSslStream.BeginWrite
System::IAsyncResult* Mono::Security::Interface::IMonoSslStream::BeginWrite(::Array<uint8_t>* buffer, int offset, int count, System::AsyncCallback* asyncCallback, ::Il2CppObject* asyncState) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::IMonoSslStream::BeginWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(asyncCallback), ::il2cpp_utils::ExtractType(asyncState)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, asyncCallback, asyncState);
}
// Autogenerated method: Mono.Security.Interface.IMonoSslStream.EndWrite
void Mono::Security::Interface::IMonoSslStream::EndWrite(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::IMonoSslStream::EndWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: Mono.Security.Interface.IMonoSslStream.get_IsAuthenticated
bool Mono::Security::Interface::IMonoSslStream::get_IsAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::IMonoSslStream::get_IsAuthenticated");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsAuthenticated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.IMonoSslStream.get_CanRead
bool Mono::Security::Interface::IMonoSslStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::IMonoSslStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.IMonoSslStream.get_CanWrite
bool Mono::Security::Interface::IMonoSslStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::IMonoSslStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.IMonoSslStream.get_Length
int64_t Mono::Security::Interface::IMonoSslStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::IMonoSslStream::get_Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.IMonoSslStream.get_Position
int64_t Mono::Security::Interface::IMonoSslStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::IMonoSslStream::get_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.IMonoSslStream.SetLength
void Mono::Security::Interface::IMonoSslStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::IMonoSslStream::SetLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Interface.IMonoSslStream.get_AuthenticatedStream
System::Net::Security::AuthenticatedStream* Mono::Security::Interface::IMonoSslStream::get_AuthenticatedStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::IMonoSslStream::get_AuthenticatedStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AuthenticatedStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Security::AuthenticatedStream*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.IMonoSslStream.get_ReadTimeout
int Mono::Security::Interface::IMonoSslStream::get_ReadTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::IMonoSslStream::get_ReadTimeout");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReadTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.IMonoSslStream.get_WriteTimeout
int Mono::Security::Interface::IMonoSslStream::get_WriteTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::IMonoSslStream::get_WriteTimeout");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WriteTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.IMonoSslStream.get_InternalLocalCertificate
System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Security::Interface::IMonoSslStream::get_InternalLocalCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::IMonoSslStream::get_InternalLocalCertificate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InternalLocalCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: IMonoSslStream::AuthenticateAsClient
// Il2CppName: AuthenticateAsClient
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IMonoSslStream::*)(::Il2CppString*, System::Security::Cryptography::X509Certificates::X509CertificateCollection*, System::Security::Authentication::SslProtocols, bool)>(&IMonoSslStream::AuthenticateAsClient)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMonoSslStream*), "AuthenticateAsClient", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509CertificateCollection*>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Authentication::SslProtocols>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: IMonoSslStream::AuthenticateAsServer
// Il2CppName: AuthenticateAsServer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IMonoSslStream::*)(System::Security::Cryptography::X509Certificates::X509Certificate*, bool, System::Security::Authentication::SslProtocols, bool)>(&IMonoSslStream::AuthenticateAsServer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMonoSslStream*), "AuthenticateAsServer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509Certificate*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Authentication::SslProtocols>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: IMonoSslStream::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (IMonoSslStream::*)(::Array<uint8_t>*, int, int)>(&IMonoSslStream::Read)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMonoSslStream*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: IMonoSslStream::Write
// Il2CppName: Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IMonoSslStream::*)(::Array<uint8_t>*, int, int)>(&IMonoSslStream::Write)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMonoSslStream*), "Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: IMonoSslStream::BeginRead
// Il2CppName: BeginRead
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (IMonoSslStream::*)(::Array<uint8_t>*, int, int, System::AsyncCallback*, ::Il2CppObject*)>(&IMonoSslStream::BeginRead)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMonoSslStream*), "BeginRead", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: IMonoSslStream::EndRead
// Il2CppName: EndRead
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (IMonoSslStream::*)(System::IAsyncResult*)>(&IMonoSslStream::EndRead)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMonoSslStream*), "EndRead", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Writing MetadataGetter for method: IMonoSslStream::BeginWrite
// Il2CppName: BeginWrite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (IMonoSslStream::*)(::Array<uint8_t>*, int, int, System::AsyncCallback*, ::Il2CppObject*)>(&IMonoSslStream::BeginWrite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMonoSslStream*), "BeginWrite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: IMonoSslStream::EndWrite
// Il2CppName: EndWrite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IMonoSslStream::*)(System::IAsyncResult*)>(&IMonoSslStream::EndWrite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMonoSslStream*), "EndWrite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Writing MetadataGetter for method: IMonoSslStream::get_IsAuthenticated
// Il2CppName: get_IsAuthenticated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (IMonoSslStream::*)()>(&IMonoSslStream::get_IsAuthenticated)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMonoSslStream*), "get_IsAuthenticated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IMonoSslStream::get_CanRead
// Il2CppName: get_CanRead
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (IMonoSslStream::*)()>(&IMonoSslStream::get_CanRead)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMonoSslStream*), "get_CanRead", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IMonoSslStream::get_CanWrite
// Il2CppName: get_CanWrite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (IMonoSslStream::*)()>(&IMonoSslStream::get_CanWrite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMonoSslStream*), "get_CanWrite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IMonoSslStream::get_Length
// Il2CppName: get_Length
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (IMonoSslStream::*)()>(&IMonoSslStream::get_Length)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMonoSslStream*), "get_Length", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IMonoSslStream::get_Position
// Il2CppName: get_Position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (IMonoSslStream::*)()>(&IMonoSslStream::get_Position)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMonoSslStream*), "get_Position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IMonoSslStream::SetLength
// Il2CppName: SetLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IMonoSslStream::*)(int64_t)>(&IMonoSslStream::SetLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMonoSslStream*), "SetLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: IMonoSslStream::get_AuthenticatedStream
// Il2CppName: get_AuthenticatedStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::Security::AuthenticatedStream* (IMonoSslStream::*)()>(&IMonoSslStream::get_AuthenticatedStream)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMonoSslStream*), "get_AuthenticatedStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IMonoSslStream::get_ReadTimeout
// Il2CppName: get_ReadTimeout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (IMonoSslStream::*)()>(&IMonoSslStream::get_ReadTimeout)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMonoSslStream*), "get_ReadTimeout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IMonoSslStream::get_WriteTimeout
// Il2CppName: get_WriteTimeout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (IMonoSslStream::*)()>(&IMonoSslStream::get_WriteTimeout)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMonoSslStream*), "get_WriteTimeout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IMonoSslStream::get_InternalLocalCertificate
// Il2CppName: get_InternalLocalCertificate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::X509Certificates::X509Certificate* (IMonoSslStream::*)()>(&IMonoSslStream::get_InternalLocalCertificate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IMonoSslStream*), "get_InternalLocalCertificate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Interface.MonoTlsConnectionInfo
#include "Mono/Security/Interface/MonoTlsConnectionInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Interface.MonoTlsConnectionInfo.get_CipherSuiteCode
Mono::Security::Interface::CipherSuiteCode Mono::Security::Interface::MonoTlsConnectionInfo::get_CipherSuiteCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsConnectionInfo::get_CipherSuiteCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CipherSuiteCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::CipherSuiteCode, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsConnectionInfo.set_CipherSuiteCode
void Mono::Security::Interface::MonoTlsConnectionInfo::set_CipherSuiteCode(Mono::Security::Interface::CipherSuiteCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsConnectionInfo::set_CipherSuiteCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CipherSuiteCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsConnectionInfo.get_ProtocolVersion
Mono::Security::Interface::TlsProtocols Mono::Security::Interface::MonoTlsConnectionInfo::get_ProtocolVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsConnectionInfo::get_ProtocolVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProtocolVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::TlsProtocols, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsConnectionInfo.set_ProtocolVersion
void Mono::Security::Interface::MonoTlsConnectionInfo::set_ProtocolVersion(Mono::Security::Interface::TlsProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsConnectionInfo::set_ProtocolVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ProtocolVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsConnectionInfo.set_PeerDomainName
void Mono::Security::Interface::MonoTlsConnectionInfo::set_PeerDomainName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsConnectionInfo::set_PeerDomainName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PeerDomainName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsConnectionInfo.ToString
::Il2CppString* Mono::Security::Interface::MonoTlsConnectionInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsConnectionInfo::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MonoTlsConnectionInfo::get_CipherSuiteCode
// Il2CppName: get_CipherSuiteCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::Interface::CipherSuiteCode (MonoTlsConnectionInfo::*)()>(&MonoTlsConnectionInfo::get_CipherSuiteCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsConnectionInfo*), "get_CipherSuiteCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MonoTlsConnectionInfo::set_CipherSuiteCode
// Il2CppName: set_CipherSuiteCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MonoTlsConnectionInfo::*)(Mono::Security::Interface::CipherSuiteCode)>(&MonoTlsConnectionInfo::set_CipherSuiteCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsConnectionInfo*), "set_CipherSuiteCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::Interface::CipherSuiteCode>()});
  }
};
// Writing MetadataGetter for method: MonoTlsConnectionInfo::get_ProtocolVersion
// Il2CppName: get_ProtocolVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::Interface::TlsProtocols (MonoTlsConnectionInfo::*)()>(&MonoTlsConnectionInfo::get_ProtocolVersion)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsConnectionInfo*), "get_ProtocolVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MonoTlsConnectionInfo::set_ProtocolVersion
// Il2CppName: set_ProtocolVersion
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MonoTlsConnectionInfo::*)(Mono::Security::Interface::TlsProtocols)>(&MonoTlsConnectionInfo::set_ProtocolVersion)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsConnectionInfo*), "set_ProtocolVersion", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::Interface::TlsProtocols>()});
  }
};
// Writing MetadataGetter for method: MonoTlsConnectionInfo::set_PeerDomainName
// Il2CppName: set_PeerDomainName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MonoTlsConnectionInfo::*)(::Il2CppString*)>(&MonoTlsConnectionInfo::set_PeerDomainName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsConnectionInfo*), "set_PeerDomainName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: MonoTlsConnectionInfo::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (MonoTlsConnectionInfo::*)()>(&MonoTlsConnectionInfo::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsConnectionInfo*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MonoTlsConnectionInfo::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MonoTlsConnectionInfo::*)()>(&MonoTlsConnectionInfo::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsConnectionInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MonoTlsConnectionInfo::*)()>(&MonoTlsConnectionInfo::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsConnectionInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Interface.MonoSslPolicyErrors
#include "Mono/Security/Interface/MonoSslPolicyErrors.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.MonoSslPolicyErrors None
Mono::Security::Interface::MonoSslPolicyErrors Mono::Security::Interface::MonoSslPolicyErrors::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoSslPolicyErrors::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::MonoSslPolicyErrors>("Mono.Security.Interface", "MonoSslPolicyErrors", "None"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.MonoSslPolicyErrors None
void Mono::Security::Interface::MonoSslPolicyErrors::_set_None(Mono::Security::Interface::MonoSslPolicyErrors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoSslPolicyErrors::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "MonoSslPolicyErrors", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.MonoSslPolicyErrors RemoteCertificateNotAvailable
Mono::Security::Interface::MonoSslPolicyErrors Mono::Security::Interface::MonoSslPolicyErrors::_get_RemoteCertificateNotAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoSslPolicyErrors::_get_RemoteCertificateNotAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::MonoSslPolicyErrors>("Mono.Security.Interface", "MonoSslPolicyErrors", "RemoteCertificateNotAvailable"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.MonoSslPolicyErrors RemoteCertificateNotAvailable
void Mono::Security::Interface::MonoSslPolicyErrors::_set_RemoteCertificateNotAvailable(Mono::Security::Interface::MonoSslPolicyErrors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoSslPolicyErrors::_set_RemoteCertificateNotAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "MonoSslPolicyErrors", "RemoteCertificateNotAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.MonoSslPolicyErrors RemoteCertificateNameMismatch
Mono::Security::Interface::MonoSslPolicyErrors Mono::Security::Interface::MonoSslPolicyErrors::_get_RemoteCertificateNameMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoSslPolicyErrors::_get_RemoteCertificateNameMismatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::MonoSslPolicyErrors>("Mono.Security.Interface", "MonoSslPolicyErrors", "RemoteCertificateNameMismatch"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.MonoSslPolicyErrors RemoteCertificateNameMismatch
void Mono::Security::Interface::MonoSslPolicyErrors::_set_RemoteCertificateNameMismatch(Mono::Security::Interface::MonoSslPolicyErrors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoSslPolicyErrors::_set_RemoteCertificateNameMismatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "MonoSslPolicyErrors", "RemoteCertificateNameMismatch", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.MonoSslPolicyErrors RemoteCertificateChainErrors
Mono::Security::Interface::MonoSslPolicyErrors Mono::Security::Interface::MonoSslPolicyErrors::_get_RemoteCertificateChainErrors() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoSslPolicyErrors::_get_RemoteCertificateChainErrors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::MonoSslPolicyErrors>("Mono.Security.Interface", "MonoSslPolicyErrors", "RemoteCertificateChainErrors"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.MonoSslPolicyErrors RemoteCertificateChainErrors
void Mono::Security::Interface::MonoSslPolicyErrors::_set_RemoteCertificateChainErrors(Mono::Security::Interface::MonoSslPolicyErrors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoSslPolicyErrors::_set_RemoteCertificateChainErrors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "MonoSslPolicyErrors", "RemoteCertificateChainErrors", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Interface.MonoRemoteCertificateValidationCallback
#include "Mono/Security/Interface/MonoRemoteCertificateValidationCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: Mono.Security.Interface.MonoSslPolicyErrors
#include "Mono/Security/Interface/MonoSslPolicyErrors.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Interface.MonoRemoteCertificateValidationCallback.Invoke
bool Mono::Security::Interface::MonoRemoteCertificateValidationCallback::Invoke(::Il2CppString* targetHost, System::Security::Cryptography::X509Certificates::X509Certificate* certificate, System::Security::Cryptography::X509Certificates::X509Chain* chain, Mono::Security::Interface::MonoSslPolicyErrors sslPolicyErrors) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoRemoteCertificateValidationCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetHost), ::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(sslPolicyErrors)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, targetHost, certificate, chain, sslPolicyErrors);
}
// Autogenerated method: Mono.Security.Interface.MonoRemoteCertificateValidationCallback.BeginInvoke
System::IAsyncResult* Mono::Security::Interface::MonoRemoteCertificateValidationCallback::BeginInvoke(::Il2CppString* targetHost, System::Security::Cryptography::X509Certificates::X509Certificate* certificate, System::Security::Cryptography::X509Certificates::X509Chain* chain, Mono::Security::Interface::MonoSslPolicyErrors sslPolicyErrors, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoRemoteCertificateValidationCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetHost), ::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(sslPolicyErrors), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, targetHost, certificate, chain, sslPolicyErrors, callback, object);
}
// Autogenerated method: Mono.Security.Interface.MonoRemoteCertificateValidationCallback.EndInvoke
bool Mono::Security::Interface::MonoRemoteCertificateValidationCallback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoRemoteCertificateValidationCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: MonoRemoteCertificateValidationCallback::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MonoRemoteCertificateValidationCallback::*)(::Il2CppObject*, System::IntPtr)>(&MonoRemoteCertificateValidationCallback::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoRemoteCertificateValidationCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MonoRemoteCertificateValidationCallback::*)(::Il2CppObject*, System::IntPtr)>(&MonoRemoteCertificateValidationCallback::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoRemoteCertificateValidationCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MonoRemoteCertificateValidationCallback::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MonoRemoteCertificateValidationCallback::*)(::Il2CppString*, System::Security::Cryptography::X509Certificates::X509Certificate*, System::Security::Cryptography::X509Certificates::X509Chain*, Mono::Security::Interface::MonoSslPolicyErrors)>(&MonoRemoteCertificateValidationCallback::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoRemoteCertificateValidationCallback*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509Certificate*>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509Chain*>(), ::il2cpp_utils::ExtractIndependentType<Mono::Security::Interface::MonoSslPolicyErrors>()});
  }
};
// Writing MetadataGetter for method: MonoRemoteCertificateValidationCallback::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (MonoRemoteCertificateValidationCallback::*)(::Il2CppString*, System::Security::Cryptography::X509Certificates::X509Certificate*, System::Security::Cryptography::X509Certificates::X509Chain*, Mono::Security::Interface::MonoSslPolicyErrors, System::AsyncCallback*, ::Il2CppObject*)>(&MonoRemoteCertificateValidationCallback::BeginInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoRemoteCertificateValidationCallback*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509Certificate*>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509Chain*>(), ::il2cpp_utils::ExtractIndependentType<Mono::Security::Interface::MonoSslPolicyErrors>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: MonoRemoteCertificateValidationCallback::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MonoRemoteCertificateValidationCallback::*)(System::IAsyncResult*)>(&MonoRemoteCertificateValidationCallback::EndInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoRemoteCertificateValidationCallback*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Interface.MonoLocalCertificateSelectionCallback
#include "Mono/Security/Interface/MonoLocalCertificateSelectionCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Interface.MonoLocalCertificateSelectionCallback.Invoke
System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Security::Interface::MonoLocalCertificateSelectionCallback::Invoke(::Il2CppString* targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection* localCertificates, System::Security::Cryptography::X509Certificates::X509Certificate* remoteCertificate, ::Array<::Il2CppString*>* acceptableIssuers) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoLocalCertificateSelectionCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetHost), ::il2cpp_utils::ExtractType(localCertificates), ::il2cpp_utils::ExtractType(remoteCertificate), ::il2cpp_utils::ExtractType(acceptableIssuers)})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, targetHost, localCertificates, remoteCertificate, acceptableIssuers);
}
// Autogenerated method: Mono.Security.Interface.MonoLocalCertificateSelectionCallback.BeginInvoke
System::IAsyncResult* Mono::Security::Interface::MonoLocalCertificateSelectionCallback::BeginInvoke(::Il2CppString* targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection* localCertificates, System::Security::Cryptography::X509Certificates::X509Certificate* remoteCertificate, ::Array<::Il2CppString*>* acceptableIssuers, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoLocalCertificateSelectionCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetHost), ::il2cpp_utils::ExtractType(localCertificates), ::il2cpp_utils::ExtractType(remoteCertificate), ::il2cpp_utils::ExtractType(acceptableIssuers), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, targetHost, localCertificates, remoteCertificate, acceptableIssuers, callback, object);
}
// Autogenerated method: Mono.Security.Interface.MonoLocalCertificateSelectionCallback.EndInvoke
System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Security::Interface::MonoLocalCertificateSelectionCallback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoLocalCertificateSelectionCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: MonoLocalCertificateSelectionCallback::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MonoLocalCertificateSelectionCallback::*)(::Il2CppObject*, System::IntPtr)>(&MonoLocalCertificateSelectionCallback::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoLocalCertificateSelectionCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MonoLocalCertificateSelectionCallback::*)(::Il2CppObject*, System::IntPtr)>(&MonoLocalCertificateSelectionCallback::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoLocalCertificateSelectionCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: MonoLocalCertificateSelectionCallback::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::X509Certificates::X509Certificate* (MonoLocalCertificateSelectionCallback::*)(::Il2CppString*, System::Security::Cryptography::X509Certificates::X509CertificateCollection*, System::Security::Cryptography::X509Certificates::X509Certificate*, ::Array<::Il2CppString*>*)>(&MonoLocalCertificateSelectionCallback::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoLocalCertificateSelectionCallback*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509CertificateCollection*>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509Certificate*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: MonoLocalCertificateSelectionCallback::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (MonoLocalCertificateSelectionCallback::*)(::Il2CppString*, System::Security::Cryptography::X509Certificates::X509CertificateCollection*, System::Security::Cryptography::X509Certificates::X509Certificate*, ::Array<::Il2CppString*>*, System::AsyncCallback*, ::Il2CppObject*)>(&MonoLocalCertificateSelectionCallback::BeginInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoLocalCertificateSelectionCallback*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509CertificateCollection*>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509Certificate*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: MonoLocalCertificateSelectionCallback::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::X509Certificates::X509Certificate* (MonoLocalCertificateSelectionCallback::*)(System::IAsyncResult*)>(&MonoLocalCertificateSelectionCallback::EndInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoLocalCertificateSelectionCallback*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Interface.MonoTlsProvider
#include "Mono/Security/Interface/MonoTlsProvider.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: System.Security.Authentication.SslProtocols
#include "System/Security/Authentication/SslProtocols.hpp"
// Including type: Mono.Security.Interface.IMonoSslStream
#include "Mono/Security/Interface/IMonoSslStream.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: System.Net.Security.SslStream
#include "System/Net/Security/SslStream.hpp"
// Including type: Mono.Security.Interface.ICertificateValidator2
#include "Mono/Security/Interface/ICertificateValidator2.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: Mono.Security.Interface.MonoSslPolicyErrors
#include "Mono/Security/Interface/MonoSslPolicyErrors.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Interface.MonoTlsProvider.get_ID
System::Guid Mono::Security::Interface::MonoTlsProvider::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsProvider::get_ID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Guid, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsProvider.get_Name
::Il2CppString* Mono::Security::Interface::MonoTlsProvider::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsProvider::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsProvider.get_SupportsSslStream
bool Mono::Security::Interface::MonoTlsProvider::get_SupportsSslStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsProvider::get_SupportsSslStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportsSslStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsProvider.get_SupportsConnectionInfo
bool Mono::Security::Interface::MonoTlsProvider::get_SupportsConnectionInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsProvider::get_SupportsConnectionInfo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportsConnectionInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsProvider.get_SupportsMonoExtensions
bool Mono::Security::Interface::MonoTlsProvider::get_SupportsMonoExtensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsProvider::get_SupportsMonoExtensions");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportsMonoExtensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsProvider.get_SupportedProtocols
System::Security::Authentication::SslProtocols Mono::Security::Interface::MonoTlsProvider::get_SupportedProtocols() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsProvider::get_SupportedProtocols");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportedProtocols", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Authentication::SslProtocols, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsProvider.CreateSslStream
Mono::Security::Interface::IMonoSslStream* Mono::Security::Interface::MonoTlsProvider::CreateSslStream(System::IO::Stream* innerStream, bool leaveInnerStreamOpen, Mono::Security::Interface::MonoTlsSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsProvider::CreateSslStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSslStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(innerStream), ::il2cpp_utils::ExtractType(leaveInnerStreamOpen), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::IMonoSslStream*, false>(this, ___internal__method, innerStream, leaveInnerStreamOpen, settings);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsProvider.CreateSslStreamInternal
Mono::Security::Interface::IMonoSslStream* Mono::Security::Interface::MonoTlsProvider::CreateSslStreamInternal(System::Net::Security::SslStream* sslStream, System::IO::Stream* innerStream, bool leaveInnerStreamOpen, Mono::Security::Interface::MonoTlsSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsProvider::CreateSslStreamInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSslStreamInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sslStream), ::il2cpp_utils::ExtractType(innerStream), ::il2cpp_utils::ExtractType(leaveInnerStreamOpen), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::IMonoSslStream*, false>(this, ___internal__method, sslStream, innerStream, leaveInnerStreamOpen, settings);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsProvider.ValidateCertificate
bool Mono::Security::Interface::MonoTlsProvider::ValidateCertificate(Mono::Security::Interface::ICertificateValidator2* validator, ::Il2CppString* targetHost, bool serverMode, System::Security::Cryptography::X509Certificates::X509CertificateCollection* certificates, bool wantsChain, System::Security::Cryptography::X509Certificates::X509Chain*& chain, Mono::Security::Interface::MonoSslPolicyErrors& errors, int& status11) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsProvider::ValidateCertificate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(validator), ::il2cpp_utils::ExtractType(targetHost), ::il2cpp_utils::ExtractType(serverMode), ::il2cpp_utils::ExtractType(certificates), ::il2cpp_utils::ExtractType(wantsChain), ::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(errors), ::il2cpp_utils::ExtractType(status11)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, validator, targetHost, serverMode, certificates, wantsChain, chain, errors, status11);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsProvider.get_SupportsCleanShutdown
bool Mono::Security::Interface::MonoTlsProvider::get_SupportsCleanShutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsProvider::get_SupportsCleanShutdown");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SupportsCleanShutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MonoTlsProvider::get_ID
// Il2CppName: get_ID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Guid (MonoTlsProvider::*)()>(&MonoTlsProvider::get_ID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsProvider*), "get_ID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MonoTlsProvider::get_Name
// Il2CppName: get_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (MonoTlsProvider::*)()>(&MonoTlsProvider::get_Name)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsProvider*), "get_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MonoTlsProvider::get_SupportsSslStream
// Il2CppName: get_SupportsSslStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MonoTlsProvider::*)()>(&MonoTlsProvider::get_SupportsSslStream)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsProvider*), "get_SupportsSslStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MonoTlsProvider::get_SupportsConnectionInfo
// Il2CppName: get_SupportsConnectionInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MonoTlsProvider::*)()>(&MonoTlsProvider::get_SupportsConnectionInfo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsProvider*), "get_SupportsConnectionInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MonoTlsProvider::get_SupportsMonoExtensions
// Il2CppName: get_SupportsMonoExtensions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MonoTlsProvider::*)()>(&MonoTlsProvider::get_SupportsMonoExtensions)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsProvider*), "get_SupportsMonoExtensions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MonoTlsProvider::get_SupportedProtocols
// Il2CppName: get_SupportedProtocols
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Authentication::SslProtocols (MonoTlsProvider::*)()>(&MonoTlsProvider::get_SupportedProtocols)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsProvider*), "get_SupportedProtocols", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MonoTlsProvider::CreateSslStream
// Il2CppName: CreateSslStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::Interface::IMonoSslStream* (MonoTlsProvider::*)(System::IO::Stream*, bool, Mono::Security::Interface::MonoTlsSettings*)>(&MonoTlsProvider::CreateSslStream)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsProvider*), "CreateSslStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Mono::Security::Interface::MonoTlsSettings*>()});
  }
};
// Writing MetadataGetter for method: MonoTlsProvider::CreateSslStreamInternal
// Il2CppName: CreateSslStreamInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::Interface::IMonoSslStream* (MonoTlsProvider::*)(System::Net::Security::SslStream*, System::IO::Stream*, bool, Mono::Security::Interface::MonoTlsSettings*)>(&MonoTlsProvider::CreateSslStreamInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsProvider*), "CreateSslStreamInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Security::SslStream*>(), ::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Mono::Security::Interface::MonoTlsSettings*>()});
  }
};
// Writing MetadataGetter for method: MonoTlsProvider::ValidateCertificate
// Il2CppName: ValidateCertificate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MonoTlsProvider::*)(Mono::Security::Interface::ICertificateValidator2*, ::Il2CppString*, bool, System::Security::Cryptography::X509Certificates::X509CertificateCollection*, bool, System::Security::Cryptography::X509Certificates::X509Chain*&, Mono::Security::Interface::MonoSslPolicyErrors&, int&)>(&MonoTlsProvider::ValidateCertificate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsProvider*), "ValidateCertificate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::Interface::ICertificateValidator2*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509CertificateCollection*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509Chain*&>(), ::il2cpp_utils::ExtractIndependentType<Mono::Security::Interface::MonoSslPolicyErrors&>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: MonoTlsProvider::get_SupportsCleanShutdown
// Il2CppName: get_SupportsCleanShutdown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MonoTlsProvider::*)()>(&MonoTlsProvider::get_SupportsCleanShutdown)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsProvider*), "get_SupportsCleanShutdown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MonoTlsProvider::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MonoTlsProvider::*)()>(&MonoTlsProvider::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsProvider*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MonoTlsProvider::*)()>(&MonoTlsProvider::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsProvider*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Interface.MonoTlsProviderFactory
#include "Mono/Security/Interface/MonoTlsProviderFactory.hpp"
// Including type: Mono.Security.Interface.MonoTlsProvider
#include "Mono/Security/Interface/MonoTlsProvider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Interface.MonoTlsProviderFactory.GetProvider
Mono::Security::Interface::MonoTlsProvider* Mono::Security::Interface::MonoTlsProviderFactory::GetProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsProviderFactory::GetProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Interface", "MonoTlsProviderFactory", "GetProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::MonoTlsProvider*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: MonoTlsProviderFactory::GetProvider
// Il2CppName: GetProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::Interface::MonoTlsProvider* (*)()>(&MonoTlsProviderFactory::GetProvider)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsProviderFactory*), "GetProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: Mono.Security.Interface.MonoRemoteCertificateValidationCallback
#include "Mono/Security/Interface/MonoRemoteCertificateValidationCallback.hpp"
// Including type: Mono.Security.Interface.MonoLocalCertificateSelectionCallback
#include "Mono/Security/Interface/MonoLocalCertificateSelectionCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: Mono.Security.Interface.ICertificateValidator
#include "Mono/Security/Interface/ICertificateValidator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Mono.Security.Interface.MonoTlsSettings defaultSettings
Mono::Security::Interface::MonoTlsSettings* Mono::Security::Interface::MonoTlsSettings::_get_defaultSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsSettings::_get_defaultSettings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::MonoTlsSettings*>("Mono.Security.Interface", "MonoTlsSettings", "defaultSettings"));
}
// Autogenerated static field setter
// Set static field: static private Mono.Security.Interface.MonoTlsSettings defaultSettings
void Mono::Security::Interface::MonoTlsSettings::_set_defaultSettings(Mono::Security::Interface::MonoTlsSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsSettings::_set_defaultSettings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "MonoTlsSettings", "defaultSettings", value));
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.get_RemoteCertificateValidationCallback
Mono::Security::Interface::MonoRemoteCertificateValidationCallback* Mono::Security::Interface::MonoTlsSettings::get_RemoteCertificateValidationCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsSettings::get_RemoteCertificateValidationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RemoteCertificateValidationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::MonoRemoteCertificateValidationCallback*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.set_RemoteCertificateValidationCallback
void Mono::Security::Interface::MonoTlsSettings::set_RemoteCertificateValidationCallback(Mono::Security::Interface::MonoRemoteCertificateValidationCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsSettings::set_RemoteCertificateValidationCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RemoteCertificateValidationCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.get_ClientCertificateSelectionCallback
Mono::Security::Interface::MonoLocalCertificateSelectionCallback* Mono::Security::Interface::MonoTlsSettings::get_ClientCertificateSelectionCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsSettings::get_ClientCertificateSelectionCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClientCertificateSelectionCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::MonoLocalCertificateSelectionCallback*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.set_ClientCertificateSelectionCallback
void Mono::Security::Interface::MonoTlsSettings::set_ClientCertificateSelectionCallback(Mono::Security::Interface::MonoLocalCertificateSelectionCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsSettings::set_ClientCertificateSelectionCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ClientCertificateSelectionCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.get_UseServicePointManagerCallback
System::Nullable_1<bool> Mono::Security::Interface::MonoTlsSettings::get_UseServicePointManagerCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsSettings::get_UseServicePointManagerCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseServicePointManagerCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<bool>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.set_UseServicePointManagerCallback
void Mono::Security::Interface::MonoTlsSettings::set_UseServicePointManagerCallback(System::Nullable_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsSettings::set_UseServicePointManagerCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseServicePointManagerCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.get_CallbackNeedsCertificateChain
bool Mono::Security::Interface::MonoTlsSettings::get_CallbackNeedsCertificateChain() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsSettings::get_CallbackNeedsCertificateChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CallbackNeedsCertificateChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.get_CertificateValidationTime
System::Nullable_1<System::DateTime> Mono::Security::Interface::MonoTlsSettings::get_CertificateValidationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsSettings::get_CertificateValidationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CertificateValidationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<System::DateTime>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.set_CertificateValidationTime
void Mono::Security::Interface::MonoTlsSettings::set_CertificateValidationTime(System::Nullable_1<System::DateTime> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsSettings::set_CertificateValidationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CertificateValidationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.get_TrustAnchors
System::Security::Cryptography::X509Certificates::X509CertificateCollection* Mono::Security::Interface::MonoTlsSettings::get_TrustAnchors() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsSettings::get_TrustAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TrustAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::X509Certificates::X509CertificateCollection*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.set_TrustAnchors
void Mono::Security::Interface::MonoTlsSettings::set_TrustAnchors(System::Security::Cryptography::X509Certificates::X509CertificateCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsSettings::set_TrustAnchors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TrustAnchors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.get_UserSettings
::Il2CppObject* Mono::Security::Interface::MonoTlsSettings::get_UserSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsSettings::get_UserSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.set_UserSettings
void Mono::Security::Interface::MonoTlsSettings::set_UserSettings(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsSettings::set_UserSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UserSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.get_CertificateSearchPaths
::Array<::Il2CppString*>* Mono::Security::Interface::MonoTlsSettings::get_CertificateSearchPaths() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsSettings::get_CertificateSearchPaths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CertificateSearchPaths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.set_CertificateSearchPaths
void Mono::Security::Interface::MonoTlsSettings::set_CertificateSearchPaths(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsSettings::set_CertificateSearchPaths");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CertificateSearchPaths", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.get_SendCloseNotify
bool Mono::Security::Interface::MonoTlsSettings::get_SendCloseNotify() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsSettings::get_SendCloseNotify");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SendCloseNotify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.set_SendCloseNotify
void Mono::Security::Interface::MonoTlsSettings::set_SendCloseNotify(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsSettings::set_SendCloseNotify");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SendCloseNotify", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.get_EnabledProtocols
System::Nullable_1<Mono::Security::Interface::TlsProtocols> Mono::Security::Interface::MonoTlsSettings::get_EnabledProtocols() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsSettings::get_EnabledProtocols");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnabledProtocols", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<Mono::Security::Interface::TlsProtocols>, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.set_EnabledProtocols
void Mono::Security::Interface::MonoTlsSettings::set_EnabledProtocols(System::Nullable_1<Mono::Security::Interface::TlsProtocols> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsSettings::set_EnabledProtocols");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnabledProtocols", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.get_EnabledCiphers
::Array<Mono::Security::Interface::CipherSuiteCode>* Mono::Security::Interface::MonoTlsSettings::get_EnabledCiphers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsSettings::get_EnabledCiphers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EnabledCiphers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<Mono::Security::Interface::CipherSuiteCode>*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.set_EnabledCiphers
void Mono::Security::Interface::MonoTlsSettings::set_EnabledCiphers(::Array<Mono::Security::Interface::CipherSuiteCode>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsSettings::set_EnabledCiphers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnabledCiphers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.get_DefaultSettings
Mono::Security::Interface::MonoTlsSettings* Mono::Security::Interface::MonoTlsSettings::get_DefaultSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsSettings::get_DefaultSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Interface", "MonoTlsSettings", "get_DefaultSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::MonoTlsSettings*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.CopyDefaultSettings
Mono::Security::Interface::MonoTlsSettings* Mono::Security::Interface::MonoTlsSettings::CopyDefaultSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsSettings::CopyDefaultSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Interface", "MonoTlsSettings", "CopyDefaultSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::MonoTlsSettings*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.get_CertificateValidator
Mono::Security::Interface::ICertificateValidator* Mono::Security::Interface::MonoTlsSettings::get_CertificateValidator() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsSettings::get_CertificateValidator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CertificateValidator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::ICertificateValidator*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.CloneWithValidator
Mono::Security::Interface::MonoTlsSettings* Mono::Security::Interface::MonoTlsSettings::CloneWithValidator(Mono::Security::Interface::ICertificateValidator* validator) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsSettings::CloneWithValidator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CloneWithValidator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(validator)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::MonoTlsSettings*, false>(this, ___internal__method, validator);
}
// Autogenerated method: Mono.Security.Interface.MonoTlsSettings.Clone
Mono::Security::Interface::MonoTlsSettings* Mono::Security::Interface::MonoTlsSettings::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::MonoTlsSettings::Clone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::MonoTlsSettings*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MonoTlsSettings::get_RemoteCertificateValidationCallback
// Il2CppName: get_RemoteCertificateValidationCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::Interface::MonoRemoteCertificateValidationCallback* (MonoTlsSettings::*)()>(&MonoTlsSettings::get_RemoteCertificateValidationCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsSettings*), "get_RemoteCertificateValidationCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MonoTlsSettings::set_RemoteCertificateValidationCallback
// Il2CppName: set_RemoteCertificateValidationCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MonoTlsSettings::*)(Mono::Security::Interface::MonoRemoteCertificateValidationCallback*)>(&MonoTlsSettings::set_RemoteCertificateValidationCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsSettings*), "set_RemoteCertificateValidationCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::Interface::MonoRemoteCertificateValidationCallback*>()});
  }
};
// Writing MetadataGetter for method: MonoTlsSettings::get_ClientCertificateSelectionCallback
// Il2CppName: get_ClientCertificateSelectionCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::Interface::MonoLocalCertificateSelectionCallback* (MonoTlsSettings::*)()>(&MonoTlsSettings::get_ClientCertificateSelectionCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsSettings*), "get_ClientCertificateSelectionCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MonoTlsSettings::set_ClientCertificateSelectionCallback
// Il2CppName: set_ClientCertificateSelectionCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MonoTlsSettings::*)(Mono::Security::Interface::MonoLocalCertificateSelectionCallback*)>(&MonoTlsSettings::set_ClientCertificateSelectionCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsSettings*), "set_ClientCertificateSelectionCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::Interface::MonoLocalCertificateSelectionCallback*>()});
  }
};
// Writing MetadataGetter for method: MonoTlsSettings::get_UseServicePointManagerCallback
// Il2CppName: get_UseServicePointManagerCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Nullable_1<bool> (MonoTlsSettings::*)()>(&MonoTlsSettings::get_UseServicePointManagerCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsSettings*), "get_UseServicePointManagerCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MonoTlsSettings::set_UseServicePointManagerCallback
// Il2CppName: set_UseServicePointManagerCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MonoTlsSettings::*)(System::Nullable_1<bool>)>(&MonoTlsSettings::set_UseServicePointManagerCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsSettings*), "set_UseServicePointManagerCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Nullable_1<bool>>()});
  }
};
// Writing MetadataGetter for method: MonoTlsSettings::get_CallbackNeedsCertificateChain
// Il2CppName: get_CallbackNeedsCertificateChain
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MonoTlsSettings::*)()>(&MonoTlsSettings::get_CallbackNeedsCertificateChain)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsSettings*), "get_CallbackNeedsCertificateChain", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MonoTlsSettings::get_CertificateValidationTime
// Il2CppName: get_CertificateValidationTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Nullable_1<System::DateTime> (MonoTlsSettings::*)()>(&MonoTlsSettings::get_CertificateValidationTime)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsSettings*), "get_CertificateValidationTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MonoTlsSettings::set_CertificateValidationTime
// Il2CppName: set_CertificateValidationTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MonoTlsSettings::*)(System::Nullable_1<System::DateTime>)>(&MonoTlsSettings::set_CertificateValidationTime)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsSettings*), "set_CertificateValidationTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Nullable_1<System::DateTime>>()});
  }
};
// Writing MetadataGetter for method: MonoTlsSettings::get_TrustAnchors
// Il2CppName: get_TrustAnchors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::X509Certificates::X509CertificateCollection* (MonoTlsSettings::*)()>(&MonoTlsSettings::get_TrustAnchors)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsSettings*), "get_TrustAnchors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MonoTlsSettings::set_TrustAnchors
// Il2CppName: set_TrustAnchors
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MonoTlsSettings::*)(System::Security::Cryptography::X509Certificates::X509CertificateCollection*)>(&MonoTlsSettings::set_TrustAnchors)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsSettings*), "set_TrustAnchors", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509CertificateCollection*>()});
  }
};
// Writing MetadataGetter for method: MonoTlsSettings::get_UserSettings
// Il2CppName: get_UserSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (MonoTlsSettings::*)()>(&MonoTlsSettings::get_UserSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsSettings*), "get_UserSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MonoTlsSettings::set_UserSettings
// Il2CppName: set_UserSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MonoTlsSettings::*)(::Il2CppObject*)>(&MonoTlsSettings::set_UserSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsSettings*), "set_UserSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: MonoTlsSettings::get_CertificateSearchPaths
// Il2CppName: get_CertificateSearchPaths
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (MonoTlsSettings::*)()>(&MonoTlsSettings::get_CertificateSearchPaths)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsSettings*), "get_CertificateSearchPaths", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MonoTlsSettings::set_CertificateSearchPaths
// Il2CppName: set_CertificateSearchPaths
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MonoTlsSettings::*)(::Array<::Il2CppString*>*)>(&MonoTlsSettings::set_CertificateSearchPaths)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsSettings*), "set_CertificateSearchPaths", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: MonoTlsSettings::get_SendCloseNotify
// Il2CppName: get_SendCloseNotify
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MonoTlsSettings::*)()>(&MonoTlsSettings::get_SendCloseNotify)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsSettings*), "get_SendCloseNotify", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MonoTlsSettings::set_SendCloseNotify
// Il2CppName: set_SendCloseNotify
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MonoTlsSettings::*)(bool)>(&MonoTlsSettings::set_SendCloseNotify)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsSettings*), "set_SendCloseNotify", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MonoTlsSettings::get_EnabledProtocols
// Il2CppName: get_EnabledProtocols
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Nullable_1<Mono::Security::Interface::TlsProtocols> (MonoTlsSettings::*)()>(&MonoTlsSettings::get_EnabledProtocols)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsSettings*), "get_EnabledProtocols", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MonoTlsSettings::set_EnabledProtocols
// Il2CppName: set_EnabledProtocols
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MonoTlsSettings::*)(System::Nullable_1<Mono::Security::Interface::TlsProtocols>)>(&MonoTlsSettings::set_EnabledProtocols)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsSettings*), "set_EnabledProtocols", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Nullable_1<Mono::Security::Interface::TlsProtocols>>()});
  }
};
// Writing MetadataGetter for method: MonoTlsSettings::get_EnabledCiphers
// Il2CppName: get_EnabledCiphers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<Mono::Security::Interface::CipherSuiteCode>* (MonoTlsSettings::*)()>(&MonoTlsSettings::get_EnabledCiphers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsSettings*), "get_EnabledCiphers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MonoTlsSettings::set_EnabledCiphers
// Il2CppName: set_EnabledCiphers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MonoTlsSettings::*)(::Array<Mono::Security::Interface::CipherSuiteCode>*)>(&MonoTlsSettings::set_EnabledCiphers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsSettings*), "set_EnabledCiphers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<Mono::Security::Interface::CipherSuiteCode>*>()});
  }
};
// Writing MetadataGetter for method: MonoTlsSettings::get_DefaultSettings
// Il2CppName: get_DefaultSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::Interface::MonoTlsSettings* (*)()>(&MonoTlsSettings::get_DefaultSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsSettings*), "get_DefaultSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MonoTlsSettings::CopyDefaultSettings
// Il2CppName: CopyDefaultSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::Interface::MonoTlsSettings* (*)()>(&MonoTlsSettings::CopyDefaultSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsSettings*), "CopyDefaultSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MonoTlsSettings::get_CertificateValidator
// Il2CppName: get_CertificateValidator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::Interface::ICertificateValidator* (MonoTlsSettings::*)()>(&MonoTlsSettings::get_CertificateValidator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsSettings*), "get_CertificateValidator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MonoTlsSettings::CloneWithValidator
// Il2CppName: CloneWithValidator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::Interface::MonoTlsSettings* (MonoTlsSettings::*)(Mono::Security::Interface::ICertificateValidator*)>(&MonoTlsSettings::CloneWithValidator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsSettings*), "CloneWithValidator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::Interface::ICertificateValidator*>()});
  }
};
// Writing MetadataGetter for method: MonoTlsSettings::Clone
// Il2CppName: Clone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::Interface::MonoTlsSettings* (MonoTlsSettings::*)()>(&MonoTlsSettings::Clone)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsSettings*), "Clone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MonoTlsSettings::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MonoTlsSettings::*)(Mono::Security::Interface::MonoTlsSettings*)>(&MonoTlsSettings::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsSettings*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::Interface::MonoTlsSettings*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MonoTlsSettings::*)(Mono::Security::Interface::MonoTlsSettings*)>(&MonoTlsSettings::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsSettings*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::Interface::MonoTlsSettings*>()});
  }
};
// Writing MetadataGetter for method: MonoTlsSettings::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MonoTlsSettings::*)()>(&MonoTlsSettings::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsSettings*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MonoTlsSettings::*)()>(&MonoTlsSettings::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MonoTlsSettings*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Interface.TlsException
#include "Mono/Security/Interface/TlsException.hpp"
// Including type: Mono.Security.Interface.Alert
#include "Mono/Security/Interface/Alert.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: TlsException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TlsException::*)(Mono::Security::Interface::Alert*, ::Il2CppString*)>(&TlsException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TlsException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::Interface::Alert*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TlsException::*)(Mono::Security::Interface::Alert*, ::Il2CppString*)>(&TlsException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TlsException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::Interface::Alert*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: TlsException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TlsException::*)(Mono::Security::Interface::AlertDescription, ::Il2CppString*)>(&TlsException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TlsException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::Interface::AlertDescription>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TlsException::*)(Mono::Security::Interface::AlertDescription, ::Il2CppString*)>(&TlsException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TlsException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::Interface::AlertDescription>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Interface.TlsProtocols
#include "Mono/Security/Interface/TlsProtocols.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.TlsProtocols Zero
Mono::Security::Interface::TlsProtocols Mono::Security::Interface::TlsProtocols::_get_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::TlsProtocols::_get_Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::TlsProtocols>("Mono.Security.Interface", "TlsProtocols", "Zero"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.TlsProtocols Zero
void Mono::Security::Interface::TlsProtocols::_set_Zero(Mono::Security::Interface::TlsProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::TlsProtocols::_set_Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "TlsProtocols", "Zero", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.TlsProtocols Tls10Client
Mono::Security::Interface::TlsProtocols Mono::Security::Interface::TlsProtocols::_get_Tls10Client() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::TlsProtocols::_get_Tls10Client");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::TlsProtocols>("Mono.Security.Interface", "TlsProtocols", "Tls10Client"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.TlsProtocols Tls10Client
void Mono::Security::Interface::TlsProtocols::_set_Tls10Client(Mono::Security::Interface::TlsProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::TlsProtocols::_set_Tls10Client");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "TlsProtocols", "Tls10Client", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.TlsProtocols Tls10Server
Mono::Security::Interface::TlsProtocols Mono::Security::Interface::TlsProtocols::_get_Tls10Server() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::TlsProtocols::_get_Tls10Server");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::TlsProtocols>("Mono.Security.Interface", "TlsProtocols", "Tls10Server"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.TlsProtocols Tls10Server
void Mono::Security::Interface::TlsProtocols::_set_Tls10Server(Mono::Security::Interface::TlsProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::TlsProtocols::_set_Tls10Server");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "TlsProtocols", "Tls10Server", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.TlsProtocols Tls10
Mono::Security::Interface::TlsProtocols Mono::Security::Interface::TlsProtocols::_get_Tls10() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::TlsProtocols::_get_Tls10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::TlsProtocols>("Mono.Security.Interface", "TlsProtocols", "Tls10"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.TlsProtocols Tls10
void Mono::Security::Interface::TlsProtocols::_set_Tls10(Mono::Security::Interface::TlsProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::TlsProtocols::_set_Tls10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "TlsProtocols", "Tls10", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.TlsProtocols Tls11Client
Mono::Security::Interface::TlsProtocols Mono::Security::Interface::TlsProtocols::_get_Tls11Client() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::TlsProtocols::_get_Tls11Client");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::TlsProtocols>("Mono.Security.Interface", "TlsProtocols", "Tls11Client"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.TlsProtocols Tls11Client
void Mono::Security::Interface::TlsProtocols::_set_Tls11Client(Mono::Security::Interface::TlsProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::TlsProtocols::_set_Tls11Client");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "TlsProtocols", "Tls11Client", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.TlsProtocols Tls11Server
Mono::Security::Interface::TlsProtocols Mono::Security::Interface::TlsProtocols::_get_Tls11Server() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::TlsProtocols::_get_Tls11Server");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::TlsProtocols>("Mono.Security.Interface", "TlsProtocols", "Tls11Server"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.TlsProtocols Tls11Server
void Mono::Security::Interface::TlsProtocols::_set_Tls11Server(Mono::Security::Interface::TlsProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::TlsProtocols::_set_Tls11Server");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "TlsProtocols", "Tls11Server", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.TlsProtocols Tls11
Mono::Security::Interface::TlsProtocols Mono::Security::Interface::TlsProtocols::_get_Tls11() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::TlsProtocols::_get_Tls11");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::TlsProtocols>("Mono.Security.Interface", "TlsProtocols", "Tls11"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.TlsProtocols Tls11
void Mono::Security::Interface::TlsProtocols::_set_Tls11(Mono::Security::Interface::TlsProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::TlsProtocols::_set_Tls11");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "TlsProtocols", "Tls11", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.TlsProtocols Tls12Client
Mono::Security::Interface::TlsProtocols Mono::Security::Interface::TlsProtocols::_get_Tls12Client() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::TlsProtocols::_get_Tls12Client");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::TlsProtocols>("Mono.Security.Interface", "TlsProtocols", "Tls12Client"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.TlsProtocols Tls12Client
void Mono::Security::Interface::TlsProtocols::_set_Tls12Client(Mono::Security::Interface::TlsProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::TlsProtocols::_set_Tls12Client");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "TlsProtocols", "Tls12Client", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.TlsProtocols Tls12Server
Mono::Security::Interface::TlsProtocols Mono::Security::Interface::TlsProtocols::_get_Tls12Server() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::TlsProtocols::_get_Tls12Server");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::TlsProtocols>("Mono.Security.Interface", "TlsProtocols", "Tls12Server"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.TlsProtocols Tls12Server
void Mono::Security::Interface::TlsProtocols::_set_Tls12Server(Mono::Security::Interface::TlsProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::TlsProtocols::_set_Tls12Server");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "TlsProtocols", "Tls12Server", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.TlsProtocols Tls12
Mono::Security::Interface::TlsProtocols Mono::Security::Interface::TlsProtocols::_get_Tls12() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::TlsProtocols::_get_Tls12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::TlsProtocols>("Mono.Security.Interface", "TlsProtocols", "Tls12"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.TlsProtocols Tls12
void Mono::Security::Interface::TlsProtocols::_set_Tls12(Mono::Security::Interface::TlsProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::TlsProtocols::_set_Tls12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "TlsProtocols", "Tls12", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.TlsProtocols ClientMask
Mono::Security::Interface::TlsProtocols Mono::Security::Interface::TlsProtocols::_get_ClientMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::TlsProtocols::_get_ClientMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::TlsProtocols>("Mono.Security.Interface", "TlsProtocols", "ClientMask"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.TlsProtocols ClientMask
void Mono::Security::Interface::TlsProtocols::_set_ClientMask(Mono::Security::Interface::TlsProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::TlsProtocols::_set_ClientMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "TlsProtocols", "ClientMask", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Security.Interface.TlsProtocols ServerMask
Mono::Security::Interface::TlsProtocols Mono::Security::Interface::TlsProtocols::_get_ServerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::TlsProtocols::_get_ServerMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::TlsProtocols>("Mono.Security.Interface", "TlsProtocols", "ServerMask"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Security.Interface.TlsProtocols ServerMask
void Mono::Security::Interface::TlsProtocols::_set_ServerMask(Mono::Security::Interface::TlsProtocols value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Interface::TlsProtocols::_set_ServerMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Interface", "TlsProtocols", "ServerMask", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Cryptography.ARC4Managed
#include "Mono/Security/Cryptography/ARC4Managed.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.get_CanTransformMultipleBlocks
bool Mono::Security::Cryptography::ARC4Managed::get_CanTransformMultipleBlocks() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::ARC4Managed::get_CanTransformMultipleBlocks");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanTransformMultipleBlocks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.get_InputBlockSize
int Mono::Security::Cryptography::ARC4Managed::get_InputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::ARC4Managed::get_InputBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InputBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.get_OutputBlockSize
int Mono::Security::Cryptography::ARC4Managed::get_OutputBlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::ARC4Managed::get_OutputBlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OutputBlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.KeySetup
void Mono::Security::Cryptography::ARC4Managed::KeySetup(::Array<uint8_t>* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::ARC4Managed::KeySetup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "KeySetup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.CheckInput
void Mono::Security::Cryptography::ARC4Managed::CheckInput(::Array<uint8_t>* inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::ARC4Managed::CheckInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.TransformBlock
int Mono::Security::Cryptography::ARC4Managed::TransformBlock(::Array<uint8_t>* inputBuffer, int inputOffset, int inputCount, ::Array<uint8_t>* outputBuffer, int outputOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::ARC4Managed::TransformBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputOffset)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount, outputBuffer, outputOffset);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.InternalTransformBlock
int Mono::Security::Cryptography::ARC4Managed::InternalTransformBlock(::Array<uint8_t>* inputBuffer, int inputOffset, int inputCount, ::Array<uint8_t>* outputBuffer, int outputOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::ARC4Managed::InternalTransformBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalTransformBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount), ::il2cpp_utils::ExtractType(outputBuffer), ::il2cpp_utils::ExtractType(outputOffset)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount, outputBuffer, outputOffset);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.TransformFinalBlock
::Array<uint8_t>* Mono::Security::Cryptography::ARC4Managed::TransformFinalBlock(::Array<uint8_t>* inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::ARC4Managed::TransformFinalBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TransformFinalBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.Finalize
void Mono::Security::Cryptography::ARC4Managed::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::ARC4Managed::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.Dispose
void Mono::Security::Cryptography::ARC4Managed::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::ARC4Managed::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.get_Key
::Array<uint8_t>* Mono::Security::Cryptography::ARC4Managed::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::ARC4Managed::get_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.set_Key
void Mono::Security::Cryptography::ARC4Managed::set_Key(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::ARC4Managed::set_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.CreateEncryptor
System::Security::Cryptography::ICryptoTransform* Mono::Security::Cryptography::ARC4Managed::CreateEncryptor(::Array<uint8_t>* rgbKey, ::Array<uint8_t>* rgvIV) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::ARC4Managed::CreateEncryptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateEncryptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbKey), ::il2cpp_utils::ExtractType(rgvIV)})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, rgbKey, rgvIV);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.CreateDecryptor
System::Security::Cryptography::ICryptoTransform* Mono::Security::Cryptography::ARC4Managed::CreateDecryptor(::Array<uint8_t>* rgbKey, ::Array<uint8_t>* rgvIV) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::ARC4Managed::CreateDecryptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDecryptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbKey), ::il2cpp_utils::ExtractType(rgvIV)})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, rgbKey, rgvIV);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.GenerateIV
void Mono::Security::Cryptography::ARC4Managed::GenerateIV() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::ARC4Managed::GenerateIV");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateIV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.ARC4Managed.GenerateKey
void Mono::Security::Cryptography::ARC4Managed::GenerateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::ARC4Managed::GenerateKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ARC4Managed::get_CanTransformMultipleBlocks
// Il2CppName: get_CanTransformMultipleBlocks
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ARC4Managed::*)()>(&ARC4Managed::get_CanTransformMultipleBlocks)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ARC4Managed*), "get_CanTransformMultipleBlocks", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ARC4Managed::get_InputBlockSize
// Il2CppName: get_InputBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ARC4Managed::*)()>(&ARC4Managed::get_InputBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ARC4Managed*), "get_InputBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ARC4Managed::get_OutputBlockSize
// Il2CppName: get_OutputBlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ARC4Managed::*)()>(&ARC4Managed::get_OutputBlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ARC4Managed*), "get_OutputBlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ARC4Managed::KeySetup
// Il2CppName: KeySetup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ARC4Managed::*)(::Array<uint8_t>*)>(&ARC4Managed::KeySetup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ARC4Managed*), "KeySetup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: ARC4Managed::CheckInput
// Il2CppName: CheckInput
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ARC4Managed::*)(::Array<uint8_t>*, int, int)>(&ARC4Managed::CheckInput)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ARC4Managed*), "CheckInput", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ARC4Managed::TransformBlock
// Il2CppName: TransformBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ARC4Managed::*)(::Array<uint8_t>*, int, int, ::Array<uint8_t>*, int)>(&ARC4Managed::TransformBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ARC4Managed*), "TransformBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ARC4Managed::InternalTransformBlock
// Il2CppName: InternalTransformBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ARC4Managed::*)(::Array<uint8_t>*, int, int, ::Array<uint8_t>*, int)>(&ARC4Managed::InternalTransformBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ARC4Managed*), "InternalTransformBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ARC4Managed::TransformFinalBlock
// Il2CppName: TransformFinalBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (ARC4Managed::*)(::Array<uint8_t>*, int, int)>(&ARC4Managed::TransformFinalBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ARC4Managed*), "TransformFinalBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ARC4Managed::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ARC4Managed::*)()>(&ARC4Managed::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ARC4Managed*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ARC4Managed::*)()>(&ARC4Managed::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ARC4Managed*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ARC4Managed::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ARC4Managed::*)()>(&ARC4Managed::Finalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ARC4Managed*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ARC4Managed::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ARC4Managed::*)(bool)>(&ARC4Managed::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ARC4Managed*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ARC4Managed::get_Key
// Il2CppName: get_Key
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (ARC4Managed::*)()>(&ARC4Managed::get_Key)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ARC4Managed*), "get_Key", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ARC4Managed::set_Key
// Il2CppName: set_Key
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ARC4Managed::*)(::Array<uint8_t>*)>(&ARC4Managed::set_Key)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ARC4Managed*), "set_Key", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: ARC4Managed::CreateEncryptor
// Il2CppName: CreateEncryptor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::ICryptoTransform* (ARC4Managed::*)(::Array<uint8_t>*, ::Array<uint8_t>*)>(&ARC4Managed::CreateEncryptor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ARC4Managed*), "CreateEncryptor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: ARC4Managed::CreateDecryptor
// Il2CppName: CreateDecryptor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::ICryptoTransform* (ARC4Managed::*)(::Array<uint8_t>*, ::Array<uint8_t>*)>(&ARC4Managed::CreateDecryptor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ARC4Managed*), "CreateDecryptor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: ARC4Managed::GenerateIV
// Il2CppName: GenerateIV
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ARC4Managed::*)()>(&ARC4Managed::GenerateIV)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ARC4Managed*), "GenerateIV", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ARC4Managed::GenerateKey
// Il2CppName: GenerateKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ARC4Managed::*)()>(&ARC4Managed::GenerateKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ARC4Managed*), "GenerateKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Cryptography.CryptoConvert
#include "Mono/Security/Cryptography/CryptoConvert.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Cryptography.CryptoConvert.ToInt32LE
int Mono::Security::Cryptography::CryptoConvert::ToInt32LE(::Array<uint8_t>* bytes, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::CryptoConvert::ToInt32LE");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "CryptoConvert", "ToInt32LE", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bytes, offset);
}
// Autogenerated method: Mono.Security.Cryptography.CryptoConvert.ToUInt32LE
uint Mono::Security::Cryptography::CryptoConvert::ToUInt32LE(::Array<uint8_t>* bytes, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::CryptoConvert::ToUInt32LE");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "CryptoConvert", "ToUInt32LE", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bytes, offset);
}
// Autogenerated method: Mono.Security.Cryptography.CryptoConvert.Trim
::Array<uint8_t>* Mono::Security::Cryptography::CryptoConvert::Trim(::Array<uint8_t>* array) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::CryptoConvert::Trim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "CryptoConvert", "Trim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: Mono.Security.Cryptography.CryptoConvert.FromCapiPrivateKeyBlob
System::Security::Cryptography::RSA* Mono::Security::Cryptography::CryptoConvert::FromCapiPrivateKeyBlob(::Array<uint8_t>* blob) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::CryptoConvert::FromCapiPrivateKeyBlob");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "CryptoConvert", "FromCapiPrivateKeyBlob", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blob)})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::RSA*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, blob);
}
// Autogenerated method: Mono.Security.Cryptography.CryptoConvert.FromCapiPrivateKeyBlob
System::Security::Cryptography::RSA* Mono::Security::Cryptography::CryptoConvert::FromCapiPrivateKeyBlob(::Array<uint8_t>* blob, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::CryptoConvert::FromCapiPrivateKeyBlob");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "CryptoConvert", "FromCapiPrivateKeyBlob", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(blob), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::RSA*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, blob, offset);
}
// Autogenerated method: Mono.Security.Cryptography.CryptoConvert.ToHex
::Il2CppString* Mono::Security::Cryptography::CryptoConvert::ToHex(::Array<uint8_t>* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::CryptoConvert::ToHex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "CryptoConvert", "ToHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input);
}
// Writing MetadataGetter for method: CryptoConvert::ToInt32LE
// Il2CppName: ToInt32LE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Array<uint8_t>*, int)>(&CryptoConvert::ToInt32LE)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CryptoConvert*), "ToInt32LE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CryptoConvert::ToUInt32LE
// Il2CppName: ToUInt32LE
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(::Array<uint8_t>*, int)>(&CryptoConvert::ToUInt32LE)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CryptoConvert*), "ToUInt32LE", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CryptoConvert::Trim
// Il2CppName: Trim
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(::Array<uint8_t>*)>(&CryptoConvert::Trim)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CryptoConvert*), "Trim", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: CryptoConvert::FromCapiPrivateKeyBlob
// Il2CppName: FromCapiPrivateKeyBlob
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::RSA* (*)(::Array<uint8_t>*)>(&CryptoConvert::FromCapiPrivateKeyBlob)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CryptoConvert*), "FromCapiPrivateKeyBlob", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: CryptoConvert::FromCapiPrivateKeyBlob
// Il2CppName: FromCapiPrivateKeyBlob
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::RSA* (*)(::Array<uint8_t>*, int)>(&CryptoConvert::FromCapiPrivateKeyBlob)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CryptoConvert*), "FromCapiPrivateKeyBlob", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CryptoConvert::ToHex
// Il2CppName: ToHex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Array<uint8_t>*)>(&CryptoConvert::ToHex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CryptoConvert*), "ToHex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Cryptography.KeyBuilder
#include "Mono/Security/Cryptography/KeyBuilder.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.RandomNumberGenerator rng
System::Security::Cryptography::RandomNumberGenerator* Mono::Security::Cryptography::KeyBuilder::_get_rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyBuilder::_get_rng");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Security::Cryptography::RandomNumberGenerator*>("Mono.Security.Cryptography", "KeyBuilder", "rng"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.RandomNumberGenerator rng
void Mono::Security::Cryptography::KeyBuilder::_set_rng(System::Security::Cryptography::RandomNumberGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyBuilder::_set_rng");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "KeyBuilder", "rng", value));
}
// Autogenerated method: Mono.Security.Cryptography.KeyBuilder.get_Rng
System::Security::Cryptography::RandomNumberGenerator* Mono::Security::Cryptography::KeyBuilder::get_Rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyBuilder::get_Rng");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyBuilder", "get_Rng", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::RandomNumberGenerator*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.KeyBuilder.Key
::Array<uint8_t>* Mono::Security::Cryptography::KeyBuilder::Key(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::KeyBuilder::Key");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "KeyBuilder", "Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, size);
}
// Writing MetadataGetter for method: KeyBuilder::get_Rng
// Il2CppName: get_Rng
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::RandomNumberGenerator* (*)()>(&KeyBuilder::get_Rng)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KeyBuilder*), "get_Rng", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: KeyBuilder::Key
// Il2CppName: Key
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(int)>(&KeyBuilder::Key)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(KeyBuilder*), "Key", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.MD2
#include "Mono/Security/Cryptography/MD2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Cryptography.MD2.Create
Mono::Security::Cryptography::MD2* Mono::Security::Cryptography::MD2::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::MD2::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "MD2", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Cryptography::MD2*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: MD2::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::Cryptography::MD2* (*)()>(&MD2::Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD2*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MD2::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD2::*)()>(&MD2::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD2*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD2::*)()>(&MD2::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD2*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Cryptography.MD2Managed
#include "Mono/Security/Cryptography/MD2Managed.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] PI_SUBST
::Array<uint8_t>* Mono::Security::Cryptography::MD2Managed::_get_PI_SUBST() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::MD2Managed::_get_PI_SUBST");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Mono.Security.Cryptography", "MD2Managed", "PI_SUBST"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] PI_SUBST
void Mono::Security::Cryptography::MD2Managed::_set_PI_SUBST(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::MD2Managed::_set_PI_SUBST");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "MD2Managed", "PI_SUBST", value));
}
// Autogenerated method: Mono.Security.Cryptography.MD2Managed.Padding
::Array<uint8_t>* Mono::Security::Cryptography::MD2Managed::Padding(int nLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::MD2Managed::Padding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nLength)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, nLength);
}
// Autogenerated method: Mono.Security.Cryptography.MD2Managed.MD2Transform
void Mono::Security::Cryptography::MD2Managed::MD2Transform(::Array<uint8_t>* state, ::Array<uint8_t>* checksum, ::Array<uint8_t>* block, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::MD2Managed::MD2Transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MD2Transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(checksum), ::il2cpp_utils::ExtractType(block), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state, checksum, block, index);
}
// Autogenerated method: Mono.Security.Cryptography.MD2Managed..cctor
void Mono::Security::Cryptography::MD2Managed::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::MD2Managed::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "MD2Managed", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.MD2Managed.Initialize
void Mono::Security::Cryptography::MD2Managed::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::MD2Managed::Initialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.MD2Managed.HashCore
void Mono::Security::Cryptography::MD2Managed::HashCore(::Array<uint8_t>* array, int ibStart, int cbSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::MD2Managed::HashCore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HashCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(ibStart), ::il2cpp_utils::ExtractType(cbSize)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, ibStart, cbSize);
}
// Autogenerated method: Mono.Security.Cryptography.MD2Managed.HashFinal
::Array<uint8_t>* Mono::Security::Cryptography::MD2Managed::HashFinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::MD2Managed::HashFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HashFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MD2Managed::Padding
// Il2CppName: Padding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (MD2Managed::*)(int)>(&MD2Managed::Padding)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD2Managed*), "Padding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MD2Managed::MD2Transform
// Il2CppName: MD2Transform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD2Managed::*)(::Array<uint8_t>*, ::Array<uint8_t>*, ::Array<uint8_t>*, int)>(&MD2Managed::MD2Transform)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD2Managed*), "MD2Transform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MD2Managed::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&MD2Managed::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD2Managed*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MD2Managed::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD2Managed::*)()>(&MD2Managed::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD2Managed*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD2Managed::*)()>(&MD2Managed::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD2Managed*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MD2Managed::Initialize
// Il2CppName: Initialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD2Managed::*)()>(&MD2Managed::Initialize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD2Managed*), "Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MD2Managed::HashCore
// Il2CppName: HashCore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD2Managed::*)(::Array<uint8_t>*, int, int)>(&MD2Managed::HashCore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD2Managed*), "HashCore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MD2Managed::HashFinal
// Il2CppName: HashFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (MD2Managed::*)()>(&MD2Managed::HashFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD2Managed*), "HashFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Security.Cryptography.MD4
#include "Mono/Security/Cryptography/MD4.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Cryptography.MD4.Create
Mono::Security::Cryptography::MD4* Mono::Security::Cryptography::MD4::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::MD4::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "MD4", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Cryptography::MD4*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: MD4::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::Cryptography::MD4* (*)()>(&MD4::Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MD4::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD4::*)()>(&MD4::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD4::*)()>(&MD4::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Cryptography.MD4Managed
#include "Mono/Security/Cryptography/MD4Managed.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.Padding
::Array<uint8_t>* Mono::Security::Cryptography::MD4Managed::Padding(int nLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::MD4Managed::Padding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nLength)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, nLength);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.F
uint Mono::Security::Cryptography::MD4Managed::F(uint x, uint y, uint z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::MD4Managed::F");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "F", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.G
uint Mono::Security::Cryptography::MD4Managed::G(uint x, uint y, uint z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::MD4Managed::G");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "G", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.H
uint Mono::Security::Cryptography::MD4Managed::H(uint x, uint y, uint z) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::MD4Managed::H");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "H", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(z)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, x, y, z);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.ROL
uint Mono::Security::Cryptography::MD4Managed::ROL(uint x, uint8_t n) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::MD4Managed::ROL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ROL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, x, n);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.FF
void Mono::Security::Cryptography::MD4Managed::FF(uint& a, uint b, uint c, uint d, uint x, uint8_t s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::MD4Managed::FF");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FF", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, a, b, c, d, x, s);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.GG
void Mono::Security::Cryptography::MD4Managed::GG(uint& a, uint b, uint c, uint d, uint x, uint8_t s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::MD4Managed::GG");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GG", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, a, b, c, d, x, s);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.HH
void Mono::Security::Cryptography::MD4Managed::HH(uint& a, uint b, uint c, uint d, uint x, uint8_t s) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::MD4Managed::HH");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HH", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, a, b, c, d, x, s);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.Encode
void Mono::Security::Cryptography::MD4Managed::Encode(::Array<uint8_t>* output, ::Array<uint>* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::MD4Managed::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, output, input);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.Decode
void Mono::Security::Cryptography::MD4Managed::Decode(::Array<uint>* output, ::Array<uint8_t>* input, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::MD4Managed::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, output, input, index);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.MD4Transform
void Mono::Security::Cryptography::MD4Managed::MD4Transform(::Array<uint>* state, ::Array<uint8_t>* block, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::MD4Managed::MD4Transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MD4Transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(block), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state, block, index);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.Initialize
void Mono::Security::Cryptography::MD4Managed::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::MD4Managed::Initialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.HashCore
void Mono::Security::Cryptography::MD4Managed::HashCore(::Array<uint8_t>* array, int ibStart, int cbSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::MD4Managed::HashCore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HashCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(ibStart), ::il2cpp_utils::ExtractType(cbSize)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, ibStart, cbSize);
}
// Autogenerated method: Mono.Security.Cryptography.MD4Managed.HashFinal
::Array<uint8_t>* Mono::Security::Cryptography::MD4Managed::HashFinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::MD4Managed::HashFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HashFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MD4Managed::Padding
// Il2CppName: Padding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (MD4Managed::*)(int)>(&MD4Managed::Padding)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4Managed*), "Padding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MD4Managed::F
// Il2CppName: F
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (MD4Managed::*)(uint, uint, uint)>(&MD4Managed::F)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4Managed*), "F", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: MD4Managed::G
// Il2CppName: G
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (MD4Managed::*)(uint, uint, uint)>(&MD4Managed::G)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4Managed*), "G", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: MD4Managed::H
// Il2CppName: H
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (MD4Managed::*)(uint, uint, uint)>(&MD4Managed::H)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4Managed*), "H", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: MD4Managed::ROL
// Il2CppName: ROL
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (MD4Managed::*)(uint, uint8_t)>(&MD4Managed::ROL)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4Managed*), "ROL", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint8_t>()});
  }
};
// Writing MetadataGetter for method: MD4Managed::FF
// Il2CppName: FF
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD4Managed::*)(uint&, uint, uint, uint, uint, uint8_t)>(&MD4Managed::FF)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4Managed*), "FF", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint8_t>()});
  }
};
// Writing MetadataGetter for method: MD4Managed::GG
// Il2CppName: GG
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD4Managed::*)(uint&, uint, uint, uint, uint, uint8_t)>(&MD4Managed::GG)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4Managed*), "GG", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint8_t>()});
  }
};
// Writing MetadataGetter for method: MD4Managed::HH
// Il2CppName: HH
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD4Managed::*)(uint&, uint, uint, uint, uint, uint8_t)>(&MD4Managed::HH)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4Managed*), "HH", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint&>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint8_t>()});
  }
};
// Writing MetadataGetter for method: MD4Managed::Encode
// Il2CppName: Encode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD4Managed::*)(::Array<uint8_t>*, ::Array<uint>*)>(&MD4Managed::Encode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4Managed*), "Encode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint>*>()});
  }
};
// Writing MetadataGetter for method: MD4Managed::Decode
// Il2CppName: Decode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD4Managed::*)(::Array<uint>*, ::Array<uint8_t>*, int)>(&MD4Managed::Decode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4Managed*), "Decode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MD4Managed::MD4Transform
// Il2CppName: MD4Transform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD4Managed::*)(::Array<uint>*, ::Array<uint8_t>*, int)>(&MD4Managed::MD4Transform)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4Managed*), "MD4Transform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MD4Managed::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD4Managed::*)()>(&MD4Managed::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4Managed*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD4Managed::*)()>(&MD4Managed::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4Managed*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MD4Managed::Initialize
// Il2CppName: Initialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD4Managed::*)()>(&MD4Managed::Initialize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4Managed*), "Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MD4Managed::HashCore
// Il2CppName: HashCore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD4Managed::*)(::Array<uint8_t>*, int, int)>(&MD4Managed::HashCore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4Managed*), "HashCore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MD4Managed::HashFinal
// Il2CppName: HashFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (MD4Managed::*)()>(&MD4Managed::HashFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD4Managed*), "HashFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Cryptography.PKCS1
#include "Mono/Security/Cryptography/PKCS1.hpp"
// Including type: System.Security.Cryptography.HashAlgorithm
#include "System/Security/Cryptography/HashAlgorithm.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Byte[] emptySHA1
::Array<uint8_t>* Mono::Security::Cryptography::PKCS1::_get_emptySHA1() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::PKCS1::_get_emptySHA1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Mono.Security.Cryptography", "PKCS1", "emptySHA1"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] emptySHA1
void Mono::Security::Cryptography::PKCS1::_set_emptySHA1(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::PKCS1::_set_emptySHA1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "PKCS1", "emptySHA1", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] emptySHA256
::Array<uint8_t>* Mono::Security::Cryptography::PKCS1::_get_emptySHA256() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::PKCS1::_get_emptySHA256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Mono.Security.Cryptography", "PKCS1", "emptySHA256"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] emptySHA256
void Mono::Security::Cryptography::PKCS1::_set_emptySHA256(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::PKCS1::_set_emptySHA256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "PKCS1", "emptySHA256", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] emptySHA384
::Array<uint8_t>* Mono::Security::Cryptography::PKCS1::_get_emptySHA384() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::PKCS1::_get_emptySHA384");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Mono.Security.Cryptography", "PKCS1", "emptySHA384"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] emptySHA384
void Mono::Security::Cryptography::PKCS1::_set_emptySHA384(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::PKCS1::_set_emptySHA384");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "PKCS1", "emptySHA384", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] emptySHA512
::Array<uint8_t>* Mono::Security::Cryptography::PKCS1::_get_emptySHA512() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::PKCS1::_get_emptySHA512");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("Mono.Security.Cryptography", "PKCS1", "emptySHA512"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] emptySHA512
void Mono::Security::Cryptography::PKCS1::_set_emptySHA512(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::PKCS1::_set_emptySHA512");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "PKCS1", "emptySHA512", value));
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.HashNameFromOid
::Il2CppString* Mono::Security::Cryptography::PKCS1::HashNameFromOid(::Il2CppString* oid, bool throwOnError) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::PKCS1::HashNameFromOid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "HashNameFromOid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oid), ::il2cpp_utils::ExtractType(throwOnError)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, oid, throwOnError);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.CreateFromOid
System::Security::Cryptography::HashAlgorithm* Mono::Security::Cryptography::PKCS1::CreateFromOid(::Il2CppString* oid) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::PKCS1::CreateFromOid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "CreateFromOid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(oid)})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::HashAlgorithm*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, oid);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1.CreateFromName
System::Security::Cryptography::HashAlgorithm* Mono::Security::Cryptography::PKCS1::CreateFromName(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::PKCS1::CreateFromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", "CreateFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::HashAlgorithm*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS1..cctor
void Mono::Security::Cryptography::PKCS1::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::PKCS1::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS1", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: PKCS1::HashNameFromOid
// Il2CppName: HashNameFromOid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppString*, bool)>(&PKCS1::HashNameFromOid)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS1*), "HashNameFromOid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PKCS1::CreateFromOid
// Il2CppName: CreateFromOid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::HashAlgorithm* (*)(::Il2CppString*)>(&PKCS1::CreateFromOid)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS1*), "CreateFromOid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: PKCS1::CreateFromName
// Il2CppName: CreateFromName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::HashAlgorithm* (*)(::Il2CppString*)>(&PKCS1::CreateFromName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS1*), "CreateFromName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: PKCS1::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PKCS1::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS1*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Cryptography.PKCS8/PrivateKeyInfo
#include "Mono/Security/Cryptography/PKCS8_PrivateKeyInfo.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
// Including type: System.Security.Cryptography.DSA
#include "System/Security/Cryptography/DSA.hpp"
// Including type: System.Security.Cryptography.DSAParameters
#include "System/Security/Cryptography/DSAParameters.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Cryptography.PKCS8/PrivateKeyInfo.get_PrivateKey
::Array<uint8_t>* Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::get_PrivateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::get_PrivateKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PrivateKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/PrivateKeyInfo.Decode
void Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::Decode(::Array<uint8_t>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/PrivateKeyInfo.RemoveLeadingZero
::Array<uint8_t>* Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::RemoveLeadingZero(::Array<uint8_t>* bigInt) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::RemoveLeadingZero");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS8/PrivateKeyInfo", "RemoveLeadingZero", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bigInt)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bigInt);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/PrivateKeyInfo.Normalize
::Array<uint8_t>* Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::Normalize(::Array<uint8_t>* bigInt, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::Normalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS8/PrivateKeyInfo", "Normalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bigInt), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bigInt, length);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/PrivateKeyInfo.DecodeRSA
System::Security::Cryptography::RSA* Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::DecodeRSA(::Array<uint8_t>* keypair) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::DecodeRSA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS8/PrivateKeyInfo", "DecodeRSA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keypair)})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::RSA*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keypair);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/PrivateKeyInfo.Encode
::Array<uint8_t>* Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::Encode(System::Security::Cryptography::RSA* rsa) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS8/PrivateKeyInfo", "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rsa)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rsa);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/PrivateKeyInfo.DecodeDSA
System::Security::Cryptography::DSA* Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::DecodeDSA(::Array<uint8_t>* privateKey, System::Security::Cryptography::DSAParameters dsaParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::DecodeDSA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS8/PrivateKeyInfo", "DecodeDSA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(privateKey), ::il2cpp_utils::ExtractType(dsaParameters)})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::DSA*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, privateKey, dsaParameters);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/PrivateKeyInfo.Encode
::Array<uint8_t>* Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::Encode(System::Security::Cryptography::DSA* dsa) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS8/PrivateKeyInfo", "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dsa)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dsa);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/PrivateKeyInfo.Encode
::Array<uint8_t>* Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::Encode(System::Security::Cryptography::AsymmetricAlgorithm* aa) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::PKCS8::PrivateKeyInfo::Encode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "PKCS8/PrivateKeyInfo", "Encode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aa)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, aa);
}
// Writing MetadataGetter for method: PKCS8::PrivateKeyInfo::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS8::PrivateKeyInfo::*)(::Array<uint8_t>*)>(&PKCS8::PrivateKeyInfo::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS8::PrivateKeyInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS8::PrivateKeyInfo::*)(::Array<uint8_t>*)>(&PKCS8::PrivateKeyInfo::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS8::PrivateKeyInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: PKCS8::PrivateKeyInfo::get_PrivateKey
// Il2CppName: get_PrivateKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (PKCS8::PrivateKeyInfo::*)()>(&PKCS8::PrivateKeyInfo::get_PrivateKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS8::PrivateKeyInfo*), "get_PrivateKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PKCS8::PrivateKeyInfo::Decode
// Il2CppName: Decode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS8::PrivateKeyInfo::*)(::Array<uint8_t>*)>(&PKCS8::PrivateKeyInfo::Decode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS8::PrivateKeyInfo*), "Decode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: PKCS8::PrivateKeyInfo::RemoveLeadingZero
// Il2CppName: RemoveLeadingZero
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(::Array<uint8_t>*)>(&PKCS8::PrivateKeyInfo::RemoveLeadingZero)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS8::PrivateKeyInfo*), "RemoveLeadingZero", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: PKCS8::PrivateKeyInfo::Normalize
// Il2CppName: Normalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(::Array<uint8_t>*, int)>(&PKCS8::PrivateKeyInfo::Normalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS8::PrivateKeyInfo*), "Normalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PKCS8::PrivateKeyInfo::DecodeRSA
// Il2CppName: DecodeRSA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::RSA* (*)(::Array<uint8_t>*)>(&PKCS8::PrivateKeyInfo::DecodeRSA)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS8::PrivateKeyInfo*), "DecodeRSA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: PKCS8::PrivateKeyInfo::Encode
// Il2CppName: Encode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(System::Security::Cryptography::RSA*)>(&PKCS8::PrivateKeyInfo::Encode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS8::PrivateKeyInfo*), "Encode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::RSA*>()});
  }
};
// Writing MetadataGetter for method: PKCS8::PrivateKeyInfo::DecodeDSA
// Il2CppName: DecodeDSA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::DSA* (*)(::Array<uint8_t>*, System::Security::Cryptography::DSAParameters)>(&PKCS8::PrivateKeyInfo::DecodeDSA)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS8::PrivateKeyInfo*), "DecodeDSA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::DSAParameters>()});
  }
};
// Writing MetadataGetter for method: PKCS8::PrivateKeyInfo::Encode
// Il2CppName: Encode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(System::Security::Cryptography::DSA*)>(&PKCS8::PrivateKeyInfo::Encode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS8::PrivateKeyInfo*), "Encode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::DSA*>()});
  }
};
// Writing MetadataGetter for method: PKCS8::PrivateKeyInfo::Encode
// Il2CppName: Encode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(System::Security::Cryptography::AsymmetricAlgorithm*)>(&PKCS8::PrivateKeyInfo::Encode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS8::PrivateKeyInfo*), "Encode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::AsymmetricAlgorithm*>()});
  }
};
// Writing MetadataGetter for method: PKCS8::PrivateKeyInfo::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS8::PrivateKeyInfo::*)()>(&PKCS8::PrivateKeyInfo::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS8::PrivateKeyInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS8::PrivateKeyInfo::*)()>(&PKCS8::PrivateKeyInfo::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS8::PrivateKeyInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Cryptography.PKCS8/EncryptedPrivateKeyInfo
#include "Mono/Security/Cryptography/PKCS8_EncryptedPrivateKeyInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Cryptography.PKCS8/EncryptedPrivateKeyInfo.get_Algorithm
::Il2CppString* Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::get_Algorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::get_Algorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Algorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/EncryptedPrivateKeyInfo.get_EncryptedData
::Array<uint8_t>* Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::get_EncryptedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::get_EncryptedData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EncryptedData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/EncryptedPrivateKeyInfo.get_Salt
::Array<uint8_t>* Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::get_Salt() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::get_Salt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Salt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/EncryptedPrivateKeyInfo.get_IterationCount
int Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::get_IterationCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::get_IterationCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IterationCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.PKCS8/EncryptedPrivateKeyInfo.Decode
void Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::Decode(::Array<uint8_t>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::PKCS8::EncryptedPrivateKeyInfo::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Writing MetadataGetter for method: PKCS8::EncryptedPrivateKeyInfo::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS8::EncryptedPrivateKeyInfo::*)(::Array<uint8_t>*)>(&PKCS8::EncryptedPrivateKeyInfo::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS8::EncryptedPrivateKeyInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS8::EncryptedPrivateKeyInfo::*)(::Array<uint8_t>*)>(&PKCS8::EncryptedPrivateKeyInfo::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS8::EncryptedPrivateKeyInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: PKCS8::EncryptedPrivateKeyInfo::get_Algorithm
// Il2CppName: get_Algorithm
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (PKCS8::EncryptedPrivateKeyInfo::*)()>(&PKCS8::EncryptedPrivateKeyInfo::get_Algorithm)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS8::EncryptedPrivateKeyInfo*), "get_Algorithm", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PKCS8::EncryptedPrivateKeyInfo::get_EncryptedData
// Il2CppName: get_EncryptedData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (PKCS8::EncryptedPrivateKeyInfo::*)()>(&PKCS8::EncryptedPrivateKeyInfo::get_EncryptedData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS8::EncryptedPrivateKeyInfo*), "get_EncryptedData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PKCS8::EncryptedPrivateKeyInfo::get_Salt
// Il2CppName: get_Salt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (PKCS8::EncryptedPrivateKeyInfo::*)()>(&PKCS8::EncryptedPrivateKeyInfo::get_Salt)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS8::EncryptedPrivateKeyInfo*), "get_Salt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PKCS8::EncryptedPrivateKeyInfo::get_IterationCount
// Il2CppName: get_IterationCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (PKCS8::EncryptedPrivateKeyInfo::*)()>(&PKCS8::EncryptedPrivateKeyInfo::get_IterationCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS8::EncryptedPrivateKeyInfo*), "get_IterationCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PKCS8::EncryptedPrivateKeyInfo::Decode
// Il2CppName: Decode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS8::EncryptedPrivateKeyInfo::*)(::Array<uint8_t>*)>(&PKCS8::EncryptedPrivateKeyInfo::Decode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS8::EncryptedPrivateKeyInfo*), "Decode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: PKCS8::EncryptedPrivateKeyInfo::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS8::EncryptedPrivateKeyInfo::*)()>(&PKCS8::EncryptedPrivateKeyInfo::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS8::EncryptedPrivateKeyInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PKCS8::EncryptedPrivateKeyInfo::*)()>(&PKCS8::EncryptedPrivateKeyInfo::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PKCS8::EncryptedPrivateKeyInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Cryptography.RC4
#include "Mono/Security/Cryptography/RC4.hpp"
// Including type: System.Security.Cryptography.KeySizes
#include "System/Security/Cryptography/KeySizes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.KeySizes[] s_legalBlockSizes
::Array<System::Security::Cryptography::KeySizes*>* Mono::Security::Cryptography::RC4::_get_s_legalBlockSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::RC4::_get_s_legalBlockSizes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<System::Security::Cryptography::KeySizes*>*>("Mono.Security.Cryptography", "RC4", "s_legalBlockSizes"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.KeySizes[] s_legalBlockSizes
void Mono::Security::Cryptography::RC4::_set_s_legalBlockSizes(::Array<System::Security::Cryptography::KeySizes*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::RC4::_set_s_legalBlockSizes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "RC4", "s_legalBlockSizes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.KeySizes[] s_legalKeySizes
::Array<System::Security::Cryptography::KeySizes*>* Mono::Security::Cryptography::RC4::_get_s_legalKeySizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::RC4::_get_s_legalKeySizes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<System::Security::Cryptography::KeySizes*>*>("Mono.Security.Cryptography", "RC4", "s_legalKeySizes"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.KeySizes[] s_legalKeySizes
void Mono::Security::Cryptography::RC4::_set_s_legalKeySizes(::Array<System::Security::Cryptography::KeySizes*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::RC4::_set_s_legalKeySizes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Security.Cryptography", "RC4", "s_legalKeySizes", value));
}
// Autogenerated method: Mono.Security.Cryptography.RC4.Create
Mono::Security::Cryptography::RC4* Mono::Security::Cryptography::RC4::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::RC4::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "RC4", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Cryptography::RC4*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.RC4..cctor
void Mono::Security::Cryptography::RC4::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::RC4::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Cryptography", "RC4", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.RC4.get_IV
::Array<uint8_t>* Mono::Security::Cryptography::RC4::get_IV() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::RC4::get_IV");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.RC4.set_IV
void Mono::Security::Cryptography::RC4::set_IV(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::RC4::set_IV");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: RC4::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::Cryptography::RC4* (*)()>(&RC4::Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC4*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RC4::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&RC4::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC4*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RC4::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC4::*)()>(&RC4::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC4*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC4::*)()>(&RC4::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC4*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RC4::get_IV
// Il2CppName: get_IV
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (RC4::*)()>(&RC4::get_IV)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC4*), "get_IV", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RC4::set_IV
// Il2CppName: set_IV
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC4::*)(::Array<uint8_t>*)>(&RC4::set_IV)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC4*), "set_IV", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Cryptography.RSAManaged
#include "Mono/Security/Cryptography/RSAManaged.hpp"
// Including type: Mono.Security.Cryptography.RSAManaged/KeyGeneratedEventHandler
#include "Mono/Security/Cryptography/RSAManaged_KeyGeneratedEventHandler.hpp"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger.hpp"
// Including type: System.Security.Cryptography.RSAParameters
#include "System/Security/Cryptography/RSAParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.GenerateKeyPair
void Mono::Security::Cryptography::RSAManaged::GenerateKeyPair() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::RSAManaged::GenerateKeyPair");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateKeyPair", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.get_PublicOnly
bool Mono::Security::Cryptography::RSAManaged::get_PublicOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::RSAManaged::get_PublicOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PublicOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.GetPaddedValue
::Array<uint8_t>* Mono::Security::Cryptography::RSAManaged::GetPaddedValue(Mono::Math::BigInteger* value, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::RSAManaged::GetPaddedValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPaddedValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, value, length);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.ExportParameters
System::Security::Cryptography::RSAParameters Mono::Security::Cryptography::RSAManaged::ExportParameters(bool includePrivateParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::RSAManaged::ExportParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExportParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(includePrivateParameters)})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::RSAParameters, false>(this, ___internal__method, includePrivateParameters);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged.ImportParameters
void Mono::Security::Cryptography::RSAManaged::ImportParameters(System::Security::Cryptography::RSAParameters parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::RSAManaged::ImportParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImportParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parameters);
}
// Writing MetadataGetter for method: RSAManaged::GenerateKeyPair
// Il2CppName: GenerateKeyPair
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RSAManaged::*)()>(&RSAManaged::GenerateKeyPair)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RSAManaged*), "GenerateKeyPair", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RSAManaged::get_PublicOnly
// Il2CppName: get_PublicOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (RSAManaged::*)()>(&RSAManaged::get_PublicOnly)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RSAManaged*), "get_PublicOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RSAManaged::GetPaddedValue
// Il2CppName: GetPaddedValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (RSAManaged::*)(Mono::Math::BigInteger*, int)>(&RSAManaged::GetPaddedValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RSAManaged*), "GetPaddedValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RSAManaged::ExportParameters
// Il2CppName: ExportParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::RSAParameters (RSAManaged::*)(bool)>(&RSAManaged::ExportParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RSAManaged*), "ExportParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: RSAManaged::ImportParameters
// Il2CppName: ImportParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RSAManaged::*)(System::Security::Cryptography::RSAParameters)>(&RSAManaged::ImportParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RSAManaged*), "ImportParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::RSAParameters>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Cryptography.RSAManaged/KeyGeneratedEventHandler
#include "Mono/Security/Cryptography/RSAManaged_KeyGeneratedEventHandler.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Cryptography.RSAManaged/KeyGeneratedEventHandler.Invoke
void Mono::Security::Cryptography::RSAManaged::KeyGeneratedEventHandler::Invoke(::Il2CppObject* sender, System::EventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::RSAManaged::KeyGeneratedEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged/KeyGeneratedEventHandler.BeginInvoke
System::IAsyncResult* Mono::Security::Cryptography::RSAManaged::KeyGeneratedEventHandler::BeginInvoke(::Il2CppObject* sender, System::EventArgs* e, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::RSAManaged::KeyGeneratedEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, sender, e, callback, object);
}
// Autogenerated method: Mono.Security.Cryptography.RSAManaged/KeyGeneratedEventHandler.EndInvoke
void Mono::Security::Cryptography::RSAManaged::KeyGeneratedEventHandler::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Cryptography::RSAManaged::KeyGeneratedEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: RSAManaged::KeyGeneratedEventHandler::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RSAManaged::KeyGeneratedEventHandler::*)(::Il2CppObject*, System::IntPtr)>(&RSAManaged::KeyGeneratedEventHandler::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RSAManaged::KeyGeneratedEventHandler*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RSAManaged::KeyGeneratedEventHandler::*)(::Il2CppObject*, System::IntPtr)>(&RSAManaged::KeyGeneratedEventHandler::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RSAManaged::KeyGeneratedEventHandler*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: RSAManaged::KeyGeneratedEventHandler::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RSAManaged::KeyGeneratedEventHandler::*)(::Il2CppObject*, System::EventArgs*)>(&RSAManaged::KeyGeneratedEventHandler::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RSAManaged::KeyGeneratedEventHandler*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::EventArgs*>()});
  }
};
// Writing MetadataGetter for method: RSAManaged::KeyGeneratedEventHandler::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (RSAManaged::KeyGeneratedEventHandler::*)(::Il2CppObject*, System::EventArgs*, System::AsyncCallback*, ::Il2CppObject*)>(&RSAManaged::KeyGeneratedEventHandler::BeginInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RSAManaged::KeyGeneratedEventHandler*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::EventArgs*>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: RSAManaged::KeyGeneratedEventHandler::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RSAManaged::KeyGeneratedEventHandler::*)(System::IAsyncResult*)>(&RSAManaged::KeyGeneratedEventHandler::EndInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RSAManaged::KeyGeneratedEventHandler*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Security.Authenticode.PrivateKey
#include "Mono/Security/Authenticode/PrivateKey.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Security.Authenticode.PrivateKey.get_RSA
System::Security::Cryptography::RSA* Mono::Security::Authenticode::PrivateKey::get_RSA() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Authenticode::PrivateKey::get_RSA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RSA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::RSA*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Security.Authenticode.PrivateKey.DeriveKey
::Array<uint8_t>* Mono::Security::Authenticode::PrivateKey::DeriveKey(::Array<uint8_t>* salt, ::Il2CppString* password) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Authenticode::PrivateKey::DeriveKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeriveKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(salt), ::il2cpp_utils::ExtractType(password)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, salt, password);
}
// Autogenerated method: Mono.Security.Authenticode.PrivateKey.Decode
bool Mono::Security::Authenticode::PrivateKey::Decode(::Array<uint8_t>* pvk, ::Il2CppString* password) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Authenticode::PrivateKey::Decode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Decode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pvk), ::il2cpp_utils::ExtractType(password)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, pvk, password);
}
// Autogenerated method: Mono.Security.Authenticode.PrivateKey.CreateFromFile
Mono::Security::Authenticode::PrivateKey* Mono::Security::Authenticode::PrivateKey::CreateFromFile(::Il2CppString* filename) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Authenticode::PrivateKey::CreateFromFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Authenticode", "PrivateKey", "CreateFromFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filename)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Authenticode::PrivateKey*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, filename);
}
// Autogenerated method: Mono.Security.Authenticode.PrivateKey.CreateFromFile
Mono::Security::Authenticode::PrivateKey* Mono::Security::Authenticode::PrivateKey::CreateFromFile(::Il2CppString* filename, ::Il2CppString* password) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Security::Authenticode::PrivateKey::CreateFromFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Security.Authenticode", "PrivateKey", "CreateFromFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filename), ::il2cpp_utils::ExtractType(password)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Authenticode::PrivateKey*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, filename, password);
}
// Writing MetadataGetter for method: PrivateKey::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PrivateKey::*)(::Array<uint8_t>*, ::Il2CppString*)>(&PrivateKey::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PrivateKey*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PrivateKey::*)(::Array<uint8_t>*, ::Il2CppString*)>(&PrivateKey::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PrivateKey*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: PrivateKey::get_RSA
// Il2CppName: get_RSA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::RSA* (PrivateKey::*)()>(&PrivateKey::get_RSA)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PrivateKey*), "get_RSA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PrivateKey::DeriveKey
// Il2CppName: DeriveKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (PrivateKey::*)(::Array<uint8_t>*, ::Il2CppString*)>(&PrivateKey::DeriveKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PrivateKey*), "DeriveKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: PrivateKey::Decode
// Il2CppName: Decode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PrivateKey::*)(::Array<uint8_t>*, ::Il2CppString*)>(&PrivateKey::Decode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PrivateKey*), "Decode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: PrivateKey::CreateFromFile
// Il2CppName: CreateFromFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::Authenticode::PrivateKey* (*)(::Il2CppString*)>(&PrivateKey::CreateFromFile)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PrivateKey*), "CreateFromFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: PrivateKey::CreateFromFile
// Il2CppName: CreateFromFile
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::Authenticode::PrivateKey* (*)(::Il2CppString*, ::Il2CppString*)>(&PrivateKey::CreateFromFile)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PrivateKey*), "CreateFromFile", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger.hpp"
// Including type: Mono.Math.BigInteger/ModulusRing
#include "Mono/Math/BigInteger_ModulusRing.hpp"
// Including type: Mono.Math.BigInteger/Kernel
#include "Mono/Math/BigInteger_Kernel.hpp"
// Including type: System.Security.Cryptography.RandomNumberGenerator
#include "System/Security/Cryptography/RandomNumberGenerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.UInt32[] smallPrimes
::Array<uint>* Mono::Math::BigInteger::_get_smallPrimes() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::_get_smallPrimes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("Mono.Math", "BigInteger", "smallPrimes"));
}
// Autogenerated static field setter
// Set static field: static readonly System.UInt32[] smallPrimes
void Mono::Math::BigInteger::_set_smallPrimes(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::_set_smallPrimes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math", "BigInteger", "smallPrimes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.RandomNumberGenerator rng
System::Security::Cryptography::RandomNumberGenerator* Mono::Math::BigInteger::_get_rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::_get_rng");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Security::Cryptography::RandomNumberGenerator*>("Mono.Math", "BigInteger", "rng"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.RandomNumberGenerator rng
void Mono::Math::BigInteger::_set_rng(System::Security::Cryptography::RandomNumberGenerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::_set_rng");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math", "BigInteger", "rng", value));
}
// Autogenerated method: Mono.Math.BigInteger.get_Rng
System::Security::Cryptography::RandomNumberGenerator* Mono::Math::BigInteger::get_Rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::get_Rng");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "get_Rng", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::RandomNumberGenerator*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.GenerateRandom
Mono::Math::BigInteger* Mono::Math::BigInteger::GenerateRandom(int bits, System::Security::Cryptography::RandomNumberGenerator* rng) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::GenerateRandom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "GenerateRandom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits), ::il2cpp_utils::ExtractType(rng)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bits, rng);
}
// Autogenerated method: Mono.Math.BigInteger.GenerateRandom
Mono::Math::BigInteger* Mono::Math::BigInteger::GenerateRandom(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::GenerateRandom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "GenerateRandom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bits);
}
// Autogenerated method: Mono.Math.BigInteger.BitCount
int Mono::Math::BigInteger::BitCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::BitCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BitCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.TestBit
bool Mono::Math::BigInteger::TestBit(int bitNum) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::TestBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitNum)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, bitNum);
}
// Autogenerated method: Mono.Math.BigInteger.SetBit
void Mono::Math::BigInteger::SetBit(uint bitNum) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::SetBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitNum)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bitNum);
}
// Autogenerated method: Mono.Math.BigInteger.SetBit
void Mono::Math::BigInteger::SetBit(uint bitNum, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::SetBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitNum), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bitNum, value);
}
// Autogenerated method: Mono.Math.BigInteger.LowestSetBit
int Mono::Math::BigInteger::LowestSetBit() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::LowestSetBit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LowestSetBit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.GetBytes
::Array<uint8_t>* Mono::Math::BigInteger::GetBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::GetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.ToString
::Il2CppString* Mono::Math::BigInteger::ToString(uint radix) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(radix)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, radix);
}
// Autogenerated method: Mono.Math.BigInteger.ToString
::Il2CppString* Mono::Math::BigInteger::ToString(uint radix, ::Il2CppString* characterSet) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::ToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(radix), ::il2cpp_utils::ExtractType(characterSet)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, radix, characterSet);
}
// Autogenerated method: Mono.Math.BigInteger.Normalize
void Mono::Math::BigInteger::Normalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Normalize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Normalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.ModInverse
Mono::Math::BigInteger* Mono::Math::BigInteger::ModInverse(Mono::Math::BigInteger* modulus) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::ModInverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ModInverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(modulus)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(this, ___internal__method, modulus);
}
// Autogenerated method: Mono.Math.BigInteger.GeneratePseudoPrime
Mono::Math::BigInteger* Mono::Math::BigInteger::GeneratePseudoPrime(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::GeneratePseudoPrime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "GeneratePseudoPrime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bits);
}
// Autogenerated method: Mono.Math.BigInteger.Incr2
void Mono::Math::BigInteger::Incr2() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Incr2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Incr2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger..cctor
void Mono::Math::BigInteger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.GetHashCode
int Mono::Math::BigInteger::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.ToString
::Il2CppString* Mono::Math::BigInteger::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.BigInteger.Equals
bool Mono::Math::BigInteger::Equals(::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, o);
}
// Autogenerated method: Mono.Math.BigInteger.op_Subtraction
Mono::Math::BigInteger* Mono::Math::operator-(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::op_Subtraction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Subtraction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_Modulus
uint Mono::Math::operator%(Mono::Math::BigInteger& bi, const uint& ui) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::op_Modulus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Modulus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(&bi), ::il2cpp_utils::ExtractType(ui)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, &bi, ui);
}
// Autogenerated method: Mono.Math.BigInteger.op_Modulus
Mono::Math::BigInteger* Mono::Math::operator%(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::op_Modulus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Modulus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_Division
Mono::Math::BigInteger* Mono::Math::operator/(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::op_Division");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Division", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_Multiply
Mono::Math::BigInteger* Mono::Math::operator*(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_LeftShift
Mono::Math::BigInteger* Mono::Math::operator<<(Mono::Math::BigInteger& bi1, const int& shiftVal) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::op_LeftShift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_LeftShift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(&bi1), ::il2cpp_utils::ExtractType(shiftVal)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, &bi1, shiftVal);
}
// Autogenerated method: Mono.Math.BigInteger.op_RightShift
Mono::Math::BigInteger* Mono::Math::operator>>(Mono::Math::BigInteger& bi1, const int& shiftVal) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::op_RightShift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_RightShift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(&bi1), ::il2cpp_utils::ExtractType(shiftVal)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, &bi1, shiftVal);
}
// Autogenerated method: Mono.Math.BigInteger.op_Equality
bool Mono::Math::operator ==(Mono::Math::BigInteger& bi1, const uint& ui) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(&bi1), ::il2cpp_utils::ExtractType(ui)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, &bi1, ui);
}
// Autogenerated method: Mono.Math.BigInteger.op_Inequality
bool Mono::Math::operator !=(Mono::Math::BigInteger& bi1, const uint& ui) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(&bi1), ::il2cpp_utils::ExtractType(ui)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, &bi1, ui);
}
// Autogenerated method: Mono.Math.BigInteger.op_Equality
bool Mono::Math::operator ==(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_Inequality
bool Mono::Math::operator !=(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_GreaterThan
bool Mono::Math::operator >(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::op_GreaterThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_GreaterThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_LessThan
bool Mono::Math::operator <(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::op_LessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_LessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_GreaterThanOrEqual
bool Mono::Math::operator >=(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::op_GreaterThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_GreaterThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, &bi2);
}
// Autogenerated method: Mono.Math.BigInteger.op_LessThanOrEqual
bool Mono::Math::operator <=(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger& bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::op_LessThanOrEqual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger", "op_LessThanOrEqual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(&bi2)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, &bi2);
}
// Writing MetadataGetter for method: BigInteger::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BigInteger::*)(Mono::Math::BigInteger::Sign, uint)>(&BigInteger::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger::Sign>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BigInteger::*)(Mono::Math::BigInteger::Sign, uint)>(&BigInteger::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger::Sign>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: BigInteger::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BigInteger::*)(Mono::Math::BigInteger*)>(&BigInteger::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BigInteger::*)(Mono::Math::BigInteger*)>(&BigInteger::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>()});
  }
};
// Writing MetadataGetter for method: BigInteger::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BigInteger::*)(Mono::Math::BigInteger*, uint)>(&BigInteger::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BigInteger::*)(Mono::Math::BigInteger*, uint)>(&BigInteger::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: BigInteger::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BigInteger::*)(::Array<uint8_t>*)>(&BigInteger::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BigInteger::*)(::Array<uint8_t>*)>(&BigInteger::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: BigInteger::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BigInteger::*)(uint)>(&BigInteger::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BigInteger::*)(uint)>(&BigInteger::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: BigInteger::get_Rng
// Il2CppName: get_Rng
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::RandomNumberGenerator* (*)()>(&BigInteger::get_Rng)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), "get_Rng", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BigInteger::GenerateRandom
// Il2CppName: GenerateRandom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Math::BigInteger* (*)(int, System::Security::Cryptography::RandomNumberGenerator*)>(&BigInteger::GenerateRandom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), "GenerateRandom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::RandomNumberGenerator*>()});
  }
};
// Writing MetadataGetter for method: BigInteger::GenerateRandom
// Il2CppName: GenerateRandom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Math::BigInteger* (*)(int)>(&BigInteger::GenerateRandom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), "GenerateRandom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BigInteger::BitCount
// Il2CppName: BitCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (BigInteger::*)()>(&BigInteger::BitCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), "BitCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BigInteger::TestBit
// Il2CppName: TestBit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BigInteger::*)(int)>(&BigInteger::TestBit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), "TestBit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BigInteger::SetBit
// Il2CppName: SetBit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BigInteger::*)(uint)>(&BigInteger::SetBit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), "SetBit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: BigInteger::SetBit
// Il2CppName: SetBit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BigInteger::*)(uint, bool)>(&BigInteger::SetBit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), "SetBit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: BigInteger::LowestSetBit
// Il2CppName: LowestSetBit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (BigInteger::*)()>(&BigInteger::LowestSetBit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), "LowestSetBit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BigInteger::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (BigInteger::*)()>(&BigInteger::GetBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BigInteger::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (BigInteger::*)(uint)>(&BigInteger::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: BigInteger::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (BigInteger::*)(uint, ::Il2CppString*)>(&BigInteger::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: BigInteger::Normalize
// Il2CppName: Normalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BigInteger::*)()>(&BigInteger::Normalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), "Normalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BigInteger::ModInverse
// Il2CppName: ModInverse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Math::BigInteger* (BigInteger::*)(Mono::Math::BigInteger*)>(&BigInteger::ModInverse)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), "ModInverse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>()});
  }
};
// Writing MetadataGetter for method: BigInteger::GeneratePseudoPrime
// Il2CppName: GeneratePseudoPrime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Math::BigInteger* (*)(int)>(&BigInteger::GeneratePseudoPrime)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), "GeneratePseudoPrime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BigInteger::Incr2
// Il2CppName: Incr2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BigInteger::*)()>(&BigInteger::Incr2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), "Incr2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BigInteger::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&BigInteger::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BigInteger::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (BigInteger::*)()>(&BigInteger::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BigInteger::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (BigInteger::*)()>(&BigInteger::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BigInteger::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (BigInteger::*)(::Il2CppObject*)>(&BigInteger::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: BigInteger::operator-
// Il2CppName: op_Subtraction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Math::BigInteger* (*)(Mono::Math::BigInteger*, Mono::Math::BigInteger&)>(&BigInteger::operator-)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), "op_Subtraction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>(), ::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger&>()});
  }
};
// Writing MetadataGetter for method: BigInteger::operator%
// Il2CppName: op_Modulus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(Mono::Math::BigInteger&, const uint&)>(&BigInteger::operator%)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), "op_Modulus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger&>(), ::il2cpp_utils::ExtractIndependentType<const uint&>()});
  }
};
// Writing MetadataGetter for method: BigInteger::operator%
// Il2CppName: op_Modulus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Math::BigInteger* (*)(Mono::Math::BigInteger*, Mono::Math::BigInteger&)>(&BigInteger::operator%)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), "op_Modulus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>(), ::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger&>()});
  }
};
// Writing MetadataGetter for method: BigInteger::operator/
// Il2CppName: op_Division
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Math::BigInteger* (*)(Mono::Math::BigInteger*, Mono::Math::BigInteger&)>(&BigInteger::operator/)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), "op_Division", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>(), ::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger&>()});
  }
};
// Writing MetadataGetter for method: BigInteger::operator*
// Il2CppName: op_Multiply
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Math::BigInteger* (*)(Mono::Math::BigInteger*, Mono::Math::BigInteger&)>(&BigInteger::operator*)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), "op_Multiply", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>(), ::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger&>()});
  }
};
// Writing MetadataGetter for method: BigInteger::operator<<
// Il2CppName: op_LeftShift
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Math::BigInteger* (*)(Mono::Math::BigInteger&, const int&)>(&BigInteger::operator<<)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), "op_LeftShift", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger&>(), ::il2cpp_utils::ExtractIndependentType<const int&>()});
  }
};
// Writing MetadataGetter for method: BigInteger::operator>>
// Il2CppName: op_RightShift
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Math::BigInteger* (*)(Mono::Math::BigInteger&, const int&)>(&BigInteger::operator>>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), "op_RightShift", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger&>(), ::il2cpp_utils::ExtractIndependentType<const int&>()});
  }
};
// Writing MetadataGetter for method: BigInteger::operator ==
// Il2CppName: op_Equality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(Mono::Math::BigInteger&, const uint&)>(&BigInteger::operator ==)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), "op_Equality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger&>(), ::il2cpp_utils::ExtractIndependentType<const uint&>()});
  }
};
// Writing MetadataGetter for method: BigInteger::operator !=
// Il2CppName: op_Inequality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(Mono::Math::BigInteger&, const uint&)>(&BigInteger::operator !=)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), "op_Inequality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger&>(), ::il2cpp_utils::ExtractIndependentType<const uint&>()});
  }
};
// Writing MetadataGetter for method: BigInteger::operator ==
// Il2CppName: op_Equality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(Mono::Math::BigInteger*, Mono::Math::BigInteger&)>(&BigInteger::operator ==)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), "op_Equality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>(), ::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger&>()});
  }
};
// Writing MetadataGetter for method: BigInteger::operator !=
// Il2CppName: op_Inequality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(Mono::Math::BigInteger*, Mono::Math::BigInteger&)>(&BigInteger::operator !=)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), "op_Inequality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>(), ::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger&>()});
  }
};
// Writing MetadataGetter for method: BigInteger::operator >
// Il2CppName: op_GreaterThan
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(Mono::Math::BigInteger*, Mono::Math::BigInteger&)>(&BigInteger::operator >)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), "op_GreaterThan", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>(), ::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger&>()});
  }
};
// Writing MetadataGetter for method: BigInteger::operator <
// Il2CppName: op_LessThan
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(Mono::Math::BigInteger*, Mono::Math::BigInteger&)>(&BigInteger::operator <)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), "op_LessThan", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>(), ::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger&>()});
  }
};
// Writing MetadataGetter for method: BigInteger::operator >=
// Il2CppName: op_GreaterThanOrEqual
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(Mono::Math::BigInteger*, Mono::Math::BigInteger&)>(&BigInteger::operator >=)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), "op_GreaterThanOrEqual", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>(), ::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger&>()});
  }
};
// Writing MetadataGetter for method: BigInteger::operator <=
// Il2CppName: op_LessThanOrEqual
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(Mono::Math::BigInteger*, Mono::Math::BigInteger&)>(&BigInteger::operator <=)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger*), "op_LessThanOrEqual", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>(), ::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Math.BigInteger/Sign
#include "Mono/Math/BigInteger.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Math.BigInteger/Sign Negative
Mono::Math::BigInteger::Sign Mono::Math::BigInteger::Sign::_get_Negative() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Sign::_get_Negative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Math::BigInteger::Sign>("Mono.Math", "BigInteger/Sign", "Negative"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.BigInteger/Sign Negative
void Mono::Math::BigInteger::Sign::_set_Negative(Mono::Math::BigInteger::Sign value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Sign::_set_Negative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math", "BigInteger/Sign", "Negative", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.BigInteger/Sign Zero
Mono::Math::BigInteger::Sign Mono::Math::BigInteger::Sign::_get_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Sign::_get_Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Math::BigInteger::Sign>("Mono.Math", "BigInteger/Sign", "Zero"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.BigInteger/Sign Zero
void Mono::Math::BigInteger::Sign::_set_Zero(Mono::Math::BigInteger::Sign value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Sign::_set_Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math", "BigInteger/Sign", "Zero", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.BigInteger/Sign Positive
Mono::Math::BigInteger::Sign Mono::Math::BigInteger::Sign::_get_Positive() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Sign::_get_Positive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Math::BigInteger::Sign>("Mono.Math", "BigInteger/Sign", "Positive"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.BigInteger/Sign Positive
void Mono::Math::BigInteger::Sign::_set_Positive(Mono::Math::BigInteger::Sign value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Sign::_set_Positive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math", "BigInteger/Sign", "Positive", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Math.BigInteger/ModulusRing
#include "Mono/Math/BigInteger_ModulusRing.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.BigInteger/ModulusRing.BarrettReduction
void Mono::Math::BigInteger::ModulusRing::BarrettReduction(Mono::Math::BigInteger* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::ModulusRing::BarrettReduction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BarrettReduction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, x);
}
// Autogenerated method: Mono.Math.BigInteger/ModulusRing.Multiply
Mono::Math::BigInteger* Mono::Math::BigInteger::ModulusRing::Multiply(Mono::Math::BigInteger* a, Mono::Math::BigInteger* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::ModulusRing::Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(this, ___internal__method, a, b);
}
// Autogenerated method: Mono.Math.BigInteger/ModulusRing.Difference
Mono::Math::BigInteger* Mono::Math::BigInteger::ModulusRing::Difference(Mono::Math::BigInteger* a, Mono::Math::BigInteger* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::ModulusRing::Difference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Difference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(this, ___internal__method, a, b);
}
// Autogenerated method: Mono.Math.BigInteger/ModulusRing.Pow
Mono::Math::BigInteger* Mono::Math::BigInteger::ModulusRing::Pow(Mono::Math::BigInteger* a, Mono::Math::BigInteger* k) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::ModulusRing::Pow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(k)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(this, ___internal__method, a, k);
}
// Autogenerated method: Mono.Math.BigInteger/ModulusRing.Pow
Mono::Math::BigInteger* Mono::Math::BigInteger::ModulusRing::Pow(uint b, Mono::Math::BigInteger* exp) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::ModulusRing::Pow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(exp)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(this, ___internal__method, b, exp);
}
// Writing MetadataGetter for method: BigInteger::ModulusRing::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BigInteger::ModulusRing::*)(Mono::Math::BigInteger*)>(&BigInteger::ModulusRing::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger::ModulusRing*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BigInteger::ModulusRing::*)(Mono::Math::BigInteger*)>(&BigInteger::ModulusRing::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger::ModulusRing*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>()});
  }
};
// Writing MetadataGetter for method: BigInteger::ModulusRing::BarrettReduction
// Il2CppName: BarrettReduction
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BigInteger::ModulusRing::*)(Mono::Math::BigInteger*)>(&BigInteger::ModulusRing::BarrettReduction)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger::ModulusRing*), "BarrettReduction", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>()});
  }
};
// Writing MetadataGetter for method: BigInteger::ModulusRing::Multiply
// Il2CppName: Multiply
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Math::BigInteger* (BigInteger::ModulusRing::*)(Mono::Math::BigInteger*, Mono::Math::BigInteger*)>(&BigInteger::ModulusRing::Multiply)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger::ModulusRing*), "Multiply", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>(), ::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>()});
  }
};
// Writing MetadataGetter for method: BigInteger::ModulusRing::Difference
// Il2CppName: Difference
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Math::BigInteger* (BigInteger::ModulusRing::*)(Mono::Math::BigInteger*, Mono::Math::BigInteger*)>(&BigInteger::ModulusRing::Difference)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger::ModulusRing*), "Difference", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>(), ::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>()});
  }
};
// Writing MetadataGetter for method: BigInteger::ModulusRing::Pow
// Il2CppName: Pow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Math::BigInteger* (BigInteger::ModulusRing::*)(Mono::Math::BigInteger*, Mono::Math::BigInteger*)>(&BigInteger::ModulusRing::Pow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger::ModulusRing*), "Pow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>(), ::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>()});
  }
};
// Writing MetadataGetter for method: BigInteger::ModulusRing::Pow
// Il2CppName: Pow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Math::BigInteger* (BigInteger::ModulusRing::*)(uint, Mono::Math::BigInteger*)>(&BigInteger::ModulusRing::Pow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger::ModulusRing*), "Pow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Math.BigInteger/Kernel
#include "Mono/Math/BigInteger_Kernel.hpp"
// Including type: Mono.Math.BigInteger/Sign
#include "Mono/Math/BigInteger.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.BigInteger/Kernel.Subtract
Mono::Math::BigInteger* Mono::Math::BigInteger::Kernel::Subtract(Mono::Math::BigInteger* big, Mono::Math::BigInteger* small) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Kernel::Subtract");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "Subtract", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(big), ::il2cpp_utils::ExtractType(small)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, big, small);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.MinusEq
void Mono::Math::BigInteger::Kernel::MinusEq(Mono::Math::BigInteger* big, Mono::Math::BigInteger* small) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Kernel::MinusEq");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "MinusEq", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(big), ::il2cpp_utils::ExtractType(small)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, big, small);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.PlusEq
void Mono::Math::BigInteger::Kernel::PlusEq(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger* bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Kernel::PlusEq");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "PlusEq", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(bi2)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, bi2);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.Compare
Mono::Math::BigInteger::Sign Mono::Math::BigInteger::Kernel::Compare(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger* bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Kernel::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(bi2)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger::Sign, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, bi2);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.SingleByteDivideInPlace
uint Mono::Math::BigInteger::Kernel::SingleByteDivideInPlace(Mono::Math::BigInteger* n, uint d) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Kernel::SingleByteDivideInPlace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "SingleByteDivideInPlace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, n, d);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.DwordMod
uint Mono::Math::BigInteger::Kernel::DwordMod(Mono::Math::BigInteger* n, uint d) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Kernel::DwordMod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "DwordMod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, n, d);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.DwordDivMod
::Array<Mono::Math::BigInteger*>* Mono::Math::BigInteger::Kernel::DwordDivMod(Mono::Math::BigInteger* n, uint d) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Kernel::DwordDivMod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "DwordDivMod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<Mono::Math::BigInteger*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, n, d);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.multiByteDivide
::Array<Mono::Math::BigInteger*>* Mono::Math::BigInteger::Kernel::multiByteDivide(Mono::Math::BigInteger* bi1, Mono::Math::BigInteger* bi2) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Kernel::multiByteDivide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "multiByteDivide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi1), ::il2cpp_utils::ExtractType(bi2)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<Mono::Math::BigInteger*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi1, bi2);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.LeftShift
Mono::Math::BigInteger* Mono::Math::BigInteger::Kernel::LeftShift(Mono::Math::BigInteger* bi, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Kernel::LeftShift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "LeftShift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi, n);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.RightShift
Mono::Math::BigInteger* Mono::Math::BigInteger::Kernel::RightShift(Mono::Math::BigInteger* bi, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Kernel::RightShift");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "RightShift", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi, n);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.Multiply
void Mono::Math::BigInteger::Kernel::Multiply(::Array<uint>* x, uint xOffset, uint xLen, ::Array<uint>* y, uint yOffset, uint yLen, ::Array<uint>* d, uint dOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Kernel::Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(xOffset), ::il2cpp_utils::ExtractType(xLen), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(yOffset), ::il2cpp_utils::ExtractType(yLen), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(dOffset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, xOffset, xLen, y, yOffset, yLen, d, dOffset);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.MultiplyMod2p32pmod
void Mono::Math::BigInteger::Kernel::MultiplyMod2p32pmod(::Array<uint>* x, int xOffset, int xLen, ::Array<uint>* y, int yOffest, int yLen, ::Array<uint>* d, int dOffset, int mod) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Kernel::MultiplyMod2p32pmod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "MultiplyMod2p32pmod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(xOffset), ::il2cpp_utils::ExtractType(xLen), ::il2cpp_utils::ExtractType(y), ::il2cpp_utils::ExtractType(yOffest), ::il2cpp_utils::ExtractType(yLen), ::il2cpp_utils::ExtractType(d), ::il2cpp_utils::ExtractType(dOffset), ::il2cpp_utils::ExtractType(mod)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, xOffset, xLen, y, yOffest, yLen, d, dOffset, mod);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.modInverse
uint Mono::Math::BigInteger::Kernel::modInverse(Mono::Math::BigInteger* bi, uint modulus) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Kernel::modInverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "modInverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(modulus)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi, modulus);
}
// Autogenerated method: Mono.Math.BigInteger/Kernel.modInverse
Mono::Math::BigInteger* Mono::Math::BigInteger::Kernel::modInverse(Mono::Math::BigInteger* bi, Mono::Math::BigInteger* modulus) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::BigInteger::Kernel::modInverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math", "BigInteger/Kernel", "modInverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(modulus)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi, modulus);
}
// Writing MetadataGetter for method: BigInteger::Kernel::Subtract
// Il2CppName: Subtract
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Math::BigInteger* (*)(Mono::Math::BigInteger*, Mono::Math::BigInteger*)>(&BigInteger::Kernel::Subtract)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger::Kernel*), "Subtract", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>(), ::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>()});
  }
};
// Writing MetadataGetter for method: BigInteger::Kernel::MinusEq
// Il2CppName: MinusEq
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(Mono::Math::BigInteger*, Mono::Math::BigInteger*)>(&BigInteger::Kernel::MinusEq)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger::Kernel*), "MinusEq", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>(), ::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>()});
  }
};
// Writing MetadataGetter for method: BigInteger::Kernel::PlusEq
// Il2CppName: PlusEq
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(Mono::Math::BigInteger*, Mono::Math::BigInteger*)>(&BigInteger::Kernel::PlusEq)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger::Kernel*), "PlusEq", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>(), ::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>()});
  }
};
// Writing MetadataGetter for method: BigInteger::Kernel::Compare
// Il2CppName: Compare
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Math::BigInteger::Sign (*)(Mono::Math::BigInteger*, Mono::Math::BigInteger*)>(&BigInteger::Kernel::Compare)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger::Kernel*), "Compare", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>(), ::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>()});
  }
};
// Writing MetadataGetter for method: BigInteger::Kernel::SingleByteDivideInPlace
// Il2CppName: SingleByteDivideInPlace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(Mono::Math::BigInteger*, uint)>(&BigInteger::Kernel::SingleByteDivideInPlace)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger::Kernel*), "SingleByteDivideInPlace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: BigInteger::Kernel::DwordMod
// Il2CppName: DwordMod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(Mono::Math::BigInteger*, uint)>(&BigInteger::Kernel::DwordMod)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger::Kernel*), "DwordMod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: BigInteger::Kernel::DwordDivMod
// Il2CppName: DwordDivMod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<Mono::Math::BigInteger*>* (*)(Mono::Math::BigInteger*, uint)>(&BigInteger::Kernel::DwordDivMod)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger::Kernel*), "DwordDivMod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: BigInteger::Kernel::multiByteDivide
// Il2CppName: multiByteDivide
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<Mono::Math::BigInteger*>* (*)(Mono::Math::BigInteger*, Mono::Math::BigInteger*)>(&BigInteger::Kernel::multiByteDivide)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger::Kernel*), "multiByteDivide", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>(), ::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>()});
  }
};
// Writing MetadataGetter for method: BigInteger::Kernel::LeftShift
// Il2CppName: LeftShift
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Math::BigInteger* (*)(Mono::Math::BigInteger*, int)>(&BigInteger::Kernel::LeftShift)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger::Kernel*), "LeftShift", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BigInteger::Kernel::RightShift
// Il2CppName: RightShift
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Math::BigInteger* (*)(Mono::Math::BigInteger*, int)>(&BigInteger::Kernel::RightShift)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger::Kernel*), "RightShift", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BigInteger::Kernel::Multiply
// Il2CppName: Multiply
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Array<uint>*, uint, uint, ::Array<uint>*, uint, uint, ::Array<uint>*, uint)>(&BigInteger::Kernel::Multiply)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger::Kernel*), "Multiply", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint>*>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint>*>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint>*>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: BigInteger::Kernel::MultiplyMod2p32pmod
// Il2CppName: MultiplyMod2p32pmod
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Array<uint>*, int, int, ::Array<uint>*, int, int, ::Array<uint>*, int, int)>(&BigInteger::Kernel::MultiplyMod2p32pmod)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger::Kernel*), "MultiplyMod2p32pmod", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BigInteger::Kernel::modInverse
// Il2CppName: modInverse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (*)(Mono::Math::BigInteger*, uint)>(&BigInteger::Kernel::modInverse)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger::Kernel*), "modInverse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: BigInteger::Kernel::modInverse
// Il2CppName: modInverse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Math::BigInteger* (*)(Mono::Math::BigInteger*, Mono::Math::BigInteger*)>(&BigInteger::Kernel::modInverse)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BigInteger::Kernel*), "modInverse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>(), ::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Math.Prime.ConfidenceFactor
#include "Mono/Math/Prime/ConfidenceFactor.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor ExtraLow
Mono::Math::Prime::ConfidenceFactor Mono::Math::Prime::ConfidenceFactor::_get_ExtraLow() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::ConfidenceFactor::_get_ExtraLow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Math::Prime::ConfidenceFactor>("Mono.Math.Prime", "ConfidenceFactor", "ExtraLow"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor ExtraLow
void Mono::Math::Prime::ConfidenceFactor::_set_ExtraLow(Mono::Math::Prime::ConfidenceFactor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::ConfidenceFactor::_set_ExtraLow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "ExtraLow", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor Low
Mono::Math::Prime::ConfidenceFactor Mono::Math::Prime::ConfidenceFactor::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::ConfidenceFactor::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Math::Prime::ConfidenceFactor>("Mono.Math.Prime", "ConfidenceFactor", "Low"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor Low
void Mono::Math::Prime::ConfidenceFactor::_set_Low(Mono::Math::Prime::ConfidenceFactor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::ConfidenceFactor::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "Low", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor Medium
Mono::Math::Prime::ConfidenceFactor Mono::Math::Prime::ConfidenceFactor::_get_Medium() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::ConfidenceFactor::_get_Medium");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Math::Prime::ConfidenceFactor>("Mono.Math.Prime", "ConfidenceFactor", "Medium"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor Medium
void Mono::Math::Prime::ConfidenceFactor::_set_Medium(Mono::Math::Prime::ConfidenceFactor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::ConfidenceFactor::_set_Medium");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "Medium", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor High
Mono::Math::Prime::ConfidenceFactor Mono::Math::Prime::ConfidenceFactor::_get_High() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::ConfidenceFactor::_get_High");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Math::Prime::ConfidenceFactor>("Mono.Math.Prime", "ConfidenceFactor", "High"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor High
void Mono::Math::Prime::ConfidenceFactor::_set_High(Mono::Math::Prime::ConfidenceFactor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::ConfidenceFactor::_set_High");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "High", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor ExtraHigh
Mono::Math::Prime::ConfidenceFactor Mono::Math::Prime::ConfidenceFactor::_get_ExtraHigh() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::ConfidenceFactor::_get_ExtraHigh");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Math::Prime::ConfidenceFactor>("Mono.Math.Prime", "ConfidenceFactor", "ExtraHigh"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor ExtraHigh
void Mono::Math::Prime::ConfidenceFactor::_set_ExtraHigh(Mono::Math::Prime::ConfidenceFactor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::ConfidenceFactor::_set_ExtraHigh");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "ExtraHigh", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Math.Prime.ConfidenceFactor Provable
Mono::Math::Prime::ConfidenceFactor Mono::Math::Prime::ConfidenceFactor::_get_Provable() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::ConfidenceFactor::_get_Provable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Math::Prime::ConfidenceFactor>("Mono.Math.Prime", "ConfidenceFactor", "Provable"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Math.Prime.ConfidenceFactor Provable
void Mono::Math::Prime::ConfidenceFactor::_set_Provable(Mono::Math::Prime::ConfidenceFactor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::ConfidenceFactor::_set_Provable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Math.Prime", "ConfidenceFactor", "Provable", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Math.Prime.PrimalityTest
#include "Mono/Math/Prime/PrimalityTest.hpp"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger.hpp"
// Including type: Mono.Math.Prime.ConfidenceFactor
#include "Mono/Math/Prime/ConfidenceFactor.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.Prime.PrimalityTest.Invoke
bool Mono::Math::Prime::PrimalityTest::Invoke(Mono::Math::BigInteger* bi, Mono::Math::Prime::ConfidenceFactor confidence) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::PrimalityTest::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(confidence)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, bi, confidence);
}
// Autogenerated method: Mono.Math.Prime.PrimalityTest.BeginInvoke
System::IAsyncResult* Mono::Math::Prime::PrimalityTest::BeginInvoke(Mono::Math::BigInteger* bi, Mono::Math::Prime::ConfidenceFactor confidence, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::PrimalityTest::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(confidence), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, bi, confidence, callback, object);
}
// Autogenerated method: Mono.Math.Prime.PrimalityTest.EndInvoke
bool Mono::Math::Prime::PrimalityTest::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::PrimalityTest::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: PrimalityTest::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PrimalityTest::*)(::Il2CppObject*, System::IntPtr)>(&PrimalityTest::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PrimalityTest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PrimalityTest::*)(::Il2CppObject*, System::IntPtr)>(&PrimalityTest::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PrimalityTest*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: PrimalityTest::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PrimalityTest::*)(Mono::Math::BigInteger*, Mono::Math::Prime::ConfidenceFactor)>(&PrimalityTest::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PrimalityTest*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>(), ::il2cpp_utils::ExtractIndependentType<Mono::Math::Prime::ConfidenceFactor>()});
  }
};
// Writing MetadataGetter for method: PrimalityTest::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (PrimalityTest::*)(Mono::Math::BigInteger*, Mono::Math::Prime::ConfidenceFactor, System::AsyncCallback*, ::Il2CppObject*)>(&PrimalityTest::BeginInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PrimalityTest*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>(), ::il2cpp_utils::ExtractIndependentType<Mono::Math::Prime::ConfidenceFactor>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: PrimalityTest::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PrimalityTest::*)(System::IAsyncResult*)>(&PrimalityTest::EndInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PrimalityTest*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Math.Prime.PrimalityTests
#include "Mono/Math/Prime/PrimalityTests.hpp"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger.hpp"
// Including type: Mono.Math.Prime.ConfidenceFactor
#include "Mono/Math/Prime/ConfidenceFactor.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.Prime.PrimalityTests.GetSPPRounds
int Mono::Math::Prime::PrimalityTests::GetSPPRounds(Mono::Math::BigInteger* bi, Mono::Math::Prime::ConfidenceFactor confidence) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::PrimalityTests::GetSPPRounds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math.Prime", "PrimalityTests", "GetSPPRounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(confidence)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, bi, confidence);
}
// Autogenerated method: Mono.Math.Prime.PrimalityTests.RabinMillerTest
bool Mono::Math::Prime::PrimalityTests::RabinMillerTest(Mono::Math::BigInteger* n, Mono::Math::Prime::ConfidenceFactor confidence) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::PrimalityTests::RabinMillerTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Math.Prime", "PrimalityTests", "RabinMillerTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(confidence)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, n, confidence);
}
// Writing MetadataGetter for method: PrimalityTests::GetSPPRounds
// Il2CppName: GetSPPRounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(Mono::Math::BigInteger*, Mono::Math::Prime::ConfidenceFactor)>(&PrimalityTests::GetSPPRounds)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PrimalityTests*), "GetSPPRounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>(), ::il2cpp_utils::ExtractIndependentType<Mono::Math::Prime::ConfidenceFactor>()});
  }
};
// Writing MetadataGetter for method: PrimalityTests::RabinMillerTest
// Il2CppName: RabinMillerTest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(Mono::Math::BigInteger*, Mono::Math::Prime::ConfidenceFactor)>(&PrimalityTests::RabinMillerTest)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PrimalityTests*), "RabinMillerTest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>(), ::il2cpp_utils::ExtractIndependentType<Mono::Math::Prime::ConfidenceFactor>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Math.Prime.Generator.PrimeGeneratorBase
#include "Mono/Math/Prime/Generator/PrimeGeneratorBase.hpp"
// Including type: Mono.Math.Prime.ConfidenceFactor
#include "Mono/Math/Prime/ConfidenceFactor.hpp"
// Including type: Mono.Math.Prime.PrimalityTest
#include "Mono/Math/Prime/PrimalityTest.hpp"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.Prime.Generator.PrimeGeneratorBase.get_Confidence
Mono::Math::Prime::ConfidenceFactor Mono::Math::Prime::Generator::PrimeGeneratorBase::get_Confidence() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::Generator::PrimeGeneratorBase::get_Confidence");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Confidence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::Prime::ConfidenceFactor, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.Prime.Generator.PrimeGeneratorBase.get_PrimalityTest
Mono::Math::Prime::PrimalityTest* Mono::Math::Prime::Generator::PrimeGeneratorBase::get_PrimalityTest() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::Generator::PrimeGeneratorBase::get_PrimalityTest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PrimalityTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::Prime::PrimalityTest*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.Prime.Generator.PrimeGeneratorBase.get_TrialDivisionBounds
int Mono::Math::Prime::Generator::PrimeGeneratorBase::get_TrialDivisionBounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::Generator::PrimeGeneratorBase::get_TrialDivisionBounds");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TrialDivisionBounds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Math.Prime.Generator.PrimeGeneratorBase.GenerateNewPrime
Mono::Math::BigInteger* Mono::Math::Prime::Generator::PrimeGeneratorBase::GenerateNewPrime(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::Generator::PrimeGeneratorBase::GenerateNewPrime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateNewPrime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(this, ___internal__method, bits);
}
// Writing MetadataGetter for method: PrimeGeneratorBase::get_Confidence
// Il2CppName: get_Confidence
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Math::Prime::ConfidenceFactor (PrimeGeneratorBase::*)()>(&PrimeGeneratorBase::get_Confidence)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PrimeGeneratorBase*), "get_Confidence", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PrimeGeneratorBase::get_PrimalityTest
// Il2CppName: get_PrimalityTest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Math::Prime::PrimalityTest* (PrimeGeneratorBase::*)()>(&PrimeGeneratorBase::get_PrimalityTest)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PrimeGeneratorBase*), "get_PrimalityTest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PrimeGeneratorBase::get_TrialDivisionBounds
// Il2CppName: get_TrialDivisionBounds
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (PrimeGeneratorBase::*)()>(&PrimeGeneratorBase::get_TrialDivisionBounds)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PrimeGeneratorBase*), "get_TrialDivisionBounds", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PrimeGeneratorBase::GenerateNewPrime
// Il2CppName: GenerateNewPrime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Math::BigInteger* (PrimeGeneratorBase::*)(int)>(&PrimeGeneratorBase::GenerateNewPrime)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PrimeGeneratorBase*), "GenerateNewPrime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PrimeGeneratorBase::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PrimeGeneratorBase::*)()>(&PrimeGeneratorBase::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PrimeGeneratorBase*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PrimeGeneratorBase::*)()>(&PrimeGeneratorBase::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PrimeGeneratorBase*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase
#include "Mono/Math/Prime/Generator/SequentialSearchPrimeGeneratorBase.hpp"
// Including type: Mono.Math.BigInteger
#include "Mono/Math/BigInteger.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase.GenerateSearchBase
Mono::Math::BigInteger* Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::GenerateSearchBase(int bits, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::GenerateSearchBase");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateSearchBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(this, ___internal__method, bits, context);
}
// Autogenerated method: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase.GenerateNewPrime
Mono::Math::BigInteger* Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::GenerateNewPrime(int bits, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::GenerateNewPrime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateNewPrime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(this, ___internal__method, bits, context);
}
// Autogenerated method: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase.IsPrimeAcceptable
bool Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::IsPrimeAcceptable(Mono::Math::BigInteger* bi, ::Il2CppObject* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::IsPrimeAcceptable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPrimeAcceptable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bi), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, bi, context);
}
// Autogenerated method: Mono.Math.Prime.Generator.SequentialSearchPrimeGeneratorBase.GenerateNewPrime
Mono::Math::BigInteger* Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::GenerateNewPrime(int bits) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Math::Prime::Generator::SequentialSearchPrimeGeneratorBase::GenerateNewPrime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateNewPrime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bits)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Math::BigInteger*, false>(this, ___internal__method, bits);
}
// Writing MetadataGetter for method: SequentialSearchPrimeGeneratorBase::GenerateSearchBase
// Il2CppName: GenerateSearchBase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Math::BigInteger* (SequentialSearchPrimeGeneratorBase::*)(int, ::Il2CppObject*)>(&SequentialSearchPrimeGeneratorBase::GenerateSearchBase)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SequentialSearchPrimeGeneratorBase*), "GenerateSearchBase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: SequentialSearchPrimeGeneratorBase::GenerateNewPrime
// Il2CppName: GenerateNewPrime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Math::BigInteger* (SequentialSearchPrimeGeneratorBase::*)(int, ::Il2CppObject*)>(&SequentialSearchPrimeGeneratorBase::GenerateNewPrime)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SequentialSearchPrimeGeneratorBase*), "GenerateNewPrime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: SequentialSearchPrimeGeneratorBase::IsPrimeAcceptable
// Il2CppName: IsPrimeAcceptable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SequentialSearchPrimeGeneratorBase::*)(Mono::Math::BigInteger*, ::Il2CppObject*)>(&SequentialSearchPrimeGeneratorBase::IsPrimeAcceptable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SequentialSearchPrimeGeneratorBase*), "IsPrimeAcceptable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Math::BigInteger*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: SequentialSearchPrimeGeneratorBase::GenerateNewPrime
// Il2CppName: GenerateNewPrime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Math::BigInteger* (SequentialSearchPrimeGeneratorBase::*)(int)>(&SequentialSearchPrimeGeneratorBase::GenerateNewPrime)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SequentialSearchPrimeGeneratorBase*), "GenerateNewPrime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SequentialSearchPrimeGeneratorBase::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SequentialSearchPrimeGeneratorBase::*)()>(&SequentialSearchPrimeGeneratorBase::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SequentialSearchPrimeGeneratorBase*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SequentialSearchPrimeGeneratorBase::*)()>(&SequentialSearchPrimeGeneratorBase::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SequentialSearchPrimeGeneratorBase*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SR
#include "GlobalNamespace/SR.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SR.Format
::Il2CppString* GlobalNamespace::SR::Format(::Il2CppString* resourceFormat, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SR::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SR", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourceFormat), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, resourceFormat, p1);
}
// Autogenerated method: SR.Format
::Il2CppString* GlobalNamespace::SR::Format(::Il2CppString* resourceFormat, ::Il2CppObject* p1, ::Il2CppObject* p2) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SR::Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SR", "Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(resourceFormat), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(p2)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, resourceFormat, p1, p2);
}
// Writing MetadataGetter for method: SR::Format
// Il2CppName: Format
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppString*, ::Il2CppObject*)>(&SR::Format)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SR*), "Format", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: SR::Format
// Il2CppName: Format
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppString*, ::Il2CppObject*, ::Il2CppObject*)>(&SR::Format)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SR*), "Format", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Runtime
#include "Mono/Runtime.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Runtime.mono_runtime_install_handlers
void Mono::Runtime::mono_runtime_install_handlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Runtime::mono_runtime_install_handlers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "Runtime", "mono_runtime_install_handlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Runtime.InstallSignalHandlers
void Mono::Runtime::InstallSignalHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Runtime::InstallSignalHandlers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "Runtime", "InstallSignalHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Runtime.mono_runtime_cleanup_handlers
void Mono::Runtime::mono_runtime_cleanup_handlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Runtime::mono_runtime_cleanup_handlers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "Runtime", "mono_runtime_cleanup_handlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Runtime.RemoveSignalHandlers
void Mono::Runtime::RemoveSignalHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Runtime::RemoveSignalHandlers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "Runtime", "RemoveSignalHandlers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Runtime.GetDisplayName
::Il2CppString* Mono::Runtime::GetDisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Runtime::GetDisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "Runtime", "GetDisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Runtime.GetNativeStackTrace
::Il2CppString* Mono::Runtime::GetNativeStackTrace(System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Runtime::GetNativeStackTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "Runtime", "GetNativeStackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(exception)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, exception);
}
// Autogenerated method: Mono.Runtime.SetGCAllowSynchronousMajor
bool Mono::Runtime::SetGCAllowSynchronousMajor(bool flag) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::Runtime::SetGCAllowSynchronousMajor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "Runtime", "SetGCAllowSynchronousMajor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flag)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, flag);
}
// Writing MetadataGetter for method: Runtime::mono_runtime_install_handlers
// Il2CppName: mono_runtime_install_handlers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Runtime::mono_runtime_install_handlers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Runtime*), "mono_runtime_install_handlers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Runtime::InstallSignalHandlers
// Il2CppName: InstallSignalHandlers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Runtime::InstallSignalHandlers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Runtime*), "InstallSignalHandlers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Runtime::mono_runtime_cleanup_handlers
// Il2CppName: mono_runtime_cleanup_handlers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Runtime::mono_runtime_cleanup_handlers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Runtime*), "mono_runtime_cleanup_handlers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Runtime::RemoveSignalHandlers
// Il2CppName: RemoveSignalHandlers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Runtime::RemoveSignalHandlers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Runtime*), "RemoveSignalHandlers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Runtime::GetDisplayName
// Il2CppName: GetDisplayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)()>(&Runtime::GetDisplayName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Runtime*), "GetDisplayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Runtime::GetNativeStackTrace
// Il2CppName: GetNativeStackTrace
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::Exception*)>(&Runtime::GetNativeStackTrace)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Runtime*), "GetNativeStackTrace", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Exception*>()});
  }
};
// Writing MetadataGetter for method: Runtime::SetGCAllowSynchronousMajor
// Il2CppName: SetGCAllowSynchronousMajor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(bool)>(&Runtime::SetGCAllowSynchronousMajor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Runtime*), "SetGCAllowSynchronousMajor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.RuntimeClassHandle
#include "Mono/RuntimeClassHandle.hpp"
// Including type: System.RuntimeTypeHandle
#include "System/RuntimeTypeHandle.hpp"
// Including type: Mono.RuntimeStructs/MonoClass
#include "Mono/RuntimeStructs_MonoClass.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.RuntimeClassHandle.get_Value
Mono::RuntimeStructs::MonoClass* Mono::RuntimeClassHandle::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeClassHandle::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::RuntimeStructs::MonoClass*, false>(*this, ___internal__method);
}
// Autogenerated method: Mono.RuntimeClassHandle.GetTypeFromClass
System::IntPtr Mono::RuntimeClassHandle::GetTypeFromClass(Mono::RuntimeStructs::MonoClass* klass) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeClassHandle::GetTypeFromClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "RuntimeClassHandle", "GetTypeFromClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(klass)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, klass);
}
// Autogenerated method: Mono.RuntimeClassHandle.GetTypeHandle
System::RuntimeTypeHandle Mono::RuntimeClassHandle::GetTypeHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeClassHandle::GetTypeHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetTypeHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeTypeHandle, false>(*this, ___internal__method);
}
// Autogenerated method: Mono.RuntimeClassHandle.Equals
bool Mono::RuntimeClassHandle::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeClassHandle::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: Mono.RuntimeClassHandle.GetHashCode
int Mono::RuntimeClassHandle::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeClassHandle::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Writing MetadataGetter for method: RuntimeClassHandle::RuntimeClassHandle
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RuntimeClassHandle::*)(Mono::RuntimeStructs::MonoClass*)>(&RuntimeClassHandle::RuntimeClassHandle<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeClassHandle), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::RuntimeStructs::MonoClass*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RuntimeClassHandle::*)(Mono::RuntimeStructs::MonoClass*)>(&RuntimeClassHandle::RuntimeClassHandle<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeClassHandle), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::RuntimeStructs::MonoClass*>()});
  }
};
// Writing MetadataGetter for method: RuntimeClassHandle::RuntimeClassHandle
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RuntimeClassHandle::*)(System::IntPtr)>(&RuntimeClassHandle::RuntimeClassHandle<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeClassHandle), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RuntimeClassHandle::*)(System::IntPtr)>(&RuntimeClassHandle::RuntimeClassHandle<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeClassHandle), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: RuntimeClassHandle::get_Value
// Il2CppName: get_Value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::RuntimeStructs::MonoClass* (RuntimeClassHandle::*)()>(&RuntimeClassHandle::get_Value)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeClassHandle), "get_Value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RuntimeClassHandle::GetTypeFromClass
// Il2CppName: GetTypeFromClass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(Mono::RuntimeStructs::MonoClass*)>(&RuntimeClassHandle::GetTypeFromClass)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeClassHandle), "GetTypeFromClass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::RuntimeStructs::MonoClass*>()});
  }
};
// Writing MetadataGetter for method: RuntimeClassHandle::GetTypeHandle
// Il2CppName: GetTypeHandle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::RuntimeTypeHandle (RuntimeClassHandle::*)()>(&RuntimeClassHandle::GetTypeHandle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeClassHandle), "GetTypeHandle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RuntimeClassHandle::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (RuntimeClassHandle::*)(::Il2CppObject*)>(&RuntimeClassHandle::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeClassHandle), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: RuntimeClassHandle::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RuntimeClassHandle::*)()>(&RuntimeClassHandle::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeClassHandle), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.RuntimeRemoteClassHandle
#include "Mono/RuntimeRemoteClassHandle.hpp"
// Including type: Mono.RuntimeClassHandle
#include "Mono/RuntimeClassHandle.hpp"
// Including type: Mono.RuntimeStructs/RemoteClass
#include "Mono/RuntimeStructs_RemoteClass.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.RuntimeRemoteClassHandle.get_ProxyClass
Mono::RuntimeClassHandle Mono::RuntimeRemoteClassHandle::get_ProxyClass() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeRemoteClassHandle::get_ProxyClass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ProxyClass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::RuntimeClassHandle, false>(*this, ___internal__method);
}
// Writing MetadataGetter for method: RuntimeRemoteClassHandle::get_ProxyClass
// Il2CppName: get_ProxyClass
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::RuntimeClassHandle (RuntimeRemoteClassHandle::*)()>(&RuntimeRemoteClassHandle::get_ProxyClass)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeRemoteClassHandle), "get_ProxyClass", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.RuntimeGenericParamInfoHandle
#include "Mono/RuntimeGenericParamInfoHandle.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.GenericParameterAttributes
#include "System/Reflection/GenericParameterAttributes.hpp"
// Including type: Mono.RuntimeStructs/GenericParamInfo
#include "Mono/RuntimeStructs_GenericParamInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.RuntimeGenericParamInfoHandle.get_Constraints
::Array<System::Type*>* Mono::RuntimeGenericParamInfoHandle::get_Constraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeGenericParamInfoHandle::get_Constraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Constraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Type*>*, false>(*this, ___internal__method);
}
// Autogenerated method: Mono.RuntimeGenericParamInfoHandle.get_Attributes
System::Reflection::GenericParameterAttributes Mono::RuntimeGenericParamInfoHandle::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeGenericParamInfoHandle::get_Attributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::GenericParameterAttributes, false>(*this, ___internal__method);
}
// Autogenerated method: Mono.RuntimeGenericParamInfoHandle.GetConstraints
::Array<System::Type*>* Mono::RuntimeGenericParamInfoHandle::GetConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeGenericParamInfoHandle::GetConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Type*>*, false>(*this, ___internal__method);
}
// Autogenerated method: Mono.RuntimeGenericParamInfoHandle.GetConstraintsCount
int Mono::RuntimeGenericParamInfoHandle::GetConstraintsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeGenericParamInfoHandle::GetConstraintsCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetConstraintsCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Writing MetadataGetter for method: RuntimeGenericParamInfoHandle::RuntimeGenericParamInfoHandle
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RuntimeGenericParamInfoHandle::*)(System::IntPtr)>(&RuntimeGenericParamInfoHandle::RuntimeGenericParamInfoHandle<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeGenericParamInfoHandle), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RuntimeGenericParamInfoHandle::*)(System::IntPtr)>(&RuntimeGenericParamInfoHandle::RuntimeGenericParamInfoHandle<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeGenericParamInfoHandle), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: RuntimeGenericParamInfoHandle::get_Constraints
// Il2CppName: get_Constraints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<System::Type*>* (RuntimeGenericParamInfoHandle::*)()>(&RuntimeGenericParamInfoHandle::get_Constraints)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeGenericParamInfoHandle), "get_Constraints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RuntimeGenericParamInfoHandle::get_Attributes
// Il2CppName: get_Attributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::GenericParameterAttributes (RuntimeGenericParamInfoHandle::*)()>(&RuntimeGenericParamInfoHandle::get_Attributes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeGenericParamInfoHandle), "get_Attributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RuntimeGenericParamInfoHandle::GetConstraints
// Il2CppName: GetConstraints
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<System::Type*>* (RuntimeGenericParamInfoHandle::*)()>(&RuntimeGenericParamInfoHandle::GetConstraints)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeGenericParamInfoHandle), "GetConstraints", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RuntimeGenericParamInfoHandle::GetConstraintsCount
// Il2CppName: GetConstraintsCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RuntimeGenericParamInfoHandle::*)()>(&RuntimeGenericParamInfoHandle::GetConstraintsCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeGenericParamInfoHandle), "GetConstraintsCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.RuntimeEventHandle
#include "Mono/RuntimeEventHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.RuntimeEventHandle.get_Value
System::IntPtr Mono::RuntimeEventHandle::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeEventHandle::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(*this, ___internal__method);
}
// Autogenerated method: Mono.RuntimeEventHandle.Equals
bool Mono::RuntimeEventHandle::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeEventHandle::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: Mono.RuntimeEventHandle.GetHashCode
int Mono::RuntimeEventHandle::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeEventHandle::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Writing MetadataGetter for method: RuntimeEventHandle::RuntimeEventHandle
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RuntimeEventHandle::*)(System::IntPtr)>(&RuntimeEventHandle::RuntimeEventHandle<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeEventHandle), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RuntimeEventHandle::*)(System::IntPtr)>(&RuntimeEventHandle::RuntimeEventHandle<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeEventHandle), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: RuntimeEventHandle::get_Value
// Il2CppName: get_Value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (RuntimeEventHandle::*)()>(&RuntimeEventHandle::get_Value)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeEventHandle), "get_Value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RuntimeEventHandle::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (RuntimeEventHandle::*)(::Il2CppObject*)>(&RuntimeEventHandle::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeEventHandle), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: RuntimeEventHandle::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RuntimeEventHandle::*)()>(&RuntimeEventHandle::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeEventHandle), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.RuntimePropertyHandle
#include "Mono/RuntimePropertyHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.RuntimePropertyHandle.get_Value
System::IntPtr Mono::RuntimePropertyHandle::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimePropertyHandle::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(*this, ___internal__method);
}
// Autogenerated method: Mono.RuntimePropertyHandle.Equals
bool Mono::RuntimePropertyHandle::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimePropertyHandle::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: Mono.RuntimePropertyHandle.GetHashCode
int Mono::RuntimePropertyHandle::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimePropertyHandle::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Writing MetadataGetter for method: RuntimePropertyHandle::RuntimePropertyHandle
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RuntimePropertyHandle::*)(System::IntPtr)>(&RuntimePropertyHandle::RuntimePropertyHandle<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimePropertyHandle), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RuntimePropertyHandle::*)(System::IntPtr)>(&RuntimePropertyHandle::RuntimePropertyHandle<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimePropertyHandle), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: RuntimePropertyHandle::get_Value
// Il2CppName: get_Value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (RuntimePropertyHandle::*)()>(&RuntimePropertyHandle::get_Value)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimePropertyHandle), "get_Value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RuntimePropertyHandle::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (RuntimePropertyHandle::*)(::Il2CppObject*)>(&RuntimePropertyHandle::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimePropertyHandle), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: RuntimePropertyHandle::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RuntimePropertyHandle::*)()>(&RuntimePropertyHandle::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimePropertyHandle), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.RuntimeGPtrArrayHandle
#include "Mono/RuntimeGPtrArrayHandle.hpp"
// Including type: Mono.RuntimeStructs/GPtrArray
#include "Mono/RuntimeStructs_GPtrArray.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.RuntimeGPtrArrayHandle.get_Length
int Mono::RuntimeGPtrArrayHandle::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeGPtrArrayHandle::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: Mono.RuntimeGPtrArrayHandle.get_Item
System::IntPtr Mono::RuntimeGPtrArrayHandle::get_Item(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeGPtrArrayHandle::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(*this, ___internal__method, i);
}
// Autogenerated method: Mono.RuntimeGPtrArrayHandle.Lookup
System::IntPtr Mono::RuntimeGPtrArrayHandle::Lookup(int i) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeGPtrArrayHandle::Lookup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Lookup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(i)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(*this, ___internal__method, i);
}
// Autogenerated method: Mono.RuntimeGPtrArrayHandle.GPtrArrayFree
void Mono::RuntimeGPtrArrayHandle::GPtrArrayFree(Mono::RuntimeStructs::GPtrArray* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeGPtrArrayHandle::GPtrArrayFree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "RuntimeGPtrArrayHandle", "GPtrArrayFree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Mono.RuntimeGPtrArrayHandle.DestroyAndFree
void Mono::RuntimeGPtrArrayHandle::DestroyAndFree(Mono::RuntimeGPtrArrayHandle& h) {
  static auto ___internal__logger = ::Logger::get().WithContext("Mono::RuntimeGPtrArrayHandle::DestroyAndFree");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono", "RuntimeGPtrArrayHandle", "DestroyAndFree", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, h);
}
// Writing MetadataGetter for method: RuntimeGPtrArrayHandle::RuntimeGPtrArrayHandle
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RuntimeGPtrArrayHandle::*)(System::IntPtr)>(&RuntimeGPtrArrayHandle::RuntimeGPtrArrayHandle<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeGPtrArrayHandle), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RuntimeGPtrArrayHandle::*)(System::IntPtr)>(&RuntimeGPtrArrayHandle::RuntimeGPtrArrayHandle<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeGPtrArrayHandle), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: RuntimeGPtrArrayHandle::get_Length
// Il2CppName: get_Length
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (RuntimeGPtrArrayHandle::*)()>(&RuntimeGPtrArrayHandle::get_Length)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeGPtrArrayHandle), "get_Length", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RuntimeGPtrArrayHandle::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (RuntimeGPtrArrayHandle::*)(int)>(&RuntimeGPtrArrayHandle::get_Item)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeGPtrArrayHandle), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RuntimeGPtrArrayHandle::Lookup
// Il2CppName: Lookup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (RuntimeGPtrArrayHandle::*)(int)>(&RuntimeGPtrArrayHandle::Lookup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeGPtrArrayHandle), "Lookup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: RuntimeGPtrArrayHandle::GPtrArrayFree
// Il2CppName: GPtrArrayFree
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(Mono::RuntimeStructs::GPtrArray*)>(&RuntimeGPtrArrayHandle::GPtrArrayFree)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeGPtrArrayHandle), "GPtrArrayFree", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::RuntimeStructs::GPtrArray*>()});
  }
};
// Writing MetadataGetter for method: RuntimeGPtrArrayHandle::DestroyAndFree
// Il2CppName: DestroyAndFree
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(Mono::RuntimeGPtrArrayHandle&)>(&RuntimeGPtrArrayHandle::DestroyAndFree)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RuntimeGPtrArrayHandle), "DestroyAndFree", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::RuntimeGPtrArrayHandle&>()});
  }
};
